// Обновление надписи комментария при изменении состава строк списка
//
Процедура ОбновитьНадписи()

	ТекДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	ЕстьОтборПоВладельцу = Отбор.Владелец.Использование И Отбор.Владелец.ВидСравнения = ВидСравнения.Равно;
	
	Если ТекДанные = Неопределено Тогда
		ЭлементыФормы.НадписьКомментарий.Заголовок = 
		?(ЕстьОтборПоВладельцу,
		"У контрагента нет банковских счетов, соответствующих условиям отбора. Добавьте новый счет.",
		"Нет банковских счетов, соответствующих условиям отбора. Добавьте новый счет.");
	Иначе
		ЭлементыФормы.НадписьКомментарий.Заголовок = 
		"Выберите банковский счет из списка или добавьте новый.";
	КонецЕсли;
	
	Заголовок = ?(ЕстьОтборПоВладельцу,
	            "Банковские счета (" + Отбор.Владелец.Значение + ")",
	            "Банковские счета");

КонецПроцедуры

// При изменении отборов списка обновляется надпись комментария
//
Процедура СправочникСписокОтборПриИзмененииДанных(ПутьКДанным)

	ОбновитьНадписи();

КонецПроцедуры

// При открытии формы элемента передаем в нее установленные в списке отборы.
// В этом режиме нельзя записать элемент с реквизитами, не соответствующими условиям отбора
//
Процедура ОткрытьФормуЭлементаСУчетомОтбора(ЭлементСправочника, СписокОтборов, ВладелецФормыЭлемента)
	
	Если ТипЗнч(ЭлементСправочника) = Тип("СправочникОбъект.БанковскиеСчета") 
		ИЛИ (ТипЗнч(ЭлементСправочника) = Тип("СправочникСсылка.БанковскиеСчета") И НЕ ЭлементСправочника.Пустая()) 
		Тогда
		
		ФормаЭлемента = ЭлементСправочника.ПолучитьФорму("ФормаЭлемента", ВладелецФормыЭлемента);
		ФормаЭлемента.СписокОтборов = СписокОтборов;
		ФормаЭлемента.Открыть();
		
	КонецЕсли;

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если РежимВыбора И ЗначениеНеЗаполнено(Отбор.Владелец.Значение) И ЗначениеНеЗаполнено(ПараметрОтборПоВладельцу) Тогда
		
		Если ТипЗнч(ВладелецФормы) <> Тип("ТабличноеПоле") Тогда
			Если ТипЗнч(ВладелецФормы.ВыборПоВладельцу)=Тип("СправочникСсылка.Поставщики") Тогда
				
				ФормаВыбораВладельца = Справочники.Поставщики.ПолучитьФормуВыбора();
				ФормаВыбораВладельца.Заголовок = "Выберите контрагента, счет которого Вы хотите выбрать.";
				
				Поставщик = ФормаВыбораВладельца.ОткрытьМодально();
				
				Если Поставщик=Неопределено Тогда
					Отказ=Истина;
				КонецЕсли;
				
				Если Отбор.Владелец.ТипЗначения.СодержитТип(ТипЗнч(Поставщик)) Тогда
					Отбор.Владелец.Значение = Поставщик;
				КонецЕсли;
				Если НЕ ЗначениеНеЗаполнено(Отбор.Владелец.Значение) Тогда
					Отбор.Владелец.Использование = Истина;
				КонецЕсли;
			ИначеЕсли ТипЗнч(ВладелецФормы.ВыборПоВладельцу)=Тип("СправочникСсылка.Фирмы") Тогда
				
				ФормаВыбораВладельца = Справочники.Фирмы.ПолучитьФормуВыбора();
				ФормаВыбораВладельца.Заголовок = "Выберите контрагента, счет которого Вы хотите выбрать.";
				
				Фирма = ФормаВыбораВладельца.ОткрытьМодально();
				
				Если Фирма=Неопределено Тогда
					Отказ=Истина;
				КонецЕсли;
				
				Если Отбор.Владелец.ТипЗначения.СодержитТип(ТипЗнч(Фирма)) Тогда
					Отбор.Владелец.Значение = Фирма;
				КонецЕсли;
				Если НЕ ЗначениеНеЗаполнено(Отбор.Владелец.Значение) Тогда
					Отбор.Владелец.Использование = Истина;
				КонецЕсли;				
				
			Иначе
				
				ФормаВыбораВладельца = Справочники.Фирмы.ПолучитьФормуВыбора();
				ФормаВыбораВладельца.Заголовок = "Выберите организацию, счет которой Вы хотите выбрать.";
				Организация=ФормаВыбораВладельца.ОткрытьМодально();
				
				Если Организация=Неопределено Тогда
					Отказ=Истина;
				КонецЕсли;
				
				Если Отбор.Владелец.ТипЗначения.СодержитТип(ТипЗнч(Организация)) Тогда
					Отбор.Владелец.Значение = Организация;
				КонецЕсли;
				Если НЕ ЗначениеНеЗаполнено(Отбор.Владелец.Значение) Тогда
					Отбор.Владелец.Использование = Истина;
				КонецЕсли;

			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЗначениеНеЗаполнено(Отбор.Владелец.Значение) Тогда
		Отбор.Владелец.Использование = Ложь;
	КонецЕсли;

	ОбновитьНадписи();
	
	ПодключитьОбработчикИзмененияДанных("СправочникСписок.Отбор", "СправочникСписокОтборПриИзмененииДанных", Истина);

КонецПроцедуры

// В режиме выбора новый элемент вводится с учетом установленных в списке отборов
//
Процедура СправочникСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Если НЕ ЭтоГруппа Тогда
		
		Отказ = Истина;
		
		Если Копирование Тогда
			
			ТекДанные    = Элемент.ТекущиеДанные;
			НовыйЭлемент = ТекДанные.Ссылка.Скопировать();
		
		Иначе
		
			НовыйЭлемент = Справочники.БанковскиеСчета.СоздатьЭлемент();
			НовыйЭлемент.Владелец = Отбор.Владелец.Значение;
		
		КонецЕсли;
		
		ОткрытьФормуЭлементаСУчетомОтбора(НовыйЭлемент, СправочникСписок.Отбор, Элемент);
		
	КонецЕсли;
		
КонецПроцедуры // СправочникСписокПередНачаломДобавления()

// При открытии формы элемента в нее передаются установленные в списке отборы.
//
Процедура СправочникСписокПередНачаломИзменения(Элемент, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если ТекДанные <> Неопределено Тогда
		
		Отказ = Истина;
		
		ОткрытьФормуЭлементаСУчетомОтбора(ТекДанные.Ссылка, СправочникСписок.Отбор, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

// При вводе в режиме выбора нового элемента автоматически производится его выбор
//
Процедура СправочникСписокОбработкаЗаписиНовогоОбъекта(Элемент, Объект, СтандартнаяОбработка)
	
	Если РежимВыбора Тогда
		
		Если ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы
			ИЛИ ((НЕ Объект.ЭтоГруппа) И ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы)
			ИЛИ (Объект.ЭтоГруппа И ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы)
			Тогда
			ОповеститьОВыборе(Объект.Ссылка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// При изменении состава строк списка обновляется надпись комментария
//
Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ОбновитьНадписи();
	
КонецПроцедуры
