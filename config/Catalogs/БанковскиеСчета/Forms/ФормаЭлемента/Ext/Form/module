Перем ЭтоВалютныйСчет;
Перем ЭтоСчетКонтрагента;
Перем АвтоНаименование;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура АС_ПроверкаПравильностиБанковскихРеквизитовПередЗаписью(Источник, Отказ)

	МассивВесовыхКоэффициентов=Новый Массив;
	МассивВесовыхКоэффициентов.Добавить(7);  //  0
	МассивВесовыхКоэффициентов.Добавить(1);  //  1
	МассивВесовыхКоэффициентов.Добавить(3);  //  2
	МассивВесовыхКоэффициентов.Добавить(7);  //  3
	МассивВесовыхКоэффициентов.Добавить(1);  //  4
	МассивВесовыхКоэффициентов.Добавить(3);  //  5
	МассивВесовыхКоэффициентов.Добавить(7);  //  6
	МассивВесовыхКоэффициентов.Добавить(1);  //  7
	МассивВесовыхКоэффициентов.Добавить(3);  //  8
	МассивВесовыхКоэффициентов.Добавить(7);  //  9
	МассивВесовыхКоэффициентов.Добавить(1);  //  10
	МассивВесовыхКоэффициентов.Добавить(3);  //  11
	МассивВесовыхКоэффициентов.Добавить(7);  //  12
	МассивВесовыхКоэффициентов.Добавить(1);  //  13
	МассивВесовыхКоэффициентов.Добавить(3);  //  14
	МассивВесовыхКоэффициентов.Добавить(7);  //  15
	МассивВесовыхКоэффициентов.Добавить(1);  //  16
	МассивВесовыхКоэффициентов.Добавить(3);  //  17
	МассивВесовыхКоэффициентов.Добавить(7);    //18
	МассивВесовыхКоэффициентов.Добавить(1);    //19
	МассивВесовыхКоэффициентов.Добавить(3);    //20
	МассивВесовыхКоэффициентов.Добавить(7);    //21
	МассивВесовыхКоэффициентов.Добавить(1);    //22
	
	//---------------<Проверяем расчетный счет>---------------------------// GtG // 07.11.2014 12:10:5
	РСчет=СокрЛП(Источник.НомерСчета);
	Бик=Источник.Банк.Код;
	Бик_3последниецифры=Прав(СокрЛП(БИК),3);
	
	//Если бик заканчивается на 000 (гу банка россии по цфо, например, 044525000) то проверка не срабартывает!!! // GtG //  05-07-2016
	Если  Бик_3последниецифры ="000" Тогда
		Возврат ;
	КонецЕсли;
	
	
	РСчетНаПроверку=""+Бик_3последниецифры+РСчет;
	
	//---------------<Считаем контрольную сумму>---------------------------// GtG // 07.11.2014 12:14:50
	
	КС=0;
	
	
	
	ДЛя Ы=1 по 23 Цикл
		ТекЦиффра=Число(Сред(РСчетНаПроверку,Ы,1));
		КС=КС+ ТекЦиффра*МассивВесовыхКоэффициентов[Ы-1] % 10;
	КонецЦикла;
	
	Проверка=КС%10;
	
	Если Проверка=0 Тогда
		// Все ОК!;
	Иначе
		#Если клиент тогда
			Предупреждение("Расчетный счет введен с ошибкой! Исправьте ошибку!");
		#КонецЕсли
		Отказ=Истина;
	КонецЕсли;	
	

КонецПроцедуры

Функция СформироватьАвтоНаименование()
	
	СтрокаНаименования = Лев(ВидСчета 
	                   + ?(ВалютаДенежныхСредств <> мВалютаРегламентированногоУчета, " (" + ВалютаДенежныхСредств + ")", "")
	                   + ?(НЕ Банк.Пустая(), " в " + Банк, ""), 
					   50);
	
	ЭлементыФормы.Наименование.СписокВыбора.Очистить();
	ЭлементыФормы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Возврат СтрокаНаименования;

КонецФункции // СформироватьАвтоНаименование()

Процедура ЗаполнитьНовыйПоСпискуОтборов()

	Если ТипЗнч(СписокОтборов) <> Тип("Отбор") Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыСправочника = Метаданные().Реквизиты;
	
	Для каждого ЭлементОтбора Из СписокОтборов Цикл
		
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если РеквизитыСправочника.Найти(ЭлементОтбора.Имя) = Неопределено 
			И ЭлементОтбора.Имя <> "Владелец" 
			И ЭлементОтбора.Имя <> "Родитель" Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭлементОтбора.ВидСравнения = ВидСравнения.Равно Тогда
			ЭтотОбъект[ЭлементОтбора.Имя] = ЭлементОтбора.Значение;
		ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравнения.ВСписке Тогда
			ЭтотОбъект[ЭлементОтбора.Имя] = ЭлементОтбора.Значение[0].Значение;
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

// Процедура заполняет реквизиты нового элемента справочника
//
Процедура ЗаполнитьНовыйЭлемент() Экспорт
	
	ЗаполнитьНовыйПоСпискуОтборов();

	Если ЗначениеНеЗаполнено(ВидСчета) Тогда
		ВидСчета = ЭлементыФормы.ВидСчета.СписокВыбора[0];
	КонецЕсли;
		
	Если ЗначениеНеЗаполнено(ВалютаДенежныхСредств) Тогда
		ВалютаДенежныхСредств = мВалютаРегламентированногоУчета;
	КонецЕсли;
	
	Наименование = СформироватьАвтоНаименование();
	
КонецПроцедуры // ЗаполнитьНовыйЭлемент()

Процедура УстановитьДоступностьСУчетомОтбора()

	Если ТипЗнч(СписокОтборов) <> Тип("Отбор") Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ЭлементОтбора Из СписокОтборов Цикл
		
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭлементОтбора.ВидСравнения <> ВидСравнения.Равно Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементФормы = ЭлементыФормы.Найти(ЭлементОтбора.Имя);
		
		ЕстьЭлементФормы = ЭлементФормы <> Неопределено;
								   
		Если ЕстьЭлементФормы Тогда
			
			Если ТипЗнч(ЭлементФормы) = Тип("ПолеВвода") Тогда
				ЭлементФормы.ТолькоПросмотр = Истина;
			ИначеЕсли ТипЗнч(ЭлементФормы) = Тип("Флажок") Тогда
				ЭлементФормы.Доступность = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура ДополнитьТекстОНесоответствииОтбору(ТекстСообщения, ЭлементОтбора)

	ТекстСообщения = ТекстСообщения
	                        + ЭлементОтбора.Представление      + " "  
							+ НРег(ЭлементОтбора.ВидСравнения) + " """ 
							+ Строка(ЭлементОтбора.Значение)   + """" + Символы.ПС;
	
КонецПроцедуры // ДополнитьТекстОНесоответствииОтбору()

Функция ПроверитьСоответствиеЭлементаОтбору(ТекстСообщенияОбОшибках = "")

	Если ТипЗнч(СписокОтборов) <> Тип("Отбор") Тогда
		Возврат Истина;
	КонецЕсли;
	
	ЭлементСоответствуетОтбору = Истина;
	ТекстСообщенияОбОшибках = "";
	
	Для каждого ЭлементОтбора Из СписокОтборов Цикл
		
		Если НЕ ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭлементОтбора.ВидСравнения = ВидСравнения.Равно Тогда
		
			Если ЭтотОбъект[ЭлементОтбора.Имя] <> ЭлементОтбора.Значение Тогда
				ЭлементСоответствуетОтбору = Ложь;
				ДополнитьТекстОНесоответствииОтбору(ТекстСообщенияОбОшибках, ЭлементОтбора);
			КонецЕсли;
		
		ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравнения.ВСписке Тогда
		
			Если ЭлементОтбора.Значение.НайтиПоЗначению(ЭтотОбъект[ЭлементОтбора.Имя]) = Неопределено Тогда
				ЭлементСоответствуетОтбору = Ложь;
				ДополнитьТекстОНесоответствииОтбору(ТекстСообщенияОбОшибках, ЭлементОтбора);
			КонецЕсли;
			
		ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравнения.НеРавно Тогда
		
			Если ЭтотОбъект[ЭлементОтбора.Имя] = ЭлементОтбора.Значение Тогда
				ЭлементСоответствуетОтбору = Ложь;
				ДополнитьТекстОНесоответствииОтбору(ТекстСообщенияОбОшибках, ЭлементОтбора);
			КонецЕсли;
		
		ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравнения.НеВСписке Тогда
		
			Если ЭлементОтбора.Значение.НайтиПоЗначению(ЭтотОбъект[ЭлементОтбора.Имя]) <> Неопределено Тогда
				ЭлементСоответствуетОтбору = Ложь;
				ДополнитьТекстОНесоответствииОтбору(ТекстСообщенияОбОшибках, ЭлементОтбора);
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЦикла;
	
	Если НЕ ЭлементСоответствуетОтбору Тогда
		ТекстСообщенияОбОшибках = "Должны выполняться следующие условия:" + Символы.ПС
		                        + ТекстСообщенияОбОшибках
		                        + "Элемент не может быть записан!"
	КонецЕсли;
	
	Возврат ЭлементСоответствуетОтбору;

КонецФункции

// Формирует текст для реквизита "ТекстКорреспондента"
 //
 // Параметры:
 //  Нет.
 //
Функция СформироватьТекстКорреспондента()
    Попытка
		СтрКорреспондента = ?(ПустаяСтрока(Владелец.ПолнНаименование), Владелец.Наименование, Владелец.ПолнНаименование);
	Исключение
		СтрКорреспондента = ?(ПустаяСтрока(Владелец.ДлинноеНаименование), Владелец.Наименование, Владелец.ДлинноеНаименование);
	Конецпопытки;
	Если НЕ БанкДляРасчетов.Пустая() Тогда
		СтрКорреспондента = СтрКорреспондента + " р/с " + НомерСчета
			+ " в " + Банк + " " + Банк.Город;
	КонецЕсли;	
	
	Возврат СтрКорреспондента;

КонецФункции // СформироватьТекстКорреспондента()

Процедура ОбновитьНадписи()
	
	ЭлементыФормы.НадписьКомментарийНомераСчета.Заголовок = "";
	Если НЕ ЭтоВалютныйСчет Тогда
		
		ДлинаНомераСчета = СтрДлина(НомерСчета);
		Если ДлинаНомераСчета > 0 И ДлинаНомераСчета < 20 Тогда
			КомментарийНомера = "Номер счета содержит " + ДлинаНомераСчета;
			Если ДлинаНомераСчета = 1 Тогда
				КомментарийНомера = КомментарийНомера + " знак";
			ИначеЕсли ДлинаНомераСчета <= 4 Тогда
				КомментарийНомера = КомментарийНомера + " знака";
			Иначе
				КомментарийНомера = КомментарийНомера + " знаков";
			КонецЕсли;
			ЭлементыФормы.НадписьКомментарийНомераСчета.Заголовок = КомментарийНомера;
		КонецЕсли; 
		
	КонецЕсли;

	ПолеВводаТекстаКорреспондента = ?(ЭтоСчетКонтрагента, ЭлементыФормы.ТекстПолучателя, ЭлементыФормы.ТекстПлательщика);
	Если ПустаяСтрока(ПолеВводаТекстаКорреспондента.Данные) Тогда
		ПолеВводаТекстаКорреспондента.Значение = СформироватьТекстКорреспондента();
	КонецЕсли;
	
	Если Банк.Пустая() Тогда
		ЭлементыФормы.НадписьРеквизитыБанка.Заголовок = "";
	Иначе
		ЭлементыФормы.НадписьРеквизитыБанка.Заголовок = "БИК: " + Банк.Код;
	КонецЕсли;
	
	Если БанкДляРасчетов.Пустая() Тогда
		ЭлементыФормы.НадписьРеквизитыБанкаКорреспондента.Заголовок = "";
	Иначе
		ЭлементыФормы.НадписьРеквизитыБанкаКорреспондента.Заголовок = "БИК: " + БанкДляРасчетов.Код;
	КонецЕсли;
	
КонецПроцедуры

// Управляет видимостью некоторых элементов формы
//
// Параметры:
//  Нет.
//
Процедура УстановитьВидимость()
	
	Если ЭтоВалютныйСчет Тогда
		ЭлементыФормы.НомерСчета.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.Банк.АвтоОтметкаНезаполненного       = Ложь;
		ЭлементыФормы.НомерСчета.ОтметкаНезаполненного     = Ложь;
		ЭлементыФормы.Банк.ОтметкаНезаполненного           = Ложь;
	Иначе
		ЭлементыФормы.НомерСчета.АвтоОтметкаНезаполненного = Истина;
		ЭлементыФормы.Банк.АвтоОтметкаНезаполненного       = Истина;
	КонецЕсли;
	
	Если ЭтоСчетКонтрагента Тогда
		
		ЭлементыФормы.ПанельРеквизитовСчетов.ТекущаяСтраница = ЭлементыФормы.ПанельРеквизитовСчетов.Страницы.РеквизитыСчетаКонтрагента;
		
		ПолеВводаТекстаКорреспондента = ЭлементыФормы.ТекстПолучателя;
		
	Иначе
		
		ЭлементыФормы.ПанельРеквизитовСчетов.ТекущаяСтраница = ЭлементыФормы.ПанельРеквизитовСчетов.Страницы.РеквизитыСчетаОрганизации;
		ЭлементыФормы.НомерИДатаРазрешения.Видимость         = ЭтоВалютныйСчет;
		ЭлементыФормы.НадписьНомерИДатаРазрешения.Видимость  = ЭтоВалютныйСчет;
		
		ПолеВводаТекстаКорреспондента = ЭлементыФормы.ТекстПлательщика;
		
	КонецЕсли;
	
	Если РедактироватьТекстКорреспондента Тогда
		ПолеВводаТекстаКорреспондента.Данные             = "ТекстКорреспондента";
//		ПолеВводаТекстаКорреспондента.ЦветТекстаПоля     = ЦветаСтиля.ЦветТекстаПоля;
//		ПолеВводаТекстаКорреспондента.ЦветФонаПоля       = ЦветаСтиля.ЦветФонаПоля;
		ПолеВводаТекстаКорреспондента.ТолькоПросмотр     = Ложь;
		ПолеВводаТекстаКорреспондента.ПропускатьПриВводе = Ложь;
	Иначе
		ПолеВводаТекстаКорреспондента.Данные             = "";
//		ПолеВводаТекстаКорреспондента.ЦветТекстаПоля     = ЦветаСтиля.ТекстИнформационнойНадписи;
//		ПолеВводаТекстаКорреспондента.ЦветФонаПоля       = ЦветаСтиля.ЦветФонаФормы;
		ПолеВводаТекстаКорреспондента.ТолькоПросмотр     = Истина;
		ПолеВводаТекстаКорреспондента.ПропускатьПриВводе = Истина;
	КонецЕсли;
	
	УстановитьДоступностьСУчетомОтбора();
	
КонецПроцедуры // УстановитьВидимость()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеНеЗаполнено(Владелец) Тогда
	
		Предупреждение("Не указан владелец банковского счета!");
		Отказ = Истина;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Поставщики") Тогда
	     ЭтоСчетКонтрагента = Истина;
	Иначе
		 ЭтоСчетКонтрагента = Ложь;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		ЗаполнитьНовыйЭлемент();
	Иначе
		РедактироватьТекстКорреспондента = НЕ ПустаяСтрока(ТекстКорреспондента);
	КонецЕсли;

	ЭтоВалютныйСчет = ВалютаДенежныхСредств <> мВалютаРегламентированногоУчета;
	
	УстановитьВидимость();
	
	ОбновитьНадписи();
	
	Заголовок = Заголовок + " (" + Строка(Владелец) + ")";
	
	АвтоНаименование = СформироватьАвтоНаименование();
	
	ЗакрыватьПриВыборе = Ложь;
	
КонецПроцедуры
 
Процедура ПередЗаписью(Отказ)
	Перем ТекстСообщенияОбОшибках;

	ЭлементСоответствуетОтбору = ПроверитьСоответствиеЭлементаОтбору(ТекстСообщенияОбОшибках);
	Отказ = НЕ ЭлементСоответствуетОтбору;
	
	Если Отказ Тогда
		СообщитьОбОшибке(ТекстСообщенияОбОшибках);
	КонецЕсли;
	
	АС_ПроверкаПравильностиБанковскихРеквизитовПередЗаписью(ЭтотОбъект,Отказ);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ЭтаФорма.ВладелецФормы <> Неопределено Тогда
	
		ОповеститьОВыборе(Ссылка);
	
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ДЕЙСТВИЙ КОМАНДНЫХ ПАНЕЛЕЙ ЭЛЕМЕНТОВ

 // Обработчик события "ПриИзменении" реквизита "БанкДляРасчетов"
 //
Процедура БанкДляРасчетовПриИзменении(Элемент)
	
	Если РедактироватьТекстКорреспондента Тогда
		ТекстКорреспондента = СформироватьТекстКорреспондента();
	КонецЕсли;
	
	ОбновитьНадписи();
	
КонецПроцедуры

 // Обработчик события "ПриИзменении" реквизита "НомерСчета"
 //
Процедура НомерСчетаПриИзменении(Элемент)
	
	Если РедактироватьТекстКорреспондента Тогда
		ТекстКорреспондента = СформироватьТекстКорреспондента();
	КонецЕсли;
	
	ОбновитьНадписи();
	
КонецПроцедуры

 // Обработчик события "ПриИзменении" реквизита "Банк"
 //
Процедура БанкПриИзменении(Элемент)
	
	Если РедактироватьТекстКорреспондента Тогда
		ТекстКорреспондента = СформироватьТекстКорреспондента();
	КонецЕсли;
	
	Если Наименование = АвтоНаименование Тогда
		Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	АвтоНаименование = СформироватьАвтоНаименование();
	
	ОбновитьНадписи();
	
КонецПроцедуры

 // Обработчик события "ПриИзменении" реквизита "ВалютаДенежныхСредств"
 //
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
	
	Если ВалютаДенежныхСредств.Пустая() Тогда
		ВалютаДенежныхСредств = мВалютаРегламентированногоУчета;
	КонецЕсли;
	
	ЭтоВалютныйСчет = ВалютаДенежныхСредств <> мВалютаРегламентированногоУчета;
	
	Если Наименование = АвтоНаименование Тогда
		Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	АвтоНаименование = СформироватьАвтоНаименование();
	
	УстановитьВидимость();
	ОбновитьНадписи();

КонецПроцедуры

Процедура РедактироватьТекстКорреспондентаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
	Если РедактироватьТекстКорреспондента Тогда
		ТекстКорреспондента = СформироватьТекстКорреспондента();
	Иначе
		ТекстКорреспондента = "";
	КонецЕсли;
	
	ОбновитьНадписи();
	
КонецПроцедуры

Процедура ВидСчетаПриИзменении(Элемент)
	
	Если Наименование = АвтоНаименование Тогда
		Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	АвтоНаименование = СформироватьАвтоНаименование();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ТЕЛО МОДУЛЯ

СписокВидСчета = ЭлементыФормы.ВидСчета.СписокВыбора;
СписокВидСчета.Добавить("Расчетный");
СписокВидСчета.Добавить("Депозитный");
СписокВидСчета.Добавить("Ссудный");
СписокВидСчета.Добавить("Иной");
