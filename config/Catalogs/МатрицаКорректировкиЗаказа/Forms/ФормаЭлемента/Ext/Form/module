
Процедура ПриОткрытии()
	
	//Если ЭтоНовый() Тогда
	//	ЗаполнитьНастройкиПоУмолчанию();
	//Иначе 
	Если ЗначениеЗаполнено(НастройкиПостроителя) Тогда
		НастрПостроителя = ЗначениеИзСтрокиВнутр(НастройкиПостроителя);
		
		Если ТипЗнч(НастрПостроителя) = Тип("НастройкиПостроителяОтчета") Тогда
			Построитель.УстановитьНастройки(НастрПостроителя);
		КонецЕсли;
	КонецЕсли;
	//КонецЕсли; 
	
	//Барданов А.Ю. 15.03.2019 ENT-1421 +++
	Если ЗначениеЗаполнено(НастройкиПостроителяДляАптек) Тогда
		НастрПостроителяДляАптек = ЗначениеИзСтрокиВнутр(НастройкиПостроителяДляАптек);
		
		Если ТипЗнч(НастрПостроителяДляАптек) = Тип("НастройкиПостроителяОтчета") Тогда
			ПостроительДляОтбораПоАптекам.УстановитьНастройки(НастрПостроителяДляАптек);
		КонецЕсли;
	КонецЕсли;
	//---
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	НастройкиПостроителя = ЗначениеВСтрокуВнутр(Построитель.ПолучитьНастройки(Истина, Ложь, Ложь, Ложь, Ложь));	
	
	//Барданов А.Ю. 15.03.2019 ENT-1421 +++
	НастройкиПостроителяДляАптек = ЗначениеВСтрокуВнутр(ПостроительДляОтбораПоАптекам.ПолучитьНастройки(Истина, Ложь, Ложь, Ложь, Ложь));	
	//---
КонецПроцедуры

Функция УбратьЛишниеСимволы(ИсходнаяСтрока) 
	
	НовСтрока = "";
	ПравильныеСимволы = "0123456789";
	
	Для Сч = 1 по СтрДлина(ИсходнаяСтрока) Цикл
		ТекСимв = Сред(ИсходнаяСтрока, Сч, 1);
		Если Найти(ПравильныеСимволы, ТекСимв) > 0 Тогда
			НовСтрока = НовСтрока + ТекСимв;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НовСтрока;
	
КонецФункции

Процедура ЕстьОграничениеПоТоваруПриИзменении(Элемент)
	
	ЭлементыФормы.Панель1.Страницы.ОтборПоТовару.Видимость = ЕстьОграничениеПоТовару;
	
КонецПроцедуры

//Барданов А.Ю. 15.03.2019 ENT-1421
Процедура ЕстьОграничениеПоАптекеПриИзменении(Элемент)
	
	ЭлементыФормы.Панель1.Страницы.ОтборПоАптеке.Видимость = ЕстьОграничениеПоАптекам;
	
КонецПроцедуры


Процедура кнЗагрузитьКодыТоваровНажатие(Элемент)
	
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаЗагрузкиТоваров");
	ФайлСпискаТоваров = Форма.ОткрытьМодально();
	
	Если Не ЗначениеЗаполнено(ФайлСпискаТоваров) Тогда
		Сообщить("Не указан путь к файлу списка товаров!");
		Возврат;
	КонецЕсли;
	
	ВыбФайл = Новый Файл(ФайлСпискаТоваров); 	
	Если Не ВыбФайл.Существует() Тогда
		Сообщить("Не найден файл " + ФайлСпискаТоваров);
		Возврат;
	КонецЕсли;
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");	
	Исключение
		Сообщить ("Не удалось запустить Excel");
		Возврат;
	КонецПопытки;
	
  
	Книга = Excel.Workbooks.Open(ФайлСпискаТоваров);	
	Лист = Книга.WorkSheets(1);	
	ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	
	СписокТоваров=Новый СписокЗначений();
	
	Для Строка = 2 По ВсегоСтрок Цикл
		
		Если Строка%10 = 0 Тогда
			Состояние("прочитано кодов: " + Строка + " из " + ВсегоСтрок);
		КонецЕсли;
		
		КодТовара = УбратьЛишниеСимволы(СокрЛП(Лист.Cells(Строка,1).Value));		
		Товар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		
		Если ЗначениеЗаполнено(Товар) Тогда	
			
			СписокТоваров.Добавить(Товар);
			
		Иначе
			
			Сообщить("Не найден товар по коду: " + КодТовара);	
			
		КонецЕсли;
		
		
		
	КонецЦикла;
	
	Excel.Application.Quit();		
	
	
	Сообщить("Считано из файла "+СписокТоваров.Количество()+" кодов.");
	
	
	ОтборПоКодуТОвара=Построитель.Отбор.Найти("Товар");
	
	Если ОтборПоКодуТОвара=Неопределено ТОгда
		ОтборПоКодуТОвара=Построитель.Отбор.Добавить("Товар");
	КонецЕсли;	
	
	ОтборПоКодуТОвара.ВидСравнения=ВидСравнения.ВСписке;
	ОтборПоКодуТОвара.Использование=Истина;
	ОтборПоКодуТОвара.Значение=СписокТоваров;
	
	
	
КонецПроцедуры

Процедура кнЗагрузитьКодыАптекНажатие(Элемент)
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаЗагрузкиАптек");
	ФайлИмпорта = Форма.ОткрытьМодально();
	
	Если Не ЗначениеЗаполнено(ФайлИмпорта) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");	
	Исключение
		Сообщить ("Не удалось запустить Excel");
		Возврат;
	КонецПопытки;
	
	АптекиИсключения = Новый СписокЗначений();
	
	СписокЗнч = Новый СписокЗначений();
	
	Книга = Excel.Workbooks.Open(ФайлИмпорта);	
	Лист = Книга.WorkSheets(1);	
	ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	
	Для Строка = 2 По ВсегоСтрок Цикл 
		
		ОбработкаПрерыванияПользователя();
		
		КодАптеки = Лист.Cells(Строка,1).Value;
		
		Если Не ЗначениеЗаполнено(КодАптеки) Тогда
			Прервать;
		КонецЕсли;
		
		Аптека = Справочники.МестаХранения.НайтиПоКоду(КодАптеки);
		
		Если ЗначениеЗаполнено(Аптека) Тогда	
			
			АптекиИсключения.Добавить(Аптека);
			
			
		Иначе
			
			Сообщить("Не найдена аптека по коду: " + КодАптеки);	
			
		КонецЕсли;
		
	КонецЦикла;
	
	Excel.Application.Quit(); 
	
	Сообщить("Считано из файла "+АптекиИсключения.Количество()+" кодов.");
	
	
	ОтборПоКодуАптек=ПостроительДляОтбораПоАптекам.Отбор.Найти("Аптека");
	
	Если ОтборПоКодуАптек=Неопределено ТОгда
		ОтборПоКодуАптек=ПостроительДляОтбораПоАптекам.Отбор.Добавить("Аптека");
	КонецЕсли;	
	
	ОтборПоКодуАптек.ВидСравнения=ВидСравнения.ВСписке;
	ОтборПоКодуАптек.Использование=Истина;
	ОтборПоКодуАптек.Значение=АптекиИсключения;
	
КонецПроцедуры

//Для заполнения отбора построителя
Построитель.Текст =
"ВЫБРАТЬ
|	АП.Ссылка КАК Товар,
|	АП.Код КАК КодТовара
|ИЗ
|	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
|{ГДЕ
|	АП.Ссылка.* КАК Товар}";

//Барданов А.Ю. 15.03.2019 ENT-1421 +++
ПостроительДляОтбораПоАптекам.Текст =
"ВЫБРАТЬ
|	МестаХранения.Ссылка КАК Аптека
|ИЗ
|	Справочник.МестаХранения КАК МестаХранения
|ГДЕ
|	МестаХранения.Ссылка = &Ссылка
|{ГДЕ
|	МестаХранения.Ссылка.* КАК Аптека}"; 
//---
