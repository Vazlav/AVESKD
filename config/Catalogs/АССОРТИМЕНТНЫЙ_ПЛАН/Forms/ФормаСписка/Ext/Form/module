Перем ДоступностьРеквизитыПартийОфис;


Процедура ДействияФормыВесь_АП(Кнопка)
	// Вставить содержимое обработчика.
	УчВАП=СправочникСписок.Отбор.Найти("УчаствуетВАП");	
	Если УчВАП<>Неопределено ТОгда
		УчВап.Использование=Ложь;
	КонецЕсли;	
КонецПроцедуры

Процедура ДействияФормырабочийАП(Кнопка)
	//----< Установка фильтра на ТОЛЬКО РАБОЧИЕ НАИМЕНОВАНИЯ >--------------------------------GtG---
	УчВАП=СправочникСписок.Отбор.Найти("УчаствуетВАП");	
	Если УчВАП<>Неопределено ТОгда
		УчВАП.ВидСравнения=ВидСравнения.Равно;
		УчВАП.Значение=ИСтина;
		УчВап.Использование=Истина;
	КонецЕсли;	

КонецПроцедуры

Процедура ДействияФормыНерабочийАП(Кнопка)
	//----< Установка фильтра на ТОЛЬКО РАБОЧИЕ НАИМЕНОВАНИЯ >--------------------------------GtG---
	УчВАП=СправочникСписок.Отбор.Найти("УчаствуетВАП");	
	Если УчВАП<>Неопределено ТОгда
		УчВАП.ВидСравнения=ВидСравнения.Равно;
		УчВАП.Значение=Ложь;
		УчВап.Использование=Истина;
	КонецЕсли;	

КонецПроцедуры

Процедура ПроверитьДоступностьРеквизитыПартийОфис()
	
	НаборЗаписей = РегистрыСведений.ПраваНаОбъекты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Метаданные.РегистрыСведений.РеквизитыПартийОфис.Имя);
	НаборЗаписей.Отбор.Пользователь.Установить(ПараметрыСеанса.ТекущийСотр);
	
	НаборЗаписей.Прочитать();
	КоличествоЗаписей = НаборЗаписей.Количество();
	
	Если КоличествоЗаписей > 0 Тогда
		Если НаборЗаписей.Получить(0).ПолныеПрава  Тогда
			ДоступностьРеквизитыПартийОфис = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ДействияФормырабочийАП("") ;
	ДоступностьРеквизитыПартийОфис = ложь;
	Если Константы.ИспользоватьОграничениеПравНаСправочники.Получить() = Истина Тогда	
		ПроверитьДоступностьРеквизитыПартийОфис();
	КонецЕсли;
КонецПроцедуры


Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	Если показыватьмедленно=Истина ТОгда
		ДляЕИТ=Элемент.ТекущаяСтрока;
	Иначе
		ДЛяЕИТ= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
	КонецЕсли; 
	//По просьбе отдела поставок
	Если (ПоказыватьСразу = Истина) и (Склад1 <> Справочники.МестаХранения.ПустаяСсылка()) Тогда
		КоманднаяПанель2Движения_по_Товару(ЭлементыФормы.КоманднаяПанель2.Кнопки.Движения_по_Товару);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказыватьМедленноПриИзменении(Элемент)
	
	Если ПоказыватьМедленно=Ложь  Тогда  
		ЭлементыФормы.ЕИТы.Видимость=Ложь;
	Иначе
		СправочникСписокПриАктивизацииСтроки(ЭлементыФормы.СправочникСписок);
		ЭлементыФормы.ЕИТы.Видимость=Истина;
	КонецЕсли;
	
КонецПроцедуры

//==========================================================GtG====
Процедура ФорматированиеКолонкиТЗ (Колонка,Заголовок,Ширина,Подвал,Формат,Видимость = Истина)  
	//----------------------------------
	//Назначение:
	//  Приводт ив божеский вид колонку ТЗ
	//----------------------------------
	
	Колонка.ТекстШапки=Заголовок;
	Колонка.Ширина=Ширина;// (в пикаселях)
	Колонка.ОтображатьВПодвале 	= подвал;
	Колонка.ВыделятьОтрицательные = истина;
	Колонка.Формат=Формат;
	Колонка.Видимость  = Видимость;
КонецПроцедуры	//ФорматированиеКолонкиТЗ
//==========================================================GtG====




Процедура КоманднаяПанель1Остатки_по_партиям_2015(Кнопка)
	Товар=ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	ЭлементыФормы.ЧейОстатокВиден.Заголовок=""+Товар.код+ " : "+Товар.Наименование;
	
	Если Склад.Пустая()=Истина Тогда
		ПроСклад="";
	Иначе
		Если Склад.ЭтоГруппа Тогда
			ПроСклад=" И Склад.Родитель=&Склад ";
		Иначе
			ПроСклад=" И Склад=&Склад ";
		КонецЕсли;
	КонецЕсли; 	
	
	
	Если ОтображатьДопИнформацию = Истина Тогда
		Если Товар.Разбивается = Истина Тогда
			ТХТ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПартииЖНВЛСОстатки.Партия.ДатаПоступления как ДатаПоступления,
			|	ПартииЖНВЛСОстатки.Партия,
			|	ПартииЖНВЛСОстатки.Склад,
			|	ПартииЖНВЛСОстатки.СтавкаНДС,
			|	ПартииЖНВЛСОстатки.Партия.СерияСтрока как ПартияСерия,
			|	ПартииЖНВЛСОстатки.Партия.СрокГодности как СрокГодности,
			|	ПартииЖНВЛСОстатки.КолвоОстаток / ПартииЖНВЛСОстатки.Партия.К КАК Остаток,
			|	ВЫРАЗИТЬ(ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.К как Число(12,2)) КАК ЦенаЗакуп,
			|	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток,
			|	ВЫРАЗИТЬ(ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.К как Число(12,2))КАК ЦенаРозн,
			|	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток,
			|	ПартииЖНВЛСОстатки.Партия.Поставщик,
			|	ПартииЖНВЛСОстатки.Партия.ДокументПоступления
			|ПОМЕСТИТЬ ТЗ
			|ИЗ
			|	РегистрНакопления.ПартииЖНВЛС.Остатки(, Товар = &товар "+ ПроСклад + ") КАК ПартииЖНВЛСОстатки
			|ГДЕ
			|	ПартииЖНВЛСОстатки.КолвоОстаток <> 0  и  ПартииЖНВЛСОстатки.Партия.К  > 0
			|;
			| ";
		Иначе
			ТХТ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПартииЖНВЛСОстатки.Партия.ДатаПоступления как ДатаПоступления,
			|	ПартииЖНВЛСОстатки.Партия,
			|	ПартииЖНВЛСОстатки.Склад,
			|	ПартииЖНВЛСОстатки.СтавкаНДС,
			|	ПартииЖНВЛСОстатки.Партия.СерияСтрока как ПартияСерия,
			|	ПартииЖНВЛСОстатки.Партия.СрокГодности как СрокГодности,
			|	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток,
			|	ВЫРАЗИТЬ(ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток как Число(12,2))  КАК ЦенаЗакуп,
			|	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток,
			|	ВЫРАЗИТЬ(ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток как Число(12,2)) КАК ЦенаРозн,
			|	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток,
			|	ПартииЖНВЛСОстатки.Партия.Поставщик,
			|	ПартииЖНВЛСОстатки.Партия.ДокументПоступления
			|ПОМЕСТИТЬ ТЗ
			|ИЗ
			|	РегистрНакопления.ПартииЖНВЛС.Остатки(, Товар = &товар "+ ПроСклад + " ) КАК ПартииЖНВЛСОстатки
			|ГДЕ
			|	ПартииЖНВЛСОстатки.КолвоОстаток <> 0
			|
			|;
			| ";
		КонецЕсли;		
		
		ТХТ = ТХТ + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТЗ.ДатаПоступления,
		|	ТЗ.Партия,
		|	ТЗ.Склад как Склад,
		|	ТЗ.СтавкаНДС,
		|	ТЗ.ПартияСерия как Серия,
		|	ТЗ.СрокГодности,
		|	ТЗ.Остаток,
		|	ТЗ.ЦенаЗакуп,
		|	ТЗ.СуммаЗакупСНДСОстаток,
		|	ТЗ.ЦенаРозн,
		|	ТЗ.СуммаРознСНДСОстаток,
		|	ТЗ.ПартияПоставщик.Наименование как Поставщик ,
		|	ТЗ.ПартияДокументПоступления как Документ
		|	
		|ИЗ
		|	ТЗ КАК ТЗ
		| УПОРЯДОЧИТЬ ПО ТЗ.ДатаПоступления   
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТЗ
		|";
	Иначе
		Если Товар.Разбивается = Истина Тогда
			ТХТ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПартииЖНВЛСОстатки.Партия.ДатаПоступления как ДатаПоступления,
			|	ПартииЖНВЛСОстатки.Партия,
			|	ПартииЖНВЛСОстатки.Склад,
			|	ПартииЖНВЛСОстатки.СтавкаНДС,
			|	ПартииЖНВЛСОстатки.КолвоОстаток / ПартииЖНВЛСОстатки.Партия.К КАК Остаток,
			|	ВЫРАЗИТЬ(ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.К как Число(12,2)) КАК ЦенаЗакуп,
			|	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток,
			|	ВЫРАЗИТЬ(ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.К как Число(12,2)) КАК ЦенаРозн,
			|	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток,
			|	ПартииЖНВЛСОстатки.Партия.Поставщик как Поставщик,
			|	ПартииЖНВЛСОстатки.Партия.ДокументПоступления как Документ
			|ИЗ
			|	РегистрНакопления.ПартииЖНВЛС.Остатки(, Товар = &товар "+ ПроСклад + ") КАК ПартииЖНВЛСОстатки
			|ГДЕ
			|	ПартииЖНВЛСОстатки.КолвоОстаток <> 0 И ПартииЖНВЛСОстатки.Партия.К > 0
			|УПОРЯДОЧИТЬ ПО  ПартииЖНВЛСОстатки.Партия.ДатаПоступления
			|;
			|";	
		Иначе
			ТХТ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПартииЖНВЛСОстатки.Партия.ДатаПоступления как ДатаПоступления,
			|	ПартииЖНВЛСОстатки.Партия,
			|	ПартииЖНВЛСОстатки.Склад,
			|	ПартииЖНВЛСОстатки.СтавкаНДС,
			|	ПартииЖНВЛСОстатки.КолвоОстаток  КАК Остаток,
			|	ВЫРАЗИТЬ(ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток как Число(12,2)) КАК ЦенаЗакуп,
			|	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток,
			|	ВЫРАЗИТЬ(ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток как Число(12,2)) КАК ЦенаРозн,
			|	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток,
			|	ПартииЖНВЛСОстатки.Партия.Поставщик как Поставщик,
			|	ПартииЖНВЛСОстатки.Партия.ДокументПоступления как Документ
			|ИЗ
			|	РегистрНакопления.ПартииЖНВЛС.Остатки(, Товар = &товар "+ ПроСклад + ") КАК ПартииЖНВЛСОстатки
			|ГДЕ
			|	ПартииЖНВЛСОстатки.КолвоОстаток <> 0
			|УПОРЯДОЧИТЬ ПО  ПартииЖНВЛСОстатки.Партия.ДатаПоступления
			|;
			|";			
		КонецЕсли;
	КонецЕсли;
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("Дата",КОНЕцдня(ТекущаядатА()));
	Запрос.УстановитьПараметр("Товар",Товар);
	Запрос.УстановитьПараметр("Склад",Склад);
	
	
	
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	ОстаткиПоПартияМ_Тз.Очистить();
	ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.Значение=ТЗ;
	ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.СоздатьКолонки();
	ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.ТолькоПросмотр=Истина;
	
	////------------------<Форматируем колонки>-------------------GtG----07.01.2008
	К=ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.Колонки;
	
	Если ОтображатьДопИнформацию = Истина Тогда	
		ФорматированиеКолонкиТЗ (К.Получить(0) ,"Дата",10,ложь,"ДФ=dd.MM.yy"); 
		ФорматированиеКолонкиТЗ (К.Получить(1) ,"Партия",17,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(2) ,"Склад",30,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(3) ,"НДС%",7,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(4) ,"Серия",15,ложь,"");	
		ФорматированиеКолонкиТЗ (К.Получить(5) ,"Срок",10,ложь,"");	
		//ФорматированиеКолонкиТЗ (К.Получить(6) ,"Приход",10,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(6) ,"Остаток",10,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(7) ,"Закуп. цена",10,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(8) ,"Закуп. сумма",15,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(9) ,"Розн. цена",10,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(10) ,"Розн. сумма",15,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(11) ,"Поставщик",15,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(12) ,"Документ",30,ложь,"");
	Иначе
		ФорматированиеКолонкиТЗ (К.Получить(0) ,"Дата",10,ложь,"ДФ=dd.MM.yy"); 
		ФорматированиеКолонкиТЗ (К.Получить(1) ,"Партия",17,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(2) ,"Склад",30,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(3) ,"НДС%",7,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(4) ,"Остаток",10,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(5) ,"Закуп. цена",10,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(6) ,"Закуп. сумма",15,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(7) ,"Розн. цена",10,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(8) ,"Розн. сумма",15,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(9) ,"Поставщик",15,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(10) ,"Документ",30,ложь,"");		
	КонецЕсли;
	
	
	
	
	
	
КонецПроцедуры


Процедура КоманднаяПанель1Остатки_по_партиям(Кнопка)
	Товар=ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	
	КодТовара = Товар.Код;
	
	ЭлементыФормы.ЧейОстатокВиден.Заголовок=""+Товар.код+ " : "+Товар.Наименование;
	
	Если Склад.Пустая()=Истина Тогда
		ПроСклад="";
	Иначе
		//Если Склад.ЭтоГруппа Тогда
		//	ПроСклад=" И Склад.Родитель=&Склад ";
		//Иначе
			ПроСклад=" И СкладКод=&КодСклада ";
		//КонецЕсли;
		КодСклада = Склад.Код;
	КонецЕсли; 	
	
	
            

			ТХТ="ВЫБРАТЬ 
			|	Партии.ДатаПоступления как ДатаПоступления,
			|	Остатки.ПартияКод как Партия,
			|	МХ.Ссылка как Склад,
			|	Партии.СтавкаНДСРозн  как СтавкаНДС,
			|	Партии.Серия,
			|	ЕСТЬNULL(рсРПО.Серия, """") КАК ОфисСерия,
			|	Партии.СрокГодности,
			|	ЕСТЬNULL(рсРПО.СрокГодности, """") КАК ОфисСрокГодности,
			|   Партии.Баркод КАК ШК, 
			|   ЕСТЬNULL(рсРПО.Баркод, """") КАК ОфисШК,
			// ==>ЕНТ-1427.Коробка.2019.03.12
			|	Остатки.КоличествоОстаток КАК Количество,		
			|	Партии.К КАК Коэфф,		
			// <==ЕНТ-1427.Коробка.2019.03.12
			|	Остатки.КоличествоОстаток / Партии.К КАК Остаток,
			|	0 как Приемка,
			|	Партии.ЦенаЗакуп,
			|	Остатки.СуммаЗакупБезНДСОстаток*(1 + Остатки.СтавкаНДСЗакуп/100) как СуммаЗакупСНДСОстаток,
			|	ЕСТЬNULL(РЦП.Цена , ЕСТЬNULL(РЦ.Цена, 0)) КАК ЦенаРозн,
			|	ЕСТЬNULL(РЦП.Цена , ЕСТЬNULL(РЦ.Цена, 0)) * Остатки.КоличествоОстаток / Партии.К как СуммаРознСНДСОстаток,
			|	Поставщики.Наименование как Поставщик,
			|	Партии.ДокументПоступления как Документ,
			|	Выбор Когда Выразить(Партии.ДокументПоступления КАК Документ.УЗ_ПоступлениеТовара).Склад.Код = МХ.Ссылка.Код Тогда Истина Иначе Ложь Конец как Исходный,
			|	Выразить(Партии.ДокументПоступления КАК Документ.УЗ_ПоступлениеТовара).ВхНомерНакл как ВхНомерНакл,
			|	Выбор Когда Выразить(Партии.ДокументПоступления КАК Документ.УЗ_ПоступлениеТовара).КД_ЭДО=Истина Тогда Выразить(Партии.ДокументПоступления КАК Документ.УЗ_ПоступлениеТовара).Комментарий Иначе """" Конец как КомментарийПоКД
			|ИЗ
			|	РегистрНакопления.УЗ_Партии.Остатки(, ТоварКод = &КодТовара  " + ПроСклад + " ) КАК Остатки
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии как Партии ПО Остатки.ПартияКод = Партии.Код
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Поставщики как Поставщики ПО Поставщики.Код = Партии.Поставщик
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения как МХ ПО МХ.Код = Остатки.СкладКод
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦены КАК РЦ
			|		ПО Остатки.ТоварКод = РЦ.ТоварКод
			|			И (Остатки.СкладКод = РЦ.АптекаКод)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦеныПоПартиям КАК РЦП
			|		ПО  Остатки.ПартияКод = РЦП.ПартияКод
			|			И (Остатки.СкладКод = РЦП.АптекаКод )
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеквизитыПартийОфис КАК рсРПО ПО Остатки.ПартияКод = рсРПО.ПартияКод
			|
			|ГДЕ
			|	Остатки.КоличествоОстаток <> 0 
			|ОБЪЕДИНИТЬ ВСЕ
			|ВЫБРАТЬ 
			|	Партии.ДатаПоступления как ДатаПоступления,
			|	Остатки.ПартияКод как Партия,
			|	МХ.Ссылка как Склад,
			|	Партии.СтавкаНДСРозн  как СтавкаНДС,
			|	Партии.Серия,
			|	ЕСТЬNULL(рсРПО.Серия, """") КАК ОфисСерия,
			|	Партии.СрокГодности,
			|	ЕСТЬNULL(рсРПО.СрокГодности, """") КАК ОфисСрокГодности,
			|   Партии.Баркод КАК ШК, 
			|   ЕСТЬNULL(рсРПО.Баркод, """") КАК ОфисШК,
			// ==>ЕНТ-1427.Коробка.2019.03.12
			|	0,		
			|	0,		
			// <==ЕНТ-1427.Коробка.2019.03.12
			|	0 КАК Остаток,
			|	Остатки.Количество / Остатки.К как Приемка,
			|	Партии.ЦенаЗакуп,
			|	Остатки.СуммаЗакупБезНДС*(1 + Партии.СтавкаНДСЗакуп/100) как СуммаЗакупСНДСОстаток,
			|	ЕСТЬNULL(РЦП.Цена , ЕСТЬNULL(РЦ.Цена, 0)) КАК ЦенаРозн,
			|	ЕСТЬNULL(РЦП.Цена , ЕСТЬNULL(РЦ.Цена, 0)) * Остатки.Количество / Остатки.К как СуммаРознСНДСОстаток,
			|	Поставщики.Наименование как Поставщик,
			|	Партии.ДокументПоступления как Документ,
			|	Выбор Когда Выразить(Партии.ДокументПоступления КАК Документ.УЗ_ПоступлениеТовара).Склад.Код = МХ.Ссылка.Код Тогда Истина Иначе Ложь Конец как Исходный,
			|	Выразить(Партии.ДокументПоступления КАК Документ.УЗ_ПоступлениеТовара).ВхНомерНакл как ВхНомерНакл,
			|	Выбор Когда Выразить(Партии.ДокументПоступления КАК Документ.УЗ_ПоступлениеТовара).КД_ЭДО=Истина Тогда Выразить(Партии.ДокументПоступления КАК Документ.УЗ_ПоступлениеТовара).Комментарий Иначе """" Конец
			|ИЗ
			|	РегистрСведений.ТоварНаПриемке КАК Остатки
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии как Партии ПО Остатки.ПартияКод = Партии.Код
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Поставщики как Поставщики ПО Поставщики.Код = Партии.Поставщик
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения как МХ ПО МХ.Код = Остатки.СкладКод
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦены КАК РЦ
			|		ПО Остатки.ТоварКод = РЦ.ТоварКод
			|			И (Остатки.СкладКод = РЦ.АптекаКод)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦеныПоПартиям КАК РЦП
			|		ПО  Остатки.ПартияКод = РЦП.ПартияКод
			|			И (Остатки.СкладКод = РЦП.АптекаКод )
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеквизитыПартийОфис КАК рсРПО ПО Остатки.ПартияКод = рсРПО.ПартияКод
			|
			|ГДЕ
			|	Остатки.ТоварКод = &КодТовара  " + ПроСклад + "  и Остатки.Количество <> 0			
			|УПОРЯДОЧИТЬ ПО Партии.ДатаПоступления
			|;
			| ";

		
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("Дата",КОНЕцдня(ТекущаядатА()));
	Запрос.УстановитьПараметр("КодТовара",КодТовара);
	Запрос.УстановитьПараметр("КодСклада",КодСклада);
	
	
	
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	ОстаткиПоПартияМ_Тз.Очистить();
	ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.Значение=ТЗ;
	ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.СоздатьКолонки();
	ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.ТолькоПросмотр=Истина;
	
	////------------------<Форматируем колонки>-------------------GtG----07.01.2008
	К=ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.Колонки;
	
	//Если ОтображатьДопИнформацию = Истина Тогда	
		ФорматированиеКолонкиТЗ (К.Получить(0) ,"Дата",10,ложь,"ДФ=dd.MM.yy"); 
		ФорматированиеКолонкиТЗ (К.Получить(1) ,"Партия",17,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(2) ,"Склад",30,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(3) ,"НДС%",7,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(4) ,"Серия",15,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(5) ,"Серия(офис)",15,ложь,"",ДоступностьРеквизитыПартийОфис);
		ФорматированиеКолонкиТЗ (К.Получить(6) ,"Срок",10,ложь,"");	
		ФорматированиеКолонкиТЗ (К.Получить(7) ,"Срок(офис)",10,ложь,"",ДоступностьРеквизитыПартийОфис);
		ФорматированиеКолонкиТЗ (К.Получить(8) ,"ШК ",13,ложь,"");	
		ФорматированиеКолонкиТЗ (К.Получить(9) ,"ШК (офис)",13,ложь,"",ДоступностьРеквизитыПартийОфис);
		//ФорматированиеКолонкиТЗ (К.Получить(6) ,"Приход",10,истина,"ЧДЦ=2");
		// ==>ЕНТ-1427.Коробка.2019.03.12
		ФорматированиеКолонкиТЗ (К.Получить(10) ,"Количество",10,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(11) ,"Коэфф разбивки",10,истина,"ЧДЦ=2");
		// <==ЕНТ-1427.Коробка.2019.03.12
		ФорматированиеКолонкиТЗ (К.Получить(12) ,"Остаток",10,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(13) ,"Приемка",10,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(14) ,"Закуп. цена",10,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(15) ,"Закуп. сумма",15,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(16) ,"Розн. цена",10,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(17) ,"Розн. сумма",15,истина,"ЧДЦ=2");
		ФорматированиеКолонкиТЗ (К.Получить(18) ,"Поставщик",15,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(19) ,"Документ",30,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(20) ,"Исходный",10,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(21) ,"ВхНомерНакл",15,ложь,"");
		ФорматированиеКолонкиТЗ (К.Получить(22) ,"Комментарий по КД",25,ложь,"");
	//Иначе
	//	ФорматированиеКолонкиТЗ (К.Получить(0) ,"Дата",10,ложь,"ДФ=dd.MM.yy"); 
	//	ФорматированиеКолонкиТЗ (К.Получить(1) ,"Партия",17,ложь,"");
	//	ФорматированиеКолонкиТЗ (К.Получить(2) ,"Склад",30,ложь,"");
	//	ФорматированиеКолонкиТЗ (К.Получить(3) ,"НДС%",7,ложь,"");
	//	ФорматированиеКолонкиТЗ (К.Получить(4) ,"Остаток",10,истина,"ЧДЦ=2");
	//	ФорматированиеКолонкиТЗ (К.Получить(5) ,"Закуп. цена",10,ложь,"");
	//	ФорматированиеКолонкиТЗ (К.Получить(6) ,"Закуп. сумма",15,истина,"ЧДЦ=2");
	//	ФорматированиеКолонкиТЗ (К.Получить(7) ,"Розн. цена",10,ложь,"");
	//	ФорматированиеКолонкиТЗ (К.Получить(8) ,"Розн. сумма",15,истина,"ЧДЦ=2");
	//	ФорматированиеКолонкиТЗ (К.Получить(9) ,"Поставщик",15,ложь,"");
	//	ФорматированиеКолонкиТЗ (К.Получить(10) ,"Документ",30,ложь,"");		
	//КонецЕсли;
	
	
	
	
	
	
КонецПроцедуры


Процедура КоманднаяПанель2Движения_по_Товару(Кнопка)
	
	Товар=ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	ЭлементыФормы.ЧейОстатокВиден1.Заголовок=""+Товар.код+ " : "+Товар.Наименование;
	ЭлементыФормы.ДвиженияЗаПериод.Очистить();
	
//ТХТ="ВЫБРАТЬ  ВнутреннийЗапрос.МЕСЯЦ,
//	|	СУММА(ВнутреннийЗапрос.нач_ост) как нач_ост,
//	|	СУММА(ВнутреннийЗапрос.Приход) как Приход,
//	|	СУММА(ВнутреннийЗапрос.Расход) как Расход,
//	|	СУММА(ВнутреннийЗапрос.Остаток) как Остаток
//	|ИЗ (
//	|ВЫБРАТЬ
//	|	ПартииЖНВЛСОстаткиИОбороты1.Период как Месяц,
//	|	ПартииЖНВЛСОстаткиИОбороты1.КолвоНачальныйОстаток/ПартииЖНВЛСОстаткиИОбороты1.Партия.ЕИТЗАкупки.К как Нач_ост,
//	|	ПартииЖНВЛСОстаткиИОбороты1.КолвоПриход/ПартииЖНВЛСОстаткиИОбороты1.Партия.ЕИТЗАкупки.К как Приход,
//	|	ПартииЖНВЛСОстаткиИОбороты1.КолвоРасход/ПартииЖНВЛСОстаткиИОбороты1.Партия.ЕИТЗАкупки.К как Расход,
//	|	ПартииЖНВЛСОстаткиИОбороты1.КолвоКонечныйОстаток/ПартииЖНВЛСОстаткиИОбороты1.Партия.ЕИТЗАкупки.К как Остаток,
//	|	ПартииЖНВЛСОстаткиИОбороты1.Партия КАК Колонка
//	|ИЗ
//	|	РегистрНакопления.ПартииЖНВЛС.ОстаткиИОбороты(
//	|		&НачПер1,
//	|		&КонПер1,
//	|		Месяц,
//	|		ДвиженияИГраницыПериода,
//	|		Товар = &ТекТовар
//	|		    И Склад = &ВыбСклад) КАК ПартииЖНВЛСОстаткиИОбороты1
//	|
//	|ОБЪЕДИНИТЬ
//	|
//	|ВЫБРАТЬ
//	|	ПартииЖНВЛСОстаткиИОбороты2.Период,
//	|	ПартииЖНВЛСОстаткиИОбороты2.КолвоНачальныйОстаток/ПартииЖНВЛСОстаткиИОбороты2.Партия.ЕИТЗАкупки.К,
//	|	ПартииЖНВЛСОстаткиИОбороты2.КолвоПриход/ПартииЖНВЛСОстаткиИОбороты2.Партия.ЕИТЗАкупки.К,
//	|	ПартииЖНВЛСОстаткиИОбороты2.КолвоРасход/ПартииЖНВЛСОстаткиИОбороты2.Партия.ЕИТЗАкупки.К,
//	|	ПартииЖНВЛСОстаткиИОбороты2.КолвоКонечныйОстаток/ПартииЖНВЛСОстаткиИОбороты2.Партия.ЕИТЗАкупки.К,
//	|	ПартииЖНВЛСОстаткиИОбороты2.Партия
//	|ИЗ
//	|	РегистрНакопления.ПартииЖНВЛС.ОстаткиИОбороты(
//	|		&НачПер2,
//	|		&КонПер2,
//	|		Месяц,
//	|		ДвиженияИГраницыПериода,
//	|		Товар = &ТекТовар
//	|		    И Склад = &ВыбСклад ) КАК ПартииЖНВЛСОстаткиИОбороты2
//	|
//	|ОБЪЕДИНИТЬ
//	|
//	|ВЫБРАТЬ
//	|	ПартииЖНВЛСОстаткиИОбороты3.Период,
//	|	ПартииЖНВЛСОстаткиИОбороты3.КолвоНачальныйОстаток/ПартииЖНВЛСОстаткиИОбороты3.Партия.ЕИТЗАкупки.К,
//	|	ПартииЖНВЛСОстаткиИОбороты3.КолвоПриход/ПартииЖНВЛСОстаткиИОбороты3.Партия.ЕИТЗАкупки.К,
//	|	ПартииЖНВЛСОстаткиИОбороты3.КолвоРасход/ПартииЖНВЛСОстаткиИОбороты3.Партия.ЕИТЗАкупки.К,
//	|	ПартииЖНВЛСОстаткиИОбороты3.КолвоКонечныйОстаток/ПартииЖНВЛСОстаткиИОбороты3.Партия.ЕИТЗАкупки.К,
//	|	ПартииЖНВЛСОстаткиИОбороты3.Партия
//	|ИЗ
//	|	РегистрНакопления.ПартииЖНВЛС.ОстаткиИОбороты(
//	|		&НачПер3,
//	|		&КонПер3,
//	|		Месяц,
//	|		ДвиженияИГраницыПериода,
//	|		Товар = &ТекТовар
//	|		    И Склад = &ВыбСклад
//	|) КАК ПартииЖНВЛСОстаткиИОбороты3 ) ВнутреннийЗапрос
//	|Group by ВнутреннийЗапрос.Месяц";
//	
//	ПРошлыйМесяцНач=НачалоМесяца(НачалоМесяца(ТекущаяДата())-10*60*60*24);
//ПРошлыйМесяцКон=КонецМесяца(ПРошлыйМесяцНач);
//ПозаПРошлыйМесяцНач=НачалоМесяца(ПРошлыйМесяцНач-10*60*60*24);
//ПозаПРошлыйМесяцКон=КонецМесяца(ПозаПРошлыйМесяцНач);

//ТекМесяцНач=НачалоМесяца(ТекущаяДата());
//ТекМесяцКон=КонецМесяца(ТекущаяДата());

//	
//	
//	

//	 Запрос=Новый Запрос;
//	 Запрос.Текст=ТХТ;
//	 Запрос.УстановитьПараметр("ТекТовар",Товар);
//	 Запрос.УстановитьПараметр("ВыбСклад",Склад1);
//	 Запрос.УстановитьПараметр("НачПер1",ПРошлыйМесяцНач);
//	 Запрос.УстановитьПараметр("КонПер1",ПРошлыйМесяцКон);
//	 Запрос.УстановитьПараметр("НачПер2",ТекМесяцНач);
//	 Запрос.УстановитьПараметр("КонПер2",ТекМесяцКон);
//	 Запрос.УстановитьПараметр("НачПер3",ПозаПРошлыйМесяцНач);
//	 Запрос.УстановитьПараметр("КонПер3",ПозаПРошлыйМесяцКон);

//	 
//	 ТЗ=Запрос.Выполнить().Выгрузить();
Если Товар.Разбивается = Истина Тогда
	ТХТ = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииЖНВЛСОстаткиИОбороты.Период КАК Период,
	|	СУММА(ПартииЖНВЛСОстаткиИОбороты.КолвоНачальныйОстаток / ПартииЖНВЛСОстаткиИОбороты.Партия.К) КАК КолвоНачальныйОстаток,
	|	СУММА(ПартииЖНВЛСОстаткиИОбороты.КолвоПриход / ПартииЖНВЛСОстаткиИОбороты.Партия.К) КАК КолвоПриход,
	|	СУММА(ПартииЖНВЛСОстаткиИОбороты.КолвоРасход / ПартииЖНВЛСОстаткиИОбороты.Партия.К) КАК КолвоРасход,
	|	СУММА(ПартииЖНВЛСОстаткиИОбороты.КолвоКонечныйОстаток / ПартииЖНВЛСОстаткиИОбороты.Партия.К) КАК КолвоКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.ПартииЖНВЛС.ОстаткиИОбороты(
	|			&НачПериода,
	|			&КонПериода,
	|			Месяц,
	|			ДвиженияИГраницыПериода,
	|			Склад = &Склад
	|				И Товар = &Товар) КАК ПартииЖНВЛСОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииЖНВЛСОстаткиИОбороты.Период
	|ИТОГИ
	|	СУММА(КолвоНачальныйОстаток),
	|	СУММА(КолвоПриход),
	|	СУММА(КолвоРасход),
	|	СУММА(КолвоКонечныйОстаток)
	|ПО
	|	Период ПЕРИОДАМИ(МЕСЯЦ, &НачПериода, &КонПериода)";
Иначе
	ТХТ = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	      |	ПартииЖНВЛСОстаткиИОбороты.Период КАК Период,
	      |	ПартииЖНВЛСОстаткиИОбороты.КолвоНачальныйОстаток КАК КолвоНачальныйОстаток,
	      |	ПартииЖНВЛСОстаткиИОбороты.КолвоПриход КАК КолвоПриход,
	      |	ПартииЖНВЛСОстаткиИОбороты.КолвоРасход КАК КолвоРасход,
	      |	ПартииЖНВЛСОстаткиИОбороты.КолвоКонечныйОстаток КАК КолвоКонечныйОстаток
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.ОстаткиИОбороты(
	      |			&НачПериода,
	      |			&КонПериода,
	      |			Месяц,
	      |			ДвиженияИГраницыПериода,
	      |			Склад = &Склад
	      |				И Товар = &Товар) КАК ПартииЖНВЛСОстаткиИОбороты
	      |ИТОГИ
	      |	СУММА(КолвоНачальныйОстаток),
	      |	СУММА(КолвоПриход),
	      |	СУММА(КолвоРасход),
	      |	СУММА(КолвоКонечныйОстаток)
	      |ПО
	      |	Период ПЕРИОДАМИ(МЕСЯЦ, &НачПериода, &КонПериода)";
	
КонецЕсли;
     Запрос = Новый ПостроительОтчета;
	 запрос.Текст = ТХТ;
	 Запрос.Параметры.Очистить();
	 Запрос.Параметры.Вставить("Склад",Склад1);
	 Запрос.Параметры.Вставить("Товар",Товар);
	 Запрос.Параметры.Вставить("НачПериода",НачалоМесяца(НачалоМесяца(ТекущаяДата()) - 60*60*24*50)); //получаем 3 месяца назад
	 Запрос.Параметры.Вставить("КонПериода",КонецДня(ТекущаяДата()));
	 Запрос.Выполнить();
	 
	 Макет = Запрос.Макет;
	 
	 Запрос.Макет = Неопределено;
	 ТекущаяОбласть = Неопределено;
	 Пока Истина Цикл 
		 // Осуществим поиск ячейки, в которой находится параметр - Количество 
		 ТекущаяОбласть = Макет.НайтиТекст("Период", ТекущаяОбласть, Макет.Область(), 
		 Истина, Истина, Истина, Ложь); 
		 Если ТекущаяОбласть <> Неопределено Тогда 
			 Если ТекущаяОбласть.Параметр = "Период" Тогда 
				 // Установим формат значения - два знака после запятой 
				 ТекущаяОбласть.Формат = "ДФ='MMMM yyyy'"; 
			 КонецЕсли; 
		 Иначе 
			 Прервать; 
		 КонецЕсли; 
	 КонецЦикла;	
	 Запрос.Макет = Макет;	
	 Запрос.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Трава);
	 Запрос.ОформитьМакет();
	 Запрос.ВыводитьЗаголовокОтчета = Ложь;
	 
	 Запрос.Вывести(ЭлементыФормы.ДвиженияЗаПериод);

	
КонецПроцедуры

Процедура ДействияФормыКарточка(Кнопка)
	

	Товар=ЭлементыФормы.СправочникСписок.ТекущаяСтрока;

	Карточка=Отчеты.УЗ_ДвижениеТовара.Создать();
	Карточка.ВыбТовар=Товар;
	Карточка.НачПер=НачалоГода(ТекущаяДата());
	Карточка.КонПер=ТекущаяДата();

	Ф=Карточка.ПолучитьФорму("Форма");
	Ф.Открыть();
	
	

КонецПроцедуры

Процедура КоманднаяПанель3ОстВозр(Кнопка)
	ИТекКол=ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.ТекущаяКолонка.Имя+" Asc";
	ОстаткиПоПартияМ_ТЗ.Сортировать(ИТекКол);
КонецПроцедуры

Процедура КоманднаяПанель3ОстУбыв(Кнопка)
	ИТекКол=ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.ТекущаяКолонка.Имя+" Desc";
	ОстаткиПоПартияМ_ТЗ.Сортировать(ИТекКол);
КонецПроцедуры

Процедура СправочникСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Если ПараметрыСеанса.КопированиеАП = Ложь Тогда
		Если Копирование=Истина Тогда
			Предупреждение("К О П И Р О В А Т Ь     Н Е Л Ь З Я   ! ! !");
		КонецЕсли;	
		Отказ=Копирование;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура КоманднаяПанель3КарточкаПоПартии(Кнопка)
	
	Товар=ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	ТекСтрока = ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	

	Карточка=Отчеты.УЗ_ДвижениеТовара.Создать();
	
	Карточка.КодПартии=ТекСтрока.Партия;
	Карточка.ВыбСклад=ТекСтрока.Склад;
	Карточка.ВыбТовар=Товар;
	Карточка.ВыбФирма=ТекСтрока.Склад.Фирма;
	Карточка.НачПер=НачалоГода(ТекущаяДата());
	Карточка.КонПер=ТекущаяДата();
	
	Ф=Карточка.ПолучитьФорму("Форма");
	
	Ф.Открыть();
	
	
КонецПроцедуры

Процедура КоманднаяПанель3ОткрытьДокумент(Кнопка)
	
	ТекСтрока = ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока.Документ.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура КоманднаяПанель3Действие(Кнопка)
	
	ТекСтрока = ЭлементыФормы.ОстаткиПоПартияМ_ТЗ.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.Неликвиды.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Аптека = ТекСтрока.Склад;
	МенеджерЗаписи.КодТовара = ТекСтрока.Партия.Владелец.Код;
	
	МенеджерЗаписи.Прочитать();
	
	Если НЕ МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.Аптека = ТекСтрока.Склад;
		МенеджерЗаписи.КодТовара = ТекСтрока.Партия.Владелец.Код;
	КонецЕсли;
	
	
	МенеджерЗаписи.Количество = текСтрока.Остаток;
	МенеджерЗаписи.Цена = ТекСтрока.ЦенаРозн;
	МенеджерЗаписи.Партия = ТекСтрока.Партия;
	Если ОтображатьДопИнформацию = Истина Тогда
		МенеджерЗаписи.СрокГодности = ТекСтрока.СрокГодности;
	Иначе
		МенеджерЗаписи.СрокГодности = ТекСтрока.Партия.СерияСтрока.СрокГодности;
	КонецЕсли;
	
	Попытка
		МенеджерЗаписи.Записать();
		Предупреждение("Неликвид добавлен.",5);
	Исключение
		Предупреждение("Ошибка добавления неликвида" + Символы.ПС + ОписаниеОшибки(),5);
	КонецПопытки;
	
	
		
КонецПроцедуры

Процедура ДействияФормыкнДобавитьВИсключениеДобора(Кнопка)
	
	
	ТекТовар = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Если ТекТовар = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ИсключенияДобора.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Товар = ТекТовар;
	
	МенеджерЗаписи.Прочитать();
	
	Если НЕ МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.Товар = ТекТовар;
		МенеджерЗаписи.ДатаДобавления = ТекущаяДата();
		МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийСотр;
		
		Попытка
			МенеджерЗаписи.Записать();
			Предупреждение("Исключение добора добавлено.",5);
		Исключение
			Предупреждение("Ошибка добавления исключения" + Символы.ПС + ОписаниеОшибки(),5);
		КонецПопытки;	
	Иначе
		Предупреждение("Данный товар уже находится в исключениях добора.");
	КонецЕсли;
	
	
	
	
КонецПроцедуры

Процедура НаименованиеПриИзменении(Элемент)
	
	ЕстьОтбор=ЗначениеЗаполнено(Элемент.Значение);
	Если ТипЗнч(Элемент.Значение)=Тип("СписокЗначений") ТОгда
		Отбор.Наименование.ВидСравнения=ВидСравнения.ВСписке;
	Иначе
		Отбор.Наименование.ВидСравнения=ВидСравнения.Содержит;
	КонецЕсли; 
	
	Отбор.Наименование.Использование=ЕстьОтбор;	
	
КонецПроцедуры

Процедура СправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	//Начало НЭТИ Барданов А.Ю. 29.01.2019 ENT-1158
	//Если ОтображатьКолонкуТипСТМ И ДанныеСтроки <> Неопределено Тогда
	Если ДанныеСтроки <> Неопределено Тогда  
	//Конец НЭТИ Барданов А.Ю. 29.01.2019 ENT-1158	
		ТипСТМ = ПолучитьТипСТМ(ДанныеСтроки.Ссылка);
		ОформлениеСтроки.Ячейки.ТипСТМ.Значение = ТипСТМ; 
		
	КонецЕсли;

КонецПроцедуры

Процедура ДействияФормыОтобразитьСкрытьКолонкуТипСТМ(Кнопка)
	
	ОтображатьКолонкуТипСТМ = Не ОтображатьКолонкуТипСТМ;
	
	ЭлементыФормы.СправочникСписок.Колонки.ТипСТМ.Видимость = ОтображатьКолонкуТипСТМ;
	
	ТекстКнопки = ?(ОтображатьКолонкуТипСТМ, "Скрыть колонку ""Тип СТМ""", "Отобразить колонку ""Тип СТМ""");		    
	Кнопка.Текст = ТекстКнопки;
	Кнопка.Подсказка = ТекстКнопки;
	Кнопка.Пояснение = ТекстКнопки; 	
	
КонецПроцедуры

Функция ПолучитьТипСТМ(ТоварСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыСТМСрезПоследних.ТипСТМ
	|ИЗ
	|	РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	|ГДЕ
	|	ТоварыСТМСрезПоследних.Товар = &Товар";
	
	Запрос.УстановитьПараметр("Товар", ТоварСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Перечисления.ТипыСТМ.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.ТипСТМ;	

КонецФункции

Процедура ОтобратьПоТипуСТМ()
	
	Использование = ФильтрПоТипуСТМ.Количество() > 0;
	
	Если Использование Тогда
		СписокТоваровОтбора = ПолучитьСписокТоваровДляОтбораПоТипуСТМ();
	Иначе
		СписокТоваровОтбора = Новый СписокЗначений;
	КонецЕсли;	
	
	ЭлементОтбора = СправочникСписок.Отбор.Ссылка;
	ЭлементОтбора.Использование	= Использование;
	ЭлементОтбора.ВидСравнения	= ВидСравнения.ВСписке;
	ЭлементОтбора.Значение		= СписокТоваровОтбора;
	
КонецПроцедуры

Функция ПолучитьСписокТоваровДляОтбораПоТипуСТМ()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыСТМСрезПоследних.Товар
	|ИЗ
	|	РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	|ГДЕ
	|	ТоварыСТМСрезПоследних.ТипСТМ В (&ТипыСТМ)";
	
	Запрос.УстановитьПараметр("ТипыСТМ", ФильтрПоТипуСТМ.ВыгрузитьЗначения());
	
	СписокТоваров = Новый СписокЗначений;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокТоваров.Добавить(Выборка.Товар);			
		КонецЦикла;
	
	КонецЕсли;
	 
	Возврат СписокТоваров;	

КонецФункции

Процедура ФильтрПоТипуСТМНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТипСТМ			= Перечисления.ТипыСТМ.СТМ;
	ТипУсловныйСТМ	= Перечисления.ТипыСТМ.УсловныйСТМ;
	ТипНеСТМ		= Перечисления.ТипыСТМ.НеСТМ;
	ТипПриорити		= Перечисления.ТипыСТМ.Приорити;
	
	ТипСТМ_Отметка			= ФильтрПоТипуСТМ.НайтиПоЗначению(ТипСТМ) <> Неопределено;
	ТипУсловныйСТМ_Отметка	= ФильтрПоТипуСТМ.НайтиПоЗначению(ТипУсловныйСТМ) <> Неопределено;
	ТипНеСТМ_Отметка		= ФильтрПоТипуСТМ.НайтиПоЗначению(ТипНеСТМ) <> Неопределено;
	ТипПриорити_Отметка		= ФильтрПоТипуСТМ.НайтиПоЗначению(ТипПриорити) <> Неопределено;
	
	СписокЗнч = Новый СписокЗначений; 
	СписокЗнч.Добавить(ТипСТМ, , 			ТипСТМ_Отметка);
	СписокЗнч.Добавить(ТипУсловныйСТМ, ,	ТипУсловныйСТМ_Отметка);
	СписокЗнч.Добавить(ТипНеСТМ, ,			ТипНеСТМ_Отметка);
	СписокЗнч.Добавить(ТипПриорити, ,		ТипПриорити_Отметка);
	
	Если СписокЗнч.ОтметитьЭлементы("Выберите типы СТМ") Тогда		
		ФильтрПоТипуСТМ.Очистить();
		
		Для Каждого ТекТип Из СписокЗнч Цикл			
	        Если ТекТип.Пометка Тогда
	            ФильтрПоТипуСТМ.Добавить(ТекТип.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОтобратьПоТипуСТМ();
		
КонецПроцедуры

Процедура ФильтрПоТипуСТМОчистка(Элемент, СтандартнаяОбработка)
	
	ФильтрПоТипуСТМ.Очистить();
	ОтобратьПоТипуСТМ();
	
КонецПроцедуры

Процедура КодПриИзменении(Элемент)
	
	ЕстьОтбор=ЗначениеЗаполнено(Элемент.Значение);
	Если ТипЗнч(Элемент.Значение)=Тип("СписокЗначений") ТОгда
		Отбор.Код.ВидСравнения=ВидСравнения.ВСписке;
	Иначе
		Отбор.Код.ВидСравнения=ВидСравнения.Равно;
	КонецЕсли; 
	
	Отбор.Код.Использование=ЕстьОтбор;		
	
КонецПроцедуры

Процедура ЗаписатьЭлементXML(ЗаписьXML, Имя, Значение) 
	
	Если Значение = "" Тогда
		ЗаписьXML.ДобавитьСтроку("<" + Имя + "/>");
	Иначе
		ЗаписьXML.ДобавитьСтроку("<" + Имя + ">" + Значение + "</" + Имя + ">");
	КонецЕсли;
	
КонецПроцедуры

Функция КорректировкаСпецСимволов(Значение)
	
	//Возврат Значение;
	
   Результат = СтрЗаменить(Значение, "&", "&amp;");
   Результат = СтрЗаменить(Результат, "<", "&lt;");
   Результат = СтрЗаменить(Результат, ">", "&gt;");
   Результат = СтрЗаменить(Результат, """", "&quot;");
   Результат = СтрЗаменить(Результат, "'", "&apos;");
   Результат = СтрЗаменить(Результат, "/", "&#x2F;");	
   Возврат Результат;
   
КонецФункции

//ENT-524 +
Процедура ОстаткиПоПартияМ_ТЗВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Не ДоступностьРеквизитыПартийОфис Тогда
		Возврат;
	КонецЕсли;	
	СтруктураРег = Новый Структура;
	СтруктураРег.Вставить("ПартияКод", ВыбраннаяСтрока.Партия);
	СтруктураРег.Вставить("СкладКод", ВыбраннаяСтрока.Склад.Код);
	     
	ЗаписьРПО = РегистрыСведений.РеквизитыПартийОфис.СоздатьМенеджерЗаписи();
	ЗаписьРПО.ПартияКод = ВыбраннаяСтрока.Партия;
	ЗаписьРПО.Прочитать();

	ФормаРеквизитыПартийОфис = ЗаписьРПО.ПолучитьФорму("ФормаЗаписи", ЭтаФорма);

	ФормаРеквизитыПартийОфис.мСтруктураПараметров = СтруктураРег;
	
	ФормаРеквизитыПартийОфис.ОткрытьМодально();
	
	Если ФормаРеквизитыПартийОфис.мСтруктураПараметров.Свойство("ЕстьИзменения") = Истина Тогда
		Если ФормаРеквизитыПартийОфис.мСтруктураПараметров.ЕстьИзменения = Истина Тогда
			ЗаписьXML = Новый ТекстовыйДокумент;
			ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
			ЗаписьXML.ДобавитьСтроку("<document>"); 
			ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "GPART_CHANGE_OFFICE"); 
			ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
			ЗаписьXML.ДобавитьСтроку("<gpart_change_office>");
			ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "guid", Формат(ЗаписьРПО.ПартияКод,"ЧГ=0")); 
			ЗаписатьЭлементXML(ЗаписьXML, "dvalid", Формат(ЗаписьРПО.СрокГодности,"ДФ=dd.MM.yyyy")); 
			ЗаписатьЭлементXML(ЗаписьXML, "series", КорректировкаСпецСимволов(СокрЛП(ЗаписьРПО.Серия)));
			ЗаписатьЭлементXML(ЗаписьXML, "eancode", Формат(ЗаписьРПО.Баркод,"ЧГ=0")); 
			ЗаписьXML.ДобавитьСтроку("</row>");
			ЗаписьXML.ДобавитьСтроку("</gpart_change_office>");
			ЗаписьXML.ДобавитьСтроку("</document>");
			ВесьТекст = ЗаписьXML.ПолучитьТекст();
			
			ЗаписьXML.Очистить();
			ЗаписьXML = Неопределено;
	
			КодСклада = ВыбраннаяСтрока.Склад.Код;
			МЗ = РегистрыСведений.ОфисАптекаЦелевые.СоздатьМенеджерЗаписи();
			МЗ.Код = 1;
			МЗ.КодАптеки = КодСклада;
			МЗ.ТипУпаковки = "GPART_CHANGE_OFFICE";
			МЗ.Приоритет = 1;
			МЗ.ВерсияФормата = 1;
			МЗ.ИмяФайла = "GPART_CHANGE_OFFICE_" + Формат(КодСклада,"ЧГ=0") + "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
			МЗ.ИдентификаторКодировки = 1;
			МЗ.ХМЛСтрока = ВесьТекст;
			МЗ.Записать();	
			ВыбраннаяСтрока.ОфисСерия = СокрЛП(ЗаписьРПО.Серия);
			ВыбраннаяСтрока.ОфисСрокГодности = ЗаписьРПО.СрокГодности;
			ВыбраннаяСтрока.ОфисШК = ЗаписьРПО.Баркод;
		КонецЕсли;
	КонецЕсли;
	ФормаРеквизитыПартийОфис = Неопределено;
КонецПроцедуры


ПоказыватьМедленно=Ложь;

