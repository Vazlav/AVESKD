Перем МожноЗакрыть;


Процедура Кнопка1Нажатие(Элемент)
	//----------------------------< Снятие фильтра -- даст весь АП >--------------------------------GtG---
	
	УчВАП=СправочникСписок.Отбор.Найти("УчаствуетВАП");	
	Если УчВАП<>Неопределено ТОгда
		УчВап.Использование=Ложь;
	КонецЕсли;	

КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	//----< Установка фильтра на ТОЛЬКО РАБОЧИЕ НАИМЕНОВАНИЯ >--------------------------------GtG---
	УчВАП=СправочникСписок.Отбор.Найти("УчаствуетВАП");	
	Если УчВАП<>Неопределено ТОгда
		УчВАП.ВидСравнения=ВидСравнения.Равно;
		УчВАП.Значение=ИСтина;
		УчВап.Использование=Истина;
	КонецЕсли;	
КонецПроцедуры

Процедура ПриОткрытии()
	//----< Установка фильтра на ТОЛЬКО РАБОЧИЕ НАИМЕНОВАНИЯ >--------------------------------GtG---
	УчВАП=СправочникСписок.Отбор.Найти("УчаствуетВАП");	
	Если УчВАП<>Неопределено ТОгда
		УчВАП.ВидСравнения=ВидСравнения.Равно;
		УчВАП.Значение=ИСтина;
		УчВап.Использование=Истина;
	КонецЕсли;	

	ЭтаФорма.МножественныйВыбор=Истина;
	ЭтаФорма.РежимВыбора=Истина;
	
	//-------- склад для расчета остатков из формы-хозяина ----
	Если СущЭлемФормы("СкладОтправитель",ЭтаФорма.ВладелецФормы)=Истина	Тогда 
		ЭлементыФормы.Склад.Значение=ЭтаФорма.ВладелецФормы.СкладОтправитель;
	ИначеЕсли СущЭлемФормы("Склад",ЭтаФорма.ВладелецФормы)=Истина
		И
		СущЭлемФормы("СкладОтправитель",ЭтаФорма.ВладелецФормы)=Ложь Тогда
		ЭлементыФормы.Склад.Значение=ЭтаФорма.ВладелецФормы.Склад;
	Иначе
		ЭлементыФормы.Склад.Значение="";
	КонецЕсли;		  
	
	ЗапрашиватьКолвоПриВыбореТовара = Истина;
	
КонецПроцедуры

Процедура СамодельныйВыборЗначения  (Значение,КоэффДобавления=1) 
    // Назначение:
	// Выполняет выбор в ТЧ
	// 
    // 
	//--------------------------------------------------------------------------------
	
	Если Значение.ПометкаУдаления=Истина тогда
		Возврат;
	конецЕсли;	
	
	
	ПарамПоиска = Новый  Структура;
	ПарамПоиска.Вставить("Товар",Значение);
	
	Сколько=1; // по умолчанию +1
	
	//Если ЗапрашиватьКолвоПриВыбореТовара=Истина Тогда
	//	ВвестиЧисло(Сколько,"Сколько?",10,0);
	//КонецЕсли; 	
	
	
	
	МассивНайденныхСтрок=ВыбранныеПозиции.НайтиСтроки(ПарамПоиска);
	
	Если МассивНайденныхСтрок.Количество()=0 Тогда
		Если КоэффДобавления=1 Тогда
			//----------------------------< Добавляем только при добавлении КоэффДобавления=1  >--------------------------------GtG---
			НоваяСтрокаВыбТовара=ВыбранныеПозиции.Добавить();
			НоваяСтрокаВыбТовара.Товар=Значение;
			НоваяСтрокаВыбТовара.Колво=Сколько;
		КонецЕсли;  
	Иначе
		СтрокаВТ=МассивНайденныхСтрок[0];
		СтрокаВТ.Колво=СтрокаВТ.Колво+Сколько*КоэффДобавления;
		//----------------------------< Удаляем строку когда 0 и меньше >--------------------------------GtG---
		Если СтрокаВТ.Колво<=0 Тогда
			ВыбранныеПозиции.Удалить( СтрокаВТ);
		КонецЕсли; 	
	КонецЕсли; 	 
 КонецПроцедуры
 
Процедура ДобавитьСтрокуВтаблицуПодбора(СтруктураРезультата) 
    // Назначение:
	// Выполняет выбор в ТЧ
	// 
    // 
	//--------------------------------------------------------------------------------
	КоэффДобавления=1;
	
	//Если Значение.ПометкаУдаления=Истина тогда
	//	Возврат;
	//конецЕсли;	
	
	
	ПарамПоиска = Новый  Структура;
	ПарамПоиска.Вставить("Товар",СтруктураРезультата.Товар);
	ПарамПоиска.Вставить("ЕИТ",СтруктураРезультата.ЕИТ);
	ПарамПоиска.Вставить("ЦенаБезНДС",СтруктураРезультата.ЦенаБезНДС);

	
	МассивНайденныхСтрок=ВыбранныеПозиции.НайтиСтроки(ПарамПоиска);
	
	Если МассивНайденныхСтрок.Количество()=0 Тогда
		ЗаполнитьЗначенияСвойств(ВыбранныеПозиции.Добавить(),СтруктураРезультата);	
	Иначе
		СтрокаВТ=МассивНайденныхСтрок[0];
		СтрокаВТ.Количество=СтрокаВТ.Количество+СтруктураРезультата.Количество;
		СтрокаВТ.СуммаБезНДС = СтрокаВТ.ЦенаБезНДС*СтрокаВТ.Количество;
	КонецЕсли; 	 
	
 КонецПроцедуры

Процедура СправочникСписокВыборЗначения(Элемент, СтандартнаяОбработка, Значение)
	//// Вставить содержимое обработчика.
	//СтандартнаяОбработка= ЛОЖЬ;
	//// Значение в этом случае - массив из одного значения - ЕБАНУЦЦА!
	//СамодельныйВыборЗначения  (Значение[0],1);
	СтандартнаяОбработка= ЛОЖЬ;
	
	ФормаВвода = ПолучитьОбщуюФорму("ФормаПодбораЗначенийТовара");
	ФормаВвода.Количество          = 1;
    ФормаВвода.СпособВвода = СписокВвода;
	ФормаВвода.Товар =  Значение[0];
	СтруктураРезультата = ФормаВвода.ОткрытьМодально();

	Если СтруктураРезультата = неопределено Тогда

		Возврат; 
		
	КонецЕсли;

	ДобавитьСтрокуВтаблицуПодбора(СтруктураРезультата);	
	
	
КонецПроцедуры

Процедура СправочникСписокНаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Сообщить("ОВ подбора "+ВыбранноеЗначение);
КонецПроцедуры

Процедура ЗакончитьПодборПозицийНажатие(Элемент)
	МожноЗакрыть= ИСТИНА ;
	ОповеститьОВыборе(ВыбранныеПозиции);
КонецПроцедуры

Процедура ВыбранныеПозицииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	// Вставить содержимое обработчика.
	
	ТСтрВП=ЭлементыФормы.ВыбранныеПозиции.ТекущаяСтрока;
	
	Если ТСтрВП.Колво<=0 Тогда
		ВыбранныеПозиции.Удалить(ТСтрВП);
	КонецЕсли; 	
	
	

	
	
КонецПроцедуры

Процедура ВыбранныеПозицииПриАктивизацииСтроки(Элемент)
	// Задача:
	// при нажатии кнопок +/- добавляется /удаляется
	// тот товар, который выбран в справочникесписке
	// поэтому нужно при выборе строки перескочить на нужную позицию СС
	//---------------------------------------------------------------------------------
	Попытка
		ЭлементыФормы.СправочникСписок.ТекущаяСтрока= ЭлементыФормы.ВыбранныеПозиции.ТекущаяСтрока.Товар; // спрссылка
	Исключение
		// Не меняем тек строку после удаления последней строки выбранного товара
	КонецПопытки;
	// каждая строка СС - элем ссылка!
	// красиво однако, удобно.
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	
	Если МожноЗакрыть=Ложь Тогда
		Если Вопрос("Вы действительно хотите закрыть окно подбора?	
					| Все набранные позиции будут потеряны!",РежимДиалогаВопрос.ДаНет ,0,КодВозвратаДиалога.Нет)=КодВозвратаДиалога.Да ТОгда
					МожноЗакрыть=Истина;
		КонецЕсли;
	КонецЕсли;			
	Если МожноЗакрыть=Истина ТОгда
		Отказ=Ложь;
	Иначе
		Отказ=Истина;
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура ТолькоСвязанныйНажатие(Элемент)
		ЕСвясП=СправочникСписок.Отбор.Найти("ЕстьСвязкаСПоставщиком");	
	Если ЕСвясП<>Неопределено ТОгда
		ЕСвясП.Установить(Истина,Истина);
	КонецЕсли;	

КонецПроцедуры


МожноЗакрыть=Ложь;
