
Процедура ПриЗаписи(Отказ)
	
	//Товар=ТоварФирмы.ПолучитьОбъект();
	//Товар.ЕстьСвязкаСПоставщиком=Истина;
	//Товар.Записать();
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	//Запрос=Новый Запрос("ВЫБРАТЬ
	//|	isnull(СУММА(1),0) КАК ЕстьЕщеСвязок
	//|ИЗ
	//|	Справочник.СвязкиТовараСПоставщиком КАК СвязкиТовараСПоставщиком
	//|ГДЕ
	//|	СвязкиТовараСПоставщиком.ТоварФирмы = &ТоварФирмы
	//|	И СвязкиТовараСПоставщиком.Ссылка <> &Ссылка");	
	//
	//Запрос.УстановитьПараметр("ТоварФирмы",ТоварФирмы);
	//Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	//
	//Если Запрос.Выполнить().Выгрузить().Получить(0).ЕстьЕщеСвязок=0 тогда // это последняя связка и она удаляется
	//	Товар=ТоварФирмы.ПолучитьОбъект();
	//	Товар.ЕстьСвязкаСПоставщиком=Ложь;
	//	Товар.Записать();
	//КонецЕсли;
	
	
	
КонецПроцедуры

Функция СвязкаСуществует()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЭлементНайден
	|ИЗ
	|	Справочник.СвязкиТовараСПоставщиком КАК СвязкиТовараСПоставщиком
	|ГДЕ
	|	СвязкиТовараСПоставщиком.Поставщик = &Поставщик
	|	И СвязкиТовараСПоставщиком.КодТовараПоставщика = &КодТовараПоставщика
	|	И СвязкиТовараСПоставщиком.ТоварФирмы = &ТоварФирмы и Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("КодТовараПоставщика", КодТовараПоставщика);
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	Запрос.УстановитьПараметр("ТоварФирмы", ТоварФирмы);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой(); 
	
КонецФункции

Процедура ПередЗаписью(Отказ)
	
	Если СвязкаСуществует() Тогда
		#Если Клиент Тогда
			Сообщить("По коду " + КодТовараПоставщика + " уже имеется связка в справочнике. Запись элемента отменена" );
		#КонецЕсли
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры
