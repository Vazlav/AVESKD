 Процедура СправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	 
	Если ДанныеСтроки.СторонаДоговораКомиссии=Перечисления.СтороныДоговораКомиссии.Комитент ТОгда
		 ОформлениеСтроки.Ячейки.Наименование.ЦветФона=Новый Цвет(255,120,120);
	ИначеЕсли 	 ДанныеСтроки.СторонаДоговораКомиссии=Перечисления.СтороныДоговораКомиссии.Комиссионер ТОгда
		 ОформлениеСтроки.Ячейки.Наименование.ЦветФона=Новый Цвет(120,255,120);
	 КонецЕсли; 
	//ENT-1250 
	Если ДанныеСтроки <> Неопределено Тогда  
		Если Не ДанныеСтроки.Ссылка.Бренд = null Тогда
			Макробренд = ДанныеСтроки.Ссылка.Бренд.МакроБренд;
			ОформлениеСтроки.Ячейки.Макробренд.Значение = Макробренд; 
		КонецЕсли;	
	КонецЕсли;
		 
КонецПроцедуры

Процедура СправочникСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	Если Копирование=Истина Тогда
		Предупреждение("К О П И Р О В А Т Ь     Н Е Л Ь З Я   ! ! !");
	КонецЕсли;	
	Отказ=Копирование;
КонецПроцедуры

Процедура НаименованиеПриИзменении(Элемент)
	
	ЕстьОтбор=ЗначениеЗаполнено(Элемент.Значение);
	Если ТипЗнч(Элемент.Значение)=Тип("СписокЗначений") ТОгда
		Отбор.Наименование.ВидСравнения=ВидСравнения.ВСписке;
	Иначе
		Отбор.Наименование.ВидСравнения=ВидСравнения.Содержит;
	КонецЕсли; 
	
	Отбор.Наименование.Использование=ЕстьОтбор;
	
КонецПроцедуры

Процедура КодПриИзменении(Элемент)
	
	ЕстьОтбор=ЗначениеЗаполнено(Элемент.Значение);
	Если ТипЗнч(Элемент.Значение)=Тип("СписокЗначений") ТОгда
		Отбор.Код.ВидСравнения=ВидСравнения.ВСписке;
	Иначе
		Отбор.Код.ВидСравнения=ВидСравнения.Равно;
	КонецЕсли; 
	
	Отбор.Код.Использование=ЕстьОтбор;
	
	
	
КонецПроцедуры

Процедура ДействияФормыкнГрупповаяОбработка(Кнопка)
	
	Обработки.ГрупповаяОбработкаАптек.ПолучитьФорму("Форма").Открыть();
	
КонецПроцедуры

Процедура ОбобщенныйКодПриИзменении(Элемент)
	
	Если ОбобщенныйКод > 0 Тогда
		СписокКодов = Справочники.МестаХранения.ПолучитьСписокКодовАптекПоОбобщенномуКоду(ОбобщенныйКод);
		Если СписокКодов.Количество() = 0 Тогда
			Предупреждение("По коду : " + ОбобщенныйКод + " не найдена цепочка аптек.");	
			Возврат;
		КонецЕсли;
		Отбор.Код.ВидСравнения=ВидСравнения.ВСписке;
		Отбор.Код.Значение = СписокКодов;
		Отбор.Код.Использование=Истина;
	Иначе
		Отбор.Код.ВидСравнения=ВидСравнения.Равно;
		Отбор.Код.Значение = 0;
		Отбор.Код.Использование=Ложь;
	КонецЕсли;
	
	
КонецПроцедуры


Функция ПолучитьМассивСсылокОформленияСтрок(ОформленияСтрок)

    Массив = Новый Массив;

    Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
        Массив.Добавить(ОформлениеСтроки.Данныестроки.Ссылка);
    КонецЦикла;


    Возврат Массив;

КонецФункции // ПолучитьСписокСсылок(ОформленияСтрок)

Функция ПолучитьТаблицаОформленияСтрок(МассивСсылокОформления)

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |	РежимыРаботыАптекСрезПоследних.Аптека КАК Аптека,
        |	РежимыРаботыАптекСрезПоследних.РежимРаботы КАК РежимРаботы
        |ИЗ
        |	РегистрСведений.РежимыРаботыАптек.СрезПоследних(&Период, ) КАК РежимыРаботыАптекСрезПоследних
        |ГДЕ
        |	РежимыРаботыАптекСрезПоследних.Аптека В(&МассивСсылокОформления)";

    Запрос.УстановитьПараметр("МассивСсылокОформления", МассивСсылокОформления);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());

    Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьСписокСсылок(ОформленияСтрок)()

Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	
	МассивСсылокОформления = ПолучитьМассивСсылокОформленияСтрок(ОформленияСтрок);
	ТаблицаДанныхОформленияСтрок = ПолучитьТаблицаОформленияСтрок(МассивСсылокОформления);
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		Данныестроки = ОформлениеСтроки.Данныестроки;
		СтрокаОформленияСтрок = ТаблицаДанныхОформленияСтрок.Найти(ОформлениеСтроки.Данныестроки.Ссылка, "Аптека");
		Если НЕ СтрокаОформленияСтрок = Неопределено Тогда
			Ячейка = ОформлениеСтроки.Ячейки.РежимРаботы;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = СтрокаОформленияСтрок.РежимРаботы;
		Иначе
			Ячейка = ОформлениеСтроки.Ячейки.РежимРаботы;
			Ячейка.ОтображатьТекст = Ложь;			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

//НЭТИ Барданов А.Ю. 30.01.2019 ENT-1217
Процедура ДобавитьСсылкуНаОтчетПоКонтрактам()
	ЭлементыФормы.ДействияФормы.Кнопки.Подменю2.Кнопки.Добавить("КнопкаПерейтиОтчетПоКонтрактам", ТипКнопкиКоманднойПанели.Действие, "Отчет по контрактам аптека-поставщик",Новый Действие("ОткрытьОтчетПоКонтрактам"));
КонецПроцедуры

//НЭТИ Барданов А.Ю. 30.01.2019 ENT-1217
Процедура ОткрытьОтчетПоКонтрактам()	
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные <> Неопределено 
		И НЕ ЭлементыФормы.СправочникСписок.ТекущиеДанные.ЭтоГруппа Тогда  		
		Отчет = Отчеты.ОтчетПоКонтрактамАптекаПоставщик;   	
		ФормаОтчета = Отчет.ПолучитьФорму("ФормаОтчета");
		ФормаОтчета.СформироватьПриОткрытии = Истина;
		ФормаОтчета.КомпоновщикНастроек.Настройки.Отбор.Элементы[0].ПравоеЗначение = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка;			
		ФормаОтчета.Открыть(); 
	КонецЕсли;
КонецПроцедуры	

//НЭТИ Барданов А.Ю. 30.01.2019 ENT-1217
Процедура ПриОткрытии()
	ДобавитьСсылкуНаОтчетПоКонтрактам();
КонецПроцедуры

