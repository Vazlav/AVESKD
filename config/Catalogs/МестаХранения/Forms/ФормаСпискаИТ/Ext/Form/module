Перем СтруктураСправочников;


Функция СоздатьНовогоПровайдера(Спр,ТипПровайдера)
	
	НоваяЗаписьОПровайдере=Справочники.ИТ_ДанныеОПровайдерах.СоздатьЭлемент();
	НоваяЗаписьОПровайдере.Владелец=Спр;
	НоваяЗаписьОПровайдере.ТипПровайдера=ТипПровайдера;
	НоваяЗаписьОПровайдере.Наименование="- не указан -";
	НоваяЗаписьОПровайдере.Записать();
	Возврат НоваяЗаписьОПровайдере.Ссылка;
	
КонецФункции	

Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	
	УстановитьИсходныйЦветКнопки("Сохранить");
	УстановитьИсходныйЦветКнопки("Сохранить1");
	УстановитьИсходныйЦветКнопки("Сохранить2");
	УстановитьИсходныйЦветКнопки("Сохранить3");
	
	
	
	Попытка
		Спр=Элемент.ТекущаяСтрока;
	Исключение
		Возврат;
	КонецПопытки;
	
	Попытка
		Тест=Спр.ЭтоГруппа;
	Исключение
		Возврат;
	КонецПопытки;	
	
	
		ТабличноеПоле2.Очистить();
		Провайдер="";
		ДоговорНомер="";
		ДатаДоговора="";
		ТипСвязи="";
		ТипТерминала="";
		СкоростьПодключения="";
		АбонентскаяПлата="";
		
		
		
		
		ПровайдерЮрЛицо="";
		Провайдер1="";
		ДоговорНомер1="";
		ДатаДоговора1="";
		АбонентскаяПлата1="";
		
		
		Провайдер3="";
		ПровайдерЮрЛицо3="";
		ДоговорНомер3="";
		ДатаДоговора3="";
		
		БТIP=0;
		БТGPRS=0;
		БТPinPad=0;
		БТPayWave=0;
		
		
		//КонтактыЭквайринг.Очистить();
		
		
		Провайдер2="";
		ПровайдерЮрЛицо2="";
		ДоговорНомер2="";
		ДатаДоговора2="";
		//КонтактыТелефонияМоб.Очистить();
        АбонентскаяПлата2="";

		
		
		
		ПровайдерЮрЛицо1="";
		Заявка="";

	
	
	Если Спр.ЭтоГруппа=Истина Тогда
		Возврат;
	КонецЕсли;

	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	ИТ_ДанныеОПровайдерах.Ссылка
	                    |ИЗ
	                    |	Справочник.ИТ_ДанныеОПровайдерах КАК ИТ_ДанныеОПровайдерах
	                    |ГДЕ
	                    |	ИТ_ДанныеОПровайдерах.Владелец = &Аптека");
	
	Запрос.УстановитьПараметр("Аптека",Спр);
	
	Рез=Запрос.Выполнить().Выгрузить();
	
	Если Рез.Количество()=0 ТОгда
		ПрИнет=Справочники.ИТ_ДанныеОПровайдерах.СоздатьЭлемент();
		ПрИнет.Владелец=Спр;
		ПрИнет.ТипПровайдера=Перечисления.ИТ_ТипПровайдера.Интернет;
		ПрИнет.Записать();
		
		ПрТел=Справочники.ИТ_ДанныеОПровайдерах.СоздатьЭлемент();
		ПрТел.Владелец=Спр;
		ПрТел.ТипПровайдера=Перечисления.ИТ_ТипПровайдера.Телефония;
		ПрТел.Записать();
	КонецЕсли;	
	
	СтруктураСправочников=Новый Структура();	
	
	СтруктураСправочников.Вставить("Аптека",Спр);
	
	ОбновитьЗаявки(Спр);
	
	//---------------<Заполняем данные по Интернету>---------------------------// GtG // 26.09.2013 22:13:11	
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ИТ_ДанныеОПровайдерах.Ссылка,
	             |	ИТ_ДанныеОПровайдерах.Владелец,
	             |	ИТ_ДанныеОПровайдерах.Код,
	             |	ИТ_ДанныеОПровайдерах.Наименование,
	             |	ИТ_ДанныеОПровайдерах.Провайдер,
	             |	ИТ_ДанныеОПровайдерах.ТипПровайдера,
	             |	ИТ_ДанныеОПровайдерах.ДоговорНомер,
	             |	ИТ_ДанныеОПровайдерах.ДатаДоговора,
	             |	ИТ_ДанныеОПровайдерах.ТипСвязи,
	             |	ИТ_ДанныеОПровайдерах.ТипТерминала,
	             |	ИТ_ДанныеОПровайдерах.СкоростьПодключения,
	             |	ИТ_ДанныеОПровайдерах.АбонентскаяПлата,
	             |	ИТ_ДанныеОПровайдерах.ПровайдерЮрЛицо,
	             |	ИТ_ДанныеОПровайдерах.БанковскийТерминал_IP,
	             |	ИТ_ДанныеОПровайдерах.БанковскийТерминал_GPRS,
	             |	ИТ_ДанныеОПровайдерах.БанковскийТерминал_PINpad,
	             |	ИТ_ДанныеОПровайдерах.БанковскийТерминал_Бесконтактный
	             |ИЗ
	             |	Справочник.ИТ_ДанныеОПровайдерах КАК ИТ_ДанныеОПровайдерах
	             |ГДЕ
	             |	ИТ_ДанныеОПровайдерах.Владелец = &Аптека";
				 
	//Запрос.УстановитьПараметр("ТипПровайдера",Перечисления.ИТ_ТипПровайдера.Интернет);			 
	
	Рез=Запрос.Выполнить().Выгрузить();
	
	
	
	//---------------<Заполняем провайдеров>---------------------------// GtG // 11.10.2013 20:43:23
	
	
	Стр=Рез.Найти(Перечисления.ИТ_ТипПровайдера.Интернет,"ТипПровайдера");
	
	Если Стр<>Неопределено Тогда
		
		Провайдер=Стр.Провайдер ;
		ПровайдерЮрЛицо=Стр.ПровайдерЮрЛицо;
		ДоговорНомер=Стр.ДоговорНомер;
		ДатаДоговора=Стр.ДатаДоговора;
		ТипСвязи=Стр.ТипСвязи;
		СкоростьПодключения=Стр.СкоростьПодключения;
		АбонентскаяПлата=Стр.АбонентскаяПлата;
		
		
		
		
		СтруктураСправочников.Вставить("Интернет",Стр.Ссылка);
	Иначе
		СтруктураСправочников.Вставить("Интернет",СоздатьНовогоПровайдера(Спр,Перечисления.ИТ_ТипПровайдера.Интернет));	
		
	КонецЕсли;
	
	Стр=Рез.Найти(Перечисления.ИТ_ТипПровайдера.Эквайринг,"ТипПровайдера");
	
	Если Стр<>Неопределено Тогда
		
		Провайдер3=Стр.Провайдер ;
		ПровайдерЮрЛицо3=Стр.ПровайдерЮрЛицо;
		ДоговорНомер3=Стр.ДоговорНомер;
		ДатаДоговора3=Стр.ДатаДоговора;
		
		БТIP=Стр.БанковскийТерминал_IP;
		БТGPRS=Стр.БанковскийТерминал_GPRS;
		БТPinPad=Стр.БанковскийТерминал_PINpad;
		БТPayWave=Стр.БанковскийТерминал_Бесконтактный;
		
		
		
		
		СтруктураСправочников.Вставить("Эквайринг",Стр.Ссылка);
		
	Иначе
		СтруктураСправочников.Вставить("Эквайринг",СоздатьНовогоПровайдера(Спр,Перечисления.ИТ_ТипПровайдера.Эквайринг));	
		
		
		
	КонецЕсли;
	
	Стр=Рез.Найти(Перечисления.ИТ_ТипПровайдера.Телефония,"ТипПровайдера");
	
	Если Стр<>Неопределено Тогда
		
		Провайдер1=Стр.Провайдер ;
		ПровайдерЮрЛицо1=Стр.ПровайдерЮрЛицо;
		ДоговорНомер1=Стр.ДоговорНомер;
		ДатаДоговора1=Стр.ДатаДоговора;
		АбонентскаяПлата1=Стр.АбонентскаяПлата;
		
		СтруктураСправочников.Вставить("Телефония",Стр.Ссылка);
		
	Иначе
		СтруктураСправочников.Вставить("Телефония",СоздатьНовогоПровайдера(Спр,Перечисления.ИТ_ТипПровайдера.Телефония));	
		
		
		
	КонецЕсли;
	
	Стр=Рез.Найти(Перечисления.ИТ_ТипПровайдера.ТелефонияМоб,"ТипПровайдера");
	
	Если Стр<>Неопределено Тогда
		
		Провайдер2=Стр.Провайдер ;
		ПровайдерЮрЛицо2=Стр.ПровайдерЮрЛицо;
		ДоговорНомер2=Стр.ДоговорНомер;
		ДатаДоговора2=Стр.ДатаДоговора;
		АбонентскаяПлата2=Стр.АбонентскаяПлата;
		
		СтруктураСправочников.Вставить("ТелефонияМоб",Стр.Ссылка);
	Иначе
		СтруктураСправочников.Вставить("ТелефонияМоб",СоздатьНовогоПровайдера(Спр,Перечисления.ИТ_ТипПровайдера.ТелефонияМоб));	
	КонецЕсли;
	
КонецПроцедуры

 Процедура СохранитьНажатие(Элемент)   // интернет
	 
	Если ЭлементыФормы.СправочникСписок.ТекущаяСтрока<>СтруктураСправочников.Аптека ТОгда
		 Возврат;
	КонецЕсли; 
	 
	ОбСправочник=СтруктураСправочников.Интернет.ПолучитьОбъект();
	
	ОбСправочник.Провайдер 		=     Провайдер;
	
	ОбСправочник.ДоговорНомер 	=     ДоговорНомер;
	ОбСправочник.ДатаДоговора	=     ДатаДоговора;
	ОбСправочник.ТипСвязи 		=     ТипСвязи;
	//ОбСправочник.ТипТерминала 	=     ТипТерминала;
	ОбСправочник.СкоростьПодключения= СкоростьПодключения ;
	ОбСправочник.АбонентскаяПлата 	= АбонентскаяПлата    ;
	ОбСправочник.ПровайдерЮрЛицо= ПровайдерЮрЛицо;
	
	ОбСправочник.Записать();
	
	ОтметитьСохранение("Сохранить");
	
 КонецПроцедуры

 Процедура Сохранить1Нажатие(Элемент)
	Если ЭлементыФормы.СправочникСписок.ТекущаяСтрока<>СтруктураСправочников.Аптека ТОгда
		 Возврат;
	КонецЕсли; 
	 
	ОбСправочник=СтруктураСправочников.Телефония.ПолучитьОбъект();
	
	ОбСправочник.Провайдер 		=     Провайдер1;
	
	ОбСправочник.ДоговорНомер 	=     ДоговорНомер1;
	ОбСправочник.ДатаДоговора	=     ДатаДоговора1;
	ОбСправочник.АбонентскаяПлата 	= АбонентскаяПлата1    ;
	ОбСправочник.ПровайдерЮрЛицо= ПровайдерЮрЛицо1;
	
	ОбСправочник.Записать();

	ОтметитьСохранение("Сохранить1");

	
 КонецПроцедуры

 Процедура Кнопка1Нажатие(Элемент)
	 Если ПустаяСтрока(Заявка)=Истина тогда 
		 возврат;
	 КонецЕсли;
	 
	 Если ЭлементыФормы.СправочникСписок.ТекущаяСтрока<>СтруктураСправочников.Аптека ТОгда
		 Возврат;
	 КонецЕсли; 
	 
	 //Если Тип.Пустая() Тогда
	 //	Предупреждение("Не выбран тип заявки!");
	 //	Возврат;
	 //КонецЕсли;
	 
	Основание=ЭлементыФормы.ТабличноеПоле2.ТекущаяСтрока.Заявка;
	Если Основание.ДокументОснование.Пустая()=Ложь Тогда
		Основание=Основание.ДокументОснование;
	КонецЕсли;
	
	

	Док=Документы.ИТ_Заявка.СоздатьДокумент();
	Док.Дата=ТекущаяДата();
	Док.Аптека=ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Док.ТекстЗаявки=Заявка;
	ДОк.Тип=Основание.Тип;
	Док.ДокументОснование=Основание;
	
	
	Если Док.ДокументОснование.Пустая()=Ложь Тогда
		Док.Закрыта=Док.ДокументОснование.Закрыта;
		
		Если Док.Дата< Док.ДокументОснование.дата ТОгда
			Док.Дата=Док.ДокументОснование.дата+100;
		КонецЕсли;
		
	КонецЕсли;	
	
	Док.Записать();
	
	ОбновитьЗаявки(ЭлементыФормы.СправочникСписок.ТекущаяСтрока);
	
	
	
	Заявка="";
 КонецПроцедуры

 ПРоцедура ОбновитьЗаявки(Аптека)
	 Запрос=Новый Запрос("ВЫБРАТЬ
	                     |	ИТ_Заявка.Дата КАК Дата,
	                     |	ИТ_Заявка.ТекстЗаявки КАК Текст,
	                     |	ИТ_Заявка.Ссылка КАК Заявка,
	                     |	ИТ_Заявка.Закрыта КАК Закрыта,
	                     |	ВЫБОР
	                     |		КОГДА ИТ_Заявка.ДокументОснование.Ссылка ЕСТЬ NULL 
	                     |			ТОГДА ИСТИНА
	                     |		ИНАЧЕ ЛОЖЬ
	                     |	КОНЕЦ КАК НетОснования,
	                     |	ЕСТЬNULL(ИТ_Заявка.ДокументОснование.Ссылка, ИТ_Заявка.Ссылка) КАК ПолеСортировкиЦепочек,
	                     |	ИТ_Заявка.Тип,
	                     |	ВЫБОР
	                     |		КОГДА ИТ_Заявка.ДокументОснование.Ссылка ЕСТЬ NULL 
	                     |			ТОГДА ИТ_Заявка.Номер
	                     |		ИНАЧЕ NULL
	                     |	КОНЕЦ КАК Номер
	                     |ИЗ
	                     |	Документ.ИТ_Заявка КАК ИТ_Заявка
	                     |ГДЕ
	                     |	ИТ_Заявка.Аптека = &Аптека
	                     |
	                     |УПОРЯДОЧИТЬ ПО
	                     |	Закрыта,
	                     |	ПолеСортировкиЦепочек,
	                     |	Дата");
						 
	Запрос.УстановитьПараметр("Аптека",Аптека);					 
						 
	ЭлементыФормы.ТабличноеПоле2.Значение= Запрос.Выполнить().Выгрузить();
	 
	 
Конецпроцедуры	 

Процедура КоманднаяПанель2ОтобратьАптеки(Кнопка)
	
	Построитель.Выполнить();
	Если Построитель.Результат.Пустой() Тогда
		Предупреждение("По заданным параметрам ничего не найдено!",1);
		Возврат;
	КонецЕсли;
	
	МассивКодов=Построитель.Результат.Выгрузить().ВыгрузитьКолонку("Код");
	
	СписокКодов=Новый СписокЗначений;
	СписокКодов.ЗагрузитьЗначения(МассивКодов);
	
	СправочникСписок.Отбор.Сбросить();
	
	ОтборПоКоду=СправочникСписок.Отбор.Найти("Код");
	ОтборПоКоду.ВидСравнения=ВидСравнения.ВСписке;
	ОтборПоКоду.Значение=СписокКодов;
	ОтборПоКоду.Использование=Истина;
	
	ЭлементыФормы.Панель1.ТекущаяСтраница=ЭлементыФормы.Панель1.Страницы.Аптеки;
	
	
	
	
КонецПроцедуры

Процедура ЗакрытьНажатие(Элемент)
	ЭтаФорма.Закрыть();
КонецПроцедуры

Процедура ТабличноеПоле2Выбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	 ВыбраннаяСтрока.Заявка.ПолучитьОбъект().ПолучитьФорму().ОткрытьМодально();
	 ОбновитьЗаявки(ЭлементыФормы.СправочникСписок.ТекущаяСтрока);
КонецПроцедуры

Процедура ТабличноеПоле2ПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	//---------------<Исходные>---------------------------// GtG // 04.12.2013 20:20:24 
	Если ДанныеСтроки.Закрыта=Истина и ДанныеСтроки.НетОснования=Истина Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(150,255,150);
		ОформлениеСтроки.Шрифт=Новый Шрифт(,,Истина);
	КонецЕсли;	
	
	Если ДанныеСтроки.Закрыта=Ложь и ДанныеСтроки.НетОснования=Истина Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,150,150);
		ОформлениеСтроки.Шрифт=Новый Шрифт(,,Истина);
	КонецЕсли;	
	
	//---------------<комментарии>---------------------------// GtG // 04.12.2013 20:20:31
	Если ДанныеСтроки.Закрыта=Истина и ДанныеСтроки.НетОснования=Ложь Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(150,150,150);
	КонецЕсли;	
	
	Если ДанныеСтроки.Закрыта=Ложь и ДанныеСтроки.НетОснования=Ложь Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,255,255);
	КонецЕсли;	


	
	
	
КонецПроцедуры

Процедура КоманднаяПанель3_действия_с_заявкамиОтветитьНаЗаявку(Кнопка)
	
	ТекущаяЗаявка=ЭлементыФормы.ТабличноеПоле2.ТекущаяСтрока.Заявка;
	Аптека=ТекущаяЗаявка.Аптека;
	Док=Документы.ИТ_Заявка.СоздатьДокумент();
	Док.Аптека=Аптека;
	Док.Дата=ТекущаяДата();
	
	//---------------<Лимит уровней 2: первичная - все вторичные>---------------------------// GtG // 02.10.2013 14:14:31
	
	Если ТекущаяЗаявка.ДокументОснование.Пустая() Тогда
		Док.ДокументОснование=ТекущаяЗаявка;
	Иначе	
	    Док.ДокументОснование=ТекущаяЗаявка.ДокументОснование;
	КонецЕсли;	
	//
	//
	//Запрос=Новый Запрос("ВЫБРАТЬ
	//					|	МАКСИМУМ(ИТ_Заявка.Дата) КАК Дата,
	//					|	ИТ_Заявка.ДокументОснование
	//					|ПОМЕСТИТЬ ПоследняяЗаявка
	//					|ИЗ
	//					|	Документ.ИТ_Заявка КАК ИТ_Заявка
	//					|ГДЕ
	//					|	ИТ_Заявка.ДокументОснование = &ДокументОснование
	//					|
	//					|СГРУППИРОВАТЬ ПО
	//					|	ИТ_Заявка.ДокументОснование
	//					|;
	//					|
	//					|////////////////////////////////////////////////////////////////////////////////
	//					|ВЫБРАТЬ
	//					|	ИТ_Заявка.ТекстЗаявки
	//					|ИЗ
	//					|	ПоследняяЗаявка КАК ПоследняяЗаявка
	//					|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИТ_Заявка КАК ИТ_Заявка
	//					|		ПО ПоследняяЗаявка.Дата = ИТ_Заявка.Дата
	//					|			И ПоследняяЗаявка.ДокументОснование = ИТ_Заявка.ДокументОснование
	//					|;
	//					|
	//					|////////////////////////////////////////////////////////////////////////////////
	//					|УНИЧТОЖИТЬ ПоследняяЗаявка");
	//
	//
	//Запрос.УстановитьПараметр("ДокументОснование",Док.ДокументОснование);
	//
	//Рез=Запрос.Выполнить().Выгрузить();
	//
	//Если рез.Количество()=0 ТОгда
	//		
	//	ИсходныйТекстЗаявки=ТекущаяЗаявка.ТекстЗаявки;
	//Иначе
	//	ИсходныйТекстЗаявки=Рез.Получить(0).ТекстЗаявки;
	//КонецЕсли;
	//
	//
	//ИТД="";
	//Для Ы=1 по СтрЧислоСтрок(ИсходныйТекстЗаявки) Цикл
	//	
	//	ИТД=ИТД+""+СтрПолучитьСтроку(ИсходныйТекстЗаявки,Ы)+Символы.ПС;
	//	
	//КонецЦикла;	
	//
	//
	//
	//ИсходныйТекстЗаявки="<------------ "+ТекущаяЗаявка.Дата+" -------------------------------->
	//|"+ИТД;

	//
	//Док.ТекстЗаявки = Символы.ПС+Символы.ПС+Символы.ПС+ИсходныйТекстЗаявки;
	
	Док.ПолучитьФорму("ФормаДокумента").ОткрытьМодально();
	
	 ОбновитьЗаявки(Аптека);
	
КонецПроцедуры

Процедура КоманднаяПанель3_действия_с_заявкамиЗакрытьЦепочкуЗаявок(Кнопка)
	
	Попытка
		ТекущаяЗаявка=ЭлементыФормы.ТабличноеПоле2.ТекущаяСтрока.Заявка;
	Исключение
		Возврат;
	КонецПопытки;
	
	Если Вопрос("Вы уверены, что хотите закрыть заявку?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
		
		Аптека=ТекущаяЗаявка.Аптека;
		Документы.ИТ_Заявка.МодульМенеджера_ЗакрытьЦепочкуЗаявок(ТекущаяЗаявка);
		ОбновитьЗаявки(Аптека);
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;
КонецПроцедуры

Процедура Быстрый_поискПриИзменении(Элемент)
	БыстрыйПоиск();
КонецПроцедуры

Процедура Быстрый_поискОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	БыстрыйПоиск();
КонецПроцедуры

Процедура БыстрыйПоиск()
	 Запрос=Новый Запрос("ВЫБРАТЬ
	                     |	МестаХранения.Код
	                     |ИЗ
	                     |	Справочник.МестаХранения КАК МестаХранения
	                     |ГДЕ
	                     |	МестаХранения.Наименование ПОДОБНО &Наименование");
						 
	Запрос.УстановитьПараметр("Наименование","%"+СокрЛП(СтрЗаменить(Быстрый_поиск," ","%"))+"%");
	СписокКодов=Новый СписокЗначений;
	
	Рез=Запрос.Выполнить().Выгрузить();
	
	Если Рез.Количество()=0 Тогда
		Предупреждение("Нет таких аптек!",1);
		Возврат;
	КонецЕсли;	
	
	СписокКодов.ЗагрузитьЗначения(Рез.ВыгрузитьКолонку("Код"));
	
	ОтборПоКоду=СправочникСписок.Отбор.Найти("Код");
	ОтборПоКоду.ВидСравнения=ВидСравнения.ВСписке;
	ОтборПоКоду.Использование=Истина;
	ОтборПоКоду.Значение=СписокКодов;
	
	
	Аптека=ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	
	ОбновитьЗаявки(Аптека);

	
КонецПроцедуры	

Процедура ПроблемныеНажатие(Элемент)
	Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	ИТ_Заявка.Аптека.Код КАК Код
	                    |ИЗ
	                    |	Документ.ИТ_Заявка КАК ИТ_Заявка
	                    |ГДЕ
	                    |	ИТ_Заявка.Закрыта = ЛОЖЬ
	                    |	И ИТ_Заявка.ДокументОснование.Ссылка ЕСТЬ NULL 
	                    |	И ВЫБОР
	                    |			КОГДА &PoherType = ИСТИНА
	                    |				ТОГДА ИТ_Заявка.Тип
	                    |			ИНАЧЕ &Тип
	                    |		КОНЕЦ = ИТ_Заявка.Тип");
						
	Запрос.УстановитьПараметр("PoherType",Тип1.Пустая());					
	Запрос.УстановитьПараметр("Тип",Тип1);
	
	СписокКодов=Новый СписокЗначений;
	СписокКодов.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код"));
	
	
	ОтборПоКоду=СправочникСписок.Отбор.Найти("Код");
	ОтборПоКоду.ВидСравнения=ВидСравнения.ВСписке;
	ОтборПоКоду.Использование=Истина;
	ОтборПоКоду.Значение=СписокКодов;
	
	
	Аптека=ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	
	ОбновитьЗаявки(Аптека);

КонецПроцедуры

Процедура ПровайдерПриИзменении(Элемент)
	ПровайдерЮрЛицо=Провайдер.ОсновноеЮрлицо;
	ВыделитьЦветомКнопку("Сохранить");
КонецПроцедуры

Процедура Провайдер1ПриИзменении(Элемент)
	ПровайдерЮрЛицо1=Провайдер1.ОсновноеЮрлицо;
	ВыделитьЦветомКнопку("Сохранить1");

КонецПроцедуры

Процедура СохранитьЭквайрингНажатие(Элемент)
	Если ЭлементыФормы.СправочникСписок.ТекущаяСтрока<>СтруктураСправочников.Аптека ТОгда
		 Возврат;
	КонецЕсли; 
	 
	ОбСправочник=СтруктураСправочников.Эквайринг.ПолучитьОбъект();
	
	ОбСправочник.Провайдер 		=     Провайдер3;
	
	ОбСправочник.ДоговорНомер 	=     ДоговорНомер3;
	ОбСправочник.ДатаДоговора	=     ДатаДоговора3;
	//ОбСправочник.ТипСвязи 		=     ТипСвязи;
	//ОбСправочник.ТипТерминала 	=     ТипТерминала;
	//ОбСправочник.СкоростьПодключения= СкоростьПодключения ;
	//ОбСправочник.АбонентскаяПлата 	= АбонентскаяПлата    ;
	ОбСправочник.ПровайдерЮрЛицо= ПровайдерЮрЛицо3;
	
		
	ОбСправочник.БанковскийТерминал_IP=БТIP;
	ОбСправочник.БанковскийТерминал_GPRS=  БТGPRS;
	ОбСправочник.БанковскийТерминал_PINpad=БТPinPad;
	ОбСправочник.БанковскийТерминал_Бесконтактный=БТPayWave;
	
	ОбСправочник.Записать();

	
	
	

	ОтметитьСохранение("Сохранить3");
	
КонецПроцедуры

Процедура СохранитьТелМобНажатие(Элемент)
	Если ЭлементыФормы.СправочникСписок.ТекущаяСтрока<>СтруктураСправочников.Аптека ТОгда
		 Возврат;
	КонецЕсли; 
	 
	ОбСправочник=СтруктураСправочников.ТелефонияМоб.ПолучитьОбъект();
	
	ОбСправочник.Провайдер 		=     Провайдер2;
	
	ОбСправочник.ДоговорНомер 	=     ДоговорНомер2;
	ОбСправочник.ДатаДоговора	=     ДатаДоговора2;
	ОбСправочник.АбонентскаяПлата 	= АбонентскаяПлата2    ;
	ОбСправочник.ПровайдерЮрЛицо= ПровайдерЮрЛицо2;
	
	ОбСправочник.Записать();

	ОтметитьСохранение("Сохранить2");
КонецПроцедуры

Процедура Провайдер3ПриИзменении(Элемент)
	ПровайдерЮрЛицо3=Провайдер3.ОсновноеЮрлицо;
	ВыделитьЦветомКнопку("Сохранить3");
КонецПроцедуры

Процедура Провайдер2ПриИзменении(Элемент)
	ПровайдерЮрЛицо2=Провайдер2.ОсновноеЮрлицо;
	ВыделитьЦветомКнопку("Сохранить2");
КонецПроцедуры

Процедура ВыделитьЦветомКнопку(ИмяКнопки)
	
	ЭлементыФормы[ИмяКнопки].ЦветФонаКнопки=Новый Цвет(255,150,150);
	
	
КонецПроцедуры	

Процедура ОтметитьСохранение(ИмяКнопки)
	ЭлементыФормы[ИмяКнопки].ЦветФонаКнопки=Новый Цвет(150,255,150);
КонецПроцедуры 	

Процедура УстановитьИсходныйЦветКнопки(ИмяКнопки)
	ЭлементыФормы[ИмяКнопки].ЦветФонаКнопки=Новый Цвет(245,242,221);
КонецПроцедуры 	



Процедура ПровайдерЮрЛицоПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить");
КонецПроцедуры

Процедура ДоговорНомерПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить");
КонецПроцедуры

Процедура ДатаДоговораПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить");
КонецПроцедуры

Процедура ТипСвязиПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить");
КонецПроцедуры

Процедура СкоростьПодключенияПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить");
КонецПроцедуры

Процедура АбонентскаяПлатаПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить");
КонецПроцедуры

Процедура ПровайдерЮрЛицо3ПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить3");

КонецПроцедуры

Процедура ДоговорНомер3ПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить3");

КонецПроцедуры

Процедура ДатаДоговора3ПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить3");

КонецПроцедуры

Процедура ПровайдерЮрЛицо1ПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить1");

КонецПроцедуры

Процедура ДоговорНомер1ПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить1");

КонецПроцедуры

Процедура ДатаДоговора1ПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить1");

КонецПроцедуры

Процедура АбонентскаяПлата1ПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить1");

КонецПроцедуры

Процедура ПровайдерЮрЛицо2ПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить2");
КонецПроцедуры

Процедура ДоговорНомер2ПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить2");
КонецПроцедуры

Процедура ДатаДоговора2ПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить2");
КонецПроцедуры

Процедура АбонентскаяПлата2ПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить2");
КонецПроцедуры

Процедура БТIPПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить3");

КонецПроцедуры

Процедура БТGPRSПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить3");

КонецПроцедуры

Процедура БТPinPadПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить3");

КонецПроцедуры

Процедура БТPayWaveПриИзменении(Элемент)
	ВыделитьЦветомКнопку("Сохранить3");

КонецПроцедуры

Процедура КоманднаяПанель3_действия_с_заявкамиЗаявка(Кнопка)
	
	Док=Документы.ИТ_Заявка.СоздатьДокумент();
	Док.Аптека=ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Док.УстановитьНовыйНомер();
	Док.ПолучитьФорму("ФормаДокумента").ОткрытьМодально();
	
	ОбновитьЗаявки(ЭлементыФормы.СправочникСписок.ТекущаяСтрока);
	
	
КонецПроцедуры

Процедура ТабличноеПоле2ПриАктивизацииСтроки(Элемент)
	
	ТекЗаявка=ЭлементыФормы.ТабличноеПоле2.ТекущаяСтрока.Заявка;
	
	Если ТекЗаявка.ДокументОснование.Пустая()=Ложь Тогда
		ТекЗаявка=ТекЗаявка.ДокументОснование;
	КонецЕсли;	
	
	ЭлементыФормы.Ответить.Заголовок="Комментарий к Заявке №"+ТекЗаявка.Номер+" "+ТекЗаявка.Тип;
КонецПроцедуры


Процедура ПоискПоНомеруЗаявкиПриИзменении(Элемент)
	
	Запрос=Новый Запрос();
	Запрос.Текст="ВЫБРАТЬ
	             |	ИТ_Заявка.Аптека
	             |ИЗ
	             |	Документ.ИТ_Заявка КАК ИТ_Заявка
	             |ГДЕ
	             |	ИТ_Заявка.Номер = &Номер";
				 
	Запрос.УстановитьПараметр("Номер",ПоискПоНомеруЗаявки);
	
	Рез=Запрос.Выполнить();
	
	Если рез.Пустой() ТОгда
		Предупреждение("Нет заявки с таким номером",2);
		Возврат;
	КонецЕсли;
	
	Выб=Рез.Выбрать(); 
	Выб.Следующий();
	Аптека=Выб.Аптека;
	СправочникСписок.Отбор.Сбросить();

	ЭлементыФормы.СправочникСписок.ТекущаяСтрока=Аптека;
	
	
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель3ЗакрытьЗаявку(Кнопка)
	КоманднаяПанель3_действия_с_заявкамиЗакрытьЦепочкуЗаявок("");
КонецПроцедуры

Процедура ПоискПоНомеруЗаявкиОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ПоискПоНомеруЗаявкиПриИзменении(Элемент);
КонецПроцедуры

Процедура КоманднаяПанель3НаПочту(Кнопка)
	 
	 Если ЭлементыФормы.СправочникСписок.ТекущаяСтрока<>СтруктураСправочников.Аптека ТОгда
		 Возврат;
	 КонецЕсли; 
	 
	Основание=ЭлементыФормы.ТабличноеПоле2.ТекущаяСтрока.Заявка;
	Если Основание.ДокументОснование.Пустая()=Ложь Тогда
		Основание=Основание.ДокументОснование;
	КонецЕсли;
	
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	ИТ_Заявка.Дата КАК Дата,
	                    |	ИТ_Заявка.ТекстЗаявки КАК Текст,
	                    |	ИТ_Заявка.Ссылка КАК Заявка,
	                    |	ИТ_Заявка.Закрыта КАК Закрыта,
	                    |	ВЫБОР
	                    |		КОГДА ИТ_Заявка.ДокументОснование.Ссылка ЕСТЬ NULL 
	                    |			ТОГДА ИСТИНА
	                    |		ИНАЧЕ ЛОЖЬ
	                    |	КОНЕЦ КАК НетОснования,
	                    |	ЕСТЬNULL(ИТ_Заявка.ДокументОснование.Ссылка, ИТ_Заявка.Ссылка) КАК ПолеСортировкиЦепочек,
	                    |	ИТ_Заявка.Тип,
	                    |	ВЫБОР
	                    |		КОГДА ИТ_Заявка.ДокументОснование.Ссылка ЕСТЬ NULL 
	                    |			ТОГДА ИТ_Заявка.Номер
	                    |		ИНАЧЕ NULL
	                    |	КОНЕЦ КАК Номер
	                    |ИЗ
	                    |	Документ.ИТ_Заявка КАК ИТ_Заявка
	                    |ГДЕ
	                    |	(ИТ_Заявка.Ссылка = &Основание
	                    |			ИЛИ ИТ_Заявка.ДокументОснование = &Основание)
	                    |	И ИТ_Заявка.Закрыта = ЛОЖЬ
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	Закрыта,
	                    |	ПолеСортировкиЦепочек,
	                    |	Дата");
						 
	Запрос.УстановитьПараметр("Основание",Основание);		
	
    Рез=Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	
	ТекстПисьма="			ЗАЯВКА № "+Основание.НОМЕР+" ОТ "+ Основание.ДАТА+Символы.ПС;
	ТекстПисьма=ТекстПисьма+"Тип заявки: "+Основание.Тип+Символы.ПС;
	ТекстПисьма=ТекстПисьма+"Аптека: "+Основание.Аптека+Символы.ПС;
	ТекстПисьма=ТекстПисьма+"------------------------------------------------------------------------------------"+Символы.ПС;
	ТекстПисьма=ТекстПисьма+"Контактное лицо: "+Основание.Имя+Символы.ПС;
	ТекстПисьма=ТекстПисьма+"Должность: "+Основание.Должность+Символы.ПС;
	ТекстПисьма=ТекстПисьма+"Телефон  : "+Основание.Телефон+Символы.ПС;
	ТекстПисьма=ТекстПисьма+"===================================================================================="+Символы.ПС;
	ТекстПисьма=ТекстПисьма+"                      ИСТОРИЯ ЗАЯВКИ:                                               "+Символы.ПС;
	ТекстПисьма=ТекстПисьма+"------------------------------------------------------------------------------------"+Символы.ПС;
	
	Выб=Рез.Выбрать();
	
	Пока Выб.Следующий() Цикл
		ТекстПисьма=ТекстПисьма+"Дата: "+Выб.Дата+Символы.ПС;
		ТекстПисьма=ТекстПисьма+Выб.Текст+Символы.ПС;
		ТекстПисьма=ТекстПисьма+"------------------------------------------------------------------------------------"+Символы.ПС;
	КонецЦикла;	
	ТекстПисьма=ТекстПисьма+"===================================================================================="+Символы.ПС;
	ТекстПисьма=ТекстПисьма+"                      КОНТАКТЫ ПРОВАЙДЕРОВ:                                         "+Символы.ПС;
	ТекстПисьма=ТекстПисьма+"------------------------------------------------------------------------------------"+Символы.ПС;
	
	Запрос=Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                    |	ИТ_ДанныеОПровайдерах.Провайдер КАК Провайдер,
	                    |	ИТ_КонтактныеЛицаПровайдера.Наименование КАК ФИО,
	                    |	ИТ_КонтактныеЛицаПровайдера.Должность,
	                    |	ИТ_КонтактныеЛицаПровайдера.Телефон,
	                    |	ИТ_КонтактныеЛицаПровайдера.email
	                    |ИЗ
	                    |	Справочник.ИТ_ДанныеОПровайдерах КАК ИТ_ДанныеОПровайдерах
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИТ_КонтактныеЛицаПровайдера КАК ИТ_КонтактныеЛицаПровайдера
	                    |		ПО ИТ_ДанныеОПровайдерах.Провайдер = ИТ_КонтактныеЛицаПровайдера.Владелец
	                    |ГДЕ
	                    |	ИТ_ДанныеОПровайдерах.Владелец = &Аптека
	                    |ИТОГИ ПО
	                    |	Провайдер");
	
	Запрос.УстановитьПараметр("Аптека",ЭлементыФормы.СправочникСписок.ТекущаяСтрока);
	
	Рез=Запрос.Выполнить();
	Если Рез.Пустой() ТОгда
		
		ТекстПисьма=ТекстПисьма+"Нет данных"+Символы.ПС;
	Иначе
		Выб=Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока Выб.Следующий() Цикл
			
			ТекстПисьма=ТекстПисьма+"Провайдер :"+ Выб.Провайдер+Символы.ПС;
			
			КЛ=Выб.Выбрать(ОбходРезультатаЗапроса.Прямой);
			
			Пока КЛ.Следующий() Цикл
				ТекстПисьма=ТекстПисьма+"	"+ КЛ.ФИО+"    "+КЛ.Должность+"   "+КЛ.Телефон+"   "+КЛ.email+Символы.ПС;
			КонецЦикла;	
		КонецЦикла;
	КонецЕсли;
   
	
	
	//------------------<ШАБЛОН ПОСЛАТЬ ПИСЬМО>----------------------GtG----
	
	МПочтец= Обработки.Почтарь;
	Почтец=МПочтец.Создать();
	Почтец.Рассылка.Очистить();
	Почтец.Автоотправка=ИСТИНА;
	Почтец.Рассылка.Добавить("mmpk@list.ru");
	Почтец.Рассылка.Добавить("a5it@bk.ru");
	Почтец.Рассылка.Добавить("e.zhigulskiy@id-soft.ru");
	//Почтец.Рассылка.Добавить("n.gorodskiy@id-soft.ru");
	
	
	Почтец.Тема="### Заявка № " +Основание.НОМЕР+" от "+ТекущаяДата()+" проблема возникла "+Основание.Дата;
	Почтец.ТекстПисьма=ТекстПисьма;
	Почтец.функция_Послать();
	
	Предупреждение("Отправлено",2);
	
	Почтец=Неопределено;
	
	//--------------------------------------------------------GtG----КОНЕЦ--
КонецПроцедуры




 //

Построитель.Текст="ВЫБРАТЬ
                  |	ИТ_ДанныеОПровайдерах.Владелец.Код КАК Код
                  |ИЗ
                  |	Справочник.ИТ_ДанныеОПровайдерах КАК ИТ_ДанныеОПровайдерах
                  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИТ_Провайдер КАК ИТ_Провайдер
                  |		ПО ИТ_ДанныеОПровайдерах.Провайдер = ИТ_Провайдер.Ссылка
                  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИТ_ЮрлицоПровайдера КАК ИТ_ЮрлицоПровайдера
                  |		ПО ИТ_ДанныеОПровайдерах.ПровайдерЮрЛицо = ИТ_ЮрлицоПровайдера.Ссылка
                  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИТ_КонтактныеЛицаПровайдера КАК ИТ_КонтактныеЛицаПровайдера
                  |		ПО ИТ_ДанныеОПровайдерах.Провайдер = ИТ_КонтактныеЛицаПровайдера.Владелец
                  |{ГДЕ
                  |	ИТ_Провайдер.Ссылка КАК Провайдер,
                  |	ИТ_Провайдер.Наименование КАК Провайдер_Наименование,
                  |	ИТ_ЮрлицоПровайдера.Наименование КАК ЮрЛицо_провайдера,
                  |	ИТ_ЮрлицоПровайдера.ИНН КАК ЮрЛицо_провайдера_ИНН,
                  |	ИТ_ЮрлицоПровайдера.КПП КАК ЮрЛицо_провайдера_КПП,
                  |	ИТ_ДанныеОПровайдерах.ТипПровайдера,
                  |	ИТ_ДанныеОПровайдерах.ДоговорНомер,
                  |	ИТ_ДанныеОПровайдерах.ДатаДоговора,
                  |	ИТ_ДанныеОПровайдерах.ТипСвязи,
                  |	ИТ_ДанныеОПровайдерах.ТипТерминала,
                  |	ИТ_ДанныеОПровайдерах.СкоростьПодключения,
                  |	ИТ_ДанныеОПровайдерах.АбонентскаяПлата,
                  |	ИТ_КонтактныеЛицаПровайдера.Ссылка.*,
                  |	ИТ_КонтактныеЛицаПровайдера.Наименование КАК ФИО,
                  |	ИТ_КонтактныеЛицаПровайдера.Должность,
                  |	ИТ_КонтактныеЛицаПровайдера.Телефон,
                  |	ИТ_КонтактныеЛицаПровайдера.email,
                  |	ИТ_КонтактныеЛицаПровайдера.Примечание}";


 