Перем с_ЗначениеПолей ;

Процедура ПроверитьДоступностьРеквизитов()
	
	
	//Начало НЭТИ Барданов А.Ю. 16.01.2019 ENT-702
	ЭлементыФормы.ПолеЗаведующих.ТолькоПросмотр = Истина;
	//Конец НЭТИ Барданов А.Ю. 16.01.2019 ENT-702
	
	
	НаборЗаписей = РегистрыСведений.ПраваНаОбъекты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Метаданные.Справочники.МестаХранения.Имя);
	НаборЗаписей.Отбор.Пользователь.Установить(ПараметрыСеанса.ТекущийСотр);
	    
	НаборЗаписей.Прочитать();
	КоличествоЗаписей = НаборЗаписей.Количество();
	
	Если КоличествоЗаписей > 0 Тогда
		Если НаборЗаписей.Получить(0).ПолныеПрава  Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Для каждого стр из ЭлементыФормы Цикл
		Если ТипЗнч(стр) = Тип("ПолеВвода") Тогда
			стр.ТолькоПросмотр = Истина;	
		Иначе
			стр.Доступность = Ложь;
		КонецЕсли;
	КонецЦикла;

	ЭлементыФормы.ОсновныеДействияФормы.Доступность = Ложь;	
	
	Если КоличествоЗаписей> 0 Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Доступность = Истина;
	КонецЕсли;
	
	Для каждого стр из НаборЗаписей Цикл
		Если ЭлементыФормы.найти(стр.Реквизит) = Неопределено Тогда
			Для каждого текЭл из ЭлементыФормы Цикл
				Если ТипЗнч(текЭл) = Тип("ТабличноеПоле") и текЭл.Данные = стр.Реквизит Тогда
					текЭл.Доступность = Истина;	
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если ТипЗнч(ЭлементыФормы[стр.Реквизит]) = Тип("ПолеВвода") Тогда
				ЭлементыФормы[стр.Реквизит].ТолькоПросмотр = Ложь;
			ИначеЕсли ТипЗнч(ЭлементыФормы[стр.Реквизит]) = Тип("ТабличноеПоле") Тогда
				ЭлементыФормы[стр.Реквизит].Доступность = Истина;
				Если стр.Реквизит = "ПолеЗаведующих" Тогда
					//Начало НЭТИ Барданов А.Ю. 16.01.2019 ENT-702 
					//ЭлементыФормы[стр.Реквизит].ТолькоПросмотр = Ложь;
					ЭлементыФормы.ИзменитьТЧЗаведующие.Доступность = Истина;
					//Конец НЭТИ Барданов А.Ю. 16.01.2019 ENT-702     
				КонецЕсли; 
			Иначе
				ЭлементыФормы[стр.Реквизит].Доступность = Истина;
			КонецЕсли;
		КонецЕсли;
		//ЭлементыФормы.ПолеЗаведующих.Данные
	КонецЦикла;
	
	ЭлементыФормы.Изменения.Доступность = Истина;
	ЭлементыФормы.кнЗаписатьДопРеквизиты.Доступность = Истина;
	ЭлементыФормы.КнопкаПечатьРуководителей.Доступность = Истина;
	//Начало НЭТИ Барданов А.Ю. 16.01.2019 ENT-702
	ЭлементыФормы.ПолеЗаведующих.ТолькоПросмотр = Истина;
	//Конец НЭТИ Барданов А.Ю. 16.01.2019 ENT-702
КонецПроцедуры

Процедура ЗаполнитьТекущийРежимРаботы()
	
	ЭлементыФормы.РежимРаботы.Значение = Справочники.МестаХранения.ПолучитьРежимРаботыНаДату(Ссылка, ТекущаяДата());
	
	
КонецПроцедуры


Процедура ПриОткрытии()
	
	Если НЕ ЭтоНовый() Тогда
		Выборка = РегистрыСведений.РеквизитыСправочниковДляИстории.Выбрать(Новый Структура("Объект","МестаХранения"),);
		Пока Выборка.Следующий() Цикл
			с_ЗначениеПолей.Вставить(Выборка.РеквизитСправочника,Вычислить(Выборка.РеквизитСправочника));
		КонецЦикла;	
		
		ЗаполнитьТекущийРежимРаботы();
		//Начало НЭТИ Барданов А.Ю. 16.01.2019 ENT-702
		ЗаписиЗаведующиеИзРегистра = Справочники.МестаХранения.ЗаписиЗаведующиеИзРегистра(Код);	
		ЗаведующиеИзРегистра.Загрузить(ЗаписиЗаведующиеИзРегистра);   
		//Конец НЭТИ Барданов А.Ю. 16.01.2019 ENT-702
	Иначе
		КоэффициентЦУС_A = 1;
		КоэффициентЦУС_B = 1;
		КоэффициентЦУС_C = 1;
		КоэффициентЦУС_D = 1;
		АптекаНаНовомПО = Истина;
		УчетВЗакупке = Истина;
	КонецЕсли;
	
	ЭтаФорма.Панель.Страницы.ИТОтдел.Видимость=РольДоступна("ИТОтдел");
	//Если Не РольДоступна("супер_Администратор") Тогда
		Если Константы.ИспользоватьОграничениеПравНаСправочники.Получить() = Истина Тогда	
			ПроверитьДоступностьРеквизитов();
		КонецЕсли;
	//КонецЕсли;
	Если НЕ ЭтоНовый() Тогда
		Если ЭлементыФормы.СтараяАптека.Доступность = Истина Тогда
			//SKD-55 1) запретить менять «старую аптеку» в аптеках, которые являются старой аптекой для другой аптеки.
			//Т.е. менять «старую аптек» можно только в аптеке верхнего уровня:
			Запрос  = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ПерелицензированныеАптеки.НоваяАптека
			|ИЗ
			|	РегистрСведений.ПерелицензированныеАптеки КАК ПерелицензированныеАптеки
			|ГДЕ
			|	ПерелицензированныеАптеки.СтараяАптека = &ЭтаАптека";
			Запрос.УстановитьПараметр("ЭтаАптека",Ссылка);
			Рез = Запрос.Выполнить();
			Если НЕ Рез.Пустой() Тогда
				ЭлементыФормы.СтараяАптека.Доступность = Ложь;
				ЭлементыФормы.СтараяАптека.Подсказка = "Менять «старую аптеку» можно только в аптеке верхнего уровня";
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	

	УправлениеКонтактнойИнформацией.ПрочитатьКонтактнуюИнформацию(НаборКонтактнойИнформации, Ссылка);	
	ЗаполнитьЗначенияКИ();
	
	
	УправлениеДоступностьюЭлементовФормы_Инкассация();
	
	Если РольДоступна("Техподдержка") Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Доступность = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнОперации.Доступность = Истина;
	КонецЕсли;
	
	ЭлементыФормы.НадписьПроцент.Значение = Строка(НормативСписания.Процент);
	
	//Начало НЭТИ Барданов А.Ю. 30.01.2019 ENT-1217
	ДобавитьСсылкуНаОтчетПоКонтрактам();
	//Конец НЭТИ Барданов А.Ю. 30.01.2019 ENT-1217   	
КонецПроцедуры



Процедура СправочникСписокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	// Вставить содержимое обработчика.
	Если НоваяСтрока тогда
		Элемент.ТекущиеДанные.Наименование = "Касса №"+Элемент.ТекущиеДанные.код;
	Конецесли;	
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель2ГенераторМХ(Кнопка)
	// Вставить содержимое обработчика.
	
	ГенМХ= Обработки.ГенераторМестХранения.ПолучитьФорму("Форма",ЭтаФорма,12345);
	ГенМХ.Открыть();
	
	ГенМХ.ЭлементыФормы.Склад.Значение=ЭтотОбъект.Ссылка;
	
	
	
КонецПроцедуры


Процедура Кнопка1Нажатие(Элемент)
	СтандартнаяОбработка=Ложь;
	
	Ответ=Вопрос("Сгенерировать каталог?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.ДА,""); 
	
	Если Ответ=КодВозвратаДиалога.Да ТОгда
		КаталогОбмена=""+Константы.КаталогФТП.Получить()+"apt_"+Формат(Код,"ЧГ=0")+"\in\";
	Иначе	 
		ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДВФ.МножественныйВыбор=Ложь;
		
		ДВФ.Заголовок="Каталог обмена?";
		Если ДВФ.Выбрать() Тогда
			КаталогОбмена=СокрЛП(ДВФ.Каталог);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Модифицированность=Истина Тогда
		Если Вопрос("Закрыть без сохранения?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Нет,"Закрыть без сохранения?")=КодВозвратаДиалога.Да Тогда
			 СтандартнаяОбработка=ЛОжь;
		Иначе	
			
			
			//------------------<тип налогообложения>-------------------GtG----28.12.2007
			Если ТипНалогообложения.Пустая() = Истина Тогда
				ПРедупреждение("Не заполнен тип налогообложения! 
				|Должно быть: Москва - НДС, Регионы и МО - ЕНВД");
				Отказ=Истина;
			КонецЕсли; 
			
			//------------------<Тип склада>-------------------GtG----28.12.2007
			Если ТипСклада.Пустая()=Истина ТОгда
				ПРедупреждение("Не заполнен тип склада!");
				Отказ=Истина;
				
			Иначе
				//------------------<Номер аптеки у розничного склада>-------------------GtG----28.12.2007
				Если ТипСклада=Перечисления.ТипыМХ.Розн ТОгда
					Если НомерАптеки=0 ТОгда
						ПРедупреждение("Не указан номер аптеки!");
						Отказ=Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
			
			//------------------<ГруппаТТ>-------------------GtG----28.12.2007
			Если ГруппаТТ.Пустая()=Истина Тогда
				ПРедупреждение("Не заполнена ГТТ !");
			КонецЕсли; 	
			
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры


Процедура ГенераторЕМЭЙЛАНажатие(Элемент)
	
	Если НомерАптеки =0 ТОгда
		ПРедупреждение("Невозможно сгенерить адрес аптеки! Не указан номер аптеки");
		Возврат;
	КонецЕсли; 
	
	 Мэйл = "msk"+стрЗаменить(Строка(Формат(НомерАптеки,"ЧЦ=4; ЧВН=")),Символы.НПП,"")+"@apt.366.ru";
	
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	
	тДом = ?(ПустаяСтрока(Дом)," ", "" + Дом + ".,");
	тБрендНаименование = ?(ПустаяСтрока(Бренд.НаименованиеДляМестХранения),"",""+Бренд.НаименованиеДляМестХранения+",");
	//тТипЛицензии = ?(ПустаяСтрока(ТипЛицензииАптки)," Аптека №", " "+ТипЛицензииАптки+" №");
	тТипЛицензии = ?(ПустаяСтрока(ТипЛицензииАптки),"№", ""+ТипЛицензииАптки+" №");//ENT-500
	тОбласть = "";
	Если ЗначениеЗаполнено(СубъектРФ) Тогда
		
		Если СубъектРФ.Наименование = "Московская область" Тогда
			тОбласть = " МО,"
		ИначеЕсли СубъектРФ.Наименование = "Ленинградская область" Тогда
			тОбласть = " ЛО,"
		КонецЕсли; 
	КонецЕсли; 
	тКомментарий = ?(ПустаяСтрока(Комментарии)," ",Комментарии + ",");
	тКомиссия = ?(ЗначениеЗаполнено(ФирмаКомитент)," (комиссионер) ","");
	ФирмаКомиссионер =  ?(ЗначениеЗаполнено(ФирмаКомитент)," (комитент) ","");  //<---- по странным мотивам бухгалтерия попросила вместо комиссионера писать комитент
	Наименование                                                              = тБрендНаименование +тОбласть+ Город+", "+ Улица+", " + тДом + тКомментарий + тТипЛицензии+СтрЗаменить(НомерАптеки, Символы.НПП, "");
	НаименованиеДляБухгалтерии           =""+Город+", ул. "+ Улица + тДом + ФирмаКомиссионер + тКомментарий;
	НаименованиеДляЗУП                                              =""+Город+", ул. "+ Улица + тДом + ФирмаКомиссионер + тКомментарий + Бренд;
	НаименованиеДляЧеков = "" + ?(ПочтовыйИндекс>0, СтрЗаменить(ПочтовыйИндекс, Символы.НПП, "")+", ","")
	+ ?(НЕ ПустаяСтрока(тОбласть), СокрЛП(тОбласть)+" ","")  
	+ ?(НЕ ПустаяСтрока(Город), "" +Город + ", ","") + ?(НЕ ПустаяСтрока(Улица),""+ Улица+", ","") + ?(ПустаяСтрока(Дом),"", "" + Дом + "., ") 
	+ тТипЛицензии + СтрЗаменить(НомерАптеки, Символы.НПП, ""); //ENT-500
	
КонецПроцедуры



Процедура Кнопка3Нажатие(Элемент)
	Предупреждение("Зайти на сайт LogMeIn.Com, Выбрать компьютер, нажать изменить,
	| Ярлык на рабочем столе, нажать правой кнопкой мышки и скопировать в буфер ссылку
	| Вставить ее в поле Ярлык LogMeIn,
	| Должно получиться что-то вроде:
	| https://secure.logmein.com/mycomputers_connect.asp?lang=ru&shortcut= ... далее в одно слово жуткая ахинея из цифирок и буковок
	|Cохранить. Проверить.");
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если НЕ ЭтоГруппа Тогда
		Если НЕ  ЗначениеЗаполнено(Фирма) Тогда
			Сообщить("Не заполнена фирма. Элемент не сохранен.");	
			Отказ = Истина;
		КонецЕсли;
		
		Если  НЕ  ЗначениеЗаполнено(Бренд) Тогда
			Сообщить("Не заполнена Бренд аптечной сети. Элемент не сохранен.");	
			Отказ = Истина;
		КонецЕсли;	
		Если НЕ  ЗначениеЗаполнено(ТипСклада) Тогда
			Сообщить("Не заполнен тип склада. Элемент не сохранен.");	
			Отказ = Истина;
		КонецЕсли;
		
		Если НЕ  ЗначениеЗаполнено(ДоставкаСоСклада_Дней) Тогда
			Сообщить("Не заполнен реквизит ""Доставка со склада (дней)"" (закладка ""Доп реквизиты""), элемент не сохранен.");           
			Отказ = Истина;
		КонецЕсли;
		
		Если НЕ  ЗначениеЗаполнено(СубъектРФ) Тогда
			Сообщить("Не заполнен субъект РФ. Элемент не сохранен.");	
			Отказ = Истина;
		КонецЕсли;		
		
		Если (ПустаяСтрока(НаименованиеДляЧеков)=Истина) и (СтатусАптеки = Перечисления.СтатусыАптеки.Р) Тогда
			Сообщить("Для аптеки, находящейся в статусе ""Работает"", необходимо сгенерировать наименование для чеков. Обратитесь в отдел открытия аптек.");
			Отказ=Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(АтрибутИнкассации) Тогда
		
			Если АтрибутИнкассации.Поставщик <> Фирма.ФирмаКакПоставщик Тогда
			
				Сообщить("Указанное значение реквизита ""Атрибут инкассации"" не соответствует Юр.лицу Аптеки (реквизиту ""Фирма"")");
				Отказ = Истина;
			
			КонецЕсли; 
		
		КонецЕсли; 
		
		
		//Начало НЭТИ Барданов А.Ю. 08.02.2019 ENT-1261
		Если ЭтоНовый() Тогда
			Если НЕ  ЗначениеЗаполнено(Макрорегион) Тогда
				Сообщить("Не заполнен Макрорегион. Элемент не сохранен.");	
				Отказ = Истина;
			КонецЕсли;		
		КонецЕсли;
		//Конец НЭТИ Барданов А.Ю. 08.02.2019 ENT-1261
	КонецЕсли;	
	
	Если ЭтоНовый() Тогда
		НоваяСтрока = Изменения.Добавить();
		НоваяСтрока.Дата = ТекущаяДата();
		НоваяСтрока.Пользователь = ПараметрыСеанса.ТекущийСотр;
		НоваяСтрока.Комментарий = "Ввод нового элемента";
	Иначе		
		Для каждого стр из с_ЗначениеПолей Цикл
			НовоеЗначение = Вычислить(стр.Ключ);
			Если стр.Значение <> НовоеЗначение Тогда
				НоваяСтрока = Изменения.Добавить();
				НоваяСтрока.Дата = ТекущаяДата();
				НоваяСтрока.Пользователь = ПараметрыСеанса.ТекущийСотр;
				НоваяСтрока.Реквизит = стр.Ключ;
				НоваяСтрока.ЗначениеДо = стр.Значение;
				НоваяСтрока.ЗначениеПосле = НовоеЗначение;
				
				с_ЗначениеПолей.Вставить(стр.Ключ,НовоеЗначение);
				//стр.Значение = НовоеЗначение;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	
	Если КатегорияАптекиSAS = 0 И ЗначениеЗаполнено(Бренд) и ЗначениеЗаполнено(КатегорияUMG) и ЗначениеЗаполнено(СубъектРФ) Тогда
		КатегорияАптекиSAS = ОпределитьКатегориюSAS();
	КонецЕсли;
	
	//Попытка
	//	Если НЕ ПустаяСтрока(КаталогОбмена) Тогда
	//		КаталогОбъект = Новый Файл(КаталогОбмена);
	//		Если НЕ КаталогОбъект.Существует() Тогда
	//			Попытка
	//				СоздатьКаталог(КаталогОбмена);
	//			Исключение
	//				Сообщить("Не удалось создать каталог : " + КаталогОбмена);
	//			КонецПопытки;
	//		КонецЕсли;
	//	КонецЕсли;
	//Исключение
	//КонецПопытки;
	

	
КонецПроцедуры

Процедура ПосмотретьВБраузереНажатие(Элемент)
	ОМ_СправочнаяСлужба.ОМСС_ПоказатьВБраузере(АдресАптекиНаСайте);
КонецПроцедуры

Процедура ЗапуститьПросмотрНажатие(Элемент)
	
	Если НЕ ПустаяСтрока(АдресКамеры) Тогда
		ЗапуститьПриложение(АдресКамеры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьШаблоны()
	
	ШаблоныМатрицНЗ.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ШаблоныМатрицНЗПоАптекам.Шаблон
	               |ИЗ
	               |	РегистрСведений.ШаблоныМатрицНЗПоАптекам КАК ШаблоныМатрицНЗПоАптекам
	               |ГДЕ
	               |	ШаблоныМатрицНЗПоАптекам.Аптека = &Аптека
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ШаблоныМатрицНЗПоАптекам.Шаблон.Наименование";
	Запрос.УстановитьПараметр("Аптека",Ссылка);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементыФормы.ШаблоныМатрицНЗ.Значение = Рез.Выгрузить();
	
	
	
	
	
КонецПроцедуры

Процедура ПоказатьДопреквизиты()
	Запрос  = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДопРеквизитыМестХранений.Широта,
	               |	ДопРеквизитыМестХранений.Долгота,
	               |	ДопРеквизитыМестХранений.МобильныйБухгалтер,
	               |	ДопРеквизитыМестХранений.ОфисныйБухгалтер,
	               |	ДопРеквизитыМестХранений.ПриоритетПриРаспределенииЗаказа,
	               |	ДопРеквизитыМестХранений.РежимнаяАптека,
	               |	ДопРеквизитыМестХранений.ПроцентМотивации,
	               |	ДопРеквизитыМестХранений.КатегорияАптекиПоТО,
	               |	ДопРеквизитыМестХранений.МуниципальноеОбразование,
	               |	ДопРеквизитыМестХранений.ПорядковыйНомерОбъектаТорговли,
	               |	ДопРеквизитыМестХранений.ИДФайлаУведомления,
	               |	ДопРеквизитыМестХранений.КадастровыйНомерЗдания,
	               |	ДопРеквизитыМестХранений.КадастровыйНомерПомещения,
	               |	ДопРеквизитыМестХранений.ОбобщающийКод
	               |ИЗ
	               |	Справочник.ДопРеквизитыМестХранений КАК ДопРеквизитыМестХранений
	               |ГДЕ
	               |	ДопРеквизитыМестХранений.Аптека = &Аптека";
	Запрос.УстановитьПараметр("Аптека",Ссылка);
	Рез = Запрос.Выполнить();
	Если НЕ Рез.Пустой() Тогда
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		
		Для каждого стр из Рез.Колонки Цикл
			ЭлементыФормы[стр.Имя].Значение = Выборка[стр.Имя];
		КонецЦикла;

	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПерелицензированныеАптеки.СтараяАптека
	               |ИЗ
	               |	РегистрСведений.ПерелицензированныеАптеки КАК ПерелицензированныеАптеки
	               |ГДЕ
	               |	ПерелицензированныеАптеки.НоваяАптека = &НоваяАптека";
	Запрос.УстановитьПараметр("НоваяАптека",Ссылка);
	Рез = Запрос.Выполнить();
	Если НЕ Рез.Пустой() Тогда
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		СтараяАптека = Выборка.СтараяАптека;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элемент.ТекущаяСтраница = Элемент.Страницы.Маркетинг Тогда
		ПоказатьШаблоны();
	ИначеЕсли Элемент.ТекущаяСтраница = Элемент.Страницы.ДопРеквизиты Тогда
		ПоказатьДопРеквизиты();
	КонецЕсли;
	
КонецПроцедуры

Процедура кнЗаписатьДопРеквизитыНажатие(Элемент)
	
	Если ЗначениеЗаполнено(СтараяАптека) Тогда
		//ОбобщающийКод = Справочники.МестаХранения.ПолучитьОбобщенныйКод(Ссылка);
		ОбобщающийКод = Справочники.МестаХранения.ПолучитьОбобщенныйКод(СтараяАптека);
	Иначе
		ОбобщающийКод = Код;
	КонецЕсли;
	
	Запрос  = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДопРеквизитыМестХранений.Ссылка КАК СсылкаНаДопРеквизиты,
	               |	ДопРеквизитыМестХранений.Широта,
	               |	ДопРеквизитыМестХранений.Долгота,
	               |	ДопРеквизитыМестХранений.МобильныйБухгалтер,
	               |	ДопРеквизитыМестХранений.ОфисныйБухгалтер,
	               |	ДопРеквизитыМестХранений.ПриоритетПриРаспределенииЗаказа,
	               |	ДопРеквизитыМестХранений.РежимнаяАптека,
	               |	ДопРеквизитыМестХранений.ПроцентМотивации,
	               |	ДопРеквизитыМестХранений.КатегорияАптекиПоТО,
	               |	ДопРеквизитыМестХранений.МуниципальноеОбразование,
	               |	ДопРеквизитыМестХранений.ПорядковыйНомерОбъектаТорговли,
	               |	ДопРеквизитыМестХранений.ИДФайлаУведомления,
	               |	ДопРеквизитыМестХранений.КадастровыйНомерЗдания,
	               |	ДопРеквизитыМестХранений.КадастровыйНомерПомещения,
	               |	ДопРеквизитыМестХранений.ОбобщающийКод
	               |ИЗ
	               |	Справочник.ДопРеквизитыМестХранений КАК ДопРеквизитыМестХранений
	               |ГДЕ
	               |	ДопРеквизитыМестХранений.Аптека = &Аптека";
	Запрос.УстановитьПараметр("Аптека",Ссылка);
	Рез = Запрос.Выполнить();
	Если НЕ Рез.Пустой() Тогда
		
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		ДопОбъект = Выборка.СсылкаНаДопРеквизиты.ПолучитьОбъект();
		Для каждого стр из Рез.Колонки Цикл
			Если стр.Имя = "СсылкаНаДопРеквизиты" Тогда
				Продолжить;
			КонецЕсли;
			ДопОбъект[стр.Имя] = ЭлементыФормы[стр.Имя].Значение;
		КонецЦикла;
		ДопОбъект.Записать();
	Иначе
		ДопОбъект = Справочники.ДопРеквизитыМестХранений.СоздатьЭлемент();
		ДопОбъект.Аптека = Ссылка;
		ДопОбъект.Наименование = Наименование;
		ДопОбъект.Широта = Широта;
		ДопОбъект.Долгота = Долгота;
		ДопОбъект.МобильныйБухгалтер = МобильныйБухгалтер;
		ДопОбъект.ОфисныйБухгалтер = ОфисныйБухгалтер;
		ДопОбъект.ПриоритетПриРаспределенииЗаказа = ПриоритетПриРаспределенииЗаказа;
		ДопОбъект.РежимнаяАптека = РежимнаяАптека;
		ДопОбъект.ПроцентМотивации = ПроцентМотивации;
		ДопОбъект.КатегорияАптекиПоТО = КатегорияАптекиПоТО;
		ДопОбъект.МуниципальноеОбразование = МуниципальноеОбразование;
		
		ДопОбъект.ПорядковыйНомерОбъектаТорговли= ПорядковыйНомерОбъектаТорговли;
		ДопОбъект.ИДФайлаУведомления = ИДФайлаУведомления;
		ДопОбъект.КадастровыйНомерЗдания = КадастровыйНомерЗдания;
		ДопОбъект.КадастровыйНомерПомещения = КадастровыйНомерПомещения;
		ДопОбъект.ОбобщающийКод = ОбобщающийКод;
		
		ДопОбъект.Записать();		
	КонецЕсли;
	
	Если СтараяАптека.Пустая() Тогда
		НЗ = РегистрыСведений.ПерелицензированныеАптеки.СоздатьНаборЗаписей();
		НЗ.Отбор.НоваяАптека.Установить(Ссылка);
		НЗ.Записать();
	Иначе
		НЗ = РегистрыСведений.ПерелицензированныеАптеки.СоздатьНаборЗаписей();
		НЗ.Отбор.НоваяАптека.Установить(Ссылка);
		НоваяЗапись = НЗ.Добавить();
		НоваяЗапись.НоваяАптека = Ссылка;
		НоваяЗапись.СтараяАптека = СтараяАптека;
		НЗ.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(НаборКонтактнойИнформации, Ссылка, Отказ);
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияКИ()

	Для Каждого Запись Из НаборКонтактнойИнформации Цикл
		
		//Адрес аптеки
		Если Запись.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес
			И Запись.Вид = Справочники.ВидыКонтактнойИнформации.АдресАптеки
			И Не ПустаяСтрока(Запись.Представление) Тогда

			АдресАптекиПоКлассификатору = Запись.Представление;

		КонецЕсли;
		
	КонецЦикла;	

КонецПроцедуры

Процедура АдресАптекиПоКлассификаторуНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВидКИ = Справочники.ВидыКонтактнойИнформации.АдресАптеки;
	ТипКИ = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Запись = УправлениеКонтактнойИнформацией.ПолучитьЗаписьВНаборе(НаборКонтактнойИнформации, ВидКИ, ТипКИ);
	
	УправлениеКонтактнойИнформацией.РедактироватьКонтактнуюИнформациюВДиалоге(Запись, НаборКонтактнойИнформации, ЭтаФорма);
	
	ЗаполнитьЗначенияКИ();
	
КонецПроцедуры

Процедура РазмерПлощадиТорговогоЗалаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РазмерПлощадиТорговогоЗала.Сортировать("ДействуетС убыв");
	
	Если РазмерПлощадиТорговогоЗала.Количество()<>0 Тогда
		ТС=РазмерПлощадиТорговогоЗала.Получить(0);
		
		ОбщаяПлощадь=ТС.ОбщаяПлощадь;
		ПлощадьТорговогоЗала=ТС.ПлощадьТорговогоЗала;
	КонецЕсли; 
	
	
КонецПроцедуры

Процедура КнопкаПечатьРуководителейНажатие(Элемент)
	
	Если Заведующие.Количество() = 0 Тогда
		
		Сообщить("В табличной части ""Руководители"" отсутствуют записи.");
		Возврат
	
	КонецЕсли; 
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("МакетСписокРуководителей");
	Область = макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Наименование = Наименование;
	ТабличныйДокумент.Вывести(Область);
	
	Для каждого СтрокаТЧ Из Заведующие Цикл
	
		Область = Макет.ПолучитьОбласть("Строка");
		ЗаполнитьЗначенияСвойств(Область.Параметры,СтрокаТЧ);
		ТабличныйДокумент.Вывести(Область);
	
	КонецЦикла; 
	ТабличныйДокумент.Показать();
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.РежимыРаботыАптек") Тогда
		ЭлементыФормы.РежимРаботы.Значение = Справочники.МестаХранения.ПолучитьРежимРаботыНаДату(Ссылка, ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры

Процедура РежимРаботыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаРежимаРаботы = ПолучитьФорму("ФормаВводаРежимаРаботы",ЭтаФорма,Новый УникальныйИдентификатор);
	ФормаРежимаРаботы.Аптека = Ссылка;
	ФормаРежимаРаботы.Открыть();
	
	
КонецПроцедуры

Функция ПроверитьВозможностьВыбораСтараяАптека()
	//SKD-55 2) не давать выбирать старую аптеку, которая уже выбрана для другой аптеки
	Если ЗначениеЗаполнено(СтараяАптека) Тогда
		Если СтараяАптека = Ссылка Тогда
			Предупреждение("Не надо в качестве ""Старой аптеки"" указывать саму себя!");
			Возврат 0;
		КонецЕсли;	
		Запрос  = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПерелицензированныеАптеки.НоваяАптека
		|ИЗ
		|	РегистрСведений.ПерелицензированныеАптеки КАК ПерелицензированныеАптеки
		|ГДЕ
		|	ПерелицензированныеАптеки.СтараяАптека = &СтараяАптека и ПерелицензированныеАптеки.НоваяАптека <> &ЭтаАптека";
		Запрос.УстановитьПараметр("СтараяАптека",СтараяАптека);
		Запрос.УстановитьПараметр("ЭтаАптека",Ссылка);
		Рез = Запрос.Выполнить();
		НоваяАптекаСтр = "";
		Если НЕ Рез.Пустой() Тогда
			Выборка = Рез.Выбрать();
			Пока Выборка.Следующий() Цикл
				НоваяАптекаСтр = ?(ПустаяСтрока(НоваяАптекаСтр) = Истина,"", НоваяАптекаСтр + Символы.ПС) + СокрЛП(Выборка.НоваяАптека);
			КонецЦикла;	
		КонецЕсли;
		Если ПустаяСтрока(НоваяАптекаСтр) = Ложь Тогда
			Предупреждение("Данная аптека уже является ""Старой аптекой"" для:
			|"+ НоваяАптекаСтр);
			Возврат 0;
		КонецЕсли;	
	КонецЕсли;	
	Возврат 1;
КонецФункции	

Процедура СтараяАптекаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(СтараяАптека) Тогда
		Если ПроверитьВозможностьВыбораСтараяАптека() = 0 Тогда
			СтараяАптека = "";
			ОбобщающийКод = Код;
			Возврат;
		КонецЕсли;	
		//ОбобщающийКод = Справочники.МестаХранения.ПолучитьОбобщенныйКод(Ссылка);
		ОбобщающийКод = Справочники.МестаХранения.ПолучитьОбобщенныйКод(СтараяАптека);
	Иначе
		ОбобщающийКод = Код;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТипИнкассацииПриИзменении(Элемент)
	
	Если ТипИнкассации = Перечисления.ТипыИнкассации.КлассическаяИнкассация 
		Или ТипИнкассации = Перечисления.ТипыИнкассации.ИнкассацияВОфис Тогда
		
		КодОбъектаДляРазмена = КодОбъектаВБанке;
		НомерДляСамоинкассации = "";
		
	ИначеЕсли ТипИнкассации = Перечисления.ТипыИнкассации.Самоинкассация Тогда		
		НомерДляСамоинкассации = СгенерироватьНомерДляСамоинкассации();
		
	КонецЕсли;	
	
	УправлениеДоступностьюЭлементовФормы_Инкассация();
	
КонецПроцедуры

Процедура УправлениеДоступностьюЭлементовФормы_Инкассация()

	Если ТипИнкассации = Перечисления.ТипыИнкассации.КлассическаяИнкассация 
		Или ТипИнкассации = Перечисления.ТипыИнкассации.ИнкассацияВОфис Тогда
		
		ЭлементыФормы.КодОбъектаДляРазмена.Доступность = Ложь;		
		ЭлементыФормы.ГрафикИнкассацииНовый.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ГрафикиИнкассации");
		
	ИначеЕсли ТипИнкассации = Перечисления.ТипыИнкассации.Самоинкассация Тогда
		
		ЭлементыФормы.КодОбъектаДляРазмена.Доступность = Истина;		
		ЭлементыФормы.ГрафикИнкассацииНовый.ОграничениеТипа = Новый ОписаниеТипов("ПеречислениеСсылка.ГрафикиСамоинкассации");
		
	КонецЕсли;
	
	ГрафикИнкассацииНовый_прив = ЭлементыФормы.ГрафикИнкассацииНовый.ОграничениеТипа.ПривестиЗначение(ГрафикИнкассацииНовый);
	Если ГрафикИнкассацииНовый <> ГрафикИнкассацииНовый_прив Тогда
		ГрафикИнкассацииНовый = ГрафикИнкассацииНовый_прив;
	КонецЕсли;

КонецПроцедуры

Процедура НомерСумкиПриИзменении(Элемент)
	
	КодОбъектаВБанке = НомерСумки;
	
	Если ТипИнкассации = Перечисления.ТипыИнкассации.КлассическаяИнкассация 
		Или ТипИнкассации = Перечисления.ТипыИнкассации.ИнкассацияВОфис Тогда		                              		
		
		КодОбъектаДляРазмена = НомерСумки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВремяЗаездаПриИзменении(Элемент)
	
	ГрафикИнкассации = ВремяЗаезда;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнВыгрузитьВАптеку(Кнопка)
	
	
	Если РольДоступна("Техподдержка") Тогда
		Если ЭтоНовый() или Модифицированность() Тогда
			Предупреждение("Элемент не записан. Запишите изменения и повторите попытку выгрузки");
			Возврат;
		КонецЕсли;
		
		Обмен.ВыгрузитьАптеки(Ссылка);
		Предупреждение("Данные выгружены.");
	Иначе
		Предупреждение("Недостаточно прав для выполнения данной операции");
	КонецЕсли;
	
КонецПроцедуры

Процедура ВычисленеНормативаСписанияОхрана()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормативыСписанияАптек.Ссылка КАК Ссылка,
	|	НормативыСписанияАптек.Процент КАК Процент
	|ИЗ
	|	Справочник.НормативыСписанияАптек КАК НормативыСписанияАптек
	|ГДЕ
	|	НормативыСписанияАптек.ПометкаУдаления = ЛОЖЬ
	|	И НормативыСписанияАптек.ОткрытаяКассоваяЗона = &ОткрытаяКассоваяЗона
	|	И НормативыСписанияАптек.Охрана = &Охрана
	|	И НормативыСписанияАптек.Бренд.Ссылка ЕСТЬ NULL";
	Запрос.УстановитьПараметр("ОткрытаяКассоваяЗона", ОткрытаяКассоваяЗона); 
	Запрос.УстановитьПараметр("Охрана", Охрана); 
	Выборка = Запрос.Выполнить().Выбрать();	
	Если Выборка.Следующий() Тогда
	
		НормативСписания = Выборка.Ссылка;
		ЭлементыФормы.НадписьПроцент.Значение = Строка(Выборка.Процент)
	
	КонецЕсли; 
		
	
КонецПроцедуры
	 

Процедура ВычисленеНормативаСписанияОхранаБренд()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормативыСписанияАптек.Ссылка КАК Ссылка,
	|	НормативыСписанияАптек.Процент КАК Процент
	|ИЗ
	|	Справочник.НормативыСписанияАптек КАК НормативыСписанияАптек
	|ГДЕ
	|	НормативыСписанияАптек.ПометкаУдаления = ЛОЖЬ
	|	И НормативыСписанияАптек.Бренд = &Бренд";
	
	Запрос.УстановитьПараметр("Бренд", Бренд);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
	
		НормативСписания = Выборка.Ссылка;
		ЭлементыФормы.НадписьПроцент.Значение = Строка(Выборка.Процент)
	
	Иначе
		
		ВычисленеНормативаСписанияОхрана()
		
	КонецЕсли; 

КонецПроцедуры
 

Процедура БрендПриИзменении(Элемент)
	
	ВычисленеНормативаСписанияОхранаБренд()
	
КонецПроцедуры

Процедура ОхранаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Бренд) Тогда
		ВычисленеНормативаСписанияОхранаБренд()
	Иначе
		ВычисленеНормативаСписанияОхрана()
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОткрытаяКассоваяЗонаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Бренд) Тогда
		ВычисленеНормативаСписанияОхранаБренд()
	Иначе
		ВычисленеНормативаСписанияОхрана()
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодстказкаСтараяАптНажатие(Элемент)
	Если НЕ ПустаяСтрока(ЭлементыФормы.СтараяАптека.Подсказка) Тогда
		Предупреждение(ЭлементыФормы.СтараяАптека.Подсказка);
	КонецЕсли;	
КонецПроцедуры

Процедура КодФинОтделаПриИзменении(Элемент)
	КодФинОтдела = Врег(КодФинОтдела);
КонецПроцедуры

Процедура ПослеЗаписи()
	Перезаписывать = Ложь;
	//ENT-983 +++
	Если ТелефонДляСправки <> "8-495-645-35-65" Тогда
		ТелефонДляСправки = "8-495-645-35-65";
		Перезаписывать = Истина;
	КонецЕсли;
	
	Если ВнутреннийТелефон <> прав("0000" + СтрЗаменить(Код,Символы.НПП,""), 4) Тогда
		ВнутреннийТелефон = прав("0000" + СтрЗаменить(Код,Символы.НПП,""), 4);
		Перезаписывать  = Истина;
	КонецЕсли;
	
	Если Перезаписывать Тогда Записать(); КонецЕсли;
	//---
КонецПроцедуры

//НЭТИ Барданов А.Ю. 16.01.2019 ENT-702
Процедура ЗаполнитьТаблицуЗаведующие()
	ЗаписиЗаведующиеИзРегистра = Справочники.МестаХранения.ЗаписиЗаведующиеИзРегистра(Код);	
	ЗаведующиеИзРегистра.Загрузить(ЗаписиЗаведующиеИзРегистра);
	Заведующие.Загрузить(Справочники.МестаХранения.АктуальныеЗаведующиеИзРегистра(Код));
КонецПроцедуры

//НЭТИ Барданов А.Ю. 16.01.2019 ENT-702
Процедура ИзменитьТЧЗаведующиеНажатие(Элемент)  
	ФормаИзмененияЗаведующих = ПолучитьФорму("ФормаИзмененияЗаведующих",ЭлементыФормы.ПолеЗаведующих,Новый УникальныйИдентификатор);
	ФормаИзмененияЗаведующих.КодАптеки = Код;
	ФормаИзмененияЗаведующих.Открыть();  
КонецПроцедуры

//НЭТИ Барданов А.Ю. 16.01.2019 ENT-702
Процедура ПолеЗаведующихОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ЗаполнитьТаблицуЗаведующие();
КонецПроцедуры

//НЭТИ Барданов А.Ю. 30.01.2019 ENT-1217
Процедура ДобавитьСсылкуНаОтчетПоКонтрактам()
	ЭлементыФормы.ДействияФормы.Кнопки.Подменю1.Кнопки.Добавить("КнопкаПерейтиОтчетПоКонтрактам", ТипКнопкиКоманднойПанели.Действие, "Отчет по контрактам аптека-поставщик",Новый Действие("ОткрытьОтчетПоКонтрактам"));
КонецПроцедуры

//НЭТИ Барданов А.Ю. 30.01.2019 ENT-1217
Процедура ОткрытьОтчетПоКонтрактам()	
	Отчет = Отчеты.ОтчетПоКонтрактамАптекаПоставщик;   	
	ФормаОтчета = Отчет.ПолучитьФорму("ФормаОтчета");
	ФормаОтчета.СформироватьПриОткрытии = Истина;
	ФормаОтчета.КомпоновщикНастроек.Настройки.Отбор.Элементы[0].ПравоеЗначение = Ссылка;			
	ФормаОтчета.Открыть(); 		
КонецПроцедуры	

с_ЗначениеПолей = Новый Структура();









