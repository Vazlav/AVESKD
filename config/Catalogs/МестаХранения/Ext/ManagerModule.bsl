Функция ПолучитьРежимРаботыНаДату(Ссылка,Дата = Неопределено)  Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Аптека",Ссылка);
	
	Если Дата = Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	РР.РежимРаботы КАК РежимРаботы
		               |ИЗ
		               |	РегистрСведений.РежимыРаботыАптек.СрезПоследних(, Аптека = &Аптека) КАК РР";
		
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	РР.РежимРаботы
		|ИЗ
		|	РегистрСведений.РежимыРаботыАптек.СрезПоследних(&Период, Аптека = &Аптека) КАК РР";
		Запрос.УстановитьПараметр("Период",Дата);
	КонецЕсли;
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Справочники.РежимыРаботыАптек.ПустаяСсылка();
	Иначе
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.РежимРаботы;
	КонецЕсли;

КонецФункции

Функция ПолучитьПлощадиАптеки(Ссылка) Экспорт
	
	СтруктураПлощади = Новый Структура;
	СтруктураПлощади.Вставить("ПлощадьТорговогоЗала",0);
	СтруктураПлощади.Вставить("ОбщаяПлощадь",0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Площади.ПлощадьТорговогоЗала КАК ПлощадьТорговогоЗала,
	               |	Площади.ОбщаяПлощадь КАК ОбщаяПлощадь
	               |ИЗ
	               |	Справочник.МестаХранения.РазмерПлощадиТорговогоЗала КАК Площади
	               |ГДЕ
	               |	Площади.Ссылка = &Аптека
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Площади.ДействуетС УБЫВ";
	
	Запрос.УстановитьПараметр("Аптека",Ссылка);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
	    Возврат СтруктураПлощади;
	КонецЕсли;

	Выборка = Рез.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(СтруктураПлощади,Выборка);
	Возврат СтруктураПлощади;
	
	
КонецФункции

Функция ПолучитьОбобщенныйКод(Знач Аптека, Знач СтараяАптека = Неопределено) Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПА.СтараяАптека КАК Аптека
	               |ИЗ
	               |	РегистрСведений.ПерелицензированныеАптеки КАК ПА
	               |ГДЕ
	               |	ПА.НоваяАптека = &НоваяАптека";
	
	Запрос.УстановитьПараметр("НоваяАптека",Аптека);
	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Если СтараяАптека = Неопределено Тогда
			Возврат Аптека.Код;
		Иначе
			Возврат СтараяАптека.Код;
		КонецЕсли;
	Иначе
		
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		СтараяАптека = Выборка.Аптека;
		Запрос = Неопределено;
		Возврат ПолучитьОбобщенныйКод(Выборка.Аптека,СтараяАптека);
		
	КонецЕсли;
	
	
КонецФункции

Функция ПолучитьСписокКодовАптекПоОбобщенномуКоду(ОбобщающийКод) Экспорт
	
	СписокКодов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ДопРеквизитыМестХранений.Аптека.Код КАК КодАптеки
	               |ИЗ
	               |	Справочник.ДопРеквизитыМестХранений КАК ДопРеквизитыМестХранений
	               |ГДЕ
	               |	ДопРеквизитыМестХранений.ОбобщающийКод = &ОбобщающийКод";
	
	Запрос.УстановитьПараметр("ОбобщающийКод",ОбобщающийКод);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат СписокКодов;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокКодов.Добавить(Выборка.КодАптеки);	
	КонецЦикла;
	Возврат СписокКодов;
	
	
	
КонецФункции

//НЭТИ Барданов А.Ю. 16.01.2019 ENT-702
Функция ЗаписиЗаведующиеИзРегистра(Код) Экспорт
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Neti_Управляющие.Период КАК Период,
	             |	Neti_Управляющие.КодАптеки КАК КодАптеки,
	             |	Neti_Управляющие.ФИО КАК ФИО,
	             |	Neti_Управляющие.НачПериодаЗаведования КАК НачПериодаЗаведования,
	             |	Neti_Управляющие.КонПериодаЗаведования КАК КонПериодаЗаведования,
	             |	Neti_Управляющие.Телефон КАК Телефон,
	             |	Neti_Управляющие.АдресЭлектроннойПочты КАК АдресЭлектроннойПочты,
	             |	Neti_Управляющие.Должность КАК Должность,
	             |	Neti_Управляющие.Сотрудник КАК Сотрудник,
	             |	Neti_Управляющие.Номер КАК НомерСтроки
				 |ИЗ
	             |	РегистрСведений.Neti_Управляющие КАК Neti_Управляющие
	             |ГДЕ
	             |	Neti_Управляющие.КодАптеки = &КодАптеки
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Период,
	             |	НомерСтроки";
	Запрос.УстановитьПараметр("КодАптеки",Код);
	Возврат Запрос.Выполнить().Выгрузить();  	
КонецФункции	

//НЭТИ Барданов А.Ю. 16.01.2019 ENT-702
Функция АктуальныеЗаведующиеИзРегистра(Код) Экспорт
	Запрос=Новый Запрос;
	Запрос.Текст="
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	МАКСИМУМ(Neti_УправляющиеСрезПоследних.Период) КАК Период,
	|	Neti_УправляющиеСрезПоследних.КодАптеки КАК КодАптеки
	|ПОМЕСТИТЬ ВТПериод
	|ИЗ
	|	РегистрСведений.Neti_Управляющие.СрезПоследних(&Дата, КодАптеки = &КодАптеки) КАК Neti_УправляющиеСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	Neti_УправляющиеСрезПоследних.КодАптеки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Neti_Управляющие.Период КАК Период,
	|	Neti_Управляющие.КодАптеки КАК КодАптеки,
	|	Neti_Управляющие.Номер КАК Номер,
	|	Neti_Управляющие.ФИО КАК ФИО,
	|	Neti_Управляющие.НачПериодаЗаведования КАК НачПериодаЗаведования,
	|	Neti_Управляющие.КонПериодаЗаведования КАК КонПериодаЗаведования,
	|	Neti_Управляющие.Телефон КАК Телефон,
	|	Neti_Управляющие.АдресЭлектроннойПочты КАК АдресЭлектроннойПочты,
	|	Neti_Управляющие.Должность КАК Должность,
	|	Neti_Управляющие.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрСведений.Neti_Управляющие КАК Neti_Управляющие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериод КАК ВТПериод
	|		ПО Neti_Управляющие.Период = ВТПериод.Период
	|			И Neti_Управляющие.КодАптеки = ВТПериод.КодАптеки
	|";
	Запрос.УстановитьПараметр("КодАптеки",Код);
	Запрос.УстановитьПараметр("Дата",ТекущаяДата());
	
	Возврат Запрос.Выполнить().Выгрузить();  	
КонецФункции	