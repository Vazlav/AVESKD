Перем СписокПараметров;
Перем СписокУсловий;

//Процедура ПараметрыЦенообразованияРеквизитТовараНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
//	 	СпрТПС=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
//		Для каждого Рекв из СпрТПС.Метаданные().Реквизиты Цикл
//			
//			Элемент.СписокВыбора.Добавить( Рекв.Имя);
//			
//		КонецЦикла;	
//		
//КонецПроцедуры

////ТЧ.Свернуть("Товар,Партия,НадбавкаПостОтЦГР,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС,НомерГТД","");


//Процедура КоманднаяПанель2ЦенаГосрегистрации(Кнопка)
//	ФормулаРасчетаЦены=""+ФормулаРасчетаЦены+"$ЦенаГосРегистрации";
//КонецПроцедуры

//Процедура ПараметрыЦенообразованияФормулаРасчетаЦеныНачалоВыбора(Элемент, СтандартнаяОбработка)
//	КлючУник=  Новый   УникальныйИдентификатор();
//	
//	ЭтотОбъект.ТМП_Формула=Элемент.Значение;
//	
//	РД=ПолучитьОбщуюФорму("РЕДАКТОР_формул",ЭтаФорма,КлючУник).ОткрытьМодально();
//	
//	Элемент.Значение=ЭтотОбъект.ТМП_Формула; 
//КонецПроцедуры



Процедура УсловияПримененияТипУсловияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора = СписокУсловий;
КонецПроцедуры

Процедура УсловияПримененияЛеваяЧастьНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора=СписокПараметров;
КонецПроцедуры

Процедура МинПроцНаценкиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора=СписокПараметров;
КонецПроцедуры

Процедура МаксПроцНаценкиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора=СписокПараметров;
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	//ФормулаРасчетаЦены=""+ФормулаРасчетаЦены+" "+ ЭлементыФормы.СтдВыражение.Значение;
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	//ФормулаРасчетаПроцентаНаценки=""+ФормулаРасчетаПроцентаНаценки+" "+ ЭлементыФормы.СтдВыражение1.Значение;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)

	
	
	Если ДатаС=Дата("00010101") Тогда
		ДатаС=Дата("20000101");
	КонецЕсли; 
	
	Если ДатаПо=Дата("00010101") Тогда
		ДатаПо=Дата("20200101");
	КонецЕсли; 
	
	
	
	//------------------<Проверка условий применения>-------------------GtG----29.12.2007
	// Условие связи со следующим у сложных условий должно быть во всех кроме последнего
	
	УсловияПрименения.Сортировать("ПорядокФормированияУсловия");
	
	Х=0;
	Для каждого Стр из УсловияПрименения Цикл
		Х=Х+1;
		
		Если Стр.ЗакрывающаяСкобка=Истина или Стр.ОткрывающаяСкобка=Истина ТОгда
			//Стр.ОбъединятьСоСледующим=""; // по определению
			Стр.ЛеваяЧасть="";
			Стр.ПраваяЧасть="";
			Стр.ТипУсловия="";
			ПРодолжить;	
		КонецЕсли; 	
		
		
		Если Х=УсловияПрименения.Количество() Тогда
			
			
			
			Если ПустаяСтрока(Стр.ОбъединятьСоСледующим)=Ложь ТОгда
				Сообщить("Проверьте, возможно условие применения с порядком "+Стр.ПорядокФормированияУсловия+" НЕ должно содержать условия связки со следующим.");
			КонецЕсли;
			
		Иначе // не последнее в списке сложных	
			Если ПустаяСтрока(Стр.ОбъединятьСоСледующим)=Истина ТОгда
				Сообщить("Проверьте, возможно условие применения с порядком "+Стр.ПорядокФормированияУсловия+" ДОЛЖНО содержать условия связки со следующим!");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	 
	
	
	
	
	
	
	
	
	
	
КонецПроцедуры

Процедура Кнопка3Нажатие(Элемент)
	//Рекв=НеобходимыеРеквизиты.Добавить();
	//Рекв.Реквизит= ЭлементыФормы.СтдВыражение2.Значение;
КонецПроцедуры

Процедура НеобходимыеРеквизитыДолженБытьНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора = СписокУсловий;
КонецПроцедуры

Процедура УстановитьУсловиеСвязкиНажатие(Элемент)
	
	Для каждого Стр из УсловияПрименения Цикл
		
		Если ПустаяСтрока(Стр.ОбъединятьСоСледующим)=Ложь ТОгда
			Стр.ОбъединятьСоСледующим=УслОбъединенияСоСледующим;
		КонецЕсли; 
	КонецЦикла;		
	
КонецПроцедуры

Процедура КоманднаяПанель1ДобавитьСкобкуЗакр(Кнопка)
	
	 Стр=УсловияПрименения.Добавить();
	 Стр.ЗакрывающаяСкобка=Истина;
	
КонецПроцедуры

Процедура КоманднаяПанель1ДобавитьСкобкуОткр(Кнопка)
	Стр=УсловияПрименения.Добавить();
	Стр.ОткрывающаяСкобка=Истина;
	
КонецПроцедуры

Процедура КоманднаяПанель1ПорядокНа10(Кнопка)
	Для каждого Стр из УсловияПрименения Цикл
		Стр.ПорядокФормированияУсловия=Стр.ПорядокФормированияУсловия*10;
	КонецЦикла;	 
КонецПроцедуры


//------------------<Заполняем список параметров парам базы>-------------------GtG----16.11.2007
СписокПараметров=Новый СписокЗначений;
//СписокПараметров.Добавить("ОМ6_ЕстьСпецЦена(Товар.Ссылка,Склад,ДатаДок)","Есть спеццена по товару по аптеке");
//СписокПараметров.Добавить("ОМ6_СпецЦена(Товар.Ссылка,Склад,ДатаДок)","Спеццена по товару по аптеке (из справочника спеццен) ");
//СписокПараметров.Добавить("OM6_ГруппаАптекиДляЦО(Склад)","Аптека в группе аптек для ЦО");
//СписокПараметров.Добавить("OM6_ГруппатовараДляЦО(Товар.Ссылка)","Товар в группе товаров для ЦО");

СписокПараметров.Добавить("Цена","Цена");
//СписокПараметров.Добавить("Товар.Наценка","Процент наценки группы наценки");
//СписокПараметров.Добавить("Товар.МинНаценка","Минимально допустимая наценка для группы наценки");
//СписокПараметров.Добавить("Товар.МаксНаценка","Максимально допустимая наценка для группы наценки");

//СписокПараметров.Добавить("СКЛАД","СКЛАД для спец. расценки по отдельным аптекам");
//СписокПараметров.Добавить("ДатаВыходаНаПМ","Дата выхода аптеки на проектную мощность по трафику");


//СписокПараметров.Добавить("Регион.МаксПроцРознНацЖНВЛС","Макс.% наценки ЖНВЛС региона");
//СписокПараметров.Добавить("Регион.МаксПроцРознНацСВЛС","Макс.% наценки СВЛС региона");
//СписокПараметров.Добавить("АП_ГТТ.РозничнаяЦенаГТТ","Розничная цена по АП ТГГ (приведенная к к=1)");
//СписокПараметров.Добавить("/ДокЕитК","Приведенная к ЕИТ с К=1");

//СписокПараметров.Добавить("Док.Партия.Поставщик","Поставщик (из партии товара)");
//СписокПараметров.Добавить("Док.Партия.Поставщик.ДаетФинскидку","Поставщик дает финскидку (из партии товара)");

//СписокПараметров.Добавить("Док.ЦенаПроизводителя","Документ, Цена производителя Без НДС (приведенная к к=1)");
//СписокПараметров.Добавить("(Док.ЦенаЗакуп)","Документ, Цена закуп. с НДС (приведенная к к=1)");
//СписокПараметров.Добавить("Док.ЦенаЗакупБезНДС","Документ, Цена закуп. БЕЗ НДС (приведенная к к=1)");
//СписокПараметров.Добавить("Док.ЦенаГосРегистрации","Документ, Цена госрегистрации БЕЗ НДС (приведенная к к=1)");
//СписокПараметров.Добавить("ГТТ.МинНаценкаПФ","Мин. % наценки на парафармацию по ГТТ");
//СписокПараметров.Добавить("ГТТ.МинНаценкаЛС","Мин. % наценки на лексредства по ГТТ");
//СписокПараметров.Добавить("Цена_Розничная","ЦЕНА_РОЗНИЧНАЯ в результате расчета по алгоритму");
//СписокПараметров.Добавить("Процент_Наценки","ПРОЦЕНТ_НАЦЕНКИ в результате расчета по алгоритму");
//СписокПараметров.Добавить("ОМ6_НаценкаОтЧегоЛибо( <БазоваяСумма?> ,Цена_Розничная)","Шаблон расчета процента наценки");
//СписокПараметров.Добавить( "Товар.Ссылка","Ссылка на товар (элемент справочника АП)");
//СписокПараметров.Добавить( "/Товар.ЕдиницаПоУмолчанию.К","Элементарная цена товара (за 1 мин. ед.)");
////СписокПараметров.Добавить();
//СписокПараметров.Добавить();



//------------------<Список параметров реквизиты товара>-------------------GtG----16.11.2007

СпрТПС=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
Для каждого Рекв из СпрТПС.Метаданные().Реквизиты Цикл
	СписокПараметров.Добавить( "Товар."+Рекв.Имя,"Товар, "+Рекв.Представление());
КонецЦикла;	

СписокПараметров.Добавить("Склад","Склад");
//СписокПараметров.Добавить("Склад.СубъектРФ","Склад, СубъектРФ");
СписокПараметров.Добавить("Склад.Регион","Склад, Регион");
СписокПараметров.Добавить("Склад.Бренд","Склад, Бренд");


//ЭлементыФормы.СтдВыражение.СписокВыбора= СписокПараметров;
//ЭлементыФормы.СтдВыражение1.СписокВыбора= СписокПараметров;
//ЭлементыФормы.СтдВыражение2.СписокВыбора= СписокПараметров;

СписокУсловий=новый СписокЗначений;
СписокУсловий.Добавить("=");
СписокУсловий.Добавить("<");
СписокУсловий.Добавить("<=");
СписокУсловий.Добавить(">");
СписокУсловий.Добавить(">=");
СписокУсловий.Добавить("<>");
СписокУсловий.Добавить("СодЗнач");


