Перем СписокУсловий;
Перем СписокУсловийЦеноваяГруппа;
Перем СписокУсловийСписок;

Процедура УправлениеВидимостью()

	ЭлементыФормы.НадписьПризнак2.Видимость		= Ложь;
	ЭлементыФормы.Признак2.Видимость			= Ложь;
	ЭтаФорма.Панель.Страницы.Список.Видимость	= Ложь; 
	
	Если Кейс = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.ЦеноваяГруппа Тогда
	
		Если ТипУсловияПризнака = "Интервал (>=, <=)" Тогда
		
			ЭлементыФормы.НадписьПризнак2.Видимость = Истина;
			ЭлементыФормы.Признак2.Видимость = Истина;
			
		КонецЕсли; 
		
		ЭлементыФормы.ПризнакСписком.Видимость		= Ложь;
		ЭлементыФормы.ПолеВводаПризнак.Видимость	= Истина
		
	Иначе
		
		Если Кейс = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.ВесьАссортимент Тогда
			
			ЭлементыФормы.ПризнакСписком.Видимость		= Ложь;
			ЭлементыФормы.ПолеВводаПризнак.Видимость	= Истина;
			
			ЭлементыФормы.ПолеВводаПризнак.Доступность		= Ложь;
			ЭлементыФормы.ПризнакСписком.Доступность		= Ложь;
			ЭлементыФормы.ТипУсловияПризнака.Доступность	= Ложь;
			
		ИначеЕсли Кейс = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.Список Тогда

			ЭлементыФормы.ПризнакСписком.Видимость		= Ложь;
			ЭлементыФормы.ПолеВводаПризнак.Видимость	= Истина;
			
			ЭлементыФормы.ПолеВводаПризнак.Доступность		= Ложь;
			ЭлементыФормы.ПризнакСписком.Доступность		= Ложь;
			ЭлементыФормы.ТипУсловияПризнака.Доступность	= Истина;
			
			ЭтаФорма.Панель.Страницы.Список.Видимость		= Истина
		
		Иначе
		
			ЭлементыФормы.ПолеВводаПризнак.Доступность		= Истина;
			ЭлементыФормы.ПризнакСписком.Доступность		= Истина;
			ЭлементыФормы.ТипУсловияПризнака.Доступность	= Истина;
			
			Если ТипУсловияПризнака = "В списке" или ТипУсловияПризнака = "Не в списке" Тогда
				
				ЭлементыФормы.ПризнакСписком.Видимость		= Истина;	
				ЭлементыФормы.ПолеВводаПризнак.Видимость	= Ложь	
				
			Иначе
				
				ЭлементыФормы.ПризнакСписком.Видимость		= Ложь;
				ЭлементыФормы.ПолеВводаПризнак.Видимость	= Истина
				
			КонецЕсли;
		
		КонецЕсли; 
		
	КонецЕсли; 	

	Если ТипУсловияКонкурент = "В списке" ИЛИ ТипУсловияКонкурент = "Не в списке" Тогда
		                    
		ЭлементыФормы.КонкурентСписком.Видимость	= Истина;	
		ЭлементыФормы.Конкурент.Видимость			= Ложь	
		
	Иначе
		
		ЭлементыФормы.КонкурентСписком.Видимость	= Ложь;
		ЭлементыФормы.Конкурент.Видимость			= Истина
		
	КонецЕсли;                    
	
КонецПроцедуры
 

Процедура ТипУсловияПризнакаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Если Кейс = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.ЦеноваяГруппа Тогда
		Элемент.СписокВыбора = СписокУсловийЦеноваяГруппа;
	ИначеЕсли Кейс = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.Список Тогда
		Элемент.СписокВыбора = СписокУсловийСписок;
	Иначе
		Элемент.СписокВыбора = СписокУсловий;
	КонецЕсли; 
	
КонецПроцедуры

Процедура КейсПриИзменении(Элемент)
	
	Если Элемент.Значение = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.ЦеноваяГруппа Тогда
	
		Массив = Новый Массив;
		Массив.Добавить(Тип("Число"));
		ОписаниеТиповПризнак = Новый ОписаниеТипов(Массив,,);
		ЭлементыФормы.ПолеВводаПризнак.ТипЗначения = ОписаниеТиповПризнак;
		Если ТипУсловияПризнака = "В списке" ИЛИ ТипУсловияПризнака = "Не в списке" Тогда
			ТипУсловияПризнака = "="
		КонецЕсли; 
	
	Иначе
		
		Если ТипУсловияПризнака = "<" ИЛИ ТипУсловияПризнака = ">" 
			ИЛИ ТипУсловияПризнака = "<=" ИЛИ ТипУсловияПризнака =">=" или ТипУсловияПризнака ="Интервал (>=, <=)" Тогда
			ТипУсловияПризнака = "="
		КонецЕсли; 
		
		Если Элемент.Значение = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.Спрос Тогда
			
			Массив = Новый Массив;
			Массив.Добавить(Тип("ПеречислениеСсылка.ВидыСпроса"));
			ОписаниеТиповПризнак = Новый ОписаниеТипов(Массив,,);
			ЭлементыФормы.ПолеВводаПризнак.ТипЗначения = ОписаниеТиповПризнак;
			
			//ЭлементыФормы.ТабличноеПолеПризнакСписком.Колонки.ПризнакЗначение.ЭлементУправления.ТипЗначения = ОписаниеТиповПризнак;
			
			ЭлементыФормы.ПризнакСписком.Колонки.ПризнакЗначение.ЭлементУправления.ОграничениеТипа = ОписаниеТиповПризнак;
			
		ИначеЕсли Элемент.Значение = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.КатегорияТовара Тогда
			
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.ГруппировкиАссортимента"));
			ОписаниеТиповПризнак = Новый ОписаниеТипов(Массив,,);
			ЭлементыФормы.ПолеВводаПризнак.ТипЗначения = ОписаниеТиповПризнак;
			
			ЭлементыФормы.ПризнакСписком.Колонки.ПризнакЗначение.ЭлементУправления.ОграничениеТипа = ОписаниеТиповПризнак;
			
		ИначеЕсли Элемент.Значение = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.Бренд Тогда
			
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.Брэнды"));
			ОписаниеТиповПризнак = Новый ОписаниеТипов(Массив,,);
			ЭлементыФормы.ПолеВводаПризнак.ТипЗначения = ОписаниеТиповПризнак;
			
			ЭлементыФормы.ПризнакСписком.Колонки.ПризнакЗначение.ЭлементУправления.ОграничениеТипа = ОписаниеТиповПризнак;
			
		ИначеЕсли Элемент.Значение = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.Производитель Тогда
			
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка.Производители"));
			ОписаниеТиповПризнак = Новый ОписаниеТипов(Массив,,);
			ЭлементыФормы.ПолеВводаПризнак.ТипЗначения = ОписаниеТиповПризнак;
			
			ЭлементыФормы.ПризнакСписком.Колонки.ПризнакЗначение.ЭлементУправления.ОграничениеТипа = ОписаниеТиповПризнак;
			
		ИначеЕсли Элемент.Значение = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.ВесьАссортимент Тогда
			
			ТипУсловияПризнака = "";
			ЭлементыФормы.ПолеВводаПризнак.Значение		= Неопределено;
			
		ИначеЕсли Элемент.Значение = Перечисления.ИА_ЦО_ТипыКейсовАлгоритмВыравниванияРЦпоЦК.Список Тогда
			
			ТипУсловияПризнака = "В списке";
			ЭлементыФормы.ПолеВводаПризнак.Значение		= Неопределено;
			
		КонецЕсли;
	
	КонецЕсли; 	
	
	УправлениеВидимостью();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Признак <> ЭлементыФормы.ПолеВводаПризнак.Значение Тогда
	
		Признак = ЭлементыФормы.ПолеВводаПризнак.Значение	
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭлементыФормы.ПолеВводаПризнак.Значение = Признак;
	УправлениеВидимостью();
	
КонецПроцедуры

Процедура ТипУсловияПризнакаПриИзменении(Элемент)
	УправлениеВидимостью()
КонецПроцедуры

Процедура ТабличноеПолеСрисокТоварФирмыПриИзменении(Элемент)
	ЭлементыФормы.ТабличноеПолеСрисок.ТекущиеДанные.Код1С = ЭлементыФормы.ТабличноеПолеСрисок.ТекущиеДанные.ТоварФирмы.Код
КонецПроцедуры

Процедура КоманднаяПанель1ЗагрузкаИзЕксель(Кнопка)
	ПолучитьФорму("ФормаЗагрузкиИзФайла").Открыть();
КонецПроцедуры

Процедура ТипУсловияКонкурентНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора = СписокУсловий;
КонецПроцедуры

Процедура ТипУсловияКонкурентПриИзменении(Элемент)
	УправлениеВидимостью()
КонецПроцедуры


Процедура ПередЗаписью(Отказ)
	
	Если Модифицированность() Тогда
	
		Если Вопрос("Запись может занять продолжительное время. Продолжить?", РежимДиалогаВопрос.ДаНетОтмена) <> КодВозвратаДиалога.Да Тогда
		
			Отказ = Истина	
		
		КонецЕсли;  
		
		Если Актуальность Тогда
			
			Состояние("Обработка данных ...");
			СформироватьЗаписиРС();
			Состояние("");
			
		Иначе
			
			УдалитьЗаписиРС();	
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

СписокУсловий = новый СписокЗначений;
СписокУсловий.Добавить("=");
СписокУсловий.Добавить("<>");
СписокУсловий.Добавить("В списке");
СписокУсловий.Добавить("Не в списке");

СписокУсловийЦеноваяГруппа = новый СписокЗначений;
СписокУсловийЦеноваяГруппа.Добавить("=");
СписокУсловийЦеноваяГруппа.Добавить("<>");
СписокУсловийЦеноваяГруппа.Добавить("<");
СписокУсловийЦеноваяГруппа.Добавить(">");
СписокУсловийЦеноваяГруппа.Добавить("<=");
СписокУсловийЦеноваяГруппа.Добавить(">=");
СписокУсловийЦеноваяГруппа.Добавить("Интервал (>=, <=)");

СписокУсловийСписок = новый СписокЗначений;
СписокУсловийСписок.Добавить("В списке");
СписокУсловийСписок.Добавить("Не в списке");

