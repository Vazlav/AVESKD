Перем СписокПараметров;
Перем СписокУсловий;
Перем СписокТипов;

//Процедура ПараметрыЦенообразованияРеквизитТовараНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
//	 	СпрТПС=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
//		Для каждого Рекв из СпрТПС.Метаданные().Реквизиты Цикл
//			
//			Элемент.СписокВыбора.Добавить( Рекв.Имя);
//			
//		КонецЦикла;	
//		
//КонецПроцедуры

////ТЧ.Свернуть("Товар,Партия,НадбавкаПостОтЦГР,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС,НомерГТД","");


//Процедура КоманднаяПанель2ЦенаГосрегистрации(Кнопка)
//	ФормулаРасчетаЦены=""+ФормулаРасчетаЦены+"$ЦенаГосРегистрации";
//КонецПроцедуры

//Процедура ПараметрыЦенообразованияФормулаРасчетаЦеныНачалоВыбора(Элемент, СтандартнаяОбработка)
//	КлючУник=  Новый   УникальныйИдентификатор();
//	
//	ЭтотОбъект.ТМП_Формула=Элемент.Значение;
//	
//	РД=ПолучитьОбщуюФорму("РЕДАКТОР_формул",ЭтаФорма,КлючУник).ОткрытьМодально();
//	
//	Элемент.Значение=ЭтотОбъект.ТМП_Формула; 
//КонецПроцедуры



Процедура УсловияПримененияТипУсловияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора = СписокУсловий;
КонецПроцедуры

Процедура УсловияПримененияЛеваяЧастьНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора=СписокПараметров;
КонецПроцедуры

Процедура МинПроцНаценкиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора=СписокПараметров;
КонецПроцедуры

Процедура МаксПроцНаценкиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора=СписокПараметров;
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	ФормулаРасчетаЦены=""+ФормулаРасчетаЦены+" "+ ЭлементыФормы.СтдВыражение.Значение;
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	ФормулаРасчетаПроцентаНаценки=""+ФормулаРасчетаПроцентаНаценки+" "+ ЭлементыФормы.СтдВыражение1.Значение;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если ПустаяСтрока( ЭлементыФормы.Описание)=Истина тогда
		Предупреждение("Не введено описание алгоритма!");
		Отказ=ИстинА;
	КонецЕсли; 
	
	Если УСЛОВИЯПрименения.Количество()=0 ТОгда
		Предупреждение("Не указано ни одного условия прмиенения алгоритма!");
		Отказ=ИстинА;
	КонецЕсли;
	
	Если ДатаС=Дата("00010101") Тогда
		ДатаС=Дата("20000101");
	КонецЕсли; 
	
	Если ДатаПо=Дата("00010101") Тогда
		ДатаПо=Дата("20200101");
	КонецЕсли; 
	
	Попытка // применимо, если это числа в явном виде
		Если Вычислить(МинПроцНаценки)>=Вычислить(МаксПроцНаценки)  Тогда  
			ПРедупреждение("Минимальный процент наценки должен быть меньше максимального!");
			Отказ=Истина;
		КонецЕсли; 
	Исключение
	КонецПопытки;
	
	
	//------------------<Проверка условий применения>-------------------GtG----29.12.2007
	// Условие связи со следующим у сложных условий должно быть во всех кроме последнего
	
	УсловияПрименения.Сортировать("ПорядокФормированияУсловия");
	
	Х=0;
	Для каждого Стр из УсловияПрименения Цикл
		Х=Х+1;
		
		Если Стр.ЗакрывающаяСкобка=Истина или Стр.ОткрывающаяСкобка=Истина ТОгда
			//Стр.ОбъединятьСоСледующим=""; // по определению
			Стр.ЛеваяЧасть="";
			Стр.ПраваяЧасть="";
			Стр.ТипУсловия="";
			ПРодолжить;	
		КонецЕсли; 	
		
		
		Если Х=УсловияПрименения.Количество() Тогда
			
			
			
			Если ПустаяСтрока(Стр.ОбъединятьСоСледующим)=Ложь ТОгда
				Сообщить("Проверьте, возможно условие применения с порядком "+Стр.ПорядокФормированияУсловия+" НЕ должно содержать условия связки со следующим.");
			КонецЕсли;
			
		Иначе // не последнее в списке сложных	
			Если ПустаяСтрока(Стр.ОбъединятьСоСледующим)=Истина ТОгда
				Сообщить("Проверьте, возможно условие применения с порядком "+Стр.ПорядокФормированияУсловия+" ДОЛЖНО содержать условия связки со следующим!");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	 
	
	
	КолвоАптек = ПодключенныеАптеки.Количество();
	Если КолвоАптек  = 0 Тогда
		ДляВсехАптек = Истина;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура Кнопка3Нажатие(Элемент)
	Рекв=НеобходимыеРеквизиты.Добавить();
	Рекв.Реквизит= ЭлементыФормы.СтдВыражение2.Значение;
КонецПроцедуры

Процедура НеобходимыеРеквизитыДолженБытьНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора = СписокУсловий;
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Попытка // применимо, если это числа в явном виде
		Если Вычислить(МинПроцНаценки)>=Вычислить(МаксПроцНаценки)  Тогда  
			ПРедупреждение("Минимальный процент наценки должен быть меньше максимального!");
			Отказ=Истина;
		КонецЕсли; 
	Исключение
	КонецПопытки;

КонецПроцедуры

Процедура УстановитьУсловиеСвязкиНажатие(Элемент)
	
	Для каждого Стр из УсловияПрименения Цикл
		
		Если ПустаяСтрока(Стр.ОбъединятьСоСледующим)=Ложь ТОгда
			Стр.ОбъединятьСоСледующим=УслОбъединенияСоСледующим;
		КонецЕсли; 
	КонецЦикла;		
	
КонецПроцедуры

Процедура КоманднаяПанель1ДобавитьСкобкуЗакр(Кнопка)
	
	 Стр=УсловияПрименения.Добавить();
	 Стр.ЗакрывающаяСкобка=Истина;
	
КонецПроцедуры

Процедура КоманднаяПанель1ДобавитьСкобкуОткр(Кнопка)
	Стр=УсловияПрименения.Добавить();
	Стр.ОткрывающаяСкобка=Истина;
	
КонецПроцедуры

Процедура КоманднаяПанель1ПорядокНа10(Кнопка)
	Для каждого Стр из УсловияПрименения Цикл
		Стр.ПорядокФормированияУсловия=Стр.ПорядокФормированияУсловия*10;
	КонецЦикла;	 
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если Владелец.Пользователь <> ПараметрыСеанса.ТекущийСотр  И ПараметрыСеанса.ТекущийСотр <> Справочники.Сотрудники.НайтиПоНаименованию("Администратор") Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;	
	КонецЕсли;
	
	ЭтаФорма.Панель.Страницы.СтрПодключенныеАптеки.Видимость = НЕ ДляВсехАптек;
	
	
КонецПроцедуры

Процедура ДляВсехАптекПриИзменении(Элемент)
	
	ЭтаФорма.Панель.Страницы.СтрПодключенныеАптеки.Видимость = НЕ ДляВсехАптек;	
	
КонецПроцедуры

Процедура КоманднаяПанель3кнПодобратьАптеки(Кнопка)
	
	Обработка = Обработки.ОтборПоФильтру.Создать();
	Обработка.ТекстЗапроса = "ВЫБРАТЬ
	                         |	МестаХранения.Ссылка
	                         |ИЗ
	                         |	Справочник.МестаХранения КАК МестаХранения
	                         |ГДЕ
	                         |	МестаХранения.ПометкаУдаления = ЛОЖЬ
	                         |	И МестаХранения.АссортиментноеПланирование = ИСТИНА
	                         |	И МестаХранения.АвтозаказНаОфисе = ИСТИНА
	                         |{ГДЕ
	                         |	МестаХранения.Ссылка.* КАК Аптека}";
	
	ФормаПодбора=Обработка.ПолучитьФорму("Форма");
	
	РезультатСписок = ФормаПодбора.ОткрытьМодально();
	Если РезультатСписок= Неопределено Тогда
		ПРедупреждение("Ничего не выбрано!");
		Возврат;
	КонецЕсли;	
	
	ПодключенныеАптеки.ЗагрузитьКолонку(РезультатСписок.ВыгрузитьЗначения(),"Склад");
	
	
КонецПроцедуры

Процедура КоманднаяПанель3Действие(Кнопка)
	
	ПодключенныеАптеки.Очистить();
	
КонецПроцедуры

Процедура УсловияПримененияПраваяЧастьНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТС=ЭлементыФормы.УсловияПрименения.ТекущаяСтрока;
	
	Если ТипЗнч(ТС.ПраваяЧасть) <> Тип("Неопределено") Тогда
		
		Если ТС.ТипУсловия = "В Списке" Тогда
			
			СтандартнаяОбработка=ЛОжь;
			
			
			
			ИмяТаблицыДокумента="УсловияПрименения";
			//НачалоВыбораПравойЧасти(ТС,ИмяТаблицыДокумента);
			
			
			ЛеваяЧасть=ТС.ЛеваяЧасть;
			
			
			ЭтоСписокЗначений=Истина;
			
			
			//---------------<Открываем форму выбора значения>---------------------------// GtG // 17.04.2013 10:45:58
			
			ФормаВЗ=ЭтотОбъект.ПолучитьФорму("ФормаВыбораЗначения",ЭтаФорма,1);
			
			ФормаВЗ.ЭтоСписокЗначений=ЭтоСписокЗначений;
			
			//Если ТС.ПраваяЧастьХЗ.Получить() = Неопределено Тогда
				ЛеваяЧастьТип=ТС.ОписаниеТипаПравойЧасти.Метаданные().СтандартныеРеквизиты.Ссылка.Тип; //ТипЗнч(ТС.ПраваяЧасть);
				ФормаВЗ.СтрокаТипЗначения=ЛеваяЧастьТип;
			//КонецЕсли;
			ФормаВЗ.ЗначениеХЗ=ТС.ПраваяЧастьХЗ;
			ФормаВЗ.ИмяТаблицыДокумента=ИмяТаблицыДокумента;
			
			
			ФормаВЗ.ОткрытьМодально();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("Структура") Тогда
		
		Если  ТипЗнч(ЗначениеВыбора.Значение)=Тип("Массив") Тогда // представим это как "Список из хх 
			ЭлементыФормы[ЗначениеВыбора.ИмяТаблицыДокумента].ТекущаяСтрока.ПраваяЧасть="Список из "+ЗначениеВыбора.Значение.Количество()+" значений";
		Иначе	
		    ЭлементыФормы[ЗначениеВыбора.ИмяТаблицыДокумента].ТекущаяСтрока.ПраваяЧасть=ЗначениеВыбора.Значение;
		КонецЕсли;
		
		ЭлементыФормы[ЗначениеВыбора.ИмяТаблицыДокумента].ТекущаяСтрока.ПраваяЧастьХЗ=Новый ХранилищеЗначения(ЗначениеВыбора.Значение); // универсально, для любого типа. Здесь храним сами значения.
		
		УсловияПримененияПриАктивизацииЯчейки(ЭлементыФормы[ЗначениеВыбора.ИмяТаблицыДокумента]);
		
	КонецЕсли;
	
	Если ЗначениеВыбора=Неопределено ТОгда
		Возврат;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура УсловияПримененияПриАктивизацииЯчейки(Элемент)
	
	Если Элемент.ТекущаяКолонка.Имя="ПраваяЧасть" Тогда
		
		ПЧХЗ=Элемент.ТекущаяСтрока.ПраваяЧастьХЗ.Получить();
		ТХТ="";
		Если ТипЗнч(ПЧХЗ)=Тип("Массив") Тогда
			Для Каждого Элем Из ПЧХЗ Цикл
				ТХТ=ТХТ+Элем+Символы.ПС;
			КонецЦикла;
		КонецЕСли;	
		
		
		Элемент.Подсказка=ТХТ;
	Иначе
		Элемент.Подсказка="";
	КонецЕСли;
	
КонецПроцедуры

Процедура УсловияПримененияЛеваяЧастьПриИзменении(Элемент)
	
	ТС=ЭлементыФормы.УсловияПрименения.ТекущаяСтрока;
	
	ТипЯчейки = СписокТипов[Элемент.Значение];
	Если НЕ ТипЯчейки = Неопределено Тогда
		 //ЭлементыФормы.УсловияПрименения.Колонки.ПраваяЧасть.ЭлементУправления.ОграничениеТипа = ТипЯчейки;
		 //ТС.ПраваяЧасть = ЭлементыФормы.УсловияПрименения.Колонки.ПраваяЧасть.ЭлементУправления.ОграничениеТипа.ПривестиЗначение();
		 Элемент.ОграничениеТипа = ТипЯчейки;
		 ТС.ПраваяЧасть = Элемент.ОграничениеТипа.ПривестиЗначение();
		 ТС.ОписаниеТипаПравойЧасти = ТС.ПраваяЧасть;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура Кнопка4Нажатие(Элемент)
	
	ТС=ЭлементыФормы.УсловияПрименения.ТекущаяСтрока;
	
	МассивБрендов = Новый Массив;
	Для каждого стр из УсловияПрименения Цикл
		Если СокрЛП(стр.ЛеваяЧасть) = "Товар.Бренд" Тогда
			Если НЕ стр.ПраваяЧасть.Пустая() Тогда
				МассивБрендов.Добавить(стр.ПраваяЧасть);	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ТС.ПраваяЧастьХЗ = Новый ХранилищеЗначения(МассивБрендов);
	ТС.ПраваяЧасть = "Список из "+МассивБрендов+" значений";
	
	
КонецПроцедуры


//------------------<Заполняем список параметров парам базы>-------------------GtG----16.11.2007
СписокПараметров=Новый СписокЗначений;
СписокПараметров.Добавить("ПроцентПоМатрицеНаценок","% наценки по матрице наценок");
СписокПараметров.Добавить("ОМ6_ЕстьСпецЦена(Товар.Ссылка,Склад,ДатаДок,ДанныеТекПартии)","Есть спеццена по товару по аптеке");
СписокПараметров.Добавить("ОМ6_СпецЦена(Товар.Ссылка,Склад,ДатаДок,ДанныеТекПартии)","Спеццена по товару по аптеке (из справочника спеццен) ");
СписокПараметров.Добавить("OM6_ГруппаАптекиДляЦО(Склад)","Аптека в группе аптек для ЦО");
СписокПараметров.Добавить("OM6_ГруппатовараДляЦО(Товар.Ссылка)","Товар в группе товаров для ЦО");

СписокПараметров.Добавить("ПредыдущаяРознЦена","Предыдущая розничная цена по аптеке");
СписокПараметров.Добавить("МинЦенаКонкурента","Минимальная цена конкурента по аптеке");
СписокПараметров.Добавить("Товар.Наценка","Процент наценки группы наценки");
СписокПараметров.Добавить("Товар.МинНаценка","Минимально допустимая наценка для группы наценки");
СписокПараметров.Добавить("Товар.МаксНаценка","Максимально допустимая наценка для группы наценки");

СписокПараметров.Добавить("СКЛАД","СКЛАД для спец. расценки по отдельным аптекам");
СписокПараметров.Добавить("ДатаВыходаНаПМ","Дата выхода аптеки на проектную мощность по трафику");


СписокПараметров.Добавить("Регион.МаксПроцРознНацЖНВЛС","Макс.% наценки ЖНВЛС региона");
СписокПараметров.Добавить("Регион.МаксПроцРознНацСВЛС","Макс.% наценки СВЛС региона");
СписокПараметров.Добавить("АП_ГТТ.РозничнаяЦенаГТТ","Розничная цена по АП ТГГ (приведенная к к=1)");
СписокПараметров.Добавить("/ДокЕитК","Приведенная к ЕИТ с К=1");

СписокПараметров.Добавить("Док.Партия.Поставщик","Поставщик (из партии товара)");
СписокПараметров.Добавить("Док.Партия.Поставщик.ДаетФинскидку","Поставщик дает финскидку (из партии товара)");

СписокПараметров.Добавить("Док.ЦенаПроизводителя","Документ, Цена производителя Без НДС (приведенная к к=1)");
СписокПараметров.Добавить("(Док.ЦенаЗакуп)","Документ, Цена закуп. с НДС (приведенная к к=1)");
СписокПараметров.Добавить("Док.ЦенаЗакупБезНДС","Документ, Цена закуп. БЕЗ НДС (приведенная к к=1)");
СписокПараметров.Добавить("Док.ЦенаГосРегистрации","Документ, Цена госрегистрации БЕЗ НДС (приведенная к к=1)");
СписокПараметров.Добавить("ГТТ.МинНаценкаПФ","Мин. % наценки на парафармацию по ГТТ");
СписокПараметров.Добавить("ГТТ.МинНаценкаЛС","Мин. % наценки на лексредства по ГТТ");
СписокПараметров.Добавить("Цена_Розничная","ЦЕНА_РОЗНИЧНАЯ в результате расчета по алгоритму");
СписокПараметров.Добавить("Процент_Наценки","ПРОЦЕНТ_НАЦЕНКИ в результате расчета по алгоритму");
СписокПараметров.Добавить("ОМ6_НаценкаОтЧегоЛибо( <БазоваяСумма?> ,Цена_Розничная)","Шаблон расчета процента наценки");
СписокПараметров.Добавить( "Товар.Ссылка","Ссылка на товар (элемент справочника АП)");
СписокПараметров.Добавить( "/Товар.ЕдиницаПоУмолчанию.К","Элементарная цена товара (за 1 мин. ед.)");

//СписокПараметров.Добавить();
//СписокПараметров.Добавить();


СписокТипов=Новый Соответствие;
//------------------<Список параметров реквизиты товара>-------------------GtG----16.11.2007

СпрТПС=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
Для каждого Рекв из СпрТПС.Метаданные().Реквизиты Цикл
	СписокПараметров.Добавить( "Товар."+Рекв.Имя,"Товар, "+Рекв.Представление());
	СписокТипов.Вставить("Товар."+Рекв.Имя,Рекв.тип);
КонецЦикла;	
СписокТипов.Вставить("Товар.Ссылка",Новый ОписаниеТипов("СправочникСсылка.Ассортиментный_план"));

СписокПараметров.Добавить( "Товар.ФиксированнаяЦена/Товар.Коэфф","Фиксированная цена");
СписокПараметров.Добавить( "Товар.ЦенаМониторинга/Товар.Коэфф","Цена мониторинга");


ЭлементыФормы.СтдВыражение.СписокВыбора= СписокПараметров;
ЭлементыФормы.СтдВыражение1.СписокВыбора= СписокПараметров;
ЭлементыФормы.СтдВыражение2.СписокВыбора= СписокПараметров;

СписокУсловий=новый СписокЗначений;
СписокУсловий.Добавить("=");
СписокУсловий.Добавить("<");
СписокУсловий.Добавить("<=");
СписокУсловий.Добавить(">");
СписокУсловий.Добавить(">=");
СписокУсловий.Добавить("<>");
СписокУсловий.Добавить("СодЗнач");
СписокУсловий.Добавить("В Списке");

