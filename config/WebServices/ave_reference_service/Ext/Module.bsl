
Функция hellow()
	Возврат "Вас приветствует справочная служба AVE";// Вставить содержимое обработчика.
КонецФункции

Функция rs_get_full_goods_list()
	
	Запрос=Новый Запрос();
	
	Запрос.Текст="ВЫБРАТЬ
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Код,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Наименование
	             |ИЗ
	             |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	             |ГДЕ
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ПометкаУдаления = ЛОЖЬ
	             |	И АССОРТИМЕНТНЫЙ_ПЛАН.ЭтоГруппа = ЛОЖЬ";
	
	Рез=Запрос.Выполнить();
	
	Выб=Рез.Выбрать();
	
	Тип_ТаблицаВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_goods_list");
	Тип_СтрокаТаблицыВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_goods_string");
	
	ТаблицаВозврата=ФабрикаXDTO.Создать(Тип_ТаблицаВозврата);
	
	Пока Выб.Следующий() Цикл
		СтрокаВозврата=ФабрикаXDTO.Создать(Тип_СтрокаТаблицыВозврата);
		СтрокаВозврата.code=Выб.Код;//" type="xs:integer"/>
		СтрокаВозврата.name=СокрЛП(Выб.Наименование);//" type="xs:string"/>
		ТаблицаВозврата.rs_goods_string.Добавить(СтрокаВозврата);
	КонецЦикла;
	
	Возврат ТаблицаВозврата;				 
				 
				 
	
КонецФункции

Функция rs_get_full_apt_list()
	Запрос=Новый Запрос();
	
	Запрос.Текст="ВЫБРАТЬ
	             |	МестаХранения.Код,
	             |	МестаХранения.Наименование,
	             |	IsNull(МестаХранения.Метро.Код,0) как МетроКод,
	             |	МестаХранения.РежимРаботы.Наименование КАК РежимРаботы,
	             |	МестаХранения.ТелефонДляСправки
	             |ИЗ
	             |	Справочник.МестаХранения КАК МестаХранения
	             |ГДЕ
	             |	МестаХранения.ПометкаУдаления = ЛОЖЬ
	             |	И МестаХранения.ЭтоГруппа = ЛОЖЬ
	             |	И МестаХранения.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыМХ.Розн)
	             |	И МестаХранения.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	             |	И МестаХранения.ДатаПерехода <= &ТекущаяДата";
				 
	Запрос.УстановитьПараметр("ТекущаяДата",КонецДня(ТекущаяДата()));
	
	Рез=Запрос.Выполнить();
	
	Выб=Рез.Выбрать();
	
	Тип_ТаблицаВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_apt_list");
	Тип_СтрокаТаблицыВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_apt_string");
	
	ТаблицаВозврата=ФабрикаXDTO.Создать(Тип_ТаблицаВозврата);
	
	Пока Выб.Следующий() Цикл
		СтрокаВозврата=ФабрикаXDTO.Создать(Тип_СтрокаТаблицыВозврата);
		СтрокаВозврата.code=Выб.Код;//" type="xs:integer"/>
		СтрокаВозврата.name=СокрЛП(Выб.Наименование);//" type="xs:string"/>
		СтрокаВозврата.metro_code =Выб.МетроКод;
		СтрокаВозврата.phone      =СокрЛП(Выб.ТелефонДляСправки);
		СтрокаВозврата.operating_hours=СокрЛП(Выб.РежимРаботы);
		
		ТаблицаВозврата.rs_apt_string.Добавить(СтрокаВозврата);
	КонецЦикла;
	
	Возврат ТаблицаВозврата;			
КонецФункции

Функция rs_get_full_mero_routing()
	Запрос=Новый Запрос();
	
	Запрос.Текст="ВЫБРАТЬ
	             |	РоутингПоМетро.СтанцияОтправления.Код КАК СтанцияОтправления,
	             |	РоутингПоМетро.СтанцияПрибытия.Код КАК СтанцияПрибытия,
	             |	РоутингПоМетро.Удаленность
	             |ИЗ
	             |	РегистрСведений.РоутингПоМетро КАК РоутингПоМетро";
				 
	Рез=Запрос.Выполнить();
	
	Выб=Рез.Выбрать();
	
	Тип_ТаблицаВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_metro_routing");
	Тип_СтрокаТаблицыВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_metro_routing_string");
	
	ТаблицаВозврата=ФабрикаXDTO.Создать(Тип_ТаблицаВозврата);
	
	Пока Выб.Следующий() Цикл
		СтрокаВозврата=ФабрикаXDTO.Создать(Тип_СтрокаТаблицыВозврата);
		СтрокаВозврата.departure_station_code=Выб.СтанцияОтправления;//" type="xs:integer"/>
		СтрокаВозврата.arrival_station_code=Выб.СтанцияПрибытия;//" type="xs:integer"/>
		СтрокаВозврата.route_length=Выб.Удаленность;//" type="xs:integer"/>
				
		ТаблицаВозврата.rs_metro_routing_string.Добавить(СтрокаВозврата);
	КонецЦикла;
	
	Возврат ТаблицаВозврата;	
КонецФункции

Функция rs_get_full_metro_list()
	Запрос=Новый Запрос();
	
	Запрос.Текст="ВЫБРАТЬ
	             |	Метро.Код,
	             |	Метро.Наименование
	             |ИЗ
	             |	Справочник.Метро КАК Метро";
				 
	Рез=Запрос.Выполнить();
	
	Выб=Рез.Выбрать();
	
	Тип_ТаблицаВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_metro_list");
	Тип_СтрокаТаблицыВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_metro_string");
	
	ТаблицаВозврата=ФабрикаXDTO.Создать(Тип_ТаблицаВозврата);
	
	Пока Выб.Следующий() Цикл
		СтрокаВозврата=ФабрикаXDTO.Создать(Тип_СтрокаТаблицыВозврата);
		СтрокаВозврата.code=Выб.Код;//" type="xs:integer"/>
		СтрокаВозврата.name=Выб.Наименование;//" type="xs:integer"/>
		
		ТаблицаВозврата.rs_metro_string.Добавить(СтрокаВозврата);
	КонецЦикла;
	
	Возврат ТаблицаВозврата;	
КонецФункции

Функция rs_get_good_rests(demand_parameters)
	
	ЛимитВозврата=demand_parameters.records_limit;
	КодСтанцииОтправления=demand_parameters.departure_station_code;
	СтанцияОтправления=Справочники.Метро.НайтиПоКоду(КодСтанцииОтправления);
	
	
	ТАБЛИЦА_ЗНАЧЕНИЙ=Новый ТаблицаЗначений;
	ТАБЛИЦА_ЗНАЧЕНИЙ.Колонки.Добавить("GoodCode",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,0,ДопустимыйЗнак.Неотрицательный)));
	ТАБЛИЦА_ЗНАЧЕНИЙ.Колонки.Добавить("GRP_id",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,0,ДопустимыйЗнак.Неотрицательный)));
	
	
	Список_goods_demand_string=demand_parameters.goods_table.ПолучитьСписок("goods_demand_string");
	
			
	Для Ы=0 По Список_goods_demand_string.Количество()-1 Цикл
		Стр= Список_goods_demand_string.ПолучитьXDTO(Ы);
		
		ТЗСтр=ТАБЛИЦА_ЗНАЧЕНИЙ.Добавить();
		ТЗСтр.GoodCode=Стр.good_code;
		ТЗСтр.GRP_id  =Стр.grp_id;
	КонецЦикла;	
	
	

	
	
	ТекстЗапроса= "	ВЫБРАТЬ
|		ТАБЛИЦА_ЗНАЧЕНИЙ.GoodCode КАК GoodCode,
|		ТАБЛИЦА_ЗНАЧЕНИЙ.GRP_id КАК GRP_id
|	ПОМЕСТИТЬ ТЗ_КОНСОЛИ
|	ИЗ
|		&ТАБЛИЦА_ЗНАЧЕНИЙ КАК ТАБЛИЦА_ЗНАЧЕНИЙ
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	ВЫБРАТЬ
|		АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка КАК Ссылка,
|		ТЗ_КОНСОЛИ.GRP_id
|	ПОМЕСТИТЬ СписокТоваровСГруппами
|	ИЗ
|		ТЗ_КОНСОЛИ КАК ТЗ_КОНСОЛИ
|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
|			ПО ТЗ_КОНСОЛИ.GoodCode = АССОРТИМЕНТНЫЙ_ПЛАН.Код
|	
|	ИНДЕКСИРОВАТЬ ПО
|		Ссылка
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	ВЫБРАТЬ
|		ПартииЖНВЛСОстатки.Товар КАК Товар,
|		ПартииЖНВЛСОстатки.Партия,
|		ПартииЖНВЛСОстатки.Склад,
|		ПартииЖНВЛСОстатки.КолвоОстаток,
|		ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток КАК Цена_за_МинЕдиницу
|	ПОМЕСТИТЬ ОстаткиПоПартиям
|	ИЗ
|		РегистрНакопления.ПартииЖНВЛС.Остатки(
|				,
|				Товар В
|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
|						СписокТоваровСГруппами.Ссылка
|					ИЗ
|						СписокТоваровСГруппами КАК СписокТоваровСГруппами)) КАК ПартииЖНВЛСОстатки
|	ГДЕ
|		ПартииЖНВЛСОстатки.КолвоОстаток > 0
|	
|	ИНДЕКСИРОВАТЬ ПО
|		Товар
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	ВЫБРАТЬ
|		ОстаткиПоПартиям.Товар,
|		ОстаткиПоПартиям.Партия,
|		ОстаткиПоПартиям.Склад КАК Склад,
|		ОстаткиПоПартиям.КолвоОстаток,
|		ОстаткиПоПартиям.Цена_за_МинЕдиницу,
|		СписокТоваровСГруппами.GRP_id
|	ПОМЕСТИТЬ ОстаткиПоПартиямСГруппировками
|	ИЗ
|		ОстаткиПоПартиям КАК ОстаткиПоПартиям
|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокТоваровСГруппами КАК СписокТоваровСГруппами
|			ПО ОстаткиПоПартиям.Товар = СписокТоваровСГруппами.Ссылка
|	ГДЕ
|		ОстаткиПоПартиям.Склад.СторонаДоговораКомиссии <> ЗНАЧЕНИЕ(Перечисление.СтороныДоговораКомиссии.комитент)
|	
|	ИНДЕКСИРОВАТЬ ПО
|		Склад
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	ВЫБРАТЬ ПЕРВЫЕ 1000000
|		Подсчет_групп_в_аптеке.Склад КАК Склад,
|		Подсчет_групп_в_аптеке.Колво_GRP_id КАК Колво_GRP_id,
|		Подсчет_групп_в_аптеке.Склад.РежимРаботы.Наименование КАК РежимРаботы,
|		Подсчет_групп_в_аптеке.Склад.ТелефонДляСправки
|	ПОМЕСТИТЬ РейтингАптекПоКолвуГруппВАптеке
|	ИЗ
|		(ВЫБРАТЬ
|			ОстаткиПоПартиямСГруппировками.Склад КАК Склад,
|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОстаткиПоПартиямСГруппировками.GRP_id) КАК Колво_GRP_id
|		ИЗ
|			ОстаткиПоПартиямСГруппировками КАК ОстаткиПоПартиямСГруппировками
|		
|		СГРУППИРОВАТЬ ПО
|			ОстаткиПоПартиямСГруппировками.Склад) КАК Подсчет_групп_в_аптеке
|	
|	УПОРЯДОЧИТЬ ПО
|		Колво_GRP_id УБЫВ
|	
|	ИНДЕКСИРОВАТЬ ПО
|		Склад
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	ВЫБРАТЬ ПЕРВЫЕ "+ЛимитВозврата+"
|		ОстаткиПоПартиямСГруппировками.Товар КАК Товар,
|		ОстаткиПоПартиямСГруппировками.Партия КАК Партия,
|		ОстаткиПоПартиямСГруппировками.Склад КАК Склад,
|		ОстаткиПоПартиямСГруппировками.КолвоОстаток,
|		ОстаткиПоПартиямСГруппировками.Цена_за_МинЕдиницу,
|		ОстаткиПоПартиямСГруппировками.GRP_id,
|		РейтингАптекПоКолвуГруппВАптеке.Колво_GRP_id КАК Колво_GRP_id,
|		РейтингАптекПоКолвуГруппВАптеке.РежимРаботы,
|		РейтингАптекПоКолвуГруппВАптеке.СкладТелефонДляСправки
|	ПОМЕСТИТЬ НайденныеОстатки
|	ИЗ
|		ОстаткиПоПартиямСГруппировками КАК ОстаткиПоПартиямСГруппировками
|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РейтингАптекПоКолвуГруппВАптеке КАК РейтингАптекПоКолвуГруппВАптеке
|			ПО ОстаткиПоПартиямСГруппировками.Склад = РейтингАптекПоКолвуГруппВАптеке.Склад
|	
|	УПОРЯДОЧИТЬ ПО
|		Колво_GRP_id УБЫВ,
|		Склад,
|		Товар,
|		Партия
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	УНИЧТОЖИТЬ ТЗ_КОНСОЛИ
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	УНИЧТОЖИТЬ СписокТоваровСГруппами
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	УНИЧТОЖИТЬ ОстаткиПоПартиям
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	УНИЧТОЖИТЬ ОстаткиПоПартиямСГруппировками
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	УНИЧТОЖИТЬ РейтингАптекПоКолвуГруппВАптеке
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	ВЫБРАТЬ
|		НайденныеОстатки.Товар.Код КАК good_code,
|		НайденныеОстатки.Партия.Наименование КАК prt,
|		НайденныеОстатки.Склад.Код КАК apteka,
|		НайденныеОстатки.КолвоОстаток КАК qnt,
|		НайденныеОстатки.Цена_за_МинЕдиницу КАК price,
|		НайденныеОстатки.GRP_id КАК grp_id,
|		НайденныеОстатки.Колво_GRP_id КАК qnt_grp_id,
|		НайденныеОстатки.Партия.ДокументПоступления.Дата КАК prt_date,
|		IsNull(НайденныеОстатки.Склад.Метро.Код,0) КАК metro_code,
|		IsNull(РоутингОтСтанцииОтправления.Удаленность,1000) КАК metro_route_length,
|		НайденныеОстатки.РежимРаботы КАК wrk_time,
|		НайденныеОстатки.СкладТелефонДляСправки КАК apt_phone
|	ИЗ
|		НайденныеОстатки КАК НайденныеОстатки
|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|				РоутингПоМетро.СтанцияПрибытия КАК СтанцияПрибытия,
|				РоутингПоМетро.Удаленность КАК Удаленность
|			ИЗ
|				РегистрСведений.РоутингПоМетро КАК РоутингПоМетро
|			ГДЕ
|				РоутингПоМетро.СтанцияОтправления = &СтанцияОтправления) КАК РоутингОтСтанцииОтправления
|			ПО НайденныеОстатки.Склад.Метро = РоутингОтСтанцииОтправления.СтанцияПрибытия
|	
|	УПОРЯДОЧИТЬ ПО
|		НайденныеОстатки.Колво_GRP_id УБЫВ,
|		РоутингОтСтанцииОтправления.Удаленность
|	;
|	
|	////////////////////////////////////////////////////////////////////////////////
|	УНИЧТОЖИТЬ НайденныеОстатки
 |"; // Сгенерировано в GtG's Консоль запросов. 18.10.2013 16:01:53

	Запрос=Новый Запрос();
	Запрос.Текст=ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ТАБЛИЦА_ЗНАЧЕНИЙ",ТАБЛИЦА_ЗНАЧЕНИЙ);
    Запрос.УстановитьПараметр("СтанцияОтправления",СтанцияОтправления);
	
	
	Рез=Запрос.Выполнить();
	
	
	Выб=Рез.Выбрать();
	
	Тип_ТаблицаВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_answer_list");
	Тип_СтрокаТаблицыВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_answer_string");
	
	ТаблицаВозврата=ФабрикаXDTO.Создать(Тип_ТаблицаВозврата);

	
	
	Пока Выб.Следующий() цикл
		СтрокаВозврата=ФабрикаXDTO.Создать(Тип_СтрокаТаблицыВозврата);
		ЗаполнитьЗначенияСвойств(СтрокаВозврата,Выб);
		ТаблицаВозврата.rs_answer_string.Добавить(СтрокаВозврата);
	КонецЦикла;	
	
	
	
	Возврат ТаблицаВозврата;	
	
	
	
КонецФункции

Функция rs_get_full_apt_brand_grp_list()
	
	Запрос=Новый Запрос();
	Запрос.Текст="ВЫБРАТЬ
	             |	ГруппировкаБрендовДляСС.Код,
	             |	ГруппировкаБрендовДляСС.Наименование
	             |ИЗ
	             |	Справочник.ГруппировкаБрендовДляСС КАК ГруппировкаБрендовДляСС";
	
	Рез=Запрос.Выполнить();
	
	Выб=Рез.Выбрать();
	
	Тип_ТаблицаВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_apt_barnd_grp_list");
	Тип_СтрокаТаблицыВозврата=ФабрикаXDTO.Тип("http://www.refservice.avews.org","rs_apt_brand_grp_string");
	
	ТаблицаВозврата=ФабрикаXDTO.Создать(Тип_ТаблицаВозврата);
	
	Пока Выб.Следующий() Цикл
		СтрокаВозврата=ФабрикаXDTO.Создать(Тип_СтрокаТаблицыВозврата);
		СтрокаВозврата.code=Выб.Код;//" type="xs:integer"/>
		СтрокаВозврата.name=Выб.Наименование;//" type="xs:integer"/>
		
		ТаблицаВозврата.rs_apt_brand_string.Добавить(СтрокаВозврата);
	КонецЦикла;
	
	Возврат ТаблицаВозврата;	

	
КонецФункции


