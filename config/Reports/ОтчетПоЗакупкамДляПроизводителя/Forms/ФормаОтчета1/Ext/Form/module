
Перем ЗаголовокПоУмолчанию;


////////////////////////////////
// ВАРИАНТЫ

Процедура _СменаВариантаНастройки (Элемент)
	
	Для каждого Настройка Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл
		
		Если Элемент.Текст = Настройка.Представление Тогда
			
			КомпоновщикНастроек.ЗагрузитьНастройки(Настройка.Настройки);
			УстановитьЗаголовок(Настройка.Представление);
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьВариантыНастроек()
	
	КП = ЭлементыФормы.ДействияФормы; 
	//НоваяКнопка = КП.Кнопки.Вставить(1, "ВариантыОтчета", ТипКнопкиКоманднойПанели.Подменю, "Вариант", ); 
	
	Если СхемаКомпоновкиДанных.ВариантыНастроек.Количество() <= 1 Тогда
		Возврат;
	КонецЕсли;	
	
	НовоеДействие = Новый Действие("_СменаВариантаНастройки"); 
	ч = 1;
	
	Для каждого Настройка Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл 		
		
		Если ч = 1 Тогда
			УстановитьЗаголовок(Настройка.Представление);
		КонецЕсли;
		
		НоваяКнопка = КП.Кнопки.ВариантыОтчета.Кнопки.Добавить("Вариант"+Строка(ч), ТипКнопкиКоманднойПанели.Действие, Настройка.Представление, НовоеДействие); 
		
		ч = ч + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЗаголовок(ИмяВарианта)
	
	Заголовок = ЗаголовокПоУмолчанию + " [Вариант: " + ИмяВарианта + "]";
	
КонецПроцедуры
 

//////////////////////////////////
// ЗАГРУЗКА

Процедура КоманднаяПанельОтбораЗагрузитьСписокАптек(Кнопка)
	
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаЗагрузкиАптек");
	ФайлИмпорта = Форма.ОткрытьМодально();
	
	Если Не ЗначениеЗаполнено(ФайлИмпорта) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");	
	Исключение
		Сообщить ("Не удалось запустить Excel");
		Возврат;
	КонецПопытки;
	
	СписокЗнч = Новый СписокЗначений();
  
	Книга = Excel.Workbooks.Open(ФайлИмпорта);	
	Лист = Книга.WorkSheets(1);	
	ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	
	Для Строка = 2 По ВсегоСтрок Цикл 
		
		ОбработкаПрерыванияПользователя();
		
		КодАптеки = Лист.Cells(Строка,1).Value;
		
		Если Не ЗначениеЗаполнено(КодАптеки) Тогда
			Продолжить;
		КонецЕсли;
		
		Аптека = Справочники.МестаХранения.НайтиПоКоду(КодАптеки);
		
		Если ЗначениеЗаполнено(Аптека) Тогда	
			
			СписокЗнч.Добавить(Аптека);
			
		Иначе
			
			Сообщить("Не найдена аптека по коду: " + КодАптеки);	
			
		КонецЕсли;
		
	КонецЦикла;
	
	Excel.Application.Quit(); 	

	
	Если СписокЗнч.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Склад");
	
	ЭлементыОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы;
	   	
	Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ЭлементОтбора.ЛевоеЗначение = ЛевоеЗначение Тогда
			ЭлементОтбораДанных = ЭлементОтбора;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЭлементОтбораДанных = Неопределено Тогда
		ЭлементОтбораДанных = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораДанных.ЛевоеЗначение = ЛевоеЗначение;
	КонецЕсли;
	
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбораДанных.ПравоеЗначение = СписокЗнч;
	ЭлементОтбораДанных.Использование = Истина;
	
КонецПроцедуры

Процедура КоманднаяПанельОтбораЗагрузитьСписокТоваров(Кнопка)
	
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаЗагрузкиТоваров");
	ФайлИмпорта = Форма.ОткрытьМодально();
	
	Если Не ЗначениеЗаполнено(ФайлИмпорта) Тогда
		Возврат;
	КонецЕсли;
	
	ВыбФайл = Новый Файл(ФайлИмпорта); 	
	Если Не ВыбФайл.Существует() Тогда
		Сообщить("Не найден файл " + ФайлИмпорта);
		Возврат;
	КонецЕсли; 
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");	
	Исключение
		Сообщить ("Не удалось запустить Excel");
		Возврат;
	КонецПопытки;
	
	СписокЗнч = Новый СписокЗначений();
  
	Книга = Excel.Workbooks.Open(ФайлИмпорта);	
	Лист = Книга.WorkSheets(1);	
	ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	
	Для Строка = 2 По ВсегоСтрок Цикл
		
		ОбработкаПрерыванияПользователя();
		
		КодТовара = Лист.Cells(Строка,1).Value;
		
		Если Не ЗначениеЗаполнено(КодТовара) Тогда
			Продолжить;
		КонецЕсли;
		
		Товар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		
		Если ЗначениеЗаполнено(Товар) Тогда	
			
			СписокЗнч.Добавить(Товар);
			
		Иначе
			
			Сообщить("Не найден товар по коду: " + КодТовара);	
			
		КонецЕсли;
		
	КонецЦикла;
	
	Excel.Application.Quit(); 	

	
	Если СписокЗнч.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Товар");
	
	ЭлементыОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы;
	   	
	Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ЭлементОтбора.ЛевоеЗначение = ЛевоеЗначение Тогда
			ЭлементОтбораДанных = ЭлементОтбора;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЭлементОтбораДанных = Неопределено Тогда
		ЭлементОтбораДанных = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораДанных.ЛевоеЗначение = ЛевоеЗначение;
	КонецЕсли;
	
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбораДанных.ПравоеЗначение = СписокЗнч;
	ЭлементОтбораДанных.Использование = Истина;	
	
КонецПроцедуры


//////////////////////////////////
// РУЧНОЕ ФОРМИРОВАНИЕ

Процедура ДействияФормыСформировать(Кнопка)
	
	//Если Не ПроверитьЗаполнение() Тогда
	//	Возврат;
	//КонецЕсли;

	//ТЗ = СформироватьОтчет();
	
	//Определим, задан ли отбор по объемным соглашениям
	//ОтборПоОбъемнымСоглашениям = Ложь;
	//ИскомыйЭлементОтбора = Новый ПолеКомпоновкиДанных("ОбъемноеСоглашение");
	//
	//Для Каждого ЭлементОтбора Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл			
	//	Если ЭлементОтбора.ЛевоеЗначение = ИскомыйЭлементОтбора Тогда
	//		ОтборПоОбъемнымСоглашениям = ЭлементОтбора.Использование;
	//		Прервать;
	//	КонецЕсли;		
	//КонецЦикла;
	
	//Заполним параметры отчета
	//ТекПараметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Поставщик");
	//ТекПараметр.Использование = Истина;
	//ТекПараметр.Значение = Справочники.Поставщики.НайтиПоКоду(582);
	//
	//ДатаНачала = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодОтчета").Значение.ДатаНачала;
	//ДатаОкончания = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодОтчета").Значение.ДатаОкончания;

	//Если ДобавитьМесяц(НачалоМесяца(ДатаНачала), 12) <= НачалоМесяца(ДатаОкончания) Тогда 
	//	Сообщить("Период отчета не должен превышать 1 год");
	//	Возврат;
	//КонецЕсли;
		
	//Получаем схему из макета
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	//Изменим текст запроса
	//Если ОтборПоОбъемнымСоглашениям Тогда
	//	ТекстЗапроса = СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос;
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "111 = 222", "ИСТИНА");
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "111 = 111", "Товар В (ВЫБРАТЬ вт.Товар ИЗ втТоварыОбъемныхСоглашений КАК вт)");
	//	СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос = ТекстЗапроса;
	//КонецЕсли;	
		
	//Из схемы возьмем настройки по умолчанию
	//Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	//Установим пользовательские настройки
	Настройки = КомпоновщикНастроек.Настройки;
	
	//Помещаем в переменную данные о расшифровке данных
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	//Создадим структуру с внешним набором данных  
	ВнешниеНаборыДанных = Новый Структура;
	//ВнешниеНаборыДанных.Вставить("ТоварыИАптеки", ТЗ);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	//Очищаем поле табличного документа
	Результат = ЭлементыФормы.Результат;
	Результат.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	//Убираем фиксацию слева
	Результат.ФиксацияСлева = 0;
	
КонецПроцедуры

Функция СформироватьОтчет()
	
КонецФункции


//////////////////////////////////
// ПРОЧЕЕ

Процедура ПриОткрытии()
	
	УстановитьВариантыНастроек();
	
КонецПроцедуры

Процедура ОтобразитьСкрытьНастройки(Кнопка)
	
	Если Кнопка.Пометка Тогда //Сворачиваем	
		
		Элементыформы.ПанельНастроек.УстановитьПривязку(ГраницаЭлементаУправления.Низ);
        Элементыформы.Разделитель.УстановитьПривязку(ГраницаЭлементаУправления.Верх, Элементыформы.ПанельНастроек, ГраницаЭлементаУправления.Низ);
		
		ЭлементыФормы.ПанельНастроек.Свертка = РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.Разделитель.Свертка = РежимСверткиЭлементаУправления.Верх;
		
	Иначе //Разворачиваем
		
		ЭлементыФормы.ПанельНастроек.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.Разделитель.Свертка = РежимСверткиЭлементаУправления.Нет;
		
		Элементыформы.Разделитель.УстановитьПривязку(ГраницаЭлементаУправления.Верх, Элементыформы.Разделитель, ГраницаЭлементаУправления.Низ);
        Элементыформы.Разделитель.УстановитьПривязку(ГраницаЭлементаУправления.Низ, Элементыформы.Результат, ГраницаЭлементаУправления.Верх);
        
        Элементыформы.ПанельНастроек.УстановитьПривязку(ГраницаЭлементаУправления.Верх, Элементыформы.ДействияФормы, ГраницаЭлементаУправления.Низ);
        Элементыформы.ПанельНастроек.УстановитьПривязку(ГраницаЭлементаУправления.Низ, Элементыформы.Разделитель, ГраницаЭлементаУправления.Верх);
		
	КонецЕсли;  
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	
КонецПроцедуры


ЗаголовокПоУмолчанию = ЭтаФорма.Заголовок;
