Перем ТХТ_Полный;
Перем ТХТ_Упрощенный;
Перем ТХТ_Проблемные;


//==========================================================GtG====
Процедура ВывестиФорму2 (ТЗ1)  
	//----------------------------------
	//Назначение:
	//  Вывод формы для ВВ
	//  
	//  
	//  
	//----------------------------------
	
	ТЗ=ТЗ1.Скопировать();
	
	СписокДатПериода= Новый СписокЗначений;
	
	РазницаСек=НачалоДня(КонПериода)-НачалоДня(НачПериода);
	
	РАзницаДней=РазницаСек/60/60/24;
	
	Для каждого Стр из ТЗ Цикл
		Стр.ДАта=КонецДня(Стр.Дата);
		
		Если НачалоДня(Стр.Дата)>НачалоДня(КонПериодаА) ТОгда
			Стр.СуммаСоСкидкой=0;
			Стр.ССП=0;
			Стр.КоличествоЧеков=0;
			Стр. Касс=0;
		КонецЕсли;
		
		
		
		
		
	КонецЦикла;	
	
	
	
	

	
	
	//------------------<Список обрабатываемых дат>-------------------GtG----04.03.2008
	Для Ы=0 По РАзницаДней Цикл
		СписокДатПериода.Добавить(/////////////////////
									НачалоДня(//////////////////////
												НачалоДня(НачПериода)+Ы*60*60*24+1
								  			 ) /////////////////////////////
		             			 );//////////////////////
	КонецЦикла;	
							 
	//------------------<Вытащим из ТЗ Список складов>-------------------GtG----04.03.2008
	
	Если Форма2=Ложь ТОгда
		ТЗ= Новый ТаблицаЗначений;   //затычка, никогда не выполнится
	КонецЕсли; 
	
	ТЗС=ТЗ.Скопировать();
	ТЗС.Свернуть("Склад,СкладНаименованиеПоКлассификатору,Регион","");
	
	ТЗС.Колонки.Добавить("Выручка"); // для суммирования выручки
	ТЗС.Колонки.Добавить("Колво");   // для суммирования кол-ва чеков
	ТЗС.Колонки.Добавить("КолвоДней");   // для суммирования дней работы

	
	
	
	ТЗС.ЗаполнитьЗначения(0,"Выручка,Колво,КолвоДней");
	
	
	БлоковНаЛист=6; // вертикальных блоков на ширину страницы
	
	
	Таб=Новый ТабличныйДокумент;                                                                 
	МАк=ЭтотОбъект.ПолучитьМакет("Форма2");
	
//------------------<Вывод>-------------------GtG----04.03.2008

 	//------------------<На один лист по БлоковНаЛист Вертикальных секций со складами>-------------------GtG----04.03.2008
	
	//==================<Шапка>===================GtG====04.03.2008
	
	
	Секция=Мак.ПолучитьОбласть("СуперЗаг");
	Таб.Вывести(Секция);

	
	
	Пачек=Окр(ТЗС.Количество()/БлоковНаЛист,0);
	
	Если Пачек<ТЗС.Количество()/БлоковНаЛист Тогда
		Пачек=Пачек+1;
	КонецЕсли; 	
	
	
	ПервыйБлок=Истина;
	
	
	Для Ы=1 По Пачек Цикл
		
		// тут новая страцица пошла....
		
		СкладС=(Ы-1)*БлоковНаЛист;
		СкладПо=СкладС+ БлоковНаЛист-1;
		
		Если СкладПо>ТЗС.Количество()-1 ТОгда
			СкладПо=ТЗС.Количество()-1; // чтоб не вылезло за размерность таблицы
		КонецЕсли; 	
		
		
		//Сообщить(" ---Склад с "+СкладС+"  ----- по "+СкладПо);
		
		Если ПервыйБлок=Истина Тогда
			ПервыйБлок=Ложь;
		Иначе
			Таб.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		
		
		//------------------<Шапка>-------------------GtG----04.03.2008
		
		Секция=Мак.ПолучитьОбласть("Шапка|Даты");
		Таб.Вывести(Секция);
		
		
		
		Для Хы=СкладС по СкладПо Цикл
			Секция=Мак.ПолучитьОбласть("Шапка|Аптека");
			
			ИмяСклада=СокрЛП(ТЗС.Получить(ХЫ).СкладНаименованиеПоКлассификатору);
			Если ПустаяСтрока(ИмяСклада)=Истина ТОгда
				ИмяСклада=СокрЛП(ТЗС.Получить(ХЫ).Склад);
			КонецЕсли; 	
			
			Секция.Параметры.Аптека=ИмяСклада;
			Секция.Параметры.категория=ТЗС.Получить(ХЫ).Склад.СортировкаДляФинОтдела;
			
			ТАб.Присоединить(Секция);
		КонецЦикла;
		
		
		//==================<Строки>===================GtG====04.03.2008
		
		Для каждого СтрД из СписокДатПериода Цикл
			//Сообщить("СтрД = "+СтрД.Значение);
			
			Секция=Мак.ПолучитьОбласть("Строка|Даты");
			Секция.Параметры.Дата=СтрД.Значение;
			Таб.Вывести(Секция);
			
			Для Хы=СкладС по СкладПо Цикл
				Секция=Мак.ПолучитьОбласть("Строка|Аптека");
				
				ПарамПоиска= Новый Структура("Дата,Склад",КонецДня(СтрД.Значение),ТЗС.Получить(ХЫ).Склад);
				
				
				СтрТЗ=ТЗ.НайтиСтроки(ПарамПоиска);
				
				Если СтрТЗ.Количество()=0 Или СтрТЗ= Неопределено ТОгда
					СкладВыручка=0;
					СкладКолво=0;
					СкладССП=0;
				Иначе
					
					СкладВыручка=СтрТЗ.Получить(0).СуммаСоСкидкой+СтрТЗ.Получить(0).Сертификаты+СтрТЗ.Получить(0).Услуги;
					СкладКолво=СтрТЗ.Получить(0).КоличествоЧеков;
					
					
					если СтрТЗ.Получить(0).Сертификаты<>0 тогда
						Секция=Мак.ПолучитьОбласть("СтрокаС|Аптека");
					КонецЕсли;
					
					
					
					Если СкладКолво<>0 тогда
						СкладССП=ОКр(СкладВыручка/СкладКолво,2);
					Иначе
						СкладССП=0;
					КонецЕсли;	
					
										
					
					сТРтзс= ТЗС.Получить(ХЫ);
					
					сТРтзс.Выручка=сТРтзс.Выручка+СкладВыручка;
					сТРтзс.Колво=сТРтзс.Колво+ СкладКолво;
					
					Если СкладВыручка>0 Тогда
						сТРтзс.КолвоДней=сТРтзс.КолвоДней+ 1;
					КонецЕсли; 
					
					
					
					
				КонецЕсли; 
				
				 
				
				Секция.Параметры.Выручка	=  СкладВыручка;
				Секция.Параметры.ССП	   = СкладССП;
				Секция.Параметры.Колво      =СкладКолво;
				
				
				
				
				
				ТАб.Присоединить(Секция);
			КонецЦикла;
			
			
			
			
			
			
		КонецЦикла;	// по строкам
		
		
		//==================<итоги по блоку>===================GtG====04.03.2008	
		Секция=Мак.ПолучитьОбласть("иТОГИ|Даты");
		Таб.Вывести(Секция);
		
		
		
		Для Хы=СкладС по СкладПо Цикл
			Секция=Мак.ПолучитьОбласть("ИТОГИ|Аптека");
			
			Секция.Параметры.ИтВыручкаА	=ТЗС.Получить(ХЫ).Выручка;
			//Секция.Параметры.ИтКолвоА   =ТЗС.Получить(ХЫ).Колво;
			
			
			
			пОПЫТКА
				Секция.Параметры.ИтССПА	    =оКР(ТЗС.Получить(ХЫ).Выручка/ТЗС.Получить(ХЫ).Колво,2);
				Секция.Параметры.СрВыручкаА=оКР(ТЗС.Получить(ХЫ).Выручка/ТЗС.Получить(ХЫ).КолвоДней,2);
				
				Секция.Параметры.СрКолвоА= Окр(ТЗС.Получить(ХЫ).Колво/ТЗС.Получить(ХЫ).КолвоДней,2);
				
				
				

			иСКлючение
				Секция.Параметры.ИтССПА	    =0;
			КонецПопытки;
			
			
			ТАб.Присоединить(Секция);
		КонецЦикла;
		
	КонецЦикла;
	
	
	
	
	
	
	
	
	
	
	
	//Секция=Мак.ПолучитьОбласть("ИмяСек");
	//ШАпка.Параметры.КонПериода=  Знач_параметра;
	
	//Таб.Вывести(Секция);
	Таб.ПолеСверху=45;
	Таб.ОтображатьСетку=Ложь;
	Таб.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
    Таб.АвтоМасштаб=Истина;
	 Таб.ОтображатьЗаголовки=Ложь;
	 Таб.ОтображатьГруппировки=Ложь;
	 ТАб.ТолькоПросмотр=Истина;
	 
	 
	 
	ФормаВывода= ЭтотОбъект.ПолучитьФорму("ФормаВыводаОтчета2и3",ЭтаФорма,Новый УникальныйИдентификатор());
	ФормаВывода.ЭлементыФормы.ПТД.Вывести(Таб);
	ФормаВывода.НомерФормы=2;
	ФормаВывода.ПериодС=НачПериода;
	ФормаВывода.ПериодПо=КонПериода;
	ФормаВывода.ОбъектВладелец=ЭтотОбъект;
	ФормаВывода.Открыть();
	 
	 
	 

	
	
	//==================<Сводка по регионам>===================GtG====04.03.2008
	 Таб=Новый ТабличныйДокумент;                                                                 
	 МАк=ЭтотОбъект.ПолучитьМакет("Форма3");
	 Секция=Мак.ПолучитьОбласть("Шапка");
	 Секция.Параметры.НАчПер=  Формат(НачПериода,"ДФ=dd.MM.yyyy");
	 Секция.Параметры.КонПер=  Формат(КонПериода,"ДФ=dd.MM.yyyy");
	 
	 Таб.Вывести(Секция);
	 
	 
	 ТЗС.Свернуть("Регион","Выручка,Колво");
	 
	 Для каждого Стр из ТЗС Цикл
		 
		 Секция=Мак.ПолучитьОбласть("Строка");
		 Секция.Параметры. Регион	= Стр.Регион;
		 Секция.Параметры. Выручка	= Стр.Выручка;
		 Секция.Параметры. Колво     = Стр.Колво;
		 Попытка
			 Секция.Параметры. ССП	    = Окр(Стр.Выручка/Стр.Колво,2);
		 Исключение
			 Секция.Параметры. ССП	    = 0;
		 КонецПопытки; 
		 
		 
		 Таб.Вывести(Секция);
		 
	 КонецЦикла;	
	 
	Секция=Мак.ПолучитьОбласть("ИТОГО");
	
	Секция.Параметры. Выручка	= ТЗС.Итог("Выручка");
	Секция.Параметры. Колво     = ТЗС.Итог("Колво");
	Попытка
		Секция.Параметры. ССП	    = Окр(ТЗС.Итог("Выручка")/ТЗС.Итог("Колво"),2);
	ИСключение
		Секция.Параметры. ССП	    = 0;
	КонецПопытки; 
	
	 Таб.Вывести(Секция);

     Таб.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	 Таб.АвтоМасштаб=Истина;
	  
	 Таб.ОтображатьСетку=Ложь;
	 Таб.ОтображатьЗаголовки=Ложь;
	 Таб.ОтображатьГруппировки=Ложь;
	 ТАб.ТолькоПросмотр=Истина;
	
	 
	ФормаВывода= ЭтотОбъект.ПолучитьФорму("ФормаВыводаОтчета2и3",ЭтаФорма,Новый УникальныйИдентификатор());
	ФормаВывода.ЭлементыФормы.ПТД.Вывести(Таб);
	ФормаВывода.НомерФормы=3;
	ФормаВывода.ПериодС=НачПериода;
	ФормаВывода.ПериодПо=КонПериода;
	ФормаВывода.ОбъектВладелец=ЭтотОбъект;
	ФормаВывода.Открыть();

	
КонецПроцедуры	//ВывестиФорму2
//==========================================================GtG====


Процедура ИнициализацияТекстаЗапроса()
	
	
	Если СписокСортировок = "КодАптеки" Тогда
		ТекстУпорядочивания =  "УПОРЯДОЧИТЬ ПО БАЗА.Склад.Код , Дата ;";
	ИначеЕсли СписокСортировок = "НомерАптеки" Тогда
		ТекстУпорядочивания =  "УПОРЯДОЧИТЬ ПО БАЗА.Склад.НомерАптеки , Дата ;";		
	ИначеЕсли СписокСортировок = "Наименование" Тогда
		ТекстУпорядочивания =  "УПОРЯДОЧИТЬ ПО БАЗА.Склад.Наименование , Дата ;";
	Иначе
		 ТекстУпорядочивания = "	
		 |УПОРЯДОЧИТЬ ПО
           |	БАЗА.Склад.СортировкаДляФинОтдела.Код,
           |	БАЗА.СкладНаименованиеПоКлассификатору,
           |	Дата
           |; ";
	КонецЕсли;
	
Если РольДоступна("УдаленныйЗаказ") Тогда
	Разрешенные = " Разрешенные ";
Иначе
	Разрешенные = "  ";
КонецЕсли;
	
	
ТХТ_Полный="ВЫБРАТЬ " + Разрешенные + "
           |	Бух.Ссылка.Склад КАК Склад,
           |	НАЧАЛОПЕРИОДА(Бух.Ссылка.Дата, ДЕНЬ) КАК ДатаДок,
           |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Бух.Касса) КАК Касс
           |ПОМЕСТИТЬ ВТБух
           |ИЗ
           |	Документ.РеализацияККМ.Бухгалтерия КАК Бух
           |ГДЕ
           |	Бух.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Бух.Ссылка.Проведен = ИСТИНА
           |{ГДЕ
           |	Бух.Ссылка.Склад.* КАК Аптека}
           |
           |СГРУППИРОВАТЬ ПО
           |	НАЧАЛОПЕРИОДА(Бух.Ссылка.Дата, ДЕНЬ),
           |	Бух.Ссылка.Склад
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ  " + Разрешенные + "
           |	Серт.Ссылка.Склад КАК Склад,
           |	НАЧАЛОПЕРИОДА(Серт.Ссылка.Дата, ДЕНЬ) КАК ДатаДок,
           |	СУММА(ЕСТЬNULL(ВЫБОР
           |				КОГДА Серт.ОперацияССертификатом <> &ЗачетСертификата
           |					ТОГДА Серт.Сумма
           |				ИНАЧЕ 0
           |			КОНЕЦ, 0)) КАК Сертификаты
           |ПОМЕСТИТЬ ВТСерт
           |ИЗ
           |	Документ.РеализацияККМ.Сертификаты КАК Серт
           |ГДЕ
           |	Серт.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Серт.Ссылка.Проведен = ИСТИНА
           |{ГДЕ
           |	Серт.Ссылка.Склад.* КАК Аптека}
           |
           |СГРУППИРОВАТЬ ПО
           |	НАЧАЛОПЕРИОДА(Серт.Ссылка.Дата, ДЕНЬ),
           |	Серт.Ссылка.Склад
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ  " + Разрешенные + "
           |	Авансы.Ссылка.Склад КАК Склад,
           |	НАЧАЛОПЕРИОДА(Авансы.Ссылка.Дата, ДЕНЬ) КАК ДатаДок,
           |	СУММА(Авансы.Сумма) КАК Авансы
           |ПОМЕСТИТЬ ВТАвансы
           |ИЗ
           |	Документ.РеализацияККМ.АвансыПоУслугам КАК Авансы
           |ГДЕ
           |	Авансы.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Авансы.Ссылка.Проведен = ИСТИНА
           |{ГДЕ
           |	Авансы.Ссылка.Склад.* КАК Аптека}
           |
           |СГРУППИРОВАТЬ ПО
           |	НАЧАЛОПЕРИОДА(Авансы.Ссылка.Дата, ДЕНЬ),
           |	Авансы.Ссылка.Склад
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ  " + Разрешенные + "
           |	Товары.Ссылка.Склад КАК Склад,
           |	НАЧАЛОПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаДок,
           |	КОЛИЧЕСТВО(Товары.Ссылка) КАК КоличествоТовара,
		   |	Сумма(ЗакупочнаяСНДС) как СуммаЗакупки
           |ПОМЕСТИТЬ ВТОднаСтрока
           |ИЗ
           |	Документ.РеализацияККМ.Бухгалтерия КАК Товары
           |ГДЕ
           |	Товары.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Товары.Ссылка.Проведен = ИСТИНА
           |	И Товары.Ссылка.Затычка = ИСТИНА
           |{ГДЕ
           |	Товары.Ссылка.Склад.* КАК Аптека}
           |
           |СГРУППИРОВАТЬ ПО
           |	НАЧАЛОПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ),
           |	Товары.Ссылка.Склад
           |
           |ИМЕЮЩИЕ
           |	КОЛИЧЕСТВО(Товары.Ссылка) = 1  и  Сумма(ЗакупочнаяСНДС) = 0
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ РАЗРЕШЕННЫЕ
           |	БАЗА.Дата КАК Дата,
           |	БАЗА.Склад,
           |	NULL КАК Док,
           |	БАЗА.СуммаСоСкидкой,
           |	ВЫРАЗИТЬ(БАЗА.ССП КАК ЧИСЛО(15, 2)) КАК ССП,
           |	БАЗА.Проверен,
           |	БАЗА.КоличествоЧеков,
           |	БАЗА.Код,
           |	ЕСТЬNULL(ВТБух.Касс, 0) КАК Касс,
           |	БАЗА.СкладНаименованиеПоКлассификатору КАК СкладНаименованиеПоКлассификатору,
           |	БАЗА.СкладРегионКод КАК СкладРегионКод,
           |	БАЗА.Регион,
           |	БАЗА.Затычка,
           |	ЕСТЬNULL(ВТСерт.Сертификаты, 0) КАК Сертификаты,
           |	ЕСТЬNULL(ВТАвансы.Авансы, 0) КАК Услуги,
           |	БАЗА.НаихудшаяПричинаНекорректности,
           |	ЕСТЬNULL(ВТОднаСтрока.КоличествоТовара, 0) КАК КоличествоТовара,
           |	БАЗА.РежимРаботы,
           |	ВЫБОР
           |		КОГДА БАЗА.СпособОбмена = ЗНАЧЕНИЕ(Перечисление.СпособОбменаСАптекой.Репликатор)
           |			ТОГДА ""RPL""
           |		КОГДА БАЗА.СпособОбмена = ЗНАЧЕНИЕ(Перечисление.СпособОбменаСАптекой.Служба)
           |			ТОГДА ""FTP""
           |		КОГДА БАЗА.СпособОбмена = ЗНАЧЕНИЕ(Перечисление.СпособОбменаСАптекой.PostgreSQL)
           |			ТОГДА ""DB""
           |	КОНЕЦ КАК СпособОбмена
           |ИЗ
           |	(ВЫБРАТЬ
           |		НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) КАК Дата,
           |		РеализацияККМ.Склад КАК Склад,
           |		NULL КАК Док,
           |		СУММА(РеализацияККМ.СуммаСоСкидкой) КАК СуммаСоСкидкой,
           |		ВЫБОР
           |			КОГДА СУММА(РеализацияККМ.КоличествоЧеков) = 0
           |				ТОГДА 0
           |			ИНАЧЕ СУММА(РеализацияККМ.СуммаСоСкидкой) / СУММА(РеализацияККМ.КоличествоЧеков)
           |		КОНЕЦ КАК ССП,
           |		МАКСИМУМ(РеализацияККМ.Проверен) КАК Проверен,
           |		СУММА(РеализацияККМ.КоличествоЧеков) КАК КоличествоЧеков,
           |		РеализацияККМ.Склад.Код КАК Код,
           |		РеализацияККМ.Склад.НаименованиеПоКлассификатору КАК СкладНаименованиеПоКлассификатору,
           |		РеализацияККМ.Склад.Регион.Код КАК СкладРегионКод,
           |		РеализацияККМ.Склад.Регион КАК Регион,
           |		РеализацияККМ.Склад.РежимРаботы КАК РежимРаботы,
           |		МАКСИМУМ(РеализацияККМ.Затычка) КАК Затычка,
           |		МАКСИМУМ(РеализацияККМ.НаихудшаяПричинаНекорректности) КАК НаихудшаяПричинаНекорректности,
           |		РеализацияККМ.Склад.СпособОбмена КАК СпособОбмена
           |	ИЗ
           |		Документ.РеализацияККМ КАК РеализацияККМ
           |	ГДЕ
           |		РеализацияККМ.Проведен = ИСТИНА
           |		И РеализацияККМ.Дата МЕЖДУ &Дата1 И &Дата2
           |	{ГДЕ
           |		РеализацияККМ.Склад.* КАК Аптека}
           |	
           |	СГРУППИРОВАТЬ ПО
           |		НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ),
           |		РеализацияККМ.Склад,
           |		РеализацияККМ.Склад.Код,
           |		РеализацияККМ.Склад.НаименованиеПоКлассификатору,
           |		РеализацияККМ.Склад.Регион.Код,
           |		РеализацияККМ.Склад.Регион,
           |		РеализацияККМ.Склад.РежимРаботы,
           |		РеализацияККМ.Склад.СпособОбмена
           |	
           |	ОБЪЕДИНИТЬ ВСЕ
           |	
           |	ВЫБРАТЬ
           |		&Дата1,
           |		МестаХранения.Ссылка,
           |		NULL,
           |		0,
           |		0,
           |		ЛОЖЬ,
           |		0,
           |		МестаХранения.Код,
           |		МестаХранения.НаименованиеПоКлассификатору,
           |		МестаХранения.Регион.Код,
           |		МестаХранения.Регион,
           |		МестаХранения.РежимРаботы,
           |		ИСТИНА,
           |		NULL,
           |		МестаХранения.СпособОбмена
           |	ИЗ
           |		Справочник.МестаХранения КАК МестаХранения
           |	ГДЕ
           |		МестаХранения.ПометкаУдаления = ЛОЖЬ
           |		И МестаХранения.ТипСклада = &Розничный
           |		И НЕ МестаХранения.Ссылка В
           |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
           |						РеализацияККМ.Склад КАК Склад
           |					ИЗ
           |						Документ.РеализацияККМ КАК РеализацияККМ
           |					ГДЕ
           |						РеализацияККМ.Проведен = ИСТИНА
           |						И РеализацияККМ.Дата МЕЖДУ &Дата1 И &Дата2)
           |		И МестаХранения.ДатаПерехода <= &Дата2
           |		И (МестаХранения.ДатаЗакрытия = &ПустаяДата
           |				ИЛИ МестаХранения.ДатаЗакрытия МЕЖДУ &Дата1плюс1 И &Дата2плюс1)
           |	{ГДЕ
           |		МестаХранения.Ссылка.* КАК Аптека}) КАК БАЗА
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТБух КАК ВТБух
           |		ПО (ВТБух.ДатаДок = БАЗА.Дата)
           |			И (ВТБух.Склад = БАЗА.Склад)
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТСерт КАК ВТСерт
           |		ПО (ВТСерт.ДатаДок = БАЗА.Дата)
           |			И (ВТСерт.Склад = БАЗА.Склад)
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТАвансы КАК ВТАвансы
           |		ПО (ВТАвансы.ДатаДок = БАЗА.Дата)
           |			И (ВТАвансы.Склад = БАЗА.Склад)
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТОднаСтрока КАК ВТОднаСтрока
           |		ПО (ВТОднаСтрока.ДатаДок = БАЗА.Дата)
           |			И (ВТОднаСтрока.Склад = БАЗА.Склад)
           |{ГДЕ
           |	БАЗА.Склад.* КАК АПТЕКА}";
		   
           ТХТ_Полный = ТХТ_Полный + ТекстУпорядочивания;
		   
           ТХТ_Полный = ТХТ_Полный + "
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТОднаСтрока
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТБух
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТСерт
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТАвансы";	
	
КонецПроцедуры





Процедура КнопкаСформироватьНажатие(Кнопка)
	
	Построитель1 = Новый ПостроительОтчета;
	Построитель1.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                     |	МестаХранения.Код,
	                     |	МестаХранения.Наименование,
	                     |	МестаХранения.НомерАптеки,
	                     |	МестаХранения.ДатаЗакрытия,
	                     |	МестаХранения.ДатаПерехода,
	                     |	МестаХранения.Ссылка,
	                     |	МестаХранения.РежимРаботы,
	                     |	ВЫБОР
	                     |		КОГДА МестаХранения.СпособОбмена = ЗНАЧЕНИЕ(Перечисление.СпособОбменаСАптекой.Репликатор)
	                     |			ТОГДА ""Рпл.""
	                     |		КОГДА МестаХранения.СпособОбмена = ЗНАЧЕНИЕ(Перечисление.СпособОбменаСАптекой.Служба)
	                     |			ТОГДА ""Чеки""
	                     |		КОГДА МестаХранения.СпособОбмена = ЗНАЧЕНИЕ(Перечисление.СпособОбменаСАптекой.PostgreSQL)
	                     |			ТОГДА ""PG""
	                     |		ИНАЧЕ ""--""
	                     |	КОНЕЦ КАК СпособОбмена
	                     |ИЗ
	                     |	Справочник.МестаХранения КАК МестаХранения
	                     |{ГДЕ
	                     |	МестаХранения.Ссылка.* КАК Аптека}";
						 
	Построитель1.УстановитьНастройки(Построитель.ПолучитьНастройки(Истина),Истина);
	Построитель1.Выполнить();
	Выборка = Построитель1.Результат.Выбрать();
	АтрибутыАптеки = Новый Соответствие;
	
	
	Пока Выборка.Следующий() Цикл
		Реквизиты = Новый структура();
		Реквизиты.Вставить("Наименование",Выборка.Наименование);
		Реквизиты.Вставить("Код",Выборка.Код);
		Реквизиты.Вставить("НомерАптеки",Выборка.НомерАптеки);
		Реквизиты.Вставить("ДатаЗакрытия",Выборка.ДатаЗакрытия);
		Реквизиты.Вставить("ДатаПерехода",Выборка.ДатаПерехода);
		Реквизиты.Вставить("РежимРаботы",Выборка.РежимРаботы);
		Реквизиты.Вставить("СпособОбмена",Выборка.СпособОбмена);
		
		АтрибутыАптеки.Вставить(Выборка.Код	,Реквизиты);
	КонецЦикла;
	
	
	Построитель1.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                     |	Кассы.Владелец.Код КАК КодАптеки,
	                     |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Кассы.Ссылка) КАК КассВсего
	                     |ИЗ
	                     |	Справочник.Кассы КАК Кассы
	                     |ГДЕ
	                     |	Кассы.ПометкаУдаления = ЛОЖЬ
	                     |{ГДЕ
	                     |	Кассы.Владелец.* КАК Аптека}
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	Кассы.Владелец.Код";
						 
	Построитель1.Выполнить();
	Выборка = Построитель1.Результат.Выбрать();
	КоличествоКасс = Новый Соответствие;
	
	
	Пока Выборка.Следующий() Цикл
		КоличествоКасс.Вставить(Выборка.КодАптеки,Выборка.КассВсего);
	КонецЦикла;
	
	
	
	НетВыручки=Новый ТаблицаЗначений;
	НетВыручки.Очистить();
	НетВыручки.Колонки.Добавить("Аптека");
	НетВыручки.Колонки.Добавить("Даты");
	
    ИнициализацияТекстаЗапроса();
	
	
	Если ВыборВариантОтчета = "Упрощенный" Тогда
		Построитель.Текст = ТХТ_Полный;
	ИначеЕсли ВыборВариантОтчета = "ПроблемныеАптеки" Тогда
		Построитель.Текст = ТХТ_Проблемные;
	Иначе
		Построитель.Текст = ТХТ_Полный;
	КонецЕсли;
	
	
	Построитель.Параметры.Очистить();
	Построитель.Параметры.Вставить("Дата1",НачалоДня(НачПериода));
	Построитель.Параметры.Вставить("Дата2",КонецДня(КонПериода));
	Построитель.Параметры.Вставить("Розничный",Перечисления.ТипыМХ.Розн);
	Построитель.Параметры.Вставить("ЗачетСертификата",Перечисления.ВидыОперацийССертификатами.Зачет);
	Построитель.Параметры.Вставить("Дата1плюс1",КонецДня(НачПериода)+24*60*60);
	Построитель.Параметры.Вставить("Дата2плюс1",КонецДня(КонПериода)+24*60*60);
	Построитель.Параметры.Вставить("ПустаяДата",Дата("00010101000000"));
	
	Построитель.Выполнить();
	
	ТЗ=Построитель.Результат.Выгрузить();
    
    Тз.Колонки.Удалить("Док");
    
    ЗапросПодокументам=Новый Запрос();
    ЗапросПоДокументам.Текст="ВЫБРАТЬ
                             |  ТЗ.Дата КАК Дата,
                             |  ТЗ.склад КАК склад
                             |ПОМЕСТИТЬ ДатаСклад
                             |ИЗ
                             |  &ТЗ КАК ТЗ
                             |
                             |ИНДЕКСИРОВАТЬ ПО
                             |  Дата,
                             |  склад
                             |;
                             |
                             |////////////////////////////////////////////////////////////////////////////////
                             |ВЫБРАТЬ Разрешенные
                             |  ДатаСклад.Дата КАК Дата,
                             |  ДатаСклад.склад КАК склад,
                             |  РеализацияККМ.Ссылка,
                             |  РеализацияККМ.Затычка,
                             |  РеализацияККМ.СуммаСоСкидкой
                             |ИЗ
                             |  ДатаСклад КАК ДатаСклад
                             |      ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияККМ КАК РеализацияККМ
                             |      ПО ДатаСклад.склад = РеализацияККМ.Склад
                             |          И (НАЧАЛОПЕРИОДА(ДатаСклад.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ))
                             |ИТОГИ ПО
                             |  Дата,
                             |  склад";
                             
     ЗапросПоДокументам.УстановитьПараметр("ТЗ",ТЗ);
     
     Тз.Колонки.Добавить("Док");
     
     Выб=ЗапросПодокументам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
     
     Пока Выб.Следующий() Цикл
         Выб2=Выб.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
         Пока Выб2.Следующий() Цикл
             Выб3=Выб2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
             
             МассивСтрТЗ=ТЗ.НайтиСтроки(Новый Структура("Дата,склад",Выб2.Дата,Выб2.Склад));
             
             СтруктураДокументов=Новый Структура;
             СтруктураДокументов.Вставить("Затычка",Ложь);
             СтруктураДокументов.Вставить("Сумма",0);
             МассивДокументов=Новый Массив;
             
             Пока Выб3.Следующий() Цикл
                    МассивДокументов.Добавить(Выб3.Ссылка); 
                    
                    Если Выб3.Затычка=Истина Тогда
                        СтруктураДокументов.Вставить("Затычка",Истина);
                    КонецЕсли;    

                    СуммаБыла=СтруктураДокументов.Сумма;
                    СтруктураДокументов.Вставить("Сумма",СуммаБыла+Выб3.СуммаСоСкидкой);
                КонецЦикла;
             СтруктураДокументов.Вставить("МассивДокументов",МассивДокументов);   
             
             МассивСтрТЗ.Получить(0).Док=СтруктураДокументов;
             
         КонецЦикла;
         
     КонецЦикла;     
     
             
     
     
     
    
    
	
	Если Форма2=Истина ТОгда
		ВывестиФорму2(ТЗ);
		//Возврат;
	КонецЕсли; 	
	
	ЭлементыФормы.ПТД.Очистить();
	ЭлементыФормы.ПТД.ОтображатьСетку=Ложь;
	ЭлементыФормы.ПТД.ОтображатьЗаголовки=Ложь;
	
	ЭлементыФормы.ПТД.ТолькоПросмотр=Истина;
	
	
	
	//Таб=Новый ТабличныйДокумент; 
	Если ВыборВариантОтчета = "Упрощенный" Тогда
		МАк=ЭтотОбъект.ПолучитьМакет("МакетУпрощенный");
	//ТСО 11.09.2014
	ИначеЕсли ВыборВариантОтчета = "Развернутый" Тогда
		МАк=ЭтотОбъект.ПолучитьМакет("МакетРазвернутый");
	//*ТСО
	Иначе
		МАк=ЭтотОбъект.ПолучитьМакет("Макет");
	КонецЕсли;
	
	
	
	
	//------------------<Состряпаем шапку>-------------------GtG----28.01.2008
	
	Секция=Мак.ПолучитьОбласть("Шапка|ЗАг");
	Секция.Параметры.ТекДата=ТекущаяДата();
	 ЭлементыФормы.ПТД.Вывести(Секция);
	
	
	РазницаСек=НачалоДня(КонПериода)-НачалоДня(НачПериода);
	
	РАзницаДней=РазницаСек/60/60/24;
	
	//Сообщить(РазницаДней);
	
	
		
	
	
	
	ДЛя Ы=0 по РазницаДней Цикл
		ТекДата=НачалоДня(НачПериода)+60*60*24*Ы;
		
		Секция=Мак.ПолучитьОбласть("Шапка|День");
		Секция.Параметры.ДАтаОтч=ТекДАта;
		ЭлементыФормы.ПТД.Присоединить(Секция);
	КонецЦикла;   
	Секция=Мак.ПолучитьОбласть("Шапка|Итоги");
	ЭлементыФормы.ПТД.Присоединить(Секция);
	Секция=Мак.ПолучитьОбласть("Шапка|ИтогиСреднее");
	ЭлементыФормы.ПТД.Присоединить(Секция);
	
	//ТСО 25.06.2014
	Если ВыборВариантОтчета = "Расширенный" Тогда		
		Секция = Мак.ПолучитьОбласть("Шапка|ПроблемныхДней");
		ЭлементыФормы.ПТД.Присоединить(Секция);
		
		Секция = Мак.ПолучитьОбласть("Шапка|Онлайн");
		ЭлементыФормы.ПТД.Присоединить(Секция);
		
	КонецЕсли;
	
	ПроблемныхДнейИтого = 0;
	//*ТСО
	
	//--------------------------------------------------------GtG----КОНЕЦ--28.01.2008
	
	ТЗА=ТЗ.Скопировать();
	
	ТЗА.Свернуть("Склад,Код","");
	
	//ТСО 25.06.2014
	Если ВыборВариантОтчета = "Расширенный" Тогда		
		ТаблицаОнлайновостиАптек = ПолучитьОнлайновостьАптек(ТЗА);
		
	КонецЕсли;
	//*ТСО
	
	//-------------------------------------------------------------------
	ЭлементыФормы.Инд.Значение=0;
	ЭлементыФормы.Инд.МаксимальноеЗначение=ТЗА.Количество();
	
	ххх=0;
	КруглосуточнаяАптека = Справочники.РежимыРаботыАптек.НайтиПоНаименованию("круглосуточно",Истина);
	
	
	Для каждого Стр из ТЗА Цикл	
		СтрНВ=НетВыручки.Добавить();
		СтрНВ.Аптека= СТР.Склад;
	
		
		ТЗВыводимыхДат= Новый ТаблицаЗначений;
		ТЗВыводимыхДат.Колонки.Добавить("ДАта");
		ТЗВыводимыхДат.Колонки.Добавить("СсылкаНаСтрокуТЗ");
		
		ТЗВыводимыхДат.ЗаполнитьЗначения( Неопределено , "СсылкаНаСтрокуТЗ");
		
		
		ДЛя Ы=0 по РазницаДней Цикл
			СтрТЗВД=ТЗВыводимыхДат.Добавить();
			СтрТЗВД.Дата=НачалоДня(НачПериода+60*60*24*Ы);
		КонецЦикла;
		
		
		
		
		ТЗДанных=ТЗ.НайтиСтроки( Новый Структура("Склад",СТР.Склад));
		
		Для каждого СтрТЗДанных из ТЗДанных Цикл
			
			СтрТЗВД=ТЗВыводимыхДат.Найти(НачалоДня(СтрТЗДанных.Дата),"Дата");
			ЕСли СтрТЗВД<> Неопределено ТОгда
				СтрТЗВД.СсылкаНаСтрокуТЗ=СтрТЗДанных;
			КонецЕсли;	
		КонецЦикла;
		
		
		//------------------<Выводим строку отчета>-------------------GtG----28.01.2008
		Если АтрибутыАптеки.Получить(Стр.Код).РежимРаботы = КруглосуточнаяАптека Тогда
			Текст24часа = "24 часа";
		Иначе
			Текст24часа = "";
		КонецЕсли;
		
		Секция=Мак.ПолучитьОбласть("Строка|ЗАг");
		Секция.Параметры.НомерАптеки	= Формат(АтрибутыАптеки.Получить(Стр.Код).НомерАптеки,"ЧГ=0");
		Секция.Параметры.Код	= АтрибутыАптеки.Получить(Стр.Код).Код;
		Секция.Параметры.СпособОбмена	= АтрибутыАптеки.Получить(Стр.Код).СпособОбмена;
		Секция.Параметры.Аптека        = Стр.Склад;
		
		//ТСО 11.09.2014
		Если ВыборВариантОтчета <> "Развернутый" Тогда
			Секция.Параметры.Режим = " " + Текст24часа;
		КонецЕсли;
		//*ТСО
		
		Секция.Параметры.СсылкаАптеки = Стр.Склад;
		
		 ЭлементыФормы.ПТД.Вывести(Секция);
		 
		 
		КассНаАптеке = КоличествоКасс.Получить(стр.Код);
		Если КассНаАптеке = Неопределено или КассНаАптеке = NULL Тогда
			КассНаАптеке = 0;
		КонецЕсли;

		
		 
		
		//------------------<Выводим даты>-------------------GtG----28.01.2008
		РабочихДней=0;
		ИтВыручка=0;
		ИтКолво=     0;
		
		ПроблемныхДнейПоАптеке = 0; //ТСО 25.06.2014
		
		ДЛя Каждого СтрТЗДат ИЗ ТЗВыводимыхДат Цикл
			//ТекДата=НачалоДня(НачПериода)+60*60*24*Ы;
			
			РабочихДней=РабочихДней+1;
			
			Если  СтрТЗДат.СсылкаНаСтрокуТЗ <> Неопределено ТОгда
				ЕстьСертификаты=?(СтрТЗДат.СсылкаНаСтрокуТЗ.Сертификаты<>0,Истина,Ложь);
			Иначе	
				ЕстьСертификаты=Ложь;
			КонецЕсли;	
			
			Секция=Мак.ПолучитьОбласть("Строка|День"+?(ЕстьСертификаты=Истина,"С",""));  // беленький
			
									
			
			
			
			Если  СтрТЗДат.СсылкаНаСтрокуТЗ = Неопределено ТОгда
				РабочихДней=РабочихДней-1;// не угадали.

				// Либо нет выручки, либо аптека еще не открылась
				
				//Сообщить(Стр.Склад);
				
				Если  	СтрТЗДат.ДАта>=АтрибутыАптеки.Получить(Стр.Код).ДатаПерехода и 
						СтрТЗДат.ДАта<?(ОМ3_ЭтоПустаяДата(АтрибутыАптеки.Получить(Стр.Код).ДатаЗакрытия)=Истина,Дата("20501231235959"),АтрибутыАптеки.Получить(Стр.Код).ДатаЗакрытия ) =истина
				ТОгда
					
					Секция=Мак.ПолучитьОбласть("Строка|День1"); // [X]//Нет данных по выручке!
					
					ДляЗатычки= Новый СписокЗначений;
					ДляЗатычки.Добавить(Стр.Склад);
					ДляЗатычки.Добавить(СтрТЗДат.ДАта);
					
					Секция.Параметры.ДляЗатычки=ДляЗатычки;
					
					//------------------<ЗАпись в табличку косяков>-------------------GtG----27.06.2008
					СтрНВ.Даты=""+СтрНВ.Даты+ Формат(СтрТЗДат.ДАта,"ДФ=dd.MM.yy")+" , ";
					
					ПроблемныхДнейПоАптеке = ПроблемныхДнейПоАптеке + 1; //ТСО 25.06.2014
					
				Иначе
					
					Секция=Мак.ПолучитьОбласть("Строка|День6");// [---]прочерк аптека не открывалась еще или уже закрылась
					ДляЗатычки= Новый СписокЗначений;
					ДляЗатычки.Добавить(Стр.Склад);
					ДляЗатычки.Добавить(СтрТЗДат.ДАта);

					Секция.Параметры.ДляЗатычки=ДляЗатычки;
					
				КонецЕсли;
				
				
				
				
				
			Иначе

				//было 12.08.2013 Если СтрТЗДат.СсылкаНаСтрокуТЗ.СуммаСоСкидкой=0 и СтрТЗДат.СсылкаНаСтрокуТЗ.ССП=0 и СтрТЗДат.СсылкаНаСтрокуТЗ.КоличествоЧеков=0 ТОгда
				Если СтрТЗДат.СсылкаНаСтрокуТЗ.СуммаСоСкидкой=0  ТОгда
				// это затычка на нерабочий день или вообще пустой день
					РабочихДней=РабочихДней-1;// не угадали

					Если СтрТЗДат.СсылкаНаСтрокуТЗ.Док=неопределено Тогда // отсутствует структура //  СтрТЗДат.СсылкаНаСтрокуТЗ.Док.МассивДокументов.Количество()=0 тогда
						// это вообще пустой день  и по аптеке за период небыло ни одной выручки

						
						
						
						Если  	СтрТЗДат.ДАта>=АтрибутыАптеки.Получить(Стр.Код).ДатаПерехода и 
								ОМ3_ЭтоПустаяДата(АтрибутыАптеки.Получить(Стр.Код).ДатаЗакрытия)=Истина  ТОгда // аптека открыта и нет выручек вообще за период
							Секция=Мак.ПолучитьОбласть("Строка|День1");
							
							ДляЗатычки= Новый СписокЗначений;
							ДляЗатычки.Добавить(Стр.Склад);
							ДляЗатычки.Добавить(СтрТЗДат.ДАта);
							
							Секция.Параметры.ДляЗатычки=ДляЗатычки;
							
							//------------------<ЗАпись в табличку косяков>-------------------GtG----27.06.2008
							Если СтрТЗДат.ДАта>=АтрибутыАптеки.Получить(Стр.Код).ДатаПерехода Тогда
								СтрНВ.Даты=""+СтрНВ.Даты+ Формат(СтрТЗДат.ДАта,"ДФ=dd.MM.yy")+" , ";
							КонецЕсли;
							
							ПроблемныхДнейПоАптеке = ПроблемныхДнейПоАптеке + 1; //ТСО 25.06.2014
							
						Иначе
							Секция=Мак.ПолучитьОбласть("Строка|День6");// прочерк аптека не открывалась еще
							
							ДляЗатычки= Новый СписокЗначений;
							ДляЗатычки.Добавить(Стр.Склад);
							ДляЗатычки.Добавить(СтрТЗДат.ДАта);
							
							
							Секция.Параметры.ДляЗатычки=ДляЗатычки;

						КонецЕсли;
						
						
					иначе // есть структура Док
						// это затычка на нерабочий день
						Секция=Мак.ПолучитьОбласть("Строка|День2");
					КонецЕсли;
					
				Иначе	
					
					Если СтрТЗДат.СсылкаНаСтрокуТЗ.Затычка=Истина ТОгда // Это затычка на выручку
						
						
						
						
						Если СтрТЗДат.СсылкаНаСтрокуТЗ.КоличествоТовара=1 ТОгда
							
							Секция=Мак.ПолучитьОбласть("Строка|День4"+?(ЕстьСертификаты=Истина,"С",""));// голубенькая затычечка
						Иначе
							
							
							Если СтрТЗДат.СсылкаНаСтрокуТЗ.НаихудшаяПричинаНекорректности=Перечисления.ПричиныНекорректнойВыручки.ПроданаНеопознаннаяПартия ТОгда
								Секция=Мак.ПолучитьОбласть("Строка|День8"+?(ЕстьСертификаты=Истина,"С","") );// зюлёненькая затычечка
							Иначе	 
								Секция=Мак.ПолучитьОбласть("Строка|День5"+?(ЕстьСертификаты=Истина,"С","") );// зюлёненькая затычечка
							КонецЕсли;
						КонецЕсли;
						
						Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" или ВыборВариантОтчета = "Развернутый" Тогда
							Секция.Параметры.Касс="?";
							Секция.Параметры.ВсегоКасс=КассНаАптеке;
						КонецЕсли;
						Секция.Параметры.Документ= СтрТЗДат.СсылкаНаСтрокуТЗ.Док;
						
						//------------------<ЗАпись в табличку косяков>-------------------GtG----27.06.2008
						Если СтрТЗДат.ДАта>=АтрибутыАптеки.Получить(Стр.Код).ДатаПерехода Тогда
							СтрНВ.Даты=""+СтрНВ.Даты+" "+Формат(СтрТЗДат.ДАта,"ДФ=dd.MM.yy")+" , ";
						КонецЕсли;
						
						ПроблемныхДнейПоАптеке = ПроблемныхДнейПоАптеке + 1; //ТСО 25.06.2014
						
                    ИначеЕсли КассНаАптеке>СтрТЗДат.СсылкаНаСтрокуТЗ.Касс Тогда // Это подозрительная реализация
						Секция=Мак.ПолучитьОбласть("Строка|День3"+?(ЕстьСертификаты=Истина,"С",""));
						Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" или ВыборВариантОтчета = "Развернутый" Тогда
							Секция.Параметры.Касс=СтрТЗДат.СсылкаНаСтрокуТЗ.Касс;
							Секция.Параметры.ВсегоКасс=КассНаАптеке;
						КонецЕсли;
						Секция.Параметры.Документ= СтрТЗДат.СсылкаНаСтрокуТЗ.Док;

					КонецЕсли;	
					
					Если СтрТЗДат.СсылкаНаСтрокуТЗ <> Неопределено Тогда 
						Если СтрТЗДат.СсылкаНаСтрокуТЗ.Проверен=истина и 
							СтрТЗДат.СсылкаНаСтрокуТЗ.Затычка=Ложь  тогда
							Секция=Мак.ПолучитьОбласть("Строка|День7"+?(ЕстьСертификаты=Истина,"С",""));
						КонецЕсли;
                    КонецЕсли;
					
					
					Секция.Параметры.Выручка=СтрТЗДат.СсылкаНаСтрокуТЗ.СуммаСоСкидкой+СтрТЗДат.СсылкаНаСтрокуТЗ.Сертификаты+СтрТЗДат.СсылкаНаСтрокуТЗ.Услуги ;
					Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" или ВыборВариантОтчета = "Развернутый" Тогда
						Секция.Параметры.ССП=       СтрТЗДат.СсылкаНаСтрокуТЗ.ССП;
						Секция.Параметры.Колво=     СтрТЗДат.СсылкаНаСтрокуТЗ.КоличествоЧеков;
						ИтКолво=ИтКолво+   СтрТЗДат.СсылкаНаСтрокуТЗ.КоличествоЧеков;
					КонецЕсли;
					
					ИтВыручка=ИтВыручка+СтрТЗДат.СсылкаНаСтрокуТЗ.СуммаСоСкидкой+СтрТЗДат.СсылкаНаСтрокуТЗ.Сертификаты+СтрТЗДат.СсылкаНаСтрокуТЗ.Услуги;
					
				КонецЕсли; 
				
				
			КонецЕсли; 
			
			
            Попытка
                СтруктураПарам=Новый Структура();
                СтруктураПарам.Вставить("Дата",СтрТЗДат.СсылкаНаСтрокуТЗ.Дата);
                СтруктураПарам.Вставить("Склад",СтрТЗДат.СсылкаНаСтрокуТЗ.Склад);
                
				Секция.Параметры.Документ=СтруктураПарам; //СтрТЗДат.СсылкаНаСтрокуТЗ.Док;
			Исключение
			КонецПопытки;
				
			
			
			 ЭлементыФормы.ПТД.Присоединить(Секция);
		КонецЦикла;   
		//------------------<ИТОГИ ПО СТРОКЕ>-------------------GtG----28.01.2008
		Секция=Мак.ПолучитьОбласть("Строка|иТОГИ");
		Секция.Параметры.Выручка=ИтВыручка;
		Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" или ВыборВариантОтчета = "Развернутый" Тогда
			Секция.Параметры.Колво=  ИтКолво;
			
			Если ИтКолво<>0 Тогда
				Секция.Параметры.ССП=  ИтВыручка/ИтКолво;
			Иначе
				Секция.Параметры.ССП= 0;
			КонецЕсли;  
		КонецЕсли;
		 ЭлементыФормы.ПТД.Присоединить(Секция);
		 
		 
		 //------------------<Среднее ИТОГИ ПО СТРОКЕ>-------------------GtG----28.01.2008
		Секция=Мак.ПолучитьОбласть("Строка|ИтогиСреднее");
		
		Если РабочихДней<>0 Тогда
			
			Секция.Параметры.Выручка=ИтВыручка/РабочихДней;
			Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" или ВыборВариантОтчета = "Развернутый" Тогда
				Секция.Параметры.Колво=  ИтКолво/РабочихДней;
				
				Если ИтКолво<>0 Тогда
					Секция.Параметры.ССП=  Секция.Параметры.Выручка/Секция.Параметры.Колво;
				Иначе
					Секция.Параметры.ССП= 0;
				КонецЕсли;  
			КонецЕсли;
			ЭлементыФормы.ПТД.Присоединить(Секция);
		Иначе// невозможно рассчитать среднее
			Секция.Параметры.Выручка="---";
			Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" или ВыборВариантОтчета = "Развернутый" Тогда
				Секция.Параметры.Колво= "---";
				Секция.Параметры.ССП= "---";
			КонецЕсли;
 			ЭлементыФормы.ПТД.Присоединить(Секция);
		КонецЕсли;
		
		//ТСО 25.06.2014
		Если ВыборВариантОтчета = "Расширенный" Тогда
			
			Если ПроблемныхДнейПоАптеке > 0 Тогда
				Секция = Мак.ПолучитьОбласть("Строка|ПроблемныхДнейВариант2");
			Иначе
				Секция = Мак.ПолучитьОбласть("Строка|ПроблемныхДней");
			КонецЕсли;
			
			Секция.Параметры.Колво = ПроблемныхДнейПоАптеке;
			ЭлементыФормы.ПТД.Присоединить(Секция);
			
			НайденнаяСтрока = ТаблицаОнлайновостиАптек.Найти(СТР.Склад, "Ссылка");
			
			Если НайденнаяСтрока <> Неопределено Тогда
				Секунд = НайденнаяСтрока.Время;
			Иначе
				Секунд = 0;
			КонецЕсли;
			
			Если Секунд > 86400 Тогда
				Секция = Мак.ПолучитьОбласть("Строка|ОнлайнВариант2");
			Иначе
				Секция = Мак.ПолучитьОбласть("Строка|Онлайн");
			КонецЕсли;
			
			Секция.Параметры.Секунд = Секунд;
			ЭлементыФормы.ПТД.Присоединить(Секция);
			
		КонецЕсли;
		
		ПроблемныхДнейИтого = ПроблемныхДнейИтого + ПроблемныхДнейПоАптеке;
		//*ТСО
		
		ххх=ххх+1;
		Если ххх%10=0 тогда
			ЭлементыФормы.Инд.Значение=ХХХ;
		КонецЕсли;
		ОбработкаПрерыванияПользователя();
		
	КонецЦикла;	
	
	ЭлементыФормы.Инд.Значение=ХХХ;
	
	
	//==================<ИТОГИ>===================GtG====28.01.2008		
	Для каждого Стр из ТЗ Цикл
		Стр.ДАта=НачалоДня(Стр.Дата);
	КонецЦикла;		
	
	Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" или ВыборВариантОтчета = "Развернутый" Тогда
		ТЗ.Свернуть("Дата","СуммаСоСкидкой,КоличествоЧеков,Сертификаты,Услуги");
	Иначе
		ТЗ.Свернуть("Дата","СуммаСоСкидкой,Сертификаты,Услуги");
	КонецЕсли;
	
	ТЗВыводимыхДат= Новый ТаблицаЗначений;
	ТЗВыводимыхДат.Колонки.Добавить("ДАта");
	ТЗВыводимыхДат.Колонки.Добавить("СсылкаНаСтрокуТЗ");
	
	ТЗВыводимыхДат.ЗаполнитьЗначения( Неопределено , "СсылкаНаСтрокуТЗ");
	
	
	ДЛя Ы=0 по РазницаДней Цикл
		СтрТЗВД=ТЗВыводимыхДат.Добавить();
		СтрТЗВД.Дата=НачалоДня(НачПериода+60*60*24*Ы);
	КонецЦикла;
	
	
	Для каждого СтрТЗДанных из ТЗ Цикл
		
		СтрТЗВД=ТЗВыводимыхДат.Найти(НачалоДня(СтрТЗДанных.Дата),"Дата");
		
		ЕСли СтрТЗВД<> Неопределено ТОгда
			СтрТЗВД.СсылкаНаСтрокуТЗ=СтрТЗДанных;
		КонецЕсли;	
		
	КонецЦикла;
	
	
	//------------------<Выводим строку отчета>-------------------GtG----28.01.2008
	Секция=Мак.ПолучитьОбласть("Итого|ЗАг");
	
	 ЭлементыФормы.ПТД.Вывести(Секция);
	
	
	//------------------<Выводим даты>-------------------GtG----28.01.2008
	ИтВыручка=0;
	ИтКолво=     0;
	ДЛя Каждого СтрТЗДат ИЗ ТЗВыводимыхДат Цикл
		//ТекДата=НачалоДня(НачПериода)+60*60*24*Ы;
		
		Секция=Мак.ПолучитьОбласть("Итого|День");
		
		Если  СтрТЗДат.СсылкаНаСтрокуТЗ = Неопределено ТОгда
			Секция.Параметры.Выручка=0;
			Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" или ВыборВариантОтчета = "Развернутый" Тогда
				Секция.Параметры.ССП=       0;
				Секция.Параметры.Колво=     0;
			КонецЕсли;
		Иначе
			Секция.Параметры.Выручка=СтрТЗДат.СсылкаНаСтрокуТЗ.СуммаСоСкидкой+СтрТЗДат.СсылкаНаСтрокуТЗ.Сертификаты+СтрТЗДат.СсылкаНаСтрокуТЗ.Услуги;
			Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" или ВыборВариантОтчета = "Развернутый" Тогда
				еСЛИ СтрТЗДат.СсылкаНаСтрокуТЗ.КоличествоЧеков<>0 тОГДА
					Секция.Параметры.ССП=    СтрТЗДат.СсылкаНаСтрокуТЗ.СуммаСоСкидкой/СтрТЗДат.СсылкаНаСтрокуТЗ.КоличествоЧеков   ;
					Секция.Параметры.Колво=     СтрТЗДат.СсылкаНаСтрокуТЗ.КоличествоЧеков;
				КонецЕсли;
			КонецЕсли; 
			
			ИтВыручка=ИтВыручка+СтрТЗДат.СсылкаНаСтрокуТЗ.СуммаСоСкидкой+СтрТЗДат.СсылкаНаСтрокуТЗ.Сертификаты+СтрТЗДат.СсылкаНаСтрокуТЗ.Услуги;
			Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" или ВыборВариантОтчета = "Развернутый" Тогда
				ИтКолво=ИтКолво+   СтрТЗДат.СсылкаНаСтрокуТЗ.КоличествоЧеков;
			КонецЕсли;
			
			
		КонецЕсли; 
		
		
		
		 ЭлементыФормы.ПТД.Присоединить(Секция);
	КонецЦикла;   
	//------------------<ИТОГИ ПО СТРОКЕ>-------------------GtG----28.01.2008
	Секция=Мак.ПолучитьОбласть("Итого|иТОГИ");
	Секция.Параметры.Выручка=ИтВыручка;
	Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" или ВыборВариантОтчета = "Развернутый" Тогда
		Секция.Параметры.Колво=  ИтКолво;
		
		Если ИтКолво<>0 Тогда
			Секция.Параметры.ССП=  ИтВыручка/ИтКолво;
		Иначе
			Секция.Параметры.ССП= 0;
		КонецЕсли;  
	КонецЕсли;
	ЭлементыФормы.ПТД.Присоединить(Секция);
	
	//ТСО 25.06.2014
	Если ВыборВариантОтчета = "Расширенный" Тогда
		
		Секция = Мак.ПолучитьОбласть("Итого|ИтогиСреднее");
		ЭлементыФормы.ПТД.Присоединить(Секция);
		
		Секция = Мак.ПолучитьОбласть("Итого|ПроблемныхДней");
		Секция.Параметры.Колво = ПроблемныхДнейИтого;
		ЭлементыФормы.ПТД.Присоединить(Секция);
		
		Секция = Мак.ПолучитьОбласть("Итого|Онлайн");
		ЭлементыФормы.ПТД.Присоединить(Секция);
		
	КонецЕсли;
	//*ТСО
	
	
	//==================<ЛЕГЕНДА>===================GtG====02.07.2008
	Секция=Мак.ПолучитьОбласть("Легенда");
	
	ЭлементыФормы.ПТД.Вывести(Секция);
	
	
	
	ЭлементыФормы.ПТД.ФиксацияСлева=3;
	ЭлементыФормы.ПТД.ФиксацияСверху=6;
	
	ЭлементыФормы.ПТД.ОтображатьСетку=Ложь;
	ЭлементыФормы.ПТД.ОтображатьЗаголовки=Ложь;
	ЭлементыФормы.ПТД.ОтображатьГруппировки=Ложь;
	ЭлементыФормы.ПТД.ТолькоПросмотр=Истина;
	//б.Показать("Отчет по выручке");
	
	
	
	
	Если ВыборВариантОтчета = "Полный" или ВыборВариантОтчета = "ПроблемныеАптеки" или ВыборВариантОтчета = "Расширенный" Тогда
		ЭлементыФормы.ПТД.ФиксацияСверху=6;
		ЭлементыФормы.ПТД.ФиксацияСлева=3;
	Иначе
		ЭлементыФормы.ПТД.ФиксацияСверху=4;
		ЭлементыФормы.ПТД.ФиксацияСлева=3;
	КонецЕсли;
	
	
	
	
	СписокУдаляемыхСтрок=Новый СписокЗначений;
	
	Для каждого НВСтр Из НетВыручки Цикл
		
		НВСтр.Даты=СокрЛП(НВСтр.Даты);
		
		НВСтр.Даты=Сред(НВСтр.Даты,1,СтрДлина(НВСтр.Даты)-1);
		
		Если НВСтр.Даты="," или ПустаяСтрока(НВСтр.Даты)=Истина ТОгда
			СписокУдаляемыхСтрок.Добавить(НВСтр);
		КонецЕсли;	
	КонецЦикла; 
	
	Для каждого ЗначениеСпискаУд Из СписокУдаляемыхСтрок Цикл
	
		   НетВыручки.Удалить(ЗначениеСпискаУд.Значение);
	
	КонецЦикла; 
	
	
	
	
	
	
	ЭлементыФормы.НетВыр.Значение=НетВыручки;
	ЭлементыФормы.НетВыр.СоздатьКолонки();
	
	ОтметкаАудита(ЭтотОбъект,ЭтаФорма,"Сформировать");
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ПТДОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка)=Тип("СправочникСсылка.МестаХранения") ТОгда
		
		СписокДействий=Новый СписокЗначений;
		СписокДействий.Добавить("Отправить письмо");
		СписокДействий.Добавить("Открыть справочник Места хранения");
		
		РезВыбора=СписокДействий.ВыбратьЭлемент("Что делать будем?");
		
		Если РезВыбора.Значение="Отправить письмо" ТОгда
			
			
			
			
			СтандартнаяОбработка=Ложь;
			
			МПочтец= Обработки.Почтарь;
			
			Почтец=МПочтец.Создать();
			Почтец.Автоотправка=Ложь;
			
			Почтец.Адресат=СокрЛП(Расшифровка.Мэйл);
			Почтец.Тема="По Вашей аптеке нет данных по выручке!";
			Почтец.ТекстПисьма="По Вашей аптеке нет данных по выручке за период
			| c        по    .
			|
			|Огромная просьба перевыгрузить данные о выручке за указанный период.
			|
			|Журнал расходных документов\ Продажи ККМ \ Экспорт данных за период 
			|
			|Передать корреспонденцию через Сервис\ Прием-передача корреспонденции\ Передача\ Выполнить Все
			|------------------------------------------
			|"+ ПараметрыСеанса.ТекущийСотр.Наименование;
			
			Ф=Почтец.ПолучитьФорму("Форма", ЭтаФорма, Новый УникальныйИдентификатор);
			Ф.Открыть();
			
		Иначе
			СтандартнаяОбработка=Истина;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Расшифровка)=Тип("СписокЗначений") ТОгда
		
		СтандартнаяОбработка=Ложь;
		
		Ответ=Вопрос("Ввести выручку вручную?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.ДА,"Затычка!");
		
		Если Ответ=КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
		Вводилка=Обработки.ВводЗатычкиПоВыручке;
		
		Затычка=Вводилка.Создать();
		
		Затычка.Аптека=Расшифровка.Получить(0).Значение;
		Затычка.ДАта=Расшифровка.Получить(1).Значение;
        
        Затычка.ПолучитьФорму("Форма").Открыть();
        
        
    ИначеЕсли ТипЗнч(Расшифровка)=Тип("Структура") ТОгда
        
        Запрос=Новый Запрос("ВЫБРАТЬ
                            |   РеализацияККМ.Ссылка,
                            |   РеализацияККМ.Затычка,
                            |   РеализацияККМ.СуммаСоСкидкой,
                            |   РеализацияККМ.Номер,
                            |   РеализацияККМ.Дата
                            |ИЗ
                            |   Документ.РеализацияККМ КАК РеализацияККМ
                            |ГДЕ
                            |   РеализацияККМ.Проведен = ИСТИНА
                            |   И РеализацияККМ.Склад = &Склад
                            |   И РеализацияККМ.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&дата, ДЕНЬ)");
        
        Запрос.УстановитьПараметр("Склад",Расшифровка.Склад);
        Запрос.УстановитьПараметр("Дата",Расшифровка.Дата);
        
        
        
        СписокЗнач=Новый СписокЗначений;
        
        ТЗ=Запрос.Выполнить().Выгрузить();
        Для Каждого СтрТЗ Из ТЗ Цикл
            СписокЗнач.Добавить(СтрТЗ.Ссылка,"№"+СтрТЗ.Номер+" от "+Формат(СтрТЗ.Дата)+" "+Формат(СтрТЗ.Затычка,"БЛ=ОК; БИ=Затычка!")+"  "+СтрТЗ.СуммаСоСкидкой);
        КонецЦикла;    
        
        СписокЗнач.Добавить(Новый Структура("Аптека,Дата",Расшифровка.Склад,Расшифровка.Дата),"===> Перевыгрузить данные за "+Формат(Расшифровка.Дата));
        
        
        
        
        
        
		
		СтандартнаяОбработка=Ложь;
        
        //СписокЗнач=Новый СписокЗначений;
        //СписокЗнач.ЗагрузитьЗначения(Список);
        
        Если СписокЗнач.Количество()=1 Тогда
            ДокИзСписка=СписокЗнач.Получить(0).Значение;
            
        Иначе   
            Попытка
                ДокИзСписка=СписокЗнач.ВыбратьЭлемент().Значение;
            Исключение
                Возврат;
            Конецпопытки;
        КонецЕсли;
        
        
        
        Если ТипЗнч(ДокИзСписка)=Тип("ДокументСсылка.РеализацияККМ") Тогда
            ДокИзСписка.ПолучитьФорму("ФормаДокумента").Открыть(); 
        ИначеЕсли ТипЗнч(ДокИзСписка)=Тип("Структура") Тогда
            Обработкаперевыгрузки=Обработки.ПеревыгрузкаВыручки.Создать();
            ФПВ=Обработкаперевыгрузки.ПолучитьФорму("Форма");
            
            ФПВ.Аптека=ДокИзСписка.Аптека;
            
            ФПВ.Код=ДокИзСписка.Аптека.Код;

            ФПВ.Дата=ДокИзСписка.Дата; 
            ФПВ.Открыть();
        КонецЕсли;
 	
	КонецЕсли;	
	
	
	
КонецПроцедуры

Процедура ПотребоватьВыручкуОтАптекНажатие(Элемент)
	
	
	Для каждого Стр Из НетВыр Цикл
		
		Если стр.Аптека.Делфи = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		Сообщить("Требуем выручку от аптеки "+Стр.Аптека+"  за  "+Стр.Даты);
		
		
		//------------------<ШАБЛОН ПОСЛАТЬ ПИСЬМО>----------------------GtG----
				МПочтец= Обработки.Почтарь;
				
				Почтец=МПочтец.Создать();
				Почтец.СписокВложений.Очистить();
				Почтец.Рассылка.Очистить();
				
				
				Почтец.Автоотправка=ИСТИНА;
				
				Почтец.Рассылка.Добавить(СокрЛП(Стр.Аптека.Мэйл));

				
				Почтец.Тема="ТРЕБУЕТСЯ ВЫГРУЗИТЬ ВЫРУЧКУ ЗА УКАЗАННЫЕ ДАТЫ!!! СРОЧНО!!! ";
				Почтец.ТекстПисьма="ТРЕБУЕТСЯ ВЫГРУЗИТЬ ВЫРУЧКУ ЗА УКАЗАННЫЕ ДАТЫ!!! СРОЧНО!!!  
				|"+Стр.Аптека+"
				| Не выгружены даты:
				|"+ Стр.Даты+"
				|
				|            ! ! !    В Н И М А Н И Е    ! ! !
				|НЕВЫГРУЖЕННАЯ ВЫРУЧКА ПРИВОДИТ К ТОМУ, ЧТО ПРОДАННЫЙ ТОВАР ПРОДОЛЖАЕТ ЧИСЛИТЬСЯ НА АПТЕКЕ!
                |------------------------------------------------------------------------------------------
				| КАК ВЫГРУЗИТЬ ВЫРУЧКУ ЗА ПРОИЗВОЛЬНЫЙ ПЕРИОД:
				|
				|	1) Зайти в журнал продаж ККМ
				|   2) Нажать на кнопочку Экспорт (на стрелочку с треугольничком сбоку от кнопочки)
				|   3) В выпавшем меню выбрать продажи за период (один единственный пункт)
				|   4) В окошке указать период за который хотите выгрузить выручку, нажать ОК.
				|   5) Зайти в меню Сервис  -> Прием/передача корреспонденции -> FTP-сервис
				|   6) Перейти на закладку передача корреспонденции.
				|   7) Выбрать из списка Продажи ККМ, нажать Выполнить.
				|------------------------------------------------------------------------------------------
				|"+ ПараметрыСеанса.ТекущийСотр.Наименование;
				
				Ф=Почтец.ПолучитьФорму("Форма", ЭтаФорма, Новый УникальныйИдентификатор);
				Ф.Открыть();
				//--------------------------------------------------------GtG----КОНЕЦ--

	 
	 КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель2Печать(Кнопка)
	Если Вопрос("Отправить таблицу на печать?",РежимДиалогаВопрос.ДаНет)<>КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	

	ОтметкаАудита(ЭтотОбъект,ЭтаФорма,"Печать таблицы");
	ЭлементыФормы.ПТД.Вывод=ИспользованиеВывода.Разрешить;
	ЭлементыФормы.ПТД.Напечатать();
	ЭлементыФормы.ПТД.Вывод=ИспользованиеВывода.Запретить;

КонецПроцедуры

Процедура КоманднаяПанель2Сохранить(Кнопка)
   ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДВФ.Фильтр="*.XLS|*.XLS";
	ДВФ.ИндексФильтра=0;
	ДВФ.Выбрать();
	ОтметкаАудита(ЭтотОбъект,ЭтаФорма,"Сохранение таблицы в "+Символы.ПС+ДВФ.ПолноеИмяФайла);
	//ЭлементыФормы.ПТД.Вывод=ИспользованиеВывода.Разрешить;
	ЭлементыФормы.ПТД.Записать(ДВФ.ПолноеИмяФайла,ТипФайлаТабличногоДокумента.XLS);
	//ЭлементыФормы.ПТД.Вывод=ИспользованиеВывода.Запретить;
КонецПроцедуры

Процедура КоманднаяПанель2ОткрытьДоступ(Кнопка)
	
	ВВП=ЭтотОбъект.ПолучитьФорму("ВводПароля");
	ВВП.ОткрытьМодально();
	Если ВВП.ПарольПравильный=Истина Тогда
		ОтметкаАудита(ЭтотОбъект,ЭтаФорма,"Открыт доступ к таблице, пароль правильный.");
	    ЭлементыФормы.ПТД.Защита=Ложь;
		ЭлементыФормы.ПТД.Вывод=ИспользованиеВывода.Разрешить;
	Иначе	
		ОтметкаАудита(ЭтотОбъект,ЭтаФорма,"Попытка открыть доступ к таблице, пароль НЕ правильный.");
		Предупреждение("ГЫ! Не угадал!",2);
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель2СписокПереведенныхАптек366(Кнопка)
	
	Построитель = Новый ПостроительОтчета;
	Построитель.Текст = "ВЫБРАТЬ   МестаХранения.СубъектРФ.Наименование,
	                    |	МестаХранения.Код,
	                    |	МестаХранения.Код366,
	                    |	МестаХранения.Наименование,
	                    |	ВводОстатков.МинДата,
	                    |	ВводОстатков.МаксДата,
	                    |	ВводОстатков.КоличествоДокументов
	                    |ИЗ
	                    |	Справочник.МестаХранения КАК МестаХранения
	                    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                    |			МИНИМУМ(Остаток.Дата) КАК МинДата,
	                    |			МАКСИМУМ(Остаток.Дата) КАК МаксДата,
	                    |			КОЛИЧЕСТВО(Остаток.Номер) КАК КоличествоДокументов,
	                    |			Остаток.Склад КАК Склад
	                    |		ИЗ
	                    |			Документ.ВводОстатков КАК Остаток
	                    |		ГДЕ
	                    |			Остаток.Дата > &Дата
	                    |			И Остаток.Проведен = ИСТИНА
	                    |		
	                    |		СГРУППИРОВАТЬ ПО
	                    |			Остаток.Склад) КАК ВводОстатков
	                    |		ПО (ВводОстатков.Склад = МестаХранения.Ссылка)
	                    |ГДЕ
	                    |	МестаХранения.Код366 <> ""0""
	                    |	И МестаХранения.Код366 <> """"  и  НЕ ВводОстатков.МаксДата ЕСТЬ NULL
	                    |ИТОГИ ПО
	                    |	МестаХранения.СубъектРФ.Наименование";
						
	Построитель.Параметры.Вставить("Дата",Дата(2014,01,01));	
	Построитель.МакетОформления=ПолучитьМакетОформления(СтандартноеОформление.Трава);
	Построитель.Выполнить();
	Построитель.Вывести();
	
	
КонецПроцедуры

Процедура КоманднаяПанель2РучныеРеализации(Кнопка)
	
	
    Построитель = Новый ПостроительОтчета;
	Построитель.Текст = "ВЫБРАТЬ
	                    |	Товары.Ссылка.Дата КАК ДатаРеализации,
	                    |	Товары.Ссылка.Склад.Код366 КАК Код366,
	                    |	Товары.Ссылка.Склад.Код КАК Код1С,
	                    |	Товары.Ссылка.Склад.Наименование КАК Аптека,
	                    |	Товары.Ссылка,
	                    |	ПРЕДСТАВЛЕНИЕ(Товары.Ссылка),
	                    |	КОЛИЧЕСТВО(Товары.НомерСтроки) КАК КоличествоТовара,
	                    |	СУММА(Товары.СуммаСоСкидкой) КАК СуммаСоСкидкой
	                    |ИЗ
	                    |	Документ.РеализацияККМ.Бухгалтерия КАК Товары
	                    |ГДЕ
	                    |	Товары.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	                    |	И Товары.Ссылка.Проведен = ИСТИНА
	                    |	И Товары.Ссылка.Затычка = ИСТИНА
	                    |{ГДЕ
	                    |	Товары.Ссылка.Склад.* КАК Аптека}
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Товары.Ссылка.Дата,
	                    |	Товары.Ссылка.Склад.Код366,
	                    |	Товары.Ссылка.Склад.Код,
	                    |	Товары.Ссылка.Склад.Наименование,
	                    |	Товары.Ссылка
	                    |
	                    |ИМЕЮЩИЕ
	                    |	КОЛИЧЕСТВО(Товары.НомерСтроки) = 1 И
	                    |	СУММА(Товары.СуммаСоСкидкой) > 0
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	Аптека,
	                    |	ДатаРеализации
	                    |ИТОГИ ПО
	                    |	Аптека";
	Построитель.Параметры.Вставить("Дата1",НачПериода);	
	Построитель.Параметры.Вставить("Дата2",КонПериода);	
	Построитель.МакетОформления=ПолучитьМакетОформления(СтандартноеОформление.Трава);
	Построитель.Выполнить();
	Построитель.Вывести();
						
	
	
КонецПроцедуры

Функция ПолучитьОнлайновостьАптек(Аптеки) //ТСО 25.06.2014
	
	ТаблицаОнлайновостиАптек = Новый ТаблицаЗначений;
	ТаблицаОнлайновостиАптек.Колонки.Добавить("Ссылка");
	ТаблицаОнлайновостиАптек.Колонки.Добавить("Код");
	ТаблицаОнлайновостиАптек.Колонки.Добавить("Индекс");
	ТаблицаОнлайновостиАптек.Колонки.Добавить("Время");
	
	СписокИндексовАптек = "";	
	ПерваяСтрока = Истина;
	
	Для Каждого ТекСтрока Из Аптеки Цикл
		
		НовСтр = ТаблицаОнлайновостиАптек.Добавить();
		НовСтр.Ссылка = ТекСтрока.Склад;
		НовСтр.Код = Формат(ТекСтрока.Код, "ЧГ=0");
		НовСтр.Индекс = "{" + НовСтр.Код + ",0}";
		НовСтр.Время = 0;
		
		СписокИндексовАптек = СписокИндексовАптек + ?(ПерваяСтрока, "", ",") + "'" + НовСтр.Индекс + "'";
		ПерваяСтрока = Ложь;
		
	КонецЦикла;
	
	ADO = Новый COMОбъект("ADODB.Connection");    
    
    Настройка = Справочники.НастройкаПодключенияКPGСерверамОбмена.НайтиПоНаименованию("Перевыгрузка Чеков");
    
	Если Настройка.Пустая() Тогда
        Возврат Неопределено;
	КонецЕсли; 
    
    Драйвер			= СокрЛП(Настройка.Драйвер);		//"PostgreSQL UNICODE(x64)";
    Сервер			= СокрЛП(Настройка.Сервер);			//"10.8.10.196";
    Порт			= Формат(Настройка.Порт,"ЧГ=");		//"5432";
    База			= СокрЛП(Настройка.База);			//"ids$apteka$repl";
    Пользователь	= СокрЛП(Настройка.Пользователь);	//"postgres";
    Пароль			= СокрЛП(Настройка.Пароль);			//"138963";
	
	ADO.Open("Driver={"+Драйвер+"};Server="+Сервер+";Port="+Порт+";Database="+База+";Uid="+Пользователь+";Pwd="+Пароль+";");
	   	
	ТХТ =
	"SELECT 
	|
	|id_dep, floor(extract (epoch from (now()-modifydatetime)))::integer sec_qty
	|FROM repl.loc_info 
	|where id_dep in (" + СписокИндексовАптек + ")";
	
	RS = Новый ComОбъект("ADODB.Recordset");
	
	Попытка 
		RS.Open(ТХТ,ADO,0,3,1); //(Source, ActiveConnection, CursorType, LockType, Options)
	Исключение	
		ADO.Close();
		Возврат Неопределено;
	КонецПопытки;
	
	//RS.MoveFirst();
	
	Пока НЕ (RS.EOF) Цикл
		
		ТекИндексАптеки = RS.Fields(0).Value(); //id_dep
		ТекВремя = RS.Fields(1).Value(); //sec_qty
		
		НайденнаяСтрока = ТаблицаОнлайновостиАптек.Найти(ТекИндексАптеки, "Индекс"); 		
		НайденнаяСтрока.Время = ТекВремя;	
		
		RS.MoveNext();
		
	КонецЦикла;

    RS.Close();
	ADO.Close();
	
	Возврат ТаблицаОнлайновостиАптек;
	
КонецФункции


//ЭлементыФормы.ПТД.Защита=Истина;
//ЭлементыФормы.ПТД.Вывод=ИспользованиеВывода.Запретить;
ЭлементыФормы.ПТД.ТолькоПросмотр=Истина;

Если РольДоступна("УдаленныйЗаказ") Тогда
	Разрешенные = " Разрешенные ";
Иначе
	Разрешенные = "  ";
КонецЕсли;


ТХТ_Полный="ВЫБРАТЬ " + Разрешенные + "
           |	Максимум(Бух.Ссылка.Дата) как ДатаДок,
           |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Бух.Касса) КАК Касс
           |ПОМЕСТИТЬ ВТБух
           |ИЗ
           |	Документ.РеализацияККМ.Бухгалтерия КАК Бух
           |ГДЕ
           |	Бух.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Бух.Ссылка.Проведен = ИСТИНА
           |{ГДЕ
           |	Бух.Ссылка.Склад.* КАК Аптека}
           |
           //|СГРУППИРОВАТЬ ПО
           //|	Бух.Ссылка
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ  " + Разрешенные + "
           |	Максимум(Серт.Ссылка.Дата) как ДатаДок,
           |	СУММА(ЕСТЬNULL(ВЫБОР
           |				КОГДА Серт.ОперацияССертификатом <> &ЗачетСертификата
           |					ТОГДА Серт.Сумма
           |				ИНАЧЕ 0
           |			КОНЕЦ, 0)) КАК Сертификаты
           |ПОМЕСТИТЬ ВТСерт
           |ИЗ
           |	Документ.РеализацияККМ.Сертификаты КАК Серт
           |ГДЕ
           |	Серт.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Серт.Ссылка.Проведен = ИСТИНА
           |{ГДЕ
           |	Серт.Ссылка.Склад.* КАК Аптека}
           |
           //|СГРУППИРОВАТЬ ПО
           //|	Серт.Ссылка
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ " + Разрешенные + "
           |	Максимум(Авансы.Ссылка.Дата) как ДатаДок,
           |	СУММА(Авансы.Сумма) КАК Авансы
           |ПОМЕСТИТЬ ВТАвансы
           |ИЗ
           |	Документ.РеализацияККМ.АвансыПоУслугам КАК Авансы
           |ГДЕ
           |	Авансы.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Авансы.Ссылка.Проведен = ИСТИНА
           |{ГДЕ
           |	Авансы.Ссылка.Склад.* КАК Аптека}
           |
           //|СГРУППИРОВАТЬ ПО
           //|	Авансы.Ссылка
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ " + Разрешенные + "
           |	Максимум(Товары.Ссылка.Дата) как ДатаДок,
           |	КОЛИЧЕСТВО(Товары.Ссылка) КАК КоличествоТовара
           |ПОМЕСТИТЬ ВТОднаСтрока
           |ИЗ
           |	Документ.РеализацияККМ.Бухгалтерия КАК Товары
           |ГДЕ
           |	Товары.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Товары.Ссылка.Проведен = ИСТИНА
           |	И Товары.Ссылка.Затычка = ИСТИНА
           |{ГДЕ
           |	Товары.Ссылка.Склад.* КАК Аптека}
           |
           //|СГРУППИРОВАТЬ ПО
           //|	Товары.Ссылка
           |
           |ИМЕЮЩИЕ
           |	КОЛИЧЕСТВО(Товары.Ссылка) = 1
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ РАЗРЕШЕННЫЕ
           |	БАЗА.Дата КАК Дата,
           |	БАЗА.Склад,
           |	NULL КАК Док,
           |	БАЗА.СуммаСоСкидкой,
           |	БАЗА.ССП,
           |	БАЗА.Проверен,
           |	БАЗА.КоличествоЧеков,
           |	БАЗА.Код,
           |	ЕСТЬNULL(ВТБух.Касс, 0) КАК Касс,
           |	БАЗА.СкладНаименованиеПоКлассификатору КАК СкладНаименованиеПоКлассификатору,
           |	БАЗА.СкладРегионКод КАК СкладРегионКод,
           |	БАЗА.Регион,
           |	БАЗА.Затычка,
           |	ЕСТЬNULL(ВТСерт.Сертификаты, 0) КАК Сертификаты,
           |	ЕСТЬNULL(ВТАвансы.Авансы, 0) КАК Услуги,
           |	БАЗА.НаихудшаяПричинаНекорректности,
           |	ЕСТЬNULL(ВТОднаСтрока.КоличествоТовара, 0) КАК КоличествоТовара,
           |	БАЗА.РежимРаботы
           |ИЗ
           |	(ВЫБРАТЬ
           |		Максимум(РеализацияККМ.Дата) КАК Дата,
           |		РеализацияККМ.Склад КАК Склад,
           |		NULL КАК Док,
           |		Сумма(РеализацияККМ.СуммаСоСкидкой) КАК СуммаСоСкидкой,
           |		Сумма(РеализацияККМ.ССП) КАК ССП,
           |		Максимум(РеализацияККМ.Проверен) КАК Проверен,
           |		Сумма(РеализацияККМ.КоличествоЧеков) КАК КоличествоЧеков,
           |		РеализацияККМ.Склад.Код КАК Код,
           |		РеализацияККМ.Склад.НаименованиеПоКлассификатору КАК СкладНаименованиеПоКлассификатору,
           |		РеализацияККМ.Склад.Регион.Код КАК СкладРегионКод,
           |		РеализацияККМ.Склад.Регион КАК Регион,
           |		РеализацияККМ.Склад.РежимРаботы КАК РежимРаботы,
           |		Максимум(РеализацияККМ.Затычка) КАК Затычка,
           |		Максимум(РеализацияККМ.НаихудшаяПричинаНекорректности) КАК НаихудшаяПричинаНекорректности
           |	ИЗ
           |		Документ.РеализацияККМ КАК РеализацияККМ
           |	ГДЕ
           |		РеализацияККМ.Проведен = ИСТИНА
           |		И РеализацияККМ.Дата МЕЖДУ &Дата1 И &Дата2
           |	{ГДЕ
           |		РеализацияККМ.Склад.* КАК Аптека}
		   |	СГРУППИРОВАТЬ ПО 
		   |		РеализацияККМ.Склад,
		   |		РеализацияККМ.Склад.Код,РеализацияККМ.Склад.НаименованиеПоКлассификатору,РеализацияККМ.Склад.Регион.Код,РеализацияККМ.Склад.Регион,РеализацияККМ.Склад.Регион.Код,РеализацияККМ.Склад.РежимРаботы
           |	
           |	ОБЪЕДИНИТЬ ВСЕ
           |	
           |	ВЫБРАТЬ
           |		&Дата1,
           |		МестаХранения.Ссылка,
           |		NULL,
           |		0,
           |		0,
           |		ЛОЖЬ,
           |		0,
           |		МестаХранения.Код,
           |		МестаХранения.НаименованиеПоКлассификатору,
           |		МестаХранения.Регион.Код,
           |		МестаХранения.Регион,
           |		МестаХранения.РежимРаботы,
           |		ИСТИНА,
           |		NULL
           |	ИЗ
           |		Справочник.МестаХранения КАК МестаХранения
           |	ГДЕ
           |		МестаХранения.ПометкаУдаления = ЛОЖЬ
           |		И МестаХранения.ТипСклада = &Розничный
           |		И НЕ МестаХранения.Ссылка В
           |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
           |						РеализацияККМ.Склад КАК Склад
           |					ИЗ
           |						Документ.РеализацияККМ КАК РеализацияККМ
           |					ГДЕ
           |						РеализацияККМ.Проведен = ИСТИНА
           |						И РеализацияККМ.Дата МЕЖДУ &Дата1 И &Дата2)
           |		И МестаХранения.ДатаПерехода <= &Дата2
           |		И (МестаХранения.ДатаЗакрытия = &ПустаяДата
           |				ИЛИ МестаХранения.ДатаЗакрытия МЕЖДУ &Дата1плюс1 И &Дата2плюс1)
           |	{ГДЕ
           |		МестаХранения.Ссылка.* КАК Аптека}) КАК БАЗА
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТБух КАК ВТБух
           |		ПО (ВТБух.ДатаДок = БАЗА.Дата)
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТСерт КАК ВТСерт
           |		ПО (ВТСерт.ДатаДок = БАЗА.Дата)
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТАвансы КАК ВТАвансы
           |		ПО (ВТАвансы.ДатаДок = БАЗА.Дата)
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТОднаСтрока КАК ВТОднаСтрока
           |		ПО (ВТОднаСтрока.ДатаДок = БАЗА.Дата)
           |{ГДЕ
           |	БАЗА.Склад.* КАК АПТЕКА}
           | ";
		   
           ТХТ_Полный = ТХТ_Полный + "
		   |УПОРЯДОЧИТЬ ПО
           |	БАЗА.Склад.СортировкаДляФинОтдела.Код,
           |	БАЗА.СкладНаименованиеПоКлассификатору,
           |	Дата
           |; " ;
		   
           ТХТ_Полный = ТХТ_Полный + "
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТОднаСтрока
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТБух
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТСерт
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТАвансы";
	

ТХТ_Проблемные=" выбрать " + Разрешенные + " различные склад ПОМЕСТИТЬ ПроблемныеАптеки из Документ.РеализацияККМ как Реализация где Реализация.Проведен = ИСТИНА
		   |						И Реализация.Дата МЕЖДУ &Дата1 И &Дата2 и Реализация.Затычка = Истина ;
|ВЫБРАТЬ       " + Разрешенные + "
           |	Бух.Ссылка,
           |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Бух.Касса) КАК Касс
           |ПОМЕСТИТЬ ВТБух
           |ИЗ
           |	Документ.РеализацияККМ.Бухгалтерия КАК Бух
           |ГДЕ
           |	Бух.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Бух.Ссылка.Проведен = ИСТИНА
           |{ГДЕ
           |	Бух.Ссылка.Склад.* КАК Аптека}
           |
           |СГРУППИРОВАТЬ ПО
           |	Бух.Ссылка
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ  " + Разрешенные + "
           |	Серт.Ссылка,
           |	СУММА(ЕСТЬNULL(ВЫБОР
           |				КОГДА Серт.ОперацияССертификатом <> &ЗачетСертификата
           |					ТОГДА Серт.Сумма
           |				ИНАЧЕ 0
           |			КОНЕЦ, 0)) КАК Сертификаты
           |ПОМЕСТИТЬ ВТСерт
           |ИЗ
           |	Документ.РеализацияККМ.Сертификаты КАК Серт
           |ГДЕ
           |	Серт.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Серт.Ссылка.Проведен = ИСТИНА
           |{ГДЕ
           |	Серт.Ссылка.Склад.* КАК Аптека}
           |
           |СГРУППИРОВАТЬ ПО
           |	Серт.Ссылка
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ  " + Разрешенные + "
           |	Авансы.Ссылка,
           |	СУММА(Авансы.Сумма) КАК Авансы
           |ПОМЕСТИТЬ ВТАвансы
           |ИЗ
           |	Документ.РеализацияККМ.АвансыПоУслугам КАК Авансы
           |ГДЕ
           |	Авансы.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Авансы.Ссылка.Проведен = ИСТИНА
           |{ГДЕ
           |	Авансы.Ссылка.Склад.* КАК Аптека}
           |
           |СГРУППИРОВАТЬ ПО
           |	Авансы.Ссылка
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ  " + Разрешенные + "
           |	Товары.Ссылка,
           |	КОЛИЧЕСТВО(Товары.Ссылка) КАК КоличествоТовара,
		   |	Сумма(ЗакупочнаяСНДС) как СуммаЗакупки
           |ПОМЕСТИТЬ ВТОднаСтрока
           |ИЗ
           |	Документ.РеализацияККМ.Бухгалтерия КАК Товары
		   |INNER JOIN ПроблемныеАптеки как ПроблемныеАптеки ПО ПроблемныеАптеки.Склад = Товары.Ссылка.Склад
           |ГДЕ
           |	Товары.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
           |	И Товары.Ссылка.Проведен = ИСТИНА
           |	И Товары.Ссылка.Затычка = ИСТИНА
		   |	
           |{ГДЕ
           |	Товары.Ссылка.Склад.* КАК Аптека}
           |
           |СГРУППИРОВАТЬ ПО
           |	Товары.Ссылка
           |
           |ИМЕЮЩИЕ
           |	КОЛИЧЕСТВО(Товары.Ссылка) = 1 и Сумма(ЗакупочнаяСНДС) = 0
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |ВЫБРАТЬ РАЗРЕШЕННЫЕ
           |	БАЗА.Дата КАК Дата,
           |	БАЗА.Склад,
           |	БАЗА.Док,
           |	БАЗА.СуммаСоСкидкой,
           |	БАЗА.ССП,
           |	БАЗА.Проверен,
           |	БАЗА.КоличествоЧеков,
           |	БАЗА.Код,
           |	ЕСТЬNULL(ВТБух.Касс, 0) КАК Касс,
           |	БАЗА.СкладНаименованиеПоКлассификатору КАК СкладНаименованиеПоКлассификатору,
           |	БАЗА.СкладРегионКод КАК СкладРегионКод,
           |	БАЗА.Регион,
           |	БАЗА.Затычка,
           |	ЕСТЬNULL(ВТСерт.Сертификаты, 0) КАК Сертификаты,
           |	ЕСТЬNULL(ВТАвансы.Авансы, 0) КАК Услуги,
           |	БАЗА.НаихудшаяПричинаНекорректности,
           |	ЕСТЬNULL(ВТОднаСтрока.КоличествоТовара, 0) КАК КоличествоТовара,
           |	БАЗА.РежимРаботы
           |ИЗ
           |	(ВЫБРАТЬ
           |		РеализацияККМ.Дата КАК Дата,
           |		РеализацияККМ.Склад КАК Склад,
           |		РеализацияККМ.Ссылка КАК Док,
           |		РеализацияККМ.СуммаСоСкидкой КАК СуммаСоСкидкой,
           |		РеализацияККМ.ССП КАК ССП,
           |		РеализацияККМ.Проверен КАК Проверен,
           |		РеализацияККМ.КоличествоЧеков КАК КоличествоЧеков,
           |		РеализацияККМ.Склад.Код КАК Код,
           |		РеализацияККМ.Склад.НаименованиеПоКлассификатору КАК СкладНаименованиеПоКлассификатору,
           |		РеализацияККМ.Склад.Регион.Код КАК СкладРегионКод,
           |		РеализацияККМ.Склад.Регион КАК Регион,
           |		РеализацияККМ.Склад.РежимРаботы КАК РежимРаботы,
           |		РеализацияККМ.Затычка КАК Затычка,
           |		РеализацияККМ.НаихудшаяПричинаНекорректности КАК НаихудшаяПричинаНекорректности
           |	ИЗ
           |		Документ.РеализацияККМ КАК РеализацияККМ
		   |		INNER JOIN ПроблемныеАптеки как ПроблемныеАптеки ПО ПроблемныеАптеки.Склад = РеализацияККМ.Склад
		   |		
           |	ГДЕ
           |		РеализацияККМ.Проведен = ИСТИНА
           |		И РеализацияККМ.Дата МЕЖДУ &Дата1 И &Дата2
		   //|		И РеализацияККМ.Склад in (выбрать различные склад из Документ.РеализацияККМ как Реализация где Реализация.Проведен = ИСТИНА
		   //|						И Реализация.Дата МЕЖДУ &Дата1 И &Дата2 и Реализация.Затычка = Истина)
           |	{ГДЕ
           |		РеализацияККМ.Склад.* КАК Аптека}
           |	
           |	ОБЪЕДИНИТЬ ВСЕ
           |	
           |	ВЫБРАТЬ
           |		&Дата1,
           |		МестаХранения.Ссылка,
           |		NULL,
           |		0,
           |		0,
           |		ЛОЖЬ,
           |		0,
           |		МестаХранения.Код,
           |		МестаХранения.НаименованиеПоКлассификатору,
           |		МестаХранения.Регион.Код,
           |		МестаХранения.Регион,
           |		МестаХранения.РежимРаботы,
           |		ИСТИНА,
           |		NULL
           |	ИЗ
           |		Справочник.МестаХранения КАК МестаХранения
           |	ГДЕ
           |		МестаХранения.ПометкаУдаления = ЛОЖЬ
           |		И МестаХранения.ТипСклада = &Розничный
           |		И НЕ МестаХранения.Ссылка В
           |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
           |						РеализацияККМ.Склад КАК Склад
           |					ИЗ
           |						Документ.РеализацияККМ КАК РеализацияККМ
           |					ГДЕ
           |						РеализацияККМ.Проведен = ИСТИНА
           |						И РеализацияККМ.Дата МЕЖДУ &Дата1 И &Дата2)
           |		И МестаХранения.ДатаПерехода <= &Дата2
           |		И (МестаХранения.ДатаЗакрытия = &ПустаяДата
           |				ИЛИ МестаХранения.ДатаЗакрытия МЕЖДУ &Дата1плюс1 И &Дата2плюс1)
           |	{ГДЕ
           |		МестаХранения.Ссылка.* КАК Аптека}) КАК БАЗА
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТБух КАК ВТБух
           |		ПО (ВТБух.Ссылка = БАЗА.Док)
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТСерт КАК ВТСерт
           |		ПО (ВТСерт.Ссылка = БАЗА.Док)
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТАвансы КАК ВТАвансы
           |		ПО (ВТАвансы.Ссылка = БАЗА.Док)
           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТОднаСтрока КАК ВТОднаСтрока
           |		ПО (ВТОднаСтрока.Ссылка = БАЗА.Док)
           |{ГДЕ
           |	БАЗА.Склад.* КАК АПТЕКА}
           | ";
		   
           ТХТ_Проблемные = ТХТ_Проблемные + "
		   |УПОРЯДОЧИТЬ ПО
           |	БАЗА.Склад.СортировкаДляФинОтдела.Код,
           |	БАЗА.СкладНаименованиеПоКлассификатору,
           |	Дата
           |; " ;
		   
           ТХТ_Проблемные = ТХТ_Проблемные + "
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТОднаСтрока
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТБух
           |;
           |
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТСерт
           |;
           |УНИЧТОЖИТЬ ПроблемныеАптеки;
           |////////////////////////////////////////////////////////////////////////////////
           |УНИЧТОЖИТЬ ВТАвансы";
	
	
	
ТХТ_Упрощенный= ТХТ_Полный;
//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
//			   |	БАЗА.Дата КАК Дата,
//			   |	БАЗА.Склад,
//			   |	БАЗА.Док,
//			   |	БАЗА.СуммаСоСкидкой,
//			   |	БАЗА.Проверен,
//			   |	БАЗА.Код,
//			   |	БАЗА.Касс,
//			   |	БАЗА.СкладНаименованиеПоКлассификатору КАК СкладНаименованиеПоКлассификатору,
//			   |	БАЗА.СкладРегионКод КАК СкладРегионКод,
//			   |	БАЗА.Регион,
//			   |	БАЗА.Затычка,
//			   |	СУММА(ЕСТЬNULL(ВЫБОР
//			   |				КОГДА РеализацияККМСертификаты.ОперацияССертификатом <> &ЗачетСертификата
//			   |					ТОГДА РеализацияККМСертификаты.Сумма
//			   |				ИНАЧЕ 0
//			   |			КОНЕЦ, 0)) КАК Сертификаты,
//			   |	СУММА(ЕСТЬNULL(РеализацияККМАвансыПоУслугам.Сумма, 0)) КАК Услуги,
//			   |	БАЗА.НаихудшаяПричинаНекорректности , 0 как ССП, 0 как КоличествоЧеков
//			   |ИЗ
//			   |	(ВЫБРАТЬ ПЕРВЫЕ 100000000
//			   |		РеализацияККМ.Дата КАК Дата,
//			   |		РеализацияККМ.Склад КАК Склад,
//			   |		РеализацияККМ.Ссылка КАК Док,
//			   |		РеализацияККМ.СуммаСоСкидкой КАК СуммаСоСкидкой,
//			   |		РеализацияККМ.Проверен КАК Проверен,
//			   |		РеализацияККМ.Склад.Код КАК Код,
//			   |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РеализацияККМБухгалтерия.Касса) КАК Касс,
//			   |		РеализацияККМ.Склад.НаименованиеПоКлассификатору КАК СкладНаименованиеПоКлассификатору,
//			   |		РеализацияККМ.Склад.Регион.Код КАК СкладРегионКод,
//			   |		РеализацияККМ.Склад.Регион КАК Регион,
//			   |		РеализацияККМ.Затычка КАК Затычка,
//			   |		РеализацияККМ.НаихудшаяПричинаНекорректности КАК НаихудшаяПричинаНекорректности
//			   |	ИЗ
//			   |		Документ.РеализацияККМ.Бухгалтерия КАК РеализацияККМБухгалтерия
//			   |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияККМ КАК РеализацияККМ
//			   |			ПО РеализацияККМБухгалтерия.Ссылка = РеализацияККМ.Ссылка
//			   |	ГДЕ
//			   |		РеализацияККМ.Проведен = ИСТИНА
//			   |		И РеализацияККМ.Дата МЕЖДУ &Дата1 И &Дата2
//			   |	
//			   |	СГРУППИРОВАТЬ ПО
//			   |		РеализацияККМ.Ссылка,
//			   |		РеализацияККМ.Дата,
//			   |		РеализацияККМ.Склад,
//			   |		РеализацияККМ.СуммаСоСкидкой,
//			   |		РеализацияККМ.Проверен,
//			   |		РеализацияККМ.Склад.Код,
//			   |		РеализацияККМ.Склад.НаименованиеПоКлассификатору,
//			   |		РеализацияККМ.Склад.Регион.Код,
//			   |		РеализацияККМ.Склад.Регион,
//			   |		РеализацияККМ.Затычка,
//			   |		РеализацияККМ.НаихудшаяПричинаНекорректности
//			   |	
//			   |	ОБЪЕДИНИТЬ ВСЕ
//			   |	
//			   |	ВЫБРАТЬ ПЕРВЫЕ 100000000
//			   |		&Дата1,
//			   |		МестаХранения.Ссылка,
//			   |		NULL,
//			   |		0,
//			   |		ЛОЖЬ,
//			   |		МестаХранения.Код,
//			   |		NULL,
//			   |		МестаХранения.НаименованиеПоКлассификатору,
//			   |		МестаХранения.Регион.Код,
//			   |		МестаХранения.Регион,
//			   |		ИСТИНА,
//			   |		NULL
//			   |	ИЗ
//			   |		Справочник.МестаХранения КАК МестаХранения
//			   |	ГДЕ
//			   |		МестаХранения.ПометкаУдаления = ЛОЖЬ
//			   |		И МестаХранения.ТипСклада = &Розничный
//			   |		И НЕ МестаХранения.Ссылка В
//			   |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
//			   |						РеализацияККМ.Склад КАК Склад
//			   |					ИЗ
//			   |						Документ.РеализацияККМ КАК РеализацияККМ
//			   |					ГДЕ
//			   |						РеализацияККМ.Проведен = ИСТИНА
//			   |						И РеализацияККМ.Дата МЕЖДУ &Дата1 И &Дата2)
//			   |		И МестаХранения.ДатаПерехода <= &Дата2
//			   |		И (МестаХранения.ДатаЗакрытия = &ПустаяДата
//			   |				ИЛИ МестаХранения.ДатаЗакрытия МЕЖДУ &Дата1плюс1 И &Дата2плюс1)
//			   |	
//			   |	УПОРЯДОЧИТЬ ПО
//			   |		СкладРегионКод,
//			   |		СкладНаименованиеПоКлассификатору,
//			   |		Дата) КАК БАЗА
//			   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияККМ.Сертификаты КАК РеализацияККМСертификаты
//			   |		ПО БАЗА.Док = РеализацияККМСертификаты.Ссылка
//			   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияККМ.АвансыПоУслугам КАК РеализацияККМАвансыПоУслугам
//			   |		ПО БАЗА.Док = РеализацияККМАвансыПоУслугам.Ссылка
//			   |{ГДЕ
//			   |	БАЗА.Склад.* КАК АПТЕКА}
//			   |
//			   |СГРУППИРОВАТЬ ПО
//			   |	БАЗА.Дата,
//			   |	БАЗА.Склад,
//			   |	БАЗА.Проверен,
//			   |	БАЗА.Док,
//			   |	БАЗА.СкладНаименованиеПоКлассификатору,
//			   |	БАЗА.Регион,
//			   |	БАЗА.Затычка,
//			   |	БАЗА.СуммаСоСкидкой,
//			   |	БАЗА.Код,
//			   |	БАЗА.Касс,
//			   |	БАЗА.СкладРегионКод,
//			   |	БАЗА.НаихудшаяПричинаНекорректности
//			   |
//			   |УПОРЯДОЧИТЬ ПО
//			   |	БАЗА.Склад.СортировкаДляФинОтдела.Код,
//			   |	БАЗА.СкладНаименованиеПоКлассификатору,
//			   |	Дата";
	


Построитель.Текст=ТХТ_Полный;
ВыборВариантОтчета = "Полный";
СписокСортировок = "Наименование";