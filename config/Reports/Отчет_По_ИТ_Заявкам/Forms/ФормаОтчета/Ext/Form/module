
Процедура КнопкаСформироватьНажатие(Кнопка)
	ТабДок=Новый ТабличныйДокумент;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = ЭтотОбъект.ПолучитьМакет("Макет");
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
		
    Построитель.Параметры.Очистить();
	
	Построитель.Параметры.Вставить("Закрыта",Закрыта);	
	Построитель.Параметры.Вставить("Дата1", Дата1);
	Построитель.Параметры.Вставить("Дата2", Дата2);

	 Построитель.Выполнить();
    Результат = Построитель.Результат;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьАптека = Макет.ПолучитьОбласть("Аптека");
	//ОбластьСортировкаПоДокументу = Макет.ПолучитьОбласть("СортировкаПоДокументу");
	ОбластьТекстИсходнойЗаявки = Макет.ПолучитьОбласть("ТекстИсходнойЗаявки");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");

	ТабДок.Очистить();
	
	ОбластьЗаголовок.Параметры.Заголовок=?(Закрыта=Истина,"Закрытые заявки","Незакрытые заявки")+" по состоянию на "+ТекущаяДата();
	ОбластьЗаголовок.Параметры.НачПериода=Формат(Дата1,"ДФ=dd.MM.yyyy");
	ОбластьЗаголовок.Параметры.КонПериода=Формат(Дата2,"ДФ=dd.MM.yyyy");
	
	ОбластьТип=Макет.ПолучитьОбласть("ТипЗаявки");
	
	ТабДок.Вывести(ОбластьЗаголовок);
	
	Разделитель=Макет.ПолучитьОбласть("Разделитель");
	
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	

	ВыборкаПоТипуЗаявки=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоТипуЗаявки.Следующий() Цикл
		
		ОбластьТип.Параметры.Заполнить(ВыборкаПоТипуЗаявки);
		ТабДок.Вывести(ОбластьТип);
        ТабДок.НачатьГруппуСтрок(ВыборкаПоТипуЗаявки.ТипЗаявки);
		
		
		ВыборкаДатаПервичнойЗаявки=ВыборкаПоТипуЗаявки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаДатаПервичнойЗаявки.Следующий() Цикл
			
			ВыборкаАптека = ВыборкаДатаПервичнойЗаявки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			
			Пока ВыборкаАптека.Следующий() Цикл
				//ОбластьАптека.Параметры.Заполнить(ВыборкаАптека);
				//ТабДок.Вывести(ОбластьАптека, ВыборкаАптека.Уровень());
				
				ВыборкаСортировкаПоДокументу = ВыборкаАптека.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаСортировкаПоДокументу.Следующий() Цикл
					//ОбластьСортировкаПоДокументу.Параметры.Заполнить(ВыборкаСортировкаПоДокументу);
					//ТабДок.Вывести(ОбластьСортировкаПоДокументу, ВыборкаСортировкаПоДокументу.Уровень());
					
					ОбластьАптека.Параметры.Заполнить(ВыборкаСортировкаПоДокументу);
					ТабДок.Вывести(ОбластьАптека, ВыборкаАптека.Уровень());
					
					ТабДок.НачатьГруппуСтрок(ВыборкаАптека.Аптека);

					
					ВыборкаТекстИсходнойЗаявки = ВыборкаСортировкаПоДокументу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаТекстИсходнойЗаявки.Следующий() Цикл
						ОбластьТекстИсходнойЗаявки.Параметры.Заполнить(ВыборкаТекстИсходнойЗаявки);
						ТабДок.Вывести(ОбластьТекстИсходнойЗаявки, ВыборкаТекстИсходнойЗаявки.Уровень());
						
						ВыборкаДетальныеЗаписи = ВыборкаТекстИсходнойЗаявки.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
							ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
						КонецЦикла;
					КонецЦикла;
					ТабДок.Вывести(Разделитель);
					
					ТабДок.ЗакончитьГруппуСтрок();
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		ТабДок.ЗакончитьГруппуСтрок();
		ТабДок.Вывести(Разделитель);

	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

    ТабДок.ОтображатьСетку=Ложь;
	ТабДок.ТолькоПросмотр=Истина;
	
	ТабДок.Показать();
	
	
	
	
	
	
	
	
	
	
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(Дата1, ?(Дата2='0001-01-01', Дата2, КонецДня(Дата2)));
	Если НастройкаПериода.Редактировать() Тогда
		Дата1 = НастройкаПериода.ПолучитьДатуНачала();
		Дата2 = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры


Построитель.Текст="ВЫБРАТЬ
                  |	ИТ_Заявка.Дата КАК Дата,
                  |	ИТ_Заявка.Аптека,
                  |	ИТ_Заявка.Закрыта,
                  |	ИТ_Заявка.ТекстЗаявки,
                  |	ИТ_Заявка.Ссылка,
                  |	ИТ_Заявка.Тип
                  |ПОМЕСТИТЬ первичные
                  |ИЗ
                  |	Документ.ИТ_Заявка КАК ИТ_Заявка
                  |ГДЕ
                  |	ИТ_Заявка.ДокументОснование.Ссылка ЕСТЬ NULL 
                  |	И ИТ_Заявка.Закрыта = &Закрыта
                  |	И ИТ_Заявка.Дата МЕЖДУ &Дата1 И &Дата2
                  |{ГДЕ
                  |	ИТ_Заявка.Аптека.*,
                  |	ИТ_Заявка.ТекстЗаявки,
                  |	ИТ_Заявка.Дата,
                  |	ИТ_Заявка.Тип.*}
                  |;
                  |
                  |////////////////////////////////////////////////////////////////////////////////
                  |ВЫБРАТЬ
                  |	ПОДСТРОКА(первичные.ТекстЗаявки, 1, 500) КАК ТекстИсходнойЗаявки,
                  |	ИТ_Заявка.Дата КАК Дата1,
                  |	ИТ_Заявка.ТекстЗаявки КАК ТекстЗаявки1,
                  |	ВЫБОР
                  |		КОГДА первичные.Ссылка ЕСТЬ NULL 
                  |			ТОГДА ИТ_Заявка.ДокументОснование
                  |		ИНАЧЕ первичные.Ссылка
                  |	КОНЕЦ КАК СортировкаПоДокументу,
                  |	первичные.Аптека КАК Аптека,
                  |	первичные.Аптека.НомерАптеки КАК НомерАптеки,
                  |	ПРЕДСТАВЛЕНИЕ(первичные.Аптека),
                  |	первичные.Дата КАК ДатаПервичнойЗаявки,
                  |	первичные.Тип КАК ТипЗаявки
                  |ИЗ
                  |	первичные КАК первичные
                  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИТ_Заявка КАК ИТ_Заявка
                  |		ПО первичные.Ссылка = ИТ_Заявка.ДокументОснование
                  |
                  |УПОРЯДОЧИТЬ ПО
                  |	СортировкаПоДокументу,
                  |	ИТ_Заявка.Дата,
                  |	ТекстИсходнойЗаявки
                  |ИТОГИ ПО
                  |	ТипЗаявки,
                  |	ДатаПервичнойЗаявки,
                  |	Аптека,
                  |	СортировкаПоДокументу,
                  |	ТекстИсходнойЗаявки
                  |;
                  |
                  |////////////////////////////////////////////////////////////////////////////////
                  |УНИЧТОЖИТЬ первичные";