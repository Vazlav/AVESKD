
	//==========================================================GtG====
Процедура ДобавитьТоварВМатрицуАптеки (Товар,Аптека,КуМин,КуМакс) 
		//----------------------------------
		//Назначение:
		//  Добавляет товар в матрицу аптеки
		//  ПРи этом, если в ап ГТТ аптеки нет записи, 
		//  то добавляет элемент АПГТТ в  АПГТТ той группы, к которой принадлежит аптека
		//----------------------------------
		
		//------------------<Найдем, есть ли товар в АПГТТ аптеки>-------------------GtG----27.11.2007
		ТХТ="ВЫБРАТЬ
		|	АП_ГТТ.Ссылка  как ВладелецМатрицы
		|ИЗ
		|	Справочник.АП_ГТТ КАК АП_ГТТ
		|ГДЕ
		|	АП_ГТТ.Владелец.Ссылка = &ГТТ
		|	И АП_ГТТ.Товар.Ссылка = &ТОвар";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("ГТТ",Аптека.ГруппаТТ);
		Запрос.УстановитьПараметр("ТОвар",ТОвар);
		
		ТЗ=Запрос.Выполнить().Выгрузить();
		
		Если ТЗ.Количество()<>0 Тогда
			// ТОвар есть в АПГТТ
			Стр=ТЗ.Получить(0);
			ВладелецМАтрицы=Стр.ВладелецМатрицы;
		Иначе
			
			Если  Аптека.ГруппаТТ=Справочники.ГруппыТТ.ПустаяСсылка() Тогда
				Сообщить("Аптека "+Аптека+" не назначена Группа ТТ! АП группы ТТ не существует! в матрицу добавить невозможно. Нужно задать группу ТТ аптеки");
				Возврат;
			КонецЕсли; 	
			
			// Добавляем новую запись в ап гтт
			АПГТТ=Справочники.АП_ГТТ.СоздатьЭлемент();
			АПГТТ.Владелец=Аптека.ГруппаТТ;
			АПГТТ.Код=Товар.Код; // код из ап. 
			АПГТТ.Товар=ТОвар;
			АПГТТ.ЕИТ=ТОвар.ЕдиницаПоУмолчанию;
			Попытка
				АПГТТ.Записать();
			Исключение
				Сообщить("код:" + Товар.Код + " Аптека.ГруппаТТ =  " + Аптека.ГруппаТТ );
				Возврат;
			КонецПопытки;
			
			ВладелецМАтрицы=АПГТТ.Ссылка;
			
			//Сообщить("Добавлен товар "+Товар+" в АП ГТТ "+Аптека.ГруппаТТ+" нужно задать параметры товара в АПГТТ");
		КонецЕсли; 
		
		// теперь товар точно есть в апгтт
		
		//------------------<Добавляем товар в матрицу аптеки>-------------------GtG----27.11.2007			
		МАтрица=Справочники.Матрица.СоздатьЭлемент();
		МАтрица.Аптека=Аптека;
		МАтрица.Владелец=ВладелецМАтрицы; // элемент АПГТТ
		МАтрица.КуМин = КуМин;
		МАтрица.КуМакс = КуМакс;
		Матрица.Записать();
		
		
		
	КонецПроцедуры	//ДобавитьТоварВМатрицуАптеки
	//==========================================================GtG====



Процедура КнопкаВыполнитьНажатие(Кнопка)
	
//Сообщить(""+ТекущаяДата());
Постр.Выполнить();
//Сообщить(""+ТекущаяДата());

ТЗ=Постр.Результат.Выгрузить();


ЭлементыФормы.Рез.Значение=ТЗ;
ЭлементыФормы.Рез.СоздатьКолонки();

ЭтаФорма.Панель.ТекущаяСтраница= ЭтаФорма.Панель.Страницы.Данные;

КонецПроцедуры

Процедура ОсновныеДействияФормыСкопировать(Кнопка)
	
	Если АптекаЖертва = Справочники.МестаХранения.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;
	Кол = Рез.Количество();
	ЭлементыФормы.Инд.МаксимальноеЗначение = Рез.Количество();
	ЭлементыФормы.Инд.Значение = 0;
	Для Каждого стр из Рез Цикл
		ЭлементыФормы.Инд.Значение = ЭлементыФормы.Инд.Значение + 1;
		ТоварОбъект = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(стр.Код_ап);
		
		ДобавитьТоварВМатрицуАптеки (ТоварОбъект,АптекаЖертва,стр.Qмин,стр.Qмакс);
	

	КонецЦикла;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыУдалитьАП(Кнопка)
	
	Если АптекаЖертва = Справочники.МестаХранения.ПустаяСсылка() Тогда
		Предупреждение("Не выбрана аптека!");
		Возврат;
	КонецЕсли;
	
	Если Вопрос("Вы действительно хотите удалить АП аптеки " + АптекаЖертва.Наименование + " ?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Если АптекаЖертва = Справочники.МестаХранения.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;
	
	ТХТ = "ВЫБРАТЬ
            |	Матрица.Ссылка как МатрицаСсылка
            |ИЗ
            |	Справочник.Матрица КАК Матрица
            |ГДЕ
            |	Матрица.Аптека = &АптекаЖертва
            |";
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("АптекаЖертва",АптекаЖертва);
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Кол = Рез.Количество();
	ЭлементыФормы.Инд.МаксимальноеЗначение = Рез.Количество();
	ЭлементыФормы.Инд.Значение = 0;
	
	Для каждого стр Из Рез Цикл
		
		ЭлементыФормы.Инд.Значение = ЭлементыФормы.Инд.Значение + 1;

		Объект = стр.МатрицаСсылка.ПолучитьОбъект();
		Объект.Удалить();
	
	КонецЦикла; 

КонецПроцедуры

Процедура РезПередУдалением(Элемент, Отказ)
	
	//Режим = РежимДиалогаВопрос.ДаНет;
	//Ответ = Вопрос("Действительно удалить?", Режим, 0);
	//Если Ответ = КодВозвратаДиалога.Нет Тогда
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли;
	Попытка
		Объект = Элемент.ТекущаяСтрока.МатрОбъект.ПолучитьОбъект();
		Объект.Удалить();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура ФайлНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДОФ = Новый ДиалогВыбораФайла(Режим);
	ДОФ.Расширение="*.xls";
	Доф.Фильтр="Файл заказа *.xls|*.xls";
	
	
	Если ДОФ.Выбрать() Тогда
		Файл=ДОФ.ПолноеИмяФайла;
	КонецЕсли;	
	
	
	
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ОсновныеДействияФормыИмпортАпИзФайла(Кнопка)
	
	Если ПустаяСтрока(Файл) Тогда
		Предупреждение("Выберите файл для импорта");
		Возврат;
	КонецЕсли;
	
	Если АптекаЖертва = Справочники.МестаХранения.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;	
	
	Excel = Новый COMОбъект("Excel.Application");
	Попытка
		Excel.WorkBooks.Open(Файл, 0);
	Исключение
		Сообщить("Файл: " + Файл + " либо уже открыт, либо поврежден! Пропускаем его... ");	
		Возврат;
	КонецПопытки;
	
	Sell_itr = 2;
	КолСтрок = 0;	
	
	Пока Строка(Excel.ActiveSheet.Cells(Sell_itr,1).Value) <> "" Цикл
		Sell_itr = Sell_itr + 1;
		КолСтрок = КолСтрок + 1;
	КонецЦикла;	
	
	Sell_itr = 2;
	ЭлементыФормы.Инд.МаксимальноеЗначение = КолСтрок;
	ЭлементыФормы.Инд.Значение = 0;
	Пока Строка(Excel.ActiveSheet.Cells(Sell_itr,1).Value) <> "" Цикл
		ОбработкаПрерыванияПользователя();		
		КодТовара		= Число(Excel.ActiveSheet.Cells(Sell_itr,1).Value);	
		
		ЭлементыФормы.Инд.Значение = ЭлементыФормы.Инд.Значение + 1;
		ТоварОбъект = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		
		Если ТоварОбъект = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка() Тогда
			Sell_itr = Sell_itr + 1;
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса="ВЫБРАТЬ
		|Выборка.Ссылка как Матр
		|ИЗ
		|	Справочник.Матрица КАК Выборка
		|ГДЕ
		|	Выборка.Аптека.Ссылка = &Аптека И
		|	Выборка.Владелец.Товар = &Товар
		|";
		
		Запрос=Новый Запрос;
		Запрос.УстановитьПараметр("Аптека",АптекаЖертва);
		Запрос.УстановитьПараметр("Товар",ТоварОбъект);
		Запрос.Текст=ТекстЗапроса;
		ТЗВрем = Запрос.Выполнить().Выгрузить();
		Если ТЗВрем.Количество() > 0 Тогда //Есть уже такой товар в матрице		
			Sell_itr = Sell_itr + 1;
			//Сообщить("есть такой уже");
			Продолжить;
		КонецЕсли;
		
		ДобавитьТоварВМатрицуАптеки (ТоварОбъект,АптекаЖертва,0,0);
		
		Sell_itr = Sell_itr + 1;
		
	КонецЦикла;	
	
	Excel.Quit();

КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	
	ЭлементыФормы.ПолеТабличногоДокумента1.Очистить();
	//Постр2.ТекстЗаголовка = "Оборот товара с " + Формат(ПостроительОтчета.Отбор["НачалоПериода"].Значение,"ДФ=dd.MM.yyyy") + " по " + Формат(ПостроительОтчета.Отбор["КонецПериода"].Значение,"ДФ=dd.MM.yyyy");
	//Постр2.ВыводитьЗаголовокОтчета = Истина;

	Постр2.Выполнить();
    //Постр2.АвтоДетальныеЗаписи = Истина;
	//Постр2.МакетДетальныхЗаписей.ПолучитьОбласть("Аптека").Параметры = "";
	//Постр2.ВыводитьДетальныеЗаписи = Ложь;
	//Постр2.МакетДетальныхЗаписей = Неопределено;
	//Постр2.МакетДетальныхЗаписей = ПолучитьМакет("Макет");
	Постр2.Вывести(ЭлементыФормы.ПолеТабличногоДокумента1);

КонецПроцедуры



Постр.Текст="ВЫБРАТЬ
            |	Матрица.Владелец.Товар.Код КАК Код_АП,
            |	Матрица.Владелец.Товар.Наименование КАК Наименование,
            |	Матрица.Владелец.Товар.Бренд КАК Бренд,
            |	Матрица.КуМин КАК Qмин,
            |	Матрица.КуМакс КАК Qмакс,
            |	Матрица.ГруппаАПИтог КАК ГруппаАПИтог,
            |	Матрица.ГруппаXYZ КАК ГруппаXYZ,
            |	Матрица.НЗ КАК НЗ,
            |	Матрица.Владелец.Товар.ГруппаФТГ.Представление КАК ГруппаФТГ,
            |	Матрица.Владелец.Товар.Производитель.Представление КАК Производитель,
            |	Матрица.Владелец.Товар.МеждународноеНазвание КАК МНН,
            |	Матрица.Аптека.Представление КАК Аптека,
            |	Матрица.Владелец.Товар.Категория.Представление КАК Категория,
            |	Матрица.Ссылка КАК МатрОбъект,
            |	Матрица.КтоВнесВМатрицу,
            |	Матрица.ДатаВнесенияВМатрицу,
            |	Матрица.РекламнаяАкция,
            |	Матрица.СрокДействияРекламы
            |{ВЫБРАТЬ
            |	Код_АП,
            |	Наименование,
            |	Бренд,
            |	Qмин,
            |	Qмакс,
            |	ГруппаАПИтог,
            |	ГруппаXYZ,
            |	НЗ,
            |	ГруппаФТГ,
            |	Производитель,
            |	МНН,
            |	Категория,
            |	Аптека,
            |	МатрОбъект,
            |	КтоВнесВМатрицу.* КАК Кто,
            |	ДатаВнесенияВМатрицу КАК КогдаВнес}
            |ИЗ
            |	Справочник.Матрица КАК Матрица
            |{ГДЕ
            |	Матрица.Аптека.*,
            |	Матрица.Владелец.Товар.*,
            |	Матрица.КтоВнесВМатрицу.* КАК Кто,
            |	Матрица.ДатаВнесенияВМатрицу КАК КогдаВнес,
            |	Матрица.РекламнаяАкция КАК РекламнаяАкция}
            |
            |УПОРЯДОЧИТЬ ПО
            |	Наименование";
			
			
Постр2.Текст="ВЫБРАТЬ
             |	Матрица.Аптека.Представление КАК Аптека,
             |	Матрица.Владелец.Товар.Наименование КАК Наименование,
             |	Матрица.КтоВнесВМатрицу,
             |	Матрица.ДатаВнесенияВМатрицу
             |{ВЫБРАТЬ
             |	Аптека,
             |	Наименование,
             |	КтоВнесВМатрицу.*,
             |	ДатаВнесенияВМатрицу}
             |ИЗ
             |	Справочник.Матрица КАК Матрица
             |{ГДЕ
             |	Матрица.Аптека.*,
             |	Матрица.Владелец.Товар.* КАК Товар,
             |	Матрица.КтоВнесВМатрицу.*,
             |	Матрица.ДатаВнесенияВМатрицу,
			 |	Матрица.РекламнаяАкция как РекламнаяАкция			 }
             |
             |УПОРЯДОЧИТЬ ПО
             |	Аптека,
             |	Наименование
             |ИТОГИ ПО
             |	Аптека";
			









