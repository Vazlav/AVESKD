Функция ИмяСекции(ПодробноеИмя)
	Если Кратко=Истина Тогда
		Возврат СтрЗаменить(ПодробноеИмя,"Подробно","Кратко");
	Иначе
		Возврат ПодробноеИмя;
	КонецЕсли;	
КонецФункции	

Функция МО_ПолучитьРасшифровкуАптекоДня(Расшифровка)Экспорт
	
	Запрос=Новый Запрос();
	Запрос.Текст="ВЫБРАТЬ
	             |	УЗ_СменаККМ.Ссылка КАК Документ,
	             |	УЗ_СменаККМ.НомерККМ,
	             |	УЗ_СменаККМ.НомерСмены,
	             |	УЗ_СменаККМ.Корректная,
	             |	УЗ_СменаККМ.СуммаВыручки,
	             |	ВЫБОР
	             |		КОГДА УЗ_СменаККМ.Корректная = ЛОЖЬ
	             |			ТОГДА ""Смена еще не закрыта.""
	             |		ИНАЧЕ ""ОК.""
	             |	КОНЕЦ КАК КомментарийДляОПВ , ПризнакКорректности
	             |ИЗ
	             |	Документ.УЗ_СменаККМ КАК УЗ_СменаККМ
	             |ГДЕ
	             |	УЗ_СменаККМ.СкладКод = &СкладКод
	             |	И НАЧАЛОПЕРИОДА(УЗ_СменаККМ.Дата, ДЕНЬ) = &Дата
	             |	И УЗ_СменаККМ.Проведен = ИСТИНА
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	УЗ_РеализацияККМ.Ссылка,
	             |	УЗ_РеализацияККМ.НомерККМ,
	             |	УЗ_РеализацияККМ.НомерСмены,
	             |	УЗ_РеализацияККМ.Корректная,
	             |	УЗ_РеализацияККМ.СуммаВыручки,
	             |	УЗ_РеализацияККМ.КомментарийДляОПВ , ПризнакКорректности
	             |ИЗ
	             |	Документ.УЗ_РеализацияККМ КАК УЗ_РеализацияККМ
	             |ГДЕ
	             |	УЗ_РеализацияККМ.СкладКод = &СкладКод
	             |	И НАЧАЛОПЕРИОДА(УЗ_РеализацияККМ.Дата, ДЕНЬ) = &Дата
	             |	И УЗ_РеализацияККМ.Проведен = ИСТИНА";
	
	Запрос.УстановитьПараметр("СкладКод",Расшифровка.СкладКод);
	Запрос.УстановитьПараметр("Дата",Расшифровка.Дата);
	
	Рез=Запрос.Выполнить();
	
	Если Рез.Пустой() ТОгда
		
		Если Расшифровка.СкладКод=0 Или 
			Расшифровка.СкладКод=Неопределено 	Тогда
			//Состояние("Расшифровка.СкладКод= "+Расшифровка.СкладКод);
			Возврат Неопределено;
		КонецЕсли; 	
		
		
		Спр=Справочники.МестаХранения.НайтиПоКоду(Расшифровка.СкладКод);
		
		Если Спр.Пустая() Тогда
			
			Возврат Неопределено;
		КонецЕсли;	
		
		
		
		Если Вопрос("В аптеке"+Символы.ПС+Спр+Символы.ПС+Формат(Расшифровка.Дата,"ДФ=dd.MM.yyyy")+"  ВЫХОДНОЙ?",
			РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет)=КодВозвратаДиалога.Да ТОгда
			
			Док=Документы.УЗ_РеализацияККМ.СоздатьДокумент();
			Док.СкладКод=Расшифровка.СкладКод;
			Док.ФирмаКод=Спр.Фирма.Код;
			
			Док.Дата=Расшифровка.Дата;
			Док.ДатаСмены=Расшифровка.Дата;
			
			Док.ВыходнойДень=Истина;
			Док.КомментарийДляОПВ="Выходной день";
			Док.Комментарий="Выходной день";
			Док.Корректная=Истина;
			Док.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;	
		
		
		
		Возврат Неопределено;
	Конецесли;
	
	Таб=Новый ТабличныйДокумент;
	
	Мак=ЭтотОбъект.ПолучитьМакет("РасшифровкаДаты");
	
	Шапка=Мак.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Заполнить(Расшифровка);
	Спр=Справочники.МестаХранения.НайтиПоКоду(Расшифровка.СкладКод);
	Шапка.Параметры.АдресАптеки=Спр.Наименование;
	
	
	Таб.Вывести(Шапка);
	
	ИтогоСумма=0;
	
	Выб=Рез.Выбрать();
	
	Стр=Мак.ПолучитьОбласть("Строка");
	
	Пока Выб.Следующий() Цикл 
		
		Стр.Параметры.Заполнить(Выб);
		Таб.Вывести(Стр);
		
		ИтогоСумма=ИтогоСумма+Выб.СуммаВыручки;
		
	КонецЦикла;
	
	Ит=Мак.ПолучитьОбласть("Итоги");;
	
	Ит.Параметры.ИтогоСумма=ИтогоСумма;
	
	Таб.Вывести(Ит);
	
	Возврат Таб;
	
	
	
	
	
	
	
	
	
	
	
	
КонецФункции	


Функция КолвоДнейПериода(Начпер,КонПер)
	
	Запрос=Новый Запрос();
	Запрос.Текст= "ВЫБРАТЬ РАЗНОСТЬДАТ(&начпер, &Конпер, ДЕНЬ)  КАК КолвоДней";
	Запрос.УстановитьПараметр("НачПер",НачПер);
	Запрос.УстановитьПараметр("КонПер",КонПер);
	
	Рез=Запрос.Выполнить();
	Выб=Рез.Выбрать();
	Выб.Следующий();
	
	Возврат Выб.КолвоДней;
	
КонецФункции	



Функция МО_ОтчетПоВыручке() Экспорт
	
	НетДня=новый цвет(220,220,220);
	НетВыр=Новый Цвет(255,140,0);
	Выходной=Новый Цвет(230,230,255);
	Неработает=Новый Цвет(220,240,240);
	ОК=Новый Цвет(255,255,255);
	ЕНС=Новый Цвет(152,251,152);
	НекорректныйДокумент = Новый Цвет(255,0,0);
	
	Построитель.Параметры.Вставить("период1",НачалоДня(НачПериода1));
	Построитель.Параметры.Вставить("период2",КонецДня(Конпериода1));
	Построитель.Параметры.Вставить("ТипыМХ_Розн",Перечисления.ТипыМХ.Розн);
	
	ДнейВМесяце=День(КонецМесяца(Месяц));
	
	Мак=ЭтотОбъект.ПолучитьМакет("ШахматкаПоКлеткам");
	
	Таб=Новый ТабличныйДокумент;
	
	Шапка=Мак.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Месяц=Месяц;
	
	Шапка.Области.ЛегНД.ЦветФона=НетВыр;
	Шапка.Области.ЛегВых.ЦветФона=Выходной;
	Шапка.Области.ЛегЗакрыта.ЦветФона=Неработает;
	Шапка.Области.ЛегОК.ЦветФона=ОК;
	Шапка.Области.ЛегЕНС.ЦветФона=ЕНС;

	
	КДП=КолвоДнейПериода(НачПериода1,КонПериода1);

	
	
	Таб.Вывести(Шапка);
	
	Заг=Мак.ПолучитьОбласть(ИмяСекции("ЗаголовокПодробно|Аптека"));
	
	Таб.Вывести(Заг);

	ЗагДень=Мак.ПолучитьОбласть(ИмяСекции("ЗаголовокПодробно|День"));

	//---------------<формируем дни шапки>---------------------------// GtG // 02.02.2016 17:07:54 
	Для Ы=0 По КДП Цикл
		ТекДата=НачПериода1+(24*60*60)*Ы;
		ЗагДень.Параметры.Дата=ТекДата;
		
		Таб.Присоединить(ЗагДень);
	КонецЦикла;	
	
	ЗагИтоги=Мак.ПолучитьОбласть(ИмяСекции("ЗаголовокПодробно|Итоги"));
	Таб.Присоединить(ЗагИтоги);

	//
	//
	//Если ДнейВМесяце<31 Тогда
	//	Если Кратко ТОгда
	//		ИмяОбл="ЗК";
	//	Иначе
	//		ИмяОбл="ЗП";
	//	КонецЕсли; 	
	//	
	//	Для Ы=ДнейВМесяце+1 по 31 цикл
	//		Заг.Области[""+ИмяОбл+Ы].ЦветФона=НетДня ;
	//	КонецЦикла; 	
	//КонецЕсли;	
	//
	//Таб.Вывести(Заг);
	//
	
	
	
	
	Построитель.Выполнить();
	
	РезПостроителя=Построитель.Результат;
	
	Если РезПостроителя.Пустой() Тогда
		Возврат Таб;
	КонецЕсли;
	
	ИтогиПоДням=Новый ТаблицаЗначений;
	ИтогиПоДням.Колонки.Добавить("День");
	ИтогиПоДням.Колонки.Добавить("Месяц");
	ИтогиПоДням.Колонки.Добавить("Выручка");
	ИтогиПоДням.Колонки.Добавить("КЧ");
	ИтогиПоДням.Колонки.Добавить("КНЧ");
    ИтогиПоДням.Колонки.Добавить("ДнейРаботы");
		

	
	
	
	КолвоСкладов=0;
	
	ВыбОбщиеитоги=РезПостроителя.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыбОбщиеитоги.Следующий() Цикл
		
		ВыбСклад=ВыбОбщиеитоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		
		
		Пока ВыбСклад.Следующий() Цикл
			
			ВыручкаПоСкладу=0;
			КЧПоСкладу=0;
			КНЧПоСкладу=0;
			ДнейРаботыПоСкладу=0;
			ССППоСкладу=0;
			СГЧПоСкладу=0;
			
			Если Кратко=Ложь ТОгда
				СтрСклад=Мак.ПолучитьОбласть(ИмяСекции("СтрокаПодробно|Аптека"));
			Иначе
				СтрСклад=Мак.ПолучитьОбласть(ИмяСекции("СтрокаКратко|Аптека"));
			КонецЕсли;
			
			
			
			
			ВыбДаты=ВыбСклад.Выбрать(ОбходРезультатаЗапроса.Прямой);
			
			//СтрСклад=Мак.ПолучитьОбласть(ИмяСекции("СтрокаПодробно"));
			
			ВыбДаты.Следующий();
			
			СтрСклад.Параметры.Код	= ВыбДаты.СкладКод;
			СтрСклад.Параметры.Номер=ВыбДаты.НомерАптеки;	
			СтрСклад.Параметры.Наименование = ВыбДаты.Наименование;
			СтрСклад.Параметры.АптекаСсылка= ВыбДаты.Ссылка;
			
			
			НачальныйДеньВыручки=ВыбДаты.ДеньМес;
			
			
			
			ДатаОткрытия=ВыбДаты.ДатаОткрытия;
			ДатаЗакрытия=ВыбДаты.ДатаЗакрытия;
			
			
			
			Таб.Вывести(СтрСклад);
			
			КолвоСкладов=КолвоСкладов+1;
			Если КолвоСкладов%10=0 тогда
				Состояние(ВыбДаты.СкладКод);
			КонецЕсли;
			
			//
			//
			//Если НачальныйДеньВыручки>1 Тогда
			//	Для Ы=1 по НачальныйДеньВыручки-1 Цикл
			//		Если ДатаОткрытия<=Дата(Год(Месяц),Месяц(Месяц),Ы) Тогда // открыта нет выручки
			//			СтрСклад.Области["ВП"+(Ы+Кр)].ЦветФона=НетВыр;
			//			СтрСклад.Параметры["Выручка"+Ы]="  Х  ";
			
			//		Иначе // Еще не открыта	
			//			СтрСклад.Области["ВП"+(Ы+Кр)].ЦветФона=Неработает;
			//			СтрСклад.Параметры["Выручка"+Ы]=" --- ";
			//			
			//		КонецЕсли;
			//		
			//		СтрСклад.Параметры["Р"+Ы]=Новый Структура("СкладКод,Дата",ВыбДаты.СкладКод,Дата(Год(Месяц),Месяц(Месяц),Ы));
			//		
			//	КонецЦикла;	
			//КонецЕсли;
			//
			//
			
			//ТЗНаличияДанных=Новый ТаблицаЗначений;
			//ТЗНаличияДанных.Колонки.Добавить("ДеньЫ");
			//ТЗНаличияДанных.Колонки.Добавить("ЕстьДанные");
			//ТЗНаличияДанных.Колонки.Добавить("Данные");
			//ТЗНаличияДанных.Колонки.Добавить("Выходной");
			
			//ВыбДаты:
			//СкладКод	ДеньМес	МесМес	ЕстьСмены	НомерАптеки	Наименование	ДатаОткрытия	ДатаЗакрытия	ЕстьХотьКакаяНибудьВыручка	Выходной	Ссылка	СортировкаДляФинОтдела	НаименованиеПоКлассификатору	СуммаВыручки	КоличествоНаименованийВЧеке	КолвоЧеков	ДнейРаботы
			
			
			ВыбДаты.Сбросить(); // вернемся к первой дате выручки  НачальныйДеньВыручки
			
			
			ДЛя Ы=0 По КДП Цикл
				
				ТекДата=НачПериода1+(24*60*60)*Ы;
				
				
				
				Если Кратко=Ложь ТОгда
					Ячейка=Мак.ПолучитьОбласть("СтрокаПодробно|День");
				Иначе	
					Ячейка=Мак.ПолучитьОбласть("СтрокаКратко|День");
				КонецЕсли; 	
				
				СтруктураРасшифровки=Новый Структура("СкладКод,Дата",ВыбДаты.СкладКод,ТекДата);
				
				Если ВыбДаты.НайтиСледующий(Новый Структура("МесМес,ДеньМес",Месяц(ТекДата),День(ТекДата)))=Истина ТОгда
					СтруктураРасшифровки=Новый Структура("СкладКод,Дата",ВыбДаты.СкладКод,ТекДата);

					//Сообщить(""+ВыбДаты.СкладКод   +"   "+
					//ВыбДаты.МесМес   +"   "+ВыбДаты.ДеньМес   +"   "+
					//ВыбДаты.ДатаОткрытия   +"   "+ВыбДаты.СортировкаДляФинОтдела   +"   "+
					//ВыбДаты.СуммаВыручки   +"   "+ВыбДаты.КоличествоНаименованийВЧеке);
					
					ТекССП= Окр(ВыбДаты.СуммаВыручки/?(ВыбДаты.КолвоЧеков<>0,ВыбДаты.КолвоЧеков,1),2);
					ТекСГЧ= Окр(ВыбДаты.КоличествоНаименованийВЧеке/?(ВыбДаты.КолвоЧеков<>0,ВыбДаты.КолвоЧеков,1),2);
					
					Если Кратко=Ложь Тогда
						Ячейка.Параметры.Выручка = ВыбДаты.СуммаВыручки;
						Ячейка.Параметры.КЧ      = ВыбДаты.КолвоЧеков;
						Ячейка.Параметры.ССП     = ТекССП;
						Ячейка.Параметры.СГЧ     = ТекСГЧ
					Иначе
						Ячейка.Параметры.Выручка = ВыбДаты.СуммаВыручки;

					КонецЕсли;	
					
					
					
					ВыручкаПоСкладу=ВыручкаПоСкладу+ВыбДаты.СуммаВыручки;
					КЧПоСкладу=КЧПоСкладу+ВыбДаты.КолвоЧеков;
					КНЧПоСкладу=КНЧПоСкладу+ВыбДаты.КоличествоНаименованийВЧеке;
					ДнейРаботыПоСкладу=ДнейРаботыПоСкладу+ВыбДаты.ДнейРаботы;
					ССППоСкладу=ССППоСкладу+ТекССП;
					СГЧПоСкладу=СГЧПоСкладу+ТекСГЧ;

					ТекВыходной= ВыбДаты.Выходной;
					
					ТекЕстьХотьКакаяНибудьВыручка =Истина;
					ТекДатаЗакрытия=ВыбДаты.ДатаЗакрытия;
					ТекДатаОткрытия=ВыбДаты.ДатаОткрытия;
					
					
					СтрИПД=ИтогиПоДням.Добавить();
					СтрИПД.День=  День(ТекДата)   ;
					СтрИПД.Месяц= Месяц(ТекДата)  ;
					СтрИПД.Выручка= ВыбДаты.СуммаВыручки          ;
					СтрИПД.КЧ=      ВыбДаты.КолвоЧеков          ;
					СтрИПД.КНЧ=     ВыбДаты.КоличествоНаименованийВЧеке ;
										
					
					
					
				Иначе
					СтруктураРасшифровки.Вставить("СкладКодДляРучногоВводаВыручки",ВыбДаты.СкладКод);
					
					ТекВыходной=Ложь;
					ТекЕстьХотьКакаяНибудьВыручка =Ложь;
                    ТекДатаЗакрытия=ДатаЗакрытия;
					ТекДатаОткрытия=ДатаОткрытия;
				КонецЕсли;
				
				Ячейка.Параметры.Р= СтруктураРасшифровки;
				
								
				//---------------<Красота>---------------------------// GtG // 02.02.2016 21:09:01
				
				
                //       ДатаОткрытия	ДатаЗакрытия
				//       ЕстьСмены  ЕстьХотьКакаяНибудьВыручка
				//       Выходной
				
				//Сообщить("Скл="+ВыбДаты.СкладКод+"  ТД="+ТекДата+"  ТекВыходной="+ТекВыходной+"  ЕХКВ="+ТекЕстьХотьКакаяНибудьВыручка+"  ДО="+ВыбДаты.ДатаОткрытия+" ДЗ="+ВыбДаты.ДатаЗакрытия);
				
				
				Если ТекВыходной ТОгда
					// точно известно что это выходной день
					Ячейка.Параметры.Выручка="вых";
					Ячейка.Области["ВП"+?(Кратко,"100","")].ЦветФона=Выходной;
				Иначе
					
					Если ТекЕстьХотьКакаяНибудьВыручка=Истина ТОгда // по этой дате
						
						Если ВыбДаты.ЕстьСмены<>0 ТОгда
							Ячейка.Области["ВП"+?(Кратко,"100","")].ЦветФона=ЕНС; // есть незакрытые смены
						Иначе
							Ячейка.Области["ВП"+?(Кратко,"100","")].ЦветФона=ОК; // чики-пуки
						КонецЕсли; 	
					
					Иначе // ввобще нет выручки. Совсем. Никакой...
						
						// значит при работающей аптеке  - это косяк
						// при неработающей аптеке это прочерк.
						Если ТекДатаОткрытия<>Дата(1,1,1) И ТекДатаЗакрытия=Дата(1,1,1)  Тогда // открытая аптека
						     Если ТекДата>=ТекДатаОткрытия Тогда // псле даты открытия нет выручки
								 Ячейка.Области["ВП"+?(Кратко,"100","")].ЦветФона=НетВыр; // нет данных, а должны быть
 								 Ячейка.Параметры.Выручка="Х";	
							 Иначе // прочерки ранее даты открытия
								 Ячейка.Области["ВП"+?(Кратко,"100","")].ЦветФона=Неработает; // прочерк
 								 Ячейка.Параметры.Выручка="---";	
							 КонецЕсли;	 
						
						 ИначеЕсли  ТекДатаЗакрытия<>Дата(1,1,1) Тогда // Закрытая аптека
							 
							 попытка
								 Если ТекДата>ТекДатаЗакрытия Тогда // выручки быть не должно.
									 Ячейка.Области["ВП"+?(Кратко,"100","")].ЦветФона=Неработает; // прочерк
									 Ячейка.Параметры.Выручка="---";
								 Иначе // нет данных До даты закрытия
									 Ячейка.Области["ВП"+?(Кратко,"100","")].ЦветФона=НетВыр; // нет данных, а должны быть
									 Ячейка.Параметры.Выручка="Х";	
								 КонецЕсли;
								 
							 Исключение
								 //Сообщить("ТекДата="+ТекДата+" ТекДатаЗакрытия="+ТекДатаЗакрытия+"   "+ОписаниеОшибки());
								 
								 
							 Конецпопытки;
							 
						
						 ИначеЕсли ТекДатаОткрытия=Дата(1,1,1)  и  ТекДатаЗакрытия=Дата(1,1,1) Тогда 
							 // Ну хер его знает что это за аптека. данных по открытию/закрытию нет и что там должно быть не ясно
						КонецЕсли;
					КонецЕсли;	
					Если ВыбДаты.ПризнакКорректности = 2 Тогда
						Ячейка.Области["ВП"+?(Кратко,"100","")].ЦветФона=  НекорректныйДокумент;	
					КонецЕсли;
				КонецЕсли;
				
				
				
				
				
				
				
				Таб.Присоединить(Ячейка);
			
				
			КонецЦикла;	
			
			//---------------<ИтогиПоСкладу>---------------------------// GtG // 02.02.2016 20:41:40
			
			Если Кратко=ложь ТОгда
				БлокИтогов=Мак.ПолучитьОбласть("СтрокаПодробно|Итоги");
				БлокИтогов.Параметры.КЧИтого	= КЧПоСкладу;
				БлокИтогов.Параметры.СД_КЧИтого =  Окр(КЧПоСкладу/?(ДнейРаботыПоСкладу<>0,ДнейРаботыПоСкладу,1),2);

				
				БлокИтогов.Параметры.ССПИтого	 = Окр(ВыручкаПоСкладу/?(КЧПоСкладу<>0,КЧПоСкладу,1),2);
				БлокИтогов.Параметры.СД_ССПИтого = Окр(ССППоСкладу/?(ДнейРаботыПоСкладу<>0,ДнейРаботыПоСкладу,1),2);
				
				БлокИтогов.Параметры.СГЧИтого	  = Окр(КНЧПоСкладу/?(КЧПоСкладу<>0,КЧПоСкладу,1),2);
				БлокИтогов.Параметры.СД_СГЧИтого  = Окр(СГЧПоСкладу/?(ДнейРаботыПоСкладу<>0,ДнейРаботыПоСкладу,1),2);
				
				
				
			Иначе
				БлокИтогов=Мак.ПолучитьОбласть("СтрокаКратко|Итоги");
			КонецЕсли; 
			
			  БлокИтогов.Параметры.ВыручкаИтого	= ВыручкаПоСкладу;
			  БлокИтогов.Параметры.СД_ВыручкаИтого=Окр(ВыручкаПоСкладу/?(ДнейРаботыПоСкладу<>0,ДнейРаботыПоСкладу,1),2);

			  Таб.Присоединить(БлокИтогов);
			
			
			
			////Пока ВыбДаты.Следующий() Цикл
				//	
				//	СтрНД=ТЗНаличияДанных.Добавить();
				//	СтрНД.ДеньЫ=ВыбДаты.ДеньМес;
				//	
				//	Если ВыбДаты.ЕстьХотьКакаяНибудьВыручка Тогда
				//		СтрНД.ЕстьДанные=1;
				//	Иначе
				//		СтрНД.ЕстьДанные=0;
				//	КонецЕсли;
				//	
				//	СтрНД.Выходной=ВыбДаты.Выходной;
				//	
				//	СтруктураДанных=Новый Структура;
				//	СтруктураДанных.Вставить("ДеньМес",ВыбДаты.ДеньМес);
				//	СтруктураДанных.Вставить("ЕстьСмены",ВыбДаты.ЕстьСмены );
				//	СтруктураДанных.Вставить("СуммаВыручки",ВыбДаты.СуммаВыручки );
				//	СтруктураДанных.Вставить("КоличествоНаименованийВЧеке",ВыбДаты.КоличествоНаименованийВЧеке);
				//	СтруктураДанных.Вставить("КолвоЧеков",ВыбДаты.КолвоЧеков);
				//	СтруктураДанных.Вставить("СкладКод",ВыбДаты.СкладКод);
				//	СтруктураДанных.Вставить("НомерАптеки", ВыбДаты.НомерАптеки );
				//	СтруктураДанных.Вставить("Наименование", ВыбДаты.Наименование );
				//	СтруктураДанных.Вставить("Выходной", ВыбДаты.Выходной     );
				//	СтрНД.Данные=СтруктураДанных;
				//КонецЦикла;
				//
				//// могут быть дырки
				//
				//ДЛя Ы=НачальныйДеньВыручки По День(КонецМесяца(Месяц)) Цикл
				//	Если ТЗНаличияДанных.Найти(Ы,"ДеньЫ")=Неопределено ТОгда
				//		СтрНД=ТЗНаличияДанных.Добавить();
				//		СтрНД.ДеньЫ=Ы;
				//		СтрНД.ЕстьДанные=0;
				//	КонецЕсли;
				//КонецЦикла;	
				//
				//ТЗНаличияДанных.Сортировать("ДеньЫ");
				//
				////НаличияДанных.ВыбратьСтроку();
				//
				//Для Каждого Стр Из ТЗНаличияДанных Цикл
				//	
				//	ДатаДня=Дата(Год(Месяц),Месяц(Месяц),Стр.ДеньЫ);
				//	
				//	Если  Стр.ЕстьДанные=0 тогда КонецЕсли; 
				//	Если  ДатаЗакрытия>=ДатаДня тогда КонецЕсли; 
				//	Если  ДатаЗакрытия=дата(1,1,1) тогда КонецЕсли; 
				//	Если  ДатаДня<= НачалоДня(ТекущаяДата()) тогда КонецЕсли; 
				//	//
				//	
				////сообщить("  ----  "+Стр.ЕстьДанные+"   ("+ДатаЗакрытия+"  >=  "+ДатаДня+" или "+ДатаЗакрытия+" ="+дата(1,1,1)+")  И	"+ДатаДня+"<= "+НачалоДня(ТекущаяДата())+"  ");
				//
				//Если Стр.ЕстьДанные=0 и(  
				//	
				//		ДатаЗакрытия<ДатаДня и ДатаЗакрытия<>дата(1,1,1) 
				//		или ДатаДня<ДатаОткрытия 
				//		или ДатаЗакрытия>ДатаДня и ДатаЗакрытия<>дата(1,1,1) и ДатаЗакрытия>=началомесяца(месяц) и ДатаЗакрытия<=конецмесяца(месяц)
				//		
				//		) ТОгда  // хвост закрытой аптеки или еще не открытой
				//		СтрСклад.Области["ВП"+(Стр.ДеньЫ+Кр)].ЦветФона=Неработает;
				//		СтрСклад.Параметры["Выручка"+Стр.ДеньЫ]=" --- ";
				//		
				//		
				
				//
				//
				//	ИначеЕсли Стр.ЕстьДанные=0 и 
				//		(ДатаЗакрытия>=ДатаДня или ДатаЗакрытия=дата(1,1,1))  И	
				//		ДатаДня<= НачалоДня(ТекущаяДата()) и ДатаДня>=ДатаОткрытия ТОгда    // Палево! Должна быть выручка
				//		
				//		СтрСклад.Области["ВП"+(Стр.ДеньЫ+Кр)].ЦветФона=НетВыр;
				//		СтрСклад.Параметры["Выручка"+Стр.ДеньЫ]="  Х  ";
				//		
				//	ИначеЕсли Стр.ЕстьДанные=0 и 
				//		(ДатаЗакрытия>=ДатаДня или ДатаЗакрытия=дата(1,1,1))  И
				//		ДатаДня > НачалоДня(ТекущаяДата()) и ДатаДня>=ДатаОткрытия  ТОгда   // Это нормально, дата еще не наступила.
				//		СтрСклад.Области["ВП"+(Стр.ДеньЫ+Кр)].ЦветФона=ОК;
				//		СтрСклад.Параметры["Выручка"+Стр.ДеньЫ]="  ";	
				//		
				//		
				//		
				//		
				//	ИначеЕсли Стр.ЕстьДанные=1 и Стр.Выходной=Истина ТОгда
				//		СтрСклад.Области["ВП"+(Стр.ДеньЫ+Кр)].ЦветФона=Выходной;
				//		СтрСклад.Параметры["Выручка"+Стр.ДеньЫ]=" вых ";
				//		
				//	ИначеЕсли Стр.ЕстьДанные=1 и Стр.Данные.ЕстьСмены=0 ТОгда // нормальный день
				//		СтрСклад.Области["ВП"+(Стр.ДеньЫ+Кр)].ЦветФона=Ок;
				//		СтрСклад.Параметры["Выручка"+Стр.ДеньЫ]=Стр.Данные.СуммаВыручки;
				//		
				//		Если Кратко=ложь Тогда
				//			СтрСклад.Параметры["ССП"+Стр.ДеньЫ]=Окр(?(Стр.Данные.КолвоЧеков<>0,Стр.Данные.СуммаВыручки/Стр.Данные.КолвоЧеков,0),2);
				//			СтрСклад.Параметры["СГЧ"+Стр.ДеньЫ]=Окр(?(Стр.Данные.КолвоЧеков<>0,Стр.Данные.КоличествоНаименованийВЧеке/Стр.Данные.КолвоЧеков,0),2);
				//			СтрСклад.Параметры["КЧ"+Стр.ДеньЫ]=Стр.Данные.КолвоЧеков;
				//		КонецЕсли;
				
				//	ИначеЕсли Стр.ЕстьДанные=1 и Стр.Данные.ЕстьСмены<>0 ТОгда // не нормальный день
				//		СтрСклад.Области["ВП"+(Стр.ДеньЫ+Кр)].ЦветФона=ЕНС;
				//		СтрСклад.Параметры["Выручка"+Стр.ДеньЫ]=Стр.Данные.СуммаВыручки;
				//		
				//		Если Кратко=ложь Тогда
				//			СтрСклад.Параметры["ССП"+Стр.ДеньЫ]=Окр(?(Стр.Данные.КолвоЧеков<>0,Стр.Данные.СуммаВыручки/Стр.Данные.КолвоЧеков,0),2);
				//			СтрСклад.Параметры["СГЧ"+Стр.ДеньЫ]=Окр(?(Стр.Данные.КолвоЧеков<>0,Стр.Данные.КоличествоНаименованийВЧеке/Стр.Данные.КолвоЧеков,0),2);
				//			СтрСклад.Параметры["КЧ"+Стр.ДеньЫ]=Стр.Данные.КолвоЧеков;
				//		КонецЕсли;
				
				//	КонецЕсли;
				//	
				//	
				//	Если Стр.ЕстьДанные=1 ТОгда
				//		ВыручкаПоСкладу=ВыручкаПоСкладу+Стр.Данные.СуммаВыручки;
				//		КЧПоСкладу=КЧПоСкладу+Стр.Данные.КолвоЧеков;
				//		КНЧПоСкладу=КНЧПоСкладу+Стр.Данные.КоличествоНаименованийВЧеке;
				//		
				//		СИтПД=ИтогиПоДням.Добавить();
				//		СИтПД.День=Стр.ДеньЫ;
				//		СИтПД.Выручка=Стр.Данные.СуммаВыручки;
				//		СИтПД.КЧ=    Стр.Данные.КолвоЧеков;
				//		СИтПД.КНЧ=	Стр.Данные.КоличествоНаименованийВЧеке	;		
				//		
				//		СтрСклад.Параметры["Р"+Стр.ДеньЫ]=Новый Структура("СкладКод,Дата",Стр.Данные.СкладКод,Дата(Год(Месяц),Месяц(Месяц),Стр.ДеньЫ));
				
				//	Иначе
				//		
				//		СтрСклад.Параметры["Р"+Стр.ДеньЫ]=Новый Структура("СкладКод,Дата",ВыбСклад.СкладКод,Дата(Год(Месяц),Месяц(Месяц),Стр.ДеньЫ));
				//		
				//	КонецЕсли;	
				//	
				//					
				//	
				//	
				//	
				//	
				//КонецЦикла;	
				//
				//СтрСклад.Параметры.ВыручкаИтого = ВыручкаПоСкладу ;
				//
				//Если Кратко=ложь Тогда
				//	СтрСклад.Параметры.КЧИтого  =  КЧПоСкладу ;
				//	СтрСклад.Параметры.ССПИтого = Окр(?(КЧПоСкладу<>0,ВыручкаПоСкладу/КЧПоСкладу,0),2);
				//	СтрСклад.Параметры.СГЧИтого = Окр(?(КЧПоСкладу<>0,КНЧПоСкладу/КЧПоСкладу,0),2);
				//КонецЕсли;
				
				//
				//Если ДнейВМесяце<31 Тогда
				//	Для Ы=ДнейВМесяце+1 по 31 цикл
				//		СтрСклад.Области["ВП"+(Ы+Кр)].ЦветФона=НетДня;
				//	КонецЦикла; 	
				//КонецЕсли;	
				//
				//
				
				//Таб.Вывести(СтрСклад);
				
			////КонецЦикла;	
			
			//ИтогиПоДням.Свернуть("День","Выручка,КЧ,КНЧ");
			
			
		КонецЦикла;
		
	Конеццикла;	
	
	//---------------<Итоги>---------------------------// GtG // 02.02.2016 23:11:11
	
	
	
	
	ИтогиПоДням.Свернуть("День,Месяц","Выручка,КЧ,КНЧ"); 
	
	ИтогиПоДням.Колонки.Добавить("ССП");
	ИтогиПоДням.Колонки.Добавить("СГЧ");
	
	Если Кратко=Ложь Тогда
		ИтЗаг=Мак.ПолучитьОбласть("ИтогоПодробно|Аптека");
		ЯчейкаИтогов=Мак.ПолучитьОбласть("ИтогоПодробно|День");
	Иначе
		ИтЗаг=Мак.ПолучитьОбласть("ИтогоКратко|Аптека");
		ЯчейкаИтогов=Мак.ПолучитьОбласть("ИтогоКратко|День");
	КонецЕсли; 
	
	Таб.Вывести(ИтЗаг);
	
	
	
	Для Ы=0 по КДП Цикл
		ТекДата=НачПериода1+(24*60*60)*Ы;
		
		МассивСтр=ИтогиПоДням.НайтиСтроки(Новый Структура("Месяц,День",Месяц(ТекДата),День(ТекДата)));
		
		Если МассивСтр.Количество()<>0 Тогда
			
			СтрокаИтогов=МассивСтр.Получить(0);
			
			Если Кратко=Ложь Тогда
				ЯчейкаИтогов.Параметры.Выручка   =  СтрокаИтогов.Выручка;
				ЯчейкаИтогов.Параметры.КЧ        =  СтрокаИтогов.КЧ;
				
				СтрокаИтогов.ССП= Окр(СтрокаИтогов.Выручка /?(СтрокаИтогов.КЧ<>0,СтрокаИтогов.КЧ,1),2);
				ЯчейкаИтогов.Параметры.ССП       = СтрокаИтогов.ССП;
				
				
				СтрокаИтогов.СГЧ= Окр(СтрокаИтогов.КНЧ /?(СтрокаИтогов.КЧ<>0,СтрокаИтогов.КЧ,1),2);
				ЯчейкаИтогов.Параметры.СГЧ       = СтрокаИтогов.СГЧ;
			Иначе
				ЯчейкаИтогов.Параметры.Выручка   =  СтрокаИтогов.Выручка;
			КонецЕсли; 

			Таб.Присоединить( ЯчейкаИтогов);
		Конецесли;	
	КонецЦикла;	
	
	//---------------<Нижний правый угол>---------------------------// GtG // 02.02.2016 23:24:20
	ИтогиПоДням.Свернуть("","Выручка,КЧ,КНЧ,ССП,СГЧ");

	КДП=КДП+1;
	
	
	Для Каждого Стр Из ИтогиПоДням Цикл
		Если Кратко=Ложь Тогда
			ЯчейкаНижнегоПравогоУгла=Мак.ПолучитьОбласть("ИтогоПодробно|Итоги");
			
			ЯчейкаНижнегоПравогоУгла.Параметры.ВыручкаИтого	 = Стр.Выручка ;
			ЯчейкаНижнегоПравогоУгла.Параметры.СД_ВыручкаИтого = Окр(Стр.Выручка/КДП,2);

			
			ЯчейкаНижнегоПравогоУгла.Параметры.КЧИтого	 =Стр.КЧ;
			ЯчейкаНижнегоПравогоУгла.Параметры.СД_КЧИтого = Окр(Стр.КЧ/КДП,2);
		
			ЯчейкаНижнегоПравогоУгла.Параметры.ССПИтого	 =Окр(Стр.Выручка/?(Стр.КЧ<>0,Стр.КЧ,1),2);  
			ЯчейкаНижнегоПравогоУгла.Параметры.СД_ССПИтого =Окр(Стр.ССП/КДП,2);
			
			ЯчейкаНижнегоПравогоУгла.Параметры.СГЧИтого	 =Окр(Стр.КНЧ/?(Стр.КЧ<>0,Стр.КЧ,1),2);
			ЯчейкаНижнегоПравогоУгла.Параметры.СД_СГЧИтого=Окр(Стр.СГЧ/КДП,2);
			
		Иначе
			ЯчейкаНижнегоПравогоУгла=Мак.ПолучитьОбласть("ИтогоКратко|Итоги");
			ЯчейкаНижнегоПравогоУгла.Параметры.ВыручкаИтого	 = Стр.Выручка ;
			ЯчейкаНижнегоПравогоУгла.Параметры.СД_ВыручкаИтого = Окр(Стр.Выручка/КДП,2);

		КонецЕсли; 
		
	КонецЦикла;
	 
	Попытка
		Таб.Присоединить(ЯчейкаНижнегоПравогоУгла);
	Исключение
	КонецПопытки;
	
	//---------------<Добавим пропавшие бесследно аптеки>---------------------------// GtG // 08.01.2016 14:24:09
	// Они как бы работают но никакой информации о них нет. Может быть у них с начала месяца нет интернета,
	// а может они уже закрыты , а галка не проставлена и выручки в начале месяца нет...
	
	
	
	
	
	
	
	
	
	
	//---------------<>---------------------------// GtG // 08.01.2016 14:24:15

	//
	//
	//ИТ=Мак.ПолучитьОбласть("ИтогоПодробно");
	//
	//Если ДнейВМесяце<31 Тогда
	//	Для Ы=ДнейВМесяце+1 по 31 цикл
	//		ИТ.Области["ИП"+Ы].ЦветФона=НетДня;
	//	КонецЦикла; 	
	//КонецЕсли;	
	//
	//ИтогиПоДням.Сортировать("День");
	//
	//ДЛя Каждого Стр Из ИтогиПоДням Цикл
	//	ИТ.Параметры["Выручка"+Стр.День]=Стр.Выручка;
	//	
	//	
	//		ИТ.Параметры["ССП"+Стр.День]=Окр(?(Стр.КЧ<>0,Стр.Выручка/Стр.КЧ,0),2);
	//		ИТ.Параметры["СГЧ"+Стр.День]=Окр(?(Стр.КЧ<>0,Стр.КНЧ/Стр.КЧ,0),2);
	//		ИТ.Параметры["КЧ"+Стр.День]=Стр.КЧ;
	//	
	//КонецЦикла;	
	//
	//ИтогиПоДням.Свернуть("","Выручка,КЧ,КНЧ" );// угол таблицы
	//
	//ДЛя Каждого Стр Из ИтогиПоДням Цикл
	//	ИТ.Параметры["ВыручкаИтого"]=Стр.Выручка;
	//	
	//				ИТ.Параметры["ССПИтого"]=Окр(?(Стр.КЧ<>0,Стр.Выручка/Стр.КЧ,0),2);
	//		ИТ.Параметры["СГЧИтого"]=Окр(?(Стр.КЧ<>0,Стр.КНЧ/Стр.КЧ,0),2);
	//		ИТ.Параметры["КЧИтого"]=Стр.КЧ;
	//	
	//КонецЦикла;	

	//
	//
	//
	//
	//Таб.Вывести(Ит);

	
	
	
	Возврат Таб;
	
	
КонецФункции	


Функция МО_Форма_2() Экспорт
	
	Таб=Новый ТабличныйДокумент;
	
	Построитель.Параметры.Вставить("период1",НачалоДня(НачПериода1));
	Построитель.Параметры.Вставить("период2",конецдня(Фрорма2По));

	//Построитель.Параметры.Вставить("период2",Конецмесяца(Месяц));
	Построитель.Параметры.Вставить("ТипыМХ_Розн",Перечисления.ТипыМХ.Розн);
	
	//ДнейВМесяце=День(КонецМесяца(Месяц));
	
	Мак=ЭтотОбъект.ПолучитьМакет("Форма_2");
	
	Секция=Мак.ПолучитьОбласть("СуперЗаг");
	Таб.Вывести(Секция);
		
	Построитель.Выполнить();
	//
	РезПостроителя=Построитель.Результат;

	
	
	КДП=КолвоДнейПериода(НачПериода1,КонПериода1);

	
	ТабДат=Новый ТабличныйДокумент();
	
	ОбЗагДат= Мак.ПолучитьОбласть("ШапкаМес|Даты");
	
	ТабДат.Вывести(ОбЗагДат);
	
	Для Ы=0 По КДП Цикл
		ОбДата=Мак.ПолучитьОбласть("Дата|Даты");
		ОбДата.Параметры.Дата1=НачПериода1+(24*60*60)*Ы;
		ТабДат.Вывести(ОбДата);
	КонецЦикла;	
	ОбИтоговДат=Мак.ПолучитьОбласть("Итого|Даты");
	ТабДат.Вывести(ОбИтоговДат);
	
	//ОблДатМес=Мак.ПолучитьОбласть("СтрМесяц|Даты");
	//Для Ы=1 по ДнейВМесяце цикл
	//	ОблДатМес.Параметры["Дата"+Ы]=Дата(Год(Месяц),Месяц(Месяц),Ы);
	//КонецЦикла;
	//
	
	Разд=Мак.ПолучитьОбласть("Разделитель");
	Таб.Вывести(Разд);
	
	ВыбОбщиеитоги=РезПостроителя.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыбОбщиеитоги.Следующий() Цикл
		
		ВыбСклад=ВыбОбщиеитоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		
		Х=0;
		У=0;
		Пока ВыбСклад.Следующий() Цикл
			
			Х=Х+1;
			
			Если Х=1 Или Х=7 Тогда
				Х=1;
				// Выводим колонку дат месяца
				Таб.Вывести(Разд);

				ОблЯч=Таб.Присоединить(ТабДат);
				//Сообщить(""+ОблЯч.Верх+"  "+ОблЯч.Право);
						
				У=У+1;
				//Если У%2=0 Тогда
				//	Таб.ВывестиГоризонтальныйРазделительСтраниц();
				//КонецЕсли; 
				
			КонецЕсли;	
			
			
			
			ВыручкаПоСкладу=0;
			КЧПоСкладу=0;
			КНЧПоСкладу=0;
			РабДней=0;
			
			СтрСклад=Новый ТабличныйДокумент;
			ЗагСклад=Мак.ПолучитьОбласть("Шапкамес|Аптека");
			
			ВыбДаты=ВыбСклад.Выбрать(ОбходРезультатаЗапроса.Прямой);
			ВыбДаты.Следующий();
			
			//СтрСклад.Параметры.Код	= ВыбДаты.СкладКод;
			ЗагСклад.Параметры.Номер=ВыбДаты.НомерАптеки;	
			ЗагСклад.Параметры.Аптека = ВыбДаты.НаименованиеПоКлассификатору;
			ЗагСклад.Параметры.категория= ВыбДаты.СортировкаДляФинОтдела;
			
			СтрСклад.Вывести(ЗагСклад);
			
			
			ВыбДаты.Сбросить(); // вернемся к первой дате выручки  НачальныйДеньВыручки
			
			ЯчСтрСклад=Мак.ПолучитьОбласть("Дата|Аптека");
			
			
			Для ЫЫ=0 По КДП Цикл
				
				ТекДата=НачПериода1+(24*60*60)*ЫЫ;

				
				
				СтруктураПоиска=Новый Структура("МесМес,ДеньМес",Месяц(ТекДата),День(ТекДата));
				Если  ВыбДаты.НайтиСледующий(СтруктураПоиска)=Истина ТОгда
					
					
					ССП=?(Число(ВыбДаты.КолвоЧеков)<>0,ВыбДаты.СуммаВыручки/ВыбДаты.КолвоЧеков,0);
					
					ЯчСтрСклад.Параметры.Выручка1  =	?(ВыбДаты.СуммаВыручки<>0,ВыбДаты.СуммаВыручки,""); // забиваем нули пробелами
					ЯчСтрСклад.Параметры.ССП1 	  = ?(ССП<>0,ССП,""); // забиваем нули пробелами
					ЯчСтрСклад.Параметры.Колво1  = ?(ВыбДаты.КолвоЧеков<>0,ВыбДаты.КолвоЧеков,""); // забиваем нули пробелами
					
					ВыручкаПоСкладу=ВыручкаПоСкладу+ВыбДаты.СуммаВыручки;
					КЧПоСкладу=КЧПоСкладу+ВыбДаты.КолвоЧеков;
					
					Если  ВыбДаты.СуммаВыручки <>0 Тогда
						РабДней=РабДней+1;
					КонецЕсли; 	
					СтрСклад.Вывести(ЯчСтрСклад);
				Иначе
					//Сообщить("--");
					ЯчСтрСклад=Мак.ПолучитьОбласть("Дата|Аптека");
					СтрСклад.Вывести(ЯчСтрСклад);
				КонецЕсли;
				
			КонецЦикла;
			
			ЯчИтоговСклад=Мак.ПолучитьОбласть("Итого|Аптека");


			ЯчИтоговСклад.Параметры.ИтВыручкаА	= ВыручкаПоСкладу;	
			ЯчИтоговСклад.Параметры.СрВыручкаА	= ?(РабДней<>0,ВыручкаПоСкладу/РабДней,"");
			ЯчИтоговСклад.Параметры.ИтССПА	    = ?(КЧПоСкладу<>0,ВыручкаПоСкладу/КЧПоСкладу,"");
			ЯчИтоговСклад.Параметры.СрКолвоА   = ?(РабДней<>0,КЧПоСкладу/РабДней,"");
			
			СтрСклад.Вывести( ЯчИтоговСклад );
			
			
			Таб.Присоединить(СтрСклад);	 
		КонецЦикла;	
		
		
		
	КонецЦикла;
	
	
	
	
	
	Возврат Таб;
	
	
	
	
	
	
	
	
КонецФункции	


Построитель.Текст= "ВЫБРАТЬ
                   |	МЕСЯЦ(ОТЧ_ОтчетПоВыручке.Период) КАК МесМес,
                   |	ДЕНЬ(ОТЧ_ОтчетПоВыручке.Период) КАК ДеньМес,
                   |	СУММА(ВЫБОР
                   |			КОГДА ОТЧ_ОтчетПоВыручке.Регистратор ССЫЛКА Документ.УЗ_РеализацияККМ
                   |				ТОГДА 0
                   |			ИНАЧЕ 1
                   |		КОНЕЦ) КАК ЕстьСмены,
                   |	СУММА(ОТЧ_ОтчетПоВыручке.СуммаВыручки) КАК СуммаВыручки,
                   |	СУММА(ОТЧ_ОтчетПоВыручке.КоличествоНаименованийВЧеке) КАК КоличествоНаименованийВЧеке,
                   |	СУММА(ОТЧ_ОтчетПоВыручке.КолвоЧеков) КАК КолвоЧеков,
                   |	ОТЧ_ОтчетПоВыручке.СкладКод КАК СкладКод,
                   |	ОТЧ_ОтчетПоВыручке.Выходной, Максимум(ОТЧ_ОтчетПоВыручке.Регистратор.ПризнакКорректности) как ПризнакКорректности
                   |ПОМЕСТИТЬ Выборка
                   |ИЗ
                   |	РегистрНакопления.ОТЧ_ОтчетПоВыручке КАК ОТЧ_ОтчетПоВыручке
                   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
                   |		ПО ОТЧ_ОтчетПоВыручке.СкладКод = МестаХранения.Код
                   |ГДЕ
                   |	ОТЧ_ОтчетПоВыручке.Период МЕЖДУ &Период1 И &Период2
                   |{ГДЕ
                   |	ОТЧ_ОтчетПоВыручке.СкладКод КАК Склад_код,
                   |	ОТЧ_ОтчетПоВыручке.ФирмаКод КАК Фирма_код,
                   |	МестаХранения.Ссылка.* КАК Аптека}
                   |
                   |СГРУППИРОВАТЬ ПО
                   |	ОТЧ_ОтчетПоВыручке.СкладКод,
                   |	ОТЧ_ОтчетПоВыручке.Выходной,
                   |	ДЕНЬ(ОТЧ_ОтчетПоВыручке.Период),
                   |	МЕСЯЦ(ОТЧ_ОтчетПоВыручке.Период)
                   |
                   |ИНДЕКСИРОВАТЬ ПО
                   |	СкладКод
                   |;
                   |
                   |////////////////////////////////////////////////////////////////////////////////
                   |ВЫБРАТЬ
                   |	МестаХранения.Код КАК Код,
                   |	МестаХранения.НомерАптеки,
                   |	МестаХранения.Наименование,
                   |	МестаХранения.ДатаПерехода,
                   |	МестаХранения.ДатаЗакрытия,
                   |	ЛОЖЬ КАК ЕстьХотьКакаяНибудьВыручка,
                   |	МестаХранения.Ссылка
                   |ПОМЕСТИТЬ СписокВсехАптек
                   |ИЗ
                   |	Справочник.МестаХранения КАК МестаХранения
                   |ГДЕ
                   |	(МестаХранения.ЭтоГруппа = ЛОЖЬ
                   |				И (МестаХранения.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
                   |					ИЛИ МестаХранения.ДатаЗакрытия > &Период1)
                   |				И НЕ(МестаХранения.ДатаПерехода = ДАТАВРЕМЯ(1, 1, 1)
                   |						ИЛИ МестаХранения.ДатаПерехода > &Период2)
                   |				И МестаХранения.ПометкаУдаления = ЛОЖЬ
                   |				И ЕСТЬNULL(МестаХранения.СторонаДоговораКомиссии.Порядок, 0) <> 1
                   |				И МестаХранения.ТипСклада = &ТипыМХ_Розн
                   |				И НЕ МестаХранения.Наименование ПОДОБНО ""РЦ ГИПЕР%""
                   |				И НЕ МестаХранения.Наименование ПОДОБНО ""%Склад%""
                   |			ИЛИ МестаХранения.Код В
                   |				(ВЫБРАТЬ РАЗЛИЧНЫЕ
                   |					выб.СкладКод
                   |				ИЗ
                   |					выборка КАК выб))
                   |{ГДЕ
                   |	МестаХранения.Код КАК Склад_код,
                   |	МестаХранения.Фирма.Код КАК Фирма_код,
                   |	МестаХранения.Ссылка.* КАК Аптека}
                   |;
                   |
                   |////////////////////////////////////////////////////////////////////////////////
                   |ВЫБРАТЬ
                   |	ЕСТЬNULL(Выборка.ДеньМес, 0) КАК ДеньМес,
                   |	ЕСТЬNULL(Выборка.МесМес, 0) КАК МесМес,
                   |	ЕСТЬNULL(Выборка.ЕстьСмены, 1) КАК ЕстьСмены,
                   |	СУММА(ЕСТЬNULL(Выборка.СуммаВыручки, 0)) КАК СуммаВыручки,
                   |	СУММА(ЕСТЬNULL(Выборка.КоличествоНаименованийВЧеке, 0)) КАК КоличествоНаименованийВЧеке,
                   |	СУММА(ЕСТЬNULL(Выборка.КолвоЧеков, 0)) КАК КолвоЧеков,
                   |	ЕСТЬNULL(ЕСТЬNULL(Выборка.СкладКод, МестаХранения.Код), Спр_МестаХранения.Код) КАК СкладКод,
                   |	ЕСТЬNULL(МестаХранения.НомерАптеки, МестаХранения_удаленныеНОвошедшиевотчет.НомерАптеки) КАК НомерАптеки,
                   |	ЕСТЬNULL(МестаХранения.Наименование, МестаХранения_удаленныеНОвошедшиевотчет.Наименование) КАК Наименование,
                   |	ЕСТЬNULL(ЕСТЬNULL(МестаХранения.ДатаПерехода, ЕСТЬNULL(МестаХранения_удаленныеНОвошедшиевотчет.ДатаПерехода, Спр_МестаХранения.ДатаПерехода)), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОткрытия,
                   |	ЕСТЬNULL(ЕСТЬNULL(МестаХранения.ДатаЗакрытия, ЕСТЬNULL(МестаХранения_удаленныеНОвошедшиевотчет.ДатаЗакрытия, Спр_МестаХранения.ДатаЗакрытия)), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаЗакрытия,
                   |	ВЫБОР
                   |		КОГДА Выборка.ДеньМес ЕСТЬ NULL 
                   |			ТОГДА МестаХранения.ЕстьХотьКакаяНибудьВыручка
                   |		ИНАЧЕ ИСТИНА
                   |	КОНЕЦ КАК ЕстьХотьКакаяНибудьВыручка,
                   |	ЕСТЬNULL(Выборка.Выходной, ЛОЖЬ) КАК Выходной,
                   |	ЕСТЬNULL(ЕСТЬNULL(Спр_МестаХранения.Ссылка, МестаХранения_удаленныеНОвошедшиевотчет.Ссылка), МестаХранения.Ссылка) КАК Ссылка,
                   |	ЕСТЬNULL(ЕСТЬNULL(Спр_МестаХранения.СортировкаДляФинОтдела, МестаХранения_удаленныеНОвошедшиевотчет.СортировкаДляФинОтдела), МестаХранения.Ссылка.СортировкаДляФинОтдела) КАК СортировкаДляФинОтдела,
                   |	ЕСТЬNULL(ЕСТЬNULL(Спр_МестаХранения.НаименованиеПоКлассификатору, МестаХранения_удаленныеНОвошедшиевотчет.НаименованиеПоКлассификатору), МестаХранения.Наименование) КАК НаименованиеПоКлассификатору,
                   |	СУММА(ВЫБОР
                   |			КОГДА ЕСТЬNULL(Выборка.СуммаВыручки, 0) > 0
                   |				ТОГДА 1
                   |			ИНАЧЕ 0
                   |		КОНЕЦ) КАК ДнейРаботы , ПризнакКорректности
                   |ПОМЕСТИТЬ Сводная
                   |ИЗ
                   |	Выборка КАК Выборка
                   |		ПОЛНОЕ СОЕДИНЕНИЕ СписокВсехАптек КАК МестаХранения
                   |		ПО Выборка.СкладКод = МестаХранения.Код
                   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК Спр_МестаХранения
                   |		ПО Выборка.СкладКод = Спр_МестаХранения.Код
                   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения_удаленныеНОвошедшиевотчет
                   |		ПО Выборка.СкладКод = МестаХранения_удаленныеНОвошедшиевотчет.Код
                   |			И (МестаХранения_удаленныеНОвошедшиевотчет.ЭтоГруппа = ЛОЖЬ)
                   |			И (МестаХранения_удаленныеНОвошедшиевотчет.ПометкаУдаления = ИСТИНА)
                   |{ГДЕ
                   |	МестаХранения.Код КАК Склад_код,
                   |	МестаХранения.Ссылка.Фирма.Код КАК Фирма_код,
                   |	МестаХранения.Ссылка.* КАК Аптека}
                   |
                   |СГРУППИРОВАТЬ ПО
                   |	ЕСТЬNULL(Выборка.Выходной, ЛОЖЬ),
                   |	ЕСТЬNULL(Выборка.МесМес, 0),
                   |	ЕСТЬNULL(Выборка.ДеньМес, 0),
                   |	ЕСТЬNULL(Выборка.ЕстьСмены, 1),
                   |	ЕСТЬNULL(ЕСТЬNULL(Выборка.СкладКод, МестаХранения.Код), Спр_МестаХранения.Код),
                   |	ЕСТЬNULL(МестаХранения.НомерАптеки, МестаХранения_удаленныеНОвошедшиевотчет.НомерАптеки),
                   |	ЕСТЬNULL(МестаХранения.Наименование, МестаХранения_удаленныеНОвошедшиевотчет.Наименование),
                   |	ЕСТЬNULL(ЕСТЬNULL(МестаХранения.ДатаПерехода, ЕСТЬNULL(МестаХранения_удаленныеНОвошедшиевотчет.ДатаПерехода, Спр_МестаХранения.ДатаПерехода)), ДАТАВРЕМЯ(1, 1, 1)),
                   |	ЕСТЬNULL(ЕСТЬNULL(МестаХранения.ДатаЗакрытия, ЕСТЬNULL(МестаХранения_удаленныеНОвошедшиевотчет.ДатаЗакрытия, Спр_МестаХранения.ДатаЗакрытия)), ДАТАВРЕМЯ(1, 1, 1)),
                   |	ВЫБОР
                   |		КОГДА Выборка.ДеньМес ЕСТЬ NULL 
                   |			ТОГДА МестаХранения.ЕстьХотьКакаяНибудьВыручка
                   |		ИНАЧЕ ИСТИНА
                   |	КОНЕЦ,
                   |	ЕСТЬNULL(ЕСТЬNULL(Спр_МестаХранения.Ссылка, МестаХранения_удаленныеНОвошедшиевотчет.Ссылка), МестаХранения.Ссылка),
                   |	ЕСТЬNULL(ЕСТЬNULL(Спр_МестаХранения.НаименованиеПоКлассификатору, МестаХранения_удаленныеНОвошедшиевотчет.НаименованиеПоКлассификатору), МестаХранения.Наименование),
                   |	ЕСТЬNULL(ЕСТЬNULL(Спр_МестаХранения.СортировкаДляФинОтдела, МестаХранения_удаленныеНОвошедшиевотчет.СортировкаДляФинОтдела), МестаХранения.Ссылка.СортировкаДляФинОтдела),
				   |	ПризнакКорректности
                   |;
                   |
                   |////////////////////////////////////////////////////////////////////////////////
                   |УНИЧТОЖИТЬ Выборка
                   |;
                   |
                   |////////////////////////////////////////////////////////////////////////////////
                   |УНИЧТОЖИТЬ СписокВсехАптек
                   |;
                   |
                   |////////////////////////////////////////////////////////////////////////////////
                   |ВЫБРАТЬ
                   |	Сводная.ДеньМес КАК ДеньМес,
                   |	Сводная.МесМес КАК МесМес,
                   |	Сводная.ЕстьСмены,
                   |	Сводная.СуммаВыручки КАК СуммаВыручки,
                   |	Сводная.КоличествоНаименованийВЧеке КАК КоличествоНаименованийВЧеке,
                   |	Сводная.КолвоЧеков КАК КолвоЧеков,
                   |	Сводная.СкладКод КАК СкладКод,
                   |	Сводная.НомерАптеки,
                   |	Сводная.Наименование,
                   |	Сводная.ДатаОткрытия,
                   |	Сводная.ДатаЗакрытия,
                   |	Сводная.ЕстьХотьКакаяНибудьВыручка,
                   |	Сводная.Выходной,
                   |	Сводная.Ссылка,
                   |	Сводная.СортировкаДляФинОтдела,
                   |	Сводная.НаименованиеПоКлассификатору КАК НаименованиеПоКлассификатору,
                   |	Сводная.ДнейРаботы КАК ДнейРаботы,
				   |	Сводная.ПризнакКорректности
                   |ИЗ
                   |	Сводная КАК Сводная
                   |{ГДЕ
                   |	Сводная.СкладКод КАК Склад_код,
                   |	Сводная.Ссылка.Фирма.Код КАК Фирма_код,
                   |	Сводная.СортировкаДляФинОтдела.*,
                   |	Сводная.Ссылка.* КАК Аптека}
                   |
                   |УПОРЯДОЧИТЬ ПО
                   |	Сводная.СортировкаДляФинОтдела.Наименование,
                   |	НаименованиеПоКлассификатору,
                   |	МесМес,
                   |	ДеньМес
                   |{УПОРЯДОЧИТЬ ПО
                   |	Сводная.СортировкаДляФинОтдела.Наименование КАК СортировкаДляФинОтдела,
                   |	НаименованиеПоКлассификатору}
                   |ИТОГИ
                   |	СУММА(СуммаВыручки),
                   |	СУММА(КоличествоНаименованийВЧеке),
                   |	СУММА(КолвоЧеков),
                   |	СУММА(ДнейРаботы)
                   |ПО
                   |	ОБЩИЕ,
                   |	СкладКод"; // Сгенерировано в GtG's Консоль запросов. 02.02.2016 22:26:41









//Построитель_старыйТекст="ВЫБРАТЬ
//                  |	ДЕНЬ(ОТЧ_ОтчетПоВыручке.Период) КАК ДеньМес,
//                  |	СУММА(ВЫБОР
//                  |			КОГДА ОТЧ_ОтчетПоВыручке.Регистратор ССЫЛКА Документ.УЗ_РеализацияККМ
//                  |				ТОГДА 0
//                  |			ИНАЧЕ 1
//                  |		КОНЕЦ) КАК ЕстьСмены,
//                  |	СУММА(ОТЧ_ОтчетПоВыручке.СуммаВыручки) КАК СуммаВыручки,
//                  |	СУММА(ОТЧ_ОтчетПоВыручке.КоличествоНаименованийВЧеке) КАК КоличествоНаименованийВЧеке,
//                  |	СУММА(ОТЧ_ОтчетПоВыручке.КолвоЧеков) КАК КолвоЧеков,
//                  |	ОТЧ_ОтчетПоВыручке.СкладКод КАК СкладКод,
//                  |	ОТЧ_ОтчетПоВыручке.Выходной
//                  |ПОМЕСТИТЬ Выборка
//                  |ИЗ
//                  |	РегистрНакопления.ОТЧ_ОтчетПоВыручке КАК ОТЧ_ОтчетПоВыручке
//                  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
//                  |		ПО ОТЧ_ОтчетПоВыручке.СкладКод = МестаХранения.Код
//                  |ГДЕ
//                  |	ОТЧ_ОтчетПоВыручке.Период МЕЖДУ &Период1 И &Период2
//                  |{ГДЕ
//                  |	ОТЧ_ОтчетПоВыручке.СкладКод КАК Склад_код,
//                  |	ОТЧ_ОтчетПоВыручке.ФирмаКод КАК Фирма_код,
//                  |	МестаХранения.Ссылка.* КАК Аптека}
//                  |
//                  |СГРУППИРОВАТЬ ПО
//                  |	ДЕНЬ(ОТЧ_ОтчетПоВыручке.Период),
//                  |	ОТЧ_ОтчетПоВыручке.СкладКод,
//                  |	ОТЧ_ОтчетПоВыручке.Выходной
//                  |
//                  |ИНДЕКСИРОВАТЬ ПО
//                  |	СкладКод
//                  |;
//                  |
//                  |////////////////////////////////////////////////////////////////////////////////
//                  |ВЫБРАТЬ
//                  |	МестаХранения.Код КАК Код,
//                  |	МестаХранения.НомерАптеки,
//                  |	МестаХранения.Наименование,
//                  |	МестаХранения.ДатаПерехода,
//                  |	МестаХранения.ДатаЗакрытия,
//                  |	ЛОЖЬ КАК ЕстьХотьКакаяНибудьВыручка
//                  |ПОМЕСТИТЬ СписокВсехАптек
//                  |ИЗ
//                  |	Справочник.МестаХранения КАК МестаХранения
//                  |ГДЕ
//                  |	МестаХранения.ЭтоГруппа = ЛОЖЬ
//                  |	И (МестаХранения.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
//                  |			ИЛИ МестаХранения.ДатаЗакрытия > &Период1)
//                  |	И НЕ(МестаХранения.ДатаПерехода = ДАТАВРЕМЯ(1, 1, 1)
//                  |				ИЛИ МестаХранения.ДатаПерехода > &Период2)
//                  |	И МестаХранения.ПометкаУдаления = ЛОЖЬ
//                  |	И ЕСТЬNULL(МестаХранения.СторонаДоговораКомиссии.Порядок, 0) <> 1
//                  |	И МестаХранения.ТипСклада = &ТипыМХ_Розн
//                  |	И НЕ МестаХранения.Наименование ПОДОБНО ""РЦ ГИПЕР%""
//                  |	И НЕ МестаХранения.Наименование ПОДОБНО ""%Склад%""
//                  |{ГДЕ
//                  |	МестаХранения.Код КАК Склад_код,
//                  |	МестаХранения.Фирма.Код КАК Фирма_код,
//                  |	МестаХранения.Ссылка.* КАК Аптека}
//                  |;
//                  |
//                  |////////////////////////////////////////////////////////////////////////////////
//                  |ВЫБРАТЬ
//                  |	ЕСТЬNULL(Выборка.ДеньМес, 1) КАК ДеньМес,
//                  |	ЕСТЬNULL(Выборка.ЕстьСмены, 1) КАК ЕстьСмены,
//                  |	ЕСТЬNULL(Выборка.СуммаВыручки, 0) КАК СуммаВыручки,
//                  |	ЕСТЬNULL(Выборка.КоличествоНаименованийВЧеке, 0) КАК КоличествоНаименованийВЧеке,
//                  |	ЕСТЬNULL(Выборка.КолвоЧеков, 0) КАК КолвоЧеков,
//                  |	ЕСТЬNULL(Выборка.СкладКод, МестаХранения.Код) КАК СкладКод,
//                  |	ЕСТЬNULL(МестаХранения.НомерАптеки, МестаХранения_удаленныеНОвошедшиевотчет.НомерАптеки) КАК НомерАптеки,
//                  |	ЕСТЬNULL(МестаХранения.Наименование, МестаХранения_удаленныеНОвошедшиевотчет.Наименование) КАК Наименование,
//                  |	ЕСТЬNULL(МестаХранения.ДатаПерехода, ЕСТЬNULL(МестаХранения_удаленныеНОвошедшиевотчет.ДатаПерехода, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаОткрытия,
//                  |	ЕСТЬNULL(МестаХранения.ДатаЗакрытия, ЕСТЬNULL(МестаХранения_удаленныеНОвошедшиевотчет.ДатаЗакрытия, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаЗакрытия,
//                  |	ВЫБОР
//                  |		КОГДА Выборка.ДеньМес ЕСТЬ NULL 
//                  |			ТОГДА МестаХранения.ЕстьХотьКакаяНибудьВыручка
//                  |		ИНАЧЕ ИСТИНА
//                  |	КОНЕЦ КАК ЕстьХотьКакаяНибудьВыручка,
//                  |	Выборка.Выходной КАК Выходной,
//                  |	ЕСТЬNULL(Спр_МестаХранения.Ссылка, МестаХранения_удаленныеНОвошедшиевотчет.Ссылка) КАК Ссылка,
//                  |	ЕСТЬNULL(Спр_МестаХранения.СортировкаДляФинОтдела, МестаХранения_удаленныеНОвошедшиевотчет.СортировкаДляФинОтдела) КАК СортировкаДляФинОтдела,
//                  |	ЕСТЬNULL(Спр_МестаХранения.НаименованиеПоКлассификатору, МестаХранения_удаленныеНОвошедшиевотчет.НаименованиеПоКлассификатору) КАК НаименованиеПоКлассификатору
//                  |ИЗ
//                  |	Выборка КАК Выборка
//                  |		ПОЛНОЕ СОЕДИНЕНИЕ СписокВсехАптек КАК МестаХранения
//                  |		ПО Выборка.СкладКод = МестаХранения.Код
//                  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК Спр_МестаХранения
//                  |		ПО Выборка.СкладКод = Спр_МестаХранения.Код
//                  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения_удаленныеНОвошедшиевотчет
//                  |		ПО Выборка.СкладКод = МестаХранения_удаленныеНОвошедшиевотчет.Код
//                  |			И (МестаХранения_удаленныеНОвошедшиевотчет.ЭтоГруппа = ЛОЖЬ)
//                  |			И (МестаХранения_удаленныеНОвошедшиевотчет.ПометкаУдаления = ИСТИНА)
//                  |
//                  |УПОРЯДОЧИТЬ ПО
//                  |	СкладКод,
//                  |	ДеньМес
//                  |{УПОРЯДОЧИТЬ ПО
//                  |	СкладКод,
//                  |	НомерАптеки,
//                  |	Наименование,
//                  |	Спр_МестаХранения.НаименованиеПоКлассификатору,
//                  |	Спр_МестаХранения.Бренд,
//                  |	Спр_МестаХранения.СортировкаДляФинОтдела.*,
//                  |	Спр_МестаХранения.ДатаПерехода КАК Дата_Открытия,
//                  |	Спр_МестаХранения.ДатаЗакрытия КАК Дата_Закрытия}
//                  |ИТОГИ
//                  |	СУММА(СуммаВыручки),
//                  |	СУММА(КоличествоНаименованийВЧеке),
//                  |	СУММА(КолвоЧеков)
//                  |ПО
//                  |	ОБЩИЕ,
//                  |	СкладКод";