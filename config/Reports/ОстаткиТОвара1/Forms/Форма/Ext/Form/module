


Процедура ОсновныеДействияФормыСформировать_попартиям(Кнопка)
	
	Таб = ЭлементыФормы.Таб;	
	//------------------<определить нужно ли выводить по регионам>-------------------GtG----10.01.2008
	СписокНужныхРегионов= Новый СписокЗначений;
	
	Для каждого Стр из СписокРегионов Цикл
		Если Стр.Пометка=Истина ТОгда
			СписокНужныхРегионов.Добавить(Стр.Значение);
		КонецЕсли; 	
	КонецЦикла;	
	
	ВыводитьРегионы=Ложь;
	
	Если СписокНужныхРегионов.Количество()>0 ТОгда
		ВыводитьРегионы=Истина;
	КонецЕсли; 	
	//--------------------------------------------------------GtG----КОНЕЦ--10.01.2008
	
	
	
	
	
	ПостроительОтчета.Выполнить();
	
	
	Состояние("Получаем остатки товаров...");
	ТЗ=ПостроительОтчета.Результат.Выгрузить();
	
	
	
	Таб.Очистить();//Новый ТабличныйДокумент;                                                                 
	МАк=ЭтотОбъект.ПолучитьМакет("ОстаткиТОвара");
	ДатаВремяФормирования=ТекущаяДата();
	
	Склад=ПостроительОтчета.Отбор.Найти("Склад").Значение;
	Дата=ПостроительОтчета.Отбор.Найти("Дата").Значение;
	
	
	
	Секция=Мак.ПолучитьОбласть("Шапка");
	Секция.Параметры.ДатаОтчета = Формат(Дата,"ДФ=dd.MM.yyyy");
	Секция.Параметры.ДатаВремяФормирования=ДатаВремяФормирования;
	Таб.Вывести(Секция);
	
	Секция=Мак.ПолучитьОбласть("Склад|БезРег");
	Секция.Параметры.ИмяСклада = Склад;
	Таб.Вывести(Секция);
	
	ЕСли ВыводитьРегионы=Истина ТОгда
		Для каждого Стр из СписокНужныхРегионов Цикл
			Секция=Мак.ПолучитьОбласть("Склад|Рег");
			Секция.Параметры.Регион = Стр.Значение;
			Таб.Присоединить(Секция);
		КонецЦикла;	
		
		Состояние("Получаем цены по регионам...");
		ТХТ="ВЫБРАТЬ
		|	ЦеныСрезПоследних.АП,
		|	ЦеныСрезПоследних.РЕГИОН,
		|	ЦеныСрезПоследних.ЦенаРознГТТ,
		|	ЦеныСрезПоследних.Партия
		|ИЗ
		|	РегистрСведений.Цены.СрезПоследних КАК ЦеныСрезПоследних
		|ГДЕ
		|	ЦеныСрезПоследних.Партия.Ссылка В(&СписокПартий)
		|	И ЦеныСрезПоследних.РЕГИОН.Ссылка В(&СписокРегионов)";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("СписокПартий",ТЗ.ВыгрузитьКолонку("Партия"));
		Запрос.УстановитьПараметр("СписокРегионов",СписокНужныхРегионов.ВыгрузитьЗначения());
		
		ТЗЦен=Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	
	Таб.ФиксацияСверху =4;
	Таб.ФиксацияСлева=6;
	
	
	//------------------<Таблица для расчета итогов по РЦ региона>-------------------GtG----10.01.2008
	ТЗИТР= Новый ТаблицаЗначений;
	ТЗИТР.Колонки.Добавить("Регион");
	ТЗИТР.Колонки.Добавить("Сумма");
	ТЗИТР.Колонки.Добавить("НДС");

	//------------------<>-------------------GtG----10.01.2008
	
	
	
	
	Состояние("Выводим таблицу товара...");
	Х=0;
	
	
	
	НН=0;
	
	Для каждого Стр из ТЗ Цикл
		Х=Х+1;
		
		НН=НН+1;
		Если Х%250=0 тогда
			Состояние("Выводим таблицу товара..."+Х);
		КонецЕсли;	 
		
		
		
			
		
		
		Секция=Мак.ПолучитьОбласть("Товар|БЕзРег");
		//Секция.Параметры.ДатаОтчета = Формат(ФВыбДата,"ДФ=dd.MM.yyyy");
		
		Секция.Параметры.КОД	=    Стр.Код              ;
		Секция.Параметры.ИмяТовара  =  Стр.ИмяТовара           ;
		Секция.Параметры.Партия	 =  Стр.Партия           ;
		Секция.Параметры.Серия	     =  Стр.Серия  ;
		Секция.Параметры.ЕДИзм	     =  Стр.ИмяЕИТ ;
		Секция.Параметры.СГ	     =  Стр.СрокГодности           ;
		Секция.Параметры.СуммаЗакупСНДСОстаток	= стр.СуммаЗакуп ;
		Секция.Параметры.СуммаРознСНДСОстаток	=  стр.СуммаРозн;
		Секция.Параметры.Ставка                =  стр.СтавкаНДС;
		Секция.Параметры.Количество=Стр.Остаток;
		Секция.Параметры.НН=НН;
		
		Если Стр.Остаток = 0 Тогда
			Секция.Параметры.ЦенаЗАкуп = 0; //Стр.Партия.ЦенаЗакуп;
			Секция.Параметры.ЦенаРозн =0;
		Иначе
			Попытка
				Секция.Параметры.ЦенаЗАкуп	= Окр(стр.СуммаЗакуп/Стр.Остаток,2);
				 Секция.Параметры.ЦенаРозн   = Окр(стр.СуммаРозн/Стр.Остаток,2);
			Исключение
				Сообщить("У товара " + стр.Партия.Владелец + " не указана ед. по умолчанию. Код товара = " +  стр.Партия.Владелец.Код);
			КонецПопытки;
					КонецЕсли;
		Таб.Вывести(Секция);
		
		Если ВыводитьРегионы=Истина ТОгда
			// найдем все цены по партии
			ЦеныПартии=ТЗЦен.НайтиСтроки( Новый Структура("Партия",Стр.Партия));
			Для каждого СР из СписокНужныхРегионов Цикл
				
				РЦРег=0;
				РСРег=0;
				
				Для каждого СЦП из ЦеныПартии Цикл
					Если СЦП.Регион=СР.Значение ТОгда
						РЦРег= СЦП.ЦенаРознГТТ*Стр.кеит;
						РСРег= Стр.Остаток*РЦРег;
						СтрТЗИТР=ТЗИТР.Добавить();
						СтрТЗИТР.Регион=СЦП.Регион;
						СтрТЗИТР.Сумма=РСРег;
						СтрТЗИТР.НДС=Стр.СуммаНДСРозн;

						
						Прервать;
					КонецЕсли;	
					
				КонецЦикла;	
				
				Если РЦРег>0  Тогда   
					ИСРег="Товар|Рег";
				Иначе
					ИСРег="ТоварК|Рег";
				КонецЕсли; 	
					
				Секция=Мак.ПолучитьОбласть(ИСРег);
				
				Секция.Параметры.РЦРег	= РЦРег;
				Секция.Параметры.РСРег  = РСРег;


				
				Таб.Присоединить(Секция);
				
			КонецЦикла;	
			
		КонецЕсли;	
		
		
		
		
		
		
		
		
	КонецЦикла;	
	Секция=Мак.ПолучитьОбласть("ИтогиС|БезРег"); 
	Секция.Параметры.ИтЗакуп	= ТЗ.Итог("СуммаЗакуп");
	Секция.Параметры.ИтРозн	= ТЗ.Итог("СуммаРозн");	
	Секция.Параметры.ИтЗакупНДС =ТЗ.Итог("СуммаНДСЗакуп");		
	Секция.Параметры.ИтРознНДС	=ТЗ.Итог("СуммаНДСРозн");
	
	
//	Секция.Параметры.НацРознБух = ОМ6_НаценкаОтЧегоЛибо(ТЗ.Итог("СуммаЗакуп")-ТЗ.Итог("СуммаНДСЗакуп"),ТЗ.Итог("СуммаРозн"));
	
	Таб.Вывести(Секция);
	
	//------------------<Регионы итоги>-------------------GtG----10.01.2008
	Если ВыводитьРегионы=Истина Тогда
		
		ТЗИТР.Свернуть("Регион","Сумма,НДС");
		
		
		
		Для каждого СР из СписокНужныхРегионов Цикл
			
			 СтрТЗИТР=ТЗИТР.Найти(СР.Значение,"Регион");
			 Если СтрТЗИТР<> Неопределено тогда
				 Сумма=СтрТЗИТР.Сумма;
				 ИтНдсРег=СтрТЗИТР.НДС;
			 Иначе
				 Сумма=0;
			КонецЕсли; 	
			
			Секция=Мак.ПолучитьОбласть("ИтогиС|Рег");
//			Секция.Параметры.НацРегБух	= ОМ6_НаценкаОтЧегоЛибо(ТЗ.Итог("СуммаЗакуп")-ТЗ.Итог("СуммаНДСЗакуп"),Сумма);
			Секция.Параметры.Сумма	= Сумма;  // только расцененного товара
			Секция.Параметры.ИтНдсРег=ИтНдсРег; // только расцененного товара
			Таб.Присоединить(Секция);
		КонецЦикла;	
	КонецЕсли; 	
	
	
	
	
	
	
	Таб.ОтображатьСетку=Ложь;
	Таб.ОтображатьЗаголовки=Ложь;
	Таб.ОтображатьГруппировки=Ложь;
	ТАб.ТолькоПросмотр=Истина;
	Таб.Показать("Остатки товара");
	
	//ТекущаяСтраница	(1);
	ЭтаФорма.Панель.ТекущаяСтраница=ЭтаФорма.Панель.Страницы.ОТЧЕТ;
	
	
	
	
	
КонецПроцедуры

Процедура ПриОткрытии()
	ОтборДата=ПостроительОтчета.Отбор.Добавить("Дата");
	ОтбоРДата.Значение=КонецДня(ТекущаяДата());
	ОтбоРДата.Использование=Истина;
	
	ОтборСклад=ПостроительОтчета.Отбор.Добавить("Склад");
	ОтборСклад.Значение=Константы.ОсновнойСклад.Получить();
	ОтборСклад.Использование=Истина;
	
	ОтборОстаток=ПостроительОтчета.Отбор.Добавить("Остаток");
	ОтборОстаток.Значение=0;
	ОтборОстаток.ВидСравнения=ВидСравнения.Больше;
	ОтборОстаток.Использование=Истина;
	
КонецПроцедуры

Процедура ТабличноеПоле1ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	//Если Элемент.ТекущаяСтрока.Имя="Дата" Тогда
	//	Элемент.ТекущаяСтрока.Значение=КонецДня(Элемент.ТекущаяСтрока.Значение);
	//КонецЕсли;
	
	
КонецПроцедуры

Процедура КоманднаяПанель1Действие(Кнопка)
	СписокРегионов.ЗаполнитьПометки(Истина);
КонецПроцедуры

Процедура КоманднаяПанель1Действие1(Кнопка)
	СписокРегионов.ЗаполнитьПометки(Ложь);

КонецПроцедуры

Процедура КоманднаяПанель1Действие2(Кнопка)
	
	Для каждого Стр из СписокРегионов Цикл
		Стр.Пометка=Не Стр.Пометка;
	КонецЦикла;		
	
КонецПроцедуры

Процедура ОбработкаАктивизацииОбъекта(АктивныйОбъект, Источник)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ТабОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	
	ДвиженияПартий=Отчеты.ДвижениеТовара1;
	ФД=ДвиженияПартий.ПолучитьФорму("Форма" , ЭтаФорма, Новый УникальныйИдентификатор);
	ФД.ЭлементыФормы.Найти("ВыбФирма").Значение=ПостроительОтчета.Отбор.Найти("Склад").Значение.Фирма;
	ФД.ЭлементыФормы.Найти("ВыбСклад").Значение=ПостроительОтчета.Отбор.Найти("Склад").Значение;
    ФД.ЭлементыФормы.Найти("ВыбТовар").Значение= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(Расшифровка);

	ФД.ЭлементыФормы.Найти("НачПер").Значение=НачалоДня(ПостроительОтчета.Отбор.Найти("Дата").Значение-60*24*60*60);
	ФД.ЭлементыФормы.Найти("КонПер").Значение=ПостроительОтчета.Отбор.Найти("Дата").Значение;
	
	ФД.Открыть();
	
КонецПроцедуры






ТХТ="ВЫБРАТЬ
    |	ПартииЖНВЛСОстатки.Партия.Наименование КАК Партия,
    |	ПартииЖНВЛСОстатки.КолвоОстаток / ПартииЖНВЛСОстатки.Товар.ЕдиницаПоУмолчанию.К КАК Остаток,
    |	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток КАК СуммаЗакуп,
    |	ПартииЖНВЛСОстатки.СуммаНДСЗакупОстаток КАК СуммаНДСЗакуп,
    |	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток КАК СуммаРозн,
    |	ПартииЖНВЛСОстатки.СуммаРознНДСОстаток КАК СуммаНДСРозн,
    |	ПартииЖНВЛСОстатки.Партия.Серия.Наименование КАК Серия,
    |	ПартииЖНВЛСОстатки.Партия.Серия.СрокГодности КАК СрокГодности,
    |	ПартииЖНВЛСОстатки.Партия.Серия.Сертификат.Наименование КАК Сертификат,
    |	ПартииЖНВЛСОстатки.Товар.Код КАК Код,
    |	ПартииЖНВЛСОстатки.СтавкаНДС.Наименование КАК СтавкаНДС,
    |	ПартииЖНВЛСОстатки.Товар.ЕдиницаПоУмолчанию.К КАК кеит,
    |	ПартииЖНВЛСОстатки.Товар.ЕдиницаПоУмолчанию.НаименованиеТовара КАК ИмяТовара,
    |	ПартииЖНВЛСОстатки.Товар.ЕдиницаПоУмолчанию.Наименование КАК ИмяЕИТ
    |{ВЫБРАТЬ
    |	Партия,
    |	Остаток,
    |	СуммаЗакуп КАК Сумма_Закуп,
    |	СуммаРозн КАК Сумма_Розн,
    |	Серия,
    |	СрокГодности КАК Срок_годности,
    |	Сертификат,
    |	Код,
    |	СтавкаНДС,
    |	кеит КАК Коэфф,
    |	ИмяТовара КАК Товар,
    |	ИмяЕИТ КАК Единица}
    |ИЗ
    |	РегистрНакопления.ПартииЖНВЛС.Остатки({(&Дата)}, {(Склад)}) КАК ПартииЖНВЛСОстатки
    |{ГДЕ
    |	ПартииЖНВЛСОстатки.Товар.*,
    |	ПартииЖНВЛСОстатки.СтавкаНДС,
    |	ПартииЖНВЛСОстатки.Партия.*,
    |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток,
    |	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток КАК СуммаЗакуп_С_НДС_Остаток,
    |	ПартииЖНВЛСОстатки.СуммаНДСЗакупОстаток КАК СуммаЗакупНДСОстаток,
    |	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток КАК СуммаРозн_С_НДС_Остаток,
    |	ПартииЖНВЛСОстатки.СуммаРознНДСОстаток}
    |
    |УПОРЯДОЧИТЬ ПО
    |	ИмяТовара";	

ПостроительОтчета.Текст=ТХТ;

ТХТ="ВЫБРАТЬ
|	Регионы.Ссылка
|ИЗ
|	Справочник.Регионы КАК Регионы";

Запрос=Новый Запрос;
Запрос.Текст=ТХТ;
СписокРегионов.ЗагрузитьЗначения( Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));	 
