Перем пер_Отказано;

Процедура УправлениеНадписямиКнопок()
	
	Если Согласован = Ложь Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Согласовать";
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Отмена согласования";
		ЭлементыФормы.Товар.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Проведен Тогда
		//ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнВыгрузить.Доступность = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Истина;
		//ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнВыгрузить.Доступность = Ложь;
	КонецЕсли;
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыОК.Доступность =  Истина; //Самсонов ENT-217
	
	Если СтатусСписания = Перечисления.СтатусыСписания.Аннулирован  
		или СтатусСписания = Перечисления.СтатусыСписания.Проведен 
		или СтатусДокАптеки = Перечисления.СтатусДокАптеки.Проведен
		или СтатусДокАптеки = Перечисления.СтатусДокАптеки.Аннулирован Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;	
	КонецЕсли;
	
	Если СтатусСписания = Перечисления.СтатусыСписания.Аннулирован  Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнАннулироватьДокумент.Доступность = Ложь;
	КонецЕсли;

	

КонецПроцедуры


Процедура ОсновныеДействияФормыОсновныеДействияФормыСохранить(Кнопка)
	
	Если Проведен = Истина Тогда
		Предупреждение("Документ НЕ сохранен. В проведенном документе пользуйтесь кнопкой <Провести>!");
		Возврат;
	КонецЕсли;
	
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Вы действительно хотите сохранить документ/изменения?",Режим,0);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнСогласования(Кнопка) 
	
	Если НЕ Проведен Тогда
		ПредыдущееЗначение = Согласован;
		Если НЕ Согласован Тогда
			
			// ENT-613
			// ==> 2018.12.27. Коробка
			Если СтатусСписания = Перечисления.СтатусыСписания.Аннулирован Тогда
			
				Предупреждение("Согласование отменено. См. описание в окне ошибок.",10);
				Сообщить("Ошибочно аннулированные документы должны быть созданы заново на стороне аптеки.");
				Возврат;
			
			КонецЕсли; 
			// <== 2018.12.27. Коробка
			
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Согласовать, выслать в аптеку документ?", Режим, 0); //Самсонов ENT-217
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли; 
			
			Согласован = Истина;
			СогласованПользователем = ПараметрыСеанса.ТекущийСотр;
			СтатусСписания = Перечисления.СтатусыСписания.Согласован;
			
		ИначеЕсли Согласован Тогда
			
			// ENT-613
			// ==> 2018.12.27. Коробка
			Предупреждение("Функция отмены согласования документов не проводится!");
			Возврат;
			// <== 2018.12.27. Коробка
			
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Отменить согласование?", Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли; 
			
			Согласован = Ложь;
			СтатусСписания = Перечисления.СтатусыСписания.СогласованиеОтменено;
			
		КонецЕсли;
		
		Попытка
			Записать(РежимЗаписиДокумента.Запись);
			Если Согласован Тогда
				ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Согласован",ПараметрыСеанса.ТекущийСотр,"Согласован офисом");
			Иначе
				ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Отмена согласования",ПараметрыСеанса.ТекущийСотр,"Отмена согласования офисом");
			КонецЕсли;
		Исключение
			Согласован = ПредыдущееЗначение;
		КонецПопытки;		
		
	КонецЕсли;
	
	
	// Выгрузка в аптеку
	Если ВыгрузитьВАптеку() = Истина Тогда
		Выгружен = Истина;
		//Самсонов ENT-217 
		СтатусСписания = Перечисления.СтатусыСписания.Согласован; 
		
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	УправлениеНадписямиКнопок();	
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УправлениеНадписямиКнопок();
	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект,СписокПечатныхФорм);
	СтатусСписанияПриОткрытии = СтатусСписания;
	
КонецПроцедуры

Процедура ТоварПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	 ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	 ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
	 
	 
	 Если (ИмяТекКол="Отказано") Тогда
		пер_Отказано = ТСД.Отказано;	 
	 КонецЕсли;
	
	
 КонецПроцедуры
 
Процедура ПересчетСтрокиДокумента  (ТекСтрД, ИмяКол,БезВопросов= ЛОЖЬ)
	
	Если ИмяКол = "Отказано" Тогда
		ТекСтрД.Количество				= ТекСтрД.Количество + пер_Отказано - ТекСтрД.Отказано;
		ТекСтрД.СуммаЗакупБезНДС		= ТекСтрД.Количество*ТекСтрД.ЦенаЗакупБезНДС;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТоварПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования = Истина Тогда
		Возврат;
	КонецЕсли;

	
	ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
	 
	 
	 Если ИмяТекКол="Отказано" Тогда
		 Если ТСД.Отказано > ТСД.Количество или ТСД.Отказано < 0 Тогда
		     //Предупреждение("Коэффициент может быть равен 1 или " + Формат(ТСД.КоэффициентРазбивки,"ЧГ=0"));
		     ТСД.Отказано = пер_Отказано;
		     Отказ = Истина;
		     Возврат;
		 КонецЕсли;
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнАннулироватьДокумент(Кнопка)
	
	ПредыдущийСтатус = СтатусСписания;
	
	// ENT-613
	// ==> 2018.12.27. Коробка
	Если Согласован Тогда
	
		Сообщить("Ошибочно согласованные документы должны быть аннулированы на стороне аптеки. Если аптекой документ уже проведен - необходимо оформить запрос в тех поддержку.");	
	    Предупреждение("Аннулирование документа не произошло! См. описание в окне ошибок.",10);
		Возврат;
		
	КонецЕсли; 
	// <== 2018.12.27. Коробка
			
	// ENT-849
	// ==> 2019.01.09. Коробка
	// Добавлено условия на "Аннулирован" и "Неопределено"	
	Если (СтатусДокАптеки = Перечисления.СтатусДокАптеки.КОбработкеОфисом или СтатусДокАптеки = Перечисления.СтатусДокАптеки.Аннулирован ИЛИ СтатусДокАптеки = Перечисления.СтатусДокАптеки.Неопределено) и НЕ Проведен Тогда
	// <== 2019.01.09. Коробка
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Аннулировать документ?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		ДокументАннулирован = Ложь;
		Попытка
			НачатьТранзакцию();
			СтатусСписания = Перечисления.СтатусыСписания.Аннулирован;
			
			Записать(РежимЗаписиДокумента.Запись);
			ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Аннулирование",ПараметрыСеанса.ТекущийСотр,"Аннулирование офисом");
			Если ВыгрузитьВАптеку() = Истина Тогда
				ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Выгружен в аптеку",ПараметрыСеанса.ТекущийСотр,"Выгружено изменение статуса в аптеку");
				ДокументАннулирован = Истина;
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			СтатусСписания = ПредыдущийСтатус;
			Сообщить("Ошибка аннулирования" + ОписаниеОшибки());
		КонецПопытки;
		Если ДокументАннулирован Тогда
			Предупреждение("Документ аннулирован!",10);
			ЭтаФорма.Закрыть();
		Иначе
			Предупреждение("Аннулирование документа не произошло!",10);	
			ЭтаФорма.Закрыть();
		КонецЕсли;
	Иначе
		Предупреждение("Документ может быть аннулирован только при наличии статуса аптеки <К обработке офисом>, <Аннулирован> или <Неопределено>");
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнВыгрузить(Кнопка)
	
	Если ВыгрузитьВАптеку() = Истина Тогда
		Выгружен = Истина;
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьИсторию()
	
	ИсторияИзменений.Очистить();
	
	ТЗИстории = ОбщегоНазначения.ПолучитьИсториюИзмененийДокумента(Ссылка);
	Если НЕ ТЗИстории = Неопределено Тогда
		ЭлементыФормы.ИсторияИзменений.Значение = ТЗИстории;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПанельШапкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элемент.ТекущаяСтраница = Элемент.Страницы.ИсторияОфиса Тогда
		ПоказатьИсторию();
	КонецЕсли;
	
КонецПроцедуры


Процедура КоманднаяПанельТоваракнДвижениеПоПартии(Кнопка)
	
	ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	
	Карточка=Отчеты.УЗ_ДвижениеТовара.Создать();
	
	Карточка.КодПартии=ТСД.КодПартии;
	Карточка.ВыбСклад=Склад;
	Карточка.ВыбТовар=ТСД.ТОвар;
	Карточка.ВыбФирма=Фирма;
	Карточка.НачПер=НачалоГода(Дата);
	Карточка.КонПер=Дата;
	
	Ф=Карточка.ПолучитьФорму("Форма");
	
	Ф.Открыть();
	
	
КонецПроцедуры


Процедура ТоварПередУдалением(Элемент, Отказ)
	
	Предупреждение("Удаление строк запрещено! Для отказа позиции в списании используйте колонку <Отказано>");
	Отказ = Истина;
	
	
КонецПроцедуры


Процедура КоманднаяПанель2кнПечать(Кнопка)
	ОМ10_КнопкаПечатьНажатие(ЭтотОбъект,ЭтаФорма);	
КонецПроцедуры


////////////////////////////////////////////////////////////
// ДОПОЛНИТЕЛЬНЫЕ ПОЛЯ

Процедура КоманднаяПанельТовараОтображатьДополнительныеПоля(Кнопка)
	
	ОтображатьДополнительныеПоля = Не ОтображатьДополнительныеПоля;
	
	Колонки = ЭлементыФормы.Товар.Колонки;
	Колонки.СрокГодности.Видимость				= ОтображатьДополнительныеПоля;
	Колонки.ДатаПоступления.Видимость			= ОтображатьДополнительныеПоля;
	Колонки.НомерПриходнойНакладной.Видимость	= ОтображатьДополнительныеПоля;
	Колонки.СТМ.Видимость						= ОтображатьДополнительныеПоля;
	Колонки.Госпитальный.Видимость				= ОтображатьДополнительныеПоля;
	
	ЭлементыФормы.КоманднаяПанельТовара.Кнопки.ОбновитьДополнительныеПоля.Доступность = ОтображатьДополнительныеПоля;
	
	Если ОтображатьДополнительныеПоля Тогда
		ОбновитьДанныеДополнительныхПолей();		
	КонецЕсли;	
	
	Кнопка.Пометка = ОтображатьДополнительныеПоля;
	
КонецПроцедуры

Процедура ТоварПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Если ОтображатьДополнительныеПоля Тогда
		
		Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			
			ТоварСсылка = ОформлениеСтроки.ДанныеСтроки.Товар;			
			Если ЗначениеЗаполнено(ТоварСсылка) Тогда				
				СвойстваТовара = ПолучитьСвойстваТовара(ТоварСсылка);
				
				Ячейка = ОформлениеСтроки.Ячейки.СТМ;
				Ячейка.ОтображатьФлажок = Истина;
				Ячейка.Текст = "";
				Ячейка.Флажок = СвойстваТовара.СТМ;				
				
				Ячейка = ОформлениеСтроки.Ячейки.Госпитальный;
				Ячейка.ОтображатьФлажок = Истина;
				Ячейка.Текст = "";
				Ячейка.Флажок = СвойстваТовара.Госпитальный;
				
			КонецЕсли;
			
			КодПартии = ОформлениеСтроки.ДанныеСтроки.КодПартии;			
			Если ЗначениеЗаполнено(КодПартии) Тогда				
				СвойстваПартии = ПолучитьСвойстваПартии(КодПартии);
				
				Ячейка = ОформлениеСтроки.Ячейки.СрокГодности;
				Ячейка.ОтображатьТекст = Истина;
				Ячейка.Текст = Формат(СвойстваПартии.СрокГодности, "ДФ=dd.MM.yyyy");
				
				Ячейка = ОформлениеСтроки.Ячейки.ДатаПоступления;
				Ячейка.ОтображатьТекст = Истина;
				Ячейка.Текст = Формат(СвойстваПартии.ДатаПоступления, "ДФ=dd.MM.yyyy");
				
				Ячейка = ОформлениеСтроки.Ячейки.НомерПриходнойНакладной;
				Ячейка.ОтображатьТекст = Истина;
				Ячейка.Текст = СвойстваПартии.НомерПриходнойНакладной;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСвойстваТовара(Товар)
	
	СтруктураСвойств = Новый Структура;
	СтруктураСвойств.Вставить("СТМ", Ложь);
	СтруктураСвойств.Вставить("Госпитальный", Ложь);
	
	НайденнаяСтрока = ТаблицаТоваров.Найти(Товар, "Ссылка");
	Если НайденнаяСтрока <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, НайденнаяСтрока);		
	КонецЕсли;	
	
	Возврат СтруктураСвойств;
	
КонецФункции

Функция ПолучитьСвойстваПартии(КодПартии)
	
	СтруктураСвойств = Новый Структура;
	СтруктураСвойств.Вставить("СрокГодности", Дата(1,1,1));
	СтруктураСвойств.Вставить("ДатаПоступления", Дата(1,1,1));
	СтруктураСвойств.Вставить("НомерПриходнойНакладной", "");
	
	НайденнаяСтрока = ТаблицаПартий.Найти(КодПартии, "Код");
	Если НайденнаяСтрока <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, НайденнаяСтрока);		
	КонецЕсли;	
	
	Возврат СтруктураСвойств;
	
КонецФункции

Процедура КоманднаяПанельТовараОбновитьДополнительныеПоля(Кнопка)
	ОбновитьДанныеДополнительныхПолей();
КонецПроцедуры

Процедура ОбновитьДанныеДополнительныхПолей()

	// ТОВАРЫ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АП.Ссылка,
	|	ВЫБОР
	|		КОГДА ТоварыСТМСрезПоследних.ТипСТМ ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СТМ,
	|	ВЫБОР
	|		КОГДА АП.Категория = &Госпитальный
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Госпитальный
	|ИЗ
	|	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	|		ПО АП.Ссылка = ТоварыСТМСрезПоследних.Товар
	|			И (ТоварыСТМСрезПоследних.ТипСТМ В (&ТипыСТМ))
	|ГДЕ
	|	АП.Ссылка В(&Товары)";
	
	ТипыСТМ = Новый Массив;
	ТипыСТМ.Добавить(Перечисления.ТипыСТМ.СТМ);
	ТипыСТМ.Добавить(Перечисления.ТипыСТМ.УсловныйСТМ);
	
	Если Не ЗначениеЗаполнено(БрендГоспитальный) Тогда
		БрендГоспитальный = Справочники.Брэнды.НайтиПоКоду(65528);
	КонецЕсли;	                 
	
	Запрос.УстановитьПараметр("ТипыСТМ", ТипыСТМ);
	Запрос.УстановитьПараметр("Госпитальный", БрендГоспитальный);
	Запрос.УстановитьПараметр("Товары", Товар.ВыгрузитьКолонку("Товар"));
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	ТаблицаТоваров.Индексы.Добавить("Ссылка");
	 	
	
	// ПАРТИИ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УЗ_Партии.Код,
	|	УЗ_Партии.СрокГодности,
	|	УЗ_Партии.ДатаПоступления,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(УЗ_Партии.ДокументПоступления КАК Документ.УЗ_ПоступлениеТовара).ВхНомерНакл, """") КАК НомерПриходнойНакладной
	|ИЗ
	|	Справочник.УЗ_Партии КАК УЗ_Партии
	|ГДЕ
	|	УЗ_Партии.Код В(&КодыПартий)";
		
	Запрос.УстановитьПараметр("КодыПартий", Товар.ВыгрузитьКолонку("КодПартии"));
	
	ТаблицаПартий = Запрос.Выполнить().Выгрузить();
	ТаблицаПартий.Индексы.Добавить("Код");	

КонецПроцедуры
