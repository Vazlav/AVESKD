 Функция ПроверкаНаНули  (Парам) 
	 // Назначение:
	 // Проверяет строки товара на наличие строк с нулевыми значениями
	 // 
	 // 
	 //--------------------------------------------------------------------------------
	 Для Каждого ТекСтрокаТовар Из Товар Цикл
		 Если число(ТекСтрокаТовар[Парам])=0 Тогда
			 Возврат ЛОЖЬ;
		 КонецЕсли;
	 КонецЦикла; 	
	 
	 Возврат Истина;
 КонецФункции

 
 
 
 

  Процедура ДвижениеПродажПоТипамДляЦО() Экспорт
	 тхт="ВЫБРАТЬ
	     |	ВозвратОтПокупателяТовар.Товар.ТипДляЦО КАК ТоварТипДляЦО,
	     |	СУММА((ВозвратОтПокупателяТовар.СуммаРозн - ВозвратОтПокупателяТовар.СуммаСкидки) * -1) КАК СуммаСоСкидкой,
	     |	СУММА(ВозвратОтПокупателяТовар.СуммаЗакуп * -1) КАК СуммаЗакуп,
	     |	СУММА(ВозвратОтПокупателяТовар.СуммаСкидки * -1) КАК Скидка
	     |ИЗ
	     |	Документ.ВозвратОтПокупателя.Товар КАК ВозвратОтПокупателяТовар
	     |ГДЕ
	     |	ВозвратОтПокупателяТовар.Ссылка = &Ссылка
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	ВозвратОтПокупателяТовар.Товар.ТипДляЦО" ;
		 
		 
		 
		 //-------------------- Запрос by GtG -----------------------
		 // Назначение: Выборка из табличных частей документа для записи в регистр
		 //----------------------------------------------------------
		 
		 Запрос=Новый Запрос;
		 Запрос.Текст=ТХТ;
		 
		 Запрос.Параметры.Вставить("Ссылка", ЭтотОбъект.Ссылка);
		 
		 ТЗ=Запрос.Выполнить().Выгрузить();
		 
		 Для каждого  Стр Из ТЗ  Цикл
		 	Движение=Движения.ПродажиПоТипамДляЦО.Добавить();
			
			Движение.Активность=Истина;
			Движение.Период=Дата;
			Движение.Регистратор= ЭтотОбъект.Ссылка;
			Движение.Склад=Склад;
			Движение.СуммаЗакупочная=Стр.СуммаЗакуп;
			Движение.СуммаПродажСоСкидкой= Стр.СуммаСоСкидкой;
			Движение.СуммаСкидки=стр.Скидка;
			Движение.ТипДляЦО=Стр.ТоварТипДляЦО;
		 КонецЦикла; 
		 
		//Движения.ПродажиПоТипамДляЦО.Записать(); 
КонецПроцедуры  

Процедура ДвиженияПоУчетДенегВИнтернетАптеке()
	Движения.УчетДенегВИнтернетАптеке.Очистить();
	Для Каждого Стр Из Товар Цикл
		Движение=Движения.УчетДенегВИнтернетАптеке.Добавить();
		Движение.Активность=Истина;
		Движение.ВидДвижения=ВидДвиженияНакопления.Расход;
		Движение.ЗаказОтПокупателя=ИнтернетЗаказ;
		Движение.Курьер=ИнтернетЗаказ.Курьер;
		Движение.Период=Дата;
		Движение.Регистратор=ЭтотОбъект.Ссылка;
		Движение.Склад=Склад;
		Движение.Сумма=стр.СуммаРозн-стр.СуммаСкидки;
		Движение.Фирма=Фирма;
	КонецЦикла;	
КонецПроцедуры

 

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ЭтотОбъект.Проведен = Ложь Тогда
		Дата = ОМ3_ПоследняяДата(Дата,"ВозвратОтПокупателя");	 
		Записать(РежимЗаписиДокумента.Запись); 
	КонецЕсли;
	
	//============================< Проверка на коэфф=0  >================================GtG===
	Если ПроверкаНаНули("Коэфф")=Ложь Тогда
		// Есть строки с 0-ми коэффициентами
		Сообщить("В документе есть строки с коэффициентами =0!
		|Это недопустимо!
		|Очевидно проблемы с единицами товаров.");
		Отказ = ИСТИНА;
		ВОЗВРАТ ;
	КонецЕсли;
	
	Если Склад.ТипСклада = Перечисления.ТипыМХ.Розн Тогда
		Если ПроверкаНаНули("ЦенаРозн")=Ложь Тогда
			Сообщить("В документе есть строки с Ценой розничной =0!
			|Это недопустимо!
			|Очевидно проблемы с расценкой товаров.");
			Отказ = ИСТИНА;
			ВОЗВРАТ ;
		КонецЕсли;	
	КонецЕсли;
	//----------------------------< По регитсру учета по каждому товару >--------------------------------GtG---
	// приход в регистры: 
	//                    ПартииЖНВЛС
	//                    ОстаткиПоСтНДСПоСкладам
	//                    Взаиморасчеты
	//---------------------------------------------------
	
	Если Склад.ТипСклада=Перечисления.ТипыМХ.Опт ТОгда
		ЭтоОптовыйСклад=Истина;
	Иначе	
		ЭтоОптовыйСклад=Ложь;
	КонецЕсли;	
	
	
	Для Каждого ТекСтрокаТовар Из Товар Цикл
		
		
		//ОМ1_ОбновитьДанныеПартии  (ТекСтрокаТовар, ЭтотОбъект);//МО_ОбновитьДанныеПартии  (ТекСтрокаТовар); // прицепить к партии серию
		//МО_ОбновитьДанныеСерии 	 (ТекСтрокаТовар); // прицепить к серии сертификат
		
		Если ТекСтрокаТовар.Количество=0 ТОгда
			Сообщить("НУЛЕВОЕ количество! "+ТекСтрокаТовар.Товар+" на остатки не придет!");
			Отказ = ИСТИНА;
			ВОЗВРАТ ;
		КонецЕсли;	
		
		
		ДвижениеП = Движения.ПартииЖНВЛС.Добавить();
		ДвижениеП.ВидДвижения=ВидДвиженияНакопления.Приход;
		ДвижениеП.Период = Дата;
		ДвижениеП.Товар = ТекСтрокаТовар.Товар;
		ДвижениеП.Склад = Склад;
		ДвижениеП.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
		ДвижениеП.пАРТИЯ = ТекСтрокаТовар.Партия ;
		ДвижениеП.Фирма= Склад.Фирма;
		ДвижениеП.ВидОперации=Перечисления.ВидыОпераций.ВозвратОтПокупателя;
		
		ДвижениеП.Колво = ТекСтрокаТовар.Количество*ТекСтрокаТовар.Коэфф;
		
		
		ДвижениеП.СуммаЗакупСНДС = ТекСтрокаТовар.СуммаЗакуп;
		ДвижениеП.СуммаНДСЗакуп = ТекСтрокаТовар.НДСЗакуп;

				
		
		
		
		Если ЭтоОптовыйСклад=Ложь ТОгда
			ДвижениеП.СуммаРознСНДС = ТекСтрокаТовар.СуммаРозн;
			ДвижениеП.СуммаРознНДС = ТекСтрокаТовар.НДСРозн;
		Иначе
			ДвижениеП.СуммаРознСНДС = ТекСтрокаТовар.СуммаЗакуп;
		    ДвижениеП.СуммаРознНДС = ТекСтрокаТовар.НДСЗакуп;
		КонецЕсли;	
		
		
		//---------------<Движение по регистру продаж по партиям для оптового склада>---------------------------// GtG // 16.01.2013 15:54:44
		Если ЭтоОптовыйСклад=Истина ТОгда
			
			ДвижениеПп = Движения.ПродажиПоПартиям.Добавить();
			//ДвижениеПп.ВидДвижения=ВидДвиженияНакопления.Расход;
			ДвижениеПп.Период = Дата;
			ДвижениеПп.Товар = ТекСтрокаТовар.Товар;
			ДвижениеПп.Склад = Склад;
			ДвижениеПп.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
			ДвижениеПп.пАРТИЯ = ТекСтрокаТовар.Партия ;
			ДвижениеПп.Фирма= Склад.Фирма;
			ДвижениеПп.ВидОперации=Перечисления.ВидыОпераций.ВозвратОтПокупателя;
			
			ДвижениеПп.Колво = ТекСтрокаТовар.Количество*ТекСтрокаТовар.Коэфф*(-1);
			
			
			ДвижениеПп.СуммаЗакупСНДС = ТекСтрокаТовар.СуммаЗакуп*(-1);
			ДвижениеПп.СуммаНДСЗакуп = ТекСтрокаТовар.НДСЗакуп*(-1);
			
			ДвижениеПп.СуммаРознСНДС = ТекСтрокаТовар.СуммаРозн*(-1);
			ДвижениеПп.СуммаРознНДС = ТекСтрокаТовар.НДСРозн*(-1);
		КонецЕсли;
		
			
	КонецЦикла;
	// записываем движения регистров
	//Движения.ПартииЖНВЛС.Записать();
	
	
	//----------------------------< По регитсру учета по ставке НДС >--------------------------------GtG---
	ТЗПодСвертку = ТОвар.Выгрузить();
	
	ТЗПодСвертку.Свернуть("СтавкаНДС","СуммаЗакуп,НДСЗакуп,СуммаРозн,НДСРозн");
	
	Для Каждого ТекСтрокаТовар Из ТЗПодСвертку Цикл
		// регистр ОстаткиПоСтНДСПоСкладам Приход
		
		Если ТекСтрокаТовар.СуммаЗакуп=0 тогда
			Продолжить;
		КонецЕсли; 	
		
		
		Движение = Движения.ОстаткиПоСтНДСПоСкладам.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
		Движение.Фирма= Склад.Фирма;
		Движение.ВидОперации=Перечисления.ВидыОпераций.ВозвратОтПокупателя;

		Движение.СуммаЗакупСНДС = ТекСтрокаТовар.СуммаЗакуп;
		Движение.СуммаНДСЗакуп = ТекСтрокаТовар.НДСЗакуп;
		
		Если ЭтоОптовыйСклад=Ложь ТОгда
			Движение.СуммаРознСНДС = ТекСтрокаТовар.СуммаРозн;
			Движение.СуммаРознНДС = ТекСтрокаТовар.НДСРозн;
		Иначе
			Движение.СуммаРознСНДС = ТекСтрокаТовар.СуммаЗакуп;
			Движение.СуммаРознНДС = ТекСтрокаТовар.НДСЗакуп;
		КонецЕсли;
		

	КонецЦикла;
	// записываем движения регистров
	//Движения.ОстаткиПоСтНДСПоСкладам.Записать();

	ДвижениеПродажПоТипамДляЦО();
	
	Если ИнтернетЗаказ.Пустая()=Ложь Тогда
		ДвиженияПоУчетДенегВИнтернетАптеке();//долги курьеров
	КонецЕсли;
	
	
КонецПроцедуры





Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//ОбновитьСверткуПоНДС();
	ЭтотОбъект.СуммаДок=Товар.Итог("СуммаЗакуп");
	ЭтотОбъект.СуммаДокРозн=Товар.Итог("СуммаРозн");
	ЭтотОбъект.СуммаДокСкидки=Товар.Итог("СуммаСкидки");

КонецПроцедуры


Процедура ЗаполнитьВозвратПоЧеку(ЗначениеВыбора) Экспорт
	Если ТипЗнч(ЗначениеВыбора)=Тип("ДокументСсылка.ЧекПродажи") тогда
		Если ЗначениеВыбора.ЧекПробитНаККМ=Ложь Тогда
			ПРедупреждение("Этот чек не пробит на ккм , возвращать по нему нельзя!");
			Возврат;
		КонецЕсли;	
		
		Склад=ЗначениеВыбора.Аптека;
		Фирма=ЗначениеВыбора.Фирма;
		ИнтернетЗаказ=ЗначениеВыбора.ДокументОснование.ссылка;
		
		Запрос=Новый ЗАпрос("ВЫБРАТЬ
		|	ЧекПродажиТовар.Количество,
		|	ЧекПродажиТовар.НДСЗакуп,
		|	ЧекПродажиТовар.СуммаНДС КАК НДСРозн,
		|	ЧекПродажиТовар.Партия.Серия КАК Серия,
		|	ЧекПродажиТовар.СтавкаНДС,
		|	ЧекПродажиТовар.СуммаЗакуп,
		|	ЧекПродажиТовар.Сумма КАК СуммаРозн,
		|	ЧекПродажиТовар.Товар,
		|	ЧекПродажиТовар.Сумма / ЧекПродажиТовар.Количество КАК ЦенаРозн,
		|	ЧекПродажиТовар.Партия,
		|	ЧекПродажиТовар.ЕИТ,
		|	ЧекПродажиТовар.К КАК Коэфф,
		|	ЧекПродажиТовар.СуммаЗакуп / ЧекПродажиТовар.Количество КАК ЦенаЗакуп,
		|	ЧекПродажиДисконт.СуммаСкидки
		|ИЗ
		|	Документ.ЧекПродажи.Товар КАК ЧекПродажиТовар
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекПродажи.Дисконт КАК ЧекПродажиДисконт
		|		ПО ЧекПродажиТовар.Партия = ЧекПродажиДисконт.Партия
		|ГДЕ
		|	ЧекПродажиТовар.Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка",ЗначениеВыбора);
		
		ТОвар.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Запрос=Новый ЗАпрос("ВЫБРАТЬ
		                    |	ЧекПродажиАвансыПоУслугам.ВидОперации,
		                    |	ЧекПродажиАвансыПоУслугам.ТипОплаты,
		                    |	ЧекПродажиАвансыПоУслугам.НомерЗаказа,
		                    |	ЧекПродажиАвансыПоУслугам.ДатаЗаказа,
		                    |	ЧекПродажиАвансыПоУслугам.Сумма,
		                    |	ЧекПродажиАвансыПоУслугам.Касса,
		                    |	ЧекПродажиАвансыПоУслугам.ЗетОчет,
		                    |	ЧекПродажиАвансыПоУслугам.СтавкаНДС,
		                    |	ЧекПродажиАвансыПоУслугам.СуммаНДС,
		                    |	ЧекПродажиАвансыПоУслугам.Услуга
		                    |ИЗ
		                    |	Документ.ЧекПродажи.АвансыПоУслугам КАК ЧекПродажиАвансыПоУслугам
		                    |ГДЕ
		                    |	ЧекПродажиАвансыПоУслугам.Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка",ЗначениеВыбора);
		
		АвансыПоУслугам.Загрузить(Запрос.Выполнить().Выгрузить());

		
		
		
		НомДокАптеки=ЗначениеВыбора.НомерЗаказа;
		ВидОперации=Перечисления.ВидыОпераций.ВозвратОтПокупателя;
		
		Комментарий="Полный отказ";
		
		Стр=Изменения.Добавить();
		Стр.Дата=ТекущаяДата();
		Стр.КомментарийИзменения="Заполнен вручную из чека "+ЗначениеВыбора;
		Стр.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		Стр.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
		
	КонецЕсли;	
КонецПроцедуры	


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Сообщить("ОбработкаЗаполнения");

	
	Если ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ИнтернетЗаказ") тогда
		//---------------<1)   Сначала найдем пробитый по этому заказу чек.>---------------------------// GtG // 27.08.2012 16:48:35
		// в противном случае смысла возвращать нет. по кассе не проходило
		
		Запрос=Новый Запрос("ВЫБРАТЬ
		                    |	ЧекПродажи.Ссылка   как Чек
		                    |ИЗ
		                    |	Документ.ЧекПродажи КАК ЧекПродажи
		                    |ГДЕ
		                    |	ЧекПродажи.ДокументОснование = &ДокументОснование
		                    |	И ЧекПродажи.ЧекПробитНаККМ = истина");
		Запрос.УстановитьПараметр("ДокументОснование",ДанныеЗаполнения);
		
		Рез=Запрос.Выполнить().Выгрузить();
		
		Если Рез.Количество()=0 Тогда
			Предупреждение("По этому заказу нет пробитого чека!
			                |Нет смысла делать Возврат не в день покупки!
			                |Удалите заказ.");
			Возврат;				
		КонецЕсли;
		
		ЗначениеВыбора=Рез.Получить(0).Чек;
	    ЗаполнитьВозвратПоЧеку(ЗначениеВыбора);
	
	КонецЕсли;
	
	
КонецПроцедуры


Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Сообщить("ОбработкаПроверкиЗаполнения");
КонецПроцедуры

