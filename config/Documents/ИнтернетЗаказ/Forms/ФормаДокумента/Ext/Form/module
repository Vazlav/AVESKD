Перем КЗПоОстаткам;
Перем ЦветаСтрокиПоСтатусам;
Перем ПредыдущийСтатусЗаказа;
Перем ТекущийКурьер;
Перем ИсходнаяДатаОтгрузки;

Функция НайтиИПолучитьТовар(Стр)
	
	//------------------<Найдем товар из таблицы сопоставления>-------------------Virus----03.02.2008
	КодТовара = СокрЛП(стр.Код);
	
	ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	      |	СвязкиТовараСПоставщиком.КодТовараПоставщика КАК КодТовараПоставщика,
	      |	СвязкиТовараСПоставщиком.ТоварФирмы КАК Товар,
	      |	СвязкиТовараСПоставщиком.ТоварФирмы.ЕдиницаПоУмолчанию как ЕдиницаПоУмолчанию,
	      |	СвязкиТовараСПоставщиком.ТоварФирмы.ЕдиницаПоУмолчанию.К КАК Коэфф
	      |ИЗ
	      |	Справочник.СвязкиТовараСПоставщиком КАК СвязкиТовараСПоставщиком
	      |ГДЕ
	      |	СвязкиТовараСПоставщиком.Поставщик = &Поставщик
	      |	И СвязкиТовараСПоставщиком.КодТовараПоставщика = &КодТовараПоставщика";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Поставщик",Справочники.Поставщики.НайтиПоКоду(753));
	Запрос.УстановитьПараметр("КодТовараПоставщика",КодТовара);
	ТаблицаСвязок = Запрос.Выполнить().Выгрузить();
	Если ТаблицаСвязок.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат ТаблицаСвязок.Получить(0);   //Возвращаем строку
	КонецЕсли;
	
	
КонецФункции



Процедура КоманднаяПанель2кнСопоставитьСтроки(Кнопка)
	
	Если НесопоставленныйТовар.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УсловиеФильтра = Новый СписокЗначений;
	ТЗНесопоставленныйТовар = Новый ТаблицаЗначений;
	ТЗНесопоставленныйТовар.Колонки.Добавить("Код");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Товар");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Связан");
	ТЗНесопоставленныйТовар.Колонки.Добавить("БарКод");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Производитель");
	
	Для каждого стр из НесопоставленныйТовар Цикл
		НоваяСтрока = ТЗНесопоставленныйТовар.Добавить();
		НоваяСтрока.Код = стр.Код;
		НоваяСтрока.Товар = стр.Товар;
		НоваяСтрока.Связан = NULL;
		НоваяСтрока.БарКод = "";
		
		УсловиеФильтра.Добавить(стр.Код);
	КонецЦикла;
	
	
	
	Связки=Обработки.УстСвязокСПост_ИзДокСОст.Создать();//УстановкаСвязокСПоставщикомИзДокумента.Создать();
	ФормаСвязок = Связки.ПолучитьФорму("УстановкаСвязокСПоставщикомНовая",, Новый УникальныйИдентификатор );
	ФормаСвязок.УсловиеФильтра=УсловиеФильтра;
	ФормаСвязок.ТЗНесопоставленныйТовар = ТЗНесопоставленныйТовар;
	ФормаСвязок.Поставщик=Справочники.Поставщики.НайтиПоКоду(753);
	ФормаСвязок.ОткрытьМодально();	
	
	
КонецПроцедуры

Процедура КоманднаяПанель2кнПеренестиВТовар(Кнопка)
	ЕстьЧтоЗаписывать = Ложь;
	Для каждого стр из НесопоставленныйТовар Цикл
		
		Если стр.Обработана = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТовара = НайтиИПолучитьТовар(стр);
		Если СтрокаТовара = Неопределено Тогда
			Продолжить;
		Иначе
		КонецЕсли;
		
		ЕстьЧтоЗаписывать = Истина;
		//------------------------<Добавляем строку в ТЧ с данными>-------------------Virus----
		СтрДок = Товар.Добавить();
		СтрДок.Товар = СтрокаТовара.Товар;
		СтрДок.Количество	 = стр.Количество;
		СтрДок.Цена	 = стр.Цена;
		СтрДок.ЦенаСоСкидкой	 = стр.ЦенаСоСкидкой;
		СтрДок.СуммаСоСкидкой	 = стр.СуммаСоСкидкой;
		СтрДок.Сумма			 = стр.Сумма;
		стр.Обработана = Истина;
	КонецЦикла;	
	Если ЕстьЧтоЗаписывать = Истина Тогда
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
КонецПроцедуры

Процедура НесопоставленныйТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Обработана = Ложь Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,155,240);
	КонецЕсли;

КонецПроцедуры


Процедура Пересчет(ТекСтрока)
	
	
	 	
	ТекСтрока.Сумма =ТекСтрока.Цена * ТекСтрока.Количество;
	ТекСтрока.СуммаСоСкидкой = ТекСтрока.ЦенаСоСкидкой* ТекСтрока.Количество;
	
	
	
КонецПроцедуры


Процедура ТоварКоличествоПриИзменении(Элемент)
	
	ТекСтрока=ЭлементыФормы.Товар.ТекущаяСтрока;
	Пересчет(ТекСтрока);

	
	
КонецПроцедуры

Процедура ТоварЦенаПриИзменении(Элемент)
		
	ТекСтрока=ЭлементыФормы.Товар.ТекущаяСтрока;
	Пересчет(ТекСтрока);



КонецПроцедуры

Процедура ТоварЦенаСоСкидкойПриИзменении(Элемент)
		
	ТекСтрока=ЭлементыФормы.Товар.ТекущаяСтрока;
	Пересчет(ТекСтрока);



КонецПроцедуры


Процедура ТоварПриАктивизацииСтроки(Элемент)
	
	ЭлементыФормы.КодАП.Заголовок=Элемент.ТекущаяСтрока.Товар.Код;
	
	Если ОнлайнОстатки=Истина ТОгда
		СкладОстатков=Склад
	Иначе
		СкладОстатков=ФизическаяАптека;
	КонецЕСли;	
	
	КЗПоОстаткам.УстановитьПараметр("Склад",СкладОстатков);
	КЗПоОстаткам.УстановитьПараметр("Товар",Элемент.ТекущаяСтрока.Товар);
	КЗПоОстаткам.УстановитьПараметр("Фирма",СкладОстатков.Фирма);
	
	Рез=КЗПоОстаткам.Выполнить();
	Если Рез.Пустой()=Истина Тогда
		ЭлементыФормы.Ост.ЦветТекста=Новый Цвет(255,0,0);
		
		ЭлементыФормы.Ост.Заголовок="-НЕТ-";
	Иначе	
		
		
		Колво=Рез.Выгрузить().Получить(0).КолвоОстаток;
		
		Если Колво<>0 тогда
			ЭлементыФормы.Ост.ЦветТекста=Новый Цвет(0,0,0);
			
			ЭлементыФормы.Ост.Заголовок=Колво;
		Иначе
			ЭлементыФормы.Ост.ЦветТекста=Новый Цвет(255,0,0);
			
			ЭлементыФормы.Ост.Заголовок="-НЕТ-";
		КонецЕсли;
	КонецЕсли;	
	
	НеликвидыПоСтроке.Отбор.КодТовара.Установить(Элемент.ТекущаяСтрока.Товар.Код);
	
	
	
	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЭтоНовый()=Истина Тогда
		Если Найти(ПараметрыСеанса.ТекущийСотр.ИмяПользователя,"РОБОТ")=0 И 
			Найти(ПараметрыСеанса.ТекущийСотр.ИмяПользователя,"Администратор")=0 Тогда
			Источник=ПараметрыСеанса.ТекущийСотр;
		КонецЕсли;
	КонецЕСли;
	
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.СтатусСтроки.Пустая()=ложь ТОгда
		ОформлениеСтроки.ЦветФона=ЦветаСтрокиПоСтатусам.Получить(ДанныеСтроки.СтатусСтроки);
	КонецЕсли;
		
	
	Если Цел(ДанныеСтроки.Количество)-ДанныеСтроки.Количество<>0 ТОгда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,100,100);
	КонецЕсли;
	
	КодАптекиОтправителя = ДанныеСтроки.НомерАптеки;
	Если ЗначениеЗаполнено(КодАптекиОтправителя) Тогда
		ОформлениеСтроки.Ячейки.Аптека.Значение = Справочники.МестаХранения.НайтиПоКоду(КодАптекиОтправителя);
	КонецЕсли;
	
	Если ДанныеСтроки.Предзаказ Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,255,0);
	КонецЕсли;
	
КонецПроцедуры







Процедура ТоварСтатусСтрокиПриИзменении(Элемент)
	Если Элемент.значение=Перечисления.ИА_СтатусСтрокиЗаказа.Дефектура ТОгда
		СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.НеКомплект;
		ЗаписьВИзменения("Дефектура по "+ЭлементыФормы.Товар.ТекущаясТрока.Товар);
	КонецЕсли;	
	
	Если Элемент.значение=Перечисления.ИА_СтатусСтрокиЗаказа.Заказан ТОгда
		// Нужно успеть поменять статус заказа до обновления отображения на форме
		//Если есть еще строка с дефектурой то и фиг с ним, но если нет таких строк то вылезет ложное предупреждение
		Если Товар.Найти(Перечисления.ИА_СтатусСтрокиЗаказа.Дефектура)=Неопределено ТОгда
		СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.НекомплектЗаказан;
		ЗаписьВИзменения("Все дефектурные позиции заказаны "+ЭлементыФормы.Товар.ТекущаясТрока.Товар);
		КонецЕсли;
	КонецЕсли;	

	Если Элемент.значение=Перечисления.ИА_СтатусСтрокиЗаказа.Собран ТОгда
		// если все строки собраны, то некомплект тот или иной уже недопустим, должен стать весь собраный
		Если Товар.НайтиСтроки(Новый Структура("СтатусСтроки",Перечисления.ИА_СтатусСтрокиЗаказа.Собран)).Количество()=Товар.Количество() Тогда
			СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Собран;
		КонецЕсли;
	КонецЕсли;	
	
	Если Элемент.значение=Перечисления.ИА_СтатусСтрокиЗаказа.НетСтатуса ТОгда
		// если все строки собраны, то некомплект тот или иной уже недопустим, должен стать весь собраный
		Если Товар.Найти(Перечисления.ИА_СтатусСтрокиЗаказа.Дефектура)=Неопределено
			 и
			 Товар.Найти(Перечисления.ИА_СтатусСтрокиЗаказа.Заказан)=Неопределено
			 и
			 Товар.НайтиСтроки(Новый Структура("СтатусСтроки",Перечисления.ИА_СтатусСтрокиЗаказа.Собран)).Количество()<>Товар.Количество()
			 Тогда// нет дефектуры и заказанных и не все позиции собраны
			СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Зарегистрирован;
		КонецЕсли;
	КонецЕсли;
	Если Элемент.значение=Перечисления.ИА_СтатусСтрокиЗаказа.НетИНеБудет ТОгда
		// Товар отсутствует в природе
			ТекСтрока=ЭлементыФормы.Товар.ТекущаяСтрока;
			ТекСтрока.Количество =0;
	        Пересчет(ТекСтрока);
	КонецЕсли;

	
	
КонецПроцедуры

Процедура ТоварПередУдалением(Элемент, Отказ)
	ЗаписьВИзменения("Удалена строка "+ЭлементыФормы.Товар.ТекущаясТрока.Товар);

КонецПроцедуры

Процедура ОбновлениеОтображения()
	ТекущийКурьер=Курьер;
	//---------------<Оплачен>---------------------------// GtG // 22.08.2012 20:51:26
	Если СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Оплачен и 
		СтатусЗаказа<>ПредыдущийСтатусЗаказа и 
		пустаястрока(ПредыдущийСтатусЗаказа)=ложь ТОгда
		Предупреждение("Статус оплачен проставляется автоматически при проведении 
						|документа Инкассация денег от курьеров",3);
		СтатусЗаказа=ПредыдущийСтатусЗаказа;				
	КонецЕсли;
	
	//---------------<в пути>---------------------------// GtG // 22.08.2012 20:51:34
	Если СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.ВПути ТОгда
		Если Курьер.Пустая()=Ложь и ЧекПробит=Истина И ПРоведен=Истина Тогда
			Можно=Истина;
		Иначе	
			Можно=Ложь;
		КонецЕсли;	
		Если Можно=Ложь ТОгда
			ПРедупреждение("Нельзя установить статус в пути, пока 
							|не назначен курьер,
							|не пробит чек,
							|не проведен заказ.");
			СтатусЗаказа=ПредыдущийСтатусЗаказа;				
		КонецЕсли;
	КонецЕсли;	
	
	КолвоСтрокНетИНеБудет=Товар.НайтиСтроки(Новый Структура("СтатусСтроки",Перечисления.ИА_СтатусСтрокиЗаказа.НетИНеБудет)).Количество();
	КолвоСтрокНеПробивать=Товар.НайтиСтроки(Новый Структура("СтатусСтроки",Перечисления.ИА_СтатусСтрокиЗаказа.НеПробивать)).Количество();
	
	
	
	//---------------<собран>---------------------------// GtG // 22.08.2012 20:51:44
	Если СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Собран ТОгда
		Если Товар.НайтиСтроки(Новый Структура("СтатусСтроки",Перечисления.ИА_СтатусСтрокиЗаказа.Собран)).Количество()<>Товар.Количество()-КолвоСтрокНетИНеБудет-КолвоСтрокНеПробивать Тогда  // не совпадает колво стро в собраном состоянии с колвом строк в таблице - значит есть какие-то строки не собранные
			Можно=Ложь;
		Иначе	
			Можно=Истина;
		КонецЕсли;	
		Если Можно=Ложь ТОгда
			ПРедупреждение("Нельзя установить статус собран, пока 
							|не все строки в состоянии Собран");
			СтатусЗаказа=ПредыдущийСтатусЗаказа;				
		КонецЕсли;
	КонецЕсли;	

	 //---------------<НеКомплект>---------------------------// GtG // 22.08.2012 20:54:37
	 Если СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.НеКомплект ТОгда
		Если Товар.Найти(Перечисления.ИА_СтатусСтрокиЗаказа.Дефектура,"СтатусСтроки")=Неопределено Тогда  // Нет строк с дефектурой
			Можно=Ложь;// нет строк с дефектурой
		Иначе	
			Можно=Истина; // есть строки с дефектурой
		КонецЕсли;	
		Если Можно=Ложь ТОгда
			Если Товар.Найти(Перечисления.ИА_СтатусСтрокиЗаказа.НетСтатуса,"СтатусСтроки")=Неопределено  ТОгда
				ПРедупреждение("Нельзя установить статус некомплект, пока 
				|нет строк в состоянии дефектура");
				СтатусЗаказа=ПредыдущийСтатусЗаказа;			
			Иначе  // исправление косяка обнаруженного санакоевым
				СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Зарегистрирован;
				ПредыдущийСтатусЗаказа= СтатусЗаказа;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;	

	 
	 //---------------<НекомплектЗаказан>---------------------------// GtG // 22.08.2012 20:54:37
	 Если СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.НекомплектЗаказан ТОгда
		Если Товар.Найти(Перечисления.ИА_СтатусСтрокиЗаказа.Дефектура,"СтатусСтроки")=Неопределено Тогда  // Нет строк с дефектурой
			Можно=истина;// нет строк с дефектурой
		Иначе	
			Можно=Ложь; // есть строки с дефектурой
		КонецЕсли;	
		
		Если Товар.Найти(Перечисления.ИА_СтатусСтрокиЗаказа.Заказан,"СтатусСтроки")=Неопределено Тогда  // Нет строк заказанных
			Можно=ложь;// нет строк заказанных
		КонецЕсли;	
		
		
		
		Если Можно=Ложь ТОгда
			ПРедупреждение("Нельзя установить статус Некомплект->, если 
							|нет строк в состоянии Заказан");
			СтатусЗаказа=ПредыдущийСтатусЗаказа;				
		КонецЕсли;
	КонецЕсли;	
	 
	 
	 
	 
	//---------------<Отказ>---------------------------// GtG // 22.08.2012 21:27:59
	//можно всегда 
	

	//---------------<Блокировка кнопки ОК>---------------------------// GtG // 22.08.2012 22:29:02
	Если СписокНеПроводныхСтатусов.НайтиПоЗначению(СтатусЗаказа)<>Неопределено Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыОК.Доступность=ложь;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыОК.Доступность=Истина;
	КонецЕСли;	
	 
	 
	 
	
	ПредыдущийСтатусЗаказа=СтатусЗаказа;
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЧекПробит=Истина Тогда
		ЭлементыФормы.Товар.ТолькоПросмотр=Истина;
	КонецЕсли;	
	
	Если ЭтоНовый()=Истина тогда
		СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Зарегистрирован;
	КонецЕсли;	
	
	Если СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Оплачен Тогда
		ЭтаФорма.ТолькоПросмотр=Истина; // все, бабло получено
	КонецЕсли;	
	
	ТарифыПоДоставке=Доставка;
	
	Если ПустаяСтрока(Метро)=Истина Тогда
		Метро="";
	КонецЕсли;

	ИсходнаяДатаОтгрузки=ДатаОтгрузки;
	
	//ТСО 02.10.2014
	Если Не ЭтоНовый() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОнлайнОплатыИнтернетЗаказов.СуммаОплаты
		|ИЗ
		|	РегистрСведений.ОнлайнОплатыИнтернетЗаказов КАК ОнлайнОплатыИнтернетЗаказов
		|ГДЕ
		|	ОнлайнОплатыИнтернетЗаказов.ИнтернетЗаказ = &ИнтернетЗаказ";
		
		Запрос.УстановитьПараметр("ИнтернетЗаказ", Ссылка);		
		РезультатЗапроса = Запрос.Выполнить();		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СуммаОнлайнОплаты = Выборка.СуммаОплаты;
		КонецЦикла;
		
	КонецЕсли;
	//*ТСО
	
КонецПроцедуры


Процедура ТоварПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Элемент.ТекущаяКолонка.Имя="ЕИТ" Тогда	
	
		СтарыйК=Элемент.ТекущаяСтрока.К;
		НовыйК=Элемент.ТекущаяСтрока.ЕИТ.К;
		Если НовыйК=СтарыйК ТОгда
			Возврат;
		КонецЕсли;	
			
		
		Элемент.ТекущаяСтрока.К=НовыйК;
		
		Элемент.ТекущаяСтрока.Количество=Элемент.ТекущаяСтрока.Количество*СтарыйК/НовыйК;
		
		Элемент.ТекущаяСтрока.Цена=Элемент.ТекущаяСтрока.Цена/СтарыйК*НовыйК;//	1 779	Число
		Элемент.ТекущаяСтрока.ЦенаСоСкидкой=Элемент.ТекущаяСтрока.ЦенаСоСкидкой/СтарыйК*НовыйК;//	1 725,63	Число
		
		
		Элемент.ТекущаяСтрока.Сумма=Элемент.ТекущаяСтрока.Цена*Элемент.ТекущаяСтрока.Количество;//	1 779	Число
		Элемент.ТекущаяСтрока.СуммаСоСкидкой=Элемент.ТекущаяСтрока.ЦенаСоСкидкой*Элемент.ТекущаяСтрока.Количество;//	1 725,63	Число
	КонецЕсли;
КонецПроцедуры

Процедура КлиентПриИзменении(Элемент)
	
	Если Клиент.Пустая()=Истина Тогда
		Возврат;
	КонецЕсли;
	
	ФИОКлиента=Клиент.Наименование;
	Телефон=Клиент.Телефон;
	ДопТелефон=Клиент.ДопТелефон;

	Емэйл=Клиент.Емэйл;
	АдресДоставки=Клиент.Адрес;
	Метро=Клиент.Метро;
	
	Проезд=Клиент.Проезд;
	НомерДК=Клиент.НомерДК;
	
	ПроцентСкидки=Клиент.ПроцентСкидки;
	
КонецПроцедуры

Процедура Записать_нового_клиентаНажатие(Элемент)
		
	Если ПустаяСтрока(Телефон)=Истина тогда
		Предупреждение("Не указан телефон!");
		Возврат;
	КонецЕсли;
	
	Если Клиент.Пустая()=Истина тогда
		
		Запрос=новый запрос("ВЫБРАТЬ
		|	КлиентыИнтернетАптеки.Ссылка
		|ИЗ
		|	Справочник.КлиентыИнтернетАптеки КАК КлиентыИнтернетАптеки
		|ГДЕ
		|	КлиентыИнтернетАптеки.Телефон = &Телефон");
		
		Запрос.УстановитьПараметр("Телефон",Телефон);
		Рез=Запрос.Выполнить().Выгрузить();
		Если Рез.Количество()<>0 Тогда
			Ответ=Вопрос("Уже есть клиент с таким номером телефона! Записать еще одного?",РежимДиалогаВопрос.ДаНет);
			Если Ответ=КодВозвратаДиалога.Нет ТОгда
				Возврат;
			КонецЕсли;
		КонецЕсли;	
		
		
		
		
		
		НовыйКлиент=Справочники.КлиентыИнтернетАптеки.СоздатьЭлемент();
		
	Иначе
		
		Ответ=вопрос("Записать изменения?", РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Да);
		
		Если Ответ=КодВозвратаДиалога.Нет или Ответ=КодВозвратаДиалога.Таймаут Тогда
			Возврат;
		КонецЕсли;
		
		НовыйКлиент=Клиент.ПолучитьОбъект();
	КонецЕсли;

	
	ФИОКлиента=СокрЛП(ФИОКлиента);
	
	Пока  Найти(ФИОКлиента,"  ")<> 0 Цикл
		ФИОКлиента=СтрЗаменить(ФИОКлиента,"  "," ");
	КонецЦикла;	
	
	
	
	НовыйКлиент.Наименование=ФИОКлиента;
	
	//---------------<Ф.И.О. клиента из наименования>---------------------------// GtG // 05.10.2012 14:25:36
	СтрФио=ФИОКлиента;
	СтрФио=СтрЗаменить(СтрФио," ",Символы.ПС);
	Попытка 	НовыйКлиент.Фамилия=СтрПолучитьСтроку(СтрФио,1); Исключение КонецПопытки;
	Попытка 	НовыйКлиент.Имя=СтрПолучитьСтроку(СтрФио,2); Исключение КонецПопытки;
	Попытка 	НовыйКлиент.Отчество=СтрПолучитьСтроку(СтрФио,3); Исключение КонецПопытки;
	//---------------<>---------------------------// GtG // 05.10.2012 14:25:40
	
	
	НовыйКлиент.Телефон=Телефон;
	НовыйКлиент.ДопТелефон=ДопТелефон;
	
	НовыйКлиент.Емэйл=Емэйл;
	НовыйКлиент.Адрес=АдресДоставки;
	НовыйКлиент.Метро=Метро;
	НовыйКлиент.Проезд=Проезд;
	НовыйКлиент.НомерДК=НомерДК;
	
	НовыйКлиент.ПроцентСкидки=ПроцентСкидки;
	НовыйКлиент.примечание=Примечание;

	
	НовыйКлиент.Записать();
	
	Клиент=НовыйКлиент.Ссылка;

КонецПроцедуры

Процедура ДатаОтгрузкиПриИзменении(Элемент)
	
	Если НачалоДня(ДатаОтгрузки)<НачалоДня(ТекущаяДата()) Тогда
		ДатаОтгрузки=НачалоДня(ТекущаяДата());
	КонецЕсли;	
	
	Если ДатаОтгрузки<>ИсходнаяДатаОтгрузки тогда
		ФормаКомментария=ЭтотОбъект.ПолучитьФорму("ФормаВводаКомментарияОДате",ЭтаФорма,1);
		ФормаКомментария.ОткрытьМодально();
		
		СтрИзм=Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="Изм. дата отгрузки с "+Формат(ИсходнаяДатаОтгрузки,"ДФ=dd.MM.yy")+" на "+Формат(ДатаОтгрузки,"ДФ=dd.MM.yy")+" >> "+(ФормаКомментария.КомментарийОбИзмененииДатыДоставки);
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=СтатусЗаказа;
		
		ИсходнаяДатаОтгрузки= ДатаОтгрузки; // новая дата отгрузки
	КонецЕсли;	
		
		
	
	
	
		
КонецПроцедуры

Процедура КурьерПриИзменении(Элемент)
	
	
	Если Курьер<>ТекущийКурьер Тогда
		ЗаписьВИзменения("Изменен курьер с "+ТекущийКурьер+" на "+Курьер);
		Если Проведен=Истина Тогда
			ЭтотОбъект.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель3ДобавитьКомментарийВРегистр(Кнопка)
	
	Если ЭтоНовый()=Истина Тогда
		Предупреждение("Документ еще не записан!
		|Добавить комментарий можно только после записи документа!");
		Возврат;
	КонецЕсли;
	ФДК=ЭтотОбъект.ПолучитьФорму("ФормаДобавленияКомментария",ЭтаФорма,1);
	ФДК.Документ=ЭтотОбъект.Ссылка;
	ФДК.ОткрытьМодально();
	
	ЭтаФорма.Обновить();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаявкаНаПеремещение(Кнопка)
	Записать();
	
	ГенЗаказа=Обработки.ГенераторЗаявкиНаПеремещениеВОнлайнЗону.Создать();
	ГенЗаказа.Заказ=ЭтотОбъект.Ссылка;
	ГенЗаказа.Аптека=ФизическаяАптека;
	ГенЗаказа.ОнлайнЗона=Склад;
	
	ГенЗаказа.МО_ВыгрузитьЗаказ(ЭтотОбъект.Ссылка);
	предупреждение("Выгружена заявка на перемещение товара ",10);
	
КонецПроцедуры

Процедура КоманднаяПанель1СобранНаВсеСтроки(Кнопка)
	Если ЧекПробит=Истина Тогда // не трогаем статус строки при пробитом чеке.
		Возврат;
	КонецЕсли;
	
	Для Каждого Стр Из Товар Цикл
		Стр.СтатусСтроки=Перечисления.ИА_СтатусСтрокиЗаказа.Собран;
	КонецЦикла;	
	
	СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Собран;
	
КонецПроцедуры

Процедура СтатусЗаказаПриИзменении(Элемент)
	Если ЧекПробит=Истина Тогда // не трогаем статус строки при пробитом чеке.
		Возврат;
	КонецЕсли;

	Если СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Собран ТОгда
		Для Каждого Стр Из Товар Цикл
			Если Стр.СтатусСтроки=Перечисления.ИА_СтатусСтрокиЗаказа.НетИНеБудет ТОгда
				Продолжить;
			КонецЕсли;	
			Стр.СтатусСтроки=Перечисления.ИА_СтатусСтрокиЗаказа.Собран;
		КонецЦикла;	
	ИначеЕсли СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Отказ ТОгда
		Для Каждого Стр Из Товар Цикл
			Стр.СтатусСтроки=Перечисления.ИА_СтатусСтрокиЗаказа.НетСтатуса;
		КонецЦикла;	
	ИначеЕсли СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.НекомплектЗаказан ТОгда
		Для Каждого Стр Из Товар Цикл
			Если Стр.СтатусСтроки=Перечисления.ИА_СтатусСтрокиЗаказа.НетИНеБудет ТОгда
				Продолжить;
			КонецЕсли;	
			Стр.СтатусСтроки=Перечисления.ИА_СтатусСтрокиЗаказа.Заказан;
		КонецЦикла;	
	
	
	КонецЕсли;
	
	//ТСО 08.08.2014
	ПроинформироватьКлиентаПоСМС = Истина;	
	//*ТСО
	
	
КонецПроцедуры

Процедура КоманднаяПанель1СброситьСтатусПоВсемСтрокам(Кнопка)
	Если ЧекПробит=Истина Тогда  // не трогаем статус строки при пробитом чеке.
		Возврат;
	КонецЕсли;	
	
	Для Каждого Стр Из Товар Цикл
		Стр.СтатусСтроки=Перечисления.ИА_СтатусСтрокиЗаказа.НетСтатуса;
	КонецЦикла;	
	
	СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Зарегистрирован;

КонецПроцедуры

Процедура ОсновныеДействияФормыДействие(Кнопка)
	МО_Печать();
КонецПроцедуры

Процедура ОнлайнОстаткиПриИзменении(Элемент)
	ТоварПриАктивизацииСтроки(ЭлементыФормы.Товар);
КонецПроцедуры

Процедура ТарифыПоДоставкеПриИзменении(Элемент)
	Доставка= ТарифыПоДоставке;
КонецПроцедуры


Процедура Телефон1ПриИзменении(Элемент)
		
	Клиент=ОМ_СправочнаяСлужба.ОМСС_ВыборКлиентаПоНомеруТелефона(Телефон1);
	КлиентПриИзменении(Элемент);


КонецПроцедуры

Процедура ПроцентСкидкиПриИзменении(Элемент)
	
	
	Для Каждого Стр Из Товар Цикл
		
		Если Стр.Цена>=2000 Тогда
			продолжить;
		КонецЕсли;
		
		сТР.ЦенаСоСкидкой=сТР.Цена-оКР(сТР.Цена/100*ПроцентСкидки,2);
		сТР.СуммаСоСкидкой=сТР.ЦенаСоСкидкой*сТР.Количество;
		
		
	КонецЦикла;	
	
	СуммаСоСкидкой=Товар.Итог("СуммаСоСкидкой");
	Сумма=Товар.Итог("Сумма");
	
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель1ЗаказатьПоМСП(Кнопка)
	 МСП_ВО=Справочники.ВнешниеОтчетыИОбработки.НайтиПоНаименованию("МЕГА-СВОДНЫЙ ПОДБОР ПО ПРАЙСАМ ПОСТАВЩИКА");
	 Если МСП_ВО=Неопределено Тогда
		 Предупреждение("Во внешних отчетах и обработках не найдена МЕГА-СВОДНЫЙ ПОДБОР ПО ПРАЙСАМ ПОСТАВЩИКА
		 | Не могу запустить внешнюю обработку!");
		 Возврат;
	 КонецЕсли;
	 
	 ТекСтрока=ЭлементыФормы.Товар.ТекущаяСтрока;
	 
	 МСП_Ф=ВнешниеОбработки.ПолучитьФорму(МСП_ВО.ПутьКФайлу,"ПодборСводный",,1);
	 
	 //МСП_Ф=ВО.ПолучитьФорму("ПодборСводный",ЭтаФорма,1);
	 МСП_Ф.СтрокаПоиска=ТекСтрока.Товар;
     МСП_Ф.ПоискПо=2;
	 МСП_Ф.Аптека=ФизическаяАптека;
	 
	 МСП_Ф.СтрокаПоискаПриИзменении("");//очистит товар сама 
	 МСП_Ф.СтрокаПоиска=ТекСтрока.Товар;
	 МСП_Ф.ЭлементыФормы.НевидимыйПотребностьДляИнтернетЗаказа.Видимость=Истина;
	 МСП_Ф.ЭлементыФормы.НевидимыйПотребностьДляИнтернетЗаказа.Заголовок="Потребность: "+ТекСтрока.Количество+" "+ТекСтрока.ЕИТ+" (К="+ТекСтрока.К+")";
	 МСП_Ф.Открыть();
	 МСП_Ф.ЗакрыватьПриЗакрытииВладельца=Ложь;
	 
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	
	//МСПрайс_ТоварЗаказан, Структура, МСПрайс
	//ПараметрОповещения.Вставить("Товар",стр.ТоварСсылка);
	//ПараметрОповещения.Вставить("Поставщик",стр.Поставщик);
	//ПараметрОповещения.Вставить("Количество",стр.Количество);
	//ПараметрОповещения.Вставить("Цена",стр.Цена);

	Если  ИмяСобытия ="МСПрайс_ТоварЗаказан" и Источник="МСПрайс" Тогда
		Если Параметр.ФормаВладелец<>ЭтаФорма Тогда
			Возврат;// это событие для другой формы заказа
		КонецЕсли;
		
		Стр=Товар.Найти(Параметр.Товар,"Товар");
		Стр.СтатусСтроки=Перечисления.ИА_СтатусСтрокиЗаказа.Заказан;
		
		СтрИзм=Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения=""+Параметр.Товар+" заказан у "+Параметр.Поставщик+" по "+Параметр.Цена;
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ИА_СтатусЗаказа.НекомплектЗаказан;
	КонецЕсли;	
	
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСборочный_лист(Кнопка)
	МО_Печать(Ложь,Ложь,Истина,Неопределено,Ложь, 2);
КонецПроцедуры

Процедура ОсновныеДействияФормыЭкспЗаявкаНаПеремещение(Кнопка)
	Записать();
	
	ГенЗаказа=Обработки.ГенераторЗаявкиНаПеремещениеВОнлайнЗону.Создать();
	ГенЗаказа.Заказ=ЭтотОбъект.Ссылка;
	ГенЗаказа.Аптека=ФизическаяАптека;
	ГенЗаказа.ОнлайнЗона=Склад;
	
	ГенЗаказа.ПолучитьФорму("Форма").Открыть();
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель1ЗаказПоПрайсу(Кнопка)
	
	
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= Обработки.СводныйПрайсПоСпискуТовара.ПолучитьФорму("Форма","",КлючУник);
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.Аптека = ФизическаяАптека;
	ФормаПодбора.ИнтернетЗаказ = Ссылка;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.ОткрытьМодально(0);
	
	
КонецПроцедуры

Процедура ТребуемыйПроцентПредоплатыПриИзменении(Элемент) //ТСО 29.10.2014
	
	Если ТребуемыйПроцентПредоплаты > 0 Тогда
		
		ПроинформироватьКлиентаОПредоплате = Истина;
		
		Если Не ЗначениеЗаполнено(Емэйл) Тогда
			Сообщить("Не заполнено поле ""Емайл"". Письмо клиенту о необходимости предоплаты не будет отправлено.", СтатусСообщения.Важное);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Очистить();

ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить("","Доставка бесплатно");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 50 руб."),"Доставка 50 руб.");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 100 руб."),"Доставка 100 руб.");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 150 руб."),"Доставка 150 руб.");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 200 руб."),"Доставка 200 руб.");






ЦветаСтрокиПоСтатусам=Новый Соответствие;
ЦветаСтрокиПоСтатусам.Вставить(Перечисления.ИА_СтатусСтрокиЗаказа.Дефектура,Новый Цвет(255,200,200)); //R
ЦветаСтрокиПоСтатусам.Вставить(Перечисления.ИА_СтатусСтрокиЗаказа.Собран,Новый Цвет(200,255,200));    //G
ЦветаСтрокиПоСтатусам.Вставить(Перечисления.ИА_СтатусСтрокиЗаказа.Заказан,Новый Цвет(200,200,255));   //B
ЦветаСтрокиПоСтатусам.Вставить(Перечисления.ИА_СтатусСтрокиЗаказа.НетСтатуса,Новый Цвет(255,255,255));//W
ЦветаСтрокиПоСтатусам.Вставить(Перечисления.ИА_СтатусСтрокиЗаказа.НетИНеБудет,Новый Цвет(180,180,180));//grey
ЦветаСтрокиПоСтатусам.Вставить(Перечисления.ИА_СтатусСтрокиЗаказа.НеПробивать,Новый Цвет(150,150,150));//даркgrey
ЦветаСтрокиПоСтатусам.Вставить(Перечисления.ИА_СтатусСтрокиЗаказа.ОтложенЗаказ,Новый Цвет(255,250,217));//даркgrey



КЗПоОстаткам=Новый Запрос("ВЫБРАТЬ
                          |	ПартииЖНВЛСОстатки.КолвоОстаток
                          |ИЗ
                          |	РегистрНакопления.ПартииЖНВЛС.Остатки(
                          |			,
                          |			Склад = &Склад
                          |				И Товар = &Товар
                          |				И Фирма = &Фирма) КАК ПартииЖНВЛСОстатки");
