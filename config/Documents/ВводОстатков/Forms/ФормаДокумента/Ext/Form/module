//----------------------------< Посерийный учет! >--------------------------------GtG---
// Серия создается при приходе! поэтому подбор по АП без серии!!!
//-----------------------------------------------------------GtG---


Перем КонтрольнаяСуммаШапкиИсходногоДокументаПередОткрытием ;
Перем КонтрольнаяСуммаТЧИсходногоДокументаПередОткрытием;

Перем СписокКолонокДляПересчетаПоЦене;
Перем СписокКолонокПересчетаЦЕН;

Перем ТЗСвНДС;

Перем СтарыйНомерСтроки;


 //============================================================================ GtG ===
 Процедура ОбновитьСверткуПоНДС  () 
     // Назначение:
 	// Обновляет свертку по НДС
 	// 
     // 
 	//--------------------------------------------------------------------------------
	
	ТЗСвНДС =  Товар.Выгрузить();  	
	ТЗСвНДС.Свернуть("СтавкаНДС","СуммаЗакуп,НДСЗакуп");
	
	ЭлементыФормы.СверткаПоНДС.Значение=ТЗСвНДС;
	ЭлементыФормы.СверткаПоНДС.СоздатьКолонки();
	ЭлементыФормы.СверткаПоНДС.Колонки.Сдвинуть(1,-1);
	
	ЭлементыФормы.СверткаПоНДС.Колонки.Получить(1).ОтображатьВПодвале=Истина;
	ЭлементыФормы.СверткаПоНДС.Колонки.Получить(1).ТекстПодвала=ТЗСвНДС.Итог("НДСЗакуп");
	ЭлементыФормы.СверткаПоНДС.Колонки.Получить(1).ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
	
	ЭлементыФормы.СверткаПоНДС.Колонки.Получить(2).ОтображатьВПодвале=Истина;
	ЭлементыФормы.СверткаПоНДС.Колонки.Получить(2).ТекстПодвала=ТЗСвНДС.Итог("СуммаЗакуп");
	ЭлементыФормы.СверткаПоНДС.Колонки.Получить(2).ГоризонтальноеПоложениеВПодвале=ГоризонтальноеПоложение.Право;
	
	
	
	
	ЭлементыФормы.СверткаПоНДС.Подвал=Истина;
	
	
	
	
  КонецПроцедуры
  //============================================================================ GtG ===
  
//==========================================================GtG====
Процедура ПодтянутьРозничныеЦены ()  
	//----------------------------------
	//Назначение:
	//  Тянем Розн цены из регистра розн цен срез последних
	//  
	//  
	//  
	//----------------------------------
	СписокПартий=Товар.ВыгрузитьКолонку( "Партия");
	
	
	ТХТ="ВЫБРАТЬ
	    |	ЦеныСрезПоследних.Партия,
	    |	ЦеныСрезПоследних.ЦенаРознГТТ КАК Цена
	    |ИЗ
	    |	РегистрСведений.Цены.СрезПоследних(
	    |		,
	    |		Партия В (&СписокПартий)
	    |			И РЕГИОН = &РегионСклада) КАК ЦеныСрезПоследних";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("СписокПартий",СписокПартий);
		Запрос.УстановитьПараметр("РегионСклада",Склад.Регион);
		
		
		ТЗ=Запрос.Выполнить().Выгрузить();	
	
	    Для каждого Стр из Товар Цикл
			
			СтрЦен=ТЗ.Найти(Стр.Партия,"Партия");
			Если СтрЦен = Неопределено Тогда
				Сообщить("По строке " + Стр.НомерСтроки + " не подтянулась цена розн");
			Иначе
				Стр.ЦенаРозн=СтрЦен.Цена*Стр.Коэфф; // за идеальную сферическую единицу * коэфф текущей ЕИТ
				Стр.СуммаРозн=Стр.ЦенаРозн*Стр.КоличествоФакт;
				Стр.НДСРозн=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(Стр.СуммаРозн,Стр.СтавкаНДС);
			КонецЕсли;
		КонецЦикла;	
КонецПроцедуры	//ПодтянутьРозничныеЦены
//============================================================================ GtG ===
Процедура КонтрольИзмененияЗакупочныхЦенПоАП() Экспорт
	  
	  ВОЗВРАТ; // ибо оказалось ненужным. 
	  
	  
	  
	  
	  
	  
	  
	//------- Изменение цен - туда сливаем все товары по которым нужно
	// изменять регламентированную закупочную цену, еще что-то и т.д. 
	// 1 приходный документ = 1 документ изменения цен
	// При проведении документа изменения цен цены в АП меняются и можно пересчитать
	// документ прихода (расценка должна среагировать и новых записей не появится)
	// Док изменения цен вычищается если существовал, или создается новый
	
	ТЗВыб=ОМ6_НайтиИзменениеЦен(ЭтотОбъект.Ссылка); //объект может и не понадибиться если все ОК
	
	//============================< Шерстим имеющиеся записи по изменению цен >================================GtG===
	Для Каждого СТЗ Из  ТЗВыб Цикл
		ИзмЦен=СТЗ.ИзмЦенДок.ПолучитьОбъект();
		Если ИзмЦен.Ссылка.Проведен тогда // проведен - изменял цены АП
			ИзмЦен=Документы.ИзменениеЦен.ПустаяСсылка(); // пропускаем пусть висит
			Продолжить; // Нам не нужен пенопласт
		Иначе
			//Попытка
				ИзмЦен.Удалить();// Удалим  по любому
				ИзмЦен=Документы.ИзменениеЦен.ПустаяСсылка();// потом возникнет новый
			//Исключение
				// ну ни шмогла я, ни шмогла
			//КонецПопытки;
		КонецЕсли; 	
	КонецЦикла;
	
	ИзмЦенСуществует=Ложь; // типа еще не создавался, может и не создастся вообще

	ЕстьЗаписиИзмЦен=Ложь;
	
	ТЧТОвар=ЭтотОбъект.Товар;
	
	//============================< Шерстим товар документа на отклонения от регламентированной закупки >================================GtG===
	Для каждого СтрТЧ Из  ТЧТОвар Цикл
		
		Ап=СтрТЧ.Товар;
		
		РеглЗакупЦенаИзАП=АП.ЗакупочнаяЦена;
		ПроблемаСЗакупЦеной= Ложь; // Если станет Да, то формируется документ про изменение закупочных цен
		
		Если РеглЗакупЦенаИзАП=0 Тогда
			РеглЗакупЦенаИзАП=АП.ЗакупочнаяЦена;
			ПроблемаСЗакупЦеной=Истина; // в документ на изменение заукп и пр цен в АП
		Иначе // можно определить отклонение
			ПроцОтклРЗакупОтАП=100*(СтрТЧ.ЦенаЗакуп-РеглЗакупЦенаИзАП)/РеглЗакупЦенаИзАП;
			Если (ПроцОтклРЗакупОтАП>Константы.МаксПроцОтклоненияОтЗакупЦены.Получить()) или
				(ПроцОтклРЗакупОтАП<Константы.МинПроцОтклоненияОтЗакупЦены1.Получить())
				Тогда
				ПроблемаСЗакупЦеной=Истина; // в документ на изменение заукп и пр цен в АП
			КонецЕсли;
		КонецЕсли;
		
		
		// Вот тут--->
		//------------ если возникла проблема с закупочной ценой то запишем это в документ изменение цен ----
		Если ПроблемаСЗакупЦеной=Истина тогда
			Если ИзмЦенСуществует=Ложь тогда
				
				НовИзмЦен=Документы.ИзменениеЦен.СоздатьДокумент();
				НовИзмЦен.Дата=ТЕКУЩАЯдАТА();
				НовИзмЦен.ДокументОснование=ЭтотОбъект.Ссылка;
				НовИзмЦен.Записать(РежимЗаписиДокумента.Запись);
				ИзмЦен=НовИзмЦен;// объект
				ИзмЦенСуществует=Истина;// чтобы больше не создавалось и быстро проверялось условие
			КонецЕсли;	   
			СтрокаИзмЦен=ИзмЦен.Товар.Добавить();
			
			
			СтрокаИзмЦен.Товар=АП;
			СтрокаИзмЦен.СтараяЗакупЦенаАП=РеглЗакупЦенаИзАП;
			СтрокаИзмЦен.ЗакупЦенаПоДок=СтрТЧ.ЦенаЗакуп;
			ЕстьЗаписиИзмЦен=Истина;
			ИзмЦен.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЕсли;
		//----- конец записи в изм цен--------
		
	КонецЦикла;
	
	//----- Зафиксируем изменения закуп цен документом -----
	
	Если ИзмЦенСуществует=Истина Тогда
	//Если ИзмЦен.ссылка.Пустая()=Ложь тогда
		Если ЕстьЗаписиИзмЦен=Истина тогда
			Предупреждение("У некоторых товаров отклонение в закупочной цене от АП больше допустимого!
			| Создан документ Изменение цен №"+ИзмЦен.Номер+"  от "+ИзмЦен.Дата,20);
			ИзмЦен.Записать(РежимЗаписиДокумента.Запись);
		Иначе
			//---- ВСЕ ОК цены в норме - грохнем документ измЦен-----
			ИзмЦен.Удалить(); // насмерть
		КонецЕсли;
	КонецЕсли;	 
	
	
КонецПроцедуры	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ОбновитьСверткуПоНДС();
	//ОМ4_ПередЗаписью(ЭтотОбъект,Товар,КонтрольнаяСуммаШапкиИсходногоДокументаПередОткрытием ,КонтрольнаяСуммаТЧИсходногоДокументаПередОткрытием);
	ЭтотОбъект.СуммаДок=Товар.Итог("СуммаЗакуп");
	ЭтотОбъект.СуммаДокРозн=Товар.Итог("СуммаРозн");
	
	
	//ОтказИзЗаСтавкиНДС=Ложь;
	//Для каждого Стр Из Товар Цикл
	//	
	//	Если Стр.СтавкаНДС.Пустая() Тогда
	//		ОтказИзЗаСтавкиНДС= ИСТИНА;
	//	КонецЕсли; 
	//КонецЦикла; 
	//Если ОтказИзЗаСтавкиНДС= ИСТИНА Тогда
	//	ПРедупреждение("Не указана ставка НДС!");
	//	Отказ=ОтказИзЗаСтавкиНДС;
	//КонецЕсли;
	

	Если Склад.Пустая()  Тогда
		Предупреждение("Не указан склад!");
		Отказ= ИСТИНА;
	КонецЕсли; 

	//==================<Для Расценки нужно чтобы в партии были данные>===================GtG====21.11.2007
	//Для каждого Стр из Товар Цикл
	//	ОМ1_ОбновитьДанныеПартииИзВводаОстатков(Стр, ЭтотОбъект);//МО_ОбновитьДанныеПартии  (Стр); // прицепить к партии серию
	//	МО_ОбновитьДанныеСерии 	 (Стр); // прицепить к серии сертификат
	//КонецЦикла;	
	//================================================GtG====КОНЕЦ==21.11.2007
	
	
  КонецПроцедуры


//============================================================================ GtG ===
Функция ПроверкаЗаполненияКритическиВажныхЗначенийДляСтроки  (ТекСтрокаТЧ) 
    // Назначение:
	// проверяет заполнены ли поля Цена и ставка ндс
	// Возвращает истина или ложь
    // 
	//--------------------------------------------------------------------------------
	 Если ТекСтрокаТЧ.Количество=0 Тогда
		 Предупреждение("Не указано количество!");
		 Возврат Ложь;
	 КонецЕсли;
	 
	 Если ТекСтрокаТЧ.СтавкаНДС.Пустая()  Тогда
		 Предупреждение("Не указана сатвка НДС!");
		 Возврат Ложь;
	 КонецЕсли;

     

     Возврат Истина;
КонецФункции
//============================================================================ GtG ===

//============================================================================ GtG ===
Функция ТекущаяСтрокаДокумента  () 
    // Назначение:
	// Дает объект - тек строку документа
	// 
    // 
	//--------------------------------------------------------------------------------
	ТекСтрокаТЧ="";
	ИндексТекСтроки=Товар.Индекс(ЭлементыФормы.Товар.ТекущаяСтрока);
    ТекСтрокаТЧ=ТОвар.Получить( ИндексТекСтроки); // Рез. тип объекта - СтрокаТабличнойЧасти

	Возврат ТекСтрокаТЧ;
	
КонецФункции
//============================================================================ GtG ===


Процедура СобытиеТоварСертификат_Перетаскивание(Элемент,  ПараметрыПеретаскивания , СтандартнаяОбработка, Строка, Колонка) 
КонецПроцедуры

Процедура СобытиеТоварСертификат_НачалоПеретаскивания(Элемент,  ПараметрыПеретаскивания , СтандартнаяОбработка) 
	ЭлементыФормы.Товар.ИзменятьПорядокСтрок = Ложь;
	СтарыйНомерСтроки=ПараметрыПеретаскивания.Значение.НомерСтроки;
КонецПроцедуры

Процедура СобытиеТоварСертификат_ПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания , СтандартнаяОбработка, Строка, Колонка) 
	
		
	
КонецПроцедуры


Процедура СобытиеТоварСертификат_ОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания , СтандартнаяОбработка) 
     ЭлементыФормы.Товар.РазрешитьПеретаскивание=Истина;
     ЭлементыФормы.Товар.ИзменятьПорядокСтрок = Ложь;
     
     ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
     Если ИмяТекКол="Сертификат" Тогда
          ТД = ЭтотОбъект.Товар.Получить(СтарыйНомерСтроки-1);  // Товар из таблицы куда копируем сертификат
          ЭлементыФормы.Товар.ИзменятьПорядокСтрок = Ложь; // не работает
          ;
          Если Вопрос("Скопировать сертификат из "+ Символы.ВК+Символы.ПС+ ""+ ПараметрыПеретаскивания.Значение.Товар.ПолучитьОбъект()+ " в "+ Символы.ВК+Символы.ПС+ ТД.Товар+ " ?", РежимДиалогаВопрос.ДаНет, 0) = КодВозвратаДиалога.Нет Тогда
               СтандартнаяОбработка = ложь;
               Возврат;
          КонецЕсли;
          Попытка
               НовыйСертификат = ПараметрыПеретаскивания.Значение.Сертификат.ПолучитьОбъект().Скопировать(); // Создаем новый элемент справочника сертификат  из сертификата той строки откуда тянем
               НовыйСертификат.Владелец = ТД.Товар; // Устанавливаем подчиненность
               НовыйСертификат.Записать();
               ТД.Сертификат=НовыйСертификат.Ссылка; // пишем ссылку в таблицу
          Исключение
               Сообщить("Не удалось скопировать сертификат...");
               СтандартнаяОбработка = Ложь;
          КонецПопытки;
     КонецЕсли;
     
КонецПроцедуры


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	//ОМ41_ПередОткрытиемДокумента  (ЭтотОбъект,ЭтаФорма,Отказ);
	
	Если ЭтотОбъект.ЭтоНовый() Тогда
		Статус=Перечисления.СтатусПрихода.Черновик;
	КонецЕсли; 	
		
КонецПроцедуры

Процедура ПриОткрытии()
	Если ЭтоНовый()=Истина Тогда
		Склад=Константы.ОсновнойСклад.Получить();
		Фирма = Склад.Фирма;
	КонецЕсли;  
	
	Если Склад.ТипСклада = Перечисления.ТипыМХ.Опт Тогда
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Ложь;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Ложь;
	Иначе
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Истина;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Истина;
	КонецЕсли;
	
	
	ЭтаФорма.ЭлементыФормы.Товар.РазрешитьНачалоПеретаскивания = Истина;
	ЭтаФорма.ЭлементыФормы.Товар.РазрешитьПеретаскивание = Истина;
	ЭтаФорма.ЭлементыФормы.Товар.УстановитьДействие("Перетаскивание", Новый Действие("СобытиеТоварСертификат_Перетаскивание"));
	ЭтаФорма.ЭлементыФормы.Товар.УстановитьДействие("НачалоПеретаскивания", Новый Действие("СобытиеТоварСертификат_НачалоПеретаскивания"));
	ЭтаФорма.ЭлементыФормы.Товар.УстановитьДействие("ПроверкаПеретаскивания", Новый Действие("СобытиеТоварСертификат_ПроверкаПеретаскивания"));
	ЭтаФорма.ЭлементыФормы.Товар.УстановитьДействие("ОкончаниеПеретаскивания", Новый Действие("СобытиеТоварСертификат_ОкончаниеПеретаскивания"));

	//ОМ4_ПРиОткрытии(ЭтотОбъект,Товар,КонтрольнаяСуммаШапкиИсходногоДокументаПередОткрытием,КонтрольнаяСуммаТЧИсходногоДокументаПередОткрытием);
	
	ОбновитьСверткуПоНДС  ();
	
	//ДоступностьРасценки(Склад);

	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект,СписокПечатныхФорм);
	
	
	Если ЭтотОбъект.Проведен=Истина ТОгда
		
		//Предупреждение("ВНИМАНИЕ! ДОКУМЕНТ УЖЕ ПРОВЕДЕН!" );
		//
		//ЭлементыФормы.КоманднаяПанель1.Доступность=Ложь;
		ЭтаФорма.ТолькоПросмотр=Истина;
		//ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыОК.Доступность=Ложь;
		
	КонецЕсли; 	
	
КонецПроцедуры

 
 //============================================================================ GtG ===
 Функция МожноПересчитатьСтроку  (ТекСтрДок, Колонка) 
     // Назначение:
 	// проверяет на заполнение полей ставка НДС, Цена закуп, СуммаЗакуп
 	// 
    // Возврат Истина / Ложь
 	//--------------------------------------------------------------------------------
 	СтрОшибок="";
	
	ПересчетПоЦене=0;
	
	Нельзя=0;
	
	
	Если Найти(СписокКолонокДляПересчетаПоЦене,Колонка+",")<>0 тогда
		ПересчетПоЦене=1;
	КонецЕсли;

	
	
	Если ПересчетПоЦене=1 Тогда
		Если ТекСтрДок["ЦенаЗакупБезНДС"]=0 Тогда
			Нельзя=1;
		КонецЕсли; 
	Иначе
		//----------------------------< Пересчет должен произойти по сумме >--------------------------------GtG---
		Если ТекСтрДок["СуммаЗакуп"]=0 Тогда
			Нельзя=1;
		КонецЕсли; 
	КонецЕсли;
	
	//----------------------------< Расчет всех сумм происходит от колва фактического >--------------------------------GtG--- 
	//Если  (ТекСтрДок.Количество<>0) и (ТекСтрДок.КоличествоФакт=0) Тогда
	//	ТекСтрДок.КоличествоФакт=ТекСтрДок.Количество; // не актуально ибо бойбракнедовоз
	//КонецЕсли; 	
	
	
	
	Если Нельзя=1 Тогда
		//Предупреждение("Не заполнены необходимые для пересчета поля строки документа:"+ СтрОшибок);
		Состояние("Пересчет пока невзможен, не все поля заполнены!");
		Возврат ЛОЖЬ;
	КонецЕсли; 	
	
	Возврат ИСТИНА ;
 КонецФункции
 //============================================================================ GtG ===

Функция НДСЗакупПравильный(ТекСтрокаТЧ)	// Назначение:
	// Проверяет на глюк
	// сумма НДС не должна отличаться на 0,хх от расчетного значения
	// допустимая погрешность ЛимитОтклоненияСуммПриПоступленииТовара от суммы НДС по 1-й штуке
	//============================================================================ GtG ===
	ПРеделПогрешности=Константы.ЛимитОтклоненияСуммПриПоступленииТовара.Получить();
	Если ПроверкаЗаполненияКритическиВажныхЗначенийДляСтроки  (ТекСтрокаТЧ)Тогда
		
		РасчетноеЗначениеНаВсюСумму=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(ТекСтрокаТЧ["СуммаЗакуп"],ТекСтрокаТЧ.СтавкаНДС,2);
		РасчетноеЗначениеНаВсюСумму=Окр(РасчетноеЗначениеНаВсюСумму,2);
		РасчетноеЗначение =РасчетноеЗначениеНаВсюСумму/ТекСтрокаТЧ.КоличествоФакт;
		
		РасчетноеЗначение=Окр(РасчетноеЗначение,2);
		МаксДопПогрешность=ПРеделПогрешности/100* РасчетноеЗначение;
		
		ТекЗн          =Окр(ТекСтрокаТЧ["НДСЗакуп"]/ТекСтрокаТЧ.КоличествоФакт,2); // 1 Шт
		ТекЗнНаВсюСумму=ТекСтрокаТЧ.НДСЗакуп;
		
		
		Погрешность= ТекЗн-РасчетноеЗначение;
		
		Если Погрешность<0 Тогда
			Погрешность=Погрешность*(-1);
		КонецЕсли; 
//		                            -maxD         +maxD
		//----------------------------{-----Rzn-----}--------------------------------------->
//		                     *   *       ^        ^   *      *
//                           |   |       |        |   |      |

		Если  (РасчетноеЗначение+Погрешность> РасчетноеЗначение+МаксДопПогрешность) или (РасчетноеЗначение-Погрешность< РасчетноеЗначение-МаксДопПогрешность)Тогда
			Предупреждение("Странная сумма НДС закуп.!
							|Расчетное значение НДС на всю сумму = "+РасчетноеЗначениеНаВсюСумму+"
							|Текущее значение НДС на всю сумму = "+ТекЗнНаВсюСумму+"
							|
							|Расчетное значение НДС на 1шт       = "+РасчетноеЗначение+"
							|Текущее значение НДС на 1шт       = "+ТекЗн+"
							|
							|Разница в НДС за 1шт. более допустимой: 
							| "+Погрешность+"  >  ("+ПРеделПогрешности+"% * "+РасчетноеЗначение+") = " +Окр(МаксДопПогрешность,5));
			Возврат	ЛОЖЬ;// Нужно пересчитать						
		Иначе
			ВОЗВРАТ ИСТИНА ; // ОК
		КонецЕсли; 
	КонецЕсли; 	
	ВОЗВРАТ ИСТИНА; // по умолчанию все ОК
 КонецФункции 

 
 
//============================================================================ GtG ===
Процедура ПересчетСтрокиДокумента  (ТекСтрД, ИмяКол,БезВопросов= ЛОЖЬ) Экспорт
    // Назначение:
	// Выполняет пересчет строки документа и создает партию если ее нет
	// Если партия есть то изменяет данные хранящиеся в ней.
    // 
	//--------------------------------------------------------------------------------
	///////ТекСтрД.КоличествоФакт=ТекСтрД.Количество-ТекСтрД.БойБрак-ТекСтрД.Недовоз;
	ТекСтрД.Недовоз=ТекСтрД.КоличествоФакт-ТекСтрД.Количество;
	//----------------------------< проверка на заполнение Цены и Ставки НДС >--------------------------------GtG---
	Если МожноПересчитатьСтроку(ТекСтрД,ИмяКол) = ЛОЖЬ Тогда
		Возврат;
	КонецЕсли; 
	
		
	
	//----------------------------< Пересчет по цене >--------------------------------GtG--- 
	Если Найти(СписокКолонокДляПересчетаПоЦене,ИмяКол+",")<>0 тогда
	
		ТекСтрД["ЦенаЗакуп"]=ТекСтрД["ЦенаЗакупБезНДС"]+ТекСтрД["ЦенаЗакупБезНДС"]/100*ТекСтрД.СтавкаНДС.Ставка;
		ТекСтрД["СуммаЗакуп"]=ТекСтрД["ЦенаЗакуп"]*ТекСтрД.КоличествоФАКТ; // !!! ПО ФАКТИЧЕСКОМУ КОЛВУ !!!
		ТекСтрД["НДСЗакуп"]=ТекСтрД["ЦенаЗакупБезНДС"]/100*ТекСтрД.СтавкаНДС.Ставка*ТекСтрД.КоличествоФАКТ;
		
		//----------------------------< свертка >--------------------------------GtG--- 
		ОбновитьСверткуПоНДС  (); 
	КонецЕсли;
	
	//----------------------------< Пересчет по сумме >--------------------------------GtG---
	// Пересчет цен, только тех, сумму которых изменили
	// Причем з вопросом, пересчитать или ну его 
	Если Найти(СписокКолонокПересчетаЦЕН,ИмяКол+",")<>0 Тогда
		
	
		Если БезВопросов=Ложь Тогда // Спросим, надо ли пересчитать цену
			
			
				ТекстВопроса="Изменена закупочная сумма!
				|
				|Можно пересчитать закупочную цену,
				|розничную цену (по проценту наценки) и
				|розничную сумму (по розн. цене).
				|
				|Оставить как введено?";
				
			Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да тогда
				Возврат;
			КонецЕсли; 
		КонецЕсли; 	
		
		//----------------------------< Собственно пересчет Закуп цены >--------------------------------GtG---
		// и процента наценки если ето розн или опт. цена.
		//СуммаОптовая,СуммаРозн,СуммаЗакуп
		Если Найти(ИмяКол,"Закуп")<>0 тогда
			//----------------------------< Пересчет закупочной цены >--------------------------------GtG---
			// Как следствие пересчет розн  цены по  проценту наценки  и далее розн суммы
			
			
			
			
			ТекСтрД["ЦенаЗакуп"]=Окр(ТекСтрД["СуммаЗакуп"]/ТекСтрД.КоличествоФАКТ,2);
			СуммаНДСЗакуп=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД["СуммаЗакуп"],ТекСтрД.СтавкаНДС);
			СуммаНДСЗакупНа1Шт=СуммаНДСЗакуп/ТекСтрД.КоличествоФАКТ;
			ТекСтрД["ЦенаЗакупБезНДС"]=ТекСтрД["ЦенаЗакуп"]-СуммаНДСЗакупНа1Шт;
			
			
			
			//----------------------------< Проверим НДС закупочный >--------------------------------GtG---
			Если НДСЗакупПравильный(ТекСтрД)= ЛОЖЬ Тогда
				// подозрительно расходится НДС
				Если Вопрос("Пересчитать НДС Закупочный?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
					ТекСтрД["НДСЗакуп"]=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД["СуммаЗакуп"],ТекСтрД.СтавкаНДС);
				КонецЕсли; 
			КонецЕсли; 
			
			
			//ОбновитьДанныеПартии  (ТекСтрД) ; // обновится если есть
			ОбновитьСверткуПоНДС  (); 
			
			Возврат;
		   
		КонецЕсли;                                                 
		
	КонецЕсли; 
	
	Если ИмяКол = "Количество" Тогда
		ТекСтрД.СуммаРозн = ТекСтрД.ЦенаРозн*ТекСтрД.КоличествоФакт;	
		ТекСтрД.НДСРозн = ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(ТекСтрД.СуммаРозн,ТекСтрД.СтавкаНДС);
	КонецЕсли;
	
	Если ИмяКол = "ЦенаРозн" Тогда
		ТекСтрД.СуммаРозн = ТекСтрД.ЦенаРозн*ТекСтрД.КоличествоФакт;	
		ТекСтрД.НДСРозн = ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(ТекСтрД.СуммаРозн,ТекСтрД.СтавкаНДС);
	КонецЕсли;
	
	Если ИмяКол = "СуммаРозн" Тогда
		ТекСтрД.ЦенаРозн = Окр(ТекСтрД.СуммаРозн/ТекСтрД.КоличествоФакт,2);
		ТекСтрД.НДСРозн = ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(ТекСтрД.СуммаРозн,ТекСтрД.СтавкаНДС);		
	КонецЕсли;
	
	//----------------------------< Проверка НДС Закуп при изменении вручную >--------------------------------GtG---
	Если ИмяКол="НДСЗакуп"  Тогда
		
		Если НДСЗакупПравильный(ТекСтрД)= ЛОЖЬ Тогда
				// подозрительно расходится НДС
				Если Вопрос("Пересчитать НДС Закупочный?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
					ТекСтрД["НДСЗакуп"]=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД["СуммаЗакуп"],ТекСтрД.СтавкаНДС);
				КонецЕсли; 
			КонецЕсли; 
	КонецЕсли; 	
	
	//Если ИмяКол="ЦенаГосРегистрации" или ИмяКол="ЦенаПроизводителя" Тогда
	//	
	//	МО_ПроверкаЦеныПроизводителя(ТекСтрД);
	//КонецЕсли; 
	

	
	
ТекСтрД.СуммаОтклоненийСНДС	= ТекСтрД.ЦенаЗакуп*(ТекСтрД.Недовоз);
	
//ОбновитьДанныеПартии  (ТекСтрД) ; // обновится если есть
ОбновитьСверткуПоНДС  (); 

     

    
 КонецПроцедуры
 //============================================================================ GtG ===

 Процедура ТоварПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	 
	 	 
	 ТСД=ТекущаяСтрокаДокумента();
	 ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
	 
	 
	 Если (ИмяТекКол="КоличествоФакт") или (ИмяТекКол="БойБрак")  или (ИмяТекКол="Недовоз") Тогда
		 // Назначение:
		 // При изменении количества пересчитываем ВСЕ колонки по строке документа
		 // Если сумма и НДС закуп меняется кричим об этом
		 //============================================================================ GtG ===
		 
		 ИмяТекКол="Количество";
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол); // пересчет при условии изменения количества
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 //Если ИмяТекКол="КоличествоФакт" Тогда
	 //	// Назначение:
	 //	// При изменении количества пересчитываем ВСЕ колонки по строке документа
	 //	// Если сумма и НДС закуп меняется кричим об этом
	 //	//============================================================================ GtG ===
	 //	ТСД.КоличествоФакт=ТСД.Количество-ТСД.БойБрак-ТСД.Недовоз;
	 //	ПересчетСтрокиДокумента  (ТСД, ИмяТекКол); // пересчет при условии изменения количества
	 //	ВОЗВРАТ ;
	 //КонецЕсли; 

	 
	 Если ИмяТекКол="Товар" Тогда
		 // Назначение:
		 // При изменении товара изменяем партию, (владельца) если она существует или создаем новую
		 //============================================================================ GtG ===
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="ЦенаЗакупБезНДС" Тогда
		 // Назначение:
		 // При измененииЗакупки без ндс пересчет всех сумм (закуп, опт, розн)
		 // если була задана сумма вручную контроль несхождения
		 // модификация партии если она существует
		 //============================================================================ GtG ===
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="СтавкаНДС" Тогда
		 // Назначение:
		 // При СтавкаНДС без ндс пересчет всех сумм  (закуп, опт, розн)
		 // если була задана сумма вручную контроль несхождения
		 // модификация партии если она существует
		 //============================================================================ GtG ===
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="ЦенаРозн" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="СуммаРозн" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли;	 
	 
	 Если ИмяТекКол="ПроцентРознНац" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 
	 Если ИмяТекКол="СуммаЗакуп"  Тогда
		  ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="НДСЗакуп"  Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 //============================< Резервные затычки >================================GtG===

	 Если ИмяТекКол="" Тогда
		 
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 
КонецПроцедуры


Процедура ПодборПоАПНажатие(Элемент)
	// Назначение:
	// Запускает процесс подбора по справочнику АП
	// Открывает форму для подбора АП
	// 
	//============================================================================ GtG ===
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!");
		ВОЗВРАТ ;
	КонецЕсли; 
	
	
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПолучитьФорму("ФормаДляПодбора","",КлючУник);
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.ОткрытьМодально(0);
КонецПроцедуры



//============================================================================ GtG ===
Процедура ДобавитьТоварКолво  (ВыбТовар,ВыбКолво,ВыбСерия,РезДобавления="") 
    // Назначение:
	// Добавляет строку товара в документ
	// выполняет расчет числовых полей
    // 
	//--------------------------------------------------------------------------------
	
	ПарамПоиска = Новый  Структура;
	ПарамПоиска.Вставить("Товар",ВыбТовар);
	ПарамПоиска.Вставить("Серия",ВыбСерия);
	
	
	МассивНайденныхСтрок= Товар.НайтиСтроки(ПарамПоиска);
	
	Если МассивНайденныхСтрок.Количество()=0 Тогда
		
		
			//----------------------------< Добавляем только при добавлении КоэффДобавления=1  >--------------------------------GtG---
			НоваяСтрокаВыбТовара=Товар.Добавить();
			НоваяСтрокаВыбТовара.Товар=ВыбТовар;
			НоваяСтрокаВыбТовара.Количество=ВыбКолво;
			НоваяСтрокаВыбТовара.КоличествоФакт=ВыбКолво;
			НоваяСтрокаВыбТовара.СтавкаНДС=ВыбТовар.СтавкаНДС;
			//НоваяСтрокаВыбТовара.МестоНаСкладе=ОМ1_ПолучитьМестоНаСкладе(ВыбТовар,Склад);
			НоваяСтрокаВыбТовара.ЦенаГосРегистрации=0;
			//-----------------< единица  >----------------GtG---
			НоваяСтрокаВыбТовара.ЕИТ=ОМ1_ПолучитьЕИТПоУм(ВыбТовар);
			
			Если НоваяСтрокаВыбТовара.ЕИТ=Справочники.ЕИТ.ПустаяСсылка() Тогда
				 НоваяСтрокаВыбТовара.Коэфф=0;
			 Иначе
				 НоваяСтрокаВыбТовара.Коэфф=НоваяСтрокаВыбТовара.ЕИТ.К;
			КонецЕсли;
			
			ОбщСтрокаВТ=НоваяСтрокаВыбТовара;
			
			//-----------------< создаем партию  >----------------GtG--- 
			НоваяСтрокаВыбТовара.Партия=ОМ1_СоздатьПартиюТовара(ВыбТовар).Ссылка;
			
	Иначе
		СтрокаВТ=МассивНайденныхСтрок[0];
		СтрокаВТ.Количество=СтрокаВТ.Количество+ВыбКолво;
		СтрокаВТ.КоличествоФакт=СтрокаВТ.КоличествоФакт+ВыбКолво;
        ОбщСтрокаВТ=СтрокаВТ;
	КонецЕсли; 
	
		  
	Если ОбщСтрокаВТ.ЦенаЗакупБезНДС<>0 Тогда
		// Запускаем пересчет строки по цене ибо она была задана ранее
		// Имеет смысл при добавлении товара в сущ строку
		ПересчетСтрокиДокумента  (ОбщСтрокаВТ, "ЦенаЗакупБезНДС", ИСТИНА);// пересчитывает ничего не спрашивая
	КонецЕсли; 
	
	РезДобавления=ОбщСтрокаВТ;
	
 КонецПроцедуры
 //============================================================================ GtG ===
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	// Назначение:
	// Обрабатывает событие окончания подбора из формы подбора АП
	// На вход получает ТЗ товара
	// Циклически запускает обработку добавления и расчета строки документа
	//============================================================================ GtG ===
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда
		Для Ы=0 По ЗначениеВыбора.Количество()-1 Цикл
			
		      СтрТЗ= ЗначениеВыбора.Получить(Ы) ;
			  
			  ВыбТовар=СтрТЗ.Товар;
			  ВыбКолво=СтрТЗ.Количество;
			  
			  ДобавитьТоварКолво(ВыбТовар,ВыбКолво,Справочники.Серии.ПустаяСсылка());
		
		КонецЦикла;
	КонецЕсли; 
КонецПроцедуры

Процедура КоманднаяПанель1Расценить(Кнопка)
	
	
	ОМ6_КоманднаяПанельКнопкаРасценить(ЭтаФорма,ЭтотОбъект,Товар);
	
	
	
	//
	//
	//// Вставить содержимое обработчика.
	//Если ЭтаФорма.ТолькоПросмотр Тогда
	//	Предупреждение("Редактирование документа запрещено!");
	//	ВОЗВРАТ ;
	//КонецЕсли; 
	//
	////------------------<Чтобы расценка сработала данные о закупочной цене должны быть сохранены в партии>-------------------GtG----23.11.2007
	//
	//Для каждого Стр из Товар Цикл
	//	Если  Стр.ЦенаЗакуп=0 Тогда  // нет цены - нет расценки
	//		Продолжить;
	//	КонецЕсли; 	
	//	
	//	Состояние("Обновляем даннные партий..."+Стр.Партия);
	//	Если Стр.КоличествоФакт<>0 Тогда
	//		ЦенаЗакупПартии=Стр.СуммаЗакуп/Стр.КоличествоФакт;
	//	Иначе
	//		ЦенаЗакупПартии=Стр.ЦенаЗакуп;
	//	КонецЕсли;
	//	
	//	ЕСли Стр.Партия.ЦенаЗакуп<>ЦенаЗакупПартии тогда // чтоб быстрее
	//		МО_ОбновитьДанныеПартии  (Стр); 
	//	КонецЕсли; 	
	//КонецЦикла;	

	//
	////------------------<Новый или измененный документ перед расценкой нужно записать>-------------------GtG----21.11.2007
	//Если ЭтотОбъект.ЭтоНовый()=Истина или ЭтотОбъект.Модифицированность()=Истина тогда
	//	
	//	Ответ=Вопрос("Для расценки документ необходимо записать. 
	//	|ЗАПИСАТЬ ДОКУМЕНТ?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.ДА,"НУЖНО ЗАПИСАТЬ ДОКУМЕНТ!");
	//	
	//			
	//	Если Ответ=КодВозвратаДиалога.Да тогда
	//		ЭтотОбъект.Записать(РежимЗаписидокумента.Запись);
	//	Иначе
	//		Возврат; // документ не записан, расценка невозможна
	//	КонецЕсли;
	//КонецЕсли;
	//
	////--------------------------------------------------------GtG----КОНЕЦ--21.11.2007	
	//	
	//	

	//КлючУник=  Новый   УникальныйИдентификатор();
	//ПолучитьОбщуюФорму("ОбщФормаРасценки",ЭтаФорма,КлючУник).Открыть();
КонецПроцедуры


Процедура СкладОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
// если выбран оптовый склад, то на нем розничные цены не учитываем
// если поступление на розничный склад, то на нем нужно учесть и в рознице 
// и в оптовой 

     //ДоступностьРасценки(ВыбранноеЗначение);
	Если ВыбранноеЗначение.ТипСклада = Перечисления.ТипыМХ.Опт Тогда
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Ложь;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Ложь;
	Иначе
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Истина;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Истина;
	КонецЕсли;	 
	 
	 
	 //----------------------------< Проверить ячейки хранения >--------------------------------GtG---
	 //Для каждого Стч  Из Товар Цикл
	 //	Если Стч.МестоНаСкладе.Владелец<>ВыбранноеЗначение Тогда
	 //   	 СТЧ.МестоНаСкладе=ОМ1_ПолучитьМестоНаСкладе(СТЧ.Товар,ВыбранноеЗначение);
	 //	КонецЕсли;	 
	 //КонецЦикла; 
	 Фирма = ВыбранноеЗначение.Фирма;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	//КонтрольИзмененияЗакупочныхЦенПоАП();
КонецПроцедуры

Процедура ТоварЕИТОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТС=ЭлементыФормы.ТОвар.ТекущаяСтрока;
	ТС.Коэфф= ВыбранноеЗначение.К;
КонецПроцедуры

Процедура КнопкаПечатьНажатие(Элемент)
		
	ОМ10_КнопкаПечатьНажатие (ЭтотОбъект,ЭтаФорма);
	
		
КонецПроцедуры


Процедура ТоварПередНачаломДобавления(Элемент, Отказ, Копирование)
	// Запрещено добавлять стандартным образом
	ПодборПоАПНажатие("");
	Отказ= ИСТИНА;
	
	
КонецПроцедуры

Процедура СложнаяОтсрочкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ОтсрочкаПлатежа=ВыбранноеЗначение.Отсрочка;
КонецПроцедуры


Процедура ОсновныеДействияФормыОсновныеДействияФормыОК(Кнопка)
	// при нажатии этой кнопки статус меняется на 
	// обработан оператором, документ проводится и закрывается
	Статус=Перечисления.СтатусПрихода.ОбработанОператором;
	ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
	ЭтаФорма.Закрыть();
КонецПроцедуры


Процедура КоманднаяПанель1РасщепитьСтрокуПоСериям(Кнопка)
	// Вставить содержимое обработчика.
	
	ТСД=ТекущаяСтрокаДокумента();
	Сколько=0;
	ВвестиЧисло(Сколько,"Сколько другой серии?",10,0);
	Пока сколько>ТСД.Количество-ТСД.БойБрак-ТСД.Недовоз-1  Цикл // хотябы 1 штука должна остаться
		Предупреждение("Должна остаться хотя бы 1 штука от исходной серии!");
		ВвестиЧисло(Сколько,"Сколько другой серии?",10,0);
	КонецЦикла; 
	
	
	
	НТСД="";
	
	ДобавитьТоварКолво(ТСД.Товар,Сколько,Справочники.Серии.ПустаяСсылка(),НТСД); // НТСД изменится и станет новой добавленной строкой таб части 
	
	НТСД.Баркод	= ТСД.Баркод;
	НТСД.БойБрак=0;
	НТСД.ЕИТ=ТСД.ЕИТ;
	НТСД.Коэфф=ТСД.Коэфф;
	НТСД.Недовоз=0;
	НТСД.НомерГТД=ТСД.НомерГТД;
	НТСД.Сертификат=ТСД.Сертификат;
	НТСД.СтавкаНДС=ТСД.СтавкаНДС;
	НТСД.Товар=ТСД.ТОвар;
	НТСД.ЦенаГосРегистрации=ТСД.ЦенаГосРегистрации;
	
	НТСД.ЦенаЗакупБезНДС=ТСД.ЦенаЗакупБезНДС;
	НТСД.ЦенаПроизводителя=ТСД.ЦенаПроизводителя;
	НТСД.ЦенаРозн=ТСД.ЦенаРОзн;
	
	ТСД.Количество=ТСД.Количество-Сколько;
	
	ПересчетСтрокиДокумента  (ТСД,"Количество");
	ПересчетСтрокиДокумента  (НТСД,"Количество");
	
	//Товар.Сортировать("Товар");
КонецПроцедуры

Процедура ТоварПриАктивизацииСтроки(Элемент)
	Если Товар.Количество() = 0 Тогда
		КНТ = "";
		Возврат;
	КонецЕсли;
	КНТ=""+Элемент.ТекущаяСтрока.Товар.Код+" :"+Элемент.ТекущаяСтрока.Товар.Наименование;

		
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Показать короткое название товара

	Если ДанныеСтроки.ЕИТ.ПометкаУдаления=Истина ТОгда
		Для Каждого Яч из ОформлениеСтроки.Ячейки Цикл
			Яч.ЦветФона = Новый Цвет(255,200,200);
		КонецЦикла;
	КонецЕсли;
	
	
	//Если ЭлементыФормы.Товар.Колонки.КороткоеНазвание.Видимость=ложь ТОгда
	//	Возврат;
	//КонецЕсли;	

	//Кор//откоеНазвание=ОформлениеСтроки.Ячейки.Кор//откоеНазвание;
	
	//Если  СтрДлина(СокрЛП(Ко//роткоеНазвание.Текст))>0 тогда
	//	Возврат;
	//КонецЕсли;	
	
	//Ко//роткоеНазвание.УстановитьТекст(ДанныеСтроки.Товар.Ко//роткоеНазвание);
	
	Если ДанныеСтроки.Серия.Пустая()=Ложь ТОгда
		 ОформлениеСтроки.Ячейки.СрокГодности.УстановитьТекст(Формат(ДанныеСтроки.Серия.СрокГодности,"ДФ=dd.MM.yyyy"));
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1Запомнить_КМХ(Кнопка)
	// Вставить содержимое обработчика.
	
	ТЗ=Товар.Выгрузить();
	
	ДЛя Каждого Стр из ТЗ Цикл           
		
		АП=Стр.ТОвар.Ссылка;
		КМХ=Стр.МестоНаСкладе.Ссылка;
		
	    Выб=Справочники.ПривязкаАПКСкладскомуМесту.Выбрать(,АП);
		
		Следующий=Ложь;
		Пока Выб.Следующий() Цикл
			Если Выб.Место.Ссылка=КМХ тогда
				Следующий=Истина;
				сОСТОЯНИЕ("УЖЕ ПРИВЯЗАН "+АП +" К "+КМХ);
				Прервать; // уже задан
			КонецЕсли;
		КонецЦикла;
		
		Если Следующий=Истина Тогда
			Продолжить;
		КонецЕсли;	
				
		ПривязкаКМХ= Справочники.ПривязкаАПКСкладскомуМесту.СоздатьЭлемент();
		ПривязкаКМХ.Владелец=АП;
		ПривязкаКМХ.Место=КМХ;
		ПривязкаКМХ.Склад=Склад.Ссылка;
		ПривязкаКМХ.Записать();
		сОСТОЯНИЕ("ПРИВЯЗАН "+АП +" К "+КМХ);
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормы1КарточкаТОвара(Кнопка)
	// Вставить содержимое обработчика.
	ТСД=ТекущаяСтрокаДокумента  ();
	
	Карточка=Отчеты.ДвижениеТовара1.Создать();
	
	Карточка.ВыбПартия=ТСД.Партия;
	
	Карточка.ВыбСклад=Склад;
	
	Карточка.ВыбТовар=ТСД.ТОвар;
	Карточка.ВыбФирма=Склад.Фирма;
	Карточка.НачПер=НачалоГода(Дата);
	Карточка.КонПер=Дата;
	
	
	Ф=Карточка.ПолучитьФорму("Форма");
	
	Ф.Открыть();
	
	
КонецПроцедуры

Процедура ТоварСерияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение.Забракована=Истина Тогда
		Предупреждение("ЭТА СЕРИЯ ЗАБРАКОВАНА! Все количество считаем браком!");
		ТСД=ТекущаяСтрокаДокумента();
		ТСД.БойБрак=ТСД.Количество-ТСД.Недовоз;
		ПересчетСтрокиДокумента  (ТСД, "ЦенаЗакупБезНДС");
		//ВыбранноеЗначение=Справочники.Серии.ПустаяСсылка();
	КонецЕсли;	
	// переехало в партию автоматом не выбирается//ТекущаяСтрокаДокумента().НомерГТД = ВыбранноеЗначение.НомерГТД;
КонецПроцедуры


Процедура ТоварСерияНачалоВыбора(Элемент, СтандартнаяОбработка)
	//------------------<Контроль изменения серии задним числом>-------------------GtG---- 
	ТХТ="ВЫБРАТЬ
	|	СУММА(ПартииЖНВЛСОбороты.КолвоРасход) КАК КолвоРасход,
	|	ПартииЖНВЛСОбороты.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ПартииЖНВЛС.Обороты(
	|		&ГраницаПослеДокумента,
	|		&Граница3ГодаПослеДокумента,
	|		Регистратор,
	|		Товар.Ссылка = &ВыбТовар
	|		    И Фирма.Ссылка = &ВыбФирма
	|		    И Склад.Ссылка = &ВыбСклад
	|		    И Партия.Ссылка = &ВыбПартия
	|		    ) КАК ПартииЖНВЛСОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииЖНВЛСОбороты.Регистратор";
	
	
	
	ТСД=ТекущаяСтрокаДокумента();
	
	Партия=ТСД.Партия;
	
	ТриГодаВСекундах=3*365*24*60*60;
	
	Если Партия.Пустая()=Ложь тогда
		
		Запрос= Новый Запрос;
		Запрос.Текст=ТХТ;
		
		
		ГрСразуПосле=Новый Граница(Дата,ВидГраницы.Исключая); 
		ГрПо=Новый Граница(Дата+ТриГодаВСекундах,ВидГраницы.Включая);
		
		ГрСразуДО=ГрСразуПосле;// НЕ ВКЛЮЧАЯ ДОКУМЕНТ
		
		
		
		Запрос.УстановитьПараметр("ВыбТовар",ТСД.ТОвар);
		Запрос.УстановитьПараметр("ВыбФирма",Склад.Фирма);
		Запрос.УстановитьПараметр("ВыбСклад",Склад);
		Запрос.УстановитьПараметр("ВыбПартия",ТСД.Партия);
		Запрос.УстановитьПараметр("ГраницаПослеДокумента",ГрСразуПосле);
		Запрос.УстановитьПараметр("Граница3ГодаПослеДокумента",ГрПо);
		
		ТЗ=Запрос.Выполнить().Выгрузить();
		
		Если ТЗ.Количество()>0 Тогда
			Сообщить(""+ТСД.ТОвар+"   Партия: "+Партия);
			Сообщить("УЖЕ БЫЛ РАСХОД ЭТОЙ Партии!");
			Для Каждого Стр из ТЗ Цикл
				Сообщить(""+Стр.Регистратор+" расход "+Стр.КолвоРасход);
			КонецЦикла;
			СтандартнаяОбработка=Ложь;  // отключает процесс выбора из справочника
		КонецЕсли;//ТЗ.Количество()>0 
	КонецЕсли;//Партия.Пустая()=Ложь	
	
	КонецПроцедуры

Процедура ПриЗакрытии()
	
	//Если ЭтотОбъект.ЭтоНовый()=Истина ТОгда
	//	//------------------<Удаляем партии>-------------------GtG----21.11.2007
	//	
	//	Для каждого Стр из Товар Цикл
	//		Прт=Стр.Партия;
	//		Стр.Партия="";
	//		ПРТ.ПолучитьОбъект().Удалить();
	//	КонецЦикла;	
	//	
	//Иначе	
	//	
	//	
	//КонецЕсли; 	

КонецПроцедуры

Процедура ТоварПередУдалением(Элемент, Отказ)
КонецПроцедуры

Процедура ТоварЦенаПроизводителяПриИзменении(Элемент)
	ТСД= ТекущаяСтрокаДокумента();
	МО_ПроверкаЦеныПроизводителя(ТСД);
    ПересчетСтрокиДокумента(ТСД,"Количество");
КонецПроцедуры

Процедура КоманднаяПанель1РозничныеЦеныПоРасценке(Кнопка)
	Если Склад.ТипСклада=Перечисления.ТипыМХ.Розн ТОгда
		//------------------<Затянем розничные цены по расценке>-------------------GtG----23.01.2008
		ПодтянутьРозничныеЦены();
	Иначе
		Предупреждение("На оптовом складе розничных цен нет!");
	КонецЕсли; 

КонецПроцедуры

Процедура СкладПриИзменении(Элемент)
	
	Если Элемент.Значение.Фирма <> Фирма Тогда
		Фирма = Элемент.Значение.Фирма;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1ВыгрузитьВАптеку(Кнопка)
	Если Проведен = Истина Тогда 
		Если Статус = Перечисления.СтатусПрихода.ВыгруженНаАптеку Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Документ был ранее выгружен в аптеку. ВЫГРУЗИТЬ еще раз?", Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		Иначе
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Вы действительно хотите выгрузить документ в аптеку?", Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Склад.Делфи = Истина Тогда
			Рез = ВыгрузитьВIDS();
		Иначе
			Рез = ВыгрузитьВАптеку();
		КонецЕсли;
		
		Если Рез = Истина Тогда
			Предупреждение("Документ выгружен!");
		Иначе
			Предупреждение("Документ НЕ выгружен!");
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура ФирмаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если (Склад.Фирма <> ВыбранноеЗначение) и (НЕ Склад.Пустая()) Тогда
		Предупреждение("Нельзя выбрать фирму отличную от фирмы по уже выбранной ранее аптеке!"	);
		ВыбранноеЗначение = Фирма;
	КонецЕсли;
	
	
КонецПроцедуры


СписокКолонокДляПересчетаПоЦене="ЦенаЗакупБезНДС,Количество,КоличествоФакт,СтавкаНДС,";
СписокКолонокПересчетаЦЕН="СуммаЗакуп,";




