Функция СогласованиеДоступно()
	
	Если РольДоступна("ЗаявкиНаОтгрузкуСогласованиеЦО") И Статус = Перечисления.СтатусыЗаявкиНаОтгрузку.Создан Тогда
		Возврат Истина;
	ИначеЕсли РольДоступна("ЗаявкиНаОтгрузкуСогласованиеФИН") И Статус = Перечисления.СтатусыЗаявкиНаОтгрузку.СогласованЦО Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

Процедура УправлениеНадписямиКнопок()
	
	Если Статус = Перечисления.СтатусыЗаявкиНаОтгрузку.Создан или Статус = Перечисления.СтатусыЗаявкиНаОтгрузку.СогласованЦО Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Согласовать";
	Иначе 
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Отмена согласования";
	КонецЕсли;
	
	Если Проведен Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыСохранить.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыСохранить.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры


Процедура ПриОткрытии()
	
	УправлениеНадписямиКнопок();
	ЭлементыФормы.ТЧ.Страницы.ЗаказИнвойс.Видимость = Ложь;
	
	Если ЭтоНовый() Тогда
		Статус = Перечисления.СтатусыЗаявкиНаОтгрузку.Создан;	
	КонецЕсли;
	
	
	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект,СписокПечатныхФорм);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнСогласования(Кнопка)
	
	Если СогласованиеДоступно() = Ложь Тогда
		Предупреждение("Недостаточно прав для согласования документа!");	
		Возврат;
	КонецЕсли;
	
	
	
	Если НЕ Проведен Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Согласовать документ?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
		Если РольДоступна("ЗаявкиНаОтгрузкуСогласованиеЦО") и Статус = Перечисления.СтатусыЗаявкиНаОтгрузку.Создан Тогда
			Статус = Перечисления.СтатусыЗаявкиНаОтгрузку.СогласованЦО;
			ТекстСогласования = "Согласован ЦО";
		ИначеЕсли РольДоступна("ЗаявкиНаОтгрузкуСогласованиеФИН") и Статус = Перечисления.СтатусыЗаявкиНаОтгрузку.СогласованЦО Тогда
			Статус = Перечисления.СтатусыЗаявкиНаОтгрузку.СогласованФИН;
			ТекстСогласования = "Согласован ФИН";
		Иначе
			Предупреждение("Недостаточно прав для согласования документа!");	
			Возврат;
		КонецЕсли;
		
		СогласованКем = ПараметрыСеанса.ТекущийСотр;
		
		Изменение = Изменения.Добавить();
		Изменение.Дата = ТекущаяДата();
		Изменение.КомментарийИзменения = ТекстСогласования;
		Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
		Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
		
		
	ИначеЕсли НЕ Проведен  и (Статус = Перечисления.СтатусыЗаявкиНаОтгрузку.СогласованФИН или Статус = Перечисления.СтатусыЗаявкиНаОтгрузку.СогласованЦО) Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Отменить согласование?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		Статус =  Перечисления.СтатусыЗаявкиНаОтгрузку.Создан;
		
		Изменение = Изменения.Добавить();
		Изменение.Дата = ТекущаяДата();
		Изменение.КомментарийИзменения = "Отмена согласования ";
		Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
		Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;		
	Иначе
		Возврат;
	КонецЕсли;
	                               
	
	Записать(РежимЗаписиДокумента.Запись);
	
	УправлениеНадписямиКнопок();
		
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	УправлениеНадписямиКнопок();
	
КонецПроцедуры

Процедура КоманднаяПанельПерекодировкаОбновитьТаблицуПерекодировки(Кнопка)
	
	ОбновитьТаблицуПерекодировки();
	
КонецПроцедуры

Процедура ТЧПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = 1 Тогда //Перекодировка
		ОбновитьТаблицуПерекодировки();
	КонецЕсли;		
	
КонецПроцедуры

Процедура ОбновитьТаблицуПерекодировки()
	
	//ТСО {12.11.2015 #0044}
	
	Перекодировка = Новый ТаблицаЗначений;
	Перекодировка.Колонки.Добавить("НомерСтроки",,"Номер строки", 5);
	Перекодировка.Колонки.Добавить("Товар",,"Товар", 50);
	Перекодировка.Колонки.Добавить("КодТовара",,"Код товара АВЕ", 15);
	Перекодировка.Колонки.Добавить("КодТовараПоставщика",,"Код товара поставщика", 20);
	
	ЭлементыФормы.Перекодировка.СоздатьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СвязкиТовараСПоставщиком.ТоварФирмы КАК ТоварФирмы,
	|	МАКСИМУМ(СвязкиТовараСПоставщиком.КодТовараПоставщика) КАК КодТовараПоставщика
	|ИЗ
	|	Справочник.СвязкиТовараСПоставщиком КАК СвязкиТовараСПоставщиком
	|ГДЕ
	|	СвязкиТовараСПоставщиком.Поставщик = &ПоставщикСвязок
	|	И СвязкиТовараСПоставщиком.ТоварФирмы В(&Товары)
	|
	|СГРУППИРОВАТЬ ПО
	|	СвязкиТовараСПоставщиком.ТоварФирмы";
	
	Запрос.УстановитьПараметр("ПоставщикСвязок", Справочники.Поставщики.НайтиПоКоду(582));
	Запрос.УстановитьПараметр("Товары", Товар.ВыгрузитьКолонку("Товар"));
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРезультата = РезультатЗапроса.Выгрузить();
	
	Для Каждого ТекСтр Из Товар Цикл
		НовСтр = Перекодировка.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, ТекСтр);

		НайденнаяСтрока = ТаблицаРезультата.Найти(ТекСтр.Товар, "ТоварФирмы");
		Если НайденнаяСтрока <> Неопределено Тогда
			НовСтр.КодТовараПоставщика = НайденнаяСтрока.КодТовараПоставщика;
		Иначе
			НовСтр.КодТовараПоставщика = 0;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры  

Процедура ПерекодировкаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.КодТовараПоставщика = 0 Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(255, 204, 153);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельТовараПоискВПрайсах(Кнопка)
	
	//ТСО {09.12.2015 	
	ТекСтрокаТовар = ЭлементыФормы.Товар.ТекущаяСтрока;
	Если ТекСтрокаТовар = Неопределено Тогда
		Сообщить("Не выбрана строка товара", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	СтрокаПоиска = ТекСтрокаТовар.Товар.Наименование;
	Аптека = Справочники.МестаХранения.НайтиПоКоду(241); 
	
	КлючУник = Новый УникальныйИдентификатор();
	ФормаПодбора = Обработки.ПодобратьТоварПоставщика.ПолучитьФорму("Форма", "", КлючУник);
	ФормаПодбора.Аптека			= Аптека;
	ФормаПодбора.ВладелецФормы	= ЭтаФорма;
	ФормаПодбора.СтрокаПоиска	= СтрокаПоиска;
	ФормаПодбора.ПоискПо		= 2;
	ФормаПодбора.ОткрытьМодально(0);  	
	//ТСО }
	
КонецПроцедуры


Процедура КоманднаяПанельТоваракнПоказатьОприходованныйТовар(Кнопка)
	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КаталогПрайсЛистов.КодПрайсЛиста
	               |ПОМЕСТИТЬ ВТКодПрайса
	               |ИЗ
	               |	РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
	               |ГДЕ
	               |	КаталогПрайсЛистов.Настройка = &Настройка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Связки.ТоварФирмы КАК Товар,
	               |	СУММА(Прайсы.Количество) КАК Остаток
	               |ПОМЕСТИТЬ ВТОстаток
	               |ИЗ
	               |	РегистрСведений.ПрайсЛисты КАК Прайсы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКодПрайса КАК ВТКодПрайса
	               |		ПО Прайсы.КодПрайсЛиста = ВТКодПрайса.КодПрайсЛиста
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
	               |		ПО (Связки.Поставщик = Прайсы.ПоставщикСвязки)
	               |			И (Связки.КодТовараПоставщика = Прайсы.Код)  и Связки.ТоварФирмы в (&Товары)
	               |ГДЕ
	               |	Связки.ТоварФирмы В(&Товары)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Связки.ТоварФирмы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТКодПрайса
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Выборка.КодТовара,
	               |	Выборка.Товар,
	               |	СУММА(Выборка.КоличествоЗаказ) КАК КоличествоЗаказ,
	               |	СУММА(Выборка.ЦенаЗаказа) КАК ЦенаЗаказа,
	               |	СУММА(Выборка.КоличествоИнвойс) КАК КоличествоИнвойс,
	               |	СУММА(ЕСТЬNULL(ВТОстаток.Остаток, 0)) КАК ВПрайсе,
	               |	СУММА(Выборка.ЦенаИнвойса) КАК ЦенаИнвойса
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗаказТовар.КодТовара КАК КодТовара,
	               |		ЗаказТовар.Товар КАК Товар,
	               |		СУММА(ЗаказТовар.Количество) КАК КоличествоЗаказ,
	               |		ЗаказТовар.Цена КАК ЦенаЗаказа,
	               |		0 КАК ЦенаИнвойса,
	               |		0 КАК КоличествоИнвойс
	               |	ИЗ
	               |		Документ.ЗаказПроизводителю.Товар КАК ЗаказТовар
	               |	ГДЕ
	               |		ЗаказТовар.Ссылка = &Ссылка
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ЗаказТовар.Товар,
	               |		ЗаказТовар.Цена,
	               |		ЗаказТовар.КодТовара
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ИнвойсТовар.КодТовара,
	               |		ИнвойсТовар.Товар,
	               |		0,
	               |		0,
	               |		ИнвойсТовар.ЦенаОтпускнаяСНДС,
	               |		СУММА(ИнвойсТовар.Количество)
	               |	ИЗ
	               |		Документ.Инвойс.Товар КАК ИнвойсТовар
	               |	ГДЕ
	               |		ИнвойсТовар.Ссылка.Производитель = &Производитель
	               |		И ИнвойсТовар.Ссылка.ДокументОснование = &Ссылка
	               |		И ИнвойсТовар.Ссылка.Дата >= ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, -1)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ИнвойсТовар.Товар,
	               |		ИнвойсТовар.ЦенаОтпускнаяСНДС,
	               |		ИнвойсТовар.КодТовара) КАК Выборка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаток КАК ВТОстаток
	               |		ПО (ВТОстаток.Товар = Выборка.Товар)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Выборка.КодТовара,
	               |	Выборка.Товар
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Выборка.Товар.Наименование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТОстаток";
				   
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Настройка",Справочники.НастройкиОбмена.НайтиПоКоду(384));
	Запрос.УстановитьПараметр("Товары",Товар.ВыгрузитьКолонку("Товар"));
	Запрос.УстановитьПараметр("Производитель",Производитель);
	Запрос.УстановитьПараметр("Дата",Дата);
	Рез = Запрос.Выполнить();
	
	ТЗЗаказИнвойс = Рез.Выгрузить();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Инвойс.Ссылка КАК Инвойс,
	               |	Инвойс.ДатаОприходования,
	               |	Инвойс.Проведен,
	               |	Инвойс.ПометкаУдаления как Удален,
	               |	Инвойс.ДатаОплаты,
	               |	Инвойс.СтатусОплатыИнвойса,
	               |	Инвойс.Сумма
	               |ИЗ
	               |	Документ.Инвойс КАК Инвойс
	               |ГДЕ
	               |	Инвойс.Производитель = &Производитель
	               |	И Инвойс.ДокументОснование = &Ссылка
	               |	И Инвойс.Дата >= ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, -1)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Инвойс.ДатаОприходования";
				   
	Рез = Запрос.Выполнить();
	
	ТЗИнвойсов = Рез.Выгрузить();
	
	ЭлементыФормы.ТЧ.Страницы.ЗаказИнвойс.Видимость = Истина;
	ЭлементыФормы.ТЧ.ТекущаяСтраница = ЭлементыФормы.ТЧ.Страницы.ЗаказИнвойс;
	
	
	
КонецПроцедуры


Процедура ТЗИнвойсовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Проведен Тогда
		ОформлениеСтроки.Ячейки.Проведен.ЦветТекста = WebЦвета.Зеленый;
	Иначе
		ОформлениеСтроки.Ячейки.Проведен.ЦветТекста = WebЦвета.Оранжевый;
	КонецЕсли;
	
	Если ДанныеСтроки.Удален Тогда
		ОформлениеСтроки.Ячейки.Удален.ЦветТекста = WebЦвета.Красный;
	Иначе
		ОформлениеСтроки.Ячейки.Удален.ЦветТекста = WebЦвета.Черный;
	КонецЕсли;
	
КонецПроцедуры


Процедура КоманднаяПанель2Действие(Кнопка)
	
    ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВФ.МножественныйВыбор = Ложь;
	
    ДВФ.Выбрать();
    
    Если ПустаяСтрока(ДВФ.ПолноеИмяФайла)=Ложь Тогда
        
        ДД=Новый ДвоичныеДанные(ДВФ.ПолноеИмяФайла);
        
        
        ХЗ=Новый ХранилищеЗначения (ДД, Новый СжатиеДанных(9));
		
		НоваяСтрока = Приложения.Добавить();
		НоваяСтрока.Наименование = "Приложение " + НоваяСтрока.НомерСтроки;
		НоваяСтрока.Приложение=ХЗ;
        НоваяСтрока.ИмяФайла=СтрЗаменить(ДВФ.ПолноеИмяФайла,ДВФ.Каталог,"");
 
    КонецЕсли;
	
	
КонецПроцедуры


Процедура КоманднаяПанель2ОткрытьПрицеп(Кнопка)
	
	ТС=ЭлементыФормы.Приложения.ТекущаяСтрока;
	Если ТС=Неопределено Тогда
		Предупреждение("Не выбрана строка вложения");
		Возврат;
	КонецЕсли;  
	
	ДД=ТС.Приложение.Получить(); // ДвоичныеДанные
	ИФ=ТС.ИмяФайла;
	
	ДД.Записать(КаталогВременныхФайлов()+"\"+ИФ);
	
	ЗапуститьПриложение(КаталогВременныхФайлов()+"\"+ИФ);
	
	
КонецПроцедуры


Процедура КоманднаяПанель2СохранитьФайлНаДиск(Кнопка)
	
    ТС=ЭлементыФормы.Приложения.ТекущаяСтрока;
    Если ТС=Неопределено Тогда
        Предупреждение("Не выбрана строка вложения");
        Возврат;
    КонецЕсли;  
    
    ДД=ТС.Приложение.Получить(); // ДвоичныеДанные
    ИФ=ТС.ИмяФайла;
    
    
    ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
    ДВФ.Выбрать();
    
    ДД.Записать(ДВФ.Каталог+"\"+ИФ);
    
    Сообщить("Приложение сохранено в "+ДВФ.Каталог+"\"+ИФ);
	
КонецПроцедуры


Процедура КоманднаяПанель2кнПечать(Кнопка)
	
	ОМ10_КнопкаПечатьНажатие(ЭтотОбъект,ЭтаФорма);
	
КонецПроцедуры


Процедура КонтрактПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Контракт) Тогда
		Производитель = Контракт.Производитель;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроизводительПриИзменении(Элемент)
	
	Контракт = Документы.КонтрактыПроизводителей.ПустаяСсылка();
	
КонецПроцедуры

Процедура ТоварПриАктивизацииСтроки(Элемент)
	Элемент.ОбновитьСтроки();
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если Элемент.ТекущаяСтрока = ДанныеСтроки Тогда
        ОформлениеСтроки.ЦветФона = Новый Цвет(221, 235, 247);
	КонецЕсли;
	
	Если ДанныеСтроки.ЦенаОтпускнаяОптБезНДС < ДанныеСтроки.МинЦенаОптБезНДС Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(255, 99, 71);
	КонецЕсли;
	
	
	
КонецПроцедуры 

Процедура ОсновныеДействияФормыкнЗакрытьТоварВПутиПоЗаказу(Кнопка)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Выполнить закрытие товара в пути по данному заказу ? ", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	
	
	ДокументЗакрытия = Автозаказ.ЗакрытьТоварыВПутиОптПоЗаявкеНаОтгрузку(Ссылка);
	Если ЗначениеЗаполнено(ДокументЗакрытия) Тогда
		
		ОбщегоНазначения.ЗаписатьСменуСостоянияДокумента(ДокументЗакрытия,РежимЗаписиДокумента.Проведение,Ложь);
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Создан " + ДокументЗакрытия + Символы.ПС + " Открыть документ ? ", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		ФормаДокумента = ДокументЗакрытия.ПолучитьФорму("ФормаДокумента");
		ФормаДокумента.Открыть();
	КонецЕсли;
	
	
КонецПроцедуры

Процедура КоманднаяПанельТовараЗаполнить(Кнопка)
	
	
	Если НЕ ЗначениеЗаполнено(Контракт) Тогда
		Предупреждение("Не выбран контракт");
		Возврат;
	КонецЕсли;
	
	Если Товар.Количество() > 0 Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Таблица товара содержит записи. Очистить?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Товар.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= ПолучитьФорму("ПодборТовара");
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.Контракт = Контракт;
	ФормаПодбора.Производитель = Производитель;
	ФормаПодбора.ОткрытьМодально(0);
	
	
КонецПроцедуры

Процедура ПересчитатьТЧ()
	
	МинимальнаяОптоваяМаржа = Константы.МинимальнаяОптоваяМаржа.Получить();
	МинимальнаяОптоваяМаржаФакторинг = Константы.МинимальнаяОптоваяМаржаФакторинг.Получить();
	
	Для каждого НС из Товар Цикл
			НС.ЦенаСУчетомБонусовБезНДС = Макс(НС.ЦенаЗакупБезНДС - НС.ОптовыйБонус - НС.МаркетинговыйБонус , 0.01);
			НС.ЦенаСУчетомБонусовСНДС = НС.ЦенаСУчетомБонусовБезНДС + Окр(НС.ЦенаЗакупБезНДС*НС.СтавкаЗакупНДС/100,2);
			НС.СуммаСУчетомБонусовБезНДС = НС.ЦенаСУчетомБонусовБезНДС*НС.ПотребностьВКоробах;
			НС.ЦенаОтпускнаяОптБезНДС = Окр(НС.ЦенаОтпускнаяОптСНДС/(1 + НС.СтавкаОптНДС/100),2);
			НС.Маржа = (НС.ЦенаОтпускнаяОптБезНДС - НС.ЦенаСУчетомБонусовБезНДС)*100/НС.ЦенаОтпускнаяОптБезНДС;
			НС.МинЦенаОптБезНДС = Окр(НС.ЦенаСУчетомБонусовБезНДС/(1 - ?(Факторинг,МинимальнаяОптоваяМаржаФакторинг,МинимальнаяОптоваяМаржа)/100),2);
			НС.СуммаОтпускнаяОптСНДС = НС.ЦенаОтпускнаяОптСНДС*НС.ПотребностьВКоробах;
			НС.СуммаОтпускнаяОптБезНДС = НС.СуммаОтпускнаяОптСНДС - Окр(НС.СуммаОтпускнаяОптСНДС*НС.СтавкаОптНДС/100,2);
			НС.СуммаЗакупБезНДС = НС.ЦенаЗакупБезНДС*НС.ПотребностьВКоробах;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)

	Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда
		Товар.Очистить();
		Для каждого стр из ЗначениеВыбора Цикл
			Если стр.ПотребностьВКоробах > 0 Тогда
				НС = Товар.Добавить();
				ЗаполнитьЗначенияСвойств(НС,стр);
			КонецЕсли;
		КонецЦикла;
		ПересчитатьТЧ();
	ИначеЕсли ТипЗнч(ЗначениеВыбора) = Тип("ДокументСсылка.КонтрактыПроизводителей") Тогда
		Контракт =  ЗначениеВыбора;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ФакторингПриИзменении(Элемент)
	
	МинимальнаяОптоваяМаржа = Константы.МинимальнаяОптоваяМаржа.Получить();
	МинимальнаяОптоваяМаржаФакторинг = Константы.МинимальнаяОптоваяМаржаФакторинг.Получить();
	Для каждого НС из Товар Цикл
		НС.МинЦенаОптБезНДС = Окр(НС.ЦенаСУчетомБонусовБезНДС/(1 - ?(Факторинг,МинимальнаяОптоваяМаржаФакторинг,МинимальнаяОптоваяМаржа)/100),2);
	КонецЦикла;

КонецПроцедуры

Процедура КоманднаяПанельТовараКнЗаполнитьИзФайла(Кнопка)
	
	Если Товар.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Таблица товара будет перезаполнена. Продолжить выполнение?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 	
	КонецЕсли;
	
	Товар.Очистить();
	
	Форма = ПолучитьОбщуюФорму("ФормаВыбораФайла");
	Форма.ЗаголовокФормы = "Выберите файл для загрузки";
	Форма.Комментарий = "1) код товара 2) потребность 3) цена отпускная оптовая с НДС";
	ФайлИмпорта = Форма.ОткрытьМодально();
	
	Если Не ЗначениеЗаполнено(ФайлИмпорта) Тогда
		Возврат;
	КонецЕсли;
	
	ВыбФайл = Новый Файл(ФайлИмпорта); 	
	Если Не ВыбФайл.Существует() Тогда
		Сообщить("Не найден файл " + ФайлИмпорта);
		Возврат;
	КонецЕсли; 
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");	
	Исключение
		Сообщить ("Не удалось запустить Excel");
		Возврат;
	КонецПопытки;
  
	Книга = Excel.Workbooks.Open(ФайлИмпорта);	
	Лист = Книга.WorkSheets(1);	
	ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	
	Для Строка = 1 По ВсегоСтрок Цикл
		
		ОбработкаПрерыванияПользователя();
		
		КодТовара = Лист.Cells(Строка,1).Value;
		
		Если Не ЗначениеЗаполнено(КодТовара) Тогда
			Прервать;
		КонецЕсли;
		
		ТекТовар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		
		Если ЗначениеЗаполнено(ТекТовар) Тогда			
			НовСтр = Товар.Добавить();
			НовСтр.Товар					= ТекТовар;
			НовСтр.КодТовара				= КодТовара;
			НовСтр.Потребность				= Лист.Cells(Строка,2).Value;
			НовСтр.ЦенаОтпускнаяОптСНДС		= Лист.Cells(Строка,3).Value;
		Иначе   			
			Сообщить("Не найден товар по коду: " + КодТовара);	
		КонецЕсли;
		
	КонецЦикла;
	
	Excel.Application.Quit(); 
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= ПолучитьФорму("ПодборТовара");
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.Контракт = Контракт;
	ФормаПодбора.Производитель = Производитель;
	ФормаПодбора.ОткрытьМодально(0);	
	
	
КонецПроцедуры

Процедура КонтрактНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Производитель) Тогда
		СтандартнаяОбработка = Ложь;
		ФормаСписка = Документы.КонтрактыПроизводителей.ПолучитьФормуСписка(, ЭтаФорма);
		ФормаСписка.РежимВыбора = Истина;
		ФормаСписка.Отбор.Производитель.Установить(Производитель);
		//Если ЗначениеЗаполнено(Контракт) Тогда
		//	ФормаСписка.ТекущийЭлемент = Контракт;
		//КонецЕсли;
		ФормаСписка.Открыть();		
	КонецЕсли;
	
КонецПроцедуры
