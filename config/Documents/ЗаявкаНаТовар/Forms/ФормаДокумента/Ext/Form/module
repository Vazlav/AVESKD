//Перем ДБФ;
Перем АДО;
Перем ТЗОтказов;


Процедура ПодключитьБазу1C8(АдоЦБ) Экспорт// ---- by  GtG ---- 
	//---------------------- ПОДКЛЮЧАЕМСЯ К БАЗЕ ЧЕРЕЗ ADO -------------------GTG->-
	АдоЦБ=Новый COMОбъект ("AdoDB.Connection");
	АдоЦБ_КоннСтр="DSN=A5_Sklad; Password=;User ID=sa";
	АдоЦБ.Open(АдоЦБ_КоннСтр);
	//------------------------------------------------------------------------GTG-<-  
	//глПРоверкаСостоянияАДО(АдоЦБ,"Подключение к А2005 через ADODB");   
КонецПроцедуры // ----< ПодключитьЦентральнуюБазу_АДО >---- by  GtG ----

Процедура ОбновитьПоставщиков(Условие)
	
	СписокПоставщиков.Очистить();
	
	Если Условие = "ОсуществляютПрямуюПоставку" Тогда
		 УсловиеЗ = " И Поставщики.ОсуществляетПрямыеПоставки = Истина";
	Иначе
		УсловиеЗ = "";
	КонецЕсли;
	
	
	ТХТ = "ВЫБРАТЬ
	      |	Поставщики.Ссылка,
	      |	Поставщики.Наименование
	      |ИЗ
	      |	Справочник.Поставщики КАК Поставщики
	      |ГДЕ
	      |	ИСТИНА = ИСТИНА
	      |	" + УсловиеЗ + "
		  |УПОРЯДОЧИТЬ ПО Поставщики.Наименование
          |";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Рез = Запрос.Выполнить().Выгрузить();
	
	Для каждого стр Из Рез Цикл
	
		СписокПоставщиков.Добавить(стр.Ссылка,стр.Наименование,Истина);
	
	КонецЦикла; 
	
	
КонецПроцедуры

Функция ПроверитьЦенуНаПревышение(Товар,Цена,ТЗСреднихЦен)
	
	Расхождение = "";
	
	НайденнаяСтрока = ТЗСреднихЦен.Найти(Товар,"Товар");
	Если НайденнаяСтрока = Неопределено Тогда
		Возврат Расхождение;
	Иначе
		НайденнаяЦена = Окр(НайденнаяСтрока.ЦенаЗакуп,2);
	КонецЕсли;
	
	Процент = Окр(((Цена/НайденнаяЦена)-1)*100,2);
	
	Если Цена < 50  и Процент >= 10 Тогда
		Расхождение = "Превышает цену " + НайденнаяЦена + " на " + Процент + "% > 10%";
	ИначеЕсли (Цена >= 50) и (Цена < 100) и (Процент >= 5) Тогда
		Расхождение = "Превышает цену " + НайденнаяЦена + " на " + Процент + "% > 5%";
	ИначеЕсли ((Цена >= 100) и (Цена < 300)) и (Процент >= 3) Тогда
		Расхождение = "Превышает цену " + НайденнаяЦена + " на " + Процент + "% > 3%";
	ИначеЕсли (Цена >= 300) и (Процент >= 2) Тогда
		Расхождение = "Превышает цену " + НайденнаяЦена + " на " + Процент + "% > 2%";
	КонецЕсли;
	
	Возврат Расхождение;	
	
КонецФункции

Функция СоздатьТаблицуСреднихЗакупочныхЦен()
	
		//ТХТ = "ВЫБРАТЬ
		//	  |	Т.Товар
		//	  |ПОМЕСТИТЬ ВТ1
		//	  |ИЗ
		//	  |	Документ.ЗаявкаНаТовар.Товар КАК Т
		//	  |ГДЕ
		//	  |	Т.Ссылка = &ТекЗаявка
		//	  |;
		//	  |
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |ВЫБРАТЬ
		//	  |	ПоступлениеТовараТовар.Товар КАК Товар,
		//	  |	СРЕДНЕЕ(ПоступлениеТовараТовар.ЦенаЗакуп) КАК ЦенаЗакуп
		//	  |ИЗ
		//	  |	Документ.ПоступлениеТовара.Товар КАК ПоступлениеТовараТовар
		//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ1 КАК ВТ1
		//	  |		ПО (ВТ1.Товар = ПоступлениеТовараТовар.Товар)
		//	  |ГДЕ
		//	  |	ПоступлениеТовараТовар.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		//	  |	И ПоступлениеТовараТовар.Ссылка.Проведен = ИСТИНА
		//	  |
		//	  |СГРУППИРОВАТЬ ПО
		//	  |	ПоступлениеТовараТовар.Товар
		//	  |;
		//	  |
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |УНИЧТОЖИТЬ ВТ1";
		
		//ТХТ = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//	  |	ПартииЖНВЛСОбороты.Товар КАК Товар,
		//	  |	СРЕДНЕЕ(ПартииЖНВЛСОбороты.СуммаЗакупСНДСПриход / ПартииЖНВЛСОбороты.КолвоПриход) * ПартииЖНВЛСОбороты.Товар.ЕдиницаПоУмолчанию.К КАК ЦенаЗакуп
		//	  |ИЗ
		//	  |	РегистрНакопления.ПартииЖНВЛС.Обороты(&НачДата, &КонДата, Регистратор, ) КАК ПартииЖНВЛСОбороты
		//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаТовар.Товар КАК заявка
		//	  |		ПО (заявка.Товар = ПартииЖНВЛСОбороты.Товар)
		//	  |			И (заявка.Ссылка = &текЗаявка)
		//	  |ГДЕ
		//	  |	ПартииЖНВЛСОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТовара
		//	  |
		//	  |СГРУППИРОВАТЬ ПО
		//	  |	ПартииЖНВЛСОбороты.Товар,
		//	  |	ПартииЖНВЛСОбороты.Товар.ЕдиницаПоУмолчанию.К";
			  
	ТХТ = "ВЫБРАТЬ
	      |	История.Товар КАК Товар,
	      |	Выразить(СРЕДНЕЕ(История.Цена) как Число(10,2)) КАК ЦенаЗакуп
	      |ИЗ
	      |	РегистрСведений.ИсторияЗакупочнойЦены КАК История
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаТовар.Товар КАК заявка
	      |		ПО (заявка.Товар = История.Товар)
	      |			И (заявка.Ссылка = &текЗаявка)
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	История.Товар";
			  
	Запрос = Новый Запрос;
	//НачалоПериода = НачалоДня(ТекущаяДата()) - 60*60*24*10 ;
	//КонецПериода =  КонецДня(ТекущаяДата()) - 60*60*24 ;	
	Запрос.Текст = ТХТ;	
	//Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("текЗаявка",Ссылка);
	//Запрос.УстановитьПараметр("НачДата",НачалоПериода);
	//Запрос.УстановитьПараметр("КонДата",КонецПериода);
	
	ТЗСреднихЦен = Запрос.Выполнить().Выгрузить();	
	возврат ТЗСреднихЦен;
	
КонецФункции

   

Функция ТекущаяСтрокаДокумента  () 
    // Назначение:
	// Дает объект - тек строку документа
	// 
    // 
	//--------------------------------------------------------------------------------
	ТекСтрокаТЧ="";
	ИндексТекСтроки=Товар.Индекс(ЭлементыФормы.Товар.ТекущаяСтрока);
    ТекСтрокаТЧ=ТОвар.Получить( ИндексТекСтроки); // Рез. тип объекта - СтрокаТабличнойЧасти

	Возврат ТекСтрокаТЧ;
	
КонецФункции

Процедура КоманднаяПанель2ПодборПоАП(Кнопка)
	
	Если Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику Тогда
		Предупреждение("Нельзя осуществлять подбор в выгруженном документе!",5);
		Возврат;
	КонецЕсли;
	
	Если Склад = Справочники.МестаХранения.ПустаяСсылка() Тогда
		Предупреждение("Выберите аптеку или склад!");
		Возврат;
	КонецЕсли;
	
	//КлючУник=  Новый   УникальныйИдентификатор();
	//ФормаПодбора= Обработки.ПодобратьТоварПоставщика.ПолучитьФорму("Форма","",КлючУник);
	//ФормаПодбора.МножественныйВыбор= ИСТИНА;
	//ФормаПодбора.ВладелецФормы=ЭтаФорма;
	//ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	//ФормаПодбора.ОткрытьМодально(0);
	
	
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПолучитьФорму("ФормаДляПодбора","",КлючУник);
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.ОткрытьМодально(0);
	
	
	

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	// Назначение:
	// Обрабатывает событие окончания подбора из формы подбора АП
	// На вход получает ТЗ товара
	// Циклически запускает обработку добавления и расчета строки документа
	//============================================================================ GtG ===
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда
		Для Ы=0 По ЗначениеВыбора.Количество()-1 Цикл
			
			Стр= ЗначениеВыбора.Получить(Ы) ;
			//Если Стр.НашКод = "" Тогда
			//	ВыбТовар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
			//Иначе
			//	ВыбТовар=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(Число(Стр.НашКод));
			//КонецЕсли;
			//
			НоваяСтрока = Товар.Добавить();
			НоваяСтрока.Товар = стр.Товар;
			НоваяСтрока.ЕИТ = стр.Товар.ЕдиницаПоУмолчанию;
			НоваяСтрока.Количество = Стр.Колво;
		
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	СписокТиповПоставщика = "ОсуществляютПрямуюПоставку";
	
	ОбновитьПоставщиков(СписокТиповПоставщика);

	
	
	Если (ЭтотОбъект.Проведен = Истина) 
	И (Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику)
	И (НачалоДня(Дата) < НачалоДня(ТекущаяДата())) Тогда
		Предупреждение("Заказ выгружен поставщику! Не редактируется.",5);
		ЭлементыФормы.Товар.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Отбор = РегистрОтказы.Отбор.Найти("Документ");
	Если Отбор <> Неопределено Тогда
		Отбор.ВидСравнения = ВидСравнения.Равно;
		Отбор.Значение = ЭтотОбъект.Ссылка;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	Если ТипЗаявки = Перечисления.ТипЗаявки.АвтозаказSAS Тогда
		ЭлементыФормы.Товар.ТолькоПросмотр = Истина;	
		ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодборПоАП.Доступность = Ложь;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ЗаполнитьШапкуДокументаЗаказа(Док,Поставщик,Склад)
	
	Док.Поставщик=Поставщик;
	Док.Склад = Склад;
	Док.Статус=Перечисления.СтатусЗаказаПоставщику.Создан;
	Док.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
	Док.Дата=ТекущаяДата();
	Док.ДокОснование = Ссылка;
	
	СтрИзм=Док.Изменения.Добавить();
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.КомментарийИзменения="Создан документ при распределении из " + Ссылка;
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
КонецПроцедуры

Процедура ЗаполнитьШапкуДокумента(Док,КодПоставщика,Склад)
	
	СпрПоставщики = Справочники.Поставщики;
	ПоставщикСсылка = СпрПоставщики.НайтиПоКоду(КодПоставщика);
	Если ПоставщикСсылка.Пустая() Тогда
		Сообщить("По коду " + КодПоставщика + " не найден поставщик в справочнике!");	
	КонецЕсли;
	Док.Поставщик=ПоставщикСсылка;
	Док.Склад = Склад;
	Док.Статус=Перечисления.СтатусЗаказаПоставщику.Создан;
	Док.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
	Док.Дата=ТекущаяДата();
	Док.ДокОснование = Ссылка;
	
	СтрИзм=Док.Изменения.Добавить();
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.КомментарийИзменения="Создан документ при распределении из " + Ссылка;
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
КонецПроцедуры	

Процедура ЗаписатьОтказыВРегистр(ДокСсылка,ТаблицаОтказов)


	Если ТаблицаОтказов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ТаблицаОтказов.ЗаполнитьЗначения(ДокСсылка,"Документ");
	
	НаборЗаписей = РегистрыСведений.ОтказыПоЗаказам.СоздатьНаборЗаписей();

	НаборЗаписей.Отбор.Документ.Установить(ДокСсылка); 

	НаборЗаписей.Загрузить(ТаблицаОтказов);
	
	//Для каждого стр из ТаблицаОтказов Цикл
	//	НоваяЗапись = НаборЗаписей.Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяЗапись,стр);
	//	//НоваяЗапись.Документ = ДокСсылка;
	//	//НоваяЗапись.Товар = стр.Товар;
	//	//НоваяЗапись.Количество = стр.Количество;
	//	//НоваяЗапись.Цена = стр.Цена;
	//	//НоваяЗапись.КодТовараПоставщика = стр.КодТовараПоставщика;
	//	//НоваяЗапись.НаименованиеТовараПоставщика = стр.НаименованиеТовараПоставщика;
	//	//НоваяЗапись.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
	//	//НоваяЗапись.ПричинаОтказа = стр.ПричинаОтказа;
	//КонецЦикла;
	
	Для н=0 По 3 Цикл
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Попытка
			
			ТекБлокировка = Новый БлокировкаДанных;
			БлокировкаРегистра = ТекБлокировка.Добавить("РегистрСведений.ОтказыПоЗаказам");
			БлокировкаРегистра.УстановитьЗначение("Документ",ДокСсылка);
			БлокировкаРегистра.Режим = РежимБлокировкиДанных.Исключительный;
			ТекБлокировка.Заблокировать();
			
			НаборЗаписей.Записать();
			ЗафиксироватьТранзакцию();
			Прервать;
		Исключение
			ОтменитьТранзакцию();
			ОбщегоНазначения.Задержка(2);
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	ТаблицаОтказов.Очистить();
	
	
КонецПроцедуры


Процедура СоздатьДокументыЗаказа()
	
	
	ЭлементыФормы.Лог.ДобавитьСтроку("Созданы следующие документы:");
 	ТХТ="select PostID, GoodID8,Qnt,Price,GoodPost,GoodNamePost,NumDoc from zakaz where users = " + Формат(ПараметрыСеанса.ТекущийСотр.Код,"ЧГ=0") + " order by PostID";
	РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);

	ВремКодПоставщика = 0;
	Док=Документы.Заказ.СоздатьДокумент();
  	Попытка 
		РС. MoveFirst();
	Исключение
		ПРедупреждение("Проц.: СоздатьДокументыЗаказа. Нет данных в таблице zakaz");
		Возврат;
	КонецПопытки;
	
	Пока РС.EOF()=0 Цикл
		
		КодПоставщика=РС.Fields(0).VAlue;
		КодТовара = РС.Fields(1).VAlue;
		Количество = РС.Fields(2).VAlue;
		Цена = РС.Fields(3).VAlue;
		КодТовараПоставщика = РС.Fields(4).VAlue;
		ТоварПоставщика = РС.Fields(5).VAlue;
		НомДок = РС.Fields(6).VAlue;
		
		Если ВремКодПоставщика <> КодПоставщика Тогда
			Если ВремКодПоставщика <> 0 Тогда
				Записан = Ложь;
				Пока Записан = Ложь Цикл
					Попытка
						Док.Записать(РежимЗАписиДокумента.Запись);
						ЭлементыФормы.Лог.ДобавитьСтроку("- " + Док);
						Записан = Истина;
					Исключение
						Записан = Ложь;
					КонецПопытки; 
				КонецЦикла;				
				//СообщитьЛог("Создан: "+ Док.Метаданные().Представление()+" №"+Док.Номер+" от "+Док.Дата+"");
				Док=Документы.Заказ.СоздатьДокумент();
			КонецЕсли;
			ЗаполнитьШапкуДокумента(Док,КодПоставщика,Склад);
			ВремКодПоставщика = КодПоставщика;
		КонецЕсли;
		
		
		СпрТовар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
		ТоварСсылка = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		//------------------<Проверим , есть ли товар по полученному коду в справочнике>-------------------Virus----28.12.2007
		Если ТоварСсылка = СпрТовар.ПустаяСсылка() Тогда
			Сообщить("Товар по коду = " + КодТовара + " не найден в справочнике АП!");
			РС. MoveNext(); 
			Продолжить;
		КонецЕсли; //--------------------------------------------------------Virus----КОНЕЦ--28.12.2007
		
		//------- Заполняем табл. часть документа		
		Стр = Док.Товар.Добавить();
		Стр.Товар=ТоварСсылка;
		Стр.Количество=Количество;
		Стр.Цена = Цена;
		Стр.Сумма = Цена*Количество;
		Стр.КодТовараПоставщика = КодТовараПоставщика;
		Стр.НаименованиеТовараПоставщика = ТоварПоставщика;
		Стр.НомерЗаявкиАптеки = НомДок;
		РС. MoveNext(); 
	КонецЦикла;
	
	Записан = Ложь;
	Пока Записан = Ложь Цикл
		Попытка
			Док.Записать(РежимЗАписиДокумента.Запись);	
			Записан = Истина;
			ЭлементыФормы.Лог.ДобавитьСтроку("- " + Док);
		Исключение
			Записан = Ложь;
		КонецПопытки; 
	КонецЦикла;				

КонецПроцедуры  //СоздатьДокументыЗаказа()


Процедура СоздатьДокументыЗаказа_новая_версия(ТЗЗаказа,ТЗСреднихЦен)
	
	Если ТЗЗаказа.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗЗаказа.Сортировать("Поставщик");
	
	ТЗОтказовПоПревышению = Новый ТаблицаЗначений;
	ТЗОтказовПоПревышению.Колонки.Добавить("Дата");
	ТЗОтказовПоПревышению.Колонки.Добавить("Документ");
	ТЗОтказовПоПревышению.Колонки.Добавить("Поставщик");
	ТЗОтказовПоПревышению.Колонки.Добавить("Склад");
	ТЗОтказовПоПревышению.Колонки.Добавить("Товар");
	ТЗОтказовПоПревышению.Колонки.Добавить("ПричинаОтказа");
	ТЗОтказовПоПревышению.Колонки.Добавить("Количество");
	ТЗОтказовПоПревышению.Колонки.Добавить("Цена");
	ТЗОтказовПоПревышению.Колонки.Добавить("Сумма");
	ТЗОтказовПоПревышению.Колонки.Добавить("НомерЗаявкиАптеки");
	ТЗОтказовПоПревышению.Колонки.Добавить("КодТовараПоставщика");
	ТЗОтказовПоПревышению.Колонки.Добавить("НаименованиеТовараПоставщика");
	ТЗОтказовПоПревышению.Колонки.Добавить("Комментарий");

	
	
	Док=Документы.Заказ.СоздатьДокумент();
	ВремПоставщик = Справочники.Поставщики.ПустаяСсылка(); 
	Для каждого стр из ТЗЗаказа Цикл
		Поставщик=стр.Поставщик;
		КодТовара = стр.КодТовара;
		ТоварСсылка = стр.Товар;
		Количество = стр.Количество;
		Цена = стр.Цена;
		Сумма = стр.Сумма;
		КодТовараПоставщика = стр.КодТовараПоставщика;
		ТоварПоставщика = стр.НаименованиеТовараПоставщика;
		СрокГодности = стр.СрокГодности;
		
		Если (ВремПоставщик <> Поставщик)  Тогда
			Если НЕ ВремПоставщик.Пустая() Тогда
				Записан = Ложь;
			
				Для н = 1 по 5 Цикл //Пока Записан = Ложь Цикл
					Попытка
						Док.СуммаДок = Док.Товар.Итог("Сумма");
						Док.Записать(РежимЗАписиДокумента.Запись);
						ЭлементыФормы.Лог.ДобавитьСтроку("- " + Док);
						Записан = Истина;
						ЗаписатьОтказыВРегистр(Док.Ссылка,ТЗОтказовПоПревышению);
						Прервать;
					Исключение
						Записан = Ложь;
						ОбщегоНазначения.Задержка(3);
					КонецПопытки; 
				КонецЦикла;				
				
				ТЗОтказовПоПревышению.Очистить();
				//СообщитьЛог("Создан: "+ Док.Метаданные().Представление()+" №"+Док.Номер+" от "+Док.Дата+"");
				Док=Документы.Заказ.СоздатьДокумент();
			КонецЕсли;
			ЗаполнитьШапкуДокументаЗаказа(Док,Поставщик,Склад);
			ВремПоставщик = Поставщик;
		КонецЕсли;
		
		//==================< Проверим цену на превышение и если оно есть, то выкидываем в отказы > ===========
		Расхождение = ПроверитьЦенуНаПревышение(ТоварСсылка,Цена,ТЗСреднихЦен);
		
		Если Расхождение = "" Тогда 
			//------- Заполняем табл. часть документа		
		//------- Заполняем табл. часть документа		
			Стр = Док.Товар.Добавить();
			Стр.Товар=ТоварСсылка;
			Стр.Количество=Количество;
			Стр.Цена = Цена;
			Стр.Сумма = Сумма;
			Стр.КодТовараПоставщика = КодТовараПоставщика;
			Стр.НаименованиеТовараПоставщика = ТоварПоставщика;
			Стр.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
			Стр.СрокГодности = СрокГодности;
		Иначе //------ Есть превышение цены, значит в отказы закидываем
			Стр = ТЗОтказовПоПревышению.Добавить();
			Стр.Документ=Док.Ссылка;
			Стр.Дата=ТекущаяДата();
			Стр.Склад=Склад;
            Стр.Поставщик = Поставщик;
			Стр.Товар=ТоварСсылка;
			Стр.Количество=Количество;
			Стр.Цена = Цена;
			Стр.Сумма = Сумма;
			Стр.КодТовараПоставщика = КодТовараПоставщика;
			Стр.НаименованиеТовараПоставщика = ТоварПоставщика;
			Стр.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
			Стр.ПричинаОтказа = Перечисления.ПричинаОтказа.ПревышениеЦены;
			Стр.Комментарий = Расхождение;
		Конецесли;		
		


	КонецЦикла;
	
	Записан = Ложь;
	Для н = 1 по 5 Цикл
		Попытка
			Док.СуммаДок = Док.Товар.Итог("Сумма");
			Док.Записать(РежимЗАписиДокумента.Запись);	
			Записан = Истина;
			ЗаписатьОтказыВРегистр(Док.Ссылка,ТЗОтказовПоПревышению);
			ЭлементыФормы.Лог.ДобавитьСтроку("- " + Док);
			Прервать;
		Исключение
			Записан = Ложь;
			ОбщегоНазначения.Задержка(3);
		КонецПопытки; 
	КонецЦикла;	

КонецПроцедуры

//------------------<Создание документа с нераспределенным товаром>-------------------Virus----28.12.2007
Процедура СоздатьДокументНераспределенногоЗаказа()
	
	ТЗОтказов.Очистить();
	ТХТ="select distinct * from z1 where users = " + ПараметрыСеанса.ТекущийСотр.Код + "";
	РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);
  	Попытка 
		РС. MoveFirst();
	Исключение
		//ПРедупреждение("Отказов нет.");
		//Отказы.Очистить();
		//ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
		//ЭтотОбъект.УстановитьПометкуУдаления(Истина);
		Возврат;
	КонецПопытки; 
	
	Отказы.Очистить();
	СпрТовар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
	
	Пока РС.EOF()=0 Цикл
		
		КодТовара = РС.Fields(0).VAlue;
		Количество = РС.Fields(1).VAlue;
		НомДок = РС.Fields(3).VAlue;
		
		ТоварСсылка = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		//------------------<Проверим , есть ли товар по полученному коду в справочнике>-------------------Virus----28.12.2007
		Если ТоварСсылка = СпрТовар.ПустаяСсылка() Тогда
			//Сообщить("Товар по коду = " + КодТовара + " не найден в справочнике АП!");
			РС. MoveNext();
			Продолжить;
		КонецЕсли; //--------------------------------------------------------Virus----КОНЕЦ--28.12.2007
		
		//------- Заполняем табл. часть документа		
		Стр = ТЗОтказов.Добавить();
		Стр.Товар=ТоварСсылка;
		Стр.Количество=Количество;
		Стр.НомерЗаявкиАптеки = НомДок;

		РС. MoveNext(); 
	КонецЦикла;	
   	Записан = Ложь;
	Пока Записан = Ложь Цикл
		Попытка
			ЭтотОбъект.Записать(РежимЗАписиДокумента.Запись);
			Записан = Истина;
			ЗаписатьОтказыВРегистр(Ссылка,ТЗОтказов);
		Исключение
			Записан = Ложь;
		КонецПопытки; 
	КонецЦикла;
	
	
КонецПроцедуры //СоздатьДокументНераспределенногоЗаказа()

//------------------<Создание документа с нераспределенным товаром>-------------------Virus----28.12.2007
Процедура ЗаписатьОтказыИЗаявку_новая_версия(ТЗОтказов)
	
   	
	Для н=1 по 5 Цикл //Пока Записан = Ложь Цикл
		Попытка
			//Комментарий = "";
			Записать(РежимЗАписиДокумента.Проведение);
			Если ТЗОтказов.Количество() > 0 Тогда
				ТЗОтказов.Свернуть("Дата,Документ,Поставщик,Склад,Товар,Цена,Сумма,КодТовараПоставщика,НаименованиеТОвараПоставщика,НомерЗаявкиАптеки,ПричинаОтказа,Комментарий","Количество");				
			КонецЕсли;
			ЗаписатьОтказыВРегистр(Ссылка,ТЗОтказов);
			Прервать;
		Исключение
			ОбщегоНазначения.Задержка(2);
		КонецПопытки; 
	КонецЦикла;
	
	
КонецПроцедуры //СоздатьДокументНераспределенногоЗаказа()


Процедура РаспределитьЗаказНажатие_Новая(Элемент)
	// Был косяк, задвоились заказы, т.к. похоже нажали дважды (DblClick)
	ЭлементыФормы.РаспределитьЗаказ.Доступность = Ложь;
	
	ТЗСреднихЦен = СоздатьТаблицуСреднихЗакупочныхЦен();
	
	РаспределяемыйСписокПоставщиков = Новый Массив;
	Для н = 0 по СписокПоставщиков.Количество()-1 Цикл
		Если СписокПоставщиков[н].Пометка = Ложь Тогда
			Продолжить;
		КонецЕсли;
		РаспределяемыйСписокПоставщиков.Добавить(СписокПоставщиков[н].Значение);
	КонецЦикла;
	ТЗЗаказа = "";
	Если Константы.РаботаБезКонвертера.Получить() = Истина Тогда
		Параметры = Новый Структура;
		Параметры.Вставить("Ссылка",Ссылка);
		Параметры.Вставить("Склад",Склад);
		Параметры.Вставить("Регион",Склад.Регион);
		Параметры.Вставить("ЭксклюзивныйПоставщик",РаспределяемыйСписокПоставщиков);
		РаботаСЗаказамиСервер.РаспределитьЗаявкуСервер(Параметры,Истина);//ОМ21_РаспределитьДокументПоПоставщикам(ЭтотОбъект,ТЗЗаказа,ТЗОтказов,РаспределяемыйСписокПоставщиков,Истина);
	Иначе
		Если Склад.РаботаЧерезКонвертер = Истина Тогда
			ОМ21_ЗаказыПоставщикам.ОМ21_РаспределитьДокументПоПоставщикам366(ЭтотОбъект,ТЗЗаказа,ТЗОтказов,РаспределяемыйСписокПоставщиков,Истина);
		Иначе
			ОМ21_ЗаказыПоставщикам.ОМ21_РаспределитьДокументПоПоставщикам(ЭтотОбъект,ТЗЗаказа,ТЗОтказов,РаспределяемыйСписокПоставщиков,Истина);
		КонецЕсли;
		СоздатьДокументыЗаказа_новая_версия(ТЗЗаказа,ТЗСреднихЦен);
		ЗаписатьОтказыИЗаявку_новая_версия(ТЗОтказов);			
	КонецЕсли;

	
	// Был косяк, задвоились заказы, т.к. похоже нажали дважды (DblClick)
	ЭлементыФормы.РаспределитьЗаказ.Доступность = Истина;
	  
КонецПроцедуры

Процедура РаспределитьЗаказНажатие(Элемент)
	
	
	ПодключитьБазу1C8(Адо);

	//------------------<Сформируем список кодов поставщиков>-------------------Virus----22.01.2008
	Условие = "";
	УсловиеЖНВЛС = ",-9000";

	Для н = 0 по СписокПоставщиков.Количество()-1 Цикл
		Если СписокПоставщиков[н].Пометка = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		Условие = Условие + "," + СписокПоставщиков[н].Значение;
		//Исключающие условия для ЖНВЛС 
		Если СписокПоставщиков[н].Значение = 10 или СписокПоставщиков[н].Значение = 87 Тогда
		Иначе
			УсловиеЖНВЛС = УсловиеЖНВЛС + "," + СписокПоставщиков[н].Значение;
		КонецЕсли;
		
	КонецЦикла; 
	
	Условие = Сред(Условие,2);
	УсловиеЖНВЛС = Сред(УсловиеЖНВЛС,2);
	//Возврат;
		//------------------<Для начала удаляем из таблицы zakaz предыдущий заказ>-------------------Virus----27.12.2007
	ТХТ="delete from zakaz where users = " + Формат(ПараметрыСеанса.ТекущийСотр.Код,"ЧГ=0") + "";
	РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);
	
	ТХТ="delete from z1 where users = " + Формат(ПараметрыСеанса.ТекущийСотр.Код,"ЧГ=0") + "";
	РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);


	//------------------<Далее в цикле передаем в процедуру sp_zakaz код товара и количество 
	//------------------< которое надо нам заказть >-------------------Virus----27.12.2007
	//СообщитьЛог("Распределение позиций заказа по поставщикам...");
	
	Для каждого текСтр Из Товар Цикл
		
		ТХТ="sp_zakaz '" + Формат(текСтр.Товар.Код,"ЧГ=0") + "' ," + Формат(текСтр.Количество,"ЧГ=0") + ", '" + ?(текСтр.Товар.ЖНВЛС = Истина, УсловиеЖНВЛС, Условие) + "' , '" + Формат(ПараметрыСеанса.ТекущийСотр.Код,"ЧГ=0") + "' , '" + текСтр.НомерЗаявкиАптеки + "'";
		РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);
	
	КонецЦикла; 
	
	//------------------<Проверим, есть ли в результирующей таблице данные для заказа>-------------------Virus----28.12.2007
	ТХТ="select count(*) from zakaz  where users = " + Формат(ПараметрыСеанса.ТекущийСотр.Код,"ЧГ=0") + "";
	РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);
  	Попытка 
		РС. MoveFirst();
	Исключение
		ПРедупреждение("Данных в таблице заказа нет.");
		Возврат;
	КонецПопытки; 
	//--------------------------------------------------------Virus----КОНЕЦ--28.12.2007
	КолСтрок = Рс.Fields(0).Value;
	//ЭлементыФормы.Индикатор1.Видимость=Истина;
	//ЭлементыФормы.Индикатор1.Значение=0;
	//ЭлементыФормы.Индикатор1.МаксимальноеЗначение=КолСтрок;
	
	//------------------<А теперь создаем документы заказа по количеству, равным количеству поставщиков , по кот. распределился общий заказ>-------------------Virus----28.12.2007
	СоздатьДокументыЗаказа();
	//--------------------------------------------------------Virus----КОНЕЦ--28.12.2007
	
	СоздатьДокументНераспределенногоЗаказа();

КонецПроцедуры

Процедура КоманднаяПанель2Действие(Кнопка)
	СписокПоставщиков.ЗаполнитьПометки(Истина);
КонецПроцедуры

Процедура КоманднаяПанель2Действие1(Кнопка)
	СписокПоставщиков.ЗаполнитьПометки(Ложь);
КонецПроцедуры

Процедура СписокТиповПоставщикаПриИзменении(Элемент)
	ОбновитьПоставщиков(Элемент.Значение);
КонецПроцедуры

Процедура ОсновныеДействияФормыСравнитьЦены(Кнопка)
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Товар");
	ТЗ.Колонки.Добавить("Цена");
	ТЗ.Колонки.Добавить("СредняяЦена");
	ТЗ.Колонки.Добавить("Процент");
	ТЗ.Колонки.Добавить("ПроцентСравнения");
	Запрос = Новый Запрос;
	НачалоПериода = НачалоДня(ТекущаяДата()) - 60*60*24*5 ;
	КонецПериода =  КонецДня(ТекущаяДата()) - 60*60*24 ;
	
	
	ТХТ = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	      |	СРЕДНЕЕ(ПоступлениеТовараТовар.ЦенаЗакуп) КАК ЦенаЗакуп
	      |ИЗ
	      |	Документ.ПоступлениеТовара.Товар КАК ПоступлениеТовараТовар
	      |ГДЕ
	      |	ПоступлениеТовараТовар.Товар = &Товар
	      |	И ПоступлениеТовараТовар.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	      |	И ПоступлениеТовараТовар.Ссылка.Проведен = ИСТИНА
	      |	";	
	
	Запрос.Текст = ТХТ;	
	
	Для каждого стр из Товар Цикл
		
		Запрос.УстановитьПараметр("Товар",стр.Товар);
		Запрос.УстановитьПараметр("НачДата",НачалоПериода);
		Запрос.УстановитьПараметр("КонДата",КонецПериода);
		
		Рез = Запрос.Выполнить().Выгрузить();
		
		СредняяЦена = Рез.Получить(0).ЦенаЗакуп;
		Если (СредняяЦена = NULL) или (СредняяЦена = 0) Тогда
			Продолжить;
		КонецЕсли;
		СредняяЦена = Окр(СредняяЦена,2);
		
		Процент = Окр(((Стр.Цена/СредняяЦена)-1)*100,2);
		
		ПроцентСравнения = 0;
		Если (Стр.Цена < 100) и (Процент >= 10) Тогда
			ПроцентСравнения = 10;
		ИначеЕсли ((Стр.Цена >= 100) и (Стр.Цена < 300)) и (Процент >= 8) Тогда
			ПроцентСравнения = 8;
		ИначеЕсли (Стр.Цена >= 300) и (Процент >= 5) Тогда
			ПроцентСравнения = 5;
		КонецЕсли;
		
		Если ПроцентСравнения > 0 Тогда
			стрТЗ = ТЗ.Добавить();
			стрТЗ.Товар = стр.Товар;
			стрТЗ.Цена = стр.Цена;
			стрТЗ.СредняяЦена = СредняяЦена;
			стрТЗ.Процент = Процент;
			стрТЗ.ПроцентСравнения = ПроцентСравнения;
		КонецЕсли;
		
		
	КонецЦикла;
	
	Если ТЗ.Количество() > 0 Тогда 
		Таб = Новый ТабличныйДокумент;
		Мак = ПолучитьМакет("Макет");
		текОбласть = Мак.ПолучитьОбласть("Шапка");
		Таб.Вывести(текОбласть);
		текОбласть = Мак.ПолучитьОбласть("ШапкаТаблицы");
		Таб.Вывести(текОбласть);		
		Для каждого стр из ТЗ Цикл
			текОбласть = Мак.ПолучитьОбласть("Строка");
			текОбласть.Параметры.Код = стр.Товар.Код;
			текОбласть.Параметры.Товар = стр.Товар;
			текОбласть.Параметры.Цена = стр.Цена;
			текОбласть.Параметры.СредняяЦена = стр.СредняяЦена;
			текОбласть.Параметры.Процент = стр.Процент;
			текОбласть.Параметры.ПроцентСравнения = стр.ПроцентСравнения;
			Таб.Вывести(текОбласть);	
		КонецЦикла;
		Таб.АвтоМасштаб = Истина;
		Таб.Показать();
	Иначе
		Предупреждение("Превышений по документу нет");
	КонецЕсли;
	
КонецПроцедуры

Процедура ГрохнутьИсходныеСтроки  (МассивИсхСтрок,Набор) 
	 
	 // Удаляет строки тч товар по списку-массиву ссылок на строки
	 
	 Если МассивИсхСтрок.Количество()=0 тогда
		 Возврат;
	 КонецЕсли; 
	 
	 Для Ы=0 по МассивИсхСтрок.Количество()-1 Цикл
		 Набор.Удалить(МассивИсхСтрок.Получить(Ы));
	 КонецЦикла; 
	 Набор.Записать();
 КонецПроцедуры

Процедура КоманднаяПанель3ПеренестиВЗаказ(Кнопка)
	
	Если Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику Тогда
		Предупреждение("Нельзя переносить! Документ уже был выгружен!");
		Возврат;
	КонецЕсли;
	
	ТекСтрока =  ЭлементыФормы.РегистрОтказы.ТекущиеДанные;	
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Стр = Товар.Добавить();
	Стр.Товар = ТекСтрока.Товар;
	Стр.Количество = ТекСтрока.Количество;
	Стр.Цена = ТекСтрока.Цена;
	Стр.Сумма = ТекСтрока.Цена*ТекСтрока.Количество;
	Стр.КодТовараПоставщика = ТекСтрока.КодТовараПоставщика;
	Стр.НаименованиеТовараПоставщика = ТекСтрока.НаименованиеТовараПоставщика;
	Стр.НомерЗаявкиАптеки = ТекСтрока.НомерЗаявкиАптеки;
	
	Если Проведен = Истина Тогда
		Записать(РежимЗаписиДокумента.Проведение);
	Иначе 
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	НаборЗаписей = РегистрыСведений.Отказы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Ссылка); 
	НаборЗаписей.Отбор.Товар.Установить(ТекСтрока.Товар); 
	НаборЗаписей.Отбор.ПричинаОтказа.Установить(ТекСтрока.ПричинаОтказа);
	НаборЗаписей.Записать();
	
	
	Предупреждение("Строка отказа перенесена в заказ!");
	
	
КонецПроцедуры

Процедура КоманднаяПанель4Удалить(Кнопка)
	НаборЗаписей = РегистрыСведений.Отказы.СоздатьНаборЗаписей(); 
	
	НаборЗаписей.Отбор.Документ.Установить(Ссылка); 
	НаборЗаписей.Отбор.Товар.Установить(ЭлементыФормы.РегистрОтказы.ТекущаяСтрока.Товар); 
	НаборЗаписей.Отбор.ПричинаОтказа.Установить(ЭлементыФормы.РегистрОтказы.ТекущаяСтрока.ПричинаОтказа);
	НаборЗаписей.Записать();
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ТипЗнч(ДанныеСтроки.Товар) = Тип("СправочникСсылка.АССОРТИМЕНТНЫЙ_ПЛАН") Тогда
		ДанныеСтрокиТовар = ДанныеСтроки.Товар;
		ОформлениеСтроки.Ячейки.КодТов.УстановитьТекст(ДанныеСтрокиТовар.Код);
		ОформлениеСтроки.Ячейки.Производитель.УстановитьТекст(ДанныеСтрокиТовар.Производитель);
		ОформлениеСтроки.Ячейки.СтатусПроизводителя.УстановитьТекст(ДанныеСтрокиТовар.Производитель.СтатусПроизводителя);
	Иначе
		ОформлениеСтроки.Ячейки.КодТов.УстановитьТекст("");
		ОформлениеСтроки.Ячейки.Производитель.УстановитьТекст("");
		ОформлениеСтроки.Ячейки.СтатусПроизводителя.УстановитьТекст("");
	КонецЕсли;
КонецПроцедуры

Процедура РегистрОтказыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ТипЗнч(ДанныеСтроки.Товар) = Тип("СправочникСсылка.АССОРТИМЕНТНЫЙ_ПЛАН") Тогда
		ДанныеСтрокиТовар = ДанныеСтроки.Товар;
		ОформлениеСтроки.Ячейки.КодТов.УстановитьТекст(ДанныеСтрокиТовар.Код);
		ОформлениеСтроки.Ячейки.Производитель.УстановитьТекст(ДанныеСтрокиТовар.Производитель);
		ОформлениеСтроки.Ячейки.СтатусПроизводителя.УстановитьТекст(ДанныеСтрокиТовар.Производитель.СтатусПроизводителя);
	Иначе
		ОформлениеСтроки.Ячейки.КодТов.УстановитьТекст("");
		ОформлениеСтроки.Ячейки.Производитель.УстановитьТекст("");
		ОформлениеСтроки.Ячейки.СтатусПроизводителя.УстановитьТекст("");
	КонецЕсли;
КонецПроцедуры


	ТЗОтказов = Новый ТаблицаЗначений;
	
	ТЗОтказов.Колонки.Добавить("Дата");
	ТЗОтказов.Колонки.Добавить("Документ");
	ТЗОтказов.Колонки.Добавить("Поставщик");
	ТЗОтказов.Колонки.Добавить("Склад");
	ТЗОтказов.Колонки.Добавить("Товар");
	ТЗОтказов.Колонки.Добавить("ПричинаОтказа");
	ТЗОтказов.Колонки.Добавить("Количество");
	ТЗОтказов.Колонки.Добавить("Цена");
	ТЗОтказов.Колонки.Добавить("Сумма");
	ТЗОтказов.Колонки.Добавить("НомерЗаявкиАптеки");
	ТЗОтказов.Колонки.Добавить("КодТовараПоставщика");
	ТЗОтказов.Колонки.Добавить("НаименованиеТовараПоставщика");
	ТЗОтказов.Колонки.Добавить("Комментарий");



