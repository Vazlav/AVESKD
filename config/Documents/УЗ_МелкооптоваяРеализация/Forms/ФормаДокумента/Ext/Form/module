Процедура ПоказатьИсторию()
	
	ИсторияИзменений.Очистить();
	
	ТЗИстории = ОбщегоНазначения.ПолучитьИсториюИзмененийДокумента(Ссылка);
	Если НЕ ТЗИстории = Неопределено Тогда
		ЭлементыФормы.ИсторияИзменений.Значение = ТЗИстории;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновлениеДоступностиФормы()
	
		
	
	Если НЕ ЗначениеЗаполнено(Статус) или (СтатусДокАптеки = Перечисления.СтатусДокАптеки.КОбработкеОфисом и НЕ Проведен ) Тогда
		ЭтаФорма.ТолькоПросмотр = Ложь;
	Иначе
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;

	
КонецПроцедуры

Процедура ПанельШапкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элемент.ТекущаяСтраница = Элемент.Страницы.ИсторияОфиса Тогда
		ПоказатьИсторию();
	КонецЕсли;
	
КонецПроцедуры


Процедура ОсновныеДействияФормыОсновныеДействияФормыСохранить(Кнопка)
	
	Если Проведен = Истина Тогда
		Предупреждение("Документ НЕ сохранен. В проведенном документе пользуйтесь кнопкой <Провести>!");
		Возврат;
	КонецЕсли;
	
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Вы действительно хотите сохранить документ/изменения?",Режим,0);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнДвижениеПоПартии(Кнопка)
	
	ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	
	Карточка=Отчеты.УЗ_ДвижениеТовара.Создать();
	
	Карточка.КодПартии=ТСД.КодПартии;
	Карточка.ВыбСклад=Склад;
	Карточка.ВыбТовар=ТСД.ТОвар;
	Карточка.ВыбФирма=Фирма;
	Карточка.НачПер=НачалоГода(Дата);
	Карточка.КонПер=Дата;
	
	Ф=Карточка.ПолучитьФорму("Форма");
	
	Ф.Открыть();
	
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОбновлениеДоступностиФормы();
	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект, СписокПечатныхФорм);
	
	//Начало НЭТИ Барданов А.Ю. 14.01.2019 ENT-1031
	ОбновитьДоступностьВидимостьЭлементов();
	//Конец НЭТИ Барданов А.Ю. 14.01.2019 ENT-1031
КонецПроцедуры

Процедура КоманднаяПанель2кнПечать(Кнопка)
	
	ОМ10_КнопкаПечатьНажатие(ЭтотОбъект,ЭтаФорма);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнАннулироватьДокумент(Кнопка)
	
	ПредыдущийСтатус = Статус;
	
	Если СтатусДокАптеки = Перечисления.СтатусДокАптеки.КОбработкеОфисом и НЕ Проведен Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Аннулировать документ?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		ДокументАннулирован = Ложь;
		Попытка
			НачатьТранзакцию();
			Статус = Перечисления.СтатусыСписания.Аннулирован;
			
			Записать(РежимЗаписиДокумента.Запись);
			ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Аннулирование",ПараметрыСеанса.ТекущийСотр,"Аннулирование офисом");
			Если ВыгрузитьВАптеку() = Истина Тогда
				ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Выгружен в аптеку",ПараметрыСеанса.ТекущийСотр,"Выгружено изменение статуса в аптеку");
				ДокументАннулирован = Истина;
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			СтатусСписания = ПредыдущийСтатус;
			Сообщить("Ошибка аннулирования" + ОписаниеОшибки());
		КонецПопытки;
		Если ДокументАннулирован Тогда
			Предупреждение("Документ аннулирован!",10);
			ЭтаФорма.Закрыть();
		Иначе
			Предупреждение("Аннулирование документа не произошло!",10);	
			ЭтаФорма.Закрыть();
		КонецЕсли;
	Иначе
		Предупреждение("Документ может быть аннулирован только при наличии статуса аптеки <К обработке офисом>");
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнОтменитьСогласование(Кнопка)
	
	
	ПредыдущийСтатус = Статус;
	
	Если СтатусДокАптеки = Перечисления.СтатусДокАптеки.КОбработкеОфисом и НЕ Проведен Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Отменить согласование документа и разрешить редактирование документа в аптеке?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		ДокументОтменен = Ложь;
		Попытка
			НачатьТранзакцию();
			Статус = Перечисления.СтатусыСписания.СогласованиеОтменено;
			
			Записать(РежимЗаписиДокумента.Запись);
			ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Отмена согласования",ПараметрыСеанса.ТекущийСотр,"Отмена согласования офисом");
			Если ВыгрузитьВАптеку() = Истина Тогда
				ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Выгружен в аптеку",ПараметрыСеанса.ТекущийСотр,"Выгружено изменение статуса в аптеку");
				ДокументОтменен = Истина;
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			СтатусСписания = ПредыдущийСтатус;
			Сообщить("Ошибка отмены согласования" + ОписаниеОшибки());
		КонецПопытки;
		Если ДокументОтменен Тогда
			Предупреждение("Документ отменен!",10);
			ЭтаФорма.Закрыть();
		Иначе
			Предупреждение("Отмена согласования документа не произошла!",10);	
			ЭтаФорма.Закрыть();
		КонецЕсли;
	Иначе
		Предупреждение("Документ может быть отменен только при наличии статуса аптеки <К обработке офисом>");
	КонецЕсли;

	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыДействие(Кнопка)
	
	Если СтатусДокАптеки = Перечисления.СтатусДокАптеки.КОбработкеОфисом и НЕ Проведен Тогда    		
		//Начало НЭТИ Барданов А.Ю. 14.01.2019 ENT-1031
		ЗаполнитьТЧНесопоставленныеТовары();
		Если НесопоставленныйТовар.Количество() > 0 Тогда
			Предупреждение("Присутствует несопоставленные товары");
			ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
			Возврат;         			
		КонецЕсли;	
		//Конец НЭТИ Барданов А.Ю. 14.01.2019 ENT-1031 		
		СтарыйСтатус = Статус;	
		Попытка
			НачатьТранзакцию();
				Статус = Перечисления.СтатусыСписания.Согласован;
				СогласованКем = ПараметрыСеанса.ТекущийСотр;
				Записать(РежимЗаписиДокумента.Запись);
				ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Согласован",ПараметрыСеанса.ТекущийСотр,"Согласование офисом");
				Если ВыгрузитьВАптеку() = Истина Тогда
					ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Выгружен в аптеку",ПараметрыСеанса.ТекущийСотр,"Выгружено изменение статуса в аптеку");
				Иначе
					Статус = СтарыйСтатус;
					ОтменитьТранзакцию();
					Предупреждение("Не удалось выгрузить документ в аптеку");
					Возврат;
				КонецЕсли;

			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			Статус = СтарыйСтатус;
		КонецПопытки;
	Иначе
		Предупреждение("Документ может быть согласован только при наличии статуса аптеки <К обработке офисом>");
	КонецЕсли;
	//Начало НЭТИ Барданов А.Ю. 14.01.2019 ENT-1031
	ОбновитьДоступностьВидимостьЭлементов();
	//Конец НЭТИ Барданов А.Ю. 14.01.2019 ENT-1031
КонецПроцедуры

////////////////////////////////////////////////////////////
// ДОПОЛНИТЕЛЬНЫЕ ПОЛЯ

Процедура КоманднаяПанельТовараОтображатьДополнительныеПоля(Кнопка)
	
	ОтображатьДополнительныеПоля = Не ОтображатьДополнительныеПоля;
	
	Колонки = ЭлементыФормы.Товар.Колонки;
	Колонки.Производитель.Видимость			= ОтображатьДополнительныеПоля;
	Колонки.Госпитальный.Видимость			= ОтображатьДополнительныеПоля;
	Колонки.ТипСТМ.Видимость				= ОтображатьДополнительныеПоля;
	Колонки.Серия.Видимость					= ОтображатьДополнительныеПоля;
	Колонки.СрокГодности.Видимость			= ОтображатьДополнительныеПоля;
	Колонки.ДокументПоступления.Видимость	= ОтображатьДополнительныеПоля;
	Колонки.ТипПоступленияНаСклад.Видимость	= ОтображатьДополнительныеПоля;
	//ENT-525 +++
	Колонки.СерияФакт.Видимость				= ОтображатьДополнительныеПоля;
	Колонки.СрокГодностиФакт.Видимость		= ОтображатьДополнительныеПоля;
	Колонки.ШКФакт.Видимость				= ОтображатьДополнительныеПоля;
	Колонки.ШК.Видимость					= ОтображатьДополнительныеПоля;
	Колонки.СертификатФакт.Видимость		= ОтображатьДополнительныеПоля;
	//---
	ЭлементыФормы.КоманднаяПанельТовара.Кнопки.ОбновитьДополнительныеПоля.Доступность = ОтображатьДополнительныеПоля;
	
	Если ОтображатьДополнительныеПоля Тогда
		ОбновитьДанныеДополнительныхПолей();		
	КонецЕсли;	
	
	Кнопка.Пометка = ОтображатьДополнительныеПоля;
	
КонецПроцедуры

Процедура ТоварПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Если ОтображатьДополнительныеПоля Тогда
		
		Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			
			ТоварСсылка = ОформлениеСтроки.ДанныеСтроки.Товар;			
			Если ЗначениеЗаполнено(ТоварСсылка) Тогда				
				СвойстваТовара = ПолучитьСвойстваТовара(ТоварСсылка);
				
				Ячейка = ОформлениеСтроки.Ячейки.Производитель;
				Ячейка.ОтображатьТекст = Истина;
				Ячейка.Текст = СвойстваТовара.Производитель;				
				
				Ячейка = ОформлениеСтроки.Ячейки.Госпитальный;
				Ячейка.ОтображатьФлажок = Истина;
				Ячейка.Текст = "";
				Ячейка.Флажок = СвойстваТовара.Госпитальный;
				
				Ячейка = ОформлениеСтроки.Ячейки.ТипСТМ;
				Ячейка.ОтображатьТекст = Истина;
				Ячейка.Текст = СвойстваТовара.ТипСТМ;
				
			КонецЕсли;
			
			КодПартии = ОформлениеСтроки.ДанныеСтроки.КодПартии;			
			Если ЗначениеЗаполнено(КодПартии) Тогда				
				СвойстваПартии = ПолучитьСвойстваПартии(КодПартии);
				
				Ячейка = ОформлениеСтроки.Ячейки.Серия;
				Ячейка.ОтображатьТекст = Истина;
				Ячейка.Текст = СвойстваПартии.Серия;
				
				Ячейка = ОформлениеСтроки.Ячейки.СрокГодности;
				Ячейка.ОтображатьТекст = Истина;
				Ячейка.Текст = Формат(СвойстваПартии.СрокГодности, "ДФ=dd.MM.yyyy");
				
				Ячейка = ОформлениеСтроки.Ячейки.ДокументПоступления;
				Ячейка.ОтображатьТекст = Истина;
				Ячейка.Текст = СвойстваПартии.ДокументПоступления;
				
				Ячейка = ОформлениеСтроки.Ячейки.ТипПоступленияНаСклад;
				Ячейка.ОтображатьТекст = Истина;
				Ячейка.Текст = СвойстваПартии.ТипПоступленияНаСклад;
				
				//ENT-525 +++
				Ячейка = ОформлениеСтроки.Ячейки.ШК;
				Ячейка.ОтображатьТекст = Истина;
				Ячейка.Текст = СвойстваПартии.ШК;
				//---
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСвойстваТовара(Товар)
	
	СтруктураСвойств = Новый Структура;
	СтруктураСвойств.Вставить("Производитель", "");
	СтруктураСвойств.Вставить("Госпитальный", Ложь);
	СтруктураСвойств.Вставить("ТипСТМ", "");		
	
	НайденнаяСтрока = ТаблицаТоваров.Найти(Товар, "Ссылка");
	Если НайденнаяСтрока <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, НайденнаяСтрока);		
	КонецЕсли;	
	
	Возврат СтруктураСвойств;
	
КонецФункции

Функция ПолучитьСвойстваПартии(КодПартии)
	
	СтруктураСвойств = Новый Структура;
	СтруктураСвойств.Вставить("Серия", "");
	СтруктураСвойств.Вставить("СрокГодности", Дата(1,1,1));
	СтруктураСвойств.Вставить("ДокументПоступления", "");
	СтруктураСвойств.Вставить("ТипПоступленияНаСклад", "");
	СтруктураСвойств.Вставить("ШК", ""); //ENT-525
	
	НайденнаяСтрока = ТаблицаПартий.Найти(КодПартии, "Код");
	Если НайденнаяСтрока <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, НайденнаяСтрока);		
	КонецЕсли;	
	
	Возврат СтруктураСвойств;
	
КонецФункции

Процедура КоманднаяПанельТовараОбновитьДополнительныеПоля(Кнопка)
	ОбновитьДанныеДополнительныхПолей();
КонецПроцедуры

Процедура ОбновитьДанныеДополнительныхПолей()

	// ТОВАРЫ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АП.Ссылка КАК Ссылка,
	|	АП.Производитель.Наименование КАК Производитель,
	|	ВЫБОР
	|		КОГДА АП.Категория = &Госпитальный
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Госпитальный,
	|	ЕСТЬNULL(ТоварыСТМСрезПоследних.ТипСТМ, """") КАК ТипСТМ
	|ИЗ
	|	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	|		ПО АП.Ссылка = ТоварыСТМСрезПоследних.Товар
	|ГДЕ
	|	АП.Ссылка В(&Товары)";
	 	
	Если Не ЗначениеЗаполнено(БрендГоспитальный) Тогда
		БрендГоспитальный = Справочники.Брэнды.НайтиПоКоду(65528);
	КонецЕсли;	                 
	
	Запрос.УстановитьПараметр("Госпитальный", БрендГоспитальный);
	Запрос.УстановитьПараметр("Товары", Товар.ВыгрузитьКолонку("Товар"));
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	ТаблицаТоваров.Индексы.Добавить("Ссылка");
	 	
	
	// ПАРТИИ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УЗ_Партии.Код КАК Код,
	|	УЗ_Партии.Серия КАК Серия,
	|	УЗ_Партии.СрокГодности КАК СрокГодности,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(УЗ_Партии.ДокументПоступления КАК Документ.УЗ_ПоступлениеТовара).Представление, """") КАК ДокументПоступления,
	|	ЕСТЬNULL(ТипыПоставокНаСклад.Наименование, """") КАК ТипПоступленияНаСклад,
	|	УЗ_Партии.Баркод КАК ШК
	|ИЗ
	|	Справочник.УЗ_Партии КАК УЗ_Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВходящиеЦеныПоставщика КАК ВходящиеЦеныПоставщика
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТипыПоставокНаСклад КАК ТипыПоставокНаСклад
	|			ПО ВходящиеЦеныПоставщика.КодПоставкиНаСклад = ТипыПоставокНаСклад.Код
	|		ПО УЗ_Партии.Код = ВходящиеЦеныПоставщика.ПартияКод
	|ГДЕ
	|	УЗ_Партии.Код В(&КодыПартий)";
		
	Запрос.УстановитьПараметр("КодыПартий", Товар.ВыгрузитьКолонку("КодПартии"));
	
	ТаблицаПартий = Запрос.Выполнить().Выгрузить();
	ТаблицаПартий.Индексы.Добавить("Код");	

КонецПроцедуры

//НЭТИ Барданов А.Ю. 14.01.2019 ENT-1031
Процедура ОбновитьДоступностьВидимостьЭлементов()
	ДоступностьКнопкиОК = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыОК.Доступность;
	Если (Статус = Перечисления.СтатусыСписания.Проведен) И (СтатусДокАптеки = Перечисления.СтатусДокАптеки.Проведен) Тогда
			ДоступностьКнопкиОК = Истина;
			ЭтаФорма.ТолькоПросмотр = Ложь;
			//ЭлементыФормы.Товар.Доступность = Ложь;//ENT-1506
			ЭлементыФормы.Товар.ТолькоПросмотр = Истина;
			ЭлементыФормы.Поставщик.Доступность = Ложь;
			ЭлементыФормы.Договор.Доступность = Ложь;
			ЭлементыФормы.Склад.Доступность = Ложь;   			 
	КонецЕсли;  	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыОК.Доступность = ДоступностьКнопкиОК; 	 
КонецПроцедуры	