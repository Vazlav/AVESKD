
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ПустаяСтрока(Описание)=Истина Тогда
		Предупреждение("Не заполнено Описание!");
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	
	Если СтрДлина(Описание)<10 Тогда
		Предупреждение("Подозрительно короткое описание (менее 10 букв!). Чем подробнее будет описание, тем легче в дальнейшем будет решать возникшие проблемы.");
	КонецЕсли;	
		
КонецПроцедуры


Процедура КоманднаяПанель3ГрупповоеДобавлениеАптек(Кнопка)
	
	ОбрОтборПоФильтру=Обработки.ОтборПоФильтру.Создать();
	
	ОбрОтборПоФильтру.ТекстЗапроса="ВЫБРАТЬ
	                               |	МестаХранения.Ссылка
	                               |ИЗ
	                               |	Справочник.МестаХранения КАК МестаХранения
	                               |ГДЕ
	                               |	МестаХранения.ЭтоГруппа = ЛОЖЬ
	                               |	И МестаХранения.ПометкаУдаления = ЛОЖЬ
	                               |{ГДЕ
	                               |	МестаХранения.Ссылка.* КАК Аптека}";
	
	
	
	
	ФОФ=ОбрОтборПоФильтру.ПолучитьФорму("Форма",ЭтаФорма,1);
	
	ФОФ.Открыть();
КонецПроцедуры



Процедура ВидимостьСтраницотТипаАкции_Панель2(ТипАкции)
	
	Если ТипАкции.Пустая() ТОгда
		ЭлементыФормы.Панель2.Видимость=ЛОжь;
	Иначе	
		ЭлементыФормы.Панель2.Видимость=Истина;
	КонецЕсли;	
	
	Если ТипАкции=Перечисления.РезультатАкции.Скидка ТОгда
		ЭлементыФормы.Панель2.ТекущаяСтраница=ЭлементыФормы.Панель2.Страницы.Деньги;
	Иначе
		ЭлементыФормы.Панель2.ТекущаяСтраница=ЭлементыФормы.Панель2.Страницы.Подарки;
	КонецЕсли;	
		
	
КонецПроцедуры	

Процедура ТипАкцииПриИзменении(Элемент)
	 ВидимостьСтраницотТипаАкции_Панель2(ТипАкции);
КонецПроцедуры


Процедура ПриОткрытии()
	Если ЭтоНовый() ТОгда
		ДатаНачала=ТекущаяДата();
	КонецЕсли;
	ВидимостьСтраницотТипаАкции_Панель2(ТипАкции);
КонецПроцедуры



Процедура НачалоВыбораПравойЧасти(ТС,ИмяТаблицыДокумента)
	 ЛеваяЧасть=ТС.ЛеваяЧасть;
	 
	 Если ПустаяСтрока(ТС.Оператор)=Истина Тогда 
		 Предупреждение("Не выбран оператор!");
		 Возврат;
	 КонецЕсли;
	 
		 
	 
	Оператор=ТС.Оператор;
	
	
	
	
	Если Оператор=Перечисления.ОператорыУсловийПримененияРА.В или Оператор=Перечисления.ОператорыУсловийПримененияРА.НеВ ТОгда
		ЭтоСписокЗначений=Истина;
	Иначе	
		ЭтоСписокЗначений=ЛОжь;
		
				
	КонецЕсли;	
		
	//---------------<Открываем форму выбора значения>---------------------------// GtG // 17.04.2013 10:45:58
	
	ФормаВЗ=ЭтотОбъект.ПолучитьФорму("ФормаВыбораЗначения",ЭтаФорма,1);
	
	ФормаВЗ.ЭтоСписокЗначений=ЭтоСписокЗначений;
	
	//---------------<В таблице построчно - разные типы, в итоговой - только числа>---------------------------// GtG // 19.04.2013 10:02:02
	Если ИмяТаблицыДокумента="УсловияПримененияИтоги" Тогда
		ЛеваяЧастьТип="Число";
	Иначе
		ЛеваяЧастьТип=ЛеваяЧасть.Тип;
	КонецЕсли;	
	//---------------<>---------------------------// GtG // 19.04.2013 10:03:18
	
	ФормаВЗ.СтрокаТипЗначения=ЛеваяЧастьТип;
	ФормаВЗ.ЗначениеХЗ=ТС.ПраваяЧастьХЗ;
	ФормаВЗ.ИмяТаблицыДокумента=ИмяТаблицыДокумента;
	
	
	ФормаВЗ.ОткрытьМодально();

	
КонецПроцедуры	



Процедура УППСПраваяЧастьНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=ЛОжь;
	
	ТС=ЭлементыФормы.УсловияПримененияПострочно.ТекущаяСтрока;
	ИмяТаблицыДокумента="УсловияПримененияПострочно";
	НачалоВыбораПравойЧасти(ТС,ИмяТаблицыДокумента);
	
КонецПроцедуры

Процедура УПИПраваяЧастьНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=ЛОжь;
	
	ТС=ЭлементыФормы.УсловияПримененияИтоги.ТекущаяСтрока;
	ИмяТаблицыДокумента="УсловияПримененияИтоги";
	НачалоВыбораПравойЧасти(ТС,ИмяТаблицыДокумента);

КонецПроцедуры


Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	//Сообщить("Обработка Выбора "+ЗначениеВыбора+"  из "+Источник);// Вставить содержимое обработчика.
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("Структура") Тогда
		
		Если  ТипЗнч(ЗначениеВыбора.Значение)=Тип("Массив") Тогда // представим это как "Список из хх 
			ЭлементыФормы[ЗначениеВыбора.ИмяТаблицыДокумента].ТекущаяСтрока.ПраваяЧасть="Список из "+ЗначениеВыбора.Значение.Количество()+" значений";
		Иначе	
		    ЭлементыФормы[ЗначениеВыбора.ИмяТаблицыДокумента].ТекущаяСтрока.ПраваяЧасть=ЗначениеВыбора.Значение;
		КонецЕсли;
		
		ЭлементыФормы[ЗначениеВыбора.ИмяТаблицыДокумента].ТекущаяСтрока.ПраваяЧастьХЗ=Новый ХранилищеЗначения(ЗначениеВыбора.Значение); // универсально, для любого типа. Здесь храним сами значения.
		
		ТабЧастьПриАктивизацииЯчейки(ЭлементыФормы[ЗначениеВыбора.ИмяТаблицыДокумента]);
		
	КонецЕсли;
	
	Если ЗначениеВыбора=Неопределено ТОгда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("СписокЗначений") Тогда
		Если ЗначениеВыбора.Количество()=0 Тогда
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(ЗначениеВыбора.Получить(0).Значение)=Тип("СправочникСсылка.МестаХранения") Тогда
			Для Каждого Стр Из ЗначениеВыбора Цикл
				СписокАптек.Добавить().Склад=Стр.Значение;
			КонецЦикла;	
			
			СписокАптек.Свернуть("Склад","");
			
		КонецЕсли;
	КонецЕсли;
		
		
		
		
	
	
	
КонецПроцедуры


Процедура ТабЧастьПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущаяКолонка.Имя="ПраваяЧасть" Тогда
		
		ПЧХЗ=Элемент.ТекущаяСтрока.ПраваяЧастьХЗ.Получить();
		ТХТ="";
		Если ТипЗнч(ПЧХЗ)=Тип("Массив") Тогда
			Для Каждого Элем Из ПЧХЗ Цикл
				ТХТ=ТХТ+Элем+Символы.ПС;
			КонецЦикла;
		КонецЕСли;	
		
		
		Элемент.Подсказка=ТХТ;
	КонецЕСли;
	
КонецПроцедуры


Процедура ПриИзмененииОператора(Элемент,ТекСтрока)
	 Если не (Элемент.Значение=Перечисления.ОператорыУсловийПримененияРА.В или Элемент.Значение=Перечисления.ОператорыУсловийПримененияРА.НеВ) Тогда
		// этот оператор подразумевает сравнение с единственным значением
		Если  ТипЗнч(ТекСтрока.ПраваяЧастьХЗ.Получить())=Тип("Массив") Тогда
			Предупреждение("Оператор сравнения подразумевает 
			                |сравнение с одним единственным значением!
							|В правой части указан список значений!");
			ТекСтрока.ПраваяЧасть="";
			ТекСтрока.ПраваяЧастьХз="";
		КонецЕсли;
	Иначе
		//этот оператор подразумевает сравнение с массивом значений
		// если было единственное создадим из него массив
		Массив=Новый Массив;
		Массив.Добавить(ТекСтрока.ПраваяЧасть);
		ТекСтрока.ПраваяЧастьХЗ=Новый ХранилищеЗначения(Массив);

	КонецЕСли;	

	
КонецПроцедуры	



Процедура УсловияПримененияПострочноОператорПриИзменении(Элемент)
	
	ТекСтрока=Элементыформы.УсловияПримененияПострочно.ТекущаяСтрока;
	ПриИзмененииОператора(Элемент,ТекСтрока);
КонецПроцедуры

Процедура УсловияПримененияИтогиОператорПриИзменении(Элемент)
	ТекСтрока=Элементыформы.УсловияПримененияИтоги.ТекущаяСтрока;
	ПриИзмененииОператора(Элемент,ТекСтрока);

КонецПроцедуры

Процедура ОсновныеДействияФормыПечать(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ДействияФормыДействие6(Кнопка)
	
	//Если РольДоступна("супер_АДМИНИСТРАТОР") Тогда
		Выгрузить();
	//Иначе
	//	Предупреждение("Выгрузка акций запрещена!",3);
	//КонецЕсли;
	
	
КонецПроцедуры

Процедура КоманднаяПанель5ПроверитьКорректностьУсловия_пс(Кнопка)
	
	// фиктивная проверка корректности условия, должна выдать ЛОЖЬ , если повезет то ИСТИНА или 
	// Ошибку, если условие кривое
	
	ТекстПсевдоусловия="";
	ПсевдоПараметры=Новый Соответствие;
	РеальныеПараметры=Новый Соответствие;
	СчетчикПсевдопараметров=0;
	Для каждого стр из УсловияПримененияПострочно цикл
		
		Если   Стр.Оператор=Перечисления.ОператорыУсловийПримененияРА.В  Или 
			   Стр.Оператор=Перечисления.ОператорыУсловийПримененияРА.НеВ ТОгда
			   ПраваяЧастьВСкобках=Истина;
		Иначе
			   ПраваяЧастьВСкобках=Ложь;
		КонецЕсли;
		   
		
		СчетчикПсевдопараметров=СчетчикПсевдопараметров+1;
		
		ТекстПсевдоусловия=ТекстПсевдоусловия+Стр.ОператорОбъединения1+" "+
		Стр.ОткрывающаяСкобка+" "+
		"&ПсевдоПараметр_"+Формат(СчетчикПсевдопараметров,"ЧГ=")+" "+ // это типа	Стр.ЛеваяЧасть,
		Стр.Оператор+" "+
		
		?(ПраваяЧастьВСкобках,"(","")+
		
				
		"&РеальныйПараметр_"+Формат(СчетчикПсевдопараметров,"ЧГ=")+?(ПраваяЧастьВСкобках,")","")+" "+ //это Стр.ПраваяЧасть,
		//Стр.ПраваяЧастьХЗ,
		Стр.ЗакрывающаяСкобка+" "+Стр.ОператорОбъединения2+Символы.ПС;
		
		//---------------<Распихиваем параметры по соответствиям>---------------------------// GtG // 04.06.2013 11:54:44
		
		ТипЛевойЧасти=Стр.ЛеваяЧасть.Тип;
		
		Если ТипЛевойЧасти="Строка" ТОгда
			ЗначениеПП="";
		ИначеЕсли ТипЛевойЧасти="Число" ТОгда
			ЗначениеПП=0;
		ИначеЕсли 	ТипЛевойЧасти="Дата" ТОгда
			ЗначениеПП=ТекущаяДата();
		ИначеЕсли 	ТипЛевойЧасти="Булево" ТОгда
			ЗначениеПП=Истина;
		ИначеЕсли 	Найти(ТипЛевойЧасти,"СправочникСсылка")<>0 Тогда
			ЗначениеПП=Справочники[СтрЗаменить(ТипЛевойЧасти,"СправочникСсылка.","")].ПустаяСсылка();
		ИначеЕсли 	Найти(ТипЛевойЧасти,"ДокументСсылка")<>0 Тогда
			ЗначениеПП=Документы[СтрЗаменить(ТипЛевойЧасти,"ДокументСсылка.","")].ПустаяСсылка();	
		ИначеЕсли 	Найти(ТипЛевойЧасти,"ПеречислениеСсылка")<>0 Тогда
			ЗначениеПП=Перечисления[СтрЗаменить(ТипЛевойЧасти,"ДокументСсылка.","")].ПустаяСсылка();
		КонецЕсли;
		
		ПсевдоПараметры.Вставить("ПсевдоПараметр_"+Формат(СчетчикПсевдопараметров,"ЧГ="),ЗначениеПП);
		
		РеальныеПараметры.Вставить("РеальныйПараметр_"+Формат(СчетчикПсевдопараметров,"ЧГ="),Стр.ПраваяЧастьХЗ.Получить());
	КонецЦикла;	
	
	ТекстПсевдоусловия="ВЫБРАТЬ 0 как Поле1 Где "+Символы.ПС+ТекстПсевдоусловия;
	
	
	
	
	//Сообщить(ТекстПсевдоусловия);
	
	Запрос=Новый Запрос(ТекстПсевдоусловия);
	
	Для Каждого ПП Из ПсевдоПараметры Цикл
		Запрос.УстановитьПараметр(ПП.Ключ,ПП.Значение);
	КонецЦикла;	
	
	Для Каждого РП Из РеальныеПараметры Цикл
		Запрос.УстановитьПараметр(РП.Ключ,РП.Значение);
	КонецЦикла;	
	
	Попытка
		Запрос.Выполнить();
		Предупреждение("ОК! Ошибок в условии нет.");
	Исключение
		ТекстПредупреждения="ОШИБКА В УСЛОВИИ!!!"+Символы.ПС+ОписаниеОшибки();
		Предупреждение(ТекстПредупреждения);
		Сообщить(ТекстПредупреждения);
	КонецПопытки;	
	
	
	
	
	
КонецПроцедуры


Процедура КоманднаяПанель6ПроверитьКорректностьУсловия_Ит(Кнопка)
		
	// фиктивная проверка корректности условия, должна выдать ЛОЖЬ , если повезет то ИСТИНА или 
	// Ошибку, если условие кривое
	
	ТекстПсевдоусловия="";
	ПсевдоПараметры=Новый Соответствие;
	РеальныеПараметры=Новый Соответствие;
	СчетчикПсевдопараметров=0;
	Для каждого стр из УсловияПримененияИтоги цикл
		
		Если   Стр.Оператор=Перечисления.ОператорыУсловийПримененияРА.В  Или 
			   Стр.Оператор=Перечисления.ОператорыУсловийПримененияРА.НеВ ТОгда
			   ПраваяЧастьВСкобках=Истина;
		Иначе
			   ПраваяЧастьВСкобках=Ложь;
		КонецЕсли;
		   
		
		СчетчикПсевдопараметров=СчетчикПсевдопараметров+1;
		
		ТекстПсевдоусловия=ТекстПсевдоусловия+Стр.ОператорОбъединения1+" "+
		Стр.ОткрывающаяСкобка+" "+
		стр.АгрегатнаяФункция+"("+
		"&ПсевдоПараметр_"+Формат(СчетчикПсевдопараметров,"ЧГ=")+") "+ // это типа	Стр.ЛеваяЧасть,
		Стр.Оператор+" "+
		
		?(ПраваяЧастьВСкобках,"(","")+
		
				
		"&РеальныйПараметр_"+Формат(СчетчикПсевдопараметров,"ЧГ=")+?(ПраваяЧастьВСкобках,")","")+" "+ //это Стр.ПраваяЧасть,
		//Стр.ПраваяЧастьХЗ,
		Стр.ЗакрывающаяСкобка+" "+Стр.ОператорОбъединения2+Символы.ПС;
		
		//---------------<Распихиваем параметры по соответствиям>---------------------------// GtG // 04.06.2013 11:54:44
		
		ТипЛевойЧасти=Стр.ЛеваяЧасть.Тип;
		
		Если ТипЛевойЧасти="Строка" ТОгда
			ЗначениеПП="";
		ИначеЕсли ТипЛевойЧасти="Число" ТОгда
			ЗначениеПП=0;
		ИначеЕсли 	ТипЛевойЧасти="Дата" ТОгда
			ЗначениеПП=ТекущаяДата();
		ИначеЕсли 	ТипЛевойЧасти="Булево" ТОгда
			ЗначениеПП=Истина;
		ИначеЕсли 	Найти(ТипЛевойЧасти,"СправочникСсылка")<>0 Тогда
			ЗначениеПП=Справочники[СтрЗаменить(ТипЛевойЧасти,"СправочникСсылка.","")].ПустаяСсылка();
		ИначеЕсли 	Найти(ТипЛевойЧасти,"ДокументСсылка")<>0 Тогда
			ЗначениеПП=Документы[СтрЗаменить(ТипЛевойЧасти,"ДокументСсылка.","")].ПустаяСсылка();	
		ИначеЕсли 	Найти(ТипЛевойЧасти,"ПеречислениеСсылка")<>0 Тогда
			ЗначениеПП=Перечисления[СтрЗаменить(ТипЛевойЧасти,"ДокументСсылка.","")].ПустаяСсылка();
		КонецЕсли;
		
		ПсевдоПараметры.Вставить("ПсевдоПараметр_"+Формат(СчетчикПсевдопараметров,"ЧГ="),ЗначениеПП);
		
		РеальныеПараметры.Вставить("РеальныйПараметр_"+Формат(СчетчикПсевдопараметров,"ЧГ="),Стр.ПраваяЧастьХЗ.Получить());
	КонецЦикла;	
	
	ТекстПсевдоусловия="ВЫБРАТЬ 0 как Поле1 Having "+Символы.ПС+ТекстПсевдоусловия;
	
	
	
	
	//Сообщить(ТекстПсевдоусловия);
	
	Запрос=Новый Запрос(ТекстПсевдоусловия);
	
	Для Каждого ПП Из ПсевдоПараметры Цикл
		Запрос.УстановитьПараметр(ПП.Ключ,ПП.Значение);
	КонецЦикла;	
	
	Для Каждого РП Из РеальныеПараметры Цикл
		Запрос.УстановитьПараметр(РП.Ключ,РП.Значение);
	КонецЦикла;	
	
	Попытка
		Запрос.Выполнить();
		Предупреждение("ОК! Ошибок в условии нет.");
	Исключение
		ТекстПредупреждения="ОШИБКА В УСЛОВИИ!!!"+Символы.ПС+ОписаниеОшибки();
		Предупреждение(ТекстПредупреждения);
		Сообщить(ТекстПредупреждения);
	КонецПопытки;	

КонецПроцедуры

Процедура ДействияФормыТестоваяВыгрузка(Кнопка)
	Выгрузить(Истина);
КонецПроцедуры

Процедура КоманднаяПанель3кнЗагрузитьАптеки(Кнопка)
	
 

	
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаЗагрузкиАптек");
	ФайлИмпорта = Форма.ОткрытьМодально();
	
	Если Не ЗначениеЗаполнено(ФайлИмпорта) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");	
	Исключение
		Сообщить ("Не удалось запустить Excel");
		Возврат;
	КонецПопытки;
	
	СписокЗнч = Новый СписокЗначений();
	
	Книга = Excel.Workbooks.Open(ФайлИмпорта);	
	Лист = Книга.WorkSheets(1);	
	ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	
	Для Строка = 2 По ВсегоСтрок Цикл 
		
		ОбработкаПрерыванияПользователя();
		
		КодАптеки = Лист.Cells(Строка,1).Value;
		
		Если Не ЗначениеЗаполнено(КодАптеки) Тогда
			Прервать;
		КонецЕсли;
		
		Аптека = Справочники.МестаХранения.НайтиПоКоду(КодАптеки);
		
		Если ЗначениеЗаполнено(Аптека) Тогда	
			
			СписокЗнч.Добавить(Аптека);
			
		Иначе
			
			Сообщить("Не найдена аптека по коду: " + КодАптеки);	
			
		КонецЕсли;
		
	КонецЦикла;
	
	Excel.Application.Quit(); 
	
	Если СписокАптек.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Очистить список аптек перед загрузкой?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			СписокАптек.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Для каждого стр из СписокЗнч Цикл
		НС = СписокАптек.Добавить();
		НС.Склад = стр.Значение;
	КонецЦикла;
	
	СписокАптек.Свернуть("Склад","");
	

	Предупреждение("Готово!");
	
	
КонецПроцедуры




