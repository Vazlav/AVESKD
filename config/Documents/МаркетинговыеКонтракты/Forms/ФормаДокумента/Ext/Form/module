
Процедура УправлениеНадписямиКнопок()
	
	Если Согласован = Ложь Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Согласовать";
		ЭлементыФормы.Товар.ТолькоПросмотр = Ложь;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.кнПодбор.Доступность = Истина;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.МенюЗаполнить.Кнопки.ЗаполнитьПоПроизводителю.Доступность = Истина;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.МенюЗаполнить.Кнопки.ЗаполнитьИзФайла.Доступность = Истина;		
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Отмена согласования";
		ЭлементыФормы.Товар.ТолькоПросмотр = Истина;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.кнПодбор.Доступность = Ложь;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.МенюЗаполнить.Кнопки.ЗаполнитьПоПроизводителю.Доступность = Ложь;
		ЭлементыФормы.КоманднаяПанель1.Кнопки.МенюЗаполнить.Кнопки.ЗаполнитьИзФайла.Доступность = Ложь;
	КонецЕсли;
	
	Если Проведен Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыСохранить.Доступность = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыСохранить.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ОткрытьПодбор()
	
	ФормаПодбора = ЭтотОбъект.ПолучитьФорму("ПодборТовара",ЭтаФорма,Новый УникальныйИдентификатор());
	ФормаПодбора.ВладелецФормы = ЭтаФорма;
	ФормаПодбора.ОткрытьМодально();
	
	Товар.Загрузить(ФормаПодбора.ТЗТовара);
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	//Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда	
	//	Для каждого стр из ЗначениеВыбора Цикл
	//		НоваяСтрока = Товар.Добавить();	
	//		ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
	//	КонецЦикла;
	//КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1кнПодбор(Кнопка)
	
	ОткрытьПодбор();

КонецПроцедуры

Процедура ТоварПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	ОткрытьПодбор();
	
КонецПроцедуры

Процедура ТоварПередУдалением(Элемент, Отказ)
	
	Если Проведен  Тогда
		Предупреждение("В выгруженном документе удаление строк запрещено. Можно только отменить действие строки.");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнСогласования(Кнопка)
	
	Если СогласованиеДоступно() = Ложь Тогда
		Предупреждение("Недостаточно прав для согласования документа!");	
		Возврат;
	КонецЕсли;

	
	Если НЕ Проведен и Не Согласован Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Согласовать документ?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
		Согласован = Истина;
		СогласованКем = ПараметрыСеанса.ТекущийСотр;
		
	ИначеЕсли НЕ Проведен  и Согласован Тогда 		
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Отменить согласование?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
		Согласован = Ложь;
	Иначе
		Возврат;
	КонецЕсли;
	                               
	Изменение = Изменения.Добавить();
	Изменение.Дата = ТекущаяДата();
	Изменение.КомментарийИзменения = "Согласован = " + Согласован;
	Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
	
	Записать(РежимЗаписиДокумента.Запись);
	
	УправлениеНадписямиКнопок();
	
	
КонецПроцедуры

Процедура ТоварПриИзмененииФлажка(Элемент, Колонка)
	
	Если Колонка.Имя = "Отменена" Тогда
		ТекСтрока = Элемент.ТекущаяСтрока;
		Изменение = Изменения.Добавить();
		Изменение.Дата = ТекущаяДата();
		Изменение.КомментарийИзменения = "Флаг = " + ТекСтрока.Отменена + " № стр. " + ТекСтрока.НомерСтроки;
		Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
		Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()	
	
	УправлениеНадписямиКнопок(); 	
	РассчитатьИтоговуюСуммуОбщегоБюджета();
	
КонецПроцедуры

Процедура КоманднаяПанель1кнЗаполнитьПоПроизводителю(Кнопка)
	
	Если Проведен Тогда
		Предупреждение("Документ проведен. Изменение документа запрещено!");
		Возврат;
	КонецЕсли;
	
	Если Согласован Тогда
		Предупреждение("Документ прошел согласование. Изменение документа запрещено!");
		Возврат;
	КонецЕсли;	
	
	Если Производитель.Пустая() Тогда
		Предупреждение("Не выбран производитель. Выполнение не может быть продолжено!");
		Возврат;
	КонецЕсли;
	
	Если Товар.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Таблица товара будет перезаполнена. Продолжить выполнение?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Код КАК КодТовара,
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка КАК Товар,
	 		  	   // НДС20/18 
	               //|	АССОРТИМЕНТНЫЙ_ПЛАН.СтавкаНДС.Ставка КАК СтавкаНДС
			  	   |	ВЫБОР
			       |		КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.СтавкаНДС.Код = 3
			  	   |				И &ДатаПроверкиНДС < ДАТАВРЕМЯ(2019, 1, 1)
			  	   |			ТОГДА 18
			  	   |		ИНАЧЕ АССОРТИМЕНТНЫЙ_ПЛАН.СтавкаНДС.Ставка
			  	   |	КОНЕЦ КАК СтавкаНДС
	               |ИЗ
	               |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	               |ГДЕ
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Производитель = &Производитель
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Наименование";
	Запрос.УстановитьПараметр("Производитель",Производитель);
	Запрос.УстановитьПараметр("ДатаПроверкиНДС", Дата);
	
	Товар.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура КоманднаяПанель2Действие(Кнопка)
	
    ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Фильтр = НСтр("ru = 'Текст'; en = 'Text'") + "(*.pdf)|*.pdf";
	ДВФ.Фильтр = Фильтр;
	ДВФ.МножественныйВыбор = Ложь;
	
    ДВФ.Выбрать();
    
    Если ПустаяСтрока(ДВФ.ПолноеИмяФайла)=Ложь Тогда
        
        ДД=Новый ДвоичныеДанные(ДВФ.ПолноеИмяФайла);
        
        
        ХЗ=Новый ХранилищеЗначения (ДД, Новый СжатиеДанных(9));
		
		НоваяСтрока = Приложения.Добавить();
		НоваяСтрока.Наименование = "Приложение " + НоваяСтрока.НомерСтроки;
		НоваяСтрока.Приложение=ХЗ;
        НоваяСтрока.ИмяФайла=СтрЗаменить(ДВФ.ПолноеИмяФайла,ДВФ.Каталог,"");
 
    КонецЕсли;
	
	
КонецПроцедуры

Процедура КоманднаяПанель2ОткрытьПрицеп(Кнопка)
	
	ТС=ЭлементыФормы.Приложения.ТекущаяСтрока;
	Если ТС=Неопределено Тогда
		Предупреждение("Не выбрана строка вложения");
		Возврат;
	КонецЕсли;  
	
	ДД=ТС.Приложение.Получить(); // ДвоичныеДанные
	ИФ=ТС.ИмяФайла;
	
	ДД.Записать(КаталогВременныхФайлов()+"\"+ИФ);
	
	ЗапуститьПриложение(КаталогВременныхФайлов()+"\"+ИФ);
	
	
КонецПроцедуры

Процедура КоманднаяПанель2СохранитьФайлНаДиск(Кнопка)
	
    ТС=ЭлементыФормы.Приложения.ТекущаяСтрока;
    Если ТС=Неопределено Тогда
        Предупреждение("Не выбрана строка вложения");
        Возврат;
    КонецЕсли;  
    
    ДД=ТС.Приложение.Получить(); // ДвоичныеДанные
    ИФ=ТС.ИмяФайла;
    
    
    ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
    ДВФ.Выбрать();
    
    ДД.Записать(ДВФ.Каталог+"\"+ИФ);
    
    Сообщить("Приложение сохранено в "+ДВФ.Каталог+"\"+ИФ);
	
КонецПроцедуры

Процедура ТоварСуммаОбщегоБюджетаПриИзменении(Элемент)
	
	РассчитатьСуммуБонусаЗаУпаковку();
	РассчитатьИтоговуюСуммуОбщегоБюджета();
	
КонецПроцедуры

Процедура ТоварКоличествоПродажПлановоеПриИзменении(Элемент)
	
	РассчитатьСуммуБонусаЗаУпаковку();
	РассчитатьИтоговуюСуммуОбщегоБюджета();
	
КонецПроцедуры

Процедура ТоварСуммаУсловногоБюджетаПриИзменении(Элемент)
	
	РассчитатьСуммуБонусаЗаУпаковку();
	РассчитатьИтоговуюСуммуОбщегоБюджета();
	
КонецПроцедуры

Процедура РассчитатьСуммуБонусаЗаУпаковку()
	
	ТекущаяСтрока = ЭлементыФормы.Товар.ТекущаяСтрока;
	
	Если ТекущаяСтрока.КоличествоПродажПлановое > 0 Тогда
		ТекущаяСтрока.СуммаБезусловногоБонусаЗаУпаковку	= ТекущаяСтрока.СуммаБезусловногоБюджета / ТекущаяСтрока.КоличествоПродажПлановое;
		ТекущаяСтрока.СуммаУсловногоБонусаЗаУпаковку	= ТекущаяСтрока.СуммаУсловногоБюджета / ТекущаяСтрока.КоличествоПродажПлановое;
	Иначе
		ТекущаяСтрока.СуммаБезусловногоБонусаЗаУпаковку = 0;
		ТекущаяСтрока.СуммаУсловногоБонусаЗаУпаковку	= 0;
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьИтоговуюСуммуОбщегоБюджета()
	
	СуммаОбщегоБюджета = Товар.Итог("СуммаБезусловногоБюджета") + Товар.Итог("СуммаУсловногоБюджета");	
	ЭлементыФормы.Товар.Колонки.СуммаОбщегоБюджета.ТекстПодвала = Формат(СуммаОбщегоБюджета, "ЧДЦ=2");
		
КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнитьИзФайла(Кнопка)
	
	Если Товар.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Таблица товара будет перезаполнена. Продолжить выполнение?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 	
	КонецЕсли;
	
	Товар.Очистить();
	ЭлементыФормы.Товар.Колонки.СуммаОбщегоБюджета.ТекстПодвала = "";
	
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаЗагрузкиДанных");
	ФайлИмпорта = Форма.ОткрытьМодально();
	
	Если Не ЗначениеЗаполнено(ФайлИмпорта) Тогда
		Возврат;
	КонецЕсли;
	
	ВыбФайл = Новый Файл(ФайлИмпорта); 	
	Если Не ВыбФайл.Существует() Тогда
		Сообщить("Не найден файл " + ФайлИмпорта);
		Возврат;
	КонецЕсли; 
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");	
	Исключение
		Сообщить ("Не удалось запустить Excel");
		Возврат;
	КонецПопытки;
  
	Книга = Excel.Workbooks.Open(ФайлИмпорта);	
	Лист = Книга.WorkSheets(1);	
	ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	
	Для Строка = 1 По ВсегоСтрок Цикл
		
		ОбработкаПрерыванияПользователя();
		
		КодТовара = Лист.Cells(Строка,1).Value;
		
		Если Не ЗначениеЗаполнено(КодТовара) Тогда
			Прервать;
		КонецЕсли;
		
		ТекТовар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		
		Если ЗначениеЗаполнено(ТекТовар) Тогда			
			НовСтр = Товар.Добавить();
			НовСтр.Товар					= ТекТовар;
			НовСтр.КодТовара				= КодТовара;
			НовСтр.КоличествоПродажПлановое	= Лист.Cells(Строка,2).Value;
			НовСтр.СуммаБезусловногоБюджета	= Лист.Cells(Строка,3).Value;
			НовСтр.СуммаУсловногоБюджета	= Лист.Cells(Строка,4).Value;
			НовСтр.УсловнаяЦена				= Лист.Cells(Строка,5).Value;
			
			Если НовСтр.КоличествоПродажПлановое > 0 Тогда
				НовСтр.СуммаБезусловногоБонусаЗаУпаковку	= НовСтр.СуммаБезусловногоБюджета / НовСтр.КоличествоПродажПлановое;
				НовСтр.СуммаУсловногоБонусаЗаУпаковку		= НовСтр.СуммаУсловногоБюджета / НовСтр.КоличествоПродажПлановое;
			Иначе
				НовСтр.СуммаБезусловногоБонусаЗаУпаковку	= 0;
				НовСтр.СуммаУсловногоБонусаЗаУпаковку		= 0;
			КонецЕсли;
				
		Иначе   			
			Сообщить("Не найден товар по коду: " + КодТовара);	
			
		КонецЕсли;
		
	КонецЦикла;
	
	Excel.Application.Quit(); 
	
	
	РассчитатьИтоговуюСуммуОбщегоБюджета();
	
КонецПроцедуры

Функция СогласованиеДоступно()
	
	Если РольДоступна("МаркетинговыеКонтрактыСогласование") Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	
КонецФункции

Процедура УправлениеДоступностьюКнопок()
	
	
	
КонецПроцедуры


Процедура ОсновныеДействияФормыкнВыгрузить(Кнопка)
	
	Если РольДоступна("МаркетинговыеКонтрактыПолныйДоступ") Тогда
		ВыгрузитьВАптеки();
	Иначе
		Предупреждение("Недостаточно прав на выполнение данной операции!");
	КонецЕсли;	
	
КонецПроцедуры


Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	СуммаОбщегоБюджета = ДанныеСтроки.СуммаБезусловногоБюджета + ДанныеСтроки.СуммаУсловногоБюджета;
	
	Если ДанныеСтроки.КоличествоПродажПлановое > 0 Тогда
		СуммаОбщегоБюджетаЗаУпаковку = СуммаОбщегоБюджета / ДанныеСтроки.КоличествоПродажПлановое;
	Иначе
		СуммаОбщегоБюджетаЗаУпаковку = 0;
	КонецЕсли;	
	
	ОформлениеСтроки.Ячейки.СуммаОбщегоБюджета.УстановитьТекст(Формат(СуммаОбщегоБюджета, "ЧДЦ=2"));
	ОформлениеСтроки.Ячейки.СуммаОбщегоБюджетаЗаУпаковку.УстановитьТекст(Формат(СуммаОбщегоБюджетаЗаУпаковку, "ЧДЦ=2"));
	
КонецПроцедуры


////////////////////////////////////////////////////////////
// ДОПОЛНИТЕЛЬНЫЕ ПОЛЯ

Процедура КоманднаяПанель1ОтображатьДополнительныеПоля(Кнопка)
	
	ОтображатьДополнительныеПоля = Не ОтображатьДополнительныеПоля;
	
	Колонки = ЭлементыФормы.Товар.Колонки;
	Колонки.ЦенаИзКонтрактаUMG.Видимость				= ОтображатьДополнительныеПоля;
	Колонки.ЦенаИзКонтрактаПроизводителя.Видимость		= ОтображатьДополнительныеПоля;
	Колонки.ЦенаИзКонтрактаПроизводителя2.Видимость		= ОтображатьДополнительныеПоля;
	Колонки.ЦенаИзКонтрактаПроизводителя3.Видимость		= ОтображатьДополнительныеПоля;
	Колонки.ПроцентМаркетинговогоБонуса.Видимость		= ОтображатьДополнительныеПоля;
	Колонки.ЦенаСУчетомМаркетинговогоБонуса.Видимость	= ОтображатьДополнительныеПоля;
	Колонки.КодТовараGDP.Видимость						= ОтображатьДополнительныеПоля;	
	Колонки.СтавкаНДС.Видимость							= ОтображатьДополнительныеПоля;
	Колонки.ФинансоваяСкидка.Видимость					= ОтображатьДополнительныеПоля;
	Колонки.ОптовыйБонус.Видимость						= ОтображатьДополнительныеПоля;
	Колонки.ЦенаПоследнегоПоступления.Видимость			= ОтображатьДополнительныеПоля;
	Колонки.ЦенаИзКонтрактаПроизводителя2_безНДС.Видимость		= ОтображатьДополнительныеПоля;
	Колонки.ЦенаИзКонтрактаПроизводителя3_безНДС.Видимость		= ОтображатьДополнительныеПоля;
	Колонки.ЦенаСУчетомМаркетинговогоБонуса_безНДС.Видимость	= ОтображатьДополнительныеПоля;
	
	ЭлементыФормы.КоманднаяПанель1.Кнопки.ОбновитьДополнительныеПоля.Доступность = ОтображатьДополнительныеПоля;
	
	Если ОтображатьДополнительныеПоля Тогда
		ОбновитьДанныеДополнительныхПолей();		
	КонецЕсли;	
	
	Кнопка.Пометка = ОтображатьДополнительныеПоля;	
	
КонецПроцедуры

Процедура КоманднаяПанель1ОбновитьДополнительныеПоля(Кнопка)
	ОбновитьДанныеДополнительныхПолей();
КонецПроцедуры

Процедура ТоварПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Если ОтображатьДополнительныеПоля Тогда		
		Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл			
			ТоварСсылка = ОформлениеСтроки.ДанныеСтроки.Товар;			
			Если Не ЗначениеЗаполнено(ТоварСсылка) Тогда
				Продолжить;
			КонецЕсли;
			
			НайденнаяСтрока = ТаблицаЦенUMG.Найти(ТоварСсылка, "Товар");
			Если НайденнаяСтрока = Неопределено Тогда
				ЦенаИзКонтрактаUMG = 0;
			Иначе
				ЦенаИзКонтрактаUMG = НайденнаяСтрока.Цена;
			КонецЕсли;
			
			НайденнаяСтрока = ТаблицаЦенКонтрактов.Найти(ТоварСсылка, "Товар");
			Если НайденнаяСтрока = Неопределено Тогда
				ЦенаИзКонтрактаПроизводителя = 0;
				ЦенаИзКонтрактаПроизводителя2 = 0;
				ЦенаИзКонтрактаПроизводителя3 = 0;
				БонусОптовый = 0;
				БонусДополнительный = 0;
				СтавкаНДС = 0;
			Иначе
				ЦенаИзКонтрактаПроизводителя = НайденнаяСтрока.ЦенаЗакупБезНДС;
				ЦенаИзКонтрактаПроизводителя2 = НайденнаяСтрока.ЦенаСУчетомФинСкидкиСНДС;
				ЦенаИзКонтрактаПроизводителя3 = НайденнаяСтрока.ЦенаИтогСНДС;
				БонусОптовый = НайденнаяСтрока.БонусОптовый;
				БонусДополнительный = НайденнаяСтрока.БонусДополнительный;
				СтавкаНДС = НайденнаяСтрока.СтавкаНДС;
			КонецЕсли;
			
			НайденнаяСтрока = ТаблицаСвязок.Найти(ТоварСсылка, "Товар");
			Если НайденнаяСтрока = Неопределено Тогда
				КодТовараGDP = "";
			Иначе
				КодТовараGDP = НайденнаяСтрока.КодТовараПоставщика;
			КонецЕсли;
			
			НайденнаяСтрока = ТаблицаИсторииЦен.Найти(ТоварСсылка, "Товар");
			Если НайденнаяСтрока = Неопределено Тогда
				ЦенаПоследнегоПоступления = 0;
			Иначе
				ЦенаПоследнегоПоступления = НайденнаяСтрока.Цена;
			КонецЕсли;
			
			ОтменаБУБ = ОформлениеСтроки.ДанныеСтроки.ОтменаБУБ;
			СуммаБезусловногоБонусаЗаУпаковку = ?(ОтменаБУБ, 0, ОформлениеСтроки.ДанныеСтроки.СуммаБезусловногоБонусаЗаУпаковку);
			СуммаУсловногоБонусаЗаУпаковку = ОформлениеСтроки.ДанныеСтроки.СуммаУсловногоБонусаЗаУпаковку;
			
			СуммаМаркетинговогоБонуса = СуммаБезусловногоБонусаЗаУпаковку + СуммаУсловногоБонусаЗаУпаковку;
			
			Если ЦенаИзКонтрактаПроизводителя = 0 Тогда
				ПроцентМаркетинговогоБонуса = 0;
			Иначе 
				ПроцентМаркетинговогоБонуса = Окр(СуммаМаркетинговогоБонуса/ЦенаИзКонтрактаПроизводителя*100, 2);
			КонецЕсли;
			
			ЦенаСУчетомМаркетинговогоБонуса = Макс(ЦенаИзКонтрактаПроизводителя3 - СуммаМаркетинговогоБонуса, 0);
			
			ЦенаИзКонтрактаПроизводителя2_безНДС = Окр(ЦенаИзКонтрактаПроизводителя2 / (1+СтавкаНДС/100), 2);			
			ЦенаИзКонтрактаПроизводителя3_безНДС = Окр(ЦенаИзКонтрактаПроизводителя3 / (1+СтавкаНДС/100), 2);			
			ЦенаСУчетомМаркетинговогоБонуса_безНДС = Окр(ЦенаСУчетомМаркетинговогоБонуса / (1+СтавкаНДС/100), 2);
			
			
			Ячейка = ОформлениеСтроки.Ячейки.ЦенаИзКонтрактаUMG;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = ЦенаИзКонтрактаUMG;
			
			Ячейка = ОформлениеСтроки.Ячейки.ЦенаИзКонтрактаПроизводителя;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = ЦенаИзКонтрактаПроизводителя;
			
			Ячейка = ОформлениеСтроки.Ячейки.ЦенаИзКонтрактаПроизводителя2;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = ЦенаИзКонтрактаПроизводителя2;
			
			Ячейка = ОформлениеСтроки.Ячейки.ЦенаИзКонтрактаПроизводителя2_безНДС;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = ЦенаИзКонтрактаПроизводителя2_безНДС;
			
			Ячейка = ОформлениеСтроки.Ячейки.ЦенаИзКонтрактаПроизводителя3;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = ЦенаИзКонтрактаПроизводителя3;
			
			Ячейка = ОформлениеСтроки.Ячейки.ЦенаИзКонтрактаПроизводителя3_безНДС;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = ЦенаИзКонтрактаПроизводителя3_безНДС;
			
			Ячейка = ОформлениеСтроки.Ячейки.ПроцентМаркетинговогоБонуса;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = ПроцентМаркетинговогоБонуса;
			
			Ячейка = ОформлениеСтроки.Ячейки.ЦенаСУчетомМаркетинговогоБонуса;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = ЦенаСУчетомМаркетинговогоБонуса;
			
			Ячейка = ОформлениеСтроки.Ячейки.ЦенаСУчетомМаркетинговогоБонуса_безНДС;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = ЦенаСУчетомМаркетинговогоБонуса_безНДС;
			
			Ячейка = ОформлениеСтроки.Ячейки.КодТовараGDP;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = КодТовараGDP;
			
			Ячейка = ОформлениеСтроки.Ячейки.СтавкаНДС;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = СтавкаНДС;
			
			Ячейка = ОформлениеСтроки.Ячейки.ФинансоваяСкидка;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = БонусДополнительный;
			
			Ячейка = ОформлениеСтроки.Ячейки.ОптовыйБонус;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = БонусОптовый;
			
			Ячейка = ОформлениеСтроки.Ячейки.ЦенаПоследнегоПоступления;
			Ячейка.ОтображатьТекст = Истина;
			Ячейка.Текст = ЦенаПоследнегоПоступления;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьДанныеДополнительныхПолей()

	МассивТоваров = Товар.ВыгрузитьКолонку("Товар");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтрактыUMGТовары.Товар,
	|	КонтрактыUMGТовары.Ссылка.Код КАК КодКонтракта,
	|	КонтрактыUMGТовары.УсловнаяЦена КАК Цена
	|ПОМЕСТИТЬ втКонтрактыВсе
	|ИЗ
	|	Справочник.КонтрактыUMG.Товары КАК КонтрактыUMGТовары
	|ГДЕ
	|	КонтрактыUMGТовары.Товар В(&Товары)
	|	И КонтрактыUMGТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И КонтрактыUMGТовары.УсловнаяЦена > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКонтрактыВсе.Товар,
	|	МАКСИМУМ(втКонтрактыВсе.КодКонтракта) КАК КодКонтрактаМакс
	|ПОМЕСТИТЬ втКонтрактыПоследние
	|ИЗ
	|	втКонтрактыВсе КАК втКонтрактыВсе
	|
	|СГРУППИРОВАТЬ ПО
	|	втКонтрактыВсе.Товар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКонтрактыВсе.Товар,
	|	втКонтрактыВсе.Цена
	|ИЗ
	|	втКонтрактыВсе КАК втКонтрактыВсе
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКонтрактыПоследние КАК втКонтрактыПоследние
	|		ПО втКонтрактыВсе.Товар = втКонтрактыПоследние.Товар
	|			И втКонтрактыВсе.КодКонтракта = втКонтрактыПоследние.КодКонтрактаМакс";
	
	Запрос.УстановитьПараметр("Товары", МассивТоваров);
	
	ТаблицаЦенUMG = Запрос.Выполнить().Выгрузить();
	ТаблицаЦенUMG.Индексы.Добавить("Товар");
	
	
	//
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтрактыПроизводителейТовар.Ссылка.Дата КАК Дата,
	|	КонтрактыПроизводителейТовар.Товар КАК Товар,
	|	КонтрактыПроизводителейТовар.ЦенаЗакупБезНДС КАК ЦенаЗакупБезНДС,
	|	КонтрактыПроизводителейТовар.ЦенаСУчетомФинСкидкиСНДС КАК ЦенаСУчетомФинСкидкиСНДС,
	|	КонтрактыПроизводителейТовар.ЦенаИтогСНДС КАК ЦенаИтогСНДС,
	|	КонтрактыПроизводителейТовар.СтавкаНДС КАК СтавкаНДС,
	|	КонтрактыПроизводителейТовар.БонусОптовый КАК БонусОптовый,
	|	КонтрактыПроизводителейТовар.БонусДополнительный КАК БонусДополнительный
	|ПОМЕСТИТЬ втКонтрактыПроизводителейВсе
	|ИЗ
	|	Документ.КонтрактыПроизводителей.Товар КАК КонтрактыПроизводителейТовар
	|ГДЕ
	|	КонтрактыПроизводителейТовар.Ссылка.НачалоПериода <= &ТекДата
	|	И КонтрактыПроизводителейТовар.Ссылка.КонецПериода >= &ТекДата
	|	И КонтрактыПроизводителейТовар.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И КонтрактыПроизводителейТовар.Ссылка.Согласован = ИСТИНА
	|	И КонтрактыПроизводителейТовар.Отменена = ЛОЖЬ
	|	И КонтрактыПроизводителейТовар.Товар В(&Товары)
	|	И КонтрактыПроизводителейТовар.ЦенаЗакупБезНДС > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКонтрактыПроизводителейВсе.Товар КАК Товар,
	|	МАКСИМУМ(втКонтрактыПроизводителейВсе.Дата) КАК Дата
	|ПОМЕСТИТЬ втКонтрактыПроизводителейМакс
	|ИЗ
	|	втКонтрактыПроизводителейВсе КАК втКонтрактыПроизводителейВсе
	|
	|СГРУППИРОВАТЬ ПО
	|	втКонтрактыПроизводителейВсе.Товар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКонтрактыПроизводителейВсе.Товар КАК Товар,
	|	МАКСИМУМ(втКонтрактыПроизводителейВсе.ЦенаЗакупБезНДС) КАК ЦенаЗакупБезНДС,
	|	МАКСИМУМ(втКонтрактыПроизводителейВсе.ЦенаСУчетомФинСкидкиСНДС) КАК ЦенаСУчетомФинСкидкиСНДС,
	|	МАКСИМУМ(втКонтрактыПроизводителейВсе.ЦенаИтогСНДС) КАК ЦенаИтогСНДС,
	|	МАКСИМУМ(втКонтрактыПроизводителейВсе.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(втКонтрактыПроизводителейВсе.БонусОптовый) КАК БонусОптовый,
	|	МАКСИМУМ(втКонтрактыПроизводителейВсе.БонусДополнительный) КАК БонусДополнительный
	|ИЗ
	|	втКонтрактыПроизводителейВсе КАК втКонтрактыПроизводителейВсе
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКонтрактыПроизводителейМакс КАК втКонтрактыПроизводителейМакс
	|		ПО втКонтрактыПроизводителейВсе.Товар = втКонтрактыПроизводителейМакс.Товар
	|			И втКонтрактыПроизводителейВсе.Дата = втКонтрактыПроизводителейМакс.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	втКонтрактыПроизводителейВсе.Товар";
	
	Запрос.УстановитьПараметр("Товары", МассивТоваров);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	ТаблицаЦенКонтрактов = Запрос.Выполнить().Выгрузить();
	ТаблицаЦенКонтрактов.Индексы.Добавить("Товар");
	
	
	//
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КаталогПрайсЛистов.КодПрайсЛиста КАК КодПрайсЛиста
	|ПОМЕСТИТЬ втНастройки
	|ИЗ
	|	РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
	|ГДЕ
	|	КаталогПрайсЛистов.КодПоставщика = 3055
	|	И КаталогПрайсЛистов.Настройка.Активность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АП.Ссылка КАК Товар,
	|	МАКСИМУМ(ЕСТЬNULL(Связки.КодТовараПоставщика, СвязкиПоОП.КодТовараПоставщика)) КАК КодТовараПоставщика
	|ПОМЕСТИТЬ втСвязкиВсе
	|ИЗ
	|	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
	|		ПО АП.Ссылка = Связки.ТоварФирмы
	|			И (Связки.Поставщик = &ПоставщикСвязок)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК СвязкиПоОП
	|		ПО АП.КодОП = СвязкиПоОП.ТоварФирмы.Код
	|			И (СвязкиПоОП.Поставщик = &ПоставщикСвязок)
	|ГДЕ
	|	НЕ(Связки.КодТовараПоставщика ЕСТЬ NULL
	|				И СвязкиПоОП.КодТовараПоставщика ЕСТЬ NULL)
	|	И АП.Ссылка В(&Товары)
	|
	|СГРУППИРОВАТЬ ПО
	|	АП.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСвязкиВсе.Товар КАК Товар,
	|	ЕСТЬNULL(МАКСИМУМ(Прайсы.Код), МАКСИМУМ(втСвязкиВсе.КодТовараПоставщика)) КАК КодТовараПоставщика
	|ИЗ
	|	втСвязкиВсе КАК втСвязкиВсе
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрайсЛисты КАК Прайсы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНастройки КАК втНастройки
	|			ПО Прайсы.КодПрайсЛиста = втНастройки.КодПрайсЛиста
	|		ПО втСвязкиВсе.КодТовараПоставщика = Прайсы.Код
	|
	|СГРУППИРОВАТЬ ПО
	|	втСвязкиВсе.Товар";

	Запрос.УстановитьПараметр("ПоставщикСвязок", Справочники.Поставщики.НайтиПоКоду(582));
	Запрос.УстановитьПараметр("Товары", МассивТоваров);
	
	ТаблицаСвязок = Запрос.Выполнить().Выгрузить();
	ТаблицаСвязок.Индексы.Добавить("Товар");
	
	
	//
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвойсТовар.Товар КАК Товар,
	|	ИнвойсТовар.Ссылка.Дата КАК Дата,
	|	ИнвойсТовар.ЦенаОтпускнаяСНДС КАК Цена
	|ПОМЕСТИТЬ втИнвойсыВсе
	|ИЗ
	|	Документ.Инвойс.Товар КАК ИнвойсТовар
	|ГДЕ
	|	ИнвойсТовар.Ссылка.Дата >= &ДатаОтбора
	|	И ИнвойсТовар.Ссылка.Проведен
	|	И ИнвойсТовар.Ссылка.Производитель = &Производитель
	|	И ИнвойсТовар.Товар В(&Товары)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИнвойсыВсе.Товар КАК Товар,
	|	МАКСИМУМ(втИнвойсыВсе.Дата) КАК Дата
	|ПОМЕСТИТЬ втИнвойсыМакс
	|ИЗ
	|	втИнвойсыВсе КАК втИнвойсыВсе
	|
	|СГРУППИРОВАТЬ ПО
	|	втИнвойсыВсе.Товар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИнвойсыВсе.Товар КАК Товар,
	|	МАКСИМУМ(втИнвойсыВсе.Цена) КАК Цена
	|ИЗ
	|	втИнвойсыВсе КАК втИнвойсыВсе
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИнвойсыМакс КАК втИнвойсыМакс
	|		ПО втИнвойсыВсе.Товар = втИнвойсыМакс.Товар
	|			И втИнвойсыВсе.Дата = втИнвойсыМакс.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	втИнвойсыВсе.Товар";
	
	Запрос.УстановитьПараметр("Товары", МассивТоваров);
	Запрос.УстановитьПараметр("Производитель", Производитель);
	Запрос.УстановитьПараметр("ДатаОтбора", ДобавитьМесяц(ТекущаяДата(),-12));
	
	ТаблицаИсторииЦен = Запрос.Выполнить().Выгрузить();
	ТаблицаИсторииЦен.Индексы.Добавить("Товар");
	
КонецПроцедуры
