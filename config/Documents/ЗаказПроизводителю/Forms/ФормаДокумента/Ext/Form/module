Функция СогласованиеДоступно()
	
	Если РольДоступна("ОптовикиПолныеПрава") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Производитель.Менеджер <> ПараметрыСеанса.ТекущийСотр Тогда
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Процедура УправлениеНадписямиКнопок()
	
	Если Согласован = Ложь Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Согласовать";
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Отмена согласования";
	КонецЕсли;
	
	Если Проведен Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыСохранить.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыСохранить.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры


Процедура ПриОткрытии()
	
	УправлениеНадписямиКнопок();
	ЭлементыФормы.ТЧ.Страницы.ЗаказИнвойс.Видимость = Ложь;
	
	УправлениеДоступностьюЭлементовФормы();
	
	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект,СписокПечатныхФорм);
	
КонецПроцедуры

Процедура УправлениеДоступностьюЭлементовФормы()
	
	Если СтатусEDI <> Перечисления.СтатусыИсходящегоСообщенияEDI.ПустаяСсылка()
		И СтатусEDI <> Перечисления.СтатусыИсходящегоСообщенияEDI.НеТребуетВыгрузки Тогда
		
		ЭлементыФормы.Товар.ТолькоПросмотр = Истина;
		
	КонецЕсли;		

КонецПроцедуры


Процедура ОсновныеДействияФормыкнСогласования(Кнопка)
	
	Если СогласованиеДоступно() = Ложь Тогда
		Предупреждение("Недостаточно прав для согласования документа!");	
		Возврат;
	КонецЕсли;
	
	Если НЕ Проведен и Не Согласован Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Согласовать документ?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
		Согласован = Истина;
		СогласованКем = ПараметрыСеанса.ТекущийСотр;
		
	ИначеЕсли НЕ Проведен  и Согласован Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Отменить согласование?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
		Согласован = Ложь;
	Иначе
		Возврат;
	КонецЕсли;
	                               
	Изменение = Изменения.Добавить();
	Изменение.Дата = ТекущаяДата();
	Изменение.КомментарийИзменения = "Согласован = " + Согласован;
	Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
	
	Записать(РежимЗаписиДокумента.Запись);
	
	УправлениеНадписямиКнопок();
		
	
КонецПроцедуры

Процедура ТоварОприходованПриИзменении(Элемент)
	
		стрИзм = Изменения.Добавить();
		стрИзм.Дата = ТекущаяДата();
		стрИзм.Сотрудник = ПараметрыСеанса.ТекущийСотр;
		стрИзм.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
		Если ТоварОприходован Тогда
			стрИзм.КомментарийИзменения = "Товар оприходован = Истина";	
		Иначе
			стрИзм.КомментарийИзменения = "Товар оприходован = Ложь";	
		КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	УправлениеНадписямиКнопок();
	УправлениеДоступностьюЭлементовФормы();
	
КонецПроцедуры

Процедура КоманднаяПанельПерекодировкаОбновитьТаблицуПерекодировки(Кнопка)
	
	ОбновитьТаблицуПерекодировки();
	
КонецПроцедуры

Процедура ТЧПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = 2 Тогда
		ОбновитьТаблицуПерекодировки();
	ИначеЕсли ТекущаяСтраница = 4 Тогда	
		ОбновитьТаблицуЗаказПлюсПодтверждение();
	КонецЕсли;		
	
КонецПроцедуры

Процедура ОбновитьТаблицуПерекодировки()
	
	//ТСО {12.11.2015 #0044}
	
	Перекодировка = Новый ТаблицаЗначений;
	Перекодировка.Колонки.Добавить("НомерСтроки",,"Номер строки", 5);
	Перекодировка.Колонки.Добавить("Товар",,"Товар", 50);
	Перекодировка.Колонки.Добавить("КодТовара",,"Код товара АВЕ", 15);
	Перекодировка.Колонки.Добавить("КодТовараПоставщика",,"Код товара поставщика", 20);
	
	ЭлементыФормы.Перекодировка.СоздатьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СвязкиТовараСПоставщиком.ТоварФирмы КАК ТоварФирмы,
	|	МАКСИМУМ(СвязкиТовараСПоставщиком.КодТовараПоставщика) КАК КодТовараПоставщика
	|ИЗ
	|	Справочник.СвязкиТовараСПоставщиком КАК СвязкиТовараСПоставщиком
	|ГДЕ
	|	СвязкиТовараСПоставщиком.Поставщик = &ПоставщикСвязок
	|	И СвязкиТовараСПоставщиком.ТоварФирмы В(&Товары)
	|
	|СГРУППИРОВАТЬ ПО
	|	СвязкиТовараСПоставщиком.ТоварФирмы";
	
	Запрос.УстановитьПараметр("ПоставщикСвязок", Справочники.Поставщики.НайтиПоКоду(582));
	Запрос.УстановитьПараметр("Товары", Товар.ВыгрузитьКолонку("Товар"));
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРезультата = РезультатЗапроса.Выгрузить();
	
	Для Каждого ТекСтр Из Товар Цикл
		НовСтр = Перекодировка.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, ТекСтр);

		НайденнаяСтрока = ТаблицаРезультата.Найти(ТекСтр.Товар, "ТоварФирмы");
		Если НайденнаяСтрока <> Неопределено Тогда
			НовСтр.КодТовараПоставщика = НайденнаяСтрока.КодТовараПоставщика;
		Иначе
			НовСтр.КодТовараПоставщика = 0;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры  

Процедура ПерекодировкаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.КодТовараПоставщика = 0 Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(255, 204, 153);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельТовараПоискВПрайсах(Кнопка)
	
	//ТСО {09.12.2015 	
	ТекСтрокаТовар = ЭлементыФормы.Товар.ТекущаяСтрока;
	Если ТекСтрокаТовар = Неопределено Тогда
		Сообщить("Не выбрана строка товара", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	СтрокаПоиска = ТекСтрокаТовар.Товар.Наименование;
	Аптека = Справочники.МестаХранения.НайтиПоКоду(241); 
	
	КлючУник = Новый УникальныйИдентификатор();
	ФормаПодбора = Обработки.ПодобратьТоварПоставщика.ПолучитьФорму("Форма", "", КлючУник);
	ФормаПодбора.Аптека			= Аптека;
	ФормаПодбора.ВладелецФормы	= ЭтаФорма;
	ФормаПодбора.СтрокаПоиска	= СтрокаПоиска;
	ФормаПодбора.ПоискПо		= 2;
	ФормаПодбора.ОткрытьМодально(0);  	
	//ТСО }
	
КонецПроцедуры


Процедура КоманднаяПанельТоваракнПоказатьОприходованныйТовар(Кнопка)
	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КаталогПрайсЛистов.КодПрайсЛиста
	               |ПОМЕСТИТЬ ВТКодПрайса
	               |ИЗ
	               |	РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
	               |ГДЕ
	               |	КаталогПрайсЛистов.Настройка = &Настройка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Связки.ТоварФирмы КАК Товар,
	               |	СУММА(Прайсы.Количество) КАК Остаток
	               |ПОМЕСТИТЬ ВТОстаток
	               |ИЗ
	               |	РегистрСведений.ПрайсЛисты КАК Прайсы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКодПрайса КАК ВТКодПрайса
	               |		ПО Прайсы.КодПрайсЛиста = ВТКодПрайса.КодПрайсЛиста
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
	               |		ПО (Связки.Поставщик = Прайсы.ПоставщикСвязки)
	               |			И (Связки.КодТовараПоставщика = Прайсы.Код)  и Связки.ТоварФирмы в (&Товары)
	               |ГДЕ
	               |	Связки.ТоварФирмы В(&Товары)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Связки.ТоварФирмы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТКодПрайса
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Выборка.КодТовара,
	               |	Выборка.Товар,
	               |	СУММА(Выборка.КоличествоЗаказ) КАК КоличествоЗаказ,
	               |	СУММА(Выборка.ЦенаЗаказа) КАК ЦенаЗаказа,
	               |	СУММА(Выборка.КоличествоИнвойс) КАК КоличествоИнвойс,
	               |	СУММА(ЕСТЬNULL(ВТОстаток.Остаток, 0)) КАК ВПрайсе,
	               |	СУММА(Выборка.ЦенаИнвойса) КАК ЦенаИнвойса
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗаказТовар.КодТовара КАК КодТовара,
	               |		ЗаказТовар.Товар КАК Товар,
	               |		СУММА(ЗаказТовар.Количество) КАК КоличествоЗаказ,
	               |		ЗаказТовар.Цена КАК ЦенаЗаказа,
	               |		0 КАК ЦенаИнвойса,
	               |		0 КАК КоличествоИнвойс
	               |	ИЗ
	               |		Документ.ЗаказПроизводителю.Товар КАК ЗаказТовар
	               |	ГДЕ
	               |		ЗаказТовар.Ссылка = &Ссылка
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ЗаказТовар.Товар,
	               |		ЗаказТовар.Цена,
	               |		ЗаказТовар.КодТовара
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ИнвойсТовар.КодТовара,
	               |		ИнвойсТовар.Товар,
	               |		0,
	               |		0,
	               |		ИнвойсТовар.ЦенаОтпускнаяСНДС,
	               |		СУММА(ИнвойсТовар.Количество)
	               |	ИЗ
	               |		Документ.Инвойс.Товар КАК ИнвойсТовар
	               |	ГДЕ
	               |		ИнвойсТовар.Ссылка.Производитель = &Производитель
	               |		И ИнвойсТовар.Ссылка.ДокументОснование = &Ссылка
	               |		И ИнвойсТовар.Ссылка.Дата >= ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, -1)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ИнвойсТовар.Товар,
	               |		ИнвойсТовар.ЦенаОтпускнаяСНДС,
	               |		ИнвойсТовар.КодТовара) КАК Выборка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаток КАК ВТОстаток
	               |		ПО (ВТОстаток.Товар = Выборка.Товар)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Выборка.КодТовара,
	               |	Выборка.Товар
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Выборка.Товар.Наименование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТОстаток";
				   
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Настройка",Справочники.НастройкиОбмена.НайтиПоКоду(384));
	Запрос.УстановитьПараметр("Товары",Товар.ВыгрузитьКолонку("Товар"));
	Запрос.УстановитьПараметр("Производитель",Производитель);
	Запрос.УстановитьПараметр("Дата",Дата);
	Рез = Запрос.Выполнить();
	
	ТЗЗаказИнвойс = Рез.Выгрузить();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Инвойс.Ссылка КАК Инвойс,
	               |	Инвойс.ДатаОприходования,
	               |	Инвойс.Проведен,
	               |	Инвойс.ПометкаУдаления как Удален,
	               |	Инвойс.ДатаОплаты,
	               |	Инвойс.СтатусОплатыИнвойса,
	               |	Инвойс.Сумма
	               |ИЗ
	               |	Документ.Инвойс КАК Инвойс
	               |ГДЕ
	               |	Инвойс.Производитель = &Производитель
	               |	И Инвойс.ДокументОснование = &Ссылка
	               |	И Инвойс.Дата >= ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, -1)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Инвойс.ДатаОприходования";
				   
	Рез = Запрос.Выполнить();
	
	ТЗИнвойсов = Рез.Выгрузить();
	
	ЭлементыФормы.ТЧ.Страницы.ЗаказИнвойс.Видимость = Истина;
	ЭлементыФормы.ТЧ.ТекущаяСтраница = ЭлементыФормы.ТЧ.Страницы.ЗаказИнвойс;
	
	
	
КонецПроцедуры


Процедура ТЗИнвойсовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Проведен Тогда
		ОформлениеСтроки.Ячейки.Проведен.ЦветТекста = WebЦвета.Зеленый;
	Иначе
		ОформлениеСтроки.Ячейки.Проведен.ЦветТекста = WebЦвета.Оранжевый;
	КонецЕсли;
	
	Если ДанныеСтроки.Удален Тогда
		ОформлениеСтроки.Ячейки.Удален.ЦветТекста = WebЦвета.Красный;
	Иначе
		ОформлениеСтроки.Ячейки.Удален.ЦветТекста = WebЦвета.Черный;
	КонецЕсли;
	
КонецПроцедуры


Процедура КоманднаяПанель2Действие(Кнопка)
	
    ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВФ.МножественныйВыбор = Ложь;
	
    ДВФ.Выбрать();
    
    Если ПустаяСтрока(ДВФ.ПолноеИмяФайла)=Ложь Тогда
        
        ДД=Новый ДвоичныеДанные(ДВФ.ПолноеИмяФайла);
        
        
        ХЗ=Новый ХранилищеЗначения (ДД, Новый СжатиеДанных(9));
		
		НоваяСтрока = Приложения.Добавить();
		НоваяСтрока.Наименование = "Приложение " + НоваяСтрока.НомерСтроки;
		НоваяСтрока.Приложение=ХЗ;
        НоваяСтрока.ИмяФайла=СтрЗаменить(ДВФ.ПолноеИмяФайла,ДВФ.Каталог,"");
 
    КонецЕсли;
	
	
КонецПроцедуры


Процедура КоманднаяПанель2ОткрытьПрицеп(Кнопка)
	
	ТС=ЭлементыФормы.Приложения.ТекущаяСтрока;
	Если ТС=Неопределено Тогда
		Предупреждение("Не выбрана строка вложения");
		Возврат;
	КонецЕсли;  
	
	ДД=ТС.Приложение.Получить(); // ДвоичныеДанные
	ИФ=ТС.ИмяФайла;
	
	ДД.Записать(КаталогВременныхФайлов()+"\"+ИФ);
	
	ЗапуститьПриложение(КаталогВременныхФайлов()+"\"+ИФ);
	
	
КонецПроцедуры


Процедура КоманднаяПанель2СохранитьФайлНаДиск(Кнопка)
	
    ТС=ЭлементыФормы.Приложения.ТекущаяСтрока;
    Если ТС=Неопределено Тогда
        Предупреждение("Не выбрана строка вложения");
        Возврат;
    КонецЕсли;  
    
    ДД=ТС.Приложение.Получить(); // ДвоичныеДанные
    ИФ=ТС.ИмяФайла;
    
    
    ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
    ДВФ.Выбрать();
    
    ДД.Записать(ДВФ.Каталог+"\"+ИФ);
    
    Сообщить("Приложение сохранено в "+ДВФ.Каталог+"\"+ИФ);
	
КонецПроцедуры


Процедура КоманднаяПанель2кнПечать(Кнопка)
	
	ОМ10_КнопкаПечатьНажатие(ЭтотОбъект,ЭтаФорма);
	
КонецПроцедуры


Процедура КонтрактПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Контракт) Тогда
		Производитель = Контракт.Производитель;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроизводительПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Производитель) Тогда
	
		Запрос = Новый запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтрактыПроизводителей.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.КонтрактыПроизводителей КАК КонтрактыПроизводителей
		|ГДЕ
		|	КонтрактыПроизводителей.НачалоПериода <= &ТекущаяДата
		|	И КонтрактыПроизводителей.КонецПериода >= &ТекущаяДата
		|	И КонтрактыПроизводителей.Производитель = &Производитель
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонтрактыПроизводителей.Дата УБЫВ";
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ТекущаяДата", Дата);
		Запрос.УстановитьПараметр("Производитель", Производитель);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Контракт = Выборка.Ссылка
		Иначе
			Контракт = Документы.КонтрактыПроизводителей.ПустаяСсылка();
		КонецЕсли; 
	
	Иначе
		Контракт = Документы.КонтрактыПроизводителей.ПустаяСсылка();	
	КонецЕсли; 
	
КонецПроцедуры


Процедура РасшифровкаЗаказаПриАктивизацииСтроки(Элемент)
	Элемент.ОбновитьСтроки();
КонецПроцедуры

Процедура РасшифровкаЗаказаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если Элемент.ТекущаяСтрока = ДанныеСтроки Тогда
        ОформлениеСтроки.ЦветФона = Новый Цвет(221, 235, 247);
	КонецЕсли;
	
	Если Не ДанныеСтроки.Активный Тогда
		ОформлениеСтроки.ЦветТекста = Новый Цвет(160,160,160);
	КонецЕсли;
	
КонецПроцедуры

Процедура ТоварПриАктивизацииСтроки(Элемент)
	Элемент.ОбновитьСтроки();
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если Элемент.ТекущаяСтрока = ДанныеСтроки Тогда
        ОформлениеСтроки.ЦветФона = Новый Цвет(221, 235, 247);
	КонецЕсли;
	
КонецПроцедуры 

Процедура КоманднаяПанельРасшифровкиПеренестиВЗаказ(Кнопка)
	
	СтрокаРасшифровки = ЭлементыФормы.РасшифровкаЗаказа.ТекущаяСтрока;
	Если СтрокаРасшифровки = Неопределено Тогда
		Сообщить("Не выбрана строка расшифровки", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Количество = 0;
	Если Не ВвестиЧисло(Количество, "Введите количество заказа", 10, 2) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТовара = Товар.Добавить();
	СтрокаТовара.Товар = СтрокаРасшифровки.Товар;
	СтрокаТовара.КодТовара = СтрокаРасшифровки.Код;
	СтрокаТовара.Количество = Количество;
	СтрокаТовара.Цена = СтрокаРасшифровки.ЦенаПроизводителя;
	СтрокаТовара.Сумма = СтрокаРасшифровки.ЦенаПроизводителя * Количество;
	СтрокаТовара.КоличествоВКоробе = СтрокаРасшифровки.КоличествоВКоробе;
	
	ЭлементыФормы.ТЧ.ТекущаяСтраница = ЭлементыФормы.ТЧ.Страницы.Товары;
	ЭлементыФормы.Товар.ТекущаяСтрока = Товар[Товар.Количество()-1];
	
КонецПроцедуры

Процедура ТоварТоварПриИзменении(Элемент)
	
	СтрокаТовара = ЭлементыФормы.Товар.ТекущаяСтрока;
	
	СтрокаТовара.КодТовара = СтрокаТовара.Товар.Код;	
	
	Если Не ЗначениеЗаполнено(Контракт) Тогда
		СтрокаТовара.Цена = 0;
		СтрокаТовара.Сумма = 0;
		СтрокаТовара.КоличествоВКоробе = 0;
		Возврат;
	КонецЕсли;
	     	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КонтрактыПроизводителейТовар.ЦенаСУчетомФинСкидкиСНДС КАК Цена,
	|	КонтрактыПроизводителейТовар.Кратность КАК Кратность
	|ИЗ
	|	Документ.КонтрактыПроизводителей.Товар КАК КонтрактыПроизводителейТовар
	|ГДЕ
	|	КонтрактыПроизводителейТовар.Ссылка = &Ссылка
	|	И КонтрактыПроизводителейТовар.Товар = &Товар
	|	И КонтрактыПроизводителейТовар.Отменена = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Ссылка", Контракт);
	Запрос.УстановитьПараметр("Товар", СтрокаТовара.Товар);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();	
		Выборка.Следующий();
		
		СтрокаТовара.Цена = Выборка.Цена;
		СтрокаТовара.Сумма = СтрокаТовара.Количество * Выборка.Цена;
		СтрокаТовара.КоличествоВКоробе = Выборка.Кратность;
	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ТоварКоличествоПриИзменении(Элемент)
	
	СтрокаТовара = ЭлементыФормы.Товар.ТекущаяСтрока;
	СтрокаТовара.Сумма = СтрокаТовара.Количество * СтрокаТовара.Цена;	
	
КонецПроцедуры

Процедура ТоварЦенаПриИзменении(Элемент)
	
	СтрокаТовара = ЭлементыФормы.Товар.ТекущаяСтрока;
	СтрокаТовара.Сумма = СтрокаТовара.Количество * СтрокаТовара.Цена;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнЗакрытьТоварВПутиПоЗаказу(Кнопка)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Выполнить закрытие товара в пути по данному заказу ? ", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	
	
	ДокументЗакрытия = Автозаказ.ЗакрытьТоварыВПутиОптПоЗаказу(Ссылка);
	Если ЗначениеЗаполнено(ДокументЗакрытия) Тогда
		
		ОбщегоНазначения.ЗаписатьСменуСостоянияДокумента(ДокументЗакрытия,РежимЗаписиДокумента.Проведение,Ложь);
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Создан " + ДокументЗакрытия + Символы.ПС + " Открыть документ ? ", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		ФормаДокумента = ДокументЗакрытия.ПолучитьФорму("ФормаДокумента");
		ФормаДокумента.Открыть();
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ЗаказПлюсПодтверждениеПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Красный = Новый Цвет(255, 204, 153);
	Желтый = Новый Цвет(255, 255, 153);
	Зеленый = Новый Цвет(204, 255, 204);
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки.Количество.Видимость = Ложь;
		ОформлениеСтроки.Ячейки.Цена.Видимость = Ложь;
		ОформлениеСтроки.Ячейки.СрокГодности.Видимость = Ложь;
		ОформлениеСтроки.Ячейки.ПроцентСрока.Видимость = Ложь;
		
		Если ОформлениеСтроки.ДанныеСтроки.КоличествоПодтверждение = 0 Тогда
			ОформлениеСтроки.Ячейки.КоличествоПодтверждение.ЦветФона = Красный;
		ИначеЕсли ОформлениеСтроки.ДанныеСтроки.КоличествоЗаказ = 0 Тогда
			ОформлениеСтроки.Ячейки.КоличествоПодтверждение.ЦветФона = Зеленый;
		ИначеЕсли ОформлениеСтроки.ДанныеСтроки.КоличествоПодтверждение <> ОформлениеСтроки.ДанныеСтроки.КоличествоЗаказ Тогда
			ОформлениеСтроки.Ячейки.КоличествоПодтверждение.ЦветФона = Желтый;
		КонецЕсли;
		
		Если ОформлениеСтроки.ДанныеСтроки.КоличествоИнвойс = 0 Тогда
			Если ОформлениеСтроки.ДанныеСтроки.КоличествоПодтверждение > 0 Тогда
				ОформлениеСтроки.Ячейки.КоличествоИнвойс.ЦветФона = Красный;
			КонецЕсли;
		ИначеЕсли ОформлениеСтроки.ДанныеСтроки.КоличествоПодтверждение = 0 Тогда
			ОформлениеСтроки.Ячейки.КоличествоИнвойс.ЦветФона = Зеленый;
		ИначеЕсли ОформлениеСтроки.ДанныеСтроки.КоличествоИнвойс <> ОформлениеСтроки.ДанныеСтроки.КоличествоПодтверждение Тогда
			ОформлениеСтроки.Ячейки.КоличествоИнвойс.ЦветФона = Желтый;
		КонецЕсли;
	
		Если ОформлениеСтроки.ДанныеСтроки.ЦенаЗаказ <> "-" И ОформлениеСтроки.ДанныеСтроки.ЦенаПодтверждение <> "-" 
			И ОформлениеСтроки.ДанныеСтроки.ЦенаЗаказ <> ОформлениеСтроки.ДанныеСтроки.ЦенаПодтверждение Тогда
			ОформлениеСтроки.Ячейки.ЦенаПодтверждение.ЦветФона = Желтый;
		КонецЕсли;		
		
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельЗаказПлюсПодтверждениеОбновитьТаблицуПодтверждения(Кнопка)
	
	ОбновитьТаблицуЗаказПлюсПодтверждение();
	
КонецПроцедуры

Процедура ОбновитьТаблицуЗаказПлюсПодтверждение()
	
	ЗаказПлюсПодтверждение.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПроизводителюТовар.Товар КАК Товар,
	|	ЗаказПроизводителюТовар.КодТовара КАК КодТовара,
	|	СУММА(ЗаказПроизводителюТовар.Количество) КАК Количество,
	|	МАКСИМУМ(ЗаказПроизводителюТовар.Цена) КАК Цена,
	|	&Ссылка КАК ДокументЗаказа
	|ПОМЕСТИТЬ втТоварыЗаказа
	|ИЗ
	|	Документ.ЗаказПроизводителю.Товар КАК ЗаказПроизводителюТовар
	|ГДЕ
	|	ЗаказПроизводителюТовар.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПроизводителюТовар.Товар,
	|	ЗаказПроизводителюТовар.КодТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодтверждениеЗаказаТовар.Товар КАК Товар,
	|	ПодтверждениеЗаказаТовар.КодТовара КАК КодТовара,
	|	СУММА(ПодтверждениеЗаказаТовар.Количество) КАК Количество,
	|	МАКСИМУМ(ПодтверждениеЗаказаТовар.ЦенаСоСкидкойСНДС) КАК Цена,
	|	МАКСИМУМ(ПодтверждениеЗаказаТовар.СрокГодности) КАК СрокГодности,
	|	МАКСИМУМ(ПодтверждениеЗаказаТовар.ПроцентОСГ) КАК ПроцентСрока,
	|	МАКСИМУМ(ПодтверждениеЗаказаТовар.Ссылка) КАК ДокументПодтверждения
	|ПОМЕСТИТЬ втТоварыПодтвержения
	|ИЗ
	|	Документ.ПодтверждениеЗаказа.Товар КАК ПодтверждениеЗаказаТовар
	|ГДЕ
	|	ПодтверждениеЗаказаТовар.Ссылка.ДокументОснование = &Ссылка
	|	И ПодтверждениеЗаказаТовар.Ссылка.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодтверждениеЗаказаТовар.Товар,
	|	ПодтверждениеЗаказаТовар.КодТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодтверждениеЗаказаОтказы.Товар КАК Товар,
	|	ПодтверждениеЗаказаОтказы.КодТовара КАК КодТовара,
	|	СУММА(ПодтверждениеЗаказаОтказы.Количество) КАК Количество,
	|	МАКСИМУМ(ПодтверждениеЗаказаОтказы.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ втТоварыОтказов
	|ИЗ
	|	Документ.ПодтверждениеЗаказа.Отказы КАК ПодтверждениеЗаказаОтказы
	|ГДЕ
	|	ПодтверждениеЗаказаОтказы.Ссылка.ДокументОснование = &Ссылка
	|	И ПодтверждениеЗаказаОтказы.Ссылка.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодтверждениеЗаказаОтказы.Товар,
	|	ПодтверждениеЗаказаОтказы.КодТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(втТоварыЗаказа.Товар, втТоварыПодтвержения.Товар) КАК Товар,
	|	ЕСТЬNULL(втТоварыЗаказа.КодТовара, втТоварыПодтвержения.КодТовара) КАК КодТовара,
	|	ЕСТЬNULL(втТоварыЗаказа.Количество, 0) КАК КоличествоЗаказ,
	|	ЕСТЬNULL(втТоварыЗаказа.Цена, 0) КАК ЦенаЗаказ,
	|	ЕСТЬNULL(втТоварыЗаказа.ДокументЗаказа, ЗНАЧЕНИЕ(Документ.ЗаказПроизводителю.ПустаяСсылка)) КАК ДокументЗаказа,
	|	ЕСТЬNULL(втТоварыПодтвержения.Количество, 0) КАК КоличествоПодтверждение,
	|	ЕСТЬNULL(втТоварыПодтвержения.Цена, 0) КАК ЦенаПодтверждение,
	|	ЕСТЬNULL(втТоварыПодтвержения.ПроцентСрока, 0) КАК ПроцентСрокаПодтверждение,
	|	ЕСТЬNULL(втТоварыПодтвержения.ДокументПодтверждения, ЕСТЬNULL(втТоварыОтказов.Ссылка, ЗНАЧЕНИЕ(Документ.ПодтверждениеЗаказа.ПустаяСсылка))) КАК ДокументПодтверждения,
	|	ЕСТЬNULL(втТоварыОтказов.Количество, 0) КАК КоличествоОтказ,
	|	ЕСТЬNULL(втТоварыПодтвержения.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокГодности
	|ПОМЕСТИТЬ втЗаказПлюсПодтверждение
	|ИЗ
	|	втТоварыЗаказа КАК втТоварыЗаказа
	|		ПОЛНОЕ СОЕДИНЕНИЕ втТоварыПодтвержения КАК втТоварыПодтвержения
	|		ПО втТоварыЗаказа.Товар = втТоварыПодтвержения.Товар
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТоварыОтказов КАК втТоварыОтказов
	|		ПО втТоварыЗаказа.Товар = втТоварыОтказов.Товар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втТоварыЗаказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втТоварыПодтвержения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втТоварыОтказов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнвойсТовар.Товар КАК Товар,
	|	ИнвойсТовар.КодТовара КАК КодТовара,
	|	СУММА(ИнвойсТовар.Количество) КАК Количество,
	|	МАКСИМУМ(ИнвойсТовар.ЦенаОтпускнаяСНДС) КАК ЦенаОтпускнаяСНДС,
	|	МАКСИМУМ(ИнвойсТовар.СрокГодности) КАК СрокГодности,
	|	МАКСИМУМ(ИнвойсТовар.ПроцентОСГ) КАК ПроцентСрока,
	|	МАКСИМУМ(ИнвойсТовар.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ втТоварыИнвойса
	|ИЗ
	|	Документ.Инвойс.Товар КАК ИнвойсТовар
	|ГДЕ
	|	ИнвойсТовар.Ссылка.ДокументОснование = &Ссылка
	|	И ИнвойсТовар.Ссылка.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвойсТовар.Товар,
	|	ИнвойсТовар.КодТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.Товар, втТоварыИнвойса.Товар) КАК Товар,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.КодТовара, втТоварыИнвойса.КодТовара) КАК КодТовара,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.КоличествоЗаказ, 0) КАК КоличествоЗаказ,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ЦенаЗаказ, 0) КАК ЦенаЗаказ,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ДокументЗаказа, ЗНАЧЕНИЕ(Документ.ЗаказПроизводителю.ПустаяСсылка)) КАК ДокументЗаказа,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.КоличествоПодтверждение, 0) КАК КоличествоПодтверждение,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ЦенаПодтверждение, 0) КАК ЦенаПодтверждение,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокГодностиПодтверждение,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ПроцентСрокаПодтверждение, 0) КАК ПроцентСрокаПодтверждение,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ДокументПодтверждения, 0) КАК ДокументПодтверждения,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.КоличествоОтказ, 0) КАК КоличествоОтказ,
	|	ЕСТЬNULL(втТоварыИнвойса.Количество, 0) КАК КоличествоИнвойс,
	|	ЕСТЬNULL(втТоварыИнвойса.ЦенаОтпускнаяСНДС, 0) КАК ЦенаИнвойс,
	|	ЕСТЬNULL(втТоварыИнвойса.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокГодностиИнвойс,
	|	ЕСТЬNULL(втТоварыИнвойса.ПроцентСрока, 0) КАК ПроцентСрокаИнвойс,
	|	ЕСТЬNULL(втТоварыИнвойса.Ссылка, ЗНАЧЕНИЕ(Документ.Инвойс.ПустаяСсылка)) КАК ДокументИнвойс,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ДокументЗаказа.Номер, 0) КАК НомерЗаказа,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ДокументПодтверждения.Номер, 0) КАК НомерПодтверждения,
	|	ЕСТЬNULL(втТоварыИнвойса.Ссылка.Номер, 0) КАК НомерИнвойса
	|ИЗ
	|	втЗаказПлюсПодтверждение КАК втЗаказПлюсПодтверждение
	|		ПОЛНОЕ СОЕДИНЕНИЕ втТоварыИнвойса КАК втТоварыИнвойса
	|		ПО втЗаказПлюсПодтверждение.Товар = втТоварыИнвойса.Товар";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);	
	РезультатЗапроса = Запрос.Выполнить();	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НовСтр = ЗаказПлюсПодтверждение.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
		
		Если Выборка.ДокументЗаказа.Пустая() Тогда
			НовСтр.ЦенаЗаказ = "-";
		КонецЕсли;
		
		Если Выборка.ДокументПодтверждения.Пустая() Тогда
			НовСтр.ЦенаПодтверждение = "-";
			НовСтр.СрокГодностиПодтверждение = "-";
			НовСтр.ПроцентСрокаПодтверждение = "-";
		КонецЕсли;
		
		Если Выборка.ДокументИнвойс.Пустая() Тогда
			НовСтр.ЦенаИнвойс = "-";
			НовСтр.СрокГодностиИнвойс = "-";
			НовСтр.ПроцентСрокаИнвойс = "-";
		КонецЕсли;		
		
	КонецЦикла;
	 	
КонецПроцедуры

Процедура ЗаказПлюсПодтверждениеВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	
	Если Колонка.Имя = "НомерПодтверждения" Тогда
		ДокСсылка = ВыбраннаяСтрока.ДокументПодтверждения;
	ИначеЕсли Колонка.Имя = "НомерИнвойса" Тогда
		ДокСсылка = ВыбраннаяСтрока.ДокументИнвойс;
	Иначе
		Возврат;
	КонецЕсли;		
	
	Если Не ДокСсылка.Пустая() Тогда
		ДокФорма = ДокСсылка.ПолучитьФорму();
		Если ДокФорма <> Неопределено Тогда
			ДокФорма.Открыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//НЭТИ Барданов А.Ю. 25.01.2019 ENT-1178 оптимизация создания инвойса в 1С Склад
Процедура ОсновныеДействияФормыСоздатьПодтверждение(Кнопка)
	Форма = ПолучитьФорму("ФормаСозданияПодтверждения");
	Форма.ДокументОБъект = ЭтотОбъект;
	Форма.Открыть();
КонецПроцедуры

//НЭТИ Барданов А.Ю. 07.03.2019 ENT-1408  
Процедура РасшифровкаЗаказаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

//НЭТИ Барданов А.Ю. 07.03.2019 ENT-1408  
Процедура РасшифровкаЗаказаПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина; 
КонецПроцедуры

