
Процедура ОбработкаПроведения(Отказ, РежимПроведения) 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Расход.КодТовара КАК КодТовара,
	|	СУММА(Расход.Количество) КАК Количество,
	|	СУММА(Расход.Количество * Расход.ЦенаУчета) КАК СуммаУчета
	|ПОМЕСТИТЬ ДокТЧ
	|ИЗ
	|	Документ.ПодтверждениеЗаказа.Товар КАК Расход
	|ГДЕ
	|	Расход.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Расход.КодТовара,
	|	Расход.Товар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПроизводителюОстатки.КодТовара КАК КодТовара,
	|	ЗаказПроизводителюОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ЗаказПроизводителюОстатки.СуммаЗаказаОстаток КАК СуммаЗаказаОстаток
	|ПОМЕСТИТЬ ЗаказОстатки
	|ИЗ
	|	РегистрНакопления.ЗаказПроизводителюОпт.Остатки(
	|			&МоментВремени,
	|			КодТовара В
	|					(ВЫБРАТЬ
	|						ДокТЧ.КодТовара
	|					ИЗ
	|						ДокТЧ КАК ДокТЧ)
	|				И Заказ = &Заказ) КАК ЗаказПроизводителюОстатки
	|ГДЕ
	|	ЗаказПроизводителюОстатки.КоличествоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокТЧ.КодТовара КАК КодТовара,
	|	ДокТЧ.Количество КАК Количество,
	|	ДокТЧ.СуммаУчета КАК СуммаУчета,
	|	ЕСТЬNULL(ЗаказОстатки.КоличествоОстаток, 0) КАК КоличествоЗаказаОстаток,
	|	ЕСТЬNULL(ЗаказОстатки.СуммаЗаказаОстаток, 0) КАК СуммаЗаказаОстаток
	|ИЗ
	|	ДокТЧ КАК ДокТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказОстатки КАК ЗаказОстатки
	|		ПО ДокТЧ.КодТовара = ЗаказОстатки.КодТовара";
	                                                	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Заказ", ДокументОснование);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Движения.ЗаказПроизводителюОпт.Записывать = Истина;
	Движения.ЗаказПроизводителюОпт.Очистить();	
	Выборка = РезультатЗапроса.Выбрать();
	КодПроизводителя = Производитель.Код;
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоЗаказаОстаток = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ЗаказПроизводителюОпт.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.КодПроизводителя = КодПроизводителя;
		Движение.КодТовара = Выборка.КодТовара;
		Движение.Заказ = ДокументОснование;		   		

		ЦенаЗаказа = Окр(Выборка.СуммаЗаказаОстаток / Выборка.КоличествоЗаказаОстаток, 2);
		Количество = Мин(Выборка.Количество, Выборка.КоличествоЗаказаОстаток);
		
		Движение.Количество = Количество;
		Движение.СуммаЗаказа = Количество * ЦенаЗаказа;

	КонецЦикла; 
	                 
	
	Движения.ПодтверждениеЗаказа.Записывать = Истина;
	Движения.ПодтверждениеЗаказа.Очистить();
	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ПодтверждениеЗаказа.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.КодПроизводителя = КодПроизводителя;
		Движение.КодТовара = Выборка.КодТовара;
		Движение.Заказ = ДокументОснование;
		Движение.ПодтверждениеЗаказа = Ссылка;
		Движение.Количество = Выборка.Количество;
		Движение.СуммаЗаказа = Выборка.СуммаУчета;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДатаПоследнегоИзменения = ТекущаяДата();
	
	СуммаПодтверждено = Товар.Итог("СуммаСНДС");
	СуммаОтказано = Отказы.Итог("СуммаСНДС");
	
	ТЗВрем = Товар.Выгрузить(,"КодТовара,Количество,СуммаСНДС");
	ТЗВрем.Свернуть("КодТовара","Количество,СуммаСНДС");
	
	
	Для каждого Выборка из ТЗВрем Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("КодТовара",Выборка.КодТовара);
		НайденныеСтроки = Товар.НайтиСтроки(Отбор);
		Для каждого стр из НайденныеСтроки Цикл
			Если стр.ЦенаУчета = 0 Тогда
				стр.ЦенаУчета = Окр(Выборка.СуммаСНДС/Выборка.Количество,2);	
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;

	
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ПЗ.КодТовара,
	//               |	СРЕДНЕЕ(ПЗ.ЦенаСоСкидкойСНДС) КАК ЦенаУчета
	//               |ИЗ
	//               |	Документ.ПодтверждениеЗаказа.Товар КАК ПЗ
	//               |ГДЕ
	//               |	ПЗ.Ссылка = &Ссылка
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ПЗ.КодТовара";
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);	
	//Рез = Запрос.Выполнить();
	//Выборка = Рез.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Отбор = Новый Структура;
	//	Отбор.Вставить("КодТовара",Выборка.КодТовара);
	//	НайденныеСтроки = Товар.НайтиСтроки(Отбор);
	//	Для каждого стр из НайденныеСтроки Цикл
	//		Если стр.ЦенаУчета = 0 Тогда
	//			стр.ЦенаУчета = Выборка.ЦенаУчета;	
	//		КонецЕсли;
	//	КонецЦикла;
	//	
	//КонецЦикла; 
	
	
	
	
	ОбщегоНазначения.ЗаписатьСменуСостоянияДокумента(Ссылка,РежимЗаписи,ПометкаУдаления);

КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//Начало НЭТИ Барданов А.Ю. 25.01.2019 ENT-1178 оптимизация создания инвойса в 1С Склад
	////Начало НЭТИ Барданов А.Ю. 29.12.2018 ENT-855 оптимизация создания инвойса в 1С Склад
	//Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПроизводителю") Тогда
	//	ДатаПоследнегоИзменения = ДанныеЗаполнения.ДатаПоследнегоИзменения;
	//	ДатаПоставки = ДанныеЗаполнения.ДатаПоставки;
	//	ИдентификаторEDI = ДанныеЗаполнения.ИдентификаторEDI;
	//	Комментарий = ДанныеЗаполнения.Комментарий;
	//	Производитель = ДанныеЗаполнения.Производитель;
	//	ДокументОснование = ДанныеЗаполнения.Ссылка;
	//	Для Каждого ТекСтрокаТовар Из ДанныеЗаполнения.Товар Цикл
	//		НоваяСтрока = Товар.Добавить();
	//		НоваяСтрока.КодТовара = ТекСтрокаТовар.КодТовара;
	//		НоваяСтрока.Количество = ТекСтрокаТовар.Количество;
	//		НоваяСтрока.Товар = ТекСтрокаТовар.Товар;
	//	КонецЦикла;
	//КонецЕсли;
	////Конец НЭТИ Барданов А.Ю. 29.12.2018 ENT-855
	//Конец НЭТИ Барданов А.Ю. 25.01.2019 ENT-1178 оптимизация создания инвойса в 1С Склад
КонецПроцедуры

