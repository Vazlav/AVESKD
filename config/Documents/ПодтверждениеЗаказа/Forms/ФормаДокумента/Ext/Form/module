
Процедура КоманднаяПанель1кнЗаполнитьНаОсновании(Кнопка)
	
	
	Если Товар.Количество() > 0 Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Таблица товара содержит записи. Очистить?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Товар.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= ПолучитьФорму("ПодборТовара");
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.Основание = ДокументОснование;
	ФормаПодбора.ДатаДокумента = Дата;
	Если Товар.Количество() = 0 Тогда
		ФормаПодбора.ТаблицаОчищена = Истина;
	Иначе
		ФормаПодбора.ТаблицаОчищена = Ложь;
	КонецЕсли;
		
	ФормаПодбора.ОткрытьМодально(0);
	
	     
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда
		Товар.Очистить();
		Для каждого стр из ЗначениеВыбора Цикл
			Если стр.КоличествоФакт > 0 Тогда
				НоваяСтрока = Товар.Добавить();
				НоваяСтрока.КодТовара = стр.КодТовара;
				НоваяСтрока.Товар = стр.Товар;
				НоваяСтрока.СтавкаНДСПроизводителя = стр.СтавкаНДСПроизводителя;
				НоваяСтрока.Количество = стр.КоличествоФакт;
				НоваяСтрока.ЦенаСоСкидкойСНДС = стр.ЦенаФакт;
				НоваяСтрока.СуммаСНДС = НоваяСтрока.Количество*НоваяСтрока.ЦенаСоСкидкойСНДС;
				НоваяСтрока.ЦенаСоСкидкойБезНДС = НоваяСтрока.ЦенаСоСкидкойСНДС / (1+НоваяСтрока.СтавкаНДСПроизводителя/100);
				НоваяСтрока.СрокГодности = стр.СрокГодности;
				НоваяСтрока.ЦенаЗаказа = стр.ЦенаЗаказа;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ТоварПередНачаломДобавления(Элемент, Отказ, Копирование)
	Если Копирование = Истина Тогда
		Отказ = Истина;
	КонецЕсли;
	КоманднаяПанель1кнЗаполнитьНаОсновании("");
КонецПроцедуры

Процедура ДокументОснованиеПриИзменении(Элемент)
	
	Производитель = ДокументОснование.Производитель;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		Дата = ТекущаяДата();
	КонецЕсли;
	
	УправлениеДоступностьюЭлементовФормы();
	
	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект,СписокПечатныхФорм);
	
КонецПроцедуры

Процедура КоманднаяПанельНесопоставленныйТоварСопоставитьПозицию(Кнопка)
	
	Если НесопоставленныйТовар.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УсловиеФильтра = Новый СписокЗначений;
	
	ТЗНесопоставленныйТовар = Новый ТаблицаЗначений;
	ТЗНесопоставленныйТовар.Колонки.Добавить("Код");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Товар");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Связан");
	ТЗНесопоставленныйТовар.Колонки.Добавить("БарКод");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Производитель");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Блокировка");
	
	Для каждого стр из НесопоставленныйТовар Цикл
		НоваяСтрока = ТЗНесопоставленныйТовар.Добавить();
		НоваяСтрока.Код = стр.КодТовараПоставщика;
		НоваяСтрока.Товар = стр.НаименованиеТовараПоставщика;
		НоваяСтрока.Связан = NULL;
		НоваяСтрока.БарКод = стр.Баркод;
		НоваяСтрока.Производитель = "";
		НоваяСтрока.Блокировка = Ложь;
		
		УсловиеФильтра.Добавить(стр.КодТовараПоставщика);
	КонецЦикла;
	
	
	Связки = Обработки.УстановкаСвязокСПоставщикомИзДокумента.Создать();
	ФормаСвязок = Связки.ПолучитьФорму("УстановкаСвязокСПоставщикомНовая", , Новый УникальныйИдентификатор);
	ФормаСвязок.УсловиеФильтра = УсловиеФильтра;
	ФормаСвязок.ТЗНесопоставленныйТовар = ТЗНесопоставленныйТовар;
	ФормаСвязок.Поставщик = Производитель.Поставщик;
	ФормаСвязок.ОткрытьМодально();
	
КонецПроцедуры

Процедура КоманднаяПанельНесопоставленныйТоварПеренестиВДокумент(Кнопка)
	
	Поставщик = Производитель.Поставщик;
	Если Поставщик.ПоставщикСвязок.Пустая() Тогда
		ПоставщикСвязок = Поставщик;
	Иначе
		ПоставщикСвязок = Поставщик.ПоставщикСвязок;
	КонецЕсли;
	
	ч = 0;
	СтрокиДляУдаления = Новый Массив();
	
	Для Каждого ТекСтр Из НесопоставленныйТовар Цикл
				
		СтрокаТовара = ОМ_Справочники.ПолучитьТоварПоСвязке(ТекСтр.КодТовараПоставщика, ПоставщикСвязок);
		Если СтрокаТовара = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрДок = Товар.Добавить();
		ЗаполнитьЗначенияСвойств(СтрДок, ТекСтр);
		СтрДок.Товар = СтрокаТовара.Товар;
		СтрДок.КодТовара = СтрокаТовара.КодТовара;
		
		ч = ч + 1;
		СтрокиДляУдаления.Добавить(ТекСтр);
		
	КонецЦикла;
	
	Для Каждого УдСтрока Из СтрокиДляУдаления Цикл
		НесопоставленныйТовар.Удалить(УдСтрока);
	КонецЦикла;
	
	Сообщить("Перенесено строк: " + Формат(ч, "ЧН=; ЧГ=0"));
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОтклонить(Кнопка)
	
	Если Не ЗначениеЗаполнено(ПричинаОтклонения) Тогда
		Сообщить("Необходимо заполнить поле ""Причина отклонения"" (вкладка ""Дополнительно""). Эта информация будет передана поставщику через EDI", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Документ будет помечен на удаление в 1С и отклонен в системе EDI. Отменить действие будет невозможно. Продолжить?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СтатусEDI = Перечисления.СтатусыВходящегоСообщенияEDI.КОтклонению;
	Проведен = Ложь;
	ПометкаУдаления = Истина;
	Записать(РежимЗаписиДокумента.Запись);
	ЭтаФорма.Закрыть();
	
КонецПроцедуры  

Процедура ОсновныеДействияФормыУтвердить(Кнопка)
	
	Если Не Проведен Тогда
		Сообщить("Необходимо предварительно провести документ", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Документ будет утвержден в системе EDI. Отменить действие будет невозможно. Продолжить?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СтатусEDI = Перечисления.СтатусыВходящегоСообщенияEDI.КУтверждению;
	Записать(РежимЗаписиДокумента.Запись);
	
	УправлениеДоступностьюЭлементовФормы();
	
КонецПроцедуры

Процедура УправлениеДоступностьюЭлементовФормы()

	КнопкиEDI = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.УтверждениеВEDI.Кнопки;
	ДоступностьКнопокEDI = СтатусEDI=Перечисления.СтатусыВходящегоСообщенияEDI.Получено;
	КнопкиEDI.Утвердить.Доступность = ДоступностьКнопокEDI;
	КнопкиEDI.Отклонить.Доступность = ДоступностьКнопокEDI;
	
	ЭлементыФормы.Товар.ТолькоПросмотр = СтатусEDI <> Перечисления.СтатусыВходящегоСообщенияEDI.ПустаяСсылка();

КонецПроцедуры

Процедура Панель2ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = 3 Тогда	
		ОбновитьТаблицуЗаказПлюсПодтверждение();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельЗаказПлюсПодтверждениеОбновитьТаблицуПодтверждения(Кнопка)
	
	ОбновитьТаблицуЗаказПлюсПодтверждение();
	
КонецПроцедуры

Процедура ОбновитьТаблицуЗаказПлюсПодтверждение()
	
	ЗаказПлюсПодтверждение.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПроизводителюТовар.Товар КАК Товар,
	|	ЗаказПроизводителюТовар.КодТовара КАК КодТовара,
	|	СУММА(ЗаказПроизводителюТовар.Количество) КАК Количество,
	|	МАКСИМУМ(ЗаказПроизводителюТовар.Цена) КАК Цена,
	|	&Ссылка КАК ДокументЗаказа
	|ПОМЕСТИТЬ втТоварыЗаказа
	|ИЗ
	|	Документ.ЗаказПроизводителю.Товар КАК ЗаказПроизводителюТовар
	|ГДЕ
	|	ЗаказПроизводителюТовар.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПроизводителюТовар.Товар,
	|	ЗаказПроизводителюТовар.КодТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодтверждениеЗаказаТовар.Товар КАК Товар,
	|	ПодтверждениеЗаказаТовар.КодТовара КАК КодТовара,
	|	СУММА(ПодтверждениеЗаказаТовар.Количество) КАК Количество,
	|	МАКСИМУМ(ПодтверждениеЗаказаТовар.ЦенаСоСкидкойСНДС) КАК Цена,
	|	МАКСИМУМ(ПодтверждениеЗаказаТовар.СрокГодности) КАК СрокГодности,
	|	МАКСИМУМ(ПодтверждениеЗаказаТовар.ПроцентОСГ) КАК ПроцентСрока,
	|	МАКСИМУМ(ПодтверждениеЗаказаТовар.Ссылка) КАК ДокументПодтверждения
	|ПОМЕСТИТЬ втТоварыПодтвержения
	|ИЗ
	|	Документ.ПодтверждениеЗаказа.Товар КАК ПодтверждениеЗаказаТовар
	|ГДЕ
	|	ПодтверждениеЗаказаТовар.Ссылка.ДокументОснование = &Ссылка
	|	И ПодтверждениеЗаказаТовар.Ссылка.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодтверждениеЗаказаТовар.Товар,
	|	ПодтверждениеЗаказаТовар.КодТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодтверждениеЗаказаОтказы.Товар КАК Товар,
	|	ПодтверждениеЗаказаОтказы.КодТовара КАК КодТовара,
	|	СУММА(ПодтверждениеЗаказаОтказы.Количество) КАК Количество,
	|	МАКСИМУМ(ПодтверждениеЗаказаОтказы.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ втТоварыОтказов
	|ИЗ
	|	Документ.ПодтверждениеЗаказа.Отказы КАК ПодтверждениеЗаказаОтказы
	|ГДЕ
	|	ПодтверждениеЗаказаОтказы.Ссылка.ДокументОснование = &Ссылка
	|	И ПодтверждениеЗаказаОтказы.Ссылка.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодтверждениеЗаказаОтказы.Товар,
	|	ПодтверждениеЗаказаОтказы.КодТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(втТоварыЗаказа.Товар, втТоварыПодтвержения.Товар) КАК Товар,
	|	ЕСТЬNULL(втТоварыЗаказа.КодТовара, втТоварыПодтвержения.КодТовара) КАК КодТовара,
	|	ЕСТЬNULL(втТоварыЗаказа.Количество, 0) КАК КоличествоЗаказ,
	|	ЕСТЬNULL(втТоварыЗаказа.Цена, 0) КАК ЦенаЗаказ,
	|	ЕСТЬNULL(втТоварыЗаказа.ДокументЗаказа, ЗНАЧЕНИЕ(Документ.ЗаказПроизводителю.ПустаяСсылка)) КАК ДокументЗаказа,
	|	ЕСТЬNULL(втТоварыПодтвержения.Количество, 0) КАК КоличествоПодтверждение,
	|	ЕСТЬNULL(втТоварыПодтвержения.Цена, 0) КАК ЦенаПодтверждение,
	|	ЕСТЬNULL(втТоварыПодтвержения.ПроцентСрока, 0) КАК ПроцентСрокаПодтверждение,
	|	ЕСТЬNULL(втТоварыПодтвержения.ДокументПодтверждения, ЕСТЬNULL(втТоварыОтказов.Ссылка, ЗНАЧЕНИЕ(Документ.ПодтверждениеЗаказа.ПустаяСсылка))) КАК ДокументПодтверждения,
	|	ЕСТЬNULL(втТоварыОтказов.Количество, 0) КАК КоличествоОтказ,
	|	ЕСТЬNULL(втТоварыПодтвержения.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокГодности
	|ПОМЕСТИТЬ втЗаказПлюсПодтверждение
	|ИЗ
	|	втТоварыЗаказа КАК втТоварыЗаказа
	|		ПОЛНОЕ СОЕДИНЕНИЕ втТоварыПодтвержения КАК втТоварыПодтвержения
	|		ПО втТоварыЗаказа.Товар = втТоварыПодтвержения.Товар
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТоварыОтказов КАК втТоварыОтказов
	|		ПО втТоварыЗаказа.Товар = втТоварыОтказов.Товар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втТоварыЗаказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втТоварыПодтвержения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втТоварыОтказов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнвойсТовар.Товар КАК Товар,
	|	ИнвойсТовар.КодТовара КАК КодТовара,
	|	СУММА(ИнвойсТовар.Количество) КАК Количество,
	|	МАКСИМУМ(ИнвойсТовар.ЦенаОтпускнаяСНДС) КАК ЦенаОтпускнаяСНДС,
	|	МАКСИМУМ(ИнвойсТовар.СрокГодности) КАК СрокГодности,
	|	МАКСИМУМ(ИнвойсТовар.ПроцентОСГ) КАК ПроцентСрока,
	|	МАКСИМУМ(ИнвойсТовар.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ втТоварыИнвойса
	|ИЗ
	|	Документ.Инвойс.Товар КАК ИнвойсТовар
	|ГДЕ
	|	ИнвойсТовар.Ссылка.ДокументОснование = &Ссылка
	|	И ИнвойсТовар.Ссылка.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвойсТовар.Товар,
	|	ИнвойсТовар.КодТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.Товар, втТоварыИнвойса.Товар) КАК Товар,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.КодТовара, втТоварыИнвойса.КодТовара) КАК КодТовара,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.КоличествоЗаказ, 0) КАК КоличествоЗаказ,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ЦенаЗаказ, 0) КАК ЦенаЗаказ,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ДокументЗаказа, ЗНАЧЕНИЕ(Документ.ЗаказПроизводителю.ПустаяСсылка)) КАК ДокументЗаказа,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.КоличествоПодтверждение, 0) КАК КоличествоПодтверждение,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ЦенаПодтверждение, 0) КАК ЦенаПодтверждение,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокГодностиПодтверждение,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ПроцентСрокаПодтверждение, 0) КАК ПроцентСрокаПодтверждение,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ДокументПодтверждения, 0) КАК ДокументПодтверждения,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.КоличествоОтказ, 0) КАК КоличествоОтказ,
	|	ЕСТЬNULL(втТоварыИнвойса.Количество, 0) КАК КоличествоИнвойс,
	|	ЕСТЬNULL(втТоварыИнвойса.ЦенаОтпускнаяСНДС, 0) КАК ЦенаИнвойс,
	|	ЕСТЬNULL(втТоварыИнвойса.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокГодностиИнвойс,
	|	ЕСТЬNULL(втТоварыИнвойса.ПроцентСрока, 0) КАК ПроцентСрокаИнвойс,
	|	ЕСТЬNULL(втТоварыИнвойса.Ссылка, ЗНАЧЕНИЕ(Документ.Инвойс.ПустаяСсылка)) КАК ДокументИнвойс,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ДокументЗаказа.Номер, 0) КАК НомерЗаказа,
	|	ЕСТЬNULL(втЗаказПлюсПодтверждение.ДокументПодтверждения.Номер, 0) КАК НомерПодтверждения,
	|	ЕСТЬNULL(втТоварыИнвойса.Ссылка.Номер, 0) КАК НомерИнвойса
	|ИЗ
	|	втЗаказПлюсПодтверждение КАК втЗаказПлюсПодтверждение
	|		ПОЛНОЕ СОЕДИНЕНИЕ втТоварыИнвойса КАК втТоварыИнвойса
	|		ПО втЗаказПлюсПодтверждение.Товар = втТоварыИнвойса.Товар";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование); 	
	РезультатЗапроса = Запрос.Выполнить();     	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НовСтр = ЗаказПлюсПодтверждение.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
		
		Если Выборка.ДокументЗаказа.Пустая() Тогда
			НовСтр.ЦенаЗаказ = "-";
		КонецЕсли;
		
		Если Выборка.ДокументПодтверждения.Пустая() Тогда
			НовСтр.ЦенаПодтверждение = "-";
			НовСтр.СрокГодностиПодтверждение = "-";
			НовСтр.ПроцентСрокаПодтверждение = "-";
		КонецЕсли;
		
		Если Выборка.ДокументИнвойс.Пустая() Тогда
			НовСтр.ЦенаИнвойс = "-";
			НовСтр.СрокГодностиИнвойс = "-";
			НовСтр.ПроцентСрокаИнвойс = "-";
		КонецЕсли;
		
	КонецЦикла;
	 	
КонецПроцедуры

Процедура ЗаказПлюсПодтверждениеПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Красный = Новый Цвет(255, 204, 153);
	Желтый = Новый Цвет(255, 255, 153);
	Зеленый = Новый Цвет(204, 255, 204);
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки.Количество.Видимость = Ложь;
		ОформлениеСтроки.Ячейки.Цена.Видимость = Ложь;
		ОформлениеСтроки.Ячейки.СрокГодности.Видимость = Ложь;
		ОформлениеСтроки.Ячейки.ПроцентСрока.Видимость = Ложь;
		
		Если ОформлениеСтроки.ДанныеСтроки.КоличествоПодтверждение = 0 Тогда
			ОформлениеСтроки.Ячейки.КоличествоПодтверждение.ЦветФона = Красный;
		ИначеЕсли ОформлениеСтроки.ДанныеСтроки.КоличествоЗаказ = 0 Тогда
			ОформлениеСтроки.Ячейки.КоличествоПодтверждение.ЦветФона = Зеленый;
		ИначеЕсли ОформлениеСтроки.ДанныеСтроки.КоличествоПодтверждение <> ОформлениеСтроки.ДанныеСтроки.КоличествоЗаказ Тогда
			ОформлениеСтроки.Ячейки.КоличествоПодтверждение.ЦветФона = Желтый;
		КонецЕсли;
		
		Если ОформлениеСтроки.ДанныеСтроки.КоличествоИнвойс = 0 Тогда
			Если ОформлениеСтроки.ДанныеСтроки.КоличествоПодтверждение > 0 Тогда
				ОформлениеСтроки.Ячейки.КоличествоИнвойс.ЦветФона = Красный;
			КонецЕсли;
		ИначеЕсли ОформлениеСтроки.ДанныеСтроки.КоличествоПодтверждение = 0 Тогда
			ОформлениеСтроки.Ячейки.КоличествоИнвойс.ЦветФона = Зеленый;
		ИначеЕсли ОформлениеСтроки.ДанныеСтроки.КоличествоИнвойс <> ОформлениеСтроки.ДанныеСтроки.КоличествоПодтверждение Тогда
			ОформлениеСтроки.Ячейки.КоличествоИнвойс.ЦветФона = Желтый;
		КонецЕсли;
		
		Если ОформлениеСтроки.ДанныеСтроки.ЦенаЗаказ <> "-" И ОформлениеСтроки.ДанныеСтроки.ЦенаПодтверждение <> "-" 
			И ОформлениеСтроки.ДанныеСтроки.ЦенаЗаказ <> ОформлениеСтроки.ДанныеСтроки.ЦенаПодтверждение Тогда
			ОформлениеСтроки.Ячейки.ЦенаПодтверждение.ЦветФона = Желтый;
		КонецЕсли;		
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаказПлюсПодтверждениеВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Колонка.Имя = "НомерЗаказа" Тогда
		ДокСсылка = ВыбраннаяСтрока.ДокументЗаказа;
	ИначеЕсли Колонка.Имя = "НомерИнвойса" Тогда
		ДокСсылка = ВыбраннаяСтрока.ДокументИнвойс;
	Иначе
		Возврат;
	КонецЕсли;		
		
	Если Не ДокСсылка.Пустая() Тогда
		ДокФорма = ДокСсылка.ПолучитьФорму();
		Если ДокФорма <> Неопределено Тогда
			ДокФорма.Открыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//начком
Процедура ОсновныеДействияФормыСоздатьИнвойс(Кнопка)
	ПараметрыФормы=Новый Структура("Основание", ССылка);
	ОткрытьФорму("Документ.Инвойс.ФормаОбъекта",ПараметрыФормы);
КонецПроцедуры


