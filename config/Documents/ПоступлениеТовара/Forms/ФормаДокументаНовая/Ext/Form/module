Перем мКолонкиТовары;
Перем СписокКолонокДляПересчетаПоЦене;
Перем СписокКолонокПересчетаЦЕН;

Процедура ОбновитьИтоги()
	
	ЭлементыФормы.ИтогиСуммаЗакуп.Заголовок = Формат(Товар.Итог("СуммаЗакуп"),"ЧЦ=10; ЧДЦ=2");
	ЭлементыФормы.ИтогиСуммаРозн.Заголовок = Формат(Товар.Итог("СуммаРозн"),"ЧЦ=10; ЧДЦ=2");
	ЭлементыФормы.ИтогиСуммаЗакупНДС.Заголовок = Формат(Товар.Итог("НДСЗакуп"),"ЧЦ=10; ЧДЦ=2");

	ТЗНДС = Товар.Выгрузить(,"СтавкаНДС,НДСЗакуп");
	ТЗНДС.Свернуть("СтавкаНДС","НДСЗакуп");
	Нашли = ТЗНДС.Найти(Справочники.СтавкиНДС.НайтиПоРеквизиту("Ставка",10),"СтавкаНДС");
	Если НЕ Нашли = Неопределено Тогда
		ЭлементыФормы.ИтогиСуммаЗакупНДС10.Заголовок = Формат(Нашли.НДСЗАкуп,"ЧЦ=10; ЧДЦ=2");	
	КонецЕсли;
	
	Нашли = ТЗНДС.Найти(Справочники.СтавкиНДС.НайтиПоРеквизиту("Ставка",18),"СтавкаНДС");
	Если НЕ Нашли = Неопределено Тогда
		ЭлементыФормы.ИтогиСуммаЗакупНДС18.Заголовок = Формат(Нашли.НДСЗАкуп,"ЧЦ=10; ЧДЦ=2");	
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ОбновитьИтоги();
	
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если мКолонкиТовары.Код.Видимость Тогда
		Если ДанныеСтроки.Товар <> Неопределено Тогда
			ОформлениеСтроки.Ячейки.Код.УстановитьТекст(ДанныеСтроки.Товар.Код);
		Иначе
			ОформлениеСтроки.Ячейки.Код.УстановитьТекст("");
		КонецЕсли;
	КонецЕсли;
	ЖВ = ДанныеСтроки.Товар.ЖНВЛС;
	 Если  ЖВ = Ложь и ДанныеСтроки.ЦенаГосРегистрации > 0 ТОгда
		 //Это строка с ошибками расценки или подозрительная с точки зрения цен или сроков годности
		 ОформлениеСтроки.ЦветФона=Новый Цвет(255,0,0);
	 КонецЕсли;
	 
	 
	 Если ЖВ = Истина тогда
		 //ОформлениеСтроки.Шрифт.Жирный = Истина;
		 ОформлениеСтроки.Ячейки.ЖНВЛС.ЗначениеКартинки  =БиблиотекаКартинок.Здоровье;
	 КонецЕсли;	
	 
	 Если  ОшибкиРасценки.Найти(ДанныеСтроки.Партия,"Партия")<> Неопределено ТОгда
		 //Это строка с ошибками расценки или подозрительная с точки зрения цен или сроков годности
		 ОформлениеСтроки.ЦветФона=Новый Цвет(255,155,240);
	 КонецЕсли;
	
КонецПроцедуры

Процедура ТоварПередУдалением(Элемент, Отказ)
	
//------------------<Контроль изменения серии задним числом>-------------------GtG---- 
	ТХТ="ВЫБРАТЬ
	    |	СУММА(ПартииЖНВЛСОбороты.КолвоРасход) КАК КолвоРасход,
	    |	ПартииЖНВЛСОбороты.Регистратор КАК Регистратор
	    |ИЗ
	    |	РегистрНакопления.ПартииЖНВЛС.Обороты(
	    |			&НачПериода,
	    |			,
	    |			Регистратор,
	    |			Товар = &ВыбТовар
	    |				И Склад = &ВыбСклад
	    |				И Партия = &ВыбПартия) КАК ПартииЖНВЛСОбороты
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ПартииЖНВЛСОбороты.Регистратор";
	
	
	
	ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	
	Партия=ТСД.Партия;
	
	
	Если Партия.Пустая()=Ложь тогда
		
		Запрос= Новый Запрос;
		Запрос.Текст=ТХТ;
		
		Запрос.УстановитьПараметр("НачПериода",НачалоДня(Дата));
		Запрос.УстановитьПараметр("ВыбТовар",ТСД.ТОвар);
		Запрос.УстановитьПараметр("ВыбСклад",Склад);
		Запрос.УстановитьПараметр("ВыбПартия",ТСД.Партия);
		
		ТЗ=Запрос.Выполнить().Выгрузить();
		
		Если ТЗ.Количество()>0 Тогда
			Сообщить(""+ТСД.ТОвар+"   Партия: "+Партия);
			Сообщить("УЖЕ БЫЛ РАСХОД ЭТОЙ Партии!");
			Для Каждого Стр из ТЗ Цикл
				Сообщить(""+Стр.Регистратор+" расход "+Стр.КолвоРасход);
			КонецЦикла;
			Отказ=Истина;  // отключает процесс выбора из справочника
		КонецЕсли;//ТЗ.Количество()>0 
	КонецЕсли;//Партия.Пустая()=Ложь	
	Если Отказ = Ложь Тогда
		Предупреждение("Если удалили случайно, то можно закрыть документ без сохранения!",5);		
	КонецЕсли;
	
	
КонецПроцедуры

Функция ПроверкаЗаполненияКритическиВажныхЗначенийДляСтроки  (ТекСтрокаТЧ) 
    // Назначение:
	// проверяет заполнены ли поля Цена и ставка ндс
	// Возвращает истина или ложь
    // 
	//--------------------------------------------------------------------------------
	 Если ТекСтрокаТЧ.Количество=0 Тогда
		 Предупреждение("Не указано количество!");
		 Возврат Ложь;
	 КонецЕсли;
	 
	 Если ТекСтрокаТЧ.СтавкаНДС.Пустая()  Тогда
		 Предупреждение("Не указана ставка НДС!");
		 Возврат Ложь;
	 КонецЕсли;

     

     Возврат Истина;
 КонецФункции
 
Функция МожноПересчитатьСтроку  (ТекСтрДок, Колонка) 
     // Назначение:
 	// проверяет на заполнение полей ставка НДС, Цена закуп, СуммаЗакуп
 	// 
    // Возврат Истина / Ложь
 	//--------------------------------------------------------------------------------
 	СтрОшибок="";
	
	ПересчетПоЦене=0;
	
	Нельзя=0;
	
	
	Если Найти(СписокКолонокДляПересчетаПоЦене,Колонка+",")<>0 тогда
		ПересчетПоЦене=1;
	КонецЕсли;
	
	
	Если ПересчетПоЦене=1 Тогда
		Если ТекСтрДок["ЦенаЗакупБезНДС"]=0 Тогда
			Нельзя=1;
		КонецЕсли; 
	Иначе
		//----------------------------< Пересчет должен произойти по сумме >--------------------------------GtG---
		Если ТекСтрДок["СуммаЗакуп"]=0 Тогда
			Нельзя=1;
		КонецЕсли; 
	КонецЕсли;
	
	//----------------------------< Расчет всех сумм происходит от колва фактического >--------------------------------GtG--- 
	//Если  (ТекСтрДок.Количество<>0) и (ТекСтрДок.КоличествоФакт=0) Тогда
	//	ТекСтрДок.КоличествоФакт=ТекСтрДок.Количество; // не актуально ибо бойбракнедовоз
	//КонецЕсли; 	
	
	
	
	Если Нельзя=1 Тогда
		//Предупреждение("Не заполнены необходимые для пересчета поля строки документа:"+ СтрОшибок);
		Состояние("Пересчет пока невзможен, не все поля заполнены!");
		Возврат ЛОЖЬ;
	КонецЕсли; 	
	
	Возврат ИСТИНА ;
 КонецФункции

Функция НДСЗакупПравильный(ТекСтрокаТЧ)	// Назначение:
	// Проверяет на глюк
	// сумма НДС не должна отличаться на 0,хх от расчетного значения
	// допустимая погрешность ЛимитОтклоненияСуммПриПоступленииТовара от суммы НДС по 1-й штуке
	//============================================================================ GtG ===
	ПРеделПогрешности=Константы.ЛимитОтклоненияСуммПриПоступленииТовара.Получить();
	Если ПроверкаЗаполненияКритическиВажныхЗначенийДляСтроки  (ТекСтрокаТЧ)Тогда
		
		РасчетноеЗначениеНаВсюСумму=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(ТекСтрокаТЧ["СуммаЗакуп"],ТекСтрокаТЧ.СтавкаНДС,2);
		РасчетноеЗначениеНаВсюСумму=Окр(РасчетноеЗначениеНаВсюСумму,2);
		РасчетноеЗначение =РасчетноеЗначениеНаВсюСумму/ТекСтрокаТЧ.КоличествоФакт;
		
		РасчетноеЗначение=Окр(РасчетноеЗначение,2);
		МаксДопПогрешность=ПРеделПогрешности/100* РасчетноеЗначение;
		
		ТекЗн          =Окр(ТекСтрокаТЧ["НДСЗакуп"]/ТекСтрокаТЧ.КоличествоФакт,2); // 1 Шт
		ТекЗнНаВсюСумму=ТекСтрокаТЧ.НДСЗакуп;
		
		
		Погрешность= ТекЗн-РасчетноеЗначение;
		
		Если Погрешность<0 Тогда
			Погрешность=Погрешность*(-1);
		КонецЕсли; 
//		                            -maxD         +maxD
		//----------------------------{-----Rzn-----}--------------------------------------->
//		                     *   *       ^        ^   *      *
//                           |   |       |        |   |      |

		Если  (РасчетноеЗначение+Погрешность> РасчетноеЗначение+МаксДопПогрешность) или (РасчетноеЗначение-Погрешность< РасчетноеЗначение-МаксДопПогрешность)Тогда
			Предупреждение("Странная сумма НДС закуп.!
							|Расчетное значение НДС на всю сумму = "+РасчетноеЗначениеНаВсюСумму+"
							|Текущее значение НДС на всю сумму = "+ТекЗнНаВсюСумму+"
							|
							|Расчетное значение НДС на 1шт       = "+РасчетноеЗначение+"
							|Текущее значение НДС на 1шт       = "+ТекЗн+"
							|
							|Разница в НДС за 1шт. более допустимой: 
							| "+Погрешность+"  >  ("+ПРеделПогрешности+"% * "+РасчетноеЗначение+") = " +Окр(МаксДопПогрешность,5));
			Возврат	ЛОЖЬ;// Нужно пересчитать						
		Иначе
			ВОЗВРАТ ИСТИНА ; // ОК
		КонецЕсли; 
	КонецЕсли; 	
	ВОЗВРАТ ИСТИНА; // по умолчанию все ОК
 КонецФункции 


Процедура ПересчетСтрокиДокумента  (ТекСтрД, ИмяКол,БезВопросов= ЛОЖЬ) Экспорт
    // Назначение:
	// Выполняет пересчет строки документа и создает партию если ее нет
	// Если партия есть то изменяет данные хранящиеся в ней.
    // 
	//--------------------------------------------------------------------------------
	//было ТекСтрД.КоличествоФакт=ТекСтрД.Количество-ТекСтрД.БойБрак-ТекСтрД.Недовоз;
    //стало
	ТекСтрД.КоличествоФакт=ТекСтрД.Количество-ТекСтрД.Недовоз;
	//----------------------------< проверка на заполнение Цены и Ставки НДС >--------------------------------GtG---
	Если МожноПересчитатьСтроку(ТекСтрД,ИмяКол) = ЛОЖЬ Тогда
		Возврат;
	КонецЕсли; 
	
	

	//----------------------------< Пересчет по цене >--------------------------------GtG--- 
	Если Найти(СписокКолонокДляПересчетаПоЦене,ИмяКол+",")<>0 тогда
	
		ТекСтрД["ЦенаЗакуп"]=ТекСтрД["ЦенаЗакупБезНДС"]+ТекСтрД["ЦенаЗакупБезНДС"]/100*ТекСтрД.СтавкаНДС.Ставка;
		ТекСтрД["СуммаЗакуп"]=ТекСтрД["ЦенаЗакуп"]*ТекСтрД.КоличествоФАКТ; // !!! ПО ФАКТИЧЕСКОМУ КОЛВУ !!!
		ТекСтрД["НДСЗакуп"]=ТекСтрД["ЦенаЗакупБезНДС"]/100*ТекСтрД.СтавкаНДС.Ставка*ТекСтрД.КоличествоФАКТ;
		
		
		ТекСтрД["СуммаРозн"]=ТекСтрД["ЦенаРозн"]*ТекСтрД.КоличествоФАКТ; // !!! ПО ФАКТИЧЕСКОМУ КОЛВУ !!! // GtG 31.07.2008 15:00:49 при недовозе при прямом приходе в аптеку
		
			
		//----------------------------< свертка >--------------------------------GtG--- 
		//ОбновитьСверткуПоНДС  (); 
	КонецЕсли;
	
	//----------------------------< Пересчет по сумме >--------------------------------GtG---
	// Пересчет цен, только тех, сумму которых изменили
	// Причем з вопросом, пересчитать или ну его 
	Если Найти(СписокКолонокПересчетаЦЕН,ИмяКол+",")<>0 Тогда
		
		Если БезВопросов=Ложь Тогда // Спросим, надо ли пересчитать цену
			
			
				ТекстВопроса="Изменена закупочная сумма!
				|
				|Можно пересчитать закупочную цену,
				|розничную цену (по проценту наценки) и
				|розничную сумму (по розн. цене).
				|
				|Оставить как введено?";
				
				Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да тогда
					
					ТекСтрД.СуммаОтклоненийСНДС	= ТекСтрД.ЦенаЗакуп*(ТекСтрД.БойБрак+ТекСтрД.Недовоз);
					
					Возврат;
			КонецЕсли; 
		КонецЕсли; 	
		
		//----------------------------< Собственно пересчет Закуп цены >--------------------------------GtG---
		// и процента наценки если ето розн или опт. цена.
		//СуммаОптовая,СуммаРозн,СуммаЗакуп
		Если Найти(ИмяКол,"Закуп")<>0 тогда
			//----------------------------< Пересчет закупочной цены >--------------------------------GtG---
			// Как следствие пересчет розн  цены по  проценту наценки  и далее розн суммы
			
			
			
			
			ТекСтрД["ЦенаЗакуп"]=Окр(ТекСтрД["СуммаЗакуп"]/ТекСтрД.КоличествоФАКТ,2);
			СуммаНДСЗакуп=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД["СуммаЗакуп"],ТекСтрД.СтавкаНДС);
			СуммаНДСЗакупНа1Шт=СуммаНДСЗакуп/ТекСтрД.КоличествоФАКТ;
			ТекСтрД["ЦенаЗакупБезНДС"]=ТекСтрД["ЦенаЗакуп"]-СуммаНДСЗакупНа1Шт;
			
			ТекСтрД["СуммаРозн"]=ТекСтрД["ЦенаРозн"]*ТекСтрД.КоличествоФАКТ; // !!! ПО ФАКТИЧЕСКОМУ КОЛВУ !!! // GtG 31.07.2008 15:00:49 при недовозе при прямом приходе в аптеку
			
			
			//----------------------------< Проверим НДС закупочный >--------------------------------GtG---
			Если НДСЗакупПравильный(ТекСтрД)= ЛОЖЬ Тогда
				// подозрительно расходится НДС
				Если БезВопросов = Истина Тогда
					ТекСтрД["НДСЗакуп"]=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД["СуммаЗакуп"],ТекСтрД.СтавкаНДС);
				Иначе
					Если Вопрос("Пересчитать НДС Закупочный?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
						ТекСтрД["НДСЗакуп"]=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД["СуммаЗакуп"],ТекСтрД.СтавкаНДС);
					КонецЕсли; 
				КонецЕсли;
			КонецЕсли; 
			
		
			ТекСтрД.СуммаОтклоненийСНДС	= ТекСтрД.ЦенаЗакуп*(ТекСтрД.БойБрак+ТекСтрД.Недовоз);
			
			Возврат;
		   
		КонецЕсли;                                                 
		
	КонецЕсли; 

	Если ИмяКол = "Количество" Тогда
		ТекСтрД.СуммаРозн = ТекСтрД.ЦенаРозн*ТекСтрД.КоличествоФакт;	
		ТекСтрД.НДСРозн = ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(ТекСтрД.СуммаРозн,ТекСтрД.СтавкаНДС);
	КонецЕсли;
	
	Если ИмяКол = "ЦенаРозн" Тогда
		ТекСтрД.СуммаРозн = ТекСтрД.ЦенаРозн*ТекСтрД.КоличествоФакт;
		ТекСтрД.НДСРозн = ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(ТекСтрД.СуммаРозн,ТекСтрД.СтавкаНДС);		
	КонецЕсли;
	
	Если ИмяКол = "СуммаРозн" Тогда
		ТекСтрД.ЦенаРозн = Окр(ТекСтрД.СуммаРозн/ТекСтрД.КоличествоФакт,2);
		ТекСтрД.НДСРозн = ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(ТекСтрД.СуммаРозн,ТекСтрД.СтавкаНДС);				
	КонецЕсли;
	//----------------------------< Проверка НДС Закуп при изменении вручную >--------------------------------GtG---
	Если ИмяКол="НДСЗакуп" Тогда
		
		Если НДСЗакупПравильный(ТекСтрД)= ЛОЖЬ Тогда
				// подозрительно расходится НДС
				Если БезВопросов = Истина Тогда
					ТекСтрД["НДСЗакуп"]=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД["СуммаЗакуп"],ТекСтрД.СтавкаНДС);
				Иначе
					Если Вопрос("Пересчитать НДС Закупочный?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
						ТекСтрД["НДСЗакуп"]=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД["СуммаЗакуп"],ТекСтрД.СтавкаНДС);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
	КонецЕсли; 	
	

	
ТекСтрД.СуммаОтклоненийСНДС	= ТекСтрД.ЦенаЗакуп*(ТекСтрД.БойБрак+ТекСтрД.Недовоз);
	
//ОбновитьДанныеПартии  (ТекСтрД) ; // обновится если есть
//ОбновитьСверткуПоНДС  (); 

     

    
 КонецПроцедуры


Процедура ТоварПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	 ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	 ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
	 
	 
	 Если (ИмяТекКол="Количество") или (ИмяТекКол="БойБрак")  или (ИмяТекКол="Недовоз") Тогда
		 // Назначение:
		 // При изменении количества пересчитываем ВСЕ колонки по строке документа
		 // Если сумма и НДС закуп меняется кричим об этом
		 //============================================================================ GtG ===
		 
		 ИмяТекКол="Количество";
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол); // пересчет при условии изменения количества
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 //Если ИмяТекКол="КоличествоФакт" Тогда
	 //	// Назначение:
	 //	// При изменении количества пересчитываем ВСЕ колонки по строке документа
	 //	// Если сумма и НДС закуп меняется кричим об этом
	 //	//============================================================================ GtG ===
	 //	ТСД.КоличествоФакт=ТСД.Количество-ТСД.БойБрак-ТСД.Недовоз;
	 //	ПересчетСтрокиДокумента  (ТСД, ИмяТекКол); // пересчет при условии изменения количества
	 //	ВОЗВРАТ ;
	 //КонецЕсли; 

	 
	 Если ИмяТекКол="Товар" Тогда
		 // Назначение:
		 // При изменении товара изменяем партию, (владельца) если она существует или создаем новую
		 //============================================================================ GtG ===
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="ЦенаЗакупБезНДС" Тогда
		 // Назначение:
		 // При измененииЗакупки без ндс пересчет всех сумм (закуп, опт, розн)
		 // если була задана сумма вручную контроль несхождения
		 // модификация партии если она существует
		 //============================================================================ GtG ===
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="СтавкаНДС" Тогда
		 // Назначение:
		 // При СтавкаНДС без ндс пересчет всех сумм  (закуп, опт, розн)
		 // если була задана сумма вручную контроль несхождения
		 // модификация партии если она существует
		 //============================================================================ GtG ===
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="ЦенаРозн" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="СуммаРозн" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли;
	 
	 Если ИмяТекКол="ПроцентРознНац" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 
	 Если ИмяТекКол="СуммаЗакуп" Тогда
		  ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="НДСЗакуп" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 //============================< Резервные затычки >================================GtG===

	 Если ИмяТекКол="" Тогда
		 
		 ВОЗВРАТ ;
	 КонецЕсли; 
	
	
	
КонецПроцедуры

Процедура ТоварЕИТОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТС=ЭлементыФормы.ТОвар.ТекущаяСтрока;
	ТС.Коэфф= ВыбранноеЗначение.К;	
	
КонецПроцедуры

Процедура ТоварСерияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТСД=ЭлементыФормы.ТОвар.ТекущаяСтрока;
	Если ВыбранноеЗначение.Забракована=Истина Тогда
		Предупреждение("ЭТА СЕРИЯ ЗАБРАКОВАНА! Все количество считаем браком!");
		ТСД.БойБрак=ТСД.Количество-ТСД.Недовоз;
		ПересчетСтрокиДокумента  (ТСД, "ЦенаЗакупБезНДС");
	КонецЕсли;
	ТСД.Сертификат = ВыбранноеЗначение.Сертификат;	
	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнПодбор(Кнопка)
	
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!");
		ВОЗВРАТ ;
	КонецЕсли; 
	
	
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПолучитьФорму("ФормаДляПодбора","",КлючУник);
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.ОткрытьМодально(0);
	
	
	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнРасценить(Кнопка)
	
	Если ТипНакладной = Перечисления.ТипыНакладной.ИндивидуальныйЗаказ Тогда
		Предупреждение("Запрещено расценивать накладную, сформированную на основании интернет заказа!");	
		Возврат;
	КонецЕсли;
	
	ОМ6_КоманднаяПанельКнопкаРасценить(ЭтаФорма,ЭтотОбъект,Товар);	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыСохранить(Кнопка)
	
	Если Проведен = Истина Тогда
		Предупреждение("Документ НЕ сохранен. В проведенном документе пользуйтесь кнопкой <Провести>!");
		Возврат;
	КонецЕсли;
	
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Вы действительно хотите сохранить документ/изменения?",Режим,0);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнВыгрузить(Кнопка)
	
	Если Проведен = Истина Тогда 
		Если Статус = Перечисления.СтатусПрихода.ВыгруженНаАптеку Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Документ был ранее выгружен в аптеку. ВЫГРУЗИТЬ еще раз?", Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		Иначе
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Вы действительно хотите выгрузить документ в аптеку?", Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВыгрузитьВАптеку() = Истина Тогда
			Предупреждение("Документ выгружен!",10);
		Иначе
			Предупреждение("Документ не выгружен!",10);
		КонецЕсли;
		ЭтаФорма.Закрыть();
	Иначе
		Предупреждение("Документ не проведен. Выгрузка невозможна",10);
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнДвижениеПоПартии(Кнопка)
	
	
	ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	
	Карточка=Отчеты.ДвижениеТовара1.Создать();
	
	Карточка.ВыбПартия=ТСД.Партия;
	Карточка.ВыбСклад=Склад;
	Карточка.ВыбТовар=ТСД.ТОвар;
	Карточка.ВыбФирма=Фирма;
	Карточка.НачПер=НачалоГода(Дата);
	Карточка.КонПер=Дата;
	
	
	Ф=Карточка.ПолучитьФорму("Форма");
	
	Ф.Открыть();
	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнКарточкаСтроки(Кнопка)
	
	ФормаКарточки = ЭтотОбъект.ПолучитьФорму("КарточкаСтроки");
	ФормаКарточки.ВладелецФормы = ЭтаФорма;
	ФормаКарточки.ИндексТекСтроки = Товар.Индекс(ЭлементыФормы.Товар.ТекущаяСтрока);
	ФормаКарточки.Регион = Склад.Регион;
	ФормаКарточки.Проведен = ЭтотОбъект.Проведен;
	ФормаКарточки.ОткрытьМодально();	
	
КонецПроцедуры


Процедура ДобавитьТовар(СтрокаДобавления) 
    // Назначение:
	// Добавляет строку товара в документ
	// выполняет расчет числовых полей
    // 
	//--------------------------------------------------------------------------------
	
	ПарамПоиска = Новый  Структура;
	ПарамПоиска.Вставить("Товар",СтрокаДобавления.Товар);
	ПарамПоиска.Вставить("ЕИТ",СтрокаДобавления.ЕИТ);
	ПарамПоиска.Вставить("ЦенаЗакуп",СтрокаДобавления.Цена);
	
	
	
	МассивНайденныхСтрок= Товар.НайтиСтроки(ПарамПоиска);
	
	Если МассивНайденныхСтрок.Количество()=0 Тогда
		
		
			//----------------------------< Добавляем только при добавлении КоэффДобавления=1  >--------------------------------GtG---
			НоваяСтрока=Товар.Добавить();
			НоваяСтрока.Товар=СтрокаДобавления.Товар;
			НоваяСтрока.Количество=СтрокаДобавления.Количество;
			НоваяСтрока.КоличествоФакт=СтрокаДобавления.Количество;
			НоваяСтрока.СтавкаНДС=НоваяСтрока.Товар.СтавкаНДС;
			НоваяСтрока.ЦенаГосРегистрации=0;
			//-----------------< единица  >----------------GtG---
			НоваяСтрока.ЕИТ=СтрокаДобавления.ЕИТ;
			НоваяСтрока.Коэфф=НоваяСтрока.ЕИТ.К;
            НоваяСтрока.ЦенаЗакуп = СтрокаДобавления.Цена;
			НоваяСтрока.СуммаЗакуп = СтрокаДобавления.Сумма;
			НоваяСтрока.ЦенаЗакупБезНДС = Окр(НоваяСтрока.ЦенаЗакуп/(1+НоваяСтрока.СтавкаНДС.Ставка/100),2);

			
			ОбщСтрокаВТ=НоваяСтрока;
			
			//-----------------< создаем партию  >----------------GtG--- 
			НоваяСтрока.Партия=ОМ1_СоздатьПартиюТовара(СтрокаДобавления.Товар).Ссылка;
			//------------------<Найдем заводской штрих-код>-------------------Virus----30.05.2008
			ТХТ = "ВЫБРАТЬ
			      |	ШКПТ.Ссылка как БарКод
			      |ИЗ
			      |	Справочник.ШКПТ КАК ШКПТ
			      |ГДЕ
			      |	ШКПТ.ПометкаУдаления = ЛОЖЬ
			      |	И ШКПТ.Владелец = &ЕИТ";
			Запрос = Новый Запрос;
			Запрос.Текст = ТХТ;
			Запрос.УстановитьПараметр("ЕИТ",НоваяСтрока.ЕИТ);
			Рез = Запрос.Выполнить().Выгрузить();
			Если Рез.Количество() = 1 Тогда
				НоваяСтрока.Баркод = Рез.Получить(0).БарКод;
			КонецЕсли;
			
	Иначе
		СтрокаВТ=МассивНайденныхСтрок[0];
		СтрокаВТ.Количество=СтрокаВТ.Количество+СтрокаДобавления.Количество;
		СтрокаВТ.КоличествоФакт=СтрокаВТ.КоличествоФакт+СтрокаДобавления.Количество;
        ОбщСтрокаВТ=СтрокаВТ;
	КонецЕсли; 
	
		  
	Если ОбщСтрокаВТ.СуммаЗакуп<>0 Тогда
		// Запускаем пересчет строки по цене ибо она была задана ранее
		// Имеет смысл при добавлении товара в сущ строку
		ПересчетСтрокиДокумента  (ОбщСтрокаВТ, "СуммаЗакуп", ИСТИНА);// пересчитывает ничего не спрашивая
	КонецЕсли; 
	
	//РезДобавления=ОбщСтрокаВТ;
	
 КонецПроцедуры
 
Процедура УправлениеВидимостьюСтраниц()
	 
	Если НесопоставленныйТовар.Количество() = 0 Тогда
		ЭлементыФормы.ПанельТовара.Страницы.СтраницаНесопоставленногоТовара.Видимость = Ложь;
	Иначе
		ЭлементыФормы.ПанельТовара.Страницы.СтраницаНесопоставленногоТовара.Видимость = Истина;
	КонецЕсли;
	
	Если ОшибкиРасценки.Количество() = 0 Тогда
		ЭлементыФормы.ПанельТовара.Страницы.СтраницаОшибокРасценки.Видимость = Ложь;
	Иначе
		ЭлементыФормы.ПанельТовара.Страницы.СтраницаОшибокРасценки.Видимость = Истина;
	КонецЕсли;	
	
КонецПроцедуры
 
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда
		Для Ы=0 По ЗначениеВыбора.Количество()-1 Цикл
			
		      СтрТЗ= ЗначениеВыбора.Получить(Ы) ;
			  
			  ДобавитьТовар(СтрТЗ);
		
		КонецЦикла;
	ИначеЕсли ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.МестаХранения") Тогда
		Склад = ЗначениеВыбора;
		Фирма = Склад.Фирма;
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура СкладПриИзменении(Элемент)
	
	Если Элемент.Значение.Фирма <> Фирма Тогда
		Фирма = Элемент.Значение.Фирма;
		ДоговорПоставки = Справочники.ДоговорыПоставки.ПустаяСсылка();
	КонецЕсли;
	
	Если Элемент.Значение.ТипСклада = Перечисления.ТипыМХ.Опт Тогда
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Ложь;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Ложь;
		ЭлементыФормы.Товар.Колонки.ПроцентРознНац.Видимость=Ложь;
	Иначе
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Истина;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Истина;
		ЭлементыФормы.Товар.Колонки.ПроцентРознНац.Видимость=Истина;		
	КонецЕсли;		
	
КонецПроцедуры

Процедура ФирмаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если (Склад.Фирма <> ВыбранноеЗначение) и (НЕ Склад.Пустая()) Тогда
		Предупреждение("Нельзя выбрать фирму отличную от фирмы по уже выбранной ранее аптеке!"	);
		ВыбранноеЗначение = Фирма;
	КонецЕсли;	
	
КонецПроцедуры

Процедура КоманднаяПанельОшибкиНайтиСтрокуВТаблицеТовара(Кнопка)
	
	Если ОшибкиРасценки.Количество()=0 Тогда
		Возврат;
	КонецЕсли;	
	ОшПартия=ЭлементыФормы.ОшибкиРасценки.ТекущаяСтрока.Партия;
	Стр=Товар.Найти(ОшПартия,"Партия");
	ЭлементыФормы.ПанельТовара.ТекущаяСтраница = ЭлементыФормы.ПанельТовара.Страницы.СтраницаТовара;
	ЭлементыФормы.Товар.ТекущаяСтрока=Стр;	
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	
	Если ЭтоНовый()=Истина Тогда
		Если НеудачныйВводНаОсновании=Истина ТОгда
		 	ЭтаФорма.Закрыть();
		КонецЕсли; 
		
		
		
		Фирма=Константы.ОсновнаяФирма.Получить();
		Склад=Константы.ОсновнойСклад.Получить();
		ДатапоступленияНаСклад=ТекущаяДата();
		ДАта=ТекущаяДата();
		
	Иначе
		ДатаЗапрета = НастройкаПравДоступа.ВернутьДатуЗапретаРедактирования(Склад);
		Если Дата <= ДатаЗапрета Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;  
	
	Если Склад.ТипСклада = Перечисления.ТипыМХ.Опт Тогда
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Ложь;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Ложь;
		ЭлементыФормы.Товар.Колонки.ПроцентРознНац.Видимость=Ложь;
	Иначе
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Истина;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Истина;
		ЭлементыФормы.Товар.Колонки.ПроцентРознНац.Видимость=Истина;		
	КонецЕсли;
	
	
	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект,СписокПечатныхФорм);
	
	Если Проведен=Истина ТОгда
		
		ЭлементыФормы.НадписьПроведения.Заголовок = "ДОКУМЕНТ ПРОВЕДЕН!!!";

		Если Не РольДоступна("НачПриемногоОтдела") Тогда
			ЭтаФорма.ТолькоПросмотр=Истина;
		КонецЕсли;
		
	КонецЕсли; 
	
	
КонецПроцедуры

Процедура КоманднаяПанель1СопоставитьПозицию(Кнопка)
	
	Если НесопоставленныйТовар.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УсловиеФильтра = Новый СписокЗначений;
	
	ТЗНесопоставленныйТовар = Новый ТаблицаЗначений;
	ТЗНесопоставленныйТовар.Колонки.Добавить("Код");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Товар");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Связан");
	ТЗНесопоставленныйТовар.Колонки.Добавить("БарКод");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Производитель");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Блокировка");
	
	Для каждого стр из НесопоставленныйТовар Цикл
		НоваяСтрока = ТЗНесопоставленныйТовар.Добавить();
		НоваяСтрока.Код = стр.Код;
		НоваяСтрока.Товар = стр.Товар;
		НоваяСтрока.Связан = NULL;
		НоваяСтрока.БарКод = стр.Баркод;
		НоваяСтрока.Блокировка = Ложь;
		
		УсловиеФильтра.Добавить(стр.Код);
	КонецЦикла;
	
	
	Связки=Обработки.УстановкаСвязокСПоставщикомИзДокумента.Создать();
	ФормаСвязок = Связки.ПолучитьФорму("УстановкаСвязокСПоставщикомНовая",, Новый УникальныйИдентификатор );
	ФормаСвязок.УсловиеФильтра=УсловиеФильтра;
	ФормаСвязок.ТЗНесопоставленныйТовар = ТЗНесопоставленныйТовар;
	ФормаСвязок.Поставщик=Поставщик;
	ФормаСвязок.ОткрытьМодально();	
	
КонецПроцедуры

Процедура КоманднаяПанель1ПеренестиВНакладную(Кнопка)
	
	ЕстьЧтоЗаписывать = Ложь;
	
	Для каждого стр из НесопоставленныйТовар Цикл
		
		Если стр.Обработана = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		Если Поставщик.ПоставщикСвязок.Пустая() Тогда
			ПоставщикСвязок = Поставщик;
		Иначе
			ПоставщикСвязок = Поставщик.ПоставщикСвязок;
		КонецЕсли;
		
		СтрокаТовара = ОМ_Справочники.ПолучитьТоварПоСвязке(СокрЛП(стр.Код),ПоставщикСвязок);
		Если СтрокаТовара = Неопределено Тогда
			Продолжить;
		Иначе
		КонецЕсли;
		
		//------------------------<Добавляем строку в ТЧ с данными>-------------------Virus----
		СтрДок = Товар.Добавить();
		СтрДок.Товар = СтрокаТовара.Товар;
		СтрДок.ЕИТ	 = СтрокаТовара.ЕдиницаПоУмолчанию;
		СтрДок.Коэфф	 = СтрокаТовара.Коэфф;
		СтрДок.Количество= стр.Количество;
		СтрДок.КоличествоФакт= Стр.Количество;
		
		//Найдем серию, если серию поставщик не прислал, то возвращаем "*" как объект серии
		СерияСсылка = ОМ_Справочники.ПолучитьСерию(СтрокаТовара.Товар,стр.Серия,стр.СрокГодности);
		//Найдем номер ГТД
		ГТДСсылка = ОМ_Справочники.ПолучитьГТД(стр.НомерГТД,стр.Страна);
		//Найдем Ставку НДС
		Если Поставщик.КонтрагентНаУСН = Истина Тогда
			СтавкаНДССсылка = СтрДок.Товар.СтавкаНДС;
		Иначе
			СтавкаНДССсылка = Справочники.СтавкиНДС.НайтиПоРеквизиту("Ставка",стр.СтавкаНДС);
		КонецЕсли;
		//Найдем и вернем сертификат
		СертификатСсылка = ОМ_Справочники.ПолучитьСертификат(СтрокаТовара.Товар,стр.Сертификат);
		//Найдем баркод и вернем
		БарКодСсылка = ОМ_Справочники.ПолучитьБарКод(СокрЛП(стр.БарКод),СтрокаТовара.ЕдиницаПоУмолчанию);
		
		//-----------------------< Заливаем всё найденное в ТЧ документа >---------------------------------
		СтрДок.Баркод = БарКодСсылка;
		//СтрДок.МестоНаСкладе=ОМ1_ПолучитьМестоНаСкладе(СтрокаТовара.Товар,Склад);
		СтрДок.Партия=ОМ1_СоздатьПартиюТовара(СтрокаТовара.Товар).Ссылка;
		СтрДок.Серия = СерияСсылка;
		СтрДок.СерияСтрока = стр.Серия;
		СтрДок.СрокГодности = стр.СрокГодности;
		СтрДок.НомерГТД = ГТДСсылка;
		СтрДок.Сертификат = СертификатСсылка;
		СтрДок.СтавкаНДС = СтавкаНДССсылка;
		СтрДок.ЦенаГосрегистрации = стр.ЦенаГосрегистрации;
		СтрДок.ЦенаПроизводителя = стр.ЦенаПроизводителя;
		СтрДок.ЦенаЗакуп = стр.ЦенаЗакуп;
		Если Поставщик.КонтрагентНаУСН = Истина Тогда
			СтрДок.ЦенаЗакупБезНДС = Окр(СтрДок.ЦенаЗакуп/(1+СтавкаНДССсылка.Ставка/100),2);
		Иначе
			СтрДок.ЦенаЗакупБезНДС = стр.ЦенаЗакупБезНДС;
		КонецЕсли;
		Если стр.Сумма > 0 Тогда
			СтрДок.СуммаЗакуп =  стр.Сумма;
		Иначе
			СтрДок.СуммаЗакуп = СтрДок.ЦенаЗакуп*СтрДок.Количество;
		КонецЕсли;
		СтрДок.НДСЗакуп = ОМ3_НДСИзСуммыПоСтавке(СтрДок.СуммаЗакуп,СтрДок.СтавкаНДС);		
		
		Если ТипНакладной = Перечисления.ТипыНакладной.ИндивидуальныйЗаказ Тогда
			СтрДок.ЦенаРозн = стр.ЦенаРозн;
			СтрДок.СуммаРозн = СтрДок.ЦенаРозн*СтрДок.Количество;
			СтрДок.НДСРозн = ОМ3_НДСИзСуммыПоСтавке(СтрДок.СуммаРозн,СтрДок.СтавкаНДС);
		КонецЕсли;
		
		// 24.10.2010 14:45 Чернов
		Попытка
			Если НЕ ПустаяСтрока(стр.Производитель) Тогда
				пл_НаименованияПроизводителей = Справочники.НаименованияПроизводителей.НайтиПоНаименованию(стр.Производитель, Истина);
				Если пл_НаименованияПроизводителей.Пустая() Тогда
					Эл = Справочники.НаименованияПроизводителей.СоздатьЭлемент();
					Эл.Наименование = стр.Производитель;
					Эл.ДатаСоздания = ТекущаяДата();
					Эл.Записать();
					СтрДок.Производитель = Эл.Ссылка;
				Иначе
					СтрДок.Производитель = пл_НаименованияПроизводителей;
				КонецЕсли;
			КонецЕсли;
		Исключение                 
		КонецПопытки;
		// 24.10.2010 14:45 Чернов
		
		СтрДок.НомерЗаказа = Стр.НомерЗаказа;

		ЕстьЧтоЗаписывать = Истина;
		стр.Обработана = Истина;
		
	КонецЦикла;
	Если ЕстьЧтоЗаписывать = Истина Тогда
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура НесопоставленныйТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Обработана = Ложь Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,155,240);
	КонецЕсли;	
	
КонецПроцедуры

Процедура КоманднаяПанель2кнПечать(Кнопка)
	
	ОМ10_КнопкаПечатьНажатие(ЭтотОбъект,ЭтаФорма);	
	
КонецПроцедуры

Процедура ПолучитьДоговорИОтсрочку()
	
	Если НЕ Фирма.Пустая()  и НЕ Поставщик.Пустая() Тогда
		ДоговорПоставки = ОМ_Справочники.ПолучитьДоговорПоставщика(Фирма,Поставщик,ВхДатаНакл);	
		ОтсрочкаПлатежа = ДоговорПоставки.ОтсрочкаПлатежа;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоставщикОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПолучитьДоговорИОтсрочку();
	
КонецПроцедуры

Процедура ТоварПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!",5);
		ВОЗВРАТ ;
	КонецЕсли; 
	
	
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПолучитьФорму("ФормаДляПодбора","",КлючУник);
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.ОткрытьМодально(0);	
	
КонецПроцедуры

Процедура ПоставщикПриИзменении(Элемент)
	
	ДоговорПоставки = ОМ_Справочники.ПолучитьДоговорПоставщика(Фирма,Элемент.Значение,ВхДатаНакл);
	ОтсрочкаПлатежа = ДоговорПоставки.ОтсрочкаПлатежа;
	
КонецПроцедуры

Процедура кнПоказатьИсториюПозицииНажатие(Элемент)
	
	ТС =  ЭлементыФормы.ТоварыБезЗаказа.ТекущаяСтрока;
	Если ТС = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Постр = Новый ПостроительОтчета;
	Постр.Текст  = "ВЫБРАТЬ
		           |	ВЫБОР
	               |		КОГДА ЗаказПоставщику.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |			ТОГДА ""+""
	               |		ИНАЧЕ ""-""
	               |	КОНЕЦ КАК Операция,
	               |	ЗаказПоставщику.Период,
	               |	ЗаказПоставщику.Регистратор КАК Документ,
	               |	ЗаказПоставщику.Поставщик,
				   |	ЗаказПоставщику.Количество,
	               |	ЗаказПоставщику.ЦенаЗакуп КАК Цена,
	               |	ЗаказПоставщику.ЦенаРозн
	               |ИЗ
	               |	РегистрНакопления.ЗаказПоставщику КАК ЗаказПоставщику
	               |ГДЕ
	               |	ЗаказПоставщику.Период >= &Период
	               |	И ЗаказПоставщику.Склад = &Аптека
	               |	И ЗаказПоставщику.Товар = &Товар
	               |	И ЗаказПоставщику.Поставщик = &Поставщик
	               |
				   |УПОРЯДОЧИТЬ ПО
				   |	ЗаказПоставщику.Период УБЫВ";
				   
				   Постр.Параметры.Вставить("Период",ТекущаяДата() - 60*60*24*20);
				   Постр.Параметры.Вставить("Аптека",Склад);
				   Постр.Параметры.Вставить("Поставщик",Поставщик);
				   Постр.Параметры.Вставить("Товар",ТС.Товар);
				   
				   Постр.ЗаполнитьНастройки();
				   
				   Постр.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Лето);
				   
				   Условие = Постр.УсловноеОформление.Добавить("Операция","Операция");
				   Условие.Область.Добавить("Операция","Операция",ТипОбластиОформления.Поле);
				   
				   
				   Условие.Отбор.Добавить("Операция");
				   Условие.Отбор["Операция"].Использование = Истина;
				   Условие.Отбор["Операция"].Значение = "+";
				   Условие.Отбор["Операция"].ВидСравнения = ВидСравнения.НеРавно;
				   Условие.Оформление.ЦветФона.Значение = Новый Цвет(255,196,187);
				   Условие.Оформление.ЦветФона.Использование = Истина;
				   Условие.Использование = Истина;	
				   
				   Условие2 = Постр.УсловноеОформление.Добавить("Операция","Операция");
				   Условие2.Область.Добавить("Операция","Операция",ТипОбластиОформления.Поле);				   
				   Условие2.Отбор.Добавить("Операция");
				   Условие2.Отбор["Операция"].Использование = Истина;
				   Условие2.Отбор["Операция"].Значение = "+";
				   Условие2.Отбор["Операция"].ВидСравнения = ВидСравнения.Равно;
				   Условие2.Оформление.ЦветФона.Значение = Новый Цвет(176,255,196);
				   Условие2.Оформление.ЦветФона.Использование = Истина;
				   Условие2.Использование = Истина;	
				   
				   
				   Постр.ТекстЗаголовка = "Движение заказа : " + ТС.Товар;
				   Постр.Выполнить();
				   Постр.Вывести();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НеудачныйВводНаОсновании = Истина Тогда
		Предупреждение("КОПИРОВАТЬ ПРИХОД ТОВАРА НЕЛЬЗЯ!",5);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Статус=Перечисления.СтатусПрихода.Черновик;
	КонецЕсли; 
	
КонецПроцедуры

Процедура кнОбновитьИсториюИзмененийНажатие(Элемент)
	
	
	 ТХТ = "ВЫБРАТЬ
	       |	ИзмененияПоступленийВАптеке.Документ,
	       |	ИзмененияПоступленийВАптеке.ИД КАК ИД,
	       |	ИзмененияПоступленийВАптеке.ДатаИзменения,
	       |	ИзмененияПоступленийВАптеке.Действие,
	       |	ИзмененияПоступленийВАптеке.ТабНомер,
	       |	ИзмененияПоступленийВАптеке.ФИО,
	       |	ИзмененияПоступленийВАптеке.НомерДокАптеки
	       |ИЗ
	       |	РегистрСведений.ИзмененияПоступленийВАптеке КАК ИзмененияПоступленийВАптеке
	       |ГДЕ
	       |	ИзмененияПоступленийВАптеке.Документ = &Документ
	       |
	       |УПОРЯДОЧИТЬ ПО
	       |	ИД";
	
		   
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Документ",Ссылка);
	ТЗИзмененийВАптеке = Запрос.Выполнить().Выгрузить();	
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	Если Проведен Тогда
		ЭлементыФормы.НадписьПроведения.Заголовок = "ДОКУМЕНТ ПРОВЕДЕН!";
	КонецЕсли;

КонецПроцедуры

Процедура ТоварЦенаПроизводителяПриИзменении(Элемент)
	
	ТСД= ЭлементыФормы.Товар.ТекущаяСтрока;
	МО_ПроверкаЦеныПроизводителя(ТСД);
    ПересчетСтрокиДокумента(ТСД,"Количество");	
	
КонецПроцедуры

Процедура ВхНомерНаклПриИзменении(Элемент)
	
		Введено=Элемент.Значение;
		
		ТХТ="ВЫБРАТЬ
		    |	ПоступлениеТовара.Ссылка как Поступление,
		    |	ПоступлениеТовара.ВхНомерНакл ВхНомер,
		    |	ПоступлениеТовара.Дата
		    |ИЗ
		    |	Документ.ПоступлениеТовара КАК ПоступлениеТовара
		    |ГДЕ
		    |	ПоступлениеТовара.ВхНомерНакл ПОДОБНО &ВхНомерНакл
		    |	И ПоступлениеТовара.Поставщик = &Поставщик
		    |	И ПоступлениеТовара.Дата МЕЖДУ &НачДата И &КонДАта";
			
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("ВхНомерНакл",Введено);
		Запрос.УстановитьПараметр("Поставщик",Поставщик);
		Запрос.УстановитьПараметр("НачДата",НачалоГода(Дата));
		Запрос.УстановитьПараметр("КонДАта",КонецГода(Дата));
		
		Рез=Запрос.Выполнить().Выгрузить();
		Если Рез.Количество()>0 Тогда
			Сообщить("В этом году уже есть документ с похожим вх. номером по этому поставщику!");
			Для каждого Стр из Рез Цикл
				Сообщить(""+Стр.Поступление+"  Вх. номер накл. "+Стр.ВхНомер);
			КонецЦикла;	 
		КонецЕсли;	
	
КонецПроцедуры

Процедура ДоговорПоставкиПриИзменении(Элемент)
	
	Если Элемент.Значение.Фирма <> Фирма Тогда
		ДоговорПоставки = Справочники.ДоговорыПоставки.ПустаяСсылка();
	КонецЕсли;
	
	Если Элемент.Значение.Владелец <> Поставщик Тогда
		ДоговорПоставки = Справочники.ДоговорыПоставки.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

СписокКолонокДляПересчетаПоЦене="ЦенаЗакупБезНДС,Количество,КоличествоФакт,СтавкаНДС,";
СписокКолонокПересчетаЦЕН="СуммаЗакуп,";

мКолонкиТовары         = ЭлементыФормы.Товар.Колонки;
