

 //============================================================================ GtG ===
 Функция ПроверкаНаНули  (Парам) 
     // Назначение:
 	// Проверяет строки товара на наличие строк с нулевыми значениями
 	// 
     // 
 	//--------------------------------------------------------------------------------
	Для Каждого ТекСтрокаТовар Из Товар Цикл
		Если ТекСтрокаТовар[Парам]=0 Тогда
			Возврат ЛОЖЬ;
		КонецЕсли;
	КонецЦикла; 	
	
	Возврат Истина;
 КонецФункции
 //============================================================================ GtG ===
 
 
Функция ПроверитьОстатки()
	
	ТекстЗапроса = "ВЫБРАТЬ 
	|ВложенныйЗапрос.Номенклатура, 
	|ВложенныйЗапрос.Партия КАК Партия, 
	|ВложенныйЗапрос.КоличествоСписываемое, 
	|ТоварыНаСкладахОстатки.КолвоОстаток 
	|ИЗ 
	|(ВЫБРАТЬ 
	|	ВнутреннийСписаниеТовары.Товар КАК Номенклатура, 
	|	ВнутреннийСписаниеТовары.Партия КАК Партия, 
	|	СУММА(ВнутреннийСписаниеТовары.КоличествоФакт *ВнутреннийСписаниеТовары.Коэфф) КАК КоличествоСписываемое 
	| ИЗ 
	|	Документ.РеализацияОптовая.Товар КАК ВнутреннийСписаниеТовары 
	| ГДЕ 
	|	ВнутреннийСписаниеТовары.Ссылка = &Ссылка 
	| СГРУППИРОВАТЬ ПО 
	|	ВнутреннийСписаниеТовары.Товар, 
	|	ВнутреннийСписаниеТовары.Партия 
	|) КАК ВложенныйЗапрос 
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РегистрНакопления.ПартииЖНВЛС.Остатки(&МоментВремениДокумента, 
	|						Склад = &ВыбСклад
	|						И 
	|						Товар В (ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|									ВнутреннийСписаниеТоварыДляОтбора.Товар 
	|								ИЗ 
	|									Документ.РеализацияОптовая.Товар КАК ВнутреннийСписаниеТоварыДляОтбора 
	|								ГДЕ 
	|								ВнутреннийСписаниеТоварыДляОтбора.Ссылка = &Ссылка)
	|						И
	|						Партия В (ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|									ВнутреннийСписаниеТоварыДляОтбора.Партия 
	|								ИЗ 
	|									Документ.РеализацияОптовая.Товар КАК ВнутреннийСписаниеТоварыДляОтбора 
	|								ГДЕ 
	|								ВнутреннийСписаниеТоварыДляОтбора.Ссылка = &Ссылка)) КАК ТоварыНаСкладахОстатки 
	|ПО 
	|	ВложенныйЗапрос.Номенклатура = ТоварыНаСкладахОстатки.Товар И ВложенныйЗапрос.Партия = ТоварыНаСкладахОстатки.Партия
	|ГДЕ ВложенныйЗапрос.КоличествоСписываемое > ТоварыНаСкладахОстатки.КолвоОстаток";
	
	Запрос = Новый  Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("МоментВремениДокумента",МоментВремени());
	Запрос.УстановитьПараметр("ВыбСклад",ЭтотОбъект.Ссылка.Склад.Ссылка);
	Рез=Запрос.Выполнить();
	ТЗ=Рез.Выгрузить();	
	Если ТЗ.Количество() > 0 Тогда
		Для каждого стр Из ТЗ Цикл
			Сообщить("По товару " + стр.Номенклатура + "  партия = " + стр.Партия + " превышено количество .");
		КонецЦикла; 	
		Возврат Ложь;
	КонецЕсли;
	
    Возврат Истина;
		
КонецФункции
 
 //============================================================================ GtG ===
Процедура ПриходРасходПоРегистрам(ТипДвижения) 
     // Назначение:
 	// Проведение документа по регистрам 
 	// либо приход , ибо расход
	// по указанному складу
 	//--------------------------------------------------------------------------------

 	
    Для Каждого ТекСтрокаТовар Из Товар Цикл
		
	
		//----------------------------< Партионные товары (ЖНВЛС/СВЛС) >--------------------------------GtG---
		
			ДвижениеП = Движения.ПартииЖНВЛС.Добавить();
			ДвижениеП.ВидДвижения=ТипДвижения; //ВидДвиженияНакопления.Приход;
			ДвижениеП.Период = Дата;
			ДвижениеП.Товар = ТекСтрокаТовар.Товар;
			ДвижениеП.Склад = Склад;
			ДвижениеП.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
			ДвижениеП.Партия = ТекСтрокаТовар.Партия ;
			ДвижениеП.Фирма= Склад.Фирма;
			ДвижениеП.ВидОперации=Перечисления.ВидыОпераций.РеализацияОпт;

			
			ДвижениеП.Колво = ТекСтрокаТовар.КоличествоФакт*ТекСтрокаТовар.Коэфф;
			ДвижениеП.СуммаЗакупСНДС = ТекСтрокаТовар.СуммаЗакуп;
			ДвижениеП.СуммаНДСЗакуп = ТекСтрокаТовар.НДСЗакуп;
			ДвижениеП.СуммаРознСНДС = ТекСтрокаТовар.СуммаЗакуп;
			ДвижениеП.СуммаРознНДС = ТекСтрокаТовар.НДСЗакуп;
			
		
	КонецЦикла;
	// записываем движения регистров
	//Движения.ПартииЖНВЛС.Записать();
	
    Для Каждого ТекСтрокаТовар Из Товар Цикл
	
			ДвижениеП = Движения.ПродажаОптом.Добавить();
			ДвижениеП.Период = Дата;
			ДвижениеП.Товар = ТекСтрокаТовар.Товар;
			ДвижениеП.Склад = Склад;
			ДвижениеП.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
			ДвижениеП.Партия = ТекСтрокаТовар.Партия ;
			ДвижениеП.Фирма= Склад.Фирма;
			ДвижениеП.Покупатель = Покупатель;

			
			ДвижениеП.Колво = ТекСтрокаТовар.КоличествоФакт*ТекСтрокаТовар.Коэфф;
			ДвижениеП.СуммаЗакупСНДС = ТекСтрокаТовар.СуммаЗакуп;
			ДвижениеП.СуммаНДСЗакуп = ТекСтрокаТовар.НДСЗакуп;
			ДвижениеП.СуммаОптСНДС = ТекСтрокаТовар.СуммаОпт;
			ДвижениеП.СуммаНДСОпт = ТекСтрокаТовар.НДСОпт;
			
	КонецЦикла;	

	
	//----------------------------< По регитсру учета по ставке НДС >--------------------------------GtG---
	ТЗПодСвертку = ТОвар.Выгрузить();
	
	ТЗПодСвертку.Свернуть("СтавкаНДС","СуммаЗакуп,НДСЗакуп,СуммаЗакуп,НДСЗакуп");
	
	Для Каждого ТекСтрокаТовар Из ТЗПодСвертку Цикл
		// регистр ОстаткиПоСтНДСПоСкладам Приход
		Движение = Движения.ОстаткиПоСтНДСПоСкладам.Добавить();
		Движение.ВидДвижения =ТипДвижения;// ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
		Движение.Фирма= Склад.Фирма;
		Движение.ВидОперации=Перечисления.ВидыОпераций.РеализацияОпт;

		
		
		//Движение.Колво = ТекСтрокаТовар.КоличествоФакт;
		Движение.СуммаЗакупСНДС = ТекСтрокаТовар.СуммаЗакуп;
		Движение.СуммаНДСЗакуп = ТекСтрокаТовар.НДСЗакуп;
		Движение.СуммаРознСНДС = ТекСтрокаТовар.СуммаЗакуп;
		Движение.СуммаРознНДС = ТекСтрокаТовар.НДСЗакуп;
	КонецЦикла;
	// записываем движения регистров
	//Движения.ОстаткиПоСтНДСПоСкладам.Записать();

 
    
  КонецПроцедуры
  //============================================================================ GtG ===
  

  Процедура ДвижениеПродажПоТипамДляЦО() Экспорт
	 тхт="ВЫБРАТЬ
	     |	РеализацияОптомТовар.Товар.ТипДляЦО КАК ТоварТипДляЦО,
	     |	СУММА(РеализацияОптомТовар.СуммаЗакуп) КАК СуммаСоСкидкой,
	     |	СУММА(РеализацияОптомТовар.СуммаЗакуп) КАК СуммаЗакуп,
	     |	СУММА(0) КАК Скидка
	     |ИЗ
	     |	Документ.РеализацияОптом.Товар КАК РеализацияОптомТовар
	     |ГДЕ
	     |	РеализацияОптомТовар.Ссылка = &Ссылка
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	РеализацияОптомТовар.Товар.ТипДляЦО" ;
		 
		 
		 
		 //-------------------- Запрос by GtG -----------------------
		 // Назначение: Выборка из табличных частей документа для записи в регистр
		 //----------------------------------------------------------
		 
		 Запрос=Новый Запрос;
		 Запрос.Текст=ТХТ;
		 
		 Запрос.Параметры.Вставить("Ссылка", ЭтотОбъект.Ссылка);
		 
		 ТЗ=Запрос.Выполнить().Выгрузить();
		 
		 Для каждого  Стр Из ТЗ  Цикл
		 	Движение=Движения.ПродажиПоТипамДляЦО.Добавить();
			
			Движение.Активность=Истина;
			Движение.Период=Дата;
			Движение.Регистратор= ЭтотОбъект.Ссылка;
			Движение.Склад=Склад;
			Движение.СуммаЗакупочная=Стр.СуммаЗакуп;
			Движение.СуммаПродажСоСкидкой= Стр.СуммаЗакуп;
			Движение.СуммаСкидки=стр.Скидка;
			Движение.ТипДляЦО=Стр.ТоварТипДляЦО;
		 КонецЦикла; 
		 
		//Движения.ПродажиПоТипамДляЦО.Записать(); 
КонецПроцедуры  

  


Процедура ОбработкаПроведения(Отказ, Режим)
		
	#Если Клиент Тогда
	ОчиститьСообщения(); 
	#КонецЕсли
	
	Если ПроверитьОстатки() = Ложь Тогда
		Сообщить("Документ не проведен! Не хватает остатков");
		Отказ = ИСТИНА;
		ВОЗВРАТ ;	
	КонецЕсли;	
	
	//============================< Проверка на коэфф=0  >================================GtG===
	Если ПроверкаНаНули("Коэфф")=Ложь Тогда
		// Есть строки с 0-ми коэффициентами
		Сообщить("В документе есть строки с коэффициентами =0!
		|Это недопустимо!
		|Очевидно проблемы с единицами товаров.");
		Отказ = ИСТИНА;
		ВОЗВРАТ ;
	КонецЕсли;
	
	Если ПроверкаНаНули("ЦенаЗакуп")=Ложь Тогда
		// Есть строки с 0-ми
		Сообщить("В документе есть строки без закуп. цены!
		|Это недопустимо!
		|Укажите цену закупочную!");
		Отказ = ИСТИНА;
		ВОЗВРАТ ;
	КонецЕсли;

	
		
	//----------------------------< по складу отправителю >--------------------------------GtG---
	// расход из регистров: ОстаткиТовараПоСкладам
	//                    	ПартииЖНВЛС
	//                    	ОстаткиПоСтНДСПоСкладам
    ПриходРасходПоРегистрам  (ВидДвиженияНакопления.Расход);                    
	//-------------------------------------------------------------------------------------------
	ОМ15_ОчисткаРезерваДокумента  (ЭтотОбъект.Ссылка );// должна быть во всех документах, которые касаются резерва количества товара
	
	ДвижениеПродажПоТипамДляЦО();
	
КонецПроцедуры


Процедура ОбработкаЗаполнения(Основание)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если Основание=Неопределено тогда
		возврат;
	КонецЕсли; 	
	
	Если Основание.ПУстая()=Ложь ТОгда
		Если Основание.Проведен = Ложь Тогда
			Сообщить("Текущий документ не проведен. Создание нового на основании невозможно.");	
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТовара") Тогда
		// Заполнение шапки
		Склад = Основание.Склад;
		Фирма = Склад.Фирма;
		Для Каждого ТекСтрокаТовар Из Основание.Товар Цикл
			НоваяСтрока = Товар.Добавить();
			НоваяСтрока.ЕИТ = ТекСтрокаТовар.ЕИТ;
			НоваяСтрока.КоличествоФакт = ТекСтрокаТовар.КоличествоФакт;
			НоваяСтрока.Коэфф = ТекСтрокаТовар.Коэфф;
			НоваяСтрока.НДСЗакуп = ТекСтрокаТовар.НДСЗакуп;
			НоваяСтрока.НДСОпт = ТекСтрокаТовар.НДСЗакуп;
			НоваяСтрока.Партия = ТекСтрокаТовар.Партия;
			НоваяСтрока.Серия = ТекСтрокаТовар.Серия;
			НоваяСтрока.Сертификат = ТекСтрокаТовар.Сертификат;
			НоваяСтрока.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
			НоваяСтрока.СуммаЗакуп = ТекСтрокаТовар.СуммаЗакуп;
			НоваяСтрока.СуммаОпт = ТекСтрокаТовар.СуммаЗакуп;
			НоваяСтрока.Товар = ТекСтрокаТовар.Товар;
			НоваяСтрока.ЦенаЗакуп = ТекСтрокаТовар.ЦенаЗакуп;
			НоваяСтрока.ЦенаОптСНДС = ТекСтрокаТовар.ЦенаЗакуп;
		КонецЦикла;
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТовара") Тогда
		Склад = Основание.СкладПолучатель;
		Фирма = Склад.Фирма;
		Комментарий = "Создан на основании: " + Основание;
		Для Каждого ТекСтрокаТовар Из Основание.Товар Цикл
			НоваяСтрока = Товар.Добавить();
			НоваяСтрока.ЕИТ = ТекСтрокаТовар.ЕИТ;
			НоваяСтрока.КоличествоФакт = ТекСтрокаТовар.КоличествоФакт;
			НоваяСтрока.Коэфф = ТекСтрокаТовар.Коэфф;
			НоваяСтрока.НДСЗакуп = ТекСтрокаТовар.НДСЗакуп;
			НоваяСтрока.НДСОпт = ТекСтрокаТовар.НДСРознПол;
			НоваяСтрока.Партия = ТекСтрокаТовар.Партия;
			НоваяСтрока.Серия = ТекСтрокаТовар.Серия;
			НоваяСтрока.Сертификат = ТекСтрокаТовар.Сертификат;
			НоваяСтрока.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
			НоваяСтрока.СуммаЗакуп = ТекСтрокаТовар.СуммаЗакуп;
			НоваяСтрока.СуммаОпт = ТекСтрокаТовар.СуммаРознПол;
			НоваяСтрока.Товар = ТекСтрокаТовар.Товар;
			НоваяСтрока.ЦенаЗакуп = ТекСтрокаТовар.ЦенаЗакуп;
			НоваяСтрока.ЦенаОптСНДС = ТекСтрокаТовар.ЦенаРознПол;
		КонецЦикла;		
	КонецЕсли;
	СтрокаИзменений = Изменения.Добавить();
	СтрокаИзменений.Дата = ТекущаяДата();
	СтрокаИзменений.КомментарийИзменения = "Создан на основании: " + Основание;
	СтрокаИзменений.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	СтрокаИзменений.ТипИзм = Перечисления.ДействияНадДокументами.ВводНового;
	
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ЗаписатьДействияВИсториюДокумента(Изменения,РежимЗаписи,ПометкаУдаления);	
	
КонецПроцедуры

