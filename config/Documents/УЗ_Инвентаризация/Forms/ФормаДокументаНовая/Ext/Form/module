Процедура ПоказатьИсторию()
	
	ИсторияИзменений.Очистить();
	
	ТЗИстории = ОбщегоНазначения.ПолучитьИсториюИзмененийДокумента(Ссылка);
	Если НЕ ТЗИстории = Неопределено Тогда
		ЭлементыФормы.ИсторияИзменений.Значение = ТЗИстории;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПанельШапкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элемент.ТекущаяСтраница = Элемент.Страницы.История Тогда
		ПоказатьИсторию();
	КонецЕсли;
	
КонецПроцедуры


Процедура КоманднаяПанель1ЗаполнитьОстатками(Кнопка)
	
	Если Склад.Пустая() Тогда
		Предупреждение("Выберите подразделение, по которому надо сформировать остатки");
		Возврат;
	КонецЕсли;
	
	Если Фирма.Пустая() Тогда
		Предупреждение("Не выбрана фирма. Выполнение не может быть продолжено.");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	
	
	ТХТ="ВЫБРАТЬ
	    |	Остатки.ТоварКод КАК КодТовара,
	    |	Остатки.ПартияКод КАК КодПартии,
	    |	Остатки.КоличествоОстаток КАК КоличествоУчет,
	    |	Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСУчет,
	    |	1 КАК Коэфф,
	    |	-Остатки.КоличествоОстаток КАК КоличествоРазница,
	    |	-Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСРазница,
	    |	УЗ_Партии.К как КоэффициентРазбивки
	    |ИЗ
	    |	РегистрНакопления.УЗ_Партии.Остатки(&Дата, СкладКод = &СкладКод) КАК Остатки
	    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
	    |		ПО Остатки.ПартияКод = УЗ_Партии.Код
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	Остатки.ТоварКод";
	
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Дата",Дата);
	Запрос.УстановитьПараметр("СкладКод",Склад.Код);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Товар.Загрузить(ТЗ);	
	
	ТХТ="ВЫБРАТЬ
	    |	Остатки.ТоварКод КАК КодТовара,
	    |	Остатки.ПартияКод КАК КодПартии,
	    |	Остатки.КоличествоОстаток КАК КоличествоУчет,
	    |	Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСУчет,
	    |	1 КАК Коэфф,
	    |	-Остатки.КоличествоОстаток КАК КоличествоРазница,
	    |	-Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСРазница,
	    |	УЗ_Партии.К как КоэффициентРазбивки
	    |ИЗ
	    |	РегистрНакопления.УЗ_ПартииБрак.Остатки(&Дата, СкладКод = &СкладКод) КАК Остатки
	    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
	    |		ПО Остатки.ПартияКод = УЗ_Партии.Код
		
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	Остатки.ТоварКод";
	
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Дата",Дата);
	Запрос.УстановитьПараметр("СкладКод",Склад.Код);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Брак.Загрузить(ТЗ);	
	
КонецПроцедуры

Процедура КоманднаяПанель1ЗагрузитьОстаткиАптеки(Кнопка)
	
	Если Товар.Количество()  = 0 Тогда
		Предупреждение("Сначала надо загрузить остатки учетные");
		Возврат;
	КонецЕсли;
	
	ДиалогОткрытия = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытия.ПолноеИмяФайла = "";
	Фильтр = "DBF-файл, *.dbf|*.dbf";
	ДиалогОткрытия.Фильтр = Фильтр;
	ДиалогОткрытия.МножественныйВыбор = ЛОЖЬ;
	ДиалогОткрытия.Заголовок = "Выберите файл для загрузки";
	Если ДиалогОткрытия.Выбрать() Тогда
		Файл = ДиалогОткрытия.ПолноеИмяФайла;
	Иначе
		Предупреждение("Файл не выбран. Выполнение не может быть продолжено");
		Возврат;
	КонецЕсли;
	
	
	ТЗОст = Новый ТаблицаЗначений;
	ТЗОст.Колонки.Добавить("Код");
	ТЗОст.Колонки.Добавить("Количество");
	ТЗОст.Колонки.Добавить("Цена");
	ТЗОст.Колонки.Добавить("КодПартии");
	ТЗОст.Колонки.Добавить("Сумма");
	
	ДБФ=Новый Xbase;
	
	Ф=Новый Файл(Файл);
	Если Ф.Существует()=Ложь ТОгда
		ПРедупреждение("Нет такого файла ! <"+Файл+">");
		Возврат;
	КонецЕсли;
	
	
	ДБФ.ОткрытьФайл(Файл);
	
	КЗ = ДБФ.КоличествоЗаписей();
	//СотаяЧасть = КЗ/100;
	//ЭлементыФормы.Инд.МаксимальноеЗначение = КЗ;
	//ЭлементыФормы.Инд.Значение = 0;
	Состояние("Обрабатываем таблицу остатков аптеки ......");
	Для Ы=1 По КЗ Цикл
		ДБФ.Перейти(Ы);
		
		Если Ы%100 = 0 Тогда
			Состояние("Подготовлено "+Ы+ " из " + КЗ);
		КонецЕсли;
		
		Если ДБФ.QNT = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТекСтр = ТЗОст.Добавить();
		ТекСтр.Код = ДБФ.IDGOOD;
		ТекСтр.Количество = ДБФ.QNT;
		ТекСтр.Цена = ДБФ.COST_R;
		ТекСтр.Сумма = ТекСтр.Количество*ТекСтр.Цена;
		ТекСтр.КодПартии = Сред(ДБФ.PART,3,10);
		
	КонецЦикла;
	
	ДБФ.ЗакрытьФайл();
	
	ТЗОст.Свернуть("Код,КодПартии","Количество,Сумма");
	
	СовместитьУчетИФакт(ТЗОст);
	
	
КонецПроцедуры

Процедура КоманднаяПанель3кнПрочитатьДанныеАптеки(Кнопка)
	
	ДанныеХранилища = ДанныеАптеки.Получить();
	Если НЕ ДанныеХранилища = Неопределено Тогда
		
		ЭлементыФормы.ТабДанныеАптеки.УстановитьТекст(ДанныеХранилища.ПолучитьТекст());
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура КоманднаяПанель3кнЗагрузитьДанныеАптеки(Кнопка)
	
	Если НЕ ПустаяСтрока(ИДДокументаАптеки) Тогда	
		ОбработатьДокумент();
	Иначе	
		МДЗагрузитьДанныеАптекиИЗPG();
	КонецЕсли;
	УправлениеВидимостьюСтраниц();
	
	
КонецПроцедуры

Процедура КоманднаяПанель1КарточкаТовара(Кнопка)
	
	ТекСтраница = ЭлементыФормы.ПанельТЧ.ТекущаяСтраница;
	Если ТекСтраница  = ЭлементыФормы.ПанельТЧ.Страницы.ОсновнойТовар Тогда
		ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	ИначеЕсли ТекСтраница  = ЭлементыФормы.ПанельТЧ.Страницы.Арбитраж Тогда
		ТСД=ЭлементыФормы.Арбитраж.ТекущаяСтрока;
	ИначеЕсли ТекСтраница  = ЭлементыФормы.ПанельТЧ.Страницы.СтраницаБрака Тогда
		ТСД=ЭлементыФормы.Брак.ТекущаяСтрока;
	КонецЕсли;

	
	
	Карточка=Отчеты.УЗ_ДвижениеТовара.Создать();
	
	Карточка.КодПартии=ТСД.КодПартии;
	Карточка.ВыбСклад=Склад;
	Карточка.ВыбТовар=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(ТСД.КодТовара);
	Карточка.ВыбФирма=Склад.Фирма;
	Карточка.НачПер=НачалоГода(Дата);
	Карточка.КонПер=ТекущаяДата();
	
	Ф=Карточка.ПолучитьФорму("Форма");
	
	Если ТекСтраница  = ЭлементыФормы.ПанельТЧ.Страницы.ОсновнойТовар Тогда	
		Ф.ЭлементыФормы.ВидРегистра.Значение = "УЗ_Партии";
	ИначеЕсли ТекСтраница  = ЭлементыФормы.ПанельТЧ.Страницы.Арбитраж Тогда	
		Ф.ЭлементыФормы.ВидРегистра.Значение = "УЗ_ПартииАрбитраж";
	ИначеЕсли ТекСтраница  = ЭлементыФормы.ПанельТЧ.Страницы.СтраницаБрака Тогда
	    Ф.ЭлементыФормы.ВидРегистра.Значение = "УЗ_ПартииБрак";
	КонецЕсли;
	
	Ф.Открыть();	
	
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.КоличествоУчет <> ДанныеСтроки.КоличествоУчетВАптеке Тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.Томатный;	
	КонецЕсли;
	
КонецПроцедуры

Процедура БракПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.КоличествоУчет <> ДанныеСтроки.КоличествоУчетВАптеке Тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.Томатный;	
	КонецЕсли;
	
	
КонецПроцедуры

Процедура УправлениеВидимостьюСтраниц()
	
	Если Брак.Количество() > 0 Тогда
		ЭлементыФормы.ПанельТЧ.Страницы.СтраницаБрака.Видимость = Истина;
	Иначе
		ЭлементыФормы.ПанельТЧ.Страницы.СтраницаБрака.Видимость = Ложь;
	КонецЕсли;
	
	Если Арбитраж.Количество() > 0 Тогда
		ЭлементыФормы.ПанельТЧ.Страницы.Арбитраж.Видимость = Истина;
	Иначе
		ЭлементыФормы.ПанельТЧ.Страницы.Арбитраж.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект,СписокПечатныхФорм);
	УправлениеВидимостьюСтраниц();

КонецПроцедуры

Процедура КоманднаяПанель2кнПечать(Кнопка)
	
	ОМ10_КнопкаПечатьНажатие(ЭтотОбъект,ЭтаФорма);
	
КонецПроцедуры
