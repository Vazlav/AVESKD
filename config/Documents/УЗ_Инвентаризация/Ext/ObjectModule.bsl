
 
Процедура ПоместитьВОбменСкладБух() Экспорт      // GtG  //  20.06.2016 20:36:58 
	
	Запрос = Новый Запрос;
	запрос.Текст =    "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                  |	УЗ_ИнвентаризацияТовар.Ссылка.Фирма.Код,
	                  |	УЗ_ИнвентаризацияТовар.Ссылка.Склад.Код,
	                  |	УЗ_Партии.ВидПоступления,
	                  |	УЗ_Партии.ВидПоступленияИсходный,
	                  |	УЗ_Партии.ФирмаИсходная,
	                  |	УЗ_Партии.ПоставщикКомитентВнутренний
	                  |ПОМЕСТИТЬ т1
	                  |ИЗ
	                  |	Документ.УЗ_Инвентаризация.Товар КАК УЗ_ИнвентаризацияТовар
	                  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
	                  |		ПО УЗ_ИнвентаризацияТовар.КодПартии = УЗ_Партии.Код
	                  |ГДЕ
	                  |	УЗ_ИнвентаризацияТовар.Ссылка = &Ссылка
	                  |;
	                  |
	                  |////////////////////////////////////////////////////////////////////////////////
	                  |ВЫБРАТЬ
	                  |	т1.ФирмаКод,
	                  |	Фирмы.Код КАК ФирмаКомитентДляОтчетаКомиссионера,
	                  |	т1.СкладКод
	                  |ПОМЕСТИТЬ т2
	                  |ИЗ
	                  |	т1 КАК т1
	                  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Фирмы КАК Фирмы
	                  |		ПО т1.ПоставщикКомитентВнутренний = Фирмы.ФирмаКакПоставщик.Код
	                  |;
	                  |
	                  |////////////////////////////////////////////////////////////////////////////////
	                  |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                  |	т3.ФирмаКод,
	                  |	т3.СкладКод
	                  |ПОМЕСТИТЬ т4
	                  |ИЗ
	                  |	(ВЫБРАТЬ
	                  |		т2.ФирмаКод КАК ФирмаКод,
	                  |		т2.СкладКод КАК СкладКод
	                  |	ИЗ
	                  |		т2 КАК т2
	                  |	
	                  |	ОБЪЕДИНИТЬ ВСЕ
	                  |	
	                  |	ВЫБРАТЬ
	                  |		т2.ФирмаКомитентДляОтчетаКомиссионера,
	                  |		т2.СкладКод
	                  |	ИЗ
	                  |		т2 КАК т2) КАК т3
	                  |ГДЕ
	                  |	ЕСТЬNULL(т3.ФирмаКод, 0) <> 0
	                  |;
	                  |
	                  |////////////////////////////////////////////////////////////////////////////////
	                  |УНИЧТОЖИТЬ т1
	                  |;
	                  |
	                  |////////////////////////////////////////////////////////////////////////////////
	                  |УНИЧТОЖИТЬ т2
	                  |;
	                  |
	                  |////////////////////////////////////////////////////////////////////////////////
	                  |ВЫБРАТЬ
	                  |	215 КАК ВидДокумента,
	                  |	т4.ФирмаКод КАК КодФирмы,
	                  |	&СсылкаТХТ КАК СсылкаТХТ,
	                  |	&Дата КАК ДатаОчередиСклад,
	                  |	т4.СкладКод КАК КодСклада,
	                  |	0 КАК КодКонтрагента,
	                  |	&Ссылка КАК Объект,
	                  |	&СсылкаПроведен КАК Проведен,
	                  |	&СсылкаПомеченНаУдаление КАК ПомеченНаУдаление,
	                  |	"""" КАК ОшибкаПриЗагрузке
	                  |ИЗ
	                  |	т4 КАК т4
	                  |;
	                  |
	                  |////////////////////////////////////////////////////////////////////////////////
	                  |УНИЧТОЖИТЬ т4"; // Сгенерировано в GtG's Консоль запросов. 20.06.2016 20:33:13


					  Запрос.УстановитьПараметр("Ссылка",Ссылка);
					  
					  Запрос.УстановитьПараметр("СсылкаТХТ",Ссылка.УникальныйИдентификатор());
					  Запрос.УстановитьПараметр("Дата",Дата);
					  Запрос.УстановитьПараметр("СсылкаПроведен",Проведен);
					  Запрос.УстановитьПараметр("СсылкаПомеченНаУдаление",ПометкаУдаления);
					  
					  
	
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МЗ = РегистрыСведений.ОбменСкладБух.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МЗ,Выборка);
		МЗ.СсылкаТХТ = XMLСтрока(Ссылка);
		МЗ.Записать();
	КонецЦикла;
	
	
КонецПроцедуры


Функция СформироватьТЗДанныхАптеки(Текст)
	
	
	      
	ТЗОст = Новый ТаблицаЗначений;
	ТЗОст.Колонки.Добавить("Код");
	ТЗОст.Колонки.Добавить("Количество");
	ТЗОст.Колонки.Добавить("Цена");
	ТЗОст.Колонки.Добавить("КодПартии");
	ТЗОст.Колонки.Добавить("Сумма");
	
	КолСтрок = Текст.КоличествоСтрок();	
	
	Для н=2 по КолСтрок Цикл
		
	
		ТекСтрока		= Текст.ПолучитьСтроку(н);
		ТекСтрока		= СтрЗаменить(ТекСтрока,";",Символы.ПС);
		
		НоваяСтрока = ТЗОст.Добавить();
		//Сообщить(СтрПолучитьСтроку(ТекСтрока,2));
		НоваяСтрока.КодПартии		= Число(Сред(СокрЛП(СтрЗаменить(СтрПолучитьСтроку(ТекСтрока,6),"""","")),3,10));
		
		КодЕдиницы				=  СтрЗаменить(СтрПолучитьСтроку(ТекСтрока,2),"""","");
		Если КодЕдиницы = "" Тогда
			
			ТекПартия = Справочники.УЗ_Партии.НайтиПоКоду(НоваяСтрока.КодПартии);
			Товар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(ТекПартия.КодТовара);
			КодЕдиницы = Товар.ЕдиницаМин.Код;
			Если Товар.Коэффициент > 1 Тогда
				Сообщить("нашли ЕИТ по партии "+ Формат(НоваяСтрока.КодПартии,"ЧГ = 0 ") +  " и по товару : " + Формат(ТекПартия.КодТовара, "ЧГ=0"));
			КонецЕсли;
			
			Если КодЕдиницы = NULL или КодЕдиницы = 0 Тогда
				ВызватьИсключение "По одной из позиций не обнаружена единица измерения товара." + Символы.ПС + "Необходимо обновить связки в атеке и перевыгрузить документ в офис";	
			КонецЕсли;
		КонецЕсли;
		НоваяСтрока.Код 		= Число(КодЕдиницы); //Число(СтрЗаменить(СтрПолучитьСтроку(ТекСтрока,2),"""",""));

		НоваяСтрока.Количество	= Число(СтрЗаменить(СтрПолучитьСтроку(ТекСтрока,4),"""",""));
		НоваяСтрока.Цена		= Число(СтрЗаменить(СтрПолучитьСтроку(ТекСтрока,5),"""",""));
		НоваяСтрока.Сумма		= НоваяСтрока.Количество*НоваяСтрока.Цена;
		
	КонецЦикла;
	
	ТЗОст.Свернуть("Код,КодПартии","Количество,Сумма");	
	
	Возврат ТЗОст;
	
КонецФункции


Функция СформируемТЗЕИТ()
	 
	 ТХТ = "ВЫБРАТЬ
	       |	ЕИТ.Код,
	       |	ЕИТ.Ссылка,
	       |	ЕИТ.К,
	       |	ЕИТ.Владелец как Товар
	       |ИЗ
	       |	Справочник.ЕИТ КАК ЕИТ";
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	ТЗЕИТ = Запрос.Выполнить().Выгрузить();
	ТЗЕИТ.Индексы.Добавить("Код");
	Возврат ТЗЕИТ;
	
КонецФункции


Функция ПолучитьТаблицуСсылокНаПартии(СписокПартий)
	
	ТХТ = "ВЫБРАТЬ
	      |	Партии.Ссылка КАК ПартияСсылка,
		  |	Партии.Код КАК КодПартии,
	      |	Партии.КодТовара КАК КодТовара,
	      |	Партии.Наименование КАК ПартияНаименование,
		  | Партии.ЦенаЗакуп,
		  | Партии.ЦенаЗакупБезНДСРасчет,
		  | Партии.К,
		  | Партии.СтавкаНДСРозн как СтавкаДНС
	      |ИЗ
	      |	Справочник.УЗ_Партии КАК Партии
	      |ГДЕ
	      |	Партии.Код В(&СписокПартий)";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("СписокПартий",СписокПартий);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура СовместитьУчетИФакт(ТЗДанныхАптеки) Экспорт
	
	
	//Товар = Товар;
	
	ТЗСсылокНаПартии = ПолучитьТаблицуСсылокНаПартии(ТЗДанныхАптеки.ВыгрузитьКолонку("КодПартии"));
	ТЗЕИТ = СформируемТЗЕИТ();
	
	//ТЗОст.ВыбратьСтроку();
	КоличествоСтрокОстатков = ТЗДанныхАптеки.Количество();

	#Если Клиент Тогда
		ТекстДок = Новый ТекстовыйДокумент;
		Состояние("Накатываем таблицу остатков аптеки на остатки учетные в 1С .......");
	#КонецЕсли
	н=0;
	Для каждого стр из ТЗДанныхАптеки Цикл
		н=н+1;
		#Если Клиент Тогда
			Если н%100 = 0 Тогда
				Состояние("Загружено "+н+ " из " + КоличествоСтрокОстатков);
			КонецЕсли;
		#КонецЕсли
		
		ЕИТСтрока = ТЗЕИТ.Найти(стр.Код,"Код");		
		
		Если ЕИТСтрока = Неопределено Тогда
			#Если Клиент Тогда
				Сообщить("Не нашли ЕИТ по коду: " + стр.Код);
				Возврат;
			#КонецЕсли
		КонецЕсли;
		
		ПартияСтрока = ТЗСсылокНаПартии.Найти(стр.КодПартии,"КодПартии");
		Если ПартияСтрока = Неопределено Тогда
			#Если Клиент Тогда
				Сообщить("Не найдена партия с кодом "+Формат(стр.КодПартии , "ЧГ=0")+" файл не обрабатываем");
				Возврат;				
			#КонецЕсли
		КонецЕсли;
		
		
		//ТоварСсылка = ЕИТСтрока.Товар;
		//ПартияСсылка = ПартияСтрока.ПартияСсылка;
		
		НайденнаяСтрока = Товар.Найти(стр.КодПартии,"КодПартии");
		Если НайденнаяСтрока = Неопределено Тогда //Если нет на остатке, то добавляем строку
			НоваяСтрока = Товар.Добавить();
			НоваяСтрока.КодТовара = ПартияСтрока.КодТовара;
			НоваяСтрока.Коэфф = ЕИТСтрока.К;
			НоваяСтрока.КоэффициентРазбивки = ПартияСтрока.К;
			НоваяСтрока.КоличествоУчет = 0;
			НоваяСтрока.КоличествоФакт = стр.Количество;
			НоваяСтрока.КоличествоРазница = стр.Количество;
			НоваяСтрока.КодПартии = стр.КодПартии;
			//НоваяСтрока.СтавкаНДС = ПартияСтрока.СтавкаНДС;
			НоваяСтрока.СуммаЗакупБезНДСФакт = (стр.Количество*ПартияСтрока.ЦенаЗакупБезНДСРасчет)/ПартияСтрока.К*ЕИТСтрока.К;
			НоваяСтрока.СуммаЗакупБезНДСРазница = НоваяСтрока.СуммаЗакупБезНДСФакт;
		Иначе //Есть на остатке, редактируем
			НайденнаяСтрока.КоличествоФакт = НайденнаяСтрока.КоличествоФакт + стр.Количество*ЕИТСтрока.К;
			НайденнаяСтрока.КоличествоРазница = НайденнаяСтрока.КоличествоФакт -НайденнаяСтрока.КоличествоУчет;
			Если НайденнаяСтрока.КоличествоУчет = 0 Тогда
				НайденнаяСтрока.СуммаЗакупБезНДСФакт = НайденнаяСтрока.КоличествоФакт*ПартияСтрока.ЦенаЗакупБезНДСРасчет/ПартияСтрока.К; // (стр.Количество*ПартияСтрока.ЦенаЗакуп)/НайденнаяСтрока.Партия.ЕИТЗакупки.К*ЕИТСтрока.К;
				//Сообщить("партия: "+ НайденнаяСтрока.Партия + " проверить эту строчку");
			Иначе
				НайденнаяСтрока.СуммаЗакупБезНДСФакт = НайденнаяСтрока.КоличествоФакт*(НайденнаяСтрока.СуммаЗакупБезНДСУчет/НайденнаяСтрока.КоличествоУчет); //стр.Количество*(НайденнаяСтрока.СуммаЗакупУчет/НайденнаяСтрока.КоличествоУчет);
			КонецЕсли;
			НайденнаяСтрока.СуммаЗакупБезНДСРазница = НайденнаяСтрока.СуммаЗакупБезНДСФакт - НайденнаяСтрока.СуммаЗакупБезНДСУчет;
			
			//#Если Клиент Тогда
			//Если НайденнаяСтрока.СуммаРознФакт < НайденнаяСтрока.СуммаЗакупФакт Тогда
			//	ТекстДок.ДобавитьСтроку("партия: " + ПартияСсылка + " розн = " + НайденнаяСтрока.СуммаРознФакт + " < закуп = " + НайденнаяСтрока.СуммаЗакупФакт);
			//КонецЕсли;
			//#КонецЕсли
			
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	СуммаЗакупБезНДСУчет	= Товар.Итог("СуммаЗакупБезНДСУчет");
	СуммаЗакупБезНДСФакт	= Товар.Итог("СуммаЗакупБезНДСФакт");
	СуммаРазница	= Товар.Итог("СуммаРознБезНДСРазница");
	
	
	Записать(РежимЗаписиДокумента.Запись);
	//#Если Клиент Тогда
	//	Если ТекстДок.КоличествоСтрок() > 0 Тогда
	//		ТекстДок.Показать();
	//	КонецЕсли;
	//#КонецЕсли
	
КонецПроцедуры

Процедура МДЗагрузитьДанныеАптекиИЗPG() Экспорт
	
	Если Товар.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеХранилища = ДанныеАптеки.Получить();
	Если НЕ ДанныеХранилища = Неопределено Тогда
		
		ТЗДанныхАптеки = СформироватьТЗДанныхАптеки(ДанныеХранилища);
		СовместитьУчетИФакт(ТЗДанныхАптеки);
	КонецЕсли;
	
КонецПроцедуры

Процедура СовместитьУчетИФактНовоеПО(Таблицы) Экспорт
	
	
	ТаблицаОсновная = Таблицы.ТаблицаОсновная;
	
	КоличествоСтрокОстатков = ТаблицаОсновная.Количество();

	#Если Клиент Тогда
		Состояние("Обработка основной таблицы .......");
	#КонецЕсли
	н=0;
	Для каждого стр из ТаблицаОсновная Цикл
		н=н+1;
		#Если Клиент Тогда
			Если н%100 = 0 Тогда
				Состояние("Загружено "+н+ " из " + КоличествоСтрокОстатков);
			КонецЕсли;
		#КонецЕсли
		
		
		НайденнаяСтрока = Товар.Найти(стр.КодПартии,"КодПартии");
		Если НайденнаяСтрока = Неопределено Тогда //Если нет на остатке, то добавляем строку
			НоваяСтрока = Товар.Добавить();
			НоваяСтрока.КодТовара = стр.КодТовара;
			НоваяСтрока.Коэфф = 1;
			НоваяСтрока.КоэффициентРазбивки = стр.КоэффициентРазбивки;
			НоваяСтрока.КоличествоУчет = 0;
			НоваяСтрока.КоличествоУчетВАптеке = стр.КоличествоУчетВАптеке;
			НоваяСтрока.КоличествоФакт = стр.КоличествоФакт;
			НоваяСтрока.КоличествоРазница = стр.КоличествоФакт;
			НоваяСтрока.КодПартии = стр.КодПартии;
			НоваяСтрока.СуммаЗакупБезНДСФакт = (стр.КоличествоФакт*стр.ЦенаЗакупБезНДСРасчет)/стр.КоэффициентРазбивки;
			НоваяСтрока.СуммаЗакупБезНДСРазница = НоваяСтрока.СуммаЗакупБезНДСФакт;
		Иначе //Есть на остатке, редактируем
			НайденнаяСтрока.КоличествоУчетВАптеке = стр.КоличествоУчетВАптеке;
			НайденнаяСтрока.КоличествоФакт = НайденнаяСтрока.КоличествоФакт + стр.КоличествоФакт;
			НайденнаяСтрока.КоличествоРазница = НайденнаяСтрока.КоличествоФакт -НайденнаяСтрока.КоличествоУчет;
			Если НайденнаяСтрока.КоличествоУчет = 0 Тогда
				НайденнаяСтрока.СуммаЗакупБезНДСФакт = НайденнаяСтрока.КоличествоФакт*стр.ЦенаЗакупБезНДСРасчет/стр.КоэффициентРазбивки;
			Иначе
				НайденнаяСтрока.СуммаЗакупБезНДСФакт = НайденнаяСтрока.КоличествоФакт*(НайденнаяСтрока.СуммаЗакупБезНДСУчет/НайденнаяСтрока.КоличествоУчет);
			КонецЕсли;
			НайденнаяСтрока.СуммаЗакупБезНДСРазница = НайденнаяСтрока.СуммаЗакупБезНДСФакт - НайденнаяСтрока.СуммаЗакупБезНДСУчет;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаБрака = Таблицы.ТаблицаБрака;
	
	КоличествоСтрокОстатков = ТаблицаБрака.Количество();

	#Если Клиент Тогда
		Состояние("Обработка таблицы брака .......");
	#КонецЕсли
	н=0;
	Для каждого стр из ТаблицаБрака Цикл
		н=н+1;
		#Если Клиент Тогда
			Если н%100 = 0 Тогда
				Состояние("Загружено "+н+ " из " + КоличествоСтрокОстатков);
			КонецЕсли;
		#КонецЕсли
		
		
		НайденнаяСтрока = Брак.Найти(стр.КодПартии,"КодПартии");
		Если НайденнаяСтрока = Неопределено Тогда //Если нет на остатке, то добавляем строку
			НоваяСтрока = Брак.Добавить();
			НоваяСтрока.КодТовара = стр.КодТовара;
			НоваяСтрока.Коэфф = 1;
			НоваяСтрока.КоэффициентРазбивки = стр.КоэффициентРазбивки;
			НоваяСтрока.КоличествоУчет = 0;
			НоваяСтрока.КоличествоУчетВАптеке = стр.КоличествоУчетВАптеке;
			НоваяСтрока.КоличествоФакт = стр.КоличествоФакт;
			НоваяСтрока.КоличествоРазница = стр.КоличествоФакт;
			НоваяСтрока.КодПартии = стр.КодПартии;
			НоваяСтрока.СуммаЗакупБезНДСФакт = (стр.КоличествоФакт*стр.ЦенаЗакупБезНДСРасчет)/стр.КоэффициентРазбивки;
			НоваяСтрока.СуммаЗакупБезНДСРазница = НоваяСтрока.СуммаЗакупБезНДСФакт;
		Иначе //Есть на остатке, редактируем
			НайденнаяСтрока.КоличествоУчетВАптеке = стр.КоличествоУчетВАптеке;
			НайденнаяСтрока.КоличествоФакт = НайденнаяСтрока.КоличествоФакт + стр.КоличествоФакт;
			НайденнаяСтрока.КоличествоРазница = НайденнаяСтрока.КоличествоФакт -НайденнаяСтрока.КоличествоУчет;
			Если НайденнаяСтрока.КоличествоУчет = 0 Тогда
				НайденнаяСтрока.СуммаЗакупБезНДСФакт = НайденнаяСтрока.КоличествоФакт*стр.ЦенаЗакупБезНДСРасчет/стр.КоэффициентРазбивки;
			Иначе
				НайденнаяСтрока.СуммаЗакупБезНДСФакт = НайденнаяСтрока.КоличествоФакт*(НайденнаяСтрока.СуммаЗакупБезНДСУчет/НайденнаяСтрока.КоличествоУчет);
			КонецЕсли;
			НайденнаяСтрока.СуммаЗакупБезНДСРазница = НайденнаяСтрока.СуммаЗакупБезНДСФакт - НайденнаяСтрока.СуммаЗакупБезНДСУчет;
		КонецЕсли;
	КонецЦикла;
	
	
	ТаблицаАрбитража = Таблицы.ТаблицаАрбитража;
	
	КоличествоСтрокОстатков = ТаблицаАрбитража.Количество();

	#Если Клиент Тогда
		Состояние("Обработка таблицы арбитража .......");
	#КонецЕсли
	н=0;
	Для каждого стр из ТаблицаАрбитража Цикл
		н=н+1;
		#Если Клиент Тогда
			Если н%100 = 0 Тогда
				Состояние("Загружено "+н+ " из " + КоличествоСтрокОстатков);
			КонецЕсли;
		#КонецЕсли
		
		
		НайденнаяСтрока = Арбитраж.Найти(стр.КодПартии,"КодПартии");
		Если НайденнаяСтрока = Неопределено Тогда //Если нет на остатке, то добавляем строку
			НоваяСтрока = Арбитраж.Добавить();
			НоваяСтрока.КодТовара = стр.КодТовара;
			НоваяСтрока.Коэфф = 1;
			НоваяСтрока.КоэффициентРазбивки = стр.КоэффициентРазбивки;
			НоваяСтрока.КоличествоУчет = 0;
			НоваяСтрока.КоличествоУчетВАптеке = стр.КоличествоУчетВАптеке;
			НоваяСтрока.КоличествоФакт = стр.КоличествоФакт;
			НоваяСтрока.КоличествоРазница = стр.КоличествоФакт;
			НоваяСтрока.КодПартии = стр.КодПартии;
			НоваяСтрока.СуммаЗакупБезНДСФакт = (стр.КоличествоФакт*стр.ЦенаЗакупБезНДСРасчет)/стр.КоэффициентРазбивки;
			НоваяСтрока.СуммаЗакупБезНДСРазница = НоваяСтрока.СуммаЗакупБезНДСФакт;
		Иначе //Есть на остатке, редактируем
			НайденнаяСтрока.КоличествоУчетВАптеке = стр.КоличествоУчетВАптеке;
			НайденнаяСтрока.КоличествоФакт = НайденнаяСтрока.КоличествоФакт + стр.КоличествоФакт;
			НайденнаяСтрока.КоличествоРазница = НайденнаяСтрока.КоличествоФакт -НайденнаяСтрока.КоличествоУчет;
			Если НайденнаяСтрока.КоличествоУчет = 0 Тогда
				НайденнаяСтрока.СуммаЗакупБезНДСФакт = НайденнаяСтрока.КоличествоФакт*стр.ЦенаЗакупБезНДСРасчет/стр.КоэффициентРазбивки;
			Иначе
				НайденнаяСтрока.СуммаЗакупБезНДСФакт = НайденнаяСтрока.КоличествоФакт*(НайденнаяСтрока.СуммаЗакупБезНДСУчет/НайденнаяСтрока.КоличествоУчет);
			КонецЕсли;
			НайденнаяСтрока.СуммаЗакупБезНДСРазница = НайденнаяСтрока.СуммаЗакупБезНДСФакт - НайденнаяСтрока.СуммаЗакупБезНДСУчет;
		КонецЕсли;
	КонецЦикла;	
	
	СуммаЗакупБезНДСУчет	= Товар.Итог("СуммаЗакупБезНДСУчет") + Брак.Итог("СуммаЗакупБезНДСУчет") + Арбитраж.Итог("СуммаЗакупБезНДСУчет");
	СуммаЗакупБезНДСФакт	= Товар.Итог("СуммаЗакупБезНДСФакт") + Брак.Итог("СуммаЗакупБезНДСФакт") + Арбитраж.Итог("СуммаЗакупБезНДСФакт");
	СуммаРазница			= Товар.Итог("СуммаЗакупБезНДСРазница") + Брак.Итог("СуммаЗакупБезНДСРазница") + Арбитраж.Итог("СуммаЗакупБезНДСРазница");
	
	
	Записать(РежимЗаписиДокумента.Запись);
	
	Если НЕ ЕстьНесоответствия Тогда
		Записать(РежимЗаписиДокумента.Проведение);	
	КонецЕсли;
	
КонецПроцедуры

Функция РазобратьУпаковку(ДанныеХранилища)
	
	
	ХМЛ = Новый ЧтениеXML();
	Попытка
		ХМЛ.УстановитьСтроку(ДанныеХранилища);
	Исключение
		Возврат Неопределено;
	КонецПопытки;		
	
	Шапка = Новый Структура();
	
	Тело = Новый ТаблицаЗначений;
	Тело.Колонки.Добавить("КодПартии",	Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(13,0,ДопустимыйЗнак.Неотрицательный)));
	Тело.Колонки.Добавить("КоличествоУчетВАптеке",	Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(12,0,ДопустимыйЗнак.Любой)));
	Тело.Колонки.Добавить("КоличествоФакт",	Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(12,0,ДопустимыйЗнак.Любой)));
	Тело.Колонки.Добавить("ВидОстатка",	Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(3,0,ДопустимыйЗнак.Неотрицательный)));
	Тело.Колонки.Добавить("СуммаЗакупБезНДСУчет",	Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2,ДопустимыйЗнак.Любой)));
	Тело.Колонки.Добавить("СуммаЗакупБезНДСФакт",	Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2,ДопустимыйЗнак.Любой)));
	
	
	Пока ХМЛ.Прочитать() Цикл
		
		Если ХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
			
			Если ХМЛ.Имя = "str" Тогда  //заполняем таблич. часть
				
				Пока ХМЛ.Прочитать() Цикл
					Если ХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента и ХМЛ.Имя = "row" Тогда
						НоваяСтрока = Тело.Добавить();
						Пока ХМЛ.Прочитать() Цикл
							Если ХМЛ.ТипУзла = ТипУзлаXML.КонецЭлемента и ХМЛ.Имя = "row" Тогда
								прервать;
							КонецЕсли;
							
							Если ХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
								Если ХМЛ.Имя = "id_rests_type"	Тогда	ХМЛ.Прочитать();	НоваяСтрока.ВидОстатка		= Число(ХМЛ.Значение);
								ИначеЕсли ХМЛ.Имя = "guid_gpart"Тогда	ХМЛ.Прочитать();	НоваяСтрока.КодПартии	= Число(ХМЛ.Значение);
								ИначеЕсли ХМЛ.Имя = "qnt"		Тогда	ХМЛ.Прочитать();	НоваяСтрока.КоличествоУчетВАптеке= Число(ХМЛ.Значение);	
								ИначеЕсли ХМЛ.Имя = "qnt_f"		Тогда	ХМЛ.Прочитать();	НоваяСтрока.КоличествоФакт		= Число(ХМЛ.Значение);
								ИначеЕсли ХМЛ.Имя = "sum_pur_wo_vat"		Тогда	ХМЛ.Прочитать();	НоваяСтрока.СуммаЗакупБезНДСУчет= Число(ХМЛ.Значение);
								ИначеЕсли ХМЛ.Имя = "sum_pur_wo_vat_f"		Тогда	ХМЛ.Прочитать();	НоваяСтрока.СуммаЗакупБезНДСФакт = Число(ХМЛ.Значение);	
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
					Если ХМЛ.ТипУзла = ТипУзлаXML.КонецЭлемента и ХМЛ.Имя = "str" Тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Тело.Свернуть("КодПартии,ВидОстатка","КоличествоУчетВАптеке,КоличествоФакт,СуммаЗакупБезНДСУчет,СуммаЗакупБезНДСФакт");
	//Результат.Вставить("Шапка",Шапка);
	//Результат.Вставить("Тело",Тело);
	//Результат.Вставить("Аудит",Аудит);
	//Результат.Результат = Истина;
	Возврат Тело;
	
	
	
КонецФункции

Функция ПолучитьТабличныеЧастиДляЗагрузки(ТЗУпаковки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таб.КоличествоУчетВАптеке,
	               |	Таб.КоличествоФакт,
	               |	Таб.КодПартии,
	               |	Таб.ВидОстатка
	               |ПОМЕСТИТЬ Выборка
	               |ИЗ
	               |	&Таб КАК Таб
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Выборка.КоличествоУчетВАптеке,
	               |	Выборка.КоличествоФакт,
	               |	Выборка.КодПартии,
	               |	Выборка.ВидОстатка,
	               |	Партии.К КАК КоэффициентРазбивки,
	               |	Партии.КодТовара,
	               |	Партии.ЦенаЗакупБезНДСРасчет
	               |ИЗ
	               |	Выборка КАК Выборка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
	               |		ПО (Партии.Код = Выборка.КодПартии)
	               |ГДЕ
	               |	Выборка.ВидОстатка = 1
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Выборка.КоличествоУчетВАптеке,
	               |	Выборка.КоличествоФакт,
	               |	Выборка.КодПартии,
	               |	Выборка.ВидОстатка,
	               |	Партии.К КАК КоэффициентРазбивки,
	               |	Партии.КодТовара,
	               |	Партии.ЦенаЗакупБезНДСРасчет
	               |ИЗ
	               |	Выборка КАК Выборка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
	               |		ПО (Партии.Код = Выборка.КодПартии)
	               |ГДЕ
	               |	Выборка.ВидОстатка = 3
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Выборка.КоличествоУчетВАптеке,
	               |	Выборка.КоличествоФакт,
	               |	Выборка.КодПартии,
	               |	Выборка.ВидОстатка,
	               |	Партии.К КАК КоэффициентРазбивки,
	               |	Партии.КодТовара,
	               |	Партии.ЦенаЗакупБезНДСРасчет
	               |ИЗ
	               |	Выборка КАК Выборка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
	               |		ПО (Партии.Код = Выборка.КодПартии)
	               |ГДЕ
	               |	Выборка.ВидОстатка = 4
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ Выборка";
				   
	Запрос.УстановитьПараметр("Таб",ТЗУпаковки);
	Таблицы = Новый Структура;
	Результат = Запрос.ВыполнитьПакет();	   
	Таблицы.Вставить("ТаблицаОсновная",	Результат[1].Выгрузить());
	Таблицы.Вставить("ТаблицаБрака",	Результат[2].Выгрузить());
	Таблицы.Вставить("ТаблицаАрбитража",Результат[3].Выгрузить());
	
	
	Возврат Таблицы;	
	
КонецФункции

Процедура ЗаполнитьТаблицуОстаткомАптеки(Таблицы = Неопределено) Экспорт
	
	Если ТипИнвентаризации = Перечисления.ТипыИнвентаризации.Полная Тогда
		
		Запрос = Новый Запрос;
		
		
		
		ТХТ="ВЫБРАТЬ
		|	Остатки.ТоварКод КАК КодТовара,
		|	Остатки.ПартияКод КАК КодПартии,
		|	Остатки.КоличествоОстаток КАК КоличествоУчет,
		|	Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСУчет,
		|	1 КАК Коэфф,
		|	-Остатки.КоличествоОстаток КАК КоличествоРазница,
		|	-Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСРазница,
		|	УЗ_Партии.К КАК КоэффициентРазбивки
		|ИЗ
		|	РегистрНакопления.УЗ_Партии.Остатки(&Дата, СкладКод = &СкладКод) КАК Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
		|		ПО Остатки.ПартияКод = УЗ_Партии.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	Остатки.ТоварКод";
		
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Дата",Дата);
		Запрос.УстановитьПараметр("СкладКод",Склад.Код);
		
		ТЗ = Запрос.Выполнить().Выгрузить();
		Товар.Загрузить(ТЗ);	
		
		ТХТ="ВЫБРАТЬ
		|	Остатки.ТоварКод КАК КодТовара,
		|	Остатки.ПартияКод КАК КодПартии,
		|	Остатки.КоличествоОстаток КАК КоличествоУчет,
		|	Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСУчет,
		|	1 КАК Коэфф,
		|	-Остатки.КоличествоОстаток КАК КоличествоРазница,
		|	-Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСРазница,
		|	УЗ_Партии.К КАК КоэффициентРазбивки
		|ИЗ
		|	РегистрНакопления.УЗ_ПартииБрак.Остатки(&Дата, СкладКод = &СкладКод) КАК Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
		|		ПО Остатки.ПартияКод = УЗ_Партии.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	Остатки.ТоварКод";
		
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Дата",Дата);
		Запрос.УстановитьПараметр("СкладКод",Склад.Код);
		
		ТЗ = Запрос.Выполнить().Выгрузить();
		Брак.Загрузить(ТЗ);
	Иначе
		
		ТаблицаОсновная = Таблицы.ТаблицаОсновная;
		ТаблицаБрака = Таблицы.ТаблицаБрака;
		ТаблицаАрбитража = Таблицы.ТаблицаАрбитража;
		ТаблицаСводная = Новый ТаблицаЗначений;
		ТаблицаСводная.Колонки.Добавить("КодТовара");
		Для каждого стр из ТаблицаОсновная Цикл
			НС = ТаблицаСводная.Добавить();	
			НС.КодТовара = стр.КодТовара;
		КонецЦикла;
		Для каждого стр из ТаблицаБрака Цикл
			НС = ТаблицаСводная.Добавить();	
			НС.КодТовара = стр.КодТовара;
		КонецЦикла;	
		Для каждого стр из ТаблицаАрбитража Цикл
			НС = ТаблицаСводная.Добавить();	
			НС.КодТовара = стр.КодТовара;
		КонецЦикла;		
		ТаблицаСводная.Свернуть("КодТовара","");
		Запрос = Новый Запрос;
		
		
		
		ТХТ="ВЫБРАТЬ
		|	Остатки.ТоварКод КАК КодТовара,
		|	Остатки.ПартияКод КАК КодПартии,
		|	Остатки.КоличествоОстаток КАК КоличествоУчет,
		|	Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСУчет,
		|	1 КАК Коэфф,
		|	-Остатки.КоличествоОстаток КАК КоличествоРазница,
		|	-Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСРазница,
		|	УЗ_Партии.К КАК КоэффициентРазбивки
		|ИЗ
		|	РегистрНакопления.УЗ_Партии.Остатки(&Дата, ТоварКод в (&КодыТовара) и СкладКод = &СкладКод) КАК Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
		|		ПО Остатки.ПартияКод = УЗ_Партии.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	Остатки.ТоварКод";
		
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Дата",Дата);
		Запрос.УстановитьПараметр("СкладКод",Склад.Код);
		Запрос.УстановитьПараметр("КодыТовара",ТаблицаСводная.ВыгрузитьКолонку("КодТовара"));
		
		ТЗ = Запрос.Выполнить().Выгрузить();
		Товар.Загрузить(ТЗ);	
		
		ТХТ="ВЫБРАТЬ
		|	Остатки.ТоварКод КАК КодТовара,
		|	Остатки.ПартияКод КАК КодПартии,
		|	Остатки.КоличествоОстаток КАК КоличествоУчет,
		|	Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСУчет,
		|	1 КАК Коэфф,
		|	-Остатки.КоличествоОстаток КАК КоличествоРазница,
		|	-Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСРазница,
		|	УЗ_Партии.К КАК КоэффициентРазбивки
		|ИЗ
		|	РегистрНакопления.УЗ_ПартииБрак.Остатки(&Дата, ТоварКод в (&КодыТовара) и  СкладКод = &СкладКод) КАК Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
		|		ПО Остатки.ПартияКод = УЗ_Партии.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	Остатки.ТоварКод";
		
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Дата",Дата);
		Запрос.УстановитьПараметр("СкладКод",Склад.Код);
		Запрос.УстановитьПараметр("КодыТовара",ТаблицаСводная.ВыгрузитьКолонку("КодТовара"));
		
		ТЗ = Запрос.Выполнить().Выгрузить();
		Брак.Загрузить(ТЗ);
		
		ТХТ="ВЫБРАТЬ
		|	Остатки.ТоварКод КАК КодТовара,
		|	Остатки.ПартияКод КАК КодПартии,
		|	Остатки.КоличествоОстаток КАК КоличествоУчет,
		|	Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСУчет,
		|	1 КАК Коэфф,
		|	-Остатки.КоличествоОстаток КАК КоличествоРазница,
		|	-Остатки.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДСРазница,
		|	УЗ_Партии.К КАК КоэффициентРазбивки
		|ИЗ
		|	РегистрНакопления.УЗ_ПартииАрбитраж.Остатки(&Дата, ТоварКод в (&КодыТовара) и  СкладКод = &СкладКод) КАК Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
		|		ПО Остатки.ПартияКод = УЗ_Партии.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	Остатки.ТоварКод";
		
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Дата",Дата);
		Запрос.УстановитьПараметр("СкладКод",Склад.Код);
		Запрос.УстановитьПараметр("КодыТовара",ТаблицаСводная.ВыгрузитьКолонку("КодТовара"));
		
		ТЗ = Запрос.Выполнить().Выгрузить();
		Арбитраж.Загрузить(ТЗ);		
		
		
	КонецЕсли;

	
	     
КонецПроцедуры

Процедура ОбработатьДокумент() Экспорт
	
	Если НЕ ПустаяСтрока(ИДДокументаАптеки) Тогда
		ДанныеХранилища = ДанныеАптеки.Получить();
		Если НЕ ДанныеХранилища = Неопределено Тогда
			ТЗУпаковки = РазобратьУпаковку(ДанныеХранилища);	
			Если ТЗУпаковки = Неопределено Тогда
				#Если Клиент Тогда
					Предупреждение("Не удалось разобрать упаковку инвентаризации");	
				#КонецЕсли
			КонецЕсли;
			Таблицы = ПолучитьТабличныеЧастиДляЗагрузки(ТЗУпаковки);
			ЗаполнитьТаблицуОстаткомАптеки(Таблицы);
			СовместитьУчетИФактНовоеПО(Таблицы);
		КонецЕсли;			
	КонецЕсли;

	
КонецПроцедуры

Процедура ПроверитьНаЗаполнение(Отказ)
	
	Если Склад.Пустая() Тогда
		#Если Клиент Тогда
			Предупреждение("Не выбран склад. Выполнение не может быть продолжено");	
		#КонецЕсли
		Отказ = Истина;
	КонецЕсли;  
	
	Если Фирма.Пустая() Тогда
		#Если Клиент Тогда
			Предупреждение("Не выбран склад. Выполнение не может быть продолжено");	
		#КонецЕсли
		Отказ = Истина;
	КонецЕсли;  	
	
КонецПроцедуры

Процедура ПодготовитьТаблицыДвижений(ТаблицыДвижений)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Дата",Дата);
	Запрос.УстановитьПараметр("СкладКод",Склад.Код);
	Запрос.УстановитьПараметр("ФирмаКод",Фирма.Код);
	Запрос.УстановитьПараметр("Склад",Склад);
	
	Запрос.УстановитьПараметр("КачествоТовараПорядок",Перечисления.УЗ_КачествоТовара.Индекс(Перечисления.УЗ_КачествоТовара.ХорошийТовар));
	Запрос.УстановитьПараметр("КачествоТовараБракПорядок",Перечисления.УЗ_КачествоТовара.Индекс(Перечисления.УЗ_КачествоТовара.Брак));
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	&СкладКод КАК СкладКод,
	               |	&ФирмаКод КАК ФирмаКод,
	               |	Партии.ВидПоступления КАК ВидПоступленияПорядок,
	               |	ТЧТовар.КодПартии КАК ПартияКод,
	               |	ТЧТовар.КодТовара КАК ТоварКод,
	               |	ТЧТовар.КоличествоРазница * ТЧТовар.Коэфф КАК Количество,
	               |	ТЧТовар.Коэфф,
	               |	Партии.СтавкаНДСЗакуп,
	               |	Партии.СтавкаНДСРозн КАК СтавкаНДС,
	               |	ТЧТовар.СуммаЗакупБезНДСРазница КАК СуммаЗакупБезНДС
	               |ПОМЕСТИТЬ ВтТовары
	               |ИЗ
	               |	Документ.УЗ_Инвентаризация.Товар КАК ТЧТовар
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
	               |		ПО (Партии.Код = ТЧТовар.КодПартии)
	               |ГДЕ
	               |	ТЧТовар.Ссылка = &Ссылка
	               |	И ТЧТовар.КоличествоРазница <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&СкладКод КАК СкладКод,
	               |	&ФирмаКод КАК ФирмаКод,
	               |	Партии.ВидПоступления КАК ВидПоступленияПорядок,
	               |	ТЧТовар.КодПартии КАК ПартияКод,
	               |	ТЧТовар.КодТовара КАК ТоварКод,
	               |	ТЧТовар.КоличествоРазница * ТЧТовар.Коэфф КАК Количество,
	               |	ТЧТовар.Коэфф,
	               |	Партии.СтавкаНДСЗакуп,
	               |	Партии.СтавкаНДСРозн КАК СтавкаНДС,
	               |	ТЧТовар.СуммаЗакупБезНДСРазница КАК СуммаЗакупБезНДС
	               |ПОМЕСТИТЬ ВтБрак
	               |ИЗ
	               |	Документ.УЗ_Инвентаризация.Брак КАК ТЧТовар
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
	               |		ПО (Партии.Код = ТЧТовар.КодПартии)
	               |ГДЕ
	               |	ТЧТовар.Ссылка = &Ссылка
	               |	И ТЧТовар.КоличествоРазница <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&СкладКод КАК СкладКод,
	               |	&ФирмаКод КАК ФирмаКод,
	               |	Партии.ВидПоступления КАК ВидПоступленияПорядок,
	               |	ТЧТовар.КодПартии КАК ПартияКод,
	               |	ТЧТовар.КодТовара КАК ТоварКод,
	               |	ТЧТовар.КоличествоРазница * ТЧТовар.Коэфф КАК Количество,
	               |	ТЧТовар.Коэфф,
	               |	Партии.СтавкаНДСЗакуп,
	               |	Партии.СтавкаНДСРозн КАК СтавкаНДС,
	               |	ТЧТовар.СуммаЗакупБезНДСРазница КАК СуммаЗакупБезНДС
	               |ПОМЕСТИТЬ ВтАрбитраж
	               |ИЗ
	               |	Документ.УЗ_Инвентаризация.Арбитраж КАК ТЧТовар
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
	               |		ПО (Партии.Код = ТЧТовар.КодПартии)
	               |ГДЕ
	               |	ТЧТовар.Ссылка = &Ссылка
	               |	И ТЧТовар.КоличествоРазница <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТТовары.СкладКод,
	               |	ВТТовары.ФирмаКод,
	               |	ВТТовары.ВидПоступленияПорядок,
	               |	ВТТовары.ПартияКод,
	               |	ВТТовары.ТоварКод,
	               |	ВТТовары.СтавкаНДСЗакуп,
	               |	ВЫБОР
	               |		КОГДА ВТТовары.Количество < 0
	               |			ТОГДА -1 * ВТТовары.СуммаЗакупБезНДС
	               |		ИНАЧЕ ВТТовары.СуммаЗакупБезНДС
	               |	КОНЕЦ КАК СуммаЗакупБезНДС,
	               |	ВЫБОР
	               |		КОГДА ВТТовары.Количество < 0
	               |			ТОГДА -1 * ВТТовары.Количество
	               |		ИНАЧЕ ВТТовары.Количество
	               |	КОНЕЦ КАК Количество,
	               |	ВЫБОР
	               |		КОГДА ВТТовары.Количество < 0
	               |			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |	КОНЕЦ КАК ВидДвижения,
	               |	&Дата КАК Период
	               |ИЗ
	               |	ВтТовары КАК ВТТовары
	               |ГДЕ
	               |	ВТТовары.Количество <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВтБрак.СкладКод,
	               |	ВтБрак.ФирмаКод,
	               |	ВтБрак.ВидПоступленияПорядок,
	               |	ВтБрак.ПартияКод,
	               |	ВтБрак.ТоварКод,
	               |	ВтБрак.СтавкаНДСЗакуп,
	               |	ВЫБОР
	               |		КОГДА ВтБрак.Количество < 0
	               |			ТОГДА -1 * ВтБрак.СуммаЗакупБезНДС
	               |		ИНАЧЕ ВтБрак.СуммаЗакупБезНДС
	               |	КОНЕЦ КАК СуммаЗакупБезНДС,
	               |	ВЫБОР
	               |		КОГДА ВтБрак.Количество < 0
	               |			ТОГДА -1 * ВтБрак.Количество
	               |		ИНАЧЕ ВтБрак.Количество
	               |	КОНЕЦ КАК Количество,
	               |	ВЫБОР
	               |		КОГДА ВтБрак.Количество < 0
	               |			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |	КОНЕЦ КАК ВидДвижения,
	               |	&Дата КАК Период
	               |ИЗ
	               |	ВтБрак КАК ВтБрак
	               |ГДЕ
	               |	ВтБрак.Количество <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВтАрбитраж.СкладКод,
	               |	ВтАрбитраж.ФирмаКод,
	               |	ВтАрбитраж.ВидПоступленияПорядок,
	               |	ВтАрбитраж.ПартияКод,
	               |	ВтАрбитраж.ТоварКод,
	               |	ВтАрбитраж.СтавкаНДСЗакуп,
	               |	ВЫБОР
	               |		КОГДА ВтАрбитраж.Количество < 0
	               |			ТОГДА -1 * ВтАрбитраж.СуммаЗакупБезНДС
	               |		ИНАЧЕ ВтАрбитраж.СуммаЗакупБезНДС
	               |	КОНЕЦ КАК СуммаЗакупБезНДС,
	               |	ВЫБОР
	               |		КОГДА ВтАрбитраж.Количество < 0
	               |			ТОГДА -1 * ВтАрбитраж.Количество
	               |		ИНАЧЕ ВтАрбитраж.Количество
	               |	КОНЕЦ КАК Количество,
	               |	ВЫБОР
	               |		КОГДА ВтАрбитраж.Количество < 0
	               |			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |	КОНЕЦ КАК ВидДвижения,
	               |	&Дата КАК Период
	               |ИЗ
	               |	ВтАрбитраж КАК ВтАрбитраж
	               |ГДЕ
	               |	ВтАрбитраж.Количество <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&Дата КАК Период,
	               |	&СкладКод КАК СкладКод,
	               |	&ФирмаКод КАК ФирмаКод,
	               |	ВыборкаДляТО.КачествоТовараПорядок КАК КачествоТовараПорядок,
	               |	ВыборкаДляТО.ВидПоступленияПорядок,
	               |	ВыборкаДляТО.СтавкаНДС,
	               |	ВЫБОР
	               |		КОГДА ВыборкаДляТО.СуммаЗакупБезНДС < 0
	               |			ТОГДА -1 * ВыборкаДляТО.СуммаЗакупБезНДС
	               |		ИНАЧЕ ВыборкаДляТО.СуммаЗакупБезНДС
	               |	КОНЕЦ КАК СуммаЗакупБезНДС,
	               |	ВЫБОР
	               |		КОГДА ВыборкаДляТО.СуммаЗакупБезНДС < 0
	               |			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |	КОНЕЦ КАК ВидДвижения
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		&КачествоТовараПорядок КАК КачествоТовараПорядок,
	               |		ВТТовары.ВидПоступленияПорядок КАК ВидПоступленияПорядок,
	               |		ВТТовары.СтавкаНДС КАК СтавкаНДС,
	               |		СУММА(ВТТовары.СуммаЗакупБезНДС) КАК СуммаЗакупБезНДС
	               |	ИЗ
	               |		ВтТовары КАК ВТТовары
	               |	ГДЕ
	               |		ВТТовары.Количество <> 0
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВТТовары.ВидПоступленияПорядок,
	               |		ВТТовары.СтавкаНДС
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		&КачествоТовараБракПорядок,
	               |		ВтБрак.ВидПоступленияПорядок,
	               |		ВтБрак.СтавкаНДС,
	               |		СУММА(ВтБрак.СуммаЗакупБезНДС)
	               |	ИЗ
	               |		ВтБрак КАК ВтБрак
	               |	ГДЕ
	               |		ВтБрак.Количество <> 0
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВтБрак.ВидПоступленияПорядок,
	               |		ВтБрак.СтавкаНДС
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		&КачествоТовараПорядок,
	               |		ВтАрбитраж.ВидПоступленияПорядок,
	               |		ВтАрбитраж.СтавкаНДС,
	               |		СУММА(ВтАрбитраж.СуммаЗакупБезНДС)
	               |	ИЗ
	               |		ВтАрбитраж КАК ВтАрбитраж
	               |	ГДЕ
	               |		ВтАрбитраж.Количество <> 0
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВтАрбитраж.ВидПоступленияПорядок,
	               |		ВтАрбитраж.СтавкаНДС) КАК ВыборкаДляТО
	               |ГДЕ
	               |	ВыборкаДляТО.СуммаЗакупБезНДС <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТТовары
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТБрак
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВтАрбитраж";
				   
			Результат = Запрос.ВыполнитьПакет();	   
			ТаблицыДвижений.Вставить("УЗ_Партии",				                        Результат[3].Выгрузить());
			ТаблицыДвижений.Вставить("УЗ_ПартииБрак",				                    Результат[4].Выгрузить());
			ТаблицыДвижений.Вставить("УЗ_ПартииАрбитраж",			                    Результат[5].Выгрузить());
			ТаблицыДвижений.Вставить("УЗ_ТоварныйОтчет",			                    Результат[6].Выгрузить());
				   
	
КонецПроцедуры



Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	
	
	
	ТаблицыДвижений = Новый Структура();
	
	ПодготовитьТаблицыДвижений(ТаблицыДвижений);
	
	Таблица= ТаблицыДвижений.УЗ_Партии;
	Движения.УЗ_Партии.Записывать = Истина;
	Движения.УЗ_Партии.Загрузить(Таблица);	

	
	Таблица= ТаблицыДвижений.УЗ_ПартииБрак;
	Движения.УЗ_ПартииБрак.Записывать = Истина;
	Движения.УЗ_ПартииБрак.Загрузить(Таблица);
	
	Таблица= ТаблицыДвижений.УЗ_ПартииАрбитраж;
	Движения.УЗ_ПартииАрбитраж.Записывать = Истина;
	Движения.УЗ_ПартииАрбитраж.Загрузить(Таблица);
	
	Таблица= ТаблицыДвижений.УЗ_ТоварныйОтчет;
	Движения.УЗ_ТоварныйОтчет.Записывать = Истина;
	Движения.УЗ_ТоварныйОтчет.Загрузить(Таблица);

	
	
	ПоместитьВОбменСкладБух();    // GtG  //  20.06.2016 20:36:39 

	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДатаПоследнегоИзменения = ТекущаяДата();
	
	СуммаЗакупБезНДСУчет	= Товар.Итог("СуммаЗакупБезНДСУчет")	+ Брак.Итог("СуммаЗакупБезНДСУчет") + Арбитраж.Итог("СуммаЗакупБезНДСУчет") ;
	СуммаЗакупБезНДСФакт	= Товар.Итог("СуммаЗакупБезНДСФакт")	+ Брак.Итог("СуммаЗакупБезНДСФакт") + Арбитраж.Итог("СуммаЗакупБезНДСФакт");
	СуммаРазница			= Товар.Итог("СуммаЗакупБезНДСРазница") + Брак.Итог("СуммаЗакупБезНДСРазница") + Арбитраж.Итог("СуммаЗакупБезНДСРазница");

	
	
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПроверитьНаЗаполнение(Отказ);	
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЕстьНесоответствия = Ложь;
	Если НЕ ПустаяСтрока(ИДДокументаАптеки) Тогда
		Для каждого стр из Товар Цикл
			Если стр.КоличествоУчет <> стр.КоличествоУчетВАптеке Тогда
				ЕстьНесоответствия = Истина;
				стр.ЕстьНесоответствия = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СуммаЗакупБезНДСУчет <> СуммаЗакупБезНДСУчетВАптеке или СуммаЗакупБезНДСФакт <> СуммаЗакупБезНДСФактВАптеке Тогда
		ЕстьНесоответствия = Истина;
	КонецЕсли;
	
	ОбщегоНазначения.ЗаписатьСменуСостоянияДокумента(Ссылка,РежимЗаписи,ПометкаУдаления);
	
КонецПроцедуры
