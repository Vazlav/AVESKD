
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДатаПоследнегоИзменения = ТекущаяДата();
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда				
		ПроверитьНаЗаполнение(Отказ);	
		Если Отказ Тогда
			Возврат;
		КонецЕсли;	
		            		
		Если СтатусВСистемеЭДО.Пустая() Тогда
			ВидыЭД = Новый Массив;
			ВидыЭД.Добавить(Перечисления.ВидыЭлектронныхДокументов.ПретензияПоставщику);
			СтатусВСистемеЭДО = ОМ_ТСО.ПолучитьНачальныйСтатусЭДО(ВидыЭД, Фирма, Поставщик);
			
		КонецЕсли;    		
		
		РешениеПоставщика = Истина;
		ПолностьюВыполнен = Истина;
		ЧастичноВыполнен = Ложь;
		Отправлен = Истина;
		
		Для Каждого ТекСтрока Из Товар Цикл
			
			Если ТекСтрока.Аннулировано Или ТекСтрока.Дубль Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекСтрока.ЗакрывающийДокумент) Тогда			
				ЧастичноВыполнен = Истина;
				
			Иначе			
				ПолностьюВыполнен = Ложь;
				
				Если Не ЗначениеЗаполнено(ТекСтрока.КодРешенияПоставщика) Тогда
					РешениеПоставщика = Ложь;
					
					Если Не ТекСтрока.ОтправленоПоставщику Тогда
						Отправлен = Ложь;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли; 
			
		КонецЦикла;
		
		Если ПолностьюВыполнен Тогда
			Статус = Перечисления.СтатусыДокументаПретензииПоставщику.Выполнен;
		ИначеЕсли Отправлен = Ложь Тогда
			Статус = Перечисления.СтатусыДокументаПретензииПоставщику.Зарегистрирован;
		ИначеЕсли ЧастичноВыполнен Тогда
			Статус = Перечисления.СтатусыДокументаПретензииПоставщику.ЧастичноВыполнен;	
		ИначеЕсли РешениеПоставщика Тогда
			Статус = Перечисления.СтатусыДокументаПретензииПоставщику.РешениеПоставщика;
		Иначе
			Статус = Перечисления.СтатусыДокументаПретензииПоставщику.ОтправленПоставщику;
		КонецЕсли;
		
	КонецЕсли;
	
	
	ЗаполнитьНедостающиеКодыПоставщиков();
	      
КонецПроцедуры

Процедура ПроверитьНаЗаполнение(Отказ)
	
	Для Каждого ТекТовар Из Товар Цикл
		Если ТекТовар.Товар.Пустая() И Не ЗначениеЗаполнено(ТекТовар.Баркод) Тогда
			#Если Клиент Тогда
				Сообщить("Не заполнены поля ""Товар"" и ""Баркод""! Документ не проведен", СтатусСообщения.ОченьВажное);	 
			#КонецЕсли
			
			Отказ = Истина;			
			Возврат;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНедостающиеКодыПоставщиков()
	
	МассивТоваров = Новый Массив;
	Для Каждого ТекСтрока Из Товар Цикл
		Если ПустаяСтрока(ТекСтрока.КодТовараПоставщика) И МассивТоваров.Найти(ТекСтрока.Товар) = Неопределено Тогда
			МассивТоваров.Добавить(ТекСтрока.Товар);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПоставщикСвязок = Поставщик.ПоставщикСвязок;
	Если Не ЗначениеЗаполнено(ПоставщикСвязок) Тогда
		ПоставщикСвязок = Поставщик;
	КонецЕсли;
	         
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СвязкиТовараСПоставщиком.ТоварФирмы,
	|	МАКСИМУМ(СвязкиТовараСПоставщиком.КодТовараПоставщика) КАК КодТовараПоставщика
	|ПОМЕСТИТЬ втСвязки
	|ИЗ
	|	Справочник.СвязкиТовараСПоставщиком КАК СвязкиТовараСПоставщиком
	|ГДЕ
	|	СвязкиТовараСПоставщиком.Поставщик = &ПоставщикСвязок
	|	И СвязкиТовараСПоставщиком.ТоварФирмы В(&Товары)
	|
	|СГРУППИРОВАТЬ ПО
	|	СвязкиТовараСПоставщиком.ТоварФирмы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТовараТовар.НомерЗаказа КАК НомерЗаказа
	|ПОМЕСТИТЬ втНомераЗаказов
	|ИЗ
	|	Документ.УЗ_ПоступлениеТовара.Товар КАК ПоступлениеТовараТовар
	|ГДЕ
	|	ПоступлениеТовараТовар.Ссылка = &ДокументПоступления
	|	И ПоступлениеТовараТовар.Товар В(&Товары)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерЗаказа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказТовар.Товар,
	|	ЗаказТовар.КодТовараПоставщика
	|ПОМЕСТИТЬ втЗаказы
	|ИЗ
	|	Документ.Заказ.Товар КАК ЗаказТовар
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНомераЗаказов КАК втНомераЗаказов
	|		ПО ЗаказТовар.Ссылка.Номер = втНомераЗаказов.НомерЗаказа
	|ГДЕ
	|	ЗаказТовар.Ссылка.Дата > &ДатаОтбора
	|	И ЗаказТовар.Ссылка.Поставщик = &Поставщик
	|	И ЗаказТовар.Товар В(&Товары)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСвязки.ТоварФирмы КАК ТоварФирмы,
	|	ЕСТЬNULL(втЗаказы.КодТовараПоставщика, втСвязки.КодТовараПоставщика) КАК КодТовараПоставщика
	|ИЗ
	|	втСвязки КАК втСвязки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЗаказы КАК втЗаказы
	|		ПО втСвязки.ТоварФирмы = втЗаказы.Товар";
	
	Запрос.УстановитьПараметр("ДокументПоступления",	ЭтотОбъект.ДокументПоступления);
	Запрос.УстановитьПараметр("ДатаОтбора",				ЭтотОбъект.ДокументПоступления.Дата - 14*24*60*60);
	Запрос.УстановитьПараметр("Поставщик",				ЭтотОбъект.Поставщик);
	Запрос.УстановитьПараметр("ПоставщикСвязок",		ПоставщикСвязок);
	Запрос.УстановитьПараметр("Товары",					МассивТоваров);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;	
	
	Выборка = РезультатЗапроса.Выбрать(); 
	
	СоответствиеТоваров = Новый Соответствие;	
	Пока Выборка.Следующий() Цикл
		СоответствиеТоваров.Вставить(Выборка.ТоварФирмы, Выборка.КодТовараПоставщика);
	КонецЦикла;
	
	
	Для Каждого ТекСтрока Из Товар Цикл 		
		НайденныйКод = СоответствиеТоваров[ТекСтрока.Товар];
		Если ЗначениеЗаполнено(НайденныйКод) Тогда
			ТекСтрока.КодТовараПоставщика = НайденныйКод;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
