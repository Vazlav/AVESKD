//Перем ДБФ;
Перем АДО;
Перем ТЗОтказов;

Процедура ПодключитьБазу1C8(АдоЦБ) Экспорт// ---- by  GtG ---- 
	//---------------------- ПОДКЛЮЧАЕМСЯ К БАЗЕ ЧЕРЕЗ ADO -------------------GTG->-
	АдоЦБ=Новый COMОбъект ("AdoDB.Connection");
	АдоЦБ_КоннСтр="DSN=A5_Sklad; Password=;User ID=sa";
	АдоЦБ.Open(АдоЦБ_КоннСтр);
	//------------------------------------------------------------------------GTG-<-  
	//глПРоверкаСостоянияАДО(АдоЦБ,"Подключение к А2005 через ADODB");   
КонецПроцедуры // ----< ПодключитьЦентральнуюБазу_АДО >---- by  GtG ----

Процедура ЗаписатьОтказыВРегистр(ТЗОтказов)
	
	Если ТЗОтказов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗОтказов.ЗаполнитьЗначения(ЭтотОбъект.Ссылка,"Документ");

	
	НаборЗаписей = РегистрыСведений.ОтказыПоЗаказам.СоздатьНаборЗаписей();

	НаборЗаписей.Отбор.Документ.Установить(ЭтотОбъект.Ссылка); 

	НаборЗаписей.Загрузить(ТЗОтказов);
	
	Для н=0 По 3 Цикл
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Попытка
			
			ТекБлокировка = Новый БлокировкаДанных;
			БлокировкаРегистра = ТекБлокировка.Добавить("РегистрСведений.ОтказыПоЗаказам");
			БлокировкаРегистра.УстановитьЗначение("Документ",ЭтотОбъект.Ссылка);
			БлокировкаРегистра.Режим = РежимБлокировкиДанных.Исключительный;
			ТекБлокировка.Заблокировать();
			
			НаборЗаписей.Записать();
			ЗафиксироватьТранзакцию();
			Прервать;
		Исключение
			ОтменитьТранзакцию();
			ОбщегоНазначения.Задержка(2);
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	ТЗОтказов.Очистить();	
	
	//Если ТЗОтказов.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//НаборЗаписей = РегистрыСведений.Отказы.СоздатьНаборЗаписей();

	//НаборЗаписей.Отбор.Документ.Установить(ЭтотОбъект.Ссылка); 

	//
	//Для каждого стр из ТЗОтказов Цикл
	//	НоваяЗапись = НаборЗаписей.Добавить();
	//	НоваяЗапись.Документ = ЭтотОбъект.Ссылка;
	//	НоваяЗапись.Товар = стр.Товар;
	//	НоваяЗапись.Количество = стр.Количество;
	//	НоваяЗапись.Цена = стр.Цена;
	//	НоваяЗапись.КодТовараПоставщика = стр.КодТовараПоставщика;
	//	НоваяЗапись.НаименованиеТовараПоставщика = стр.НаименованиеТовараПоставщика;
	//	НоваяЗапись.НомерЗаявкиАптеки = стр.НомерЗаявкиАптеки;
	//	НоваяЗапись.ПричинаОтказа = стр.ПричинаОтказа;
	//КонецЦикла;
	//Попытка
	//	НаборЗаписей.Записать();
	//Исключение
	//	Сообщить(ОписаниеОшибки());
	//КонецПопытки;
	//ТЗОтказов.Очистить();
	//
	
КонецПроцедуры

Процедура ОсновныеДействияФормыВыгрузить(Кнопка)
	
	Если ЭтоНовый() = Истина Тогда
		Предупреждение("Сохраните сначала документ!");
		Возврат;
	КонецЕсли;
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Если Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику Тогда
		Ответ = Вопрос("Заказ БЫЛ РАНЕЕ выгружен. Выгрузить еще раз?",Режим,0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда 
			Возврат;
		КонецЕсли;
	Иначе		
		Ответ = Вопрос("Вы действительно хотите выгрузить документ?",Режим,0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//Если НЕ Склад.РаботаЧерезКонвертер Тогда
	//	Нашли = Справочники.КодыАптек.НайтиПоРеквизиту("Аптека",Склад,,Поставщик);
	//	Если Нашли = Справочники.КодыАптек.ПустаяСсылка() Тогда
	//		Предупреждение("На эту аптеку нет кода поставщика! Документ не выгружен!");
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	
	Если ВыгрузитьПоставщику() = Ложь Тогда
		Предупреждение("Документ НЕ выгрузился!");
	Иначе
		ОМ21_ЗаказыПоставщикам.ОМ21_УменьшитьКоличестваВПрайсе(ЭтотОбъект);
		Предупреждение("Документ выгружен!");
	КонецЕсли;
		
КонецПроцедуры


Процедура ОбновитьПоставщиков(Условие)
	
	СписокПоставщиков.Очистить();
	
	Если Условие = "ОсуществляютПрямуюПоставку" Тогда
		 УсловиеЗ = " И Поставщики.ОсуществляетПрямыеПоставки = Истина";
	Иначе
		УсловиеЗ = "";
	КонецЕсли;
	
	
	ТХТ = "ВЫБРАТЬ
	      |	Поставщики.Код,
	      |	Поставщики.Наименование
	      |ИЗ
	      |	Справочник.Поставщики КАК Поставщики
	      |ГДЕ
	      |	ИСТИНА = ИСТИНА
	      |	" + УсловиеЗ + "";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Рез = Запрос.Выполнить().Выгрузить();
	
	Для каждого стр Из Рез Цикл
	
		СписокПоставщиков.Добавить(стр.Код,стр.Наименование,Истина);
	
	КонецЦикла; 
	
	
КонецПроцедуры


Функция ТекущаяСтрокаДокумента  () 
    // Назначение:
	// Дает объект - тек строку документа
	// 
    // 
	//--------------------------------------------------------------------------------
	ТекСтрокаТЧ="";
	ИндексТекСтроки=Товар.Индекс(ЭлементыФормы.Товар.ТекущаяСтрока);
    ТекСтрокаТЧ=ТОвар.Получить( ИндексТекСтроки); // Рез. тип объекта - СтрокаТабличнойЧасти

	Возврат ТекСтрокаТЧ;
	
КонецФункции

Процедура КоманднаяПанель2ПодборПоАП(Кнопка)
	
	Если Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику Тогда
		Предупреждение("Нельзя осуществлять подбор в выгруженном документе!",5);
		Возврат;
	КонецЕсли;
	
	Если Поставщик = Справочники.Поставщики.ПустаяСсылка() Тогда
		Предупреждение("Выберите поставщика!");
		Возврат;
	КонецЕсли;
	
	Если Склад = Справочники.МестаХранения.ПустаяСсылка() Тогда
		Предупреждение("Выберите аптеку или склад!");
		Возврат;
	КонецЕсли;
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= Обработки.ПодобратьТоварПоставщика.ПолучитьФорму("Форма","",КлючУник);
	ФормаПодбора.Аптека = Склад;
	ФормаПодбора.ОтборПоставщик = Поставщик;
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.РаботаЧерезКонвертер = Склад.РаботаЧерезКонвертер;
	ФормаПодбора.КодФирмы366 = Склад.Фирма.Код366;	
	ФормаПодбора.ОткрытьМодально(0);
	
	
	
	//КлючУник=  Новый   УникальныйИдентификатор();
	//ФормаПодбора= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПолучитьФорму("ФормаДляПодбора","",КлючУник);
	//ФормаПодбора.МножественныйВыбор= ИСТИНА;
	//ФормаПодбора.ВладелецФормы=ЭтаФорма;
	//ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	//ФормаПодбора.ОткрытьМодально(0);
	
	
	

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	// Назначение:
	// Обрабатывает событие окончания подбора из формы подбора АП
	// На вход получает ТЗ товара
	// Циклически запускает обработку добавления и расчета строки документа
	//============================================================================ GtG ===
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда
		Для Ы=0 По ЗначениеВыбора.Количество()-1 Цикл
			
			Стр= ЗначениеВыбора.Получить(Ы) ;

			НоваяСтрока = Товар.Добавить();
			НоваяСтрока.Товар = Стр.ТоварСсылка;
			НоваяСтрока.Количество = Стр.Количество;
			НоваяСтрока.КодТовараПоставщика = Стр.Код;
			НоваяСтрока.НаименованиеТовараПоставщика = Стр.Наименование;
			НоваяСтрока.Цена = Стр.Цена;
			НоваяСтрока.Сумма = Стр.Сумма;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	СписокТиповПоставщика = "ОсуществляютПрямуюПоставку";
	
	ОбновитьПоставщиков(СписокТиповПоставщика);

	
	ЭтаФорма.Панель.Страницы.Остатки.Видимость = Ложь;
	
	Если (ЭтотОбъект.Проведен = Истина) 
	И (Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику)
	И (НачалоДня(Дата) < НачалоДня(ТекущаяДата())) Тогда
		Предупреждение("Заказ выгружен поставщику! Не редактируется.",5);
		ЭлементыФормы.Товар.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Отбор = РегистрОтказы.Отбор.Найти("Документ");
	Если Отбор <> Неопределено Тогда
		Отбор.ВидСравнения = ВидСравнения.Равно;
		Отбор.Значение = ЭтотОбъект.Ссылка;
		Отбор.Использование = Истина;
	КонецЕсли;
	
	ЭлементыФормы.ТекстОснование.Заголовок = ДокОснование;
	
	//Если ТипЗаказа = Перечисления.ТипЗаявки.АвтозаказSAS Тогда
	//	ЭлементыФормы.Товар.ТолькоПросмотр = Истина;	
	//	ЭлементыФормы.КоманднаяПанель1.Кнопки.ПодборПоАП.Доступность = Ложь;
	//КонецЕсли;
	
	
КонецПроцедуры

Процедура ЗаполнитьШапкуДокументаЗаказа(Док,Поставщик,Склад)
	
	Док.Поставщик=Поставщик;
	Док.Склад = Склад;
	Док.Статус=Перечисления.СтатусЗаказаПоставщику.Создан;
	Док.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
	Док.Дата=ТекущаяДата();
	
	СтрИзм=Док.Изменения.Добавить();
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.КомментарийИзменения="Создан документ при распределении из " + ЭтотОбъект;
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
КонецПроцедуры
Процедура ЗаполнитьШапкуДокумента(Док,КодПоставщика,Склад)
	
	СпрПоставщики = Справочники.Поставщики;
	ПоставщикСсылка = СпрПоставщики.НайтиПоКоду(КодПоставщика);
	Если ПоставщикСсылка = СпрПоставщики.ПустаяСсылка() Тогда
		Сообщить("По коду " + КодПоставщика + " не найден поставщик в справочнике!");	
	КонецЕсли;
	Док.Поставщик=ПоставщикСсылка;
	Док.Склад = Склад;
	Док.Статус=Перечисления.СтатусЗаказаПоставщику.Создан;
	Док.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
	Док.Дата=ТекущаяДата();
		
	СтрИзм=Док.Изменения.Добавить();
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.КомментарийИзменения="Создан документ при распределении из " + ЭтотОбъект;
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
КонецПроцедуры	

Процедура СоздатьДокументыЗаказа()
	
	
	ЭлементыФормы.Лог.ДобавитьСтроку("Созданы следующие документы:");
 	ТХТ="select PostID, GoodID8,Qnt,Price,GoodPost,GoodNamePost,NumDoc from zakaz where users = " + Формат(ПараметрыСеанса.ТекущийСотр.Код,"ЧГ=0") + " order by PostID";
	РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);

	ВремКодПоставщика = 0;
	Док=Документы.Заказ.СоздатьДокумент();
  	Попытка 
		РС. MoveFirst();
	Исключение
		ПРедупреждение("Проц.: СоздатьДокументыЗаказа. Нет данных в таблице zakaz");
		Возврат;
	КонецПопытки;
	
	Пока РС.EOF()=0 Цикл
		
		КодПоставщика=РС.Fields(0).VAlue;
		КодТовара = РС.Fields(1).VAlue;
		Количество = РС.Fields(2).VAlue;
		Цена = РС.Fields(3).VAlue;
		КодТовараПоставщика = РС.Fields(4).VAlue;
		ТоварПоставщика = РС.Fields(5).VAlue;
		НомДок = РС.Fields(6).VAlue;
		
		Если ВремКодПоставщика <> КодПоставщика Тогда
			Если ВремКодПоставщика <> 0 Тогда
				Записан = Ложь;
				Пока Записан = Ложь Цикл
					Попытка
						Док.Записать(РежимЗАписиДокумента.Запись);
						ЭлементыФормы.Лог.ДобавитьСтроку("- " + Док);
						Записан = Истина;
					Исключение
						Сообщить(ОписаниеОшибки());
						Сообщить("не могу записать документ по поставщику: " + ВремКодПоставщика );
						Предупреждение("Ожидание блокировки...",2);
						Записан = Ложь;
					КонецПопытки; 
				КонецЦикла;				
				//СообщитьЛог("Создан: "+ Док.Метаданные().Представление()+" №"+Док.Номер+" от "+Док.Дата+"");
				Док=Документы.Заказ.СоздатьДокумент();
			КонецЕсли;
			ЗаполнитьШапкуДокумента(Док,КодПоставщика,Склад);
			ВремКодПоставщика = КодПоставщика;
		КонецЕсли;
		
		
		СпрТовар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
		ТоварСсылка = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		//------------------<Проверим , есть ли товар по полученному коду в справочнике>-------------------Virus----28.12.2007
		Если ТоварСсылка = СпрТовар.ПустаяСсылка() Тогда
			Сообщить("Товар по коду = " + КодТовара + " не найден в справочнике АП!");
			РС. MoveNext();
			Продолжить;
		КонецЕсли; //--------------------------------------------------------Virus----КОНЕЦ--28.12.2007
		
		//------- Заполняем табл. часть документа		
		Стр = Док.Товар.Добавить();
		Стр.Товар=ТоварСсылка;
		Стр.Количество=Количество;
		Стр.Цена = Цена;
		Стр.Сумма = Цена*Количество;
		Стр.КодТовараПоставщика = КодТовараПоставщика;
		Стр.НаименованиеТовараПоставщика = ТоварПоставщика;
		Стр.НомерЗаявкиАптеки = НомДок;
		РС. MoveNext(); 
	КонецЦикла;
	
	Записан = Ложь;
	Пока Записан = Ложь Цикл
		Попытка
			Док.Записать(РежимЗАписиДокумента.Запись);	
			Записан = Истина;
			ЭлементыФормы.Лог.ДобавитьСтроку("- " + Док);
		Исключение
			Сообщить(ОписаниеОшибки());
			Сообщить("не могу записать документ по поставщику: " + КодПоставщика );			
			Предупреждение("Ожидание блокировки...",2);			
			Записан = Ложь;
		КонецПопытки; 
	КонецЦикла;				

КонецПроцедуры  //СоздатьДокументыЗаказа()

//------------------<Создание документа с нераспределенным товаром>-------------------Virus----28.12.2007
Процедура СоздатьДокументНераспределенногоЗаказа()
	
	ТЗОтказов.Очистить();
	ТХТ="select distinct * from z1 where users = " + ПараметрыСеанса.ТекущийСотр.Код + "";
	РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);
  	Попытка 
		РС. MoveFirst();
	Исключение
		//ПРедупреждение("Отказов нет.");
		//Отказы.Очистить();
		//ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
		//ЭтотОбъект.УстановитьПометкуУдаления(Истина);
		Возврат;
	КонецПопытки; 
	
	Отказы.Очистить();
	СпрТовар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
	
	Пока РС.EOF()=0 Цикл
		
		КодТовара = РС.Fields(0).VAlue;
		Количество = РС.Fields(1).VAlue;
		НомДок = РС.Fields(3).VAlue;
		
		ТоварСсылка = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		//------------------<Проверим , есть ли товар по полученному коду в справочнике>-------------------Virus----28.12.2007
		Если ТоварСсылка = СпрТовар.ПустаяСсылка() Тогда
			//Сообщить("Товар по коду = " + КодТовара + " не найден в справочнике АП!");
			РС. MoveNext(); 
			Продолжить;
		КонецЕсли; //--------------------------------------------------------Virus----КОНЕЦ--28.12.2007
		
		//------- Заполняем табл. часть документа		
		Стр = ТЗОтказов.Добавить();
		Стр.Товар=ТоварСсылка;
		Стр.Количество=Количество;
		Стр.НомерЗаявкиАптеки = НомДок;

		РС. MoveNext(); 
	КонецЦикла;	
   	Записан = Ложь;
	КоличествоРаз = 0;
	Пока Записан = Ложь Цикл
		КоличествоРаз = КоличествоРаз + 1;
		Если КоличествоРаз = 5 Тогда
			Прервать;
		КонецЕсли;
		Попытка
			ЭтотОбъект.Записать(РежимЗАписиДокумента.Запись);
			Записан = Истина;
			ЗаписатьОтказыВРегистр(ТЗОтказов);
		Исключение
			Сообщить(ОписаниеОшибки());
			Сообщить("не могу записать отказы в регистр");			
			Предупреждение("Ожидание блокировки...",2);	
			Записан = Ложь;
		КонецПопытки; 
	КонецЦикла;
	
	
КонецПроцедуры //СоздатьДокументНераспределенногоЗаказа()


Процедура СоздатьДокументыЗаказа_новая_версия(ТЗЗаказа)
	
	Если ТЗЗаказа.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗЗаказа.Сортировать("Поставщик");
	
	Док=Документы.Заказ.СоздатьДокумент();
	ВремПоставщик = Справочники.Поставщики.ПустаяСсылка(); 
	Для каждого стр из ТЗЗаказа Цикл
		ПоставщикСсылка=стр.Поставщик;
		КодТовара = стр.КодТовара;
		ТоварСсылка = стр.Товар;
		Количество = стр.Количество;
		Цена = стр.Цена;
		Сумма = стр.Сумма;
		КодТовараПоставщика = стр.КодТовараПоставщика;
		ТоварПоставщика = стр.НаименованиеТовараПоставщика;
		СрокГодности = стр.СрокГодности;
		
		Если (ВремПоставщик <> ПоставщикСсылка)  Тогда
			Если НЕ ВремПоставщик.Пустая() Тогда
				Записан = Ложь;
				Для н=0 по 3 Цикл
					Попытка
						Док.СуммаДок = Док.Товар.Итог("Сумма");
						Док.Записать(РежимЗАписиДокумента.Запись);
						ЭлементыФормы.Лог.ДобавитьСтроку("- " + Док);
						Записан = Истина;
						Прервать;
					Исключение
						ОбщегоНазначения.Задержка(2);
						Записан = Ложь;
					КонецПопытки; 
				КонецЦикла;				
				//СообщитьЛог("Создан: "+ Док.Метаданные().Представление()+" №"+Док.Номер+" от "+Док.Дата+"");
				Док=Документы.Заказ.СоздатьДокумент();
			КонецЕсли;
			ЗаполнитьШапкуДокументаЗаказа(Док,ПоставщикСсылка,Склад);
			ВремПоставщик = ПоставщикСсылка;
		КонецЕсли;
		
			//------- Заполняем табл. часть документа		
			Стр = Док.Товар.Добавить();
			Стр.Товар=ТоварСсылка;
			Стр.Количество=Количество;
			Стр.Цена = Цена;
			Стр.Сумма = Сумма;
			Стр.КодТовараПоставщика = КодТовараПоставщика;
			Стр.НаименованиеТовараПоставщика = ТоварПоставщика;
			Стр.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
			Стр.СрокГодности = СрокГодности;

	КонецЦикла;
	
	Записан = Ложь;
	Для н=0 по 3 Цикл
		Попытка
			Док.СуммаДок = Док.Товар.Итог("Сумма");
			Док.Записать(РежимЗАписиДокумента.Запись);	
			Записан = Истина;
			ЭлементыФормы.Лог.ДобавитьСтроку("- " + Док);
			Прервать;
		Исключение
			ОбщегоНазначения.Задержка(2);
			Записан = Ложь;
		КонецПопытки; 
	КонецЦикла;				

КонецПроцедуры

//------------------<Создание документа с нераспределенным товаром>-------------------Virus----28.12.2007
Процедура ЗаписатьОтказыИЗаявку_новая_версия(ТЗОтказов)
	
	
   	Записан = Ложь;
	Для н=0 По 3 Цикл
		Попытка
			Комментарий = "";
			ЭтотОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Записан = Истина;
			Прервать;
		Исключение
			ОбщегоНазначения.Задержка(2);
		КонецПопытки; 
	КонецЦикла;
	
	Если Записан = Истина Тогда
		Если ТЗОтказов.Количество() > 0 Тогда
			ТЗОтказов.Свернуть("Дата,Документ,Поставщик,Склад,Товар,Цена,Сумма,КодТовараПоставщика,НаименованиеТОвараПоставщика,НомерЗаявкиАптеки,ПричинаОтказа,Комментарий","Количество");				
		КонецЕсли;
		ЗаписатьОтказыВРегистр(ТЗОтказов);
	КонецЕсли;
	
	
	
КонецПроцедуры //СоздатьДокументНераспределенногоЗаказа()

Процедура РаспределитьЗаказНажатие_старая(Элемент)
	
	Если Поставщик.Пустая() = Ложь Тогда
		Предупреждение("Нельзя распределить уже распределенный документ");
		Возврат;
	КонецЕсли;
	
	ПодключитьБазу1C8(Адо);

	//------------------<Сформируем список кодов поставщиков>-------------------Virus----22.01.2008
	Условие = "";
	Для н = 0 по СписокПоставщиков.Количество()-1 Цикл
		Если СписокПоставщиков[н].Пометка = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		Условие = Условие + "," + СписокПоставщиков[н].Значение;	
		
	КонецЦикла; 
	
	Условие = Сред(Условие,2);
	
	//Возврат;
		//------------------<Для начала удаляем из таблицы zakaz предыдущий заказ>-------------------Virus----27.12.2007
	ТХТ="delete from zakaz where users = " + Формат(ПараметрыСеанса.ТекущийСотр.Код,"ЧГ=0") + "";
	РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);
	
	ТХТ="delete from z1 where users = " + Формат(ПараметрыСеанса.ТекущийСотр.Код,"ЧГ=0") + "";
	РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);


	//------------------<Далее в цикле передаем в процедуру sp_zakaz код товара и количество 
	//------------------< которое надо нам заказть >-------------------Virus----27.12.2007
	//СообщитьЛог("Распределение позиций заказа по поставщикам...");
	
	Для каждого текСтр Из Товар Цикл
	
		ТХТ="sp_zakaz '" + Формат(текСтр.Товар.Код,"ЧГ=0") + "' ," + Формат(текСтр.Количество,"ЧГ=0") + ", '" + Условие + "' , '" + Формат(ПараметрыСеанса.ТекущийСотр.Код,"ЧГ=0") + "' , '" + Формат(текСтр.НомерЗаявкиАптеки,"ЧГ=0") + "'";
		РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);
	
	КонецЦикла; 
	
	//------------------<Проверим, есть ли в результирующей таблице данные для заказа>-------------------Virus----28.12.2007
	ТХТ="select count(*) from zakaz  where users = " + Формат(ПараметрыСеанса.ТекущийСотр.Код,"ЧГ=0") + "";
	РС=ОМ8_ВыполнитьSQLЗапросКВнешнейБД(АДО,ТХТ,0,1,0);
  	Попытка 
		РС. MoveFirst();
	Исключение
		ПРедупреждение("Данных в таблице заказа нет.");
		Возврат;
	КонецПопытки; 
	//--------------------------------------------------------Virus----КОНЕЦ--28.12.2007
	КолСтрок = Рс.Fields(0).Value;
	//ЭлементыФормы.Индикатор1.Видимость=Истина;
	//ЭлементыФормы.Индикатор1.Значение=0;
	//ЭлементыФормы.Индикатор1.МаксимальноеЗначение=КолСтрок;
	
	//------------------<А теперь создаем документы заказа по количеству, равным количеству поставщиков , по кот. распределился общий заказ>-------------------Virus----28.12.2007
	СоздатьДокументыЗаказа();
	//--------------------------------------------------------Virus----КОНЕЦ--28.12.2007
	
	СоздатьДокументНераспределенногоЗаказа();

КонецПроцедуры

Процедура РаспределитьЗаказНажатие_Новая(Элемент)
	
	Если ПометкаУдаления = Истина Тогда
		Предупреждение("Документ помечен на удаление. Распределение невозможно.");
		Возврат;
	КонецЕсли;	
	
	РаспределяемыйСписокПоставщиков = Новый СписокЗначений;
	Для н = 0 по СписокПоставщиков.Количество()-1 Цикл
		Если СписокПоставщиков[н].Пометка = Ложь Тогда
			Продолжить;
		КонецЕсли;
		РаспределяемыйСписокПоставщиков.Добавить(СписокПоставщиков[н].Значение);
	КонецЦикла;
	ТЗЗаказа = "";
	ОМ21_ЗаказыПоставщикам.ОМ21_РаспределитьДокументПоПоставщикам(ЭтотОбъект,ТЗЗаказа,ТЗОтказов,РаспределяемыйСписокПоставщиков,Истина);
	СоздатьДокументыЗаказа_новая_версия(ТЗЗаказа);
	ЗаписатьОтказыИЗаявку_новая_версия(ТЗОтказов);
	
КонецПроцедуры

Процедура КоманднаяПанель2Действие(Кнопка)
	СписокПоставщиков.ЗаполнитьПометки(Истина);
КонецПроцедуры

Процедура КоманднаяПанель2Действие1(Кнопка)
	СписокПоставщиков.ЗаполнитьПометки(Ложь);
КонецПроцедуры


Процедура ОсновныеДействияФормыВыгрузить1(Кнопка)
	Если Склад.ТипСклада = Перечисления.ТипыМХ.Розн Тогда
		ВыгрузитьИнформациюВАптеку();
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыСоздатьЗаявкуСоСклада(Кнопка)
	
	Если Найти(Комментарий,"Из этого документа создано перемещение") > 0 Тогда
		Предупреждение("Из этого документа уже БЫЛО создано перемещение");
		Возврат;
	КонецЕсли;
	Если Товар.Количество() = 0 Тогда
		Предупреждение("Данных нет, документ не будет создан!");
		Возврат;
	КонецЕсли;
	//Если Поставщик <> Справочники.Поставщики.ПустаяСсылка() Тогда
	//	Предупреждение("Этот товар уже распределен. Документ нельзя создать.");	
	//	Возврат;
	//КонецЕсли;
	
	МассивТовара = Товар.ВыгрузитьКолонку("Товар");
	
	ТХТ = "ВЫБРАТЬ
	      |	ПартииЖНВЛСОстатки.Товар КАК Товар,
	      |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	      |		&ТекДата,
	      |		Товар В (&МассивТовара)
	      |		    И Склад = &Склад) КАК ПартииЖНВЛСОстатки
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	Товар.Наименование";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("МассивТовара",МассивТовара);
	Запрос.УстановитьПараметр("Склад",Константы.ОсновнойСклад.Получить());
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 Тогда
		Предупреждение("Нет остатка по данным товарам");
		Возврат;
	КонецЕсли;	
	
	Если Склад.ТипСклада = Перечисления.ТипыМХ.Розн Тогда
		
		
		Док=Документы.ПеремещениеТовара.СоздатьДокумент();

		Док.Склад=Константы.ОсновнойСклад.Получить();
		Док.СкладПолучатель=Склад;
		Док.Фирма=Константы.ОсновнаяФирма.Получить();
		Док.Статус=Перечисления.СтатусПеремещения.ЗагруженСоздан;
		Док.Создан=ТекущаяДата();
		Док.Дата=ТекущаяДата();
		Док.Комментарий="#АВТО#Создан из заказа поставщику № "+Номер;
		Док.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
		Док.ВидОперации = Перечисления.ВидыОпераций.ПеремещениеТМЦ;
		
		
		СтрИзм=Док.Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения=Док.Комментарий;
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
		
		Для каждого Стр Из Товар Цикл
			
			Нашли = Рез.Найти(Стр.Товар,"Товар");
			Если Нашли = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
		
			ТекСтр=Док.Товар.Добавить();
			ТекСтр.Товар=Стр.Товар;
			ТекСтр.Количество=Стр.Количество;
			ТекСтр.КоличествоФакт=Стр.Количество;
			ТекСтр.ЕИТ=Стр.Товар.ЕдиницаОтгрузки;
			ТекСтр.Коэфф=ТекСтр.ЕИТ.К;			
		
		КонецЦикла; 
		
		Если Док.Товар.Количество() = 0 Тогда
			Предупреждение("На осатках склада нет таких позиций!");
			Возврат;
		КонецЕсли;		
		
		Записан=0;
		Пока Записан = 0 Цикл
			Попытка
				Док.Записать(РежимЗаписиДокумента.Запись);
				Предупреждение("Создали документ перемещения (заявку).");
				Записан = 1;
			Исключение
				
				Записан=0;
			КонецПопытки;
		КонецЦикла;
		Если Записан = 1 Тогда
			// запишем, что сделал пользователь
			СтрИзм=Изменения.Добавить();
			СтрИзм.Дата=ТекущаяДата();
			СтрИзм.КомментарийИзменения="Создали на склад № " + Док.Номер+" из товара";
			СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
			СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ИзмТабЧасть;			
			Комментарий ="Из этого документа создано перемещение со склада № " + Док.Номер ;
			ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;			
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыОстатки(Кнопка)
	
	Если Товар.Количество() = 0 Тогда
		Предупреждение("Нет строк - нет и остатков!");
		Возврат;
	КонецЕсли;
	
	
	МассивТовара = Товар.ВыгрузитьКолонку("Товар");
	
	ТХТ = "ВЫБРАТЬ
	      |	ПартииЖНВЛСОстатки.Товар.Наименование КАК Товар,
	      |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	      |		&ТекДата,
	      |		Товар В (&МассивТовара)
	      |		    И Склад = &Склад) КАК ПартииЖНВЛСОстатки
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	Товар.Наименование";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("МассивТовара",МассивТовара);
	Запрос.УстановитьПараметр("Склад",Константы.ОсновнойСклад.Получить());
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 Тогда
		Предупреждение("Нет остатка по данным товарам");
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Панель.Страницы.Остатки.Видимость = Истина;
	ЭлементыФормы.ОстаткиТовара.Значение = Рез;
	ЭлементыФормы.ОстаткиТовара.СоздатьКолонки();
	ЭлементыФормы.ОстаткиТовара.Колонки["Товар"].Ширина = 100;	
	ЭлементыФормы.ОстаткиТовара.Колонки["Остаток"].Ширина = 10;
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ОстаткиТовара;
	
	
КонецПроцедуры

Процедура СписокТиповПоставщикаПриИзменении(Элемент)
	ОбновитьПоставщиков(Элемент.Значение);
КонецПроцедуры

Процедура ОсновныеДействияФормыСравнитьЦены(Кнопка)
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Товар");
	ТЗ.Колонки.Добавить("Цена");
	ТЗ.Колонки.Добавить("СредняяЦена");
	ТЗ.Колонки.Добавить("Процент");
	ТЗ.Колонки.Добавить("ПроцентСравнения");
	Запрос = Новый Запрос;
	НачалоПериода = НачалоДня(ТекущаяДата()) - 60*60*24*5 ;
	КонецПериода =  КонецДня(ТекущаяДата()) - 60*60*24 ;
	
	
	ТХТ = "ВЫБРАТЬ
	      |	СРЕДНЕЕ(ПоступлениеТовараТовар.ЦенаЗакуп) КАК ЦенаЗакуп
	      |ИЗ
	      |	Документ.ПоступлениеТовара.Товар КАК ПоступлениеТовараТовар
	      |ГДЕ
	      |	ПоступлениеТовараТовар.Товар = &Товар
	      |	И ПоступлениеТовараТовар.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	      |	И ПоступлениеТовараТовар.Ссылка.Проведен = ИСТИНА
	      |	";	
	
	Запрос.Текст = ТХТ;	
	
	Для каждого стр из Товар Цикл
		
		Запрос.УстановитьПараметр("Товар",стр.Товар);
		Запрос.УстановитьПараметр("НачДата",НачалоПериода);
		Запрос.УстановитьПараметр("КонДата",КонецПериода);
		
		Рез = Запрос.Выполнить().Выгрузить();
		
		СредняяЦена = Рез.Получить(0).ЦенаЗакуп;
		Если (СредняяЦена = NULL) или (СредняяЦена = 0) Тогда
			Продолжить;
		КонецЕсли;
		СредняяЦена = Окр(СредняяЦена,2);
		
		Процент = Окр(((Стр.Цена/СредняяЦена)-1)*100,2);
		
		ПроцентСравнения = 0;
		Если (Стр.Цена < 100) и (Процент >= 10) Тогда
			ПроцентСравнения = 10;
		ИначеЕсли ((Стр.Цена >= 100) и (Стр.Цена < 300)) и (Процент >= 8) Тогда
			ПроцентСравнения = 8;
		ИначеЕсли (Стр.Цена >= 300) и (Процент >= 5) Тогда
			ПроцентСравнения = 5;
		КонецЕсли;
		
		Если ПроцентСравнения > 0 Тогда
			стрТЗ = ТЗ.Добавить();
			стрТЗ.Товар = стр.Товар;
			стрТЗ.Цена = стр.Цена;
			стрТЗ.СредняяЦена = СредняяЦена;
			стрТЗ.Процент = Процент;
			стрТЗ.ПроцентСравнения = ПроцентСравнения;
		КонецЕсли;
		
		
	КонецЦикла;
	
	Если ТЗ.Количество() > 0 Тогда 
		Таб = Новый ТабличныйДокумент;
		Мак = ПолучитьМакет("Макет");
		текОбласть = Мак.ПолучитьОбласть("Шапка");
		Таб.Вывести(текОбласть);
		текОбласть = Мак.ПолучитьОбласть("ШапкаТаблицы");
		Таб.Вывести(текОбласть);		
		Для каждого стр из ТЗ Цикл
			текОбласть = Мак.ПолучитьОбласть("Строка");
			текОбласть.Параметры.Код = стр.Товар.Код;
			текОбласть.Параметры.Товар = стр.Товар;
			текОбласть.Параметры.Цена = стр.Цена;
			текОбласть.Параметры.СредняяЦена = стр.СредняяЦена;
			текОбласть.Параметры.Процент = стр.Процент;
			текОбласть.Параметры.ПроцентСравнения = стр.ПроцентСравнения;
			Таб.Вывести(текОбласть);	
		КонецЦикла;
		Таб.АвтоМасштаб = Истина;
		Таб.Показать();
	Иначе
		Предупреждение("Превышений по документу нет");
	КонецЕсли;
	
КонецПроцедуры


 Процедура ГрохнутьИсходныеСтроки  (МассивИсхСтрок,Набор) 
	 
	 // Удаляет строки тч товар по списку-массиву ссылок на строки
	 
	 Если МассивИсхСтрок.Количество()=0 тогда
		 Возврат;
	 КонецЕсли; 
	 
	 Для Ы=0 по МассивИсхСтрок.Количество()-1 Цикл
		 Набор.Удалить(МассивИсхСтрок.Получить(Ы));
	 КонецЦикла; 
	 Набор.Записать();
 КонецПроцедуры


Процедура КоманднаяПанель3Остатки(Кнопка)
	
	Набор = РегистрыСведений.Отказы.СоздатьНаборЗаписей();
	Набор.Отбор.Документ.Установить(Ссылка);
	Набор.Прочитать();
	МассивТовара = Набор.ВыгрузитьКолонку("Товар");
	Если МассивТовара.Количество() = 0 Тогда
		Предупреждение("Нет строк - нет и остатков!");
		Возврат;
	КонецЕсли;	
	
	ТХТ = "ВЫБРАТЬ
		  |	ПартииЖНВЛСОстатки.Товар.Наименование КАК Товар,
		  |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток
		  |ИЗ
		  |	РегистрНакопления.ПартииЖНВЛС.Остатки(
		  |		&ТекДата,
		  |		Товар В (&МассивТовара)
		  |		    И Склад = &Склад) КАК ПартииЖНВЛСОстатки
		  |
		  |УПОРЯДОЧИТЬ ПО
		  |	Товар.Наименование";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("МассивТовара",МассивТовара);
	Запрос.УстановитьПараметр("Склад",Константы.ОсновнойСклад.Получить());
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 Тогда
		Предупреждение("Нет остатка по данным товарам");
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Панель.Страницы.Остатки.Видимость = Истина;
	ЭлементыФормы.ОстаткиТовара.Значение = Рез;
	ЭлементыФормы.ОстаткиТовара.СоздатьКолонки();
	ЭлементыФормы.ОстаткиТовара.Колонки["Товар"].Ширина = 100;	
	ЭлементыФормы.ОстаткиТовара.Колонки["Остаток"].Ширина = 10;
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ОстаткиТовара;

КонецПроцедуры

Процедура КоманднаяПанель3СоздатьЗаявкуСоСклада(Кнопка)
	
	Если Найти(Комментарий,"Из этого документа создано перемещение") > 0 Тогда
		Предупреждение("Из этого документа уже БЫЛО создано перемещение");
		Возврат;
	КонецЕсли;
	
	Набор = РегистрыСведений.Отказы.СоздатьНаборЗаписей();
	Набор.Отбор.Документ.Установить(Ссылка);
	Набор.Прочитать();

	МассивТовара = Набор.ВыгрузитьКолонку("Товар");
	Если МассивТовара.Количество() = 0 Тогда
		Предупреждение("Нет строк - нет и остатков!");
		Возврат;
	КонецЕсли;
	
	СтрокиДляУдаления= Новый  Массив;
	
	
	ТХТ = "ВЫБРАТЬ
	      |	ПартииЖНВЛСОстатки.Товар КАК Товар,
	      |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	      |		&ТекДата,
	      |		Товар В (&МассивТовара)
	      |		    И Склад = &Склад) КАК ПартииЖНВЛСОстатки
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	Товар.Наименование";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("МассивТовара",МассивТовара);
	Запрос.УстановитьПараметр("Склад",Константы.ОсновнойСклад.Получить());
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 Тогда
		Предупреждение("Нет остатка по данным товарам");
		Возврат;
	КонецЕсли;
	
	
	Если Склад.ТипСклада = Перечисления.ТипыМХ.Розн Тогда
		
		
		Док=Документы.ПеремещениеТовара.СоздатьДокумент();

		Док.Склад=Константы.ОсновнойСклад.Получить();
		Док.СкладПолучатель=Склад;
		Док.Фирма=Константы.ОсновнаяФирма.Получить();
		Док.Статус=Перечисления.СтатусПеремещения.ЗагруженСоздан;
		Док.Создан=ТекущаяДата();
		Док.Дата=ТекущаяДата();
		Док.Комментарий="#АВТО#Создан из ОТКАЗОВ заказа поставщику № "+Номер;
		Док.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
		Док.ВидОперации = Перечисления.ВидыОпераций.ПеремещениеТМЦ;
		
		
		СтрИзм=Док.Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения=Док.Комментарий;
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
		
		Для каждого Стр Из Набор Цикл
			
			Нашли = Рез.Найти(Стр.Товар,"Товар");
			Если Нашли = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ТекСтр=Док.Товар.Добавить();
			ТекСтр.Товар=Стр.Товар;
			ТекСтр.Количество=Стр.Количество;
			ТекСтр.КоличествоФакт=Стр.Количество;
			ТекСтр.ЕИТ=Стр.Товар.ЕдиницаОтгрузки;
			ТекСтр.Коэфф=ТекСтр.ЕИТ.К;			
			СтрокиДляУдаления.Добавить(Стр);
			
		КонецЦикла; 
		
		Если Док.Товар.Количество() = 0 Тогда
			Предупреждение("На осатках склада нет таких позиций!");
			Возврат;
		КонецЕсли;
		
		Записан=0;
		Пока Записан = 0 Цикл
			Попытка
				Док.Записать(РежимЗаписиДокумента.Запись);
				Предупреждение("Создали документ перемещения (заявку).");
				Записан = 1;
			Исключение
				
				Записан=0;
			КонецПопытки;
		КонецЦикла;
		Если Записан = 1 Тогда                      
			ГрохнутьИсходныеСтроки(СтрокиДляУдаления,Набор);
			
			// запишем, что сделал пользователь
			СтрИзм=Изменения.Добавить();
			СтрИзм.Дата=ТекущаяДата();
			СтрИзм.КомментарийИзменения="Создали на склад № " + Док.Номер+" из отказов";
			СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
			СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ИзмТабЧасть;
			
			Комментарий ="Из этого документа создано перемещение со склада № " + Док.Номер ;
			ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;			
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанель3ПеренестиВЗаказ(Кнопка)
	
	Если Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику Тогда
		Предупреждение("Нельзя переносить! Документ уже был выгружен!");
		Возврат;
	КонецЕсли;
	
	ТекСтрока =  ЭлементыФормы.РегистрОтказы.ТекущиеДанные;	
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Стр = Товар.Добавить();
	Стр.Товар = ТекСтрока.Товар;
	Стр.Количество = ТекСтрока.Количество;
	Стр.Цена = ТекСтрока.Цена;
	Стр.Сумма = ТекСтрока.Цена*ТекСтрока.Количество;
	Стр.КодТовараПоставщика = ТекСтрока.КодТовараПоставщика;
	Стр.НаименованиеТовараПоставщика = ТекСтрока.НаименованиеТовараПоставщика;
	Стр.НомерЗаявкиАптеки = ТекСтрока.НомерЗаявкиАптеки;
	
	Если Проведен = Истина Тогда
		Записать(РежимЗаписиДокумента.Проведение);
	Иначе 
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	НаборЗаписей = РегистрыСведений.ОтказыПоЗаказам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Ссылка); 
	НаборЗаписей.Отбор.Товар.Установить(ТекСтрока.Товар); 
	НаборЗаписей.Отбор.ПричинаОтказа.Установить(ТекСтрока.ПричинаОтказа);
	Для н=0 По 3 Цикл
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Попытка
			
			ТекБлокировка = Новый БлокировкаДанных;
			БлокировкаРегистра = ТекБлокировка.Добавить("РегистрСведений.ОтказыПоЗаказам");
			БлокировкаРегистра.УстановитьЗначение("Документ",Ссылка);
			БлокировкаРегистра.Режим = РежимБлокировкиДанных.Исключительный;
			ТекБлокировка.Заблокировать();
	
			НаборЗаписей.Записать();
			ЗафиксироватьТранзакцию();
			Прервать;
		Исключение
			ОтменитьТранзакцию();
			ОбщегоНазначения.Задержка(2);
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	Предупреждение("Строка отказа перенесена в заказ!");
	
	
КонецПроцедуры

Процедура КоманднаяПанель4Удалить(Кнопка)
	НаборЗаписей = РегистрыСведений.Отказы.СоздатьНаборЗаписей(); 
	
	НаборЗаписей.Отбор.Документ.Установить(Ссылка); 
	НаборЗаписей.Отбор.Товар.Установить(ЭлементыФормы.РегистрОтказы.ТекущаяСтрока.Товар); 
	НаборЗаписей.Отбор.ПричинаОтказа.Установить(ЭлементыФормы.РегистрОтказы.ТекущаяСтрока.ПричинаОтказа);
	НаборЗаписей.Записать();
КонецПроцедуры

Процедура ТекстОснованиеНажатие(Элемент)
	
	ДокОснование.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ПоставщикОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если (Элемент.Значение <> ВыбранноеЗначение) 
		И (Элемент.Значение.Пустая() = Ложь)
		И Товар.Количество() > 0 Тогда
		Предупреждение("Нельзя выбрать другого поставщика, т.к. данные в таблице не будут ему соответствовать.",5);
		ВыбранноеЗначение = Элемент.Значение;		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПоставщикОчистка(Элемент, СтандартнаяОбработка)
	
	Если Элемент.Значение.Пустая() = Ложь и Товар.Количество() > 0 Тогда
		СтандартнаяОбработка = Ложь;
		Предупреждение("Нельзя очистить или выбрать другого поставщика, т.к. данные в таблице не будут ему соответствовать.",5);
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры

Процедура КоманднаяПанель1кнЗакрытьЗаказ(Кнопка)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Продолжить выполнение закрытия заказа?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
	ТаблицаЗакрытия = ПолучитьТаблицуТовараВПутиПоЗаказу();
	Если ТаблицаЗакрытия = Неопределено Тогда
		Предупреждение("Нет данных для закрытия заказа. Возможно заказ был уже закрыт.");
	Иначе
		ЗакрытьЗаказ(ТаблицаЗакрытия);
		
		СтрокаИзменений = Изменения.Добавить();
		СтрокаИзменений.Дата = ТекущаяДата();
		СтрокаИзменений.КомментарийИзменения = "Интерактивное закрытие заказа";
		СтрокаИзменений.Сотрудник = ПараметрыСеанса.ТекущийСотр;
		СтрокаИзменений.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	
	
	
КонецПроцедуры

Процедура ТоварКоличествоПриИзменении(Элемент)
	
	ТСД=ТекущаяСтрокаДокумента();
	ТСД.Количество = Цел(ТСД.Количество);
	ТСД.Сумма = ТСД.Количество*ТСД.Цена;
	
КонецПроцедуры

Процедура ТоварЦенаПриИзменении(Элемент)
	
	ТСД=ТекущаяСтрокаДокумента();
	ТСД.Сумма = ТСД.Количество*ТСД.Цена;
	
КонецПроцедуры

Процедура ТоварПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если Копирование = Истина Тогда
		Предупреждение("Нельзя копировать строки таблицы товаров");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ТипЗнч(ДанныеСтроки.Товар) = Тип("СправочникСсылка.АССОРТИМЕНТНЫЙ_ПЛАН") Тогда
		ОформлениеСтроки.Ячейки.КодТов.УстановитьТекст(ДанныеСтроки.Товар.Код);
		ОформлениеСтроки.Ячейки.Производитель.УстановитьТекст(ДанныеСтроки.Товар.Производитель);
	Иначе
		ОформлениеСтроки.Ячейки.КодТов.УстановитьТекст("");
		ОформлениеСтроки.Ячейки.Производитель.УстановитьТекст("");
	КонецЕсли;
КонецПроцедуры

Процедура РегистрОтказыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ТипЗнч(ДанныеСтроки.Товар) = Тип("СправочникСсылка.АССОРТИМЕНТНЫЙ_ПЛАН") Тогда
		ОформлениеСтроки.Ячейки.КодТов.УстановитьТекст(ДанныеСтроки.Товар.Код);
		ОформлениеСтроки.Ячейки.Производитель.УстановитьТекст(ДанныеСтроки.Товар.Производитель);
	Иначе
		ОформлениеСтроки.Ячейки.КодТов.УстановитьТекст("");
		ОформлениеСтроки.Ячейки.Производитель.УстановитьТекст("");
	КонецЕсли;
КонецПроцедуры

	ТЗОтказов = Новый ТаблицаЗначений;
	
	ТЗОтказов.Колонки.Добавить("Дата");
	ТЗОтказов.Колонки.Добавить("Документ");
	ТЗОтказов.Колонки.Добавить("Поставщик");
	ТЗОтказов.Колонки.Добавить("Склад");
	ТЗОтказов.Колонки.Добавить("Товар");
	ТЗОтказов.Колонки.Добавить("ПричинаОтказа");
	ТЗОтказов.Колонки.Добавить("Количество");
	ТЗОтказов.Колонки.Добавить("Цена");
	ТЗОтказов.Колонки.Добавить("Сумма");
	ТЗОтказов.Колонки.Добавить("НомерЗаявкиАптеки");
	ТЗОтказов.Колонки.Добавить("КодТовараПоставщика");
	ТЗОтказов.Колонки.Добавить("НаименованиеТовараПоставщика");
	ТЗОтказов.Колонки.Добавить("Комментарий");



