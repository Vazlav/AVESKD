Перем ДБФ;

Процедура Архивация(Файл) Экспорт
	//Проверяем на наличие файла (на всяк случай ), потом геть его в архив, а dbf удаляем
	ВремФайл = Новый Файл(Файл);
	Если ВремФайл.Существует() Тогда
		ИмяАрхива = ВремФайл.Путь + "" + ВремФайл.ИмяБезРасширения + ".zip";
		ФайлАрхива = Новый ЗаписьZipФайла(ИмяАрхива, , , МетодСжатияZIP.Сжатие, УровеньСжатияZIP.Максимальный); 
		ФайлАрхива.Добавить(Файл, РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно); 
		Попытка
			ФайлАрхива.Записать();
		Исключение
			#Если Клиент Тогда
				Сообщить("файл " + Файл + " не может быть заархивирован. Скорей всего он заблокирован аптекой");
			#КонецЕсли
		КонецПопытки;
		УдалитьФайлы(Файл);
		//ЭлементыФормы.ЛогПоле.ДобавитьСтроку(ИмяАрхива);
	КонецЕсли;
	//Возврат Новый Файл(ИмяАрхива);
КонецПроцедуры

Процедура СформироватьСтруктуруДБФ(ТЗ)
			
	
	Для каждого стр из ТЗ Цикл
		ТипВТаблице = СокрЛП(ВРЕГ(стр.ТипПоля));
		
		Если ТипВТаблице = "СТРОКА" Тогда
			Тип = "S";
		ИначеЕсли ТипВТаблице = "ЧИСЛО" Тогда
			Тип = "N";
		ИначеЕсли ТипВТаблице = "ДАТА" Тогда
			Тип = "D";
		КонецЕсли;
		
		ДБФ.Поля.Добавить(стр.ИмяПоляВФайле,Тип,стр.ДлинаПоля,стр.Точность);
	КонецЦикла;
			////============================< Генерим структуру DBF по ТЗ >================================GtG===
			//Для Каждого Кол из ТЗ.Колонки Цикл
			//	
			//	Если Кол.ТипЗначения.СодержитТип(Тип("Дата")) ТОгда
			//		Т="D";
			//		Д=0;
			//		Тч=0;
			//	ИначеЕсли Кол.ТипЗначения.СодержитТип(Тип("Число")) Тогда
			//		Т="N";
			//		Д=15;
			//		Если (Кол.Имя = "PODRCD") или (Кол.Имя = "CODEPST") Тогда
			//			Тч=0;
			//		ИначеЕсли (Кол.Имя = "NUMZ") Тогда
			//			Если Поставщик.Код = 78 Тогда
			//				Тч=2;	
			//			Иначе
			//				Тч=0;
			//			КонецЕсли;
			//		Иначе
			//			Тч=2;	
			//		КонецЕсли;
			//	ИначеЕсли Кол.ТипЗначения.СодержитТип(Тип("Строка")) Тогда	
			//		Т="S";
			//		Д=Кол.Ширина;
			//		Тч=0;
			//	Иначе
			//		Сообщить("хрен знает какой тип");
			//	КонецЕсли;
			//	
			//	ДБФ.поля.Добавить(Кол.Имя,Т,Д,Тч);
			//КонецЦикла;
	
КонецПроцедуры


Процедура ВыгрузитьИнформациюВАптеку() Экспорт
	
	Если РаботаСФайлами.ПроверитьСуществованиеКаталога(Склад.КаталогОбмена,Ложь) = Ложь Тогда
		Возврат;
	КонецЕсли;

	
	ДБФ= Новый  Xbase;
		
	ДБФ.Кодировка = КодировкаXBase.ANSI;
    ДБФ.Поля.Добавить("CODEEIT","N",10,0);
	ДБФ.Поля.Добавить("CODEIZG","N",10,0);
	ДБФ.Поля.Добавить("QNT","N",10,0);
	ДБФ.Поля.Добавить("NUMDOC","N",10,0);
	ДБФ.Поля.Добавить("CODEPOST","N",6,0);
	ДБФ.Поля.Добавить("NAMEPOST","S",100,0);
	ДБФ.Поля.Добавить("PRICEPOST","N",10,2);
	ДБФ.Поля.Добавить("NZAKSTR","S",10,0);
	Вхождение = 0;
    СтарыйНомер = 99999;
    КонечныйФайл = "";
	ВременныйФайл =""; 

	ТХТПоТЧ = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	          |	ЗаказТовар.Товар.ЕдиницаОтгрузки.Код КАК Код,
	          |	ЗаказТовар.Количество КАК Количество,
	          |	ЗаказТовар.Цена КАК Цена,
	          |	ЗаказТовар.НомерЗаявкиАптеки КАК НомерЗаявкиАптеки
	          |ИЗ
	          |	Документ.Заказ.Товар КАК ЗаказТовар
	          |ГДЕ
	          |	ЗаказТовар.Ссылка = &Док
	          |
	          |УПОРЯДОЧИТЬ ПО
	          |	НомерЗаявкиАптеки";
			  
	ЗапросПоТЧ = Новый Запрос;
	ЗапросПоТЧ.Текст = ТХТПоТЧ;
	ЗапросПоТЧ.УстановитьПараметр("Док",ЭтотОбъект.Ссылка);
	ТЗВрем = ЗапросПоТЧ.Выполнить().Выгрузить();
	
	Если ТЗВрем.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//Товар.Сортировать("НомерЗаявкиАптеки"); //Обязательно нужна сортировка
	
	Для каждого стр Из ТЗВрем Цикл
		Если СтарыйНомер <> стр.НомерЗаявкиАптеки Тогда
			СтарыйНомер = стр.НомерЗаявкиАптеки;
			Если Вхождение > 0 Тогда
				Если ДБФ.Открыта()  = Истина Тогда
					ДБФ.ЗакрытьФайл();
				КонецЕсли;
				
				ПереместитьФайл(ВременныйФайл,КонечныйФайл); // переименовываем в норм. вид
				Архивация(КонечныйФайл);
				//Сообщить("Потверждение выгружено: " + Лев(КонечныйФайл,СтрДлина(КонечныйФайл)-4) + ".zip");
				ДБФ.Кодировка = КодировкаXBase.ANSI;
				ДБФ.Поля.Добавить("CODEEIT","N",10,0);
				ДБФ.Поля.Добавить("CODEIZG","N",10,0);
				ДБФ.Поля.Добавить("QNT","N",10,0);
				ДБФ.Поля.Добавить("NUMDOC","N",10,0);
				ДБФ.Поля.Добавить("CODEPOST","N",6,0);
				ДБФ.Поля.Добавить("NAMEPOST","S",100,0);
				ДБФ.Поля.Добавить("PRICEPOST","N",10,2);
				ДБФ.Поля.Добавить("NZAKSTR","S",10,0);
            КонецЕсли;
			Вхождение = 1;	
		    КонечныйФайл = Склад.КаталогОбмена+"\dps"+Склад.Код+"_"+Формат(Номер,"ЧГ=0")+ "" + стр.НомерЗаявкиАптеки + "_" + СокрЛП(Лев(Дата,10)) +".dbf";
			ВременныйФайл =Склад.КаталогОбмена+"\dtstemp.dbf"; 
			ДБФ.СоздатьФайл(ВременныйФайл);
		КонецЕсли;
		ДБФ.Добавить();
    	ДБФ.CODEEIT		= стр.Код;//стр.Товар.ЕдиницаОтгрузки.Код;
		ДБФ.CODEIZG		= 0;
		ДБФ.QNT			= стр.Количество;
		ДБФ.NUMDOC		= 0;
 		ДБФ.CODEPOST	= Формат(100000 + Поставщик.Код,"ЧГ=0");
		ДБФ.NAMEPOST	= Поставщик.ПолнНаименование;
		ДБФ.PRICEPOST	= стр.Цена ;
		ДБФ.NZAKSTR		= стр.НомерЗаявкиАптеки;
		ДБФ.Записать();			
	КонецЦикла; 
	
	

	Если ДБФ.Открыта()  = Истина Тогда
		ДБФ.ЗакрытьФайл();
	КонецЕсли;
	
	ПереместитьФайл(ВременныйФайл,КонечныйФайл); // переименовываем в норм. вид
	Архивация(КонечныйФайл);
	//Сообщить("Потверждение выгружено: " + Лев(КонечныйФайл,СтрДлина(КонечныйФайл)-4) + ".zip");
	
	//Товар.Сортировать("Товар"); //Возвращаем сортировку
	
	//ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
	
КонецПроцедуры

Функция ПроверитьДокументНаНаличиеТовараВПути()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Док.Товар,
	               |	ЗаказПоставщикуОстатки.КоличествоОстаток КАК КоличествоВПути
	               |ИЗ
	               |	Документ.Заказ.Товар КАК Док
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказПоставщику.Остатки(
	               |				,
	               |				Склад = &Склад
	               |					И Поставщик = &Поставщик
	               |					И ДатаЗаказа = &ДатаЗаказа) КАК ЗаказПоставщикуОстатки
	               |		ПО (ЗаказПоставщикуОстатки.Товар = Док.Товар)
	               |ГДЕ
	               |	Док.Ссылка = &Заказ
	               |	И Док.Товар <> ЗНАЧЕНИЕ(Справочник.Ассортиментный_План.ПустаяСсылка)
	               |	И ЗаказПоставщикуОстатки.КоличествоОстаток ЕСТЬ NULL ";
				   
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Поставщик",Поставщик);
	Запрос.УстановитьПараметр("Заказ",Ссылка);
	Запрос.УстановитьПараметр("ДатаЗаказа",НачалоДня(Дата));
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	
КонецФункции


Процедура ЗакрытьЗаказ(ТаблицаЗакрытия) Экспорт
	
	Если ТаблицаЗакрытия = Неопределено Тогда
		ТаблицаЗакрытия = ПолучитьТаблицуТовараВПутиПоЗаказу();
	КонецЕсли;
	
	Если НЕ ТаблицаЗакрытия = Неопределено Тогда
		ДокЗакрытия = Документы.ЗакрытиеЗаказов.СоздатьДокумент();
		ДокЗакрытия.Дата = ТекущаяДата();
		ДокЗакрытия.Склад = Склад;
		ДокЗакрытия.ТипЗакрытияЗаказа = Перечисления.ТипыЗакрытияЗаказа.ОтказПоставщика;
		ДокЗакрытия.Товар.Загрузить(ТаблицаЗакрытия);
		
		
		ДокЗакрытия.Записать(РежимЗаписиДокумента.Проведение);
		ДокЗакрытия = Неопределено;	
		ТаблицаЗакрытия = Неопределено;
	КонецЕсли;
	
	
	
	
КонецПроцедуры


Функция ПолучитьТаблицуТовараВПутиПоЗаказу() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Док.Товар,
				   |	&Поставщик как Поставщик,
	               |	ЗаказПоставщикуОстатки.КоличествоОстаток КАК Количество,
				   |    &ДатаЗаказа как ДатаЗаказа
	               |ИЗ
	               |	Документ.Заказ.Товар КАК Док
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказПоставщику.Остатки(
	               |				,
	               |				Склад = &Склад
	               |					И Поставщик = &Поставщик
	               |					И ДатаЗаказа = &ДатаЗаказа) КАК ЗаказПоставщикуОстатки
	               |		ПО (ЗаказПоставщикуОстатки.Товар = Док.Товар)
	               |ГДЕ
	               |	Док.Ссылка = &Заказ
	               |	И Док.Товар <> ЗНАЧЕНИЕ(Справочник.Ассортиментный_План.ПустаяСсылка)
	               |	И НЕ ЗаказПоставщикуОстатки.КоличествоОстаток ЕСТЬ NULL ";
				   
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Поставщик",Поставщик);
	Запрос.УстановитьПараметр("Заказ",Ссылка);
	Запрос.УстановитьПараметр("ДатаЗаказа",НачалоДня(Дата));
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Рез.Выгрузить();
	КонецЕсли;
	
	
КонецФункции

Функция ПолучитьАдресаРассылки()
	
	СписокАдресов = Новый СписокЗначений;
	Для каждого стр из Поставщик.КонтактныеЛица Цикл
		Если стр.Рассылка = Истина Тогда
			СписокАдресов.Добавить(СокрЛП(стр.Почта));	
		КонецЕсли;
	КонецЦикла;
	Возврат СписокАдресов;
	
КонецФункции

Процедура ОтправитьЗаказПоПочте(СписокАдресов,ИмяФайла)
	
	
	//------------------<ШАБЛОН ПОСЛАТЬ ПИСЬМО>----------------------GtG----
	МПочтец= Обработки.Почтарь;
	
	Почтец=МПочтец.Создать();
	Почтец.СписокВложений.Очистить();
	Почтец.Рассылка.Очистить();
	
	
	Почтец.Автоотправка=ИСТИНА;
	
	Почтец.Рассылка = СписокАдресов; //.Добавить(СписокАдресов);
	Почтец.СписокВложений.Добавить(ИмяФайла);
	
	
	Почтец.Тема="Заказ № " + Номер + " аптека: " + Склад.Наименование;
	Почтец.ТекстПисьма="Заказ № " + Номер + " аптека: " + Склад.Наименование + "
	|по поставщику: " + Поставщик.ПолнНаименование;
	
	Почтец.функция_Послать();
	//Ф=Почтец.ПолучитьФорму("Форма",ЭтотОбъект.ПолучитьФорму("ФормаДокумента"), Новый УникальныйИдентификатор);
	//Ф.Открыть();
	//--------------------------------------------------------GtG----КОНЕЦ--	
	
КонецПроцедуры

Процедура ОтправитьКомментарийПоПочте(СписокАдресов)
	
	
	//------------------<ШАБЛОН ПОСЛАТЬ ПИСЬМО>----------------------GtG----
	МПочтец= Обработки.Почтарь;
	
	Почтец=МПочтец.Создать();
	Почтец.СписокВложений.Очистить();
	Почтец.Рассылка.Очистить();
	
	
	Почтец.Автоотправка=ИСТИНА;
	
	Почтец.Рассылка = СписокАдресов; //.Добавить(СписокАдресов);
	
	
	Почтец.Тема="Заказ № " + Номер + "" ;
	Почтец.ТекстПисьма=" " + Комментарий + "
	|
	| ---------------------------------------------------------------
	| Заказ оформлен и отправлен: " + ПараметрыСеанса.ТекущийСотр;
	
	Ф=Почтец.ПолучитьФорму("Форма", , Новый УникальныйИдентификатор);
	Ф.Открыть();
	//--------------------------------------------------------GtG----КОНЕЦ--	
	
КонецПроцедуры

Процедура ЗаписатьВИсториюИзменения(Файл)
	
	стрИзм = Изменения.Добавить();
	стрИзм.Дата = ТекущаяДата();
	стрИзм.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	стрИзм.ТипИзм = Перечисления.ДействияНадДокументами.Выгрузка;
	стрИзм.КомментарийИзменения = "выгружен " + Файл;
	
КонецПроцедуры

Процедура СоздатьДвойнойЭлементXMLУзла(XML,ЗначениеПервогоУзла,ЗначениеВторогоУзла)
	
	XML.ЗаписатьНачалоЭлемента("ЗначениеРеквизита"); 
		XML.ЗаписатьНачалоЭлемента("Наименование"); 
			XML.ЗаписатьТекст(ЗначениеПервогоУзла); 
		XML.ЗаписатьКонецЭлемента();
		XML.ЗаписатьНачалоЭлемента("Значение"); 
			XML.ЗаписатьТекст(ЗначениеВторогоУзла); 
		XML.ЗаписатьКонецЭлемента();		
	XML.ЗаписатьКонецЭлемента(); //Закрыли ЗначениеРеквизита
	
	
КонецПроцедуры

Процедура СоздатьЭлементXMLУзла(XML,ИмяУзла,ЗначениеУзла)
	
	XML.ЗаписатьНачалоЭлемента(ИмяУзла); 
	XML.ЗаписатьТекст(ЗначениеУзла); 
	XML.ЗаписатьКонецЭлемента();
	
	
КонецПроцедуры

Функция ВыгрузитьВКонвертер()
	
	КолСтрок = Товар.Количество();
	Если КолСтрок = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Поставщик.Код366 = 0 Тогда
		#Если Клиент Тогда
			Сообщить("Код поставщика 36.6 равен нулю. Заказ не выгружен. Поставщик : " + Поставщик);
		#КонецЕсли
		
		Возврат Ложь;
	КонецЕсли;
	
	ТХТ = "ВЫБРАТЬ
	      |	ЗаказТовар.КодТовараПоставщика КАК ИШК,
	      |	ЗаказТовар.Количество КАК Количество,
	      |	ЗаказТовар.Цена КАК Цена,
	      |	ЗаказТовар.Сумма КАК Сумма,
	     // |	ЗаказТовар.Товар.СтавкаНДС.Ставка КАК ТоварСтавкаНДССтавка,
	     //|	ВЫРАЗИТЬ(ЗаказТовар.Сумма / (1 + ЗаказТовар.Товар.СтавкаНДС.Ставка / 100) КАК ЧИСЛО(12, 2)) КАК СуммаБезНДС,
	      |	ВЫБОР
	      |		КОГДА ЗаказТовар.Товар.СтавкаНДС.Код = 3
	      |				И ЗаказТовар.Ссылка.Дата < ДАТАВРЕМЯ(2019, 1, 1)
	      |			ТОГДА 18
	      |		ИНАЧЕ ЗаказТовар.Товар.СтавкаНДС.Ставка
	      |	КОНЕЦ КАК ТоварСтавкаНДССтавка,
	      |	ВЫРАЗИТЬ(ЗаказТовар.Сумма / (1 + ВЫБОР
	      |			КОГДА ЗаказТовар.Товар.СтавкаНДС.Код = 3
	      |					И ЗаказТовар.Ссылка.Дата < ДАТАВРЕМЯ(2019, 1, 1)
	      |				ТОГДА 18
	      |			ИНАЧЕ ЗаказТовар.Товар.СтавкаНДС.Ставка
	      |		КОНЕЦ / 100) КАК ЧИСЛО(12, 2)) КАК СуммаБезНДС,
	      |	Связки366.КодОбобщенный КАК ОШК
	      |ИЗ
	      |	Документ.Заказ.Товар КАК ЗаказТовар
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Связки366 КАК Связки366
	      |		ПО ЗаказТовар.КодТовараПоставщика = Связки366.КодИндивидуальный
	      |ГДЕ
	      |	ЗаказТовар.Ссылка = &Ссылка";
	Запрос = Новый запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Если ТЗ.Количество() = 0 Тогда
		#Если Клиент Тогда
			Сообщить("Заказ был сформирован ручным подбором. Выгрузка таких заказов временно не работает. : " + Поставщик);
		#КонецЕсли
		Возврат Ложь;	
	КонецЕсли;
	ТзСумм = ТЗ.Скопировать(,"Сумма,СуммаБезНДС");
	//ТЗСумм.Свернуть("Сумма,СуммаБезНДС","");
	//СтрокаИтогов = ТзСумм.Получить(0);
	Сумма = ТзСумм.Итог("Сумма");
	СуммаБезНДС = ТзСумм.Итог("СуммаБезНДС");
	СуммаНДС = Сумма - СуммаБезНДС;
	ОМ17_ПроверитьИСоздатьКаталог("\\id-vm-1\ftp_data\a366\sup\orders\");

	ИмяФайла = "\\id-vm-1\ftp_data\a366\sup\orders\Order_"+ Формат(Номер,"ЧГ=0")+".xml";
				//Найдем код аптеки
		
		ТХТ = "ВЫБРАТЬ
		      |	Контракты366.Код как КодКонтракта
		      |ИЗ
		      |	Справочник.Контракты366 КАК Контракты366
		      |ГДЕ
		      |	Контракты366.КодФирмы = &КодФирмы
		      |	И Контракты366.КодПоставщика = &КодПоставщика";
			  
        КодФирмы = Склад.Фирма.Код366; 
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("КодФирмы",КодФирмы);
		Запрос.УстановитьПараметр("КодПоставщика",Поставщик.Код366); 
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			#Если Клиент Тогда
				Сообщить("Не найден контракт 36.6 по данному поставщику: " + Поставщик);
			#КонецЕсли
			Возврат Ложь;
		КонецЕсли;
		КодКонтракта = Формат(Рез.Выгрузить().Получить(0).КодКонтракта,"ЧГ=0");
		
		XML = Новый ЗаписьXML(); 
		Попытка
			XML.ОткрытьФайл(ИмяФайла, "WINDOWS-1251"); 
		Исключение
			#Если Клиент Тогда
				Сообщить("Не удалось создать файл заказа  : " + ИмяФайла);
			#КонецЕсли
			
			Возврат Ложь;
		КонецПопытки;

		XML.ЗаписатьНачалоЭлемента("ORDER"); 
		XML.ЗаписатьНачалоЭлемента("HDR"); 
		
		СоздатьЭлементXMLУзла(XML,"ORDER_ID",Формат(Номер,"ЧГ=0"));
		СоздатьЭлементXMLУзла(XML,"ORDER_GUID","{"+Ссылка.УникальныйИдентификатор() + "}");
		СоздатьЭлементXMLУзла(XML,"ORDER_TYPE","РЗа");
		СоздатьЭлементXMLУзла(XML,"ORDER_NO",Формат(Номер,"ЧГ=0"));
		СоздатьЭлементXMLУзла(XML,"ORD_DATE",Формат(Дата,"ДФ=dd.MM.yyyy"));
		СоздатьЭлементXMLУзла(XML,"VENDOR",Формат(Поставщик.Код366,"ЧГ=0"));
		СоздатьЭлементXMLУзла(XML,"CONTRACT",КодКонтракта);
		СоздатьЭлементXMLУзла(XML,"CUSTOMER_LE",Формат(КодФирмы,"ЧГ=0"));
		СоздатьЭлементXMLУзла(XML,"TO_LOC",СокрЛП(Склад.Код366));
		СоздатьЭлементXMLУзла(XML,"CURRENCY","RUB");
		СоздатьЭлементXMLУзла(XML,"ORDER_QNT",Формат(Товар.Итог("Количество"),"ЧДЦ=0; ЧГ=0"));
		СоздатьЭлементXMLУзла(XML,"ORDER_SUM_NET",Формат(СуммаБезНДС,"ЧДЦ=2; ЧРД=.; ЧГ=0"));
		СоздатьЭлементXMLУзла(XML,"ORDER_SUM_VAT",Формат(СуммаНДС,"ЧДЦ=2; ЧРД=.; ЧГ=0"));
		СоздатьЭлементXMLУзла(XML,"ORDER_SUM",Формат(Сумма,"ЧДЦ=2; ЧРД=.; ЧГ=0"));
		
        XML.ЗаписатьКонецЭлемента();
		
		XML.ЗаписатьНачалоЭлемента("ROWS"); 
		Для каждого стр из ТЗ Цикл
			
			XML.ЗаписатьНачалоЭлемента("ROW"); 
				СоздатьЭлементXMLУзла(XML,"ITEM",СокрЛП(стр.ИШК));
				СоздатьЭлементXMLУзла(XML,"EITEM",СокрЛП(стр.ОШК));
				СоздатьЭлементXMLУзла(XML,"ORDER_QNT",Формат(стр.Количество,"ЧДЦ=0; ЧГ=0"));
				СоздатьЭлементXMLУзла(XML,"ORDER_COST",Формат(стр.Цена,"ЧДЦ=2; ЧРД=.; ЧГ=0"));
			XML.ЗаписатьКонецЭлемента();
		КонецЦикла;
		XML.ЗаписатьКонецЭлемента();
		XML.ЗаписатьКонецЭлемента();
		XML.Закрыть();
		
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		ЗаписатьВИсториюИзменения(ИмяФайла);	
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;
	
	    Возврат Истина;
	
КонецФункции

Функция ВыгрузитьПоставщикуКогдаБылЖивКонвертер() Экспорт
	
	Если Товар.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Склад.РаботаЧерезКонвертер = Истина Тогда
		Результат = ВыгрузитьВКонвертер();
		Возврат Результат;
	КонецЕсли;
	
	
	ВремКаталогЗаказа = КаталогВременныхФайлов();
	КаталогЗаказа = Поставщик.КаталогЗаказа;
	НомерДокумента = Формат(Номер,"ЧГ=0");
	
	Если ОМ17_ПроверитьИСоздатьКаталог(КаталогЗаказа) = Ложь Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ИНН = СокрЛП(Склад.Фирма.ИНН);
	
	//------------------<Построение текста запроса>-------------------Virus----27.01.2008
	ТХТ = "Выбрать ";
	
	Выборка = Справочники.СтруктураФайлов.Выбрать(, Поставщик);
	Пока Выборка.Следующий() Цикл
	    ВыборкаТЧ = Выборка.Заказ;
		Если ВыборкаТЧ.Количество() = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
		Для каждого стр из ВыборкаТЧ Цикл
			Если стр.ИмяПоляБД = "&ТекущаяДата" Тогда
				ТХТ = ТХТ + "
				|" + стр.ИмяПоляБД + " КАК " + стр.ИмяПоля;
			ИНаче
				
				
				ТХТ = ТХТ + "
				|" + стр.ИмяПоляБД + " КАК " + стр.ИмяПоля;
				
				
			КонецЕсли;
			Если стр.НомерСтроки < ВыборкаТЧ.Количество() Тогда
				ТХТ = ТХТ + ","	;
			КонецЕсли;
		КонецЦикла;
		Прервать;
		
	КОнецЦикла;
	
	ТХТ = ТХТ + " ИЗ 
				|Документ.Заказ.Товар КАК Заказ
				|LEFT JOIN Справочник.КодыАптек КАК КодыАптек ON Заказ.Ссылка.Поставщик = КодыАптек.Владелец
				|						AND Заказ.Ссылка.Склад = КодыАптек.Аптека
				|LEFT JOIN Справочник.Поставщики.КодыПлательщика как КодыПлательщика ПО КодыПлательщика.Ссылка = Заказ.Ссылка.Поставщик и КодыПлательщика.Фирма = Заказ.Ссылка.Склад.Фирма
				|ГДЕ Заказ.Ссылка = &Ссылка и Заказ.Количество > 0";
				
	//Сообщить(ТХТ);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
	Запрос.УстановитьПараметр("ПустаяСтрока","");


	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
		
	Если Выборка.ТипФайлаЗаказа = Перечисления.РасширенияФайлов.dbf Тогда
		//------------------<Создание заказа формата DBF>-------------------Virus----27.01.2008
		ИмяФайлаВрем	= ВремКаталогЗаказа + "\" + НомерДокумента+".dbf";
		ИмяФайла		= КаталогЗаказа + "\"+ ИНН +"_"+ НомерДокумента+".dbf";
		
		ДБФ= Новый  Xbase;
		Если Выборка.Кодировка = "ANSI" Тогда
			ДБФ.Кодировка = КодировкаXBase.ANSI;
		Иначе
			ДБФ.Кодировка = КодировкаXBase.OEM;
		КонецЕсли;
		СформироватьСтруктуруДБФ(ВыборкаТЧ); //СформироватьСтруктуруДБФ(ТЗ);
		ДБФ.СоздатьФайл(ИмяФайлаВрем);
		Для Каждого Стр из ТЗ Цикл
			ДБФ.Добавить();
			Инд=0;
			Для к=0 По ТЗ.Колонки.Количество() - 1 Цикл  //пробегаем по значениям полей в строке
				Значение = стр.Получить(к);
				//состояние(Значение);
				Если ТипЗнч(Значение) = Тип("Строка") Тогда
					Значение = СтрЗаменить(СокрЛП(Значение)," ","");
				КонецЕсли;
				ДБф.УстановитьЗначениеПоля(Инд,Значение);
				Инд=Инд+1;
			КонецЦикла;
			Дбф.Записать();
		КонецЦикла;
		
		ДБФ.ЗакрытьФайл();
		
		Попытка
			ПереместитьФайл(ИмяФайлаВрем,ИмяФайла);
		Исключение
			#Если Клиент Тогда
				Сообщить(ОписаниеОшибки());
			#КонецЕсли
			Возврат Ложь;
		КонецПопытки;
		
		Если Поставщик.FTPПоставщика = Истина Тогда
			//здесь еще надо обработку ошибок сделать
			УшелНаФТП = ОМ19_ВыгрузитьОдинФайл_На_FTP(Поставщик,ИмяФайла,"/Orders/");
			Если УшелНаФТП = Ложь Тогда
				Возврат Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
		
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		ЗаписатьВИсториюИзменения(ИмяФайла);	
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;

			//Предупреждение("Файл успешно создан " + ИмяФайла);
			//Если Поставщик.Код = 14 Тогда //Для СИА особенный гемор.
			//	КодАптеки = Справочники.КодыАптек.НайтиПоРеквизиту("Аптека",Склад.Ссылка,,Поставщик.Ссылка);
			//	Если КодАптеки = Справочники.КодыАптек.ПустаяСсылка() Тогда
			//		Ошибка = Истина;//Предупреждение("Нет связки нашей аптеки с аптекой в справочнике СИА");
			//		Возврат Ложь;
			//	КонецЕсли;
			//	КомандаСистемы("C:\SiaWin\CiaOrder.bat " + ИмяФайла + " " + Формат(КодАптеки.Код,"ЧГ=0"),"C:\SiaWin\");
			////ИначеЕсли Поставщик.Код = 78 Тогда //Для Аптеки-Холдинг добавляем zak
			////	ПереместитьФайл(ИмяФайла,КаталогЗаказа + "\Zak" + Формат(ЭтотОбъект.Номер,"ЧГ=0")+".dbf");
			//КонецЕсли;

		
		//Проверяем и если надо, то отправляем поставщику по почте заказ
		Если Поставщик.ВыгружатьЗаказПоПочте = Истина Тогда
			СписокАдресов = ПолучитьАдресаРассылки();
			
			Если СписокАдресов.Количество() > 0 Тогда
				ОтправитьЗаказПоПочте(СписокАдресов,ИмяФайла);
			КонецЕсли;
		КонецЕсли;
		
		Если ВыгружатьКомментарийПоПочте = Истина Тогда
			СписокАдресов = ПолучитьАдресаРассылки();
			ОтправитьКомментарийПоПочте(СписокАдресов);
		КонецЕсли;
		// отправили по почте 
		
		
		
		
	ИначеЕсли Выборка.ТипФайлаЗаказа = Перечисления.РасширенияФайлов.sst Тогда
		//------------------<Создание текстового заказа формата SST>-------------------Virus----27.01.2008
		ИмяФайла = КаталогЗаказа + "\in" + ИНН + "_" + НомерДокумента +".sst";
		Текст = Новый ТекстовыйДокумент; 
		Если Выборка.Кодировка = "ANSI" Тогда
			Кодировка = КодировкаТекста.ANSI;
		ИНачеЕсли Выборка.Кодировка = "OEM" Тогда
			Кодировка = КодировкаТекста.OEM;
		ИНачеЕсли Выборка.Кодировка = "UTF8" Тогда
			Кодировка = КодировкаТекста.UTF8;
		ИНаче
			Кодировка = КодировкаТекста.ANSI;
		КонецЕсли;
		НайденнаяАптека = Справочники.КодыАптек.НайтиПоРеквизиту("Аптека",Склад,,Поставщик);
		Если НайденнаяАптека = Справочники.КодыАптек.ПустаяСсылка() Тогда
			Ошибка = Истина; //Предупреждение("Эта аптека не привязана к поставщику!");
			Возврат Ложь;
		КонецЕсли;
		Текст.ДобавитьСтроку("[HEADER]");
		Если Поставщик.Код = 403 Тогда
			Текст.ДобавитьСтроку("ПОСТАВКА;;60;0;;3294;" + Формат(СокрЛП(НайденнаяАптека.Код),"ЧГ=0")+ ";");
		Иначе
			Текст.ДобавитьСтроку("ПОСТАВКА;;90;0;;54849;" + Формат(СокрЛП(НайденнаяАптека.Код),"ЧГ=0")+ ";");
		КонецЕсли;
		Текст.ДобавитьСтроку("[BODY]");
		Для Каждого Стр из ТЗ Цикл
			Инд=0;
			ВремТекст = "";
			Для к=0 По ТЗ.Колонки.Количество() - 1 Цикл  //пробегаем по значениям полей в строке
				Значение = стр.Получить(к);
				Если ТипЗнч(Значение) = Тип("Число") Тогда
					Значение = ФОрмат(Значение,"ЧРД=.; ЧГ=0");
				ИначеЕсли ТипЗнч(Значение) = Тип("Строка") Тогда
					Значение = СтрЗаменить(СокрЛП(Значение)," ","");
				КонецЕсли;
				#Если Клиент Тогда
					состояние(Значение);
				#КонецЕсли
				ВремТекст = ВремТекст + "" + СокрЛП(Значение) + ";";
				Инд=Инд+1;
			КонецЦикла;
			Текст.ДобавитьСтроку(ВремТекст);
		КонецЦикла;		
		Попытка
			Текст.Записать(ИмяФайла,Кодировка);
		Исключение
			Ошибка = Истина;
			Возврат Ложь;
			//Сообщить(ОписаниеОшибки());
			//Сообщить("Заказ не выгружен!",СтатусСообщения.Важное);
		КонецПопытки;
		
		//Проверяем и если надо, то отправляем поставщику по почте заказ
		СписокАдресов = ПолучитьАдресаРассылки();
		
		Если СписокАдресов.Количество() > 0 Тогда
			ОтправитьЗаказПоПочте(СписокАдресов,ИмяФайла);
		КонецЕсли;
		// отправили по почте 
		ЗаписатьВИсториюИзменения(ИмяФайла);
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;
		
	ИначеЕсли Выборка.ТипФайлаЗаказа = Перечисления.РасширенияФайлов.txt Тогда
		
		НайденнаяАптека = Справочники.КодыАптек.НайтиПоРеквизиту("Аптека",Склад,,Поставщик);
		Если НайденнаяАптека = Справочники.КодыАптек.ПустаяСсылка() Тогда
			Ошибка = Истина; //Предупреждение("Эта аптека не привязана к поставщику!");
			Возврат Ложь;
		КонецЕсли;
		
		Если Поставщик.Код = 421 Тогда
			Текст = Новый ТекстовыйДокумент; 
			Если Выборка.Кодировка = "ANSI" Тогда
				Кодировка = КодировкаТекста.ANSI;
			ИНачеЕсли Выборка.Кодировка = "OEM" Тогда
				Кодировка = КодировкаТекста.OEM;
			ИНачеЕсли Выборка.Кодировка = "UTF8" Тогда
				Кодировка = КодировкаТекста.UTF8;
			ИНаче
				Кодировка = КодировкаТекста.ANSI;
			КонецЕсли;
			Текст.ДобавитьСтроку("Клиент       : 10150253, Аптечка Торговая сеть ОАО г.Ярославль");
			Текст.ДобавитьСтроку("Получатель   : "+ СокрЛП(НайденнаяАптека.Код) +", "+ НайденнаяАптека.Аптека);
			Текст.ДобавитьСтроку("Оплата       : ");
			Текст.ДобавитьСтроку("ID заказа    : ");
			Текст.ДобавитьСтроку("Дата заказа  : " + ТекущаяДата());
			Текст.ДобавитьСтроку("Позиций      : " + Формат(Товар.Количество(),"ЧГ=0"));
			Текст.ДобавитьСтроку("Версия EXE   : ");
			Текст.ДобавитьСтроку("Версия CFG   : ");			
			Текст.ДобавитьСтроку("Статус CFG   : ");
			Текст.ДобавитьСтроку("Прайс-лист   : " + Поставщик.ДатаПрайсЛиста);
			Текст.ДобавитьСтроку("Комментарий  : " + СокрЛП(Комментарий));
			Текст.ДобавитьСтроку("");
			Для Каждого Стр из Товар Цикл
				
				Код =  Прав("           " + СокрЛП(стр.КодТовараПоставщика),11);
				Кол	= Прав("          " + ФОрмат(стр.Количество,"ЧДЦ=0; ЧГ=0"),10);
				
				//Инд=0;
				//ВремТекст = "      ";  // 6 пробелов
				//КоличествоПробегов = ТЗ.Колонки.Количество() - 1;
				//Для к=0 По КоличествоПробегов Цикл  //пробегаем по значениям полей в строке
				//	Значение = стр.Получить(к);
				//	Если ТипЗнч(Значение) = Тип("Число") Тогда
				//		Значение = ФОрмат(Значение,"ЧДЦ=0; ЧГ=0");
				//		Если (Значение = Неопределено) или (Значение = "") или (Значение = NULL) Тогда
				//			Значение = 0;
				//		КонецЕсли;
				//	ИначеЕсли ТипЗнч(Значение) = Тип("Строка") Тогда
				//		Значение = СтрЗаменить(СокрЛП(Значение)," ","");
				//	КонецЕсли;
				//	состояние(Значение);
				//	Если к = КоличествоПробегов Тогда
				//		ВремТекст = ВремТекст + "" + СокрЛП(Значение);  // разделитель - 9 пробелов
				//	Иначе
				//		ВремТекст = ВремТекст + "" + СокрЛП(Значение) + "         ";  // разделитель - 9 пробелов
				//	КонецЕсли;
				//	Инд=Инд+1;
				//КонецЦикла;
				Текст.ДобавитьСтроку(Код + "" + Кол);				
			КонецЦикла;
			ИтоговыйФайл = "" + КаталогЗаказа + "\" + ИНН + "_" + НомерДокумента +".tsa";
		ИначеЕсли (Поставщик.Код = 53) или (Поставщик.Код = 9) Тогда //поставщик = Лореаль или Иннеов
			Текст = Новый ТекстовыйДокумент; 
			Если Выборка.Кодировка = "ANSI" Тогда
				Кодировка = КодировкаТекста.ANSI;
			ИНачеЕсли Выборка.Кодировка = "OEM" Тогда
				Кодировка = КодировкаТекста.OEM;
			ИНачеЕсли Выборка.Кодировка = "UTF8" Тогда
				Кодировка = КодировкаТекста.UTF8;
			ИНаче
				Кодировка = КодировкаТекста.ANSI;
			КонецЕсли;
			
			Для каждого стр из Товар Цикл
					
				Текст.ДобавитьСтроку(""+СокрЛП(НайденнаяАптека.Код) + Прав("        " + Формат(Номер,"ЧГ=0"),8) + "" + Лев(СокрЛП(Склад.Наименование),28) + "  " + Формат(ТекущаяДата(),"ДФ=yyyyMMdd") + "" + Лев(СокрЛП(стр.КодТовараПоставщика) + "        ",8) + Прав("                   " + стр.Количество,19));
				
			КонецЦикла;
			ИтоговыйФайл = "" + КаталогЗаказа + "\CDE23626.txt";	
			
		Иначе
			//------------------<Создание текстового заказа формата SST>-------------------Virus----27.01.2008
			Текст = Новый ТекстовыйДокумент; 
			Если Выборка.Кодировка = "ANSI" Тогда
				Кодировка = КодировкаТекста.ANSI;
			ИНачеЕсли Выборка.Кодировка = "OEM" Тогда
				Кодировка = КодировкаТекста.OEM;
			ИНачеЕсли Выборка.Кодировка = "UTF8" Тогда
				Кодировка = КодировкаТекста.UTF8;
			ИНаче
				Кодировка = КодировкаТекста.ANSI;
			КонецЕсли;
			
			Если Поставщик.Код = 215 Тогда
				Текст.ДобавитьСтроку("Код товара	Количество ");
			КонецЕсли;
			
			Для Каждого Стр из ТЗ Цикл
				Инд=0;
				ВремТекст = "";
				Для к=0 По ТЗ.Колонки.Количество() - 1 Цикл  //пробегаем по значениям полей в строке
					Значение = стр.Получить(к);
					Если ТипЗнч(Значение) = Тип("Число") Тогда
						Значение = ФОрмат(Значение,"ЧРД=.;ЧГ=0");
						Если (Значение = Неопределено) или (Значение = "") или (Значение = NULL) Тогда
							Значение = 0;
						КонецЕсли;
					ИначеЕсли ТипЗнч(Значение) = Тип("Строка") Тогда
						Значение = СтрЗаменить(СокрЛП(Значение)," ","");
					КонецЕсли;
					#Если Клиент Тогда
    					состояние(Значение);
					#КонецЕсли
					Если Поставщик.Код = 215 Тогда
						ВремТекст = ВремТекст + "" + СокрЛП(Значение) + "	";  // разделитель - табуляция
					Иначе
						ВремТекст = ВремТекст + "" + СокрЛП(Значение) + ";";
					КонецЕсли;
					Инд=Инд+1;
				КонецЦикла;
				Текст.ДобавитьСтроку(ВремТекст);
			КонецЦикла;		
			
			Если Поставщик.Код = 215 Тогда
				Текст.ДобавитьСтроку("# заказ № " + Номер + " от " + Склад.Наименование);
				Текст.ДобавитьСтроку("#Комментарий2");
				Текст.ДобавитьСтроку("$AddressId=" + Формат(СокрЛП(НайденнаяАптека.Код),"ЧГ=0")+ "" );
			КонецЕсли;
			ИтоговыйФайл = "" + КаталогЗаказа + "\in" + ИНН + "_" + НомерДокумента +".txt";
		КонецЕсли; 
		
		Попытка
			Текст.Записать(ИтоговыйФайл,Кодировка);
		Исключение
			Ошибка = Истина;
			Возврат Ложь;
		КонецПопытки;
		
		//Проверяем и если надо, то отправляем поставщику по почте заказ
		СписокАдресов = ПолучитьАдресаРассылки();
		
		Если СписокАдресов.Количество() > 0 Тогда
			ОтправитьЗаказПоПочте(СписокАдресов,ИтоговыйФайл);
			Попытка
				УдалитьФайлы(ИтоговыйФайл);
			Исключение
				#Если Клиент Тогда
					Предупреждение("Не удалось удалить файл:" + ИтоговыйФайл + "
					| " + ОписаниеОшибки() + "",5 ); 
				#КонецЕсли
			КонецПопытки;
		КонецЕсли;
		// отправили по почте 
		ЗаписатьВИсториюИзменения(ИтоговыйФайл);
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;
		
		
	ИначеЕсли Выборка.ТипФайлаЗаказа = Перечисления.РасширенияФайлов.xml Тогда
		
		ИмяФайла = КаталогЗаказа + "\order" + ИНН + "_"+ НомерДокумента+".xml";
		КолСтрок = Товар.Количество();
		Если КолСтрок = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
		//Найдем код аптеки
		Нашли = Справочники.КодыАптек.НайтиПоРеквизиту("Аптека",Склад,,Поставщик);
		Если Нашли = Справочники.КодыАптек.ПустаяСсылка() Тогда
			Возврат Ложь;
		Иначе
			КодАптеки = СокрЛП(Нашли.Код);
		КонецЕсли;
		
		ТХТ = "ВЫБРАТЬ
		      |	ПоставщикиКодыПлательщика.КодПлательщика как КодПлательщика
		      |ИЗ
		      |	Справочник.Поставщики.КодыПлательщика КАК ПоставщикиКодыПлательщика
		      |ГДЕ
		      |	ПоставщикиКодыПлательщика.Фирма = &Фирма
		      |	И ПоставщикиКодыПлательщика.Ссылка = &Поставщик";
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Фирма",Склад.Фирма);
		Запрос.УстановитьПараметр("Поставщик",Поставщик); 
		КодПлательщика = Формат(Запрос.Выполнить().Выгрузить().Получить(0).КодПлательщика,"ЧГ=0");
		
		XML = Новый ЗаписьXML(); 
		XML.ОткрытьФайл(ИмяФайла, "WINDOWS-1251"); 
		XML.ЗаписатьОбъявлениеXML(); 
		XML.ЗаписатьНачалоЭлемента("КоммерческаяИнформация");
		XML.ЗаписатьАтрибут("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance"); 
		XML.ЗаписатьАтрибут("xsi:noNamespaceSchemaLocation", "CommerceML.xsd"); 
		XML.ЗаписатьАтрибут("ВерсияСхемы", "2.021"); 
		XML.ЗаписатьАтрибут("ДатаФормирования",Формат(ТекущаяДата(),"ДФ=yyyy-MM-dd""T""HH:mm:ss")); 
		
		XML.ЗаписатьНачалоЭлемента("Документ"); 
		СоздатьЭлементXMLУзла(XML,"Ид",Формат(Номер,"ЧГ=0"));
		СоздатьЭлементXMLУзла(XML,"Номер","-0");
		СоздатьЭлементXMLУзла(XML,"Дата",Формат(Дата,"ДФ=yyyy-MM-dd"));
		СоздатьЭлементXMLУзла(XML,"ХозОперация","Заказ товара");
		СоздатьЭлементXMLУзла(XML,"Роль","Покупатель");
		СоздатьЭлементXMLУзла(XML,"Валюта","RUR");
		СоздатьЭлементXMLУзла(XML,"Курс","1.00");
		СоздатьЭлементXMLУзла(XML,"Сумма",Формат(Товар.Итог("Сумма"),"ЧДЦ=2; ЧРД=.; ЧГ=0"));
		XML.ЗаписатьНачалоЭлемента("Контрагенты"); 
		XML.ЗаписатьНачалоЭлемента("Контрагент"); 
			СоздатьЭлементXMLУзла(XML,"Ид",СокрЛП(КодПлательщика));
			СоздатьЭлементXMLУзла(XML,"ОфициальноеНаименование",СтрЗаменить(Склад.Фирма.Наименование,"""",""));
			СоздатьЭлементXMLУзла(XML,"Роль","Плательщик");
		XML.ЗаписатьКонецЭлемента(); //
		XML.ЗаписатьНачалоЭлемента("Контрагент"); 
			СоздатьЭлементXMLУзла(XML,"Ид",КодАптеки);
			СоздатьЭлементXMLУзла(XML,"ОфициальноеНаименование",СокрЛП(Склад.Наименование));
			СоздатьЭлементXMLУзла(XML,"Роль","Получатель");
		XML.ЗаписатьКонецЭлемента(); //
		XML.ЗаписатьНачалоЭлемента("Контрагент"); 
			СоздатьЭлементXMLУзла(XML,"Ид",СокрЛП(КодПлательщика));
			СоздатьЭлементXMLУзла(XML,"ОфициальноеНаименование"," ");
			СоздатьЭлементXMLУзла(XML,"Роль","Покупатель");
		XML.ЗаписатьКонецЭлемента(); //		
		XML.ЗаписатьКонецЭлемента(); // 
		СоздатьЭлементXMLУзла(XML,"Время","00:00:00");
		СоздатьЭлементXMLУзла(XML,"СрокПлатежа","-9999-12-31");
		СоздатьЭлементXMLУзла(XML,"Комментарий",СокрЛП(Комментарий)+" ");
		XML.ЗаписатьНачалоЭлемента("Товары"); 
		Для каждого стр из Товар Цикл
			
			XML.ЗаписатьНачалоЭлемента("Товар"); 
				СоздатьЭлементXMLУзла(XML,"Ид",СокрЛП(стр.КодТовараПоставщика));
				СоздатьЭлементXMLУзла(XML,"Наименование",СокрЛП(стр.НаименованиеТовараПоставщика));
				СоздатьЭлементXMLУзла(XML,"БазоваяЕдиница"," ");
				XML.ЗаписатьНачалоЭлемента("ЗначенияСвойств");
				XML.ЗаписатьКонецЭлемента(); //		
				СоздатьЭлементXMLУзла(XML,"ИдКаталога","1D9F7140-0F9D-44B0-8E99-E83E15A268C6");
				СоздатьЭлементXMLУзла(XML,"ЦенаЗаЕдиницу",Формат(стр.Цена,"ЧДЦ=2; ЧРД=.; ЧГ=0"));
				СоздатьЭлементXMLУзла(XML,"Количество",Формат(стр.Количество,"ЧРД=.; ЧГ=0"));
				СоздатьЭлементXMLУзла(XML,"Сумма",Формат(стр.Сумма,"ЧДЦ=2; ЧРД=.; ЧГ=0"));
			XML.ЗаписатьКонецЭлемента(); // 
		КонецЦикла;
		XML.ЗаписатьКонецЭлемента(); //Товары закрыли
		XML.ЗаписатьНачалоЭлемента("ЗначенияРеквизитов");
			СоздатьДвойнойЭлементXMLУзла(XML,"S_START",Формат(Дата,"ДФ=yyyy-MM-dd""T""HH:mm:ss"));
			СоздатьДвойнойЭлементXMLУзла(XML,"S_FINISH",Формат(ТекущаяДата(),"ДФ=yyyy-MM-dd""T""HH:mm:ss"));
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAKWASSEND","false");
			СоздатьДвойнойЭлементXMLУзла(XML,"PM_IDX","-0");
			СоздатьДвойнойЭлементXMLУзла(XML,"MAX2PAY","90");
			СоздатьДвойнойЭлементXMLУзла(XML,"DELIVERY","1");
			СоздатьДвойнойЭлементXMLУзла(XML,"SUMRUBPRIC",Формат(Товар.Итог("Сумма"),"ЧДЦ=2; ЧРД=.; ЧГ=0"));
			СоздатьДвойнойЭлементXMLУзла(XML,"PRICE_IDX",СокрЛП(Поставщик.КодПрайса));
			СоздатьДвойнойЭлементXMLУзла(XML,"PRICE_NAME"," ");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAKTYPE","-0");
			СоздатьДвойнойЭлементXMLУзла(XML,"PAYER",СокрЛП(КодПлательщика));
			СоздатьДвойнойЭлементXMLУзла(XML,"RECIPIENT",КодАптеки);
			СоздатьДвойнойЭлементXMLУзла(XML,"BUYER",СокрЛП(КодПлательщика));
			СоздатьДвойнойЭлементXMLУзла(XML,"NAL_BNAL","false");
			СоздатьДвойнойЭлементXMLУзла(XML,"NUM_POS",Формат(КолСтрок,"ЧДЦ=0; ЧГ=0"));
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_STATUS","-0");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_STATUS_STR"," ");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_UINT",Формат(Номер,"ЧГ=0"));
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_UDEC","-0");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_UDAT","1899-12-30T00:00:00");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_USTR"," ");
			//СоздатьДвойнойЭлементXMLУзла(XML,"IMPORT_FILE_NAME"," ");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAKTYPE_STR","ПОСТАВКА");
		XML.ЗаписатьКонецЭлемента(); //ЗначенияРеквизитов закрыли
		XML.ЗаписатьКонецЭлемента(); //Документ закрыли
		XML.ЗаписатьКонецЭлемента(); //Коммерческую информацию закрыли
		XML.Закрыть();
		
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		ЗаписатьВИсториюИзменения(ИмяФайла);	
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;

	ИначеЕсли Выборка.ТипФайлаЗаказа = Перечисления.РасширенияФайлов.edi Тогда
		
		ИмяФайла = КаталогЗаказа + "\order" + ИНН + "_" + НомерДокумента +".xml";
		КолСтрок = Товар.Количество();
		Если КолСтрок = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
		//Найдем код аптеки
		Нашли = Справочники.КодыАптек.НайтиПоРеквизиту("Аптека",Склад,,Поставщик);
		Если Нашли = Справочники.КодыАптек.ПустаяСсылка() Тогда
			Возврат Ложь;
		Иначе
			КодАптеки = СокрЛП(Нашли.Код);
		КонецЕсли;
		
		ТХТ = "ВЫБРАТЬ
		      |	ПоставщикиКодыПлательщика.КодПлательщика как КодПлательщика
		      |ИЗ
		      |	Справочник.Поставщики.КодыПлательщика КАК ПоставщикиКодыПлательщика
		      |ГДЕ
		      |	ПоставщикиКодыПлательщика.Фирма = &Фирма
		      |	И ПоставщикиКодыПлательщика.Ссылка = &Поставщик";
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Фирма",Склад.Фирма);
		Запрос.УстановитьПараметр("Поставщик",Поставщик); 
		КодПлательщика = Формат(Запрос.Выполнить().Выгрузить().Получить(0).КодПлательщика,"ЧГ=0");
		
		XML = Новый ЗаписьXML(); 
		XML.ОткрытьФайл(ИмяФайла, "UTF-8"); 
		XML.ЗаписатьОбъявлениеXML(); 
		
		XML.ЗаписатьНачалоЭлемента("Document-Order"); 
		XML.ЗаписатьНачалоЭлемента("Order-Header"); 
			СоздатьЭлементXMLУзла(XML,"OrderNumber",Формат(Номер,"ЧГ=0"));
			СоздатьЭлементXMLУзла(XML,"OrderDate",Формат(Дата,"ДФ=dd/MM/yyyy"));
			СоздатьЭлементXMLУзла(XML,"ExpectedDeliveryDate",Формат(Дата,"ДФ=dd/MM/yyyy"));
		XML.ЗаписатьКонецЭлемента(); // Конец элемента Order-Header
		XML.ЗаписатьНачалоЭлемента("Order-Parties"); 		
			XML.ЗаписатьНачалоЭлемента("Buyer");
				СоздатьЭлементXMLУзла(XML,"ILN",СокрЛП(КодПлательщика));
			XML.ЗаписатьКонецЭлемента(); // Конец элемента Buyer
			XML.ЗаписатьНачалоЭлемента("Seller");
				СоздатьЭлементXMLУзла(XML,"ILN",СокрЛП(КодПлательщика));
				СоздатьЭлементXMLУзла(XML,"CodeByBuyer",СокрЛП(КодПлательщика));
			XML.ЗаписатьКонецЭлемента(); // Конец элемента Seller
			XML.ЗаписатьНачалоЭлемента("DeliveryPoint");
				СоздатьЭлементXMLУзла(XML,"ILN",КодАптеки);
			XML.ЗаписатьКонецЭлемента(); // Конец элемента DeliveryPoint			
			XML.ЗаписатьНачалоЭлемента("Invoicee");
				СоздатьЭлементXMLУзла(XML,"ILN",СокрЛП(КодПлательщика));
			XML.ЗаписатьКонецЭлемента(); // Конец элемента Invoicee	
		XML.ЗаписатьКонецЭлемента(); // Конец элемента Order-Parties
		
		XML.ЗаписатьНачалоЭлемента("Order-Lines"); 
		Для каждого стр из Товар Цикл
			XML.ЗаписатьНачалоЭлемента("Line"); 
				XML.ЗаписатьНачалоЭлемента("Line-Item"); 
					СоздатьЭлементXMLУзла(XML,"LineNumber",Формат(стр.НомерСтроки,"ЧГ=0"));
					СоздатьЭлементXMLУзла(XML,"EAN","");
					СоздатьЭлементXMLУзла(XML,"BuyerItemCode",Формат(стр.Товар.Код,"ЧГ=0"));
					СоздатьЭлементXMLУзла(XML,"SupplierItemCode",СокрЛП(стр.КодТовараПоставщика));
					СоздатьЭлементXMLУзла(XML,"ItemDescription",СокрЛП(стр.НаименованиеТовараПоставщика));
					СоздатьЭлементXMLУзла(XML,"OrderedQuantity",Формат(стр.Количество,"ЧДЦ=0; ЧГ=0"));
					СоздатьЭлементXMLУзла(XML,"UnitOfMeasure","");
				XML.ЗаписатьКонецЭлемента(); //Конец Line-Item
			XML.ЗаписатьКонецЭлемента(); //Конец Line 
		КонецЦикла;
		XML.ЗаписатьКонецЭлемента(); //Товары Order-Lines
		XML.ЗаписатьКонецЭлемента(); //Конец Document-Order
		//XML.ЗаписатьКонецЭлемента(); //Документ закрыли
		
		XML.Закрыть();
		Если Поставщик.FTPПоставщика = Истина Тогда
			//здесь еще надо обработку ошибок сделать
			ОМ19_ВыгрузитьОдинФайл_На_FTP(Поставщик,ИмяФайла,"/Orders/");
		КонецЕсли;	
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		ЗаписатьВИсториюИзменения(ИмяФайла);	
		
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;
		

	КонецЕсли;
	
	//Если Склад.ТипСклада = Перечисления.ТипыМХ.Розн Тогда
	//	ВыгрузитьИнформациюВАптеку();
	//КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ЗафиксироватьВыгрузкуИндивидуальныхПозиций() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказТовар.КодИндПозиции,
	               |	ЗаказТовар.Товар
	               |ИЗ
	               |	Документ.Заказ.Товар КАК ЗаказТовар
	               |ГДЕ
	               |	ЗаказТовар.Ссылка = &ЗаказСсылка
	               |	И ЗаказТовар.КодИндПозиции > 0";
	Запрос.УстановитьПараметр("ЗаказСсылка",Ссылка);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	Набор = РегистрыСведений.Дозаказы.СоздатьНаборЗаписей();
	Пока Выборка.Следующий() Цикл
		
		Набор.Отбор.КодПозиции.Установить(Выборка.КодИндПозиции);
		
		Набор.Прочитать();
		Если Набор.Количество() = 0 Тогда
			Продолжить;
		Иначе
			Запись = Набор[0];
			Запись.Выгружена = Истина;
			Запись.ЗаказПоставщику = Ссылка;
			Запись.ДатаВыгрузки = ТекущаяДата();
		КонецЕсли;
		
		Набор.Записать();
		//ДокументИЗ = Документы.ИнтернетЗаказ.СоздатьДокумент();
		ДокументИЗ = Запись.Документ;
		Если НЕ ДокументИЗ.Пустая() Тогда
			ДокОбъект = ДокументИЗ.ПолучитьОбъект();
			Нашли=ДокОбъект.Товар.Найти(Выборка.Товар,"Товар");	
			Если НЕ Нашли = Неопределено Тогда
				Нашли.СтатусСтроки = Перечисления.ИА_СтатусСтрокиЗаказа.Заказан;	
			КонецЕсли;
			
			Для н=1 по 3 Цикл
				Попытка
					ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
					Прервать;
				Исключение
					ОбщегоНазначения.Задержка(2);
				КонецПопытки;
			КонецЦикла;
		КонецЕсли;		
		
	КонецЦикла;
	
	
КонецПроцедуры

Функция ВыгрузитьИнтернетЗаказВКатрен() Экспорт
	
	Если Товар.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
    ТХТ = "ВЫБРАТЬ
          |	КонтрактыИАптеки.КодАптекиВнешн,
          |	НастройкиОбмена.FILEКаталогОбмена КАК КаталогЗаказа,
          |	НастройкиОбмена.Кодировка,
          |	НастройкиФорматаОбмена.ТаблицаПолей,
          |	НастройкиОбмена.FILEМаска как Маска
          |ИЗ
          |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
          |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
          |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОбмена КАК НастройкиОбмена
          |			ПО КонтрактыИНастройки.НастройкаОбмена = НастройкиОбмена.НастройкаОбмена
          |				И (НастройкиОбмена.УзелОбмена = ""Заказ"")
          |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиФорматаОбмена КАК НастройкиФорматаОбмена
          |			ПО КонтрактыИНастройки.НастройкаОбмена = НастройкиФорматаОбмена.НастройкаОбмена
          |				И (НастройкиФорматаОбмена.УзелОбмена = ""Заказ"")
          |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
          |ГДЕ
          |	КонтрактыИАптеки.Аптека = &Аптека
          |	И КонтрактыИАптеки.Владелец.Владелец = &Поставщик";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Аптека",Склад);
	Запрос.УстановитьПараметр("Поставщик",Поставщик);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	Выборка = Рез.Выбрать();
	Выборка.Следующий();
	
	Если СокрЛП(Выборка.КодАптекиВнешн) = "" Тогда
		#Если Клиент Тогда
			Предупреждение("Обнаружен пустой код аптеки. Выгрузка невозможна.",5);
		#КонецЕсли
		Возврат Ложь;
	КонецЕсли;
	
	ВремКаталогЗаказа = КаталогВременныхФайлов();
	
	КаталогЗаказа = "\\id-vm-1\ftp_data\post\katren\iorders\";
	
	
	Если Прав(КаталогЗаказа,1) = "\" Тогда
		КаталогЗаказа = Лев(КаталогЗаказа,СтрДлина(КаталогЗаказа)-1);
	КонецЕсли;
	
	Если ПустаяСтрока(КаталогЗаказа) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НомерДокумента = Формат(Номер,"ЧГ=0");
	Если Выборка.ТаблицаПолей = NULL Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТаблицаПолей = Выборка.ТаблицаПолей.Получить();
	КоличествоПолей = ТаблицаПолей.Количество();
	Если КоличествоПолей = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Слэш = "\";
	Инфо = Новый СистемнаяИнформация;
	Если Инфо.ТипПлатформы = ТипПлатформы.Linux_x86 или 
		Инфо.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда
		КаталогЗаказа = СтрЗаменить(СтрЗаменить(КаталогЗаказа,"\\id-vm-1\ftp_data\","/home/usr1cv8/ftp_net/"),"\","/");
		Слэш = "/";
	КонецЕсли;
	
	
	Если ОМ17_ПроверитьИСоздатьКаталог(КаталогЗаказа) = Ложь Тогда
			МЗ = РегистрыСведений.ЛогОшибокОбработок.СоздатьМенеджерЗаписи();
			МЗ.Объект = "ВыгрузкаЗаказа";
			МЗ.ДатаОшибки = ТекущаяДата();
			МЗ.КодАптеки = Склад.Код;
			МЗ.ОписаниеОшибки = ""+КаталогЗаказа;
			МЗ.МестоВозникновения = "ВыгрузитьПоставщику:1092";
			МЗ.Записать();		
		Возврат Ложь;
	КонецЕсли;
	
	ИНН = СокрЛП(Склад.Фирма.ИНН);
	
	//------------------<Построение текста запроса>-------------------Virus----27.01.2008
	ТХТ = "Выбрать ";
	    ном = 0;
		Для каждого стр из ТаблицаПолей Цикл
			ном = ном+1;
			Если стр.ИмяПоляБД = "&ТекущаяДата" Тогда
				ТХТ = ТХТ + "
				|" + стр.ИмяПоляБД + " КАК " + стр.ИмяПоляВФайле;
			ИНаче
				
				
				ТХТ = ТХТ + "
				|" + стр.ИмяПоляБД + " КАК " + стр.ИмяПоляВФайле;
				
				
			КонецЕсли;
			Если ном < КоличествоПолей Тогда
				ТХТ = ТХТ + ","	;
			КонецЕсли;
		КонецЦикла;

	
	ТХТ = ТХТ + " ИЗ 
				|Документ.Заказ.Товар КАК Заказ
				|ГДЕ Заказ.Ссылка = &Ссылка и Заказ.Количество > 0";
				
	ТХТ = СтрЗаменить(ТХТ,"КодыАптек.Код","&КодАптеки");
				
	//Сообщить(ТХТ);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
	Запрос.УстановитьПараметр("КодАптеки",Выборка.КодАптекиВнешн);
	Запрос.УстановитьПараметр("ПустаяСтрока","");
 	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
		

		//------------------<Создание заказа формата DBF>-------------------Virus----27.01.2008
		Если Инфо.ТипПлатформы = ТипПлатформы.Linux_x86 или 
			Инфо.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда
			ИмяФайлаВрем	= ВремКаталогЗаказа + НомерДокумента+".DBF";
		Иначе
			ИмяФайлаВрем	= ВремКаталогЗаказа + НомерДокумента+".dbf";
		КонецЕсли;
		ИмяФайла		= КаталогЗаказа + Слэш + ИНН +"_"+ НомерДокумента+".dbf";
		
		ДБФ= Новый  Xbase;
		Если Выборка.Кодировка = "ANSI" Тогда
			ДБФ.Кодировка = КодировкаXBase.ANSI;
		Иначе
			ДБФ.Кодировка = КодировкаXBase.OEM;
		КонецЕсли;
		СформироватьСтруктуруДБФ(ТаблицаПолей); //СформироватьСтруктуруДБФ(ТЗ);
		ДБФ.СоздатьФайл(ИмяФайлаВрем);
		Для Каждого Стр из ТЗ Цикл
			ДБФ.Добавить();
			Инд=0;
			Для к=0 По ТЗ.Колонки.Количество() - 1 Цикл  //пробегаем по значениям полей в строке
				Значение = стр.Получить(к);
				//состояние(Значение);
				Если ТипЗнч(Значение) = Тип("Строка") Тогда
					Значение = СтрЗаменить(СокрЛП(Значение)," ","");
				КонецЕсли;
				ДБф.УстановитьЗначениеПоля(Инд,Значение);
				Инд=Инд+1;
			КонецЦикла;
			Дбф.Записать();
		КонецЦикла;
		
		ДБФ.ЗакрытьФайл();
		
		Попытка
			ПереместитьФайл(ИмяФайлаВрем,ИмяФайла);
		Исключение
			МЗ = РегистрыСведений.ЛогОшибокОбработок.СоздатьМенеджерЗаписи();
			МЗ.Объект = "ВыгрузкаЗаказа";
			МЗ.ДатаОшибки = ТекущаяДата();
			МЗ.КодАптеки = Склад.Код;
			МЗ.ОписаниеОшибки = ""+ИмяФайлаВрем+ " " + ОписаниеОшибки();
			МЗ.МестоВозникновения = ""+ИмяФайла;
			МЗ.Записать();				
			#Если Клиент Тогда
				Сообщить(ОписаниеОшибки());
			#КонецЕсли
			Возврат Ложь;
		КонецПопытки;
		
		
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		ЗаписатьВИсториюИзменения(ИмяФайла);	
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;


		
		//Проверяем и если надо, то отправляем поставщику по почте заказ
		Если Поставщик.ВыгружатьЗаказПоПочте = Истина Тогда
			СписокАдресов = ПолучитьАдресаРассылки();
			
			Если СписокАдресов.Количество() > 0 Тогда
				ОтправитьЗаказПоПочте(СписокАдресов,ИмяФайла);
			КонецЕсли;
		КонецЕсли;
		
		Если ВыгружатьКомментарийПоПочте = Истина Тогда
			СписокАдресов = ПолучитьАдресаРассылки();
			ОтправитьКомментарийПоПочте(СписокАдресов);
		КонецЕсли;
		
		ЗафиксироватьВыгрузкуИндивидуальныхПозиций();
		
		Возврат Истина;
		
КонецФункции

Функция ВыгрузитьПоставщику() Экспорт
	
	Если Товар.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	Если ПризнакЭДО Тогда
		
		// должна быть перекодировка с посредником
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	АП.Код,
		|	АП.Наименование
		|ИЗ
		|	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
		|		ПО АП.Ссылка = Связки.ТоварФирмы
		|			И (Связки.Поставщик = &ПоставщикСвязок)
		|			И (Связки.Блокировка = ЛОЖЬ)
		|ГДЕ
		|	АП.Ссылка В(&Товары)
		|	И Связки.ТоварФирмы ЕСТЬ NULL";
		
		Запрос.УстановитьПараметр("ПоставщикСвязок", Справочники.Поставщики.НайтиПоКоду(582));
		Запрос.УстановитьПараметр("Товары", Товар.ВыгрузитьКолонку("Товар"));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				#Если Клиент Тогда
					ТекстОшибки = "Отсутствует перекодировка с посредником (GDP) по товару: " 
								+ Формат(Выборка.Код, "ЧГ=0") + " - " + Выборка.Наименование;					
					Сообщить(ТекстОшибки, СтатусСообщения.Важное);
				#КонецЕсли
				
			КонецЦикла;
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
    ТХТ = "ВЫБРАТЬ
          |	КонтрактыИАптеки.КодАптекиВнешн,
          |	НастройкиОбмена.FILEКаталогОбмена КАК КаталогЗаказа,
          |	НастройкиОбмена.Кодировка,
          |	НастройкиФорматаОбмена.ТаблицаПолей,
          |	НастройкиОбмена.FILEМаска как Маска
          |ИЗ
          |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
          |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
          |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОбмена КАК НастройкиОбмена
          |			ПО КонтрактыИНастройки.НастройкаОбмена = НастройкиОбмена.НастройкаОбмена
          |				И (НастройкиОбмена.УзелОбмена = &ИмяУзлаНастройки)
          |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиФорматаОбмена КАК НастройкиФорматаОбмена
          |			ПО КонтрактыИНастройки.НастройкаОбмена = НастройкиФорматаОбмена.НастройкаОбмена
          |				И (НастройкиФорматаОбмена.УзелОбмена = &ИмяУзлаНастройки)
          |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
          |ГДЕ
          |	КонтрактыИАптеки.Аптека = &Аптека
          |	И КонтрактыИАптеки.Владелец.Владелец = &Поставщик";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Если Склад.ИнтернетАптека Тогда
		Запрос.УстановитьПараметр("ИмяУзлаНастройки","ЗаказИнтернетАптек");
	Иначе
		Запрос.УстановитьПараметр("ИмяУзлаНастройки","Заказ");
	КонецЕсли;
	Запрос.УстановитьПараметр("Аптека",Склад);
	Запрос.УстановитьПараметр("Поставщик",Поставщик);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	Выборка = Рез.Выбрать();
	Выборка.Следующий();
	
	Если СокрЛП(Выборка.КодАптекиВнешн) = "" Тогда
		#Если Клиент Тогда
			Предупреждение("Обнаружен пустой код аптеки. Выгрузка невозможна.",5);
		#КонецЕсли
		Возврат Ложь;
	КонецЕсли;
	
	ВремКаталогЗаказа = КаталогВременныхФайлов();
	
	КаталогЗаказа = СокрЛП(Выборка.КаталогЗаказа);
	Если Прав(КаталогЗаказа,1) = "\" Тогда
		КаталогЗаказа = Лев(КаталогЗаказа,СтрДлина(КаталогЗаказа)-1);
	КонецЕсли;
	
	Если ПустаяСтрока(КаталогЗаказа) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НомерДокумента = Формат(Номер,"ЧГ=0");
	Если Выборка.ТаблицаПолей = NULL Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТаблицаПолей = Выборка.ТаблицаПолей.Получить();
	КоличествоПолей = ТаблицаПолей.Количество();
	Если КоличествоПолей = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Слэш = "\";
	Инфо = Новый СистемнаяИнформация;
	Если Инфо.ТипПлатформы = ТипПлатформы.Linux_x86 или 
		Инфо.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда
		КаталогЗаказа = СтрЗаменить(СтрЗаменить(КаталогЗаказа,"\\id-vm-1\ftp_data\","/home/usr1cv8/ftp_net/"),"\","/");
		Слэш = "/";
		
		//+++ ENT-767 Проверим наличие чек-папки и если нет (значит, что отвалилась шара), то подключаем
		Сч=1;
		 Для Сч = 1 по 3 цикл
			
			ПапкаЧек = Новый Файл("/home/usr1cv8/ftp_net/share_check/");
			Если ПапкаЧек.Существует()Тогда
				Прервать;
			Иначе
				ЗапуститьПриложение("mount /home/usr1cv8/ftp_net");		
				Если Сч = 3 и не ПапкаЧек.Существует() тогда
					МЗ = РегистрыСведений.ЛогОшибокОбработок.СоздатьМенеджерЗаписи();
					МЗ.Объект = "ВыгрузкаЗаказа";
					МЗ.ДатаОшибки = ТекущаяДата();
					МЗ.КодАптеки = Склад.Код;
					МЗ.ОписаниеОшибки = "Не удалось подключить шару Linux при выгрузке документа Заказ покупателя №" + Строка(НомерДокумента);;
					МЗ.МестоВозникновения = "Выгрузка заказа поставщику";
					МЗ.Записать();
					
					ОбщегоНазначения.ПослатьСообщениеВТелеграм("Не удалось с трех попыток смонтировать папку ""/home/usr1cv8/ftp_net/"", заказы поставщику не выгружаются",64); //ENT-1584
					
					Возврат Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		//--- ENT-767
	КонецЕсли;
	
	
	Если ОМ17_ПроверитьИСоздатьКаталог(КаталогЗаказа) = Ложь Тогда
			МЗ = РегистрыСведений.ЛогОшибокОбработок.СоздатьМенеджерЗаписи();
			МЗ.Объект = "ВыгрузкаЗаказа";
			МЗ.ДатаОшибки = ТекущаяДата();
			МЗ.КодАптеки = Склад.Код;
			МЗ.ОписаниеОшибки = ""+КаталогЗаказа;
			МЗ.МестоВозникновения = "ВыгрузитьПоставщику:1092";
			МЗ.Записать();		
		Возврат Ложь;
	КонецЕсли;
	
	ИНН = СокрЛП(Склад.Фирма.ИНН);
	
	//------------------<Построение текста запроса>-------------------Virus----27.01.2008
	ТХТ = "Выбрать ";
	    ном = 0;
		Для каждого стр из ТаблицаПолей Цикл
			ном = ном+1;
			Если стр.ИмяПоляБД = "&ТекущаяДата" Тогда
				ТХТ = ТХТ + "
				|" + стр.ИмяПоляБД + " КАК " + стр.ИмяПоляВФайле;
			ИНаче
				
				
				ТХТ = ТХТ + "
				|" + стр.ИмяПоляБД + " КАК " + стр.ИмяПоляВФайле;
				
				
			КонецЕсли;
			Если ном < КоличествоПолей Тогда
				ТХТ = ТХТ + ","	;
			КонецЕсли;
		КонецЦикла;

	
	ТХТ = ТХТ + " ИЗ 
				|Документ.Заказ.Товар КАК Заказ
				|ГДЕ Заказ.Ссылка = &Ссылка и Заказ.Количество > 0";
				
	ТХТ = СтрЗаменить(ТХТ,"КодыАптек.Код","&КодАптеки");
				
	//Сообщить(ТХТ);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
	Запрос.УстановитьПараметр("КодАптеки",Выборка.КодАптекиВнешн);
	Запрос.УстановитьПараметр("ПустаяСтрока","");
 	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
		
	Если Найти(НРег(Выборка.Маска), ".dbf") > 0 Тогда
		//------------------<Создание заказа формата DBF>-------------------Virus----27.01.2008
		Если Инфо.ТипПлатформы = ТипПлатформы.Linux_x86 или 
			Инфо.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда
			ИмяФайлаВрем	= ВремКаталогЗаказа + НомерДокумента+".DBF";
		Иначе
			ИмяФайлаВрем	= ВремКаталогЗаказа + НомерДокумента+".DBF";
		КонецЕсли;
		ИмяФайла		= КаталогЗаказа + Слэш + ИНН +"_"+ НомерДокумента+".TMP";
		КонечноеИмяФайла = СтрЗаменить(ИмяФайла,"TMP","DBF");
		
		ДБФ= Новый  Xbase;
		Если Выборка.Кодировка = "ANSI" Тогда
			ДБФ.Кодировка = КодировкаXBase.ANSI;
		Иначе
			ДБФ.Кодировка = КодировкаXBase.OEM;
		КонецЕсли;
		СформироватьСтруктуруДБФ(ТаблицаПолей); //СформироватьСтруктуруДБФ(ТЗ);
		ДБФ.СоздатьФайл(ИмяФайлаВрем);
		Для Каждого Стр из ТЗ Цикл
			ДБФ.Добавить();
			Инд=0;
			Для к=0 По ТЗ.Колонки.Количество() - 1 Цикл  //пробегаем по значениям полей в строке
				Значение = стр.Получить(к);
				//состояние(Значение);
				Если ТипЗнч(Значение) = Тип("Строка") Тогда
					Значение = СтрЗаменить(СокрЛП(Значение)," ","");
				КонецЕсли;
				ДБф.УстановитьЗначениеПоля(Инд,Значение);
				Инд=Инд+1;
			КонецЦикла;
			Дбф.Записать();
		КонецЦикла;
		
		ДБФ.ЗакрытьФайл();
		
		Попытка
			ПереместитьФайл(ИмяФайлаВрем,ИмяФайла);
			ПереместитьФайл(ИмяФайла,КонечноеИмяФайла);
		Исключение
			МЗ = РегистрыСведений.ЛогОшибокОбработок.СоздатьМенеджерЗаписи();
			МЗ.Объект = "ВыгрузкаЗаказа";
			МЗ.ДатаОшибки = ТекущаяДата();
			МЗ.КодАптеки = Склад.Код;
			МЗ.ОписаниеОшибки = ""+КонечноеИмяФайла+ " " + ОписаниеОшибки();
			МЗ.МестоВозникновения = ""+КонечноеИмяФайла;
			МЗ.Записать();				
			#Если Клиент Тогда
				Сообщить(ОписаниеОшибки());
			#КонецЕсли
			Возврат Ложь;
		КонецПопытки;
		
		//Если Поставщик.FTPПоставщика = Истина Тогда
		//	//здесь еще надо обработку ошибок сделать
		//	УшелНаФТП = ОМ19_ВыгрузитьОдинФайл_На_FTP(Поставщик,ИмяФайла,"/Orders/");
		//	Если УшелНаФТП = Ложь Тогда
		//		Возврат Ложь;
		//	КонецЕсли;
		//	
		//КонецЕсли;
		
		
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		ЗаписатьВИсториюИзменения(КонечноеИмяФайла);	
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;

			//Предупреждение("Файл успешно создан " + ИмяФайла);
			//Если Поставщик.Код = 14 Тогда //Для СИА особенный гемор.
			//	КодАптеки = Справочники.КодыАптек.НайтиПоРеквизиту("Аптека",Склад.Ссылка,,Поставщик.Ссылка);
			//	Если КодАптеки = Справочники.КодыАптек.ПустаяСсылка() Тогда
			//		Ошибка = Истина;//Предупреждение("Нет связки нашей аптеки с аптекой в справочнике СИА");
			//		Возврат Ложь;
			//	КонецЕсли;
			//	КомандаСистемы("C:\SiaWin\CiaOrder.bat " + ИмяФайла + " " + Формат(КодАптеки.Код,"ЧГ=0"),"C:\SiaWin\");
			////ИначеЕсли Поставщик.Код = 78 Тогда //Для Аптеки-Холдинг добавляем zak
			////	ПереместитьФайл(ИмяФайла,КаталогЗаказа + "\Zak" + Формат(ЭтотОбъект.Номер,"ЧГ=0")+".dbf");
			//КонецЕсли;

		
		//Проверяем и если надо, то отправляем поставщику по почте заказ
		Если Поставщик.ВыгружатьЗаказПоПочте = Истина Тогда
			СписокАдресов = ПолучитьАдресаРассылки();
			
			Если СписокАдресов.Количество() > 0 Тогда
				ОтправитьЗаказПоПочте(СписокАдресов,КонечноеИмяФайла);
			КонецЕсли;
		КонецЕсли;
		
		Если ВыгружатьКомментарийПоПочте = Истина Тогда
			СписокАдресов = ПолучитьАдресаРассылки();
			ОтправитьКомментарийПоПочте(СписокАдресов);
		КонецЕсли;
		// отправили по почте 
		
		
		
		
	ИначеЕсли Найти(НРег(Выборка.Маска), ".sst") > 0 Тогда
		//------------------<Создание текстового заказа формата SST>-------------------Virus----27.01.2008
		ИмяФайла = КаталогЗаказа + Слэш +"in" + ИНН + "_" + НомерДокумента +".sst";
		Текст = Новый ТекстовыйДокумент; 
		Если Выборка.Кодировка = "ANSI" Тогда
			Кодировка = КодировкаТекста.ANSI;
		ИНачеЕсли Выборка.Кодировка = "OEM" Тогда
			Кодировка = КодировкаТекста.OEM;
		ИНачеЕсли Выборка.Кодировка = "UTF8" Тогда
			Кодировка = КодировкаТекста.UTF8;
		ИНаче
			Кодировка = КодировкаТекста.ANSI;
		КонецЕсли;
		
		Текст.ДобавитьСтроку("[HEADER]");
		Если Поставщик.Код = 403 Тогда
			Текст.ДобавитьСтроку("ПОСТАВКА;;60;0;;3294;" + Формат(СокрЛП(Выборка.КодАптекиВнешн),"ЧГ=0")+ ";");
		Иначе
			Текст.ДобавитьСтроку("ПОСТАВКА;;90;0;;54849;" + Формат(СокрЛП(Выборка.КодАптекиВнешн),"ЧГ=0")+ ";");
		КонецЕсли;
		Текст.ДобавитьСтроку("[BODY]");
		Для Каждого Стр из ТЗ Цикл
			Инд=0;
			ВремТекст = "";
			Для к=0 По ТЗ.Колонки.Количество() - 1 Цикл  //пробегаем по значениям полей в строке
				Значение = стр.Получить(к);
				Если ТипЗнч(Значение) = Тип("Число") Тогда
					Значение = ФОрмат(Значение,"ЧРД=.; ЧГ=0");
				ИначеЕсли ТипЗнч(Значение) = Тип("Строка") Тогда
					Значение = СтрЗаменить(СокрЛП(Значение)," ","");
				КонецЕсли;
				#Если Клиент Тогда
					состояние(Значение);
				#КонецЕсли
				ВремТекст = ВремТекст + "" + СокрЛП(Значение) + ";";
				Инд=Инд+1;
			КонецЦикла;
			Текст.ДобавитьСтроку(ВремТекст);
		КонецЦикла;		
		Попытка
			Текст.Записать(ИмяФайла,Кодировка);
		Исключение
			Ошибка = Истина;
			Возврат Ложь;
			//Сообщить(ОписаниеОшибки());
			//Сообщить("Заказ не выгружен!",СтатусСообщения.Важное);
		КонецПопытки;
		
		//Проверяем и если надо, то отправляем поставщику по почте заказ
		СписокАдресов = ПолучитьАдресаРассылки();
		
		Если СписокАдресов.Количество() > 0 Тогда
			ОтправитьЗаказПоПочте(СписокАдресов,ИмяФайла);
		КонецЕсли;
		// отправили по почте 
		ЗаписатьВИсториюИзменения(ИмяФайла);
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;
		
	ИначеЕсли  Найти(НРег(Выборка.Маска), ".txt") > 0  Тогда
		
	
		Если Поставщик.Код = 421 Тогда
			Текст = Новый ТекстовыйДокумент; 
			Если Выборка.Кодировка = "ANSI" Тогда
				Кодировка = КодировкаТекста.ANSI;
			ИНачеЕсли Выборка.Кодировка = "OEM" Тогда
				Кодировка = КодировкаТекста.OEM;
			ИНачеЕсли Выборка.Кодировка = "UTF8" Тогда
				Кодировка = КодировкаТекста.UTF8;
			ИНаче
				Кодировка = КодировкаТекста.ANSI;
			КонецЕсли;
			Текст.ДобавитьСтроку("Клиент       : 10150253, Аптечка Торговая сеть ОАО г.Ярославль");
			Текст.ДобавитьСтроку("Получатель   : "+ СокрЛП(Выборка.КодАптекиВнешн) +", "+ Склад);
			Текст.ДобавитьСтроку("Оплата       : ");
			Текст.ДобавитьСтроку("ID заказа    : ");
			Текст.ДобавитьСтроку("Дата заказа  : " + ТекущаяДата());
			Текст.ДобавитьСтроку("Позиций      : " + Формат(Товар.Количество(),"ЧГ=0"));
			Текст.ДобавитьСтроку("Версия EXE   : ");
			Текст.ДобавитьСтроку("Версия CFG   : ");			
			Текст.ДобавитьСтроку("Статус CFG   : ");
			Текст.ДобавитьСтроку("Прайс-лист   : " + Поставщик.ДатаПрайсЛиста);
			Текст.ДобавитьСтроку("Комментарий  : " + СокрЛП(Комментарий));
			Текст.ДобавитьСтроку("");
			Для Каждого Стр из Товар Цикл
				
				Код =  Прав("           " + СокрЛП(стр.КодТовараПоставщика),11);
				Кол	= Прав("          " + ФОрмат(стр.Количество,"ЧДЦ=0; ЧГ=0"),10);
				
				//Инд=0;
				//ВремТекст = "      ";  // 6 пробелов
				//КоличествоПробегов = ТЗ.Колонки.Количество() - 1;
				//Для к=0 По КоличествоПробегов Цикл  //пробегаем по значениям полей в строке
				//	Значение = стр.Получить(к);
				//	Если ТипЗнч(Значение) = Тип("Число") Тогда
				//		Значение = ФОрмат(Значение,"ЧДЦ=0; ЧГ=0");
				//		Если (Значение = Неопределено) или (Значение = "") или (Значение = NULL) Тогда
				//			Значение = 0;
				//		КонецЕсли;
				//	ИначеЕсли ТипЗнч(Значение) = Тип("Строка") Тогда
				//		Значение = СтрЗаменить(СокрЛП(Значение)," ","");
				//	КонецЕсли;
				//	состояние(Значение);
				//	Если к = КоличествоПробегов Тогда
				//		ВремТекст = ВремТекст + "" + СокрЛП(Значение);  // разделитель - 9 пробелов
				//	Иначе
				//		ВремТекст = ВремТекст + "" + СокрЛП(Значение) + "         ";  // разделитель - 9 пробелов
				//	КонецЕсли;
				//	Инд=Инд+1;
				//КонецЦикла;
				Текст.ДобавитьСтроку(Код + "" + Кол);				
			КонецЦикла;
			ИтоговыйФайл = "" + КаталогЗаказа + Слэш + ИНН + "_" + НомерДокумента +".tsa";
		ИначеЕсли (Поставщик.Код = 53) или (Поставщик.Код = 9) Тогда //поставщик = Лореаль или Иннеов
			Текст = Новый ТекстовыйДокумент; 
			Если Выборка.Кодировка = "ANSI" Тогда
				Кодировка = КодировкаТекста.ANSI;
			ИНачеЕсли Выборка.Кодировка = "OEM" Тогда
				Кодировка = КодировкаТекста.OEM;
			ИНачеЕсли Выборка.Кодировка = "UTF8" Тогда
				Кодировка = КодировкаТекста.UTF8;
			ИНаче
				Кодировка = КодировкаТекста.ANSI;
			КонецЕсли;
			
			Для каждого стр из Товар Цикл
					
				Текст.ДобавитьСтроку(""+СокрЛП(Выборка.КодАптекиВнешн) + Прав("        " + Формат(Номер,"ЧГ=0"),8) + "" + Лев(СокрЛП(Склад.Наименование),28) + "  " + Формат(ТекущаяДата(),"ДФ=yyyyMMdd") + "" + Лев(СокрЛП(стр.КодТовараПоставщика) + "        ",8) + Прав("                   " + стр.Количество,19));
				
			КонецЦикла;
			ИтоговыйФайл = "" + КаталогЗаказа + Слэш + "CDE23626.txt";	
			
		Иначе
			//------------------<Создание текстового заказа формата SST>-------------------Virus----27.01.2008
			Текст = Новый ТекстовыйДокумент; 
			Если Выборка.Кодировка = "ANSI" Тогда
				Кодировка = КодировкаТекста.ANSI;
			ИНачеЕсли Выборка.Кодировка = "OEM" Тогда
				Кодировка = КодировкаТекста.OEM;
			ИНачеЕсли Выборка.Кодировка = "UTF8" Тогда
				Кодировка = КодировкаТекста.UTF8;
			ИНаче
				Кодировка = КодировкаТекста.ANSI;
			КонецЕсли;
			
			Если Поставщик.Код = 215 Тогда
				Текст.ДобавитьСтроку("Код товара	Количество ");
			КонецЕсли;
			
			Для Каждого Стр из ТЗ Цикл
				Инд=0;
				ВремТекст = "";
				Для к=0 По ТЗ.Колонки.Количество() - 1 Цикл  //пробегаем по значениям полей в строке
					Значение = стр.Получить(к);
					Если ТипЗнч(Значение) = Тип("Число") Тогда
						Значение = ФОрмат(Значение,"ЧРД=.;ЧГ=0");
						Если (Значение = Неопределено) или (Значение = "") или (Значение = NULL) Тогда
							Значение = 0;
						КонецЕсли;
					ИначеЕсли ТипЗнч(Значение) = Тип("Строка") Тогда
						Значение = СтрЗаменить(СокрЛП(Значение)," ","");
					КонецЕсли;
					#Если Клиент Тогда
    					состояние(Значение);
					#КонецЕсли
					Если Поставщик.Код = 215 Тогда
						ВремТекст = ВремТекст + "" + СокрЛП(Значение) + "	";  // разделитель - табуляция
					Иначе
						ВремТекст = ВремТекст + "" + СокрЛП(Значение) + ";";
					КонецЕсли;
					Инд=Инд+1;
				КонецЦикла;
				Текст.ДобавитьСтроку(ВремТекст);
			КонецЦикла;		
			
			Если Поставщик.Код = 215 Тогда
				Текст.ДобавитьСтроку("# заказ № " + Номер + " от " + Склад.Наименование);
				Текст.ДобавитьСтроку("#Комментарий2");
				Текст.ДобавитьСтроку("$AddressId=" + Формат(СокрЛП(Выборка.КодАптекиВнешн),"ЧГ=0")+ "" );
			КонецЕсли;
			ИтоговыйФайл = "" + КаталогЗаказа + Слэш + "in" + ИНН + "_" + НомерДокумента +".txt";
		КонецЕсли; 
		
		Попытка
			Текст.Записать(ИтоговыйФайл,Кодировка);
		Исключение
			Ошибка = Истина;
			Возврат Ложь;
		КонецПопытки;
		
		//Проверяем и если надо, то отправляем поставщику по почте заказ
		СписокАдресов = ПолучитьАдресаРассылки();
		
		Если СписокАдресов.Количество() > 0 Тогда
			ОтправитьЗаказПоПочте(СписокАдресов,ИтоговыйФайл);
			Попытка
				УдалитьФайлы(ИтоговыйФайл);
			Исключение
				#Если Клиент Тогда
					Предупреждение("Не удалось удалить файл:" + ИтоговыйФайл + "
					| " + ОписаниеОшибки() + "",5 ); 
				#КонецЕсли
			КонецПопытки;
		КонецЕсли;
		// отправили по почте 
		ЗаписатьВИсториюИзменения(ИтоговыйФайл);
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;
		
		
	ИначеЕсли  Найти(НРег(Выборка.Маска), ".xml") > 0 Тогда
		
		ИмяФайла = КаталогЗаказа + Слэш + "order" + ИНН + "_"+ НомерДокумента+".xml";
		КолСтрок = Товар.Количество();
		Если КолСтрок = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
		//Найдем код аптеки
		КодАптеки = СокрЛП(Выборка.КодАптекиВнешн);

		
		ТХТ = "ВЫБРАТЬ
		      |	ПоставщикиКодыПлательщика.КодПлательщика как КодПлательщика
		      |ИЗ
		      |	Справочник.Поставщики.КодыПлательщика КАК ПоставщикиКодыПлательщика
		      |ГДЕ
		      |	ПоставщикиКодыПлательщика.Фирма = &Фирма
		      |	И ПоставщикиКодыПлательщика.Ссылка = &Поставщик";
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Фирма",Склад.Фирма);
		Запрос.УстановитьПараметр("Поставщик",Поставщик); 
		КодПлательщика = Формат(Запрос.Выполнить().Выгрузить().Получить(0).КодПлательщика,"ЧГ=0");
		
		XML = Новый ЗаписьXML(); 
		XML.ОткрытьФайл(ИмяФайла, "WINDOWS-1251"); 
		XML.ЗаписатьОбъявлениеXML(); 
		XML.ЗаписатьНачалоЭлемента("КоммерческаяИнформация");
		XML.ЗаписатьАтрибут("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance"); 
		XML.ЗаписатьАтрибут("xsi:noNamespaceSchemaLocation", "CommerceML.xsd"); 
		XML.ЗаписатьАтрибут("ВерсияСхемы", "2.021"); 
		XML.ЗаписатьАтрибут("ДатаФормирования",Формат(ТекущаяДата(),"ДФ=yyyy-MM-dd""T""HH:mm:ss")); 
		
		XML.ЗаписатьНачалоЭлемента("Документ"); 
		СоздатьЭлементXMLУзла(XML,"Ид",Формат(Номер,"ЧГ=0"));
		СоздатьЭлементXMLУзла(XML,"Номер","-0");
		СоздатьЭлементXMLУзла(XML,"Дата",Формат(Дата,"ДФ=yyyy-MM-dd"));
		СоздатьЭлементXMLУзла(XML,"ХозОперация","Заказ товара");
		СоздатьЭлементXMLУзла(XML,"Роль","Покупатель");
		СоздатьЭлементXMLУзла(XML,"Валюта","RUR");
		СоздатьЭлементXMLУзла(XML,"Курс","1.00");
		СоздатьЭлементXMLУзла(XML,"Сумма",Формат(Товар.Итог("Сумма"),"ЧДЦ=2; ЧРД=.; ЧГ=0"));
		XML.ЗаписатьНачалоЭлемента("Контрагенты"); 
		XML.ЗаписатьНачалоЭлемента("Контрагент"); 
			СоздатьЭлементXMLУзла(XML,"Ид",СокрЛП(КодПлательщика));
			СоздатьЭлементXMLУзла(XML,"ОфициальноеНаименование",СтрЗаменить(Склад.Фирма.Наименование,"""",""));
			СоздатьЭлементXMLУзла(XML,"Роль","Плательщик");
		XML.ЗаписатьКонецЭлемента(); //
		XML.ЗаписатьНачалоЭлемента("Контрагент"); 
			СоздатьЭлементXMLУзла(XML,"Ид",КодАптеки);
			СоздатьЭлементXMLУзла(XML,"ОфициальноеНаименование",СокрЛП(Склад.Наименование));
			СоздатьЭлементXMLУзла(XML,"Роль","Получатель");
		XML.ЗаписатьКонецЭлемента(); //
		XML.ЗаписатьНачалоЭлемента("Контрагент"); 
			СоздатьЭлементXMLУзла(XML,"Ид",СокрЛП(КодПлательщика));
			СоздатьЭлементXMLУзла(XML,"ОфициальноеНаименование"," ");
			СоздатьЭлементXMLУзла(XML,"Роль","Покупатель");
		XML.ЗаписатьКонецЭлемента(); //		
		XML.ЗаписатьКонецЭлемента(); // 
		СоздатьЭлементXMLУзла(XML,"Время","00:00:00");
		СоздатьЭлементXMLУзла(XML,"СрокПлатежа","-9999-12-31");
		СоздатьЭлементXMLУзла(XML,"Комментарий",СокрЛП(Комментарий)+" ");
		XML.ЗаписатьНачалоЭлемента("Товары"); 
		Для каждого стр из Товар Цикл
			
			XML.ЗаписатьНачалоЭлемента("Товар"); 
				СоздатьЭлементXMLУзла(XML,"Ид",СокрЛП(стр.КодТовараПоставщика));
				СоздатьЭлементXMLУзла(XML,"Наименование",СокрЛП(стр.НаименованиеТовараПоставщика));
				СоздатьЭлементXMLУзла(XML,"БазоваяЕдиница"," ");
				XML.ЗаписатьНачалоЭлемента("ЗначенияСвойств");
				XML.ЗаписатьКонецЭлемента(); //		
				СоздатьЭлементXMLУзла(XML,"ИдКаталога","1D9F7140-0F9D-44B0-8E99-E83E15A268C6");
				СоздатьЭлементXMLУзла(XML,"ЦенаЗаЕдиницу",Формат(стр.Цена,"ЧДЦ=2; ЧРД=.; ЧГ=0"));
				СоздатьЭлементXMLУзла(XML,"Количество",Формат(стр.Количество,"ЧРД=.; ЧГ=0"));
				СоздатьЭлементXMLУзла(XML,"Сумма",Формат(стр.Сумма,"ЧДЦ=2; ЧРД=.; ЧГ=0"));
			XML.ЗаписатьКонецЭлемента(); // 
		КонецЦикла;
		XML.ЗаписатьКонецЭлемента(); //Товары закрыли
		XML.ЗаписатьНачалоЭлемента("ЗначенияРеквизитов");
			СоздатьДвойнойЭлементXMLУзла(XML,"S_START",Формат(Дата,"ДФ=yyyy-MM-dd""T""HH:mm:ss"));
			СоздатьДвойнойЭлементXMLУзла(XML,"S_FINISH",Формат(ТекущаяДата(),"ДФ=yyyy-MM-dd""T""HH:mm:ss"));
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAKWASSEND","false");
			СоздатьДвойнойЭлементXMLУзла(XML,"PM_IDX","-0");
			СоздатьДвойнойЭлементXMLУзла(XML,"MAX2PAY","90");
			СоздатьДвойнойЭлементXMLУзла(XML,"DELIVERY","1");
			СоздатьДвойнойЭлементXMLУзла(XML,"SUMRUBPRIC",Формат(Товар.Итог("Сумма"),"ЧДЦ=2; ЧРД=.; ЧГ=0"));
			СоздатьДвойнойЭлементXMLУзла(XML,"PRICE_IDX",СокрЛП(Поставщик.КодПрайса));
			СоздатьДвойнойЭлементXMLУзла(XML,"PRICE_NAME"," ");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAKTYPE","-0");
			СоздатьДвойнойЭлементXMLУзла(XML,"PAYER",СокрЛП(КодПлательщика));
			СоздатьДвойнойЭлементXMLУзла(XML,"RECIPIENT",КодАптеки);
			СоздатьДвойнойЭлементXMLУзла(XML,"BUYER",СокрЛП(КодПлательщика));
			СоздатьДвойнойЭлементXMLУзла(XML,"NAL_BNAL","false");
			СоздатьДвойнойЭлементXMLУзла(XML,"NUM_POS",Формат(КолСтрок,"ЧДЦ=0; ЧГ=0"));
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_STATUS","-0");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_STATUS_STR"," ");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_UINT",Формат(Номер,"ЧГ=0"));
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_UDEC","-0");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_UDAT","1899-12-30T00:00:00");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAK_USTR"," ");
			//СоздатьДвойнойЭлементXMLУзла(XML,"IMPORT_FILE_NAME"," ");
			СоздатьДвойнойЭлементXMLУзла(XML,"ZAKTYPE_STR","ПОСТАВКА");
		XML.ЗаписатьКонецЭлемента(); //ЗначенияРеквизитов закрыли
		XML.ЗаписатьКонецЭлемента(); //Документ закрыли
		XML.ЗаписатьКонецЭлемента(); //Коммерческую информацию закрыли
		XML.Закрыть();
		
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		ЗаписатьВИсториюИзменения(ИмяФайла);	
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;

	ИначеЕсли Найти(НРег(Выборка.Маска), ".edi") > 0 Тогда
		
		ИмяФайла = КаталогЗаказа + Слэш + "order" + ИНН + "_" + НомерДокумента +".xml";
		КолСтрок = Товар.Количество();
		Если КолСтрок = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
		//Найдем код аптеки
		КодАптеки = СокрЛП(Выборка.КодАптекиВнешн);

		
		ТХТ = "ВЫБРАТЬ
		      |	ПоставщикиКодыПлательщика.КодПлательщика как КодПлательщика
		      |ИЗ
		      |	Справочник.Поставщики.КодыПлательщика КАК ПоставщикиКодыПлательщика
		      |ГДЕ
		      |	ПоставщикиКодыПлательщика.Фирма = &Фирма
		      |	И ПоставщикиКодыПлательщика.Ссылка = &Поставщик";
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Фирма",Склад.Фирма);
		Запрос.УстановитьПараметр("Поставщик",Поставщик); 
		КодПлательщика = Формат(Запрос.Выполнить().Выгрузить().Получить(0).КодПлательщика,"ЧГ=0");
		
		XML = Новый ЗаписьXML(); 
		XML.ОткрытьФайл(ИмяФайла, "UTF-8"); 
		XML.ЗаписатьОбъявлениеXML(); 
		
		XML.ЗаписатьНачалоЭлемента("Document-Order"); 
		XML.ЗаписатьНачалоЭлемента("Order-Header"); 
			СоздатьЭлементXMLУзла(XML,"OrderNumber",Формат(Номер,"ЧГ=0"));
			СоздатьЭлементXMLУзла(XML,"OrderDate",Формат(Дата,"ДФ=dd/MM/yyyy"));
			СоздатьЭлементXMLУзла(XML,"ExpectedDeliveryDate",Формат(Дата,"ДФ=dd/MM/yyyy"));
		XML.ЗаписатьКонецЭлемента(); // Конец элемента Order-Header
		XML.ЗаписатьНачалоЭлемента("Order-Parties"); 		
			XML.ЗаписатьНачалоЭлемента("Buyer");
				СоздатьЭлементXMLУзла(XML,"ILN",СокрЛП(КодПлательщика));
			XML.ЗаписатьКонецЭлемента(); // Конец элемента Buyer
			XML.ЗаписатьНачалоЭлемента("Seller");
				СоздатьЭлементXMLУзла(XML,"ILN",СокрЛП(КодПлательщика));
				СоздатьЭлементXMLУзла(XML,"CodeByBuyer",СокрЛП(КодПлательщика));
			XML.ЗаписатьКонецЭлемента(); // Конец элемента Seller
			XML.ЗаписатьНачалоЭлемента("DeliveryPoint");
				СоздатьЭлементXMLУзла(XML,"ILN",КодАптеки);
			XML.ЗаписатьКонецЭлемента(); // Конец элемента DeliveryPoint			
			XML.ЗаписатьНачалоЭлемента("Invoicee");
				СоздатьЭлементXMLУзла(XML,"ILN",СокрЛП(КодПлательщика));
			XML.ЗаписатьКонецЭлемента(); // Конец элемента Invoicee	
		XML.ЗаписатьКонецЭлемента(); // Конец элемента Order-Parties
		
		XML.ЗаписатьНачалоЭлемента("Order-Lines"); 
		Для каждого стр из Товар Цикл
			XML.ЗаписатьНачалоЭлемента("Line"); 
				XML.ЗаписатьНачалоЭлемента("Line-Item"); 
					СоздатьЭлементXMLУзла(XML,"LineNumber",Формат(стр.НомерСтроки,"ЧГ=0"));
					СоздатьЭлементXMLУзла(XML,"EAN","");
					СоздатьЭлементXMLУзла(XML,"BuyerItemCode",Формат(стр.Товар.Код,"ЧГ=0"));
					СоздатьЭлементXMLУзла(XML,"SupplierItemCode",СокрЛП(стр.КодТовараПоставщика));
					СоздатьЭлементXMLУзла(XML,"ItemDescription",СокрЛП(стр.НаименованиеТовараПоставщика));
					СоздатьЭлементXMLУзла(XML,"OrderedQuantity",Формат(стр.Количество,"ЧДЦ=0; ЧГ=0"));
					СоздатьЭлементXMLУзла(XML,"UnitOfMeasure","");
				XML.ЗаписатьКонецЭлемента(); //Конец Line-Item
			XML.ЗаписатьКонецЭлемента(); //Конец Line 
		КонецЦикла;
		XML.ЗаписатьКонецЭлемента(); //Товары Order-Lines
		XML.ЗаписатьКонецЭлемента(); //Конец Document-Order
		//XML.ЗаписатьКонецЭлемента(); //Документ закрыли
		
		XML.Закрыть();
		Если Поставщик.FTPПоставщика = Истина Тогда
			//здесь еще надо обработку ошибок сделать
			ОМ19_ВыгрузитьОдинФайл_На_FTP(Поставщик,ИмяФайла,"/Orders/");
		КонецЕсли;	
		Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику;
		ЗаписатьВИсториюИзменения(ИмяФайла);	
		
		Для н=1 по 3 Цикл
			Попытка
				Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;
		

	КонецЕсли;
	
	//Если Склад.ТипСклада = Перечисления.ТипыМХ.Розн Тогда
	//	ВыгрузитьИнформациюВАптеку();
	//КонецЕсли;
	ЗафиксироватьВыгрузкуИндивидуальныхПозиций();
	
	ПроверитьДокументНаНАчалоВыгрузки();    //ENT-1004
	Возврат Истина;
	
КонецФункции

//ENT-1004+++
Процедура ПроверитьДокументНаНАчалоВыгрузки()
	Запрос = новый запрос;
	ЗАпрос.Текст = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(Заказ.Ссылка) КАК Всего,
	               |	0 КАК ВсегоБезТекущего
	               |ИЗ
	               |	Документ.Заказ КАК Заказ
	               |ГДЕ
	               |	Заказ.Дата > &НачалоДня
	               |	И Заказ.Статус = ЗНАЧЕНИЕ(перечисление.СтатусЗаказаПоставщику.ВыгруженПоставщику)
	               |	И Заказ.Поставщик.Код = 3055
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	0,
	               |	КОЛИЧЕСТВО(Заказ.Ссылка)
	               |ИЗ
	               |	Документ.Заказ КАК Заказ
	               |ГДЕ
	               |	Заказ.Дата > &НачалоДня
	               |	И Заказ.Статус = ЗНАЧЕНИЕ(перечисление.СтатусЗаказаПоставщику.ВыгруженПоставщику)
	               |	И Заказ.Ссылка <> &ТекДок
	               |	И Заказ.Поставщик.Код = 3055";
	ЗАпрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДата()));
	ЗАпрос.УстановитьПараметр("ТекДок", Ссылка);
	Выборка = ЗАпрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Если Выборка.Всего = 1 и Выборка.ВсегоБезТекущего = 0 Тогда
		ОбщегоНазначения.ПослатьСообщениеВТелеграм("Стартовала выгрузка заказов поставщику ДДП",64);	//ENT-1584
	КонецЕсли;
КонецПроцедуры
//---


Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если НЕ Поставщик.Пустая() Тогда
		ПустаяСсылка = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
		
		Если ТипЗаказа = Перечисления.ТипЗаявки.ИнтернетЗаказ Тогда
			Для каждого стр из Товар Цикл
				Если стр.ЦенаРозн > 0 и НЕ стр.Товар = ПустаяСсылка Тогда
					ДвижениеИЗ = Движения.ИндивидуальныеЗаказы.Добавить();
					ДвижениеИЗ.ВидДвижения = ВидДвиженияНакопления.Приход;
					ДвижениеИЗ.Период = Дата;
					ДвижениеИЗ.Поставщик = Поставщик;
					ДвижениеИЗ.Склад = Склад;
					ДвижениеИЗ.Товар = стр.Товар;
					ДвижениеИЗ.Количество = стр.Количество;
					ДвижениеИЗ.ДатаЗаказа = Дата;
					ДвижениеИЗ.ЦенаЗакуп = стр.Цена;
					ДвижениеИЗ.ЦенаРозн	= стр.ЦенаРозн;
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если Склад.ТипСклада = Перечисления.ТипыМХ.Розн и НЕ Склад.ИнтернетАптека = Истина Тогда
				Для Каждого стр Из Товар Цикл
					Если стр.Товар = ПустаяСсылка Тогда
						Продолжить;
					КонецЕсли;
					Движение = Движения.ЗаказПоставщику.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
					Движение.Период = Дата;
					Движение.Поставщик = Поставщик;
					Движение.Склад = Склад;
					Движение.Товар = стр.Товар;
					Движение.Количество = стр.Количество;
					Движение.ДатаЗаказа = Дата;
					Движение.ЦенаЗакуп = стр.Цена;
					
					Если стр.ЦенаРозн > 0  Тогда
						ДвижениеИЗ = Движения.ИндивидуальныеЗаказы.Добавить();
						ДвижениеИЗ.ВидДвижения = ВидДвиженияНакопления.Приход;
						ДвижениеИЗ.Период = Дата;
						ДвижениеИЗ.Поставщик = Поставщик;
						ДвижениеИЗ.Склад = Склад;
						ДвижениеИЗ.Товар = стр.Товар;
						ДвижениеИЗ.Количество = стр.Количество;
						ДвижениеИЗ.ДатаЗаказа = Дата;
						ДвижениеИЗ.ЦенаЗакуп = стр.Цена;
						ДвижениеИЗ.ЦенаРозн	= стр.ЦенаРозн;
					КонецЕсли;
					
					
				КонецЦикла;
			ИначеЕсли Склад.ИнтернетАптека Тогда
				Если НЕ Поставщик.Код = 3055 Тогда
					Для Каждого стр Из Товар Цикл
						Если стр.Товар = ПустаяСсылка Тогда
							Продолжить;
						КонецЕсли;
						Движение = Движения.ЗаказПоставщику.Добавить();
						Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
						Движение.Период = Дата;
						Движение.Поставщик = Поставщик;
						Движение.Склад = Склад;
						Движение.Товар = стр.Товар;
						Движение.Количество = стр.Количество;
						Движение.ДатаЗаказа = Дата;
						Движение.ЦенаЗакуп = стр.Цена;
					КонецЦикла;
				КОнецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры                                

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	//Если (ЭтотОбъект.Проведен = Истина) 
	//И (Статус = Перечисления.СтатусЗаказаПоставщику.ВыгруженПоставщику)
	//И НЕ Поставщик.Пустая() Тогда
	//	#Если Клиент Тогда
	//		Предупреждение("Нельзя распроводить документ, выгруженный поставщику!");
	//		Отказ = Истина;
	//	#КонецЕсли
	//КонецЕсли;
	#Если Клиент Тогда	
		Если (ЭтотОбъект.Проведен = Истина) 
			И НЕ Поставщик.Пустая() Тогда
			
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Подтвердите отмену проведения документа", Режим, 3, КодВозвратаДиалога.Нет,,КодВозвратаДиалога.Нет);
			Если Ответ = КодВозвратаДиалога.Нет или Ответ = КодВозвратаДиалога.Таймаут Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			Если ПроверитьДокументНаНаличиеТовараВПути() = Ложь Тогда
				Предупреждение("По документу уже происходило закрытие. Отмена проведения невозможна.",4);
				Отказ = Истина;
			Иначе
				стрИзм = Изменения.Добавить();
				стрИзм.Дата = ТекущаяДата();
				стрИзм.Сотрудник = ПараметрыСеанса.ТекущийСотр;
				стрИзм.ТипИзм = Перечисления.ДействияНадДокументами.ОтменаПроведения;
				стрИзм.КомментарийИзменения = "Отмена проведения";
			КонецЕсли;
		КонецЕсли;
	#КонецЕсли

	

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДок = Товар.Итог("Сумма");
КонецПроцедуры
