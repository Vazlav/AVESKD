
Процедура ЗаписатьЭлементXML(ЗаписьXML, Имя, Значение) 
	
	//ЗаписьXML.ЗаписатьНачалоЭлемента(Имя);
	//ЗаписьXML.ЗаписатьТекст(Значение);
	//ЗаписьXML.ЗаписатьКонецЭлемента();
	Если Значение = "" Тогда
		ЗаписьXML.ДобавитьСтроку("<" + Имя + "/>");
	Иначе
		ЗаписьXML.ДобавитьСтроку("<" + Имя + ">" + Значение + "</" + Имя + ">");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьНачалоЭлемента(ЗаписьXML,Имя)
	
	ЗаписьXML.ДобавитьСтроку("<" + Имя + ">");
	
КонецПроцедуры

Процедура ЗаписатьКонецЭлемента(ЗаписьXML,Имя)
	
	ЗаписьXML.ДобавитьСтроку("</" + Имя + ">");
	
КонецПроцедуры



Процедура ВыгрузитьДляСтарогоПО()
	
	Если НЕ Проведен Тогда
		#Если Клиент Тогда
			Сообщить("Документ непроведен. Выгрузка невозможна.",СтатусСообщения.Важное);
		#КонецЕсли
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Минимум(Мотивация.ДействиеВоВсехАптеках)  как Действие
	               |ИЗ
	               |	Документ.Мотивация КАК Мотивация
	               |ГДЕ
	               |	Мотивация.КонецПериода >= &Дата
	               |	И Мотивация.Проведен = ИСТИНА";
				   
	Запрос.УстановитьПараметр("Дата",ТекущаяДата());
	Запрос.УстановитьПараметр("Документ",Ссылка);
	Рез = Запрос.Выполнить();
	Выборка = Рез.Выбрать();
	Выборка.Следующий();
	Если Выборка.Действие = NULL Тогда
		Возврат;
	КонецЕсли;
	
	Если Выборка.Действие = Истина Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	МотивацияТовар.КодТовара,
		               |	МотивацияТовар.НомерСтроки,
		               |	МотивацияТовар.Ссылка.Номер КАК НомерДок,
		               |	МотивацияТовар.Ссылка.НачалоПериода КАК НачалоПериода,
		               |	МотивацияТовар.Ссылка.КонецПериода КАК КонецПериода,
		               |	МотивацияТовар.КоличествоБаллов,
		               |	МотивацияТовар.Ссылка.Дата КАК ДатаДокумента
		               |ИЗ
		               |	Документ.Мотивация.Товар КАК МотивацияТовар
		               |ГДЕ
		               |	МотивацияТовар.Ссылка.КонецПериода >= &Дата
		               |	И МотивацияТовар.Ссылка.Проведен = ИСТИНА и МотивацияТовар.Отменена = Ложь
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	МотивацияТовар.Ссылка.Номер,
		               |	МотивацияТовар.НомерСтроки";

		Запрос.УстановитьПараметр("Дата",ТекущаяДата());			   
		Рез = Запрос.Выполнить();
		
		ДБФ=Новый XBAse;
		
		ДБФ.Кодировка=КодировкаXBase.OEM; // WIN 1251
		
		ДБФ.поля.Добавить("ndoc","N",10,0);
		ДБФ.поля.Добавить("ddoc","d",);
		ДБФ.поля.Добавить("sdoc","N",10,0);
		ДБФ.поля.Добавить("id_firm","N",10,0);
		ДБФ.поля.Добавить("id_dep","N",10,0);

		ДБФ.поля.Добавить("id_good","N",12,0);
		ДБФ.поля.Добавить("start_dt","d",,);
		ДБФ.поля.Добавить("end_dt","d",,);
		ДБФ.поля.Добавить("scores","N",10,2);
		
		ИмяФайла = КаталогВременныхФайлов() + "ascores.dbf";
		ДБФ.СоздатьФайл(ИмяФайла); 		
		
		
		Выборка = рез.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДБФ.Добавить();
			ДБФ.ndoc = Выборка.НомерДок;
			ДБФ.ddoc = Выборка.ДатаДокумента;
			ДБФ.sdoc = Выборка.НомерСтроки;
			ДБФ.id_firm = 0;
			ДБФ.id_dep = 0;
	
			ДБФ.id_good = Выборка.КодТовара;
			ДБФ.start_dt =  Выборка.НачалоПериода;
			ДБФ.end_dt  =  Выборка.КонецПериода;
			ДБФ.scores = Выборка.КоличествоБаллов;
			ДБФ.Записать();  
		КонецЦикла;
		
		Если ДБФ.Открыта() Тогда
			ДБФ.ЗакрытьФайл();
		КонецЕсли;
		
		ИмяАрхива = СтрЗаменить(ИмяФайла,".dbf",".zip");
		
		ОМ17_ЗапаковатьФайлИСкопироватьЕгоВПапку (ИмяФайла,ИмяАрхива);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	МестаХранения.КаталогОбмена
		               |ИЗ
		               |	Справочник.МестаХранения КАК МестаХранения
		               |ГДЕ
		               |	МестаХранения.ПометкаУдаления = ЛОЖЬ
		               |	И МестаХранения.КаталогОбмена <> """"
		               |	И МестаХранения.СторонаДоговораКомиссии <> ЗНАЧЕНИЕ(Перечисление.СтороныДоговораКомиссии.Комитент)
		               |	И МестаХранения.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыМХ.Розн)
		               |	И МестаХранения.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)";
		Рез = Запрос.Выполнить();
		Выборка = Рез.Выбрать();
		Пока Выборка.Следующий() Цикл
			Попытка
				КопироватьФайл(ИмяАрхива,Выборка.КаталогОбмена + "\ascores.zip"	);
				//Сообщить(""+Выборка.КаталогОбмена + "\gscores.zip");
				//Возврат 0 ;
			Исключение
				#Если Клиент Тогда
					Сообщить(""+ ОписаниеОшибки());
				#КонецЕсли
			КонецПопытки;
		КонецЦикла;

		Выгружен = Истина;
		Изменение = Изменения.Добавить();
		Изменение.Дата = ТекущаяДата();
		Изменение.КомментарийИзменения = "Выгружен в аптеки";
		Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
		Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;		
		Записать(РежимЗаписиДокумента.Запись);
		#Если Клиент Тогда
			Предупреждение("Данные выгружены в аптеки.",5);
		#КонецЕсли		
	КонецЕсли;

	
КонецПроцедуры

Процедура ВыгрузитьДляНовогоПО()

	
	Если НЕ Проведен Тогда
		#Если Клиент Тогда
			Предупреждение("Документ непроведен. Выгрузка невозможна.");
		#КонецЕсли
		Возврат;
	КонецЕсли;	
	
	Если Товар.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ДобавитьСтроку("<document>"); 
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "PRIORITY"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<hdr>");
		ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Номер,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXML(ЗаписьXML, "start_dt",	Формат(НачалоПериода,"ДФ=dd.MM.yyyy") );				
		ЗаписатьЭлементXML(ЗаписьXML, "end_dt",		Формат(КонецПериода,"ДФ=dd.MM.yyyy") );				
		ЗаписатьЭлементXML(ЗаписьXML, "exceptional",	Формат(Число(Исключительный),"ЧН=0; ЧГ=0") );				
	ЗаписьXML.ДобавитьСтроку("</hdr>");
	ЗаписьXML.ДобавитьСтроку("<str>");
	Для каждого стр из Товар Цикл
		Если стр.Отменена Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(стр.КодТовара,"ЧГ=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "amount",		Формат(стр.КоличествоБаллов,"ЧН=0; ЧГ=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "positioning",Формат(стр.Позиционирование,"ЧН=0; ЧГ=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");
		
		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</str>");
	
	
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ВесьТекст = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	Если ДействиеВоВсехАптеках Тогда
		
		КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисШВ");
		Если КодСчетчика = -1 Тогда
			КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисШВ");
			Если КодСчетчика = -1 Тогда
				Возврат;	
			КонецЕсли;
		КонецЕсли;
		
		МЗ = РегистрыСведений.ОфисАптекаШироковещание.СоздатьМенеджерЗаписи();
		МЗ.Код = КодСчетчика;
		МЗ.ТипУпаковки = "PRIORITY";
		МЗ.Приоритет = 1;
		МЗ.ВерсияФормата = 1;
		МЗ.ИмяФайла = "priority_" + Формат(Номер,"ЧГ=0") +  "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
		МЗ.ИдентификаторКодировки = 1;
		МЗ.ХМЛСтрока = ВесьТекст;
		МЗ.Записать();	
		
	КонецЕсли;
	
	Выгружен = истина;
	
	Изменение = Изменения.Добавить();
	Изменение.Дата = ТекущаяДата();
	Изменение.КомментарийИзменения = "Выгружен в аптеки с новым ПО";
	Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;		
	Записать(РежимЗаписиДокумента.Запись);
	
	#Если Клиент Тогда
		Предупреждение("Документ выгружен!");	
	#КонецЕсли
	
	
	
КонецПроцедуры


Процедура Выгрузить() Экспорт
	
	//ВыгрузитьДляСтарогоПО();
	ВыгрузитьДляНовогоПО();
	
КонецПроцедуры


Процедура ПроверитьНаЗаполнение(Отказ)
	
		Если НачалоПериода = Дата(1,1,1) Тогда
			#Если Клиент Тогда
				Предупреждение("Не указана дата начала акции. Документ не может быть проведен",3);
			#КонецЕсли
			Отказ = Истина;	
		КонецЕсли;
		
		Если КонецПериода = Дата(1,1,1) Тогда
			#Если Клиент Тогда
				Предупреждение("Не указана дата окончании акции. Документ не может быть проведен",3);
			#КонецЕсли
			Отказ = Истина;	
		КонецЕсли;
		
		Если КонецПериода < НачалоПериода Тогда
			#Если Клиент Тогда
				Предупреждение("Неправильно указан период акции. Документ не может быть проведен",3);
			#КонецЕсли
			Отказ = Истина;				
		КонецЕсли;
		
КонецПроцедуры

Процедура ПроверитьНаНаличиеТовараВДругихДокументах(Отказ) Экспорт
	
	Построитель = Новый ПостроительОтчета;
	Построитель.Текст = "ВЫБРАТЬ
	                    |	ТЧВсе.Ссылка,
	                    |	ТЧВсе.НомерСтроки,
	                    |	ТЧВсе.КодТовара,
	                    |	ТЧВсе.Товар,
	                    |	ТЧВсе.КоличествоБаллов,
	                    |	ТЧВсе.Отменена
	                    |ИЗ
	                    |	Документ.Мотивация.Товар КАК s
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Мотивация КАК Ш
	                    |		ПО (Ш.Ссылка = s.Ссылка)
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Мотивация.Товар КАК ТЧВсе
	                    |		ПО (ТЧВсе.КодТовара = s.КодТовара)
	                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Мотивация КАК Ш2
	                    |		ПО (Ш2.Ссылка = ТЧВсе.Ссылка)
	                    |ГДЕ
	                    |	s.Ссылка = &Документ
	                    |	И ТЧВсе.Ссылка <> Ш.Ссылка
	                    |	И (Ш.НачалоПериода МЕЖДУ Ш2.НачалоПериода И Ш2.КонецПериода
	                    |			ИЛИ Ш.КонецПериода МЕЖДУ Ш2.НачалоПериода И Ш2.КонецПериода
	                    |			ИЛИ Ш2.НачалоПериода МЕЖДУ Ш.НачалоПериода И Ш.КонецПериода
	                    |			ИЛИ Ш2.КонецПериода МЕЖДУ Ш.НачалоПериода И Ш.КонецПериода)";
	Построитель.Параметры.Вставить("Документ",Ссылка);
	Построитель.Выполнить();
	Рез = Построитель.Результат;
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	#Если Клиент Тогда
		Построитель.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Трава);
		Построитель.Вывести();
		Предупреждение("В документе присутствуют позиции, которые содержатся в других документах");
	#КонецЕсли
	Отказ = Истина;
	
	
КонецПроцедуры


Процедура ПроверитьНаличиеДублейТовараВДокументе(Отказ)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Отменена",Ложь);
	
    ТЧ = Товар.Выгрузить(Отбор,"КодТовара");
    ТЧ.Колонки.Добавить("Дубль");
    ТЧ.ЗаполнитьЗначения(1,"Дубль");
    ТЧ.Свернуть("КодТовара","Дубль");
	Если ТЧ.Количество() < Товар.Количество() Тогда 
		#Если Клиент Тогда
		Для Каждого стрТЧ из ТЧ Цикл
			Если стрТЧ.Дубль > 1 Тогда
				Сообщить("По коду товара : " + Формат(стрТЧ.КодТовара,"ЧГ=0") + " есть двойная запись в таблице",СтатусСообщения.Важное);
			КонецЕсли;
		КонецЦикла;
		#КонецЕсли
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	
	ПроверитьНаличиеДублейТовараВДокументе(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;		
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПроверитьНаЗаполнение(Отказ);	
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		Если ЭтоНовый() Тогда
			#Если Клиент Тогда
				Предупреждение("Перед проведением новый документ необходимо записать! Проведение не может быть продолжено");	
				Отказ = Истина;
				Возврат;
			#КонецЕсли
		КонецЕсли;
		
		ПроверитьНаНаличиеТовараВДругихДокументах(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ДатаИзменения = ТекущаяДата();
	
	ЗаписатьДействияВИсториюДокумента(Изменения,РежимЗаписи,ПометкаУдаления);	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	//ТСО {05.11.2015 #0049
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КонтрактыПроизводителей") Тогда
		
		ТипБонусаОпт = Истина;
		
		#Если Клиент Тогда
			
			ТипыБонусов = Новый СписокЗначений();
			ТипыБонусов.Добавить("Оптовый бонус");
			ТипыБонусов.Добавить("Розничный бонус");
			ТипБонуса = ТипыБонусов.ВыбратьЭлемент("Выберите тип бонуса");
			
			Если ТипБонуса = Неопределено Тогда
				ДополнительныеСвойства.Вставить("ОбработкаЗаполненияОтказ", Истина);
				Возврат;
			ИначеЕсли ТипБонуса.Значение = "Розничный бонус" Тогда			
				ТипБонусаОпт = Ложь;
			КонецЕсли;
			
		#КонецЕсли
		
		НачалоПериода = ДанныеЗаполнения.НачалоПериода;
		КонецПериода = ДанныеЗаполнения.КонецПериода;
		ДействиеВоВсехАптеках = Истина;      		
		
		Для Каждого ТекСтрокаТовар Из ДанныеЗаполнения.Товар Цикл
			НоваяСтрока = Товар.Добавить();
			НоваяСтрока.Отменена = ТекСтрокаТовар.Отменена;
			НоваяСтрока.КодТовара = ТекСтрокаТовар.КодТовара;			
			НоваяСтрока.Товар = ТекСтрокаТовар.Товар;
			НоваяСтрока.КоличествоБаллов = ?(ТипБонусаОпт, ТекСтрокаТовар.БонусОптовый, ТекСтрокаТовар.БонусРозничный);
		КонецЦикла;
		
	КонецЕсли;
	//ТСО }

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	  Выгружен = Ложь;
	  Проведен = Ложь;
	  НачалоПериода = Дата(1,1,1);
	  КонецПериода = Дата(1,1,1);
	  //Комментарий = "";
	  Изменения.Очистить();
	
КонецПроцедуры
