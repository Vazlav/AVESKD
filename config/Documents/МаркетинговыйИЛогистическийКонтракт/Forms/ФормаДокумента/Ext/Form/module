Перем СтруктураРеквизитовПриОткрытии;
Перем ВызовСозданияДокСтатьяМЛК;

// ВСПОМАГАТЕЛЬНЫЕ ПРОЦЕДУРЫ

Процедура УправлениеНадписями()

	ЭлементыФормы.НадписьСогласован.Заголовок	= ?(Согласован,"Документ согласован", "Документ не согласован");
	ЭлементыФормы.НадписьУтвержден.Заголовок	= ?(Утвержден,"Документ утвержден", "Документ не утвержден");
	
КонецПроцедуры

Процедура УправлениеКнопками()

	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласование.Текст = ?(Согласован, "Отменить согласование","Согласовать");
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнУтверждение.Текст = ?(Утвержден, "Отменить утверждение","Утвердить");

КонецПроцедуры

Процедура УправлениеДоступностью()

	ФлагДоступность = НЕ Согласован;
	Для каждого Стр Из ЭлементыФормы Цикл
	
		// Исключения - всегда доступны
		Если  Стр.Имя = "ДействияФормы" или
			Стр.Имя = "ОсновныеДействияФормы" или
			Стр.Имя = "Панель1" или
			Стр.Имя = "Панель2" 
			
			Тогда
			Продолжить
		КонецЕсли; 
		
		// Для флага "Согласован"
		Если Стр.Имя = "Согласован" Тогда
			
			Если Утвержден Тогда
				Стр.Доступность = Ложь
			Иначе
				Стр.Доступность = ФлагДоступность;
			КонецЕсли; 
			
			Продолжить;
			
		КонецЕсли; 
		
		Если Стр.Имя = "Утвержден" Тогда
			
			Стр.Доступность = НЕ Утвержден;
			Продолжить;
			
		КонецЕсли;
		
		// "Лупа" у колонки "Статья Контракта"
		Если Стр.Имя = "СтатьиКонтракта" Тогда
		
			Стр.Колонки.СтатьяКонтракта.ЭлементУправления.ТолькоПросмотр = НЕ ФлагДоступность;
			Продолжить;
		
		КонецЕсли; 
		
		// Для всех реквизитов
		Стр.Доступность = ФлагДоступность;
	
	КонецЦикла; 
	
	// Если документ не согласован, тогда он открыт для редактирования и имеет смысл играться с доступностьи некоторых реквизитов в зависимости от других
	Если ФлагДоступность Тогда
		
		ЭлементыФормы.КДот.Доступность					= (ПланированиеОплат = Перечисления.ПланированиеОплат.Отсрочка или ПланированиеОплат = Перечисления.ПланированиеОплат.Реализация);
		ЭлементыФормы.ВариантыДатОтсрочки.Доступность	= (ПланированиеОплат = Перечисления.ПланированиеОплат.Отсрочка или ПланированиеОплат = Перечисления.ПланированиеОплат.Реализация);
		ЭлементыФормы.КДотДатыПоставки.Доступность		= (ПланированиеОплат = Перечисления.ПланированиеОплат.Отсрочка или ПланированиеОплат = Перечисления.ПланированиеОплат.Реализация);
		
	КонецЕсли;	
	
	УправлениеНадписями();
	УправлениеКнопками();
	
КонецПроцедуры
 
// ОБРАБОТЧИКИ ФОРМЫ
Процедура ПриЗаписи(Отказ)
	
	//Если СтруктураРеквизитовПриОткрытии.Согласован <> Согласован Тогда
	//
	//	Изменение = Изменения.Добавить();
	//	Изменение.Дата = ТекущаяДата();
	//	Изменение.КомментарийИзменения = "Согласован = " + Согласован;
	//	Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	//	Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
	//	
	//	СтруктураРеквизитовПриОткрытии.Согласован = Согласован;
	//
	//КонецЕсли;
	//
	//Если СтруктураРеквизитовПриОткрытии.Утвержден <> Утвержден Тогда
	//
	//	Изменение = Изменения.Добавить();
	//	Изменение.Дата = ТекущаяДата();
	//	Изменение.КомментарийИзменения = "Утвержден = " + Утвержден;
	//	Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	//	Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
	//	
	//	СтруктураРеквизитовПриОткрытии.Утвержден = Утвержден;
	//	
	//	// Проставим реквизит УтвержденМПК РС МатрицаМЛК
	//	НЗ = РегистрыСведений.МатрицаМЛК.СоздатьНаборЗаписей();
	//	Для каждого СтрокаТЧ Из СтатьиКонтракта Цикл
	//	
	//		НЗ.Отбор.ДокументРегистратор.Значение		= СтрокаТЧ.СтатьяКонтракта;
	//		НЗ.Отбор.ДокументРегистратор.Использование	= Истина;
	//		НЗ.Прочитать();
	//		
	//		Для каждого СтрокаНЗ Из НЗ Цикл
	//			СтрокаНЗ.УтвержденМЛК = Утвержден	
	//		КонецЦикла;
	//		
	//		НЗ.Записать();
	//	
	//	КонецЦикла; 
	//
	//КонецЕсли;
	
	//Если НЕ ЗначениеЗаполнено(Наименование) Тогда
	//
	//	Наименование = СокрЛП(Производитель.Наименование)+" с "+Формат(НачалоДействия,"ДФ=dd.MM.yyyy")+" по "+Формат(ОкончаниеДействия,"ДФ=dd.MM.yyyy")	
	//
	//КонецЕсли; 

КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если ПланСуммаНачислений<>СтатьиКонтракта.Итог("СуммаНачислений") Тогда
		ПланСуммаНачислений = СтатьиКонтракта.Итог("СуммаНачислений");	
	КонецЕсли; 
	
	Если ПланСуммаНачисленийсНДС<>СтатьиКонтракта.Итог("СуммаНачисленийсНДС") Тогда
		ПланСуммаНачисленийсНДС = СтатьиКонтракта.Итог("СуммаНачисленийсНДС");	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтотОбъект.ЭтоНовый() Тогда
		Владелец = ПараметрыСеанса.ТекущийСотр;
	КонецЕсли;
	
	УправлениеДоступностью();
	
КонецПроцедуры

// ОБРАБОТЧИКИ ЭЛЕМЕНТОВ ФОРМЫ 
Процедура ОсновныеДействияФормыкнСогласование(Кнопка)

	// Перед согласованием проверка на полноту заполнение ТЧ "Статьи затрат"
	Если ОбновитьСписокСтатей(Ложь) Тогда
	
		Сообщить("Состав статей и сумма контракта были обновлены, проведите Согласование/Утверждение повторно.",СтатусСообщения.Внимание);	
		Предупреждение("Согласование не проведено! Подробности см. в окне сообщений",15);
		Возврат;
	
	КонецЕсли; 
	
	Если Согласован Тогда
		// Отмена согласования
	
		Если Утвержден Тогда
			
			Предупреждение("Необходимо отменть утверждение документа!");
			Возврат;
			
		Иначе
		
			Если РольДоступна("МаркетинговыеКонтрактыПолныйДоступ")
				ИЛИ РольДоступна("МаркетинговыеКонтрактыСогласование")
				ИЛИ РольДоступна("супер_АДМИНИСТРАТОР") Тогда

				Согласован = Ложь;
				
				Изменение = Изменения.Добавить();
				Изменение.Дата = ТекущаяДата();
				Изменение.КомментарийИзменения = "Согласован = " + Согласован;
				Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
				Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
				
				Записать(РежимЗаписиДокумента.ОтменаПроведения);

			Иначе
				
				Предупреждение("Недостаточно прав на выполнение данной операции!");
				Возврат;
				
			КонецЕсли;
		
		КонецЕсли; 
	
	Иначе
		// Согласование
		
		Если РольДоступна("МаркетинговыеКонтрактыПолныйДоступ")
			ИЛИ РольДоступна("МаркетинговыеКонтрактыСогласование")
			ИЛИ РольДоступна("супер_АДМИНИСТРАТОР") Тогда
			
			Если Вопрос("Будет проведено согласование текущего документа и подчиненных документов ""Статья МЛК"". Продолжить?", РежимДиалогаВопрос.ДаНетОтмена) <> КодВозвратаДиалога.Да Тогда
				Возврат
			КонецЕсли; 
			
		Иначе
			Предупреждение("Недостаточно прав на выполнение данной операции!");
			Возврат;
		КонецЕсли; 
		
		// Сначала согласование всех документов "Статья МЛК" из ТЧ документа
		ОшибкаВДокСтатья = Ложь;
		Для каждого СтрокаТЧ Из СтатьиКонтракта Цикл
		
			Если НЕ СтрокаТЧ.СтатьяКонтракта.Согласован Тогда
			
				Документы.СтатьиКонтракта.СогласоватьИзвне(СтрокаТЧ.СтатьяКонтракта);
				
				Если СтрокаТЧ.СтатьяКонтракта.Согласован Тогда
					Сообщить("Согласован документ: "+СтрокаТЧ.СтатьяКонтракта);
				Иначе	
					ОшибкаВДокСтатья = Истина;
				КонецЕсли; 
				
			КонецЕсли;
			
		КонецЦикла; 
		
		Если ОшибкаВДокСтатья Тогда
			
			Предупреждение("Документ не согласован! Подробности см. в окне сообщений");
			Возврат;
			
		КонецЕсли; 
		
		Согласован = Истина;

		Изменение = Изменения.Добавить();
		Изменение.Дата = ТекущаяДата();
		Изменение.КомментарийИзменения = "Согласован = " + Согласован;
		Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
		Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
		
		Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЕсли; 
	
	УправлениеДоступностью();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнУтверждение(Кнопка)
	
	Если Утвержден Тогда
		// Отмена утверждения
	
		Если РольДоступна("МаркетинговыеКонтрактыПолныйДоступ")
			ИЛИ РольДоступна("супер_АДМИНИСТРАТОР") Тогда

			Утвержден = Ложь;
			Изменение = Изменения.Добавить();
			Изменение.Дата = ТекущаяДата();
			Изменение.КомментарийИзменения = "Утвержден = " + Утвержден;
			Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
			Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
			
			Записать(РежимЗаписиДокумента.ОтменаПроведения);

		Иначе
			
			Предупреждение("Недостаточно прав на выполнение данной операции!");
			Возврат;
			
		КонецЕсли;
	
	Иначе
	   // Утверждение
	
	   Если РольДоступна("МаркетинговыеКонтрактыПолныйДоступ")
		   ИЛИ РольДоступна("супер_АДМИНИСТРАТОР") Тогда
		   
		   Если НЕ Согласован Тогда
			   
			   Предупреждение("Документ не согласован!");
			   Возврат;
			   
		   КонецЕсли; 
		   
			Если Вопрос("Будет проведено утверждение текущего документа и подчиненных документов ""Статья МЛК"". Продолжить?", РежимДиалогаВопрос.ДаНетОтмена) <> КодВозвратаДиалога.Да Тогда
				Возврат
			КонецЕсли; 
			
		Иначе
		   Предупреждение("Недостаточно прав на выполнение данной операции!");
		   Возврат;
	   КонецЕсли; 
		
		// Сначала утверждение всех документов "Статья МЛК" из ТЧ документа
		ОшибкаВДокСтатья = Ложь;
		Для каждого СтрокаТЧ Из СтатьиКонтракта Цикл
			
			Если НЕ СтрокаТЧ.СтатьяКонтракта.Утвержден и СтрокаТЧ.СтатьяКонтракта.Согласован Тогда
			
				Документы.СтатьиКонтракта.УтвердитьИзвне(СтрокаТЧ.СтатьяКонтракта);
				
				Если СтрокаТЧ.СтатьяКонтракта.Утвержден Тогда
					Сообщить("Утвержден документ: "+СтрокаТЧ.СтатьяКонтракта);	
				Иначе	
					ОшибкаВДокСтатья = Истина;
				КонецЕсли; 
				
			КонецЕсли; 
		
		КонецЦикла; 
		
		Если ОшибкаВДокСтатья Тогда
			
			Предупреждение("Документ не утвержден! Подробности см. в окне сообщений");
			Возврат;
			
		КонецЕсли; 
		
		Утвержден = Истина;
	   
	   Изменение = Изменения.Добавить();
	   Изменение.Дата = ТекущаяДата();
	   Изменение.КомментарийИзменения = "Утвержден = " + Утвержден;
	   Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	   Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
	   
	   Записать(РежимЗаписиДокумента.Проведение);
	
   КонецЕсли; 
   
   УправлениеДоступностью();
   
КонецПроцедуры

Процедура ВариантыДатОтсрочкиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	СписокВыбора = Новый Массив;

	Если ПланированиеОплат = Перечисления.ПланированиеОплат.Отсрочка Тогда
	
		СписокВыбора.Добавить(Перечисления.ВариантыДатОтсрочки.ДатыОтметкиВНакладной);	
		СписокВыбора.Добавить(Перечисления.ВариантыДатОтсрочки.ДатыНаклодной);	
		СписокВыбора.Добавить(Перечисления.ВариантыДатОтсрочки.ДатыCRM);	
		СписокВыбора.Добавить(Перечисления.ВариантыДатОтсрочки.ДатыГТД);	
		СписокВыбора.Добавить(Перечисления.ВариантыДатОтсрочки.ДатыВыгрузкиНакладнойВЭДО);
		ЭлементыФормы.ВариантыДатОтсрочки.СписокВыбора.ЗагрузитьЗначения(СписокВыбора);
	
	ИначеЕсли ПланированиеОплат = Перечисления.ПланированиеОплат.Реализация Тогда
	
		СписокВыбора.Добавить(Перечисления.ВариантыДатОтсрочки.ДатыОтчета);	
		ЭлементыФормы.ВариантыДатОтсрочки.СписокВыбора.ЗагрузитьЗначения(СписокВыбора);
		
	Иначе
		
	    сообщить("Выбор варианта дат отсрочки предусмотрен только для значений планирования оплат ""Отсрочка"" и ""Реализация"".");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПланированиеОплатПриИзменении(Элемент)
	
	Если Элемент.Значение = Перечисления.ПланированиеОплат.Реализация Тогда
	
		ВариантыДатОтсрочки = Перечисления.ВариантыДатОтсрочки.ДатыОтчета
		
	ИначеЕсли Элемент.Значение <> Перечисления.ПланированиеОплат.Отсрочка Тогда
		
		КДот				= 0;
		КДотДатыПоставки	= 0;
		ВариантыДатОтсрочки	= Перечисления.ВариантыДатОтсрочки.ПустаяСсылка();
		
	КонецЕсли;
	
	УправлениеДоступностью();
	
КонецПроцедуры

// ОБРАБОТЧИКИ ТЧ СТАТЬИ КОНТРАКТА
Процедура КоманднаяПанель2Действие(Кнопка)
	
    ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВФ.МножественныйВыбор = Ложь;
	
    ДВФ.Выбрать();
    
    Если НЕ ПустаяСтрока(ДВФ.ПолноеИмяФайла) Тогда
        
        ДД = Новый ДвоичныеДанные(ДВФ.ПолноеИмяФайла);
        
        ХЗ = Новый ХранилищеЗначения (ДД, Новый СжатиеДанных(9));
		
		НоваяСтрока = Приложения.Добавить();
		НоваяСтрока.Наименование = "Приложение " + НоваяСтрока.НомерСтроки;
		НоваяСтрока.Приложение = ХЗ;
        НоваяСтрока.ИмяФайла=СтрЗаменить(ДВФ.ПолноеИмяФайла,ДВФ.Каталог,"");
 
    КонецЕсли;
	
КонецПроцедуры

Процедура СтатьиКонтрактаСтатьяКонтрактаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если НЕ (ВыбранноеЗначение.МаркетинговыйКонтракт.Пустая()) и (ВыбранноеЗначение.МаркетинговыйКонтракт<>ССылка) Тогда
		Предупреждение("Запрещено выбирать статьи контракта другого МЛК!");
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = ЭлементыФормы.СтатьиКонтракта.ТекущаяСтрока;
	ТекущаяСтрока.ТипСтатьи				= ВыбранноеЗначение.ТипСтатьи;
	ТекущаяСтрока.ДатаНачала			= ВыбранноеЗначение.НачалоДействия;
	ТекущаяСтрока.ДатаОкончания			= ВыбранноеЗначение.ОкончаниеДействия;
	ТекущаяСтрока.СуммаНачислений		= ВыбранноеЗначение.СуммаБонусаПоСтатье;
	ТекущаяСтрока.СуммаНачисленийсНДС	= ВыбранноеЗначение.СуммаБонусаПоСтатьеСНДС;
	
КонецПроцедуры

Процедура СтатьиКонтрактаСтатьяКонтрактаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	ФормаСтатьиКонтракта = Документы.СтатьиКонтракта.ПолучитьФормуВыбора(,Элемент);
	
	ЭлОтбора = ФормаСтатьиКонтракта.Отбор.МаркетинговыйКонтракт;
	
	Если ЭтоНовый() Тогда
		ЭлОтбора.ВидСравнения = ВидСравнения.Равно;
		ЭлОтбора.Значение = Документы.СтатьиКонтракта.ПустаяСсылка();
	Иначе
		ЭлОтбора.ВидСравнения = ВидСравнения.ВСписке;
		СписокОтбора = Новый СписокЗначений;
		СписокОтбора.Добавить(Ссылка);
		СписокОтбора.Добавить(Документы.СтатьиКонтракта.ПустаяСсылка());
		ЭлОтбора.Значение = СписокОтбора;
	КонецЕсли;	
	ЭлОтбора.Использование = Истина;
	ФормаСтатьиКонтракта.Открыть();

КонецПроцедуры

// ОБРАБОТЧИКИ ТЧ ПРИЛОЖЕНИЯ
Процедура КоманднаяПанель2ОткрытьПрицеп(Кнопка)
	
	ТС = ЭлементыФормы.Приложения.ТекущаяСтрока;
	
	Если ТС = Неопределено Тогда
		Предупреждение("Не выбрана строка вложения");
		Возврат;
	КонецЕсли;  
	
	ДД = ТС.Приложение.Получить(); // ДвоичныеДанные
	ИФ = ТС.ИмяФайла;
	
	ДД.Записать(КаталогВременныхФайлов()+"\"+ИФ);
	
	ЗапуститьПриложение(КаталогВременныхФайлов()+"\"+ИФ);
	
КонецПроцедуры

Процедура КоманднаяПанель2СохранитьФайлНаДиск(Кнопка)
	
    ТС=ЭлементыФормы.Приложения.ТекущаяСтрока;
    Если ТС=Неопределено Тогда
        Предупреждение("Не выбрана строка вложения");
        Возврат;
    КонецЕсли;  
    
    ДД=ТС.Приложение.Получить(); // ДвоичныеДанные
    ИФ=ТС.ИмяФайла;
    
    
    ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
    ДВФ.Выбрать();
    
    ДД.Записать(ДВФ.Каталог+"\"+ИФ);
    
    Сообщить("Приложение сохранено в "+ДВФ.Каталог+"\"+ИФ);
	
КонецПроцедуры

Процедура КоманднаяПанель1СоздатьСтатьюКонтракта(Кнопка)
	
	Если ЭтоНовый() Тогда
		
		Если Вопрос("Перед созданием статьи контракта необходимо записать документ. Записать?", РежимДиалогаВопрос.ДаНетОтмена) = КодВозвратаДиалога.Да Тогда
		
			Записать();		
			ПараметрыФормы = Новый Структура("Основание", Ссылка);
			ОткрытьФорму("Документ.СтатьиКонтракта.ФормаОбъекта", ПараметрыФормы);
		
		КонецЕсли; 
		
	Иначе
	
		ПараметрыФормы = Новый Структура("Основание", Ссылка);
		ОткрытьФорму("Документ.СтатьиКонтракта.ФормаОбъекта", ПараметрыФормы);
	
	КонецЕсли; 
	ВызовСозданияДокСтатьяМЛК = Истина;
	
КонецПроцедуры

Процедура КоманднаяПанель1Обновить(Кнопка)
	
	ОбновитьСписокСтатей();
	
КонецПроцедуры

Процедура СтатьиКонтрактаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.НаименованиеСтатьи.УстановитьТекст(ДанныеСтроки.СтатьяКонтракта.Наименование);
	
	ОформлениеСтроки.Ячейки.Согласован.Значение = ДанныеСтроки.СтатьяКонтракта.Согласован;
	ОформлениеСтроки.Ячейки.Утвержден.Значение = ДанныеСтроки.СтатьяКонтракта.Утвержден;
КонецПроцедуры

// ОБРАБОТЧИКИ ТЧ ПОСТАВЩИКИ
Процедура КнопкаЗаполнитьПоставщиковНажатие(Элемент)
	
	Построитель.Текст = "ВЫБРАТЬ
	|	ДоговорыПоставки.Владелец КАК Владелец,
	|	МАКСИМУМ(ДоговорыПоставки.Дата) КАК Дата,
	|	ДоговорыПоставки.Фирма КАК Фирма
	|ПОМЕСТИТЬ ВТ_ДоговорПоставки_Макс
	|ИЗ
	|	Справочник.ДоговорыПоставки КАК ДоговорыПоставки
	|ГДЕ
	|	ДоговорыПоставки.ПериодДействияС <= &ТекущаяДата
	|	И ДоговорыПоставки.ПериодДействияПо >= &ТекущаяДата
	|	И ДоговорыПоставки.Фирма = &Фирма
	|{ГДЕ
	|	ДоговорыПоставки.Владелец.* КАК Поставщик}	
	|СГРУППИРОВАТЬ ПО
	|	ДоговорыПоставки.Владелец,
	|	ДоговорыПоставки.Фирма
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДоговорПоставки_Макс.Владелец КАК Поставщик,
	|	ДоговорыПоставки.Ссылка КАК ДоговорПоставки
	|ИЗ
	|	ВТ_ДоговорПоставки_Макс КАК ВТ_ДоговорПоставки_Макс
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыПоставки КАК ДоговорыПоставки
	|		ПО ВТ_ДоговорПоставки_Макс.Владелец = ДоговорыПоставки.Владелец
	|			И ВТ_ДоговорПоставки_Макс.Дата = ДоговорыПоставки.Дата
	|			И ВТ_ДоговорПоставки_Макс.Фирма = ДоговорыПоставки.Фирма
	|";
	Построитель.Параметры.Вставить("ТекущаяДата", Дата);
	Построитель.Параметры.Вставить("Фирма", Фирма);
	Поставщики.Загрузить(Построитель.Результат.Выгрузить());
КонецПроцедуры

Процедура КнопкаОчиститьПоставщиковНажатие(Элемент)
	
	Если Вопрос("Табличная часть ""Поставщики"" будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНетОтмена) = КодВозвратаДиалога.Да Тогда
	
		Поставщики.Очистить();	
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СозданНовыйДокСтатьяМЛК" Тогда
	
		Если ВызовСозданияДокСтатьяМЛК и Параметр.МаркетинговыйКонтракт = Ссылка Тогда
		
			НоваяСтрокаТЧ = СтатьиКонтракта.Добавить();	
		    НоваяСтрокаТЧ.СтатьяКонтракта 		= Параметр;
			НоваяСтрокаТЧ.ТипСтатьи				= Параметр.ТипСтатьи;
			НоваяСтрокаТЧ.ДатаНачала			= Параметр.НачалоДействия;
			НоваяСтрокаТЧ.ДатаОкончания			= Параметр.ОкончаниеДействия;
			НоваяСтрокаТЧ.СуммаНачислений		= Параметр.СуммаБонусаПоСтатье;
			НоваяСтрокаТЧ.СуммаНачисленийсНДС	= Параметр.СуммаБонусаПоСтатьеСНДС;
			ВызовСозданияДокСтатьяМЛК = Ложь;
		
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры


СтруктураРеквизитовПриОткрытии = Новый Структура("Согласован, Утвержден", Согласован, Утвержден);
ВызовСозданияДокСтатьяМЛК = Ложь;
Построитель.Текст = 
"ВЫБРАТЬ
|	Поставщики.Ссылка КАК Поставщик
|ИЗ
|	Справочник.Поставщики КАК Поставщики
|ГДЕ
|	Поставщики.ЭтоГруппа = ЛОЖЬ
|	И Поставщики.ПометкаУдаления = ЛОЖЬ
|{ГДЕ
|	Поставщики.Ссылка.* КАК Поставщик}";