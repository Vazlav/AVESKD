
Функция ОбновитьСписокСтатей(ВыводитьСообщения = Истина) Экспорт

	Если ВыводитьСообщения Тогда
		Сообщить("Обработка документа: "+Ссылка,СтатусСообщения.Внимание);
	КонецЕсли; 
	Возвращаем = Ложь;
	// 1. Проверка и удаление статей с МЛК, отличным от текущего
	Индекс = СтатьиКонтракта.Количество() - 1;
	Пока Индекс >=  0 Цикл
		
		СтрокаТЧ = СтатьиКонтракта.Получить(Индекс);
		Если СтрокаТЧ.СтатьяКонтракта.МаркетинговыйКонтракт.Ссылка <> Ссылка Тогда
			
			УдаленныйЭлемент = СтрокаТЧ.СтатьяКонтракта.МаркетинговыйКонтракт.Ссылка;
			СтатьиКонтракта.Удалить(Индекс);
			Если ВыводитьСообщения Тогда
				Сообщить("	Удален документ ""Статья МЛК"" "+УдаленныйЭлемент+ " т.к. МЛК указанный в документе не соответствовал текущему документу.");
			КонецЕсли; 
			Возвращаем = Истина;
			
		КонецЕсли; 
		
		Индекс = Индекс - 1;
	
	КонецЦикла;
	
	// 2. Добавление в ТЧ "забытых" статей с таким же МЛК
	МассивСсылокСтатей = Новый Массив;
	Для каждого СтрокаТЧ Из СтатьиКонтракта Цикл
		
		МассивСсылокСтатей.Добавить(СтрокаТЧ.СтатьяКонтракта.Ссылка);
		
		// Синхронизация существующих статей МЛК
		СтароеЗначениеБезНДС	= СтрокаТЧ.СуммаНачислений;
		СтароеЗначениеСНДС		= СтрокаТЧ.СуммаНачисленийсНДС;
		
		Если СтароеЗначениеБезНДС <> СтрокаТЧ.СтатьяКонтракта.СуммаБонусаПоСтатье Тогда
			
			СтрокаТЧ.СуммаНачислений = СтрокаТЧ.СтатьяКонтракта.СуммаБонусаПоСтатье;	
			Если ВыводитьСообщения Тогда
				Сообщить("	Актуализирован документ ""Статья МЛК"" "+СтрокаТЧ.СтатьяКонтракта+ " (строка "+СтрокаТЧ.НомерСтроки+")  т.к. данные в колонке <Сумма начислений> отличались от данных в документе.");
			КонецЕсли; 
		    Возвращаем = Истина;
			
		КонецЕсли; 
		
		Если СтароеЗначениеСНДС <> СтрокаТЧ.СтатьяКонтракта.СуммаБонусаПоСтатьеСНДС Тогда
			
			СтрокаТЧ.СуммаНачисленийсНДС = СтрокаТЧ.СтатьяКонтракта.СуммаБонусаПоСтатьеСНДС;	
			Если ВыводитьСообщения Тогда
				Сообщить("	Актуализирован документ ""Статья МЛК"" "+СтрокаТЧ.СтатьяКонтракта+ " (строка "+СтрокаТЧ.НомерСтроки+")  т.к. данные в колонке <Сумма начислений с НДС> отличались от данных в документе.");
			КонецЕсли; 
		    Возвращаем = Истина;
			
		КонецЕсли; 
		
	КонецЦикла;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтатьиКонтракта.Ссылка КАК СтатьяКонтракта,
	|	СтатьиКонтракта.ТипСтатьи КАК ТипСтатьи,
	|	СтатьиКонтракта.НачалоДействия КАК ДатаНачала,
	|	СтатьиКонтракта.ОкончаниеДействия КАК ДатаОкончания,
	|	СтатьиКонтракта.СуммаБонусаПоСтатье КАК СуммаНачислений,
	|	СтатьиКонтракта.СуммаБонусаПоСтатьеСНДС КАК СуммаНачисленийсНДС
	|ИЗ
	|	Документ.СтатьиКонтракта КАК СтатьиКонтракта
	|ГДЕ
	|	НЕ СтатьиКонтракта.Ссылка В (&МассивСсылокСтатей)
	|	И СтатьиКонтракта.МаркетинговыйКонтракт = &МаркетинговыйКонтракт
	|	И СтатьиКонтракта.ПометкаУдаления = ЛОЖЬ";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивСсылокСтатей",МассивСсылокСтатей); 
	Запрос.УстановитьПараметр("МаркетинговыйКонтракт",Ссылка); 
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
	
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
		
			НоваяСтрака = СтатьиКонтракта.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрака,Выборка);
			Если ВыводитьСообщения Тогда
				Сообщить("	Добавлен документ ""Статья МЛК"" "+Выборка.СтатьяКонтракта);
			КонецЕсли; 
			Возвращаем = Истина;
			
		КонецЦикла;
	
	КонецЕсли;
	
	Если НЕ Возвращаем и ВыводитьСообщения Тогда
		Сообщить("	Данные документа актуальны - не обработан!");	
	КонецЕсли; 
	
	Возврат Возвращаем
	
КонецФункции // ОбновитьСписокСтатей()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЭтоНовый() Тогда
		
		Изменение = Изменения.Добавить();
		Изменение.Дата = ТекущаяДата();
		Изменение.КомментарийИзменения = "Создан новый документ";
		Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
		Изменение.ТипИзм = Перечисления.ДействияНадДокументами.ВводНового;
		
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
		ПроверитьНаЗаполнение(Отказ);	
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПроверитьПериодДействияКонтракта(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
	
		Наименование = СокрЛП(Производитель.Наименование)+" с "+Формат(НачалоДействия,"ДФ=dd.MM.yyyy")+" по "+Формат(ОкончаниеДействия,"ДФ=dd.MM.yyyy")	
	
	КонецЕсли;
	
	ЗаписатьДействияВИсториюДокумента(Изменения,РежимЗаписи,ПометкаУдаления);	
	
КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	
	Согласован = Ложь;
	Утвержден = Ложь;
	Владелец = Справочники.Сотрудники.ПустаяСсылка();
	Изменения.Очистить();
	СтатьиКонтракта.Очистить();

КонецПроцедуры

Процедура ПроверитьНаЗаполнение(Отказ)
	
	Если ТипКонтракта.Пустая() Тогда
		#Если Клиент Тогда
			Сообщить("Не выбран ТипКонтракта",СтатусСообщения.ОченьВажное);	 
		#КонецЕсли	
		Отказ = Истина;
	КонецЕсли;
	
	Если Производитель.Пустая() Тогда
		#Если Клиент Тогда
			Сообщить("Не выбран Производитель",СтатусСообщения.ОченьВажное);	 
		#КонецЕсли	
		Отказ = Истина;
	КонецЕсли;
	
	Если НачалоДействия = Дата(1,1,1) Тогда
		#Если Клиент Тогда
			Сообщить("Не выбран дата начала действия контракта",СтатусСообщения.ОченьВажное);	 
		#КонецЕсли	
		Отказ = Истина;
	КонецЕсли;
	
	Если ОкончаниеДействия = Дата(1,1,1) Тогда
		#Если Клиент Тогда
			Сообщить("Не выбран дата окончания действия контракта",СтатусСообщения.ОченьВажное);	 
		#КонецЕсли	
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПериодДействияКонтракта(Отказ) Экспорт
	Если НачалоДействия > ОкончаниеДействия Тогда
		Отказ = Истина;
		# Если Клиент Тогда
			Сообщить("Не верный период действия контракта!");;
		# КонецЕсли
	КонецЕсли;	
КонецПроцедуры //ПроверитьПериодДействияКонтракта()
