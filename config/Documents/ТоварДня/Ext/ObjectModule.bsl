
Процедура ВыгрузитьТоварДня() Экспорт
	
	Если НЕ Проведен Тогда
		#Если Клиент Тогда
			Сообщить("Документ непроведен. Выгрузка невозможна.",СтатусСообщения.Важное);
		#КонецЕсли
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Минимум(ТоварДня.ДействиеВоВсехАптеках)  как Действие
	               |ИЗ
	               |	Документ.ТоварДня КАК ТоварДня
	               |ГДЕ
	               |	ТоварДня.КонецПериода >= &Дата
	               |	И ТоварДня.Проведен = ИСТИНА";
				   
	Запрос.УстановитьПараметр("Дата",ТекущаяДата());
	Запрос.УстановитьПараметр("Документ",Ссылка);
	Рез = Запрос.Выполнить();
	Выборка = Рез.Выбрать();
	Выборка.Следующий();
	Если Выборка.Действие = NULL Тогда
		Возврат;
	КонецЕсли;
	
	Если Выборка.Действие = Истина Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТоварДняТовар.КодТовара,
		               |	ТоварДняТовар.НомерСтроки,
		               |	ТоварДняТовар.Ссылка.Номер КАК НомерДок,
		               |	ТоварДняТовар.Ссылка.НачалоПериода КАК НачалоПериода,
		               |	ТоварДняТовар.Ссылка.КонецПериода КАК КонецПериода,
		               |	ТоварДняТовар.КоличествоБаллов,
		               |	ТоварДняТовар.Ссылка.Дата КАК ДатаДокумента
		               |ИЗ
		               |	Документ.ТоварДня.Товар КАК ТоварДняТовар
		               |ГДЕ
		               |	ТоварДняТовар.Ссылка.КонецПериода >= &Дата
		               |	И ТоварДняТовар.Ссылка.Проведен = ИСТИНА и ТоварДняТовар.Отменена = Ложь
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ТоварДняТовар.Ссылка.Номер,
		               |	ТоварДняТовар.НомерСтроки";

		Запрос.УстановитьПараметр("Дата",ТекущаяДата());			   
		Рез = Запрос.Выполнить();
		
		ДБФ=Новый XBAse;
		
		ДБФ.Кодировка=КодировкаXBase.OEM; // WIN 1251
		
		ДБФ.поля.Добавить("ndoc","N",10,0);
		ДБФ.поля.Добавить("ddoc","d",);
		ДБФ.поля.Добавить("sdoc","N",10,0);
		ДБФ.поля.Добавить("id_firm","N",10,0);
		ДБФ.поля.Добавить("id_dep","N",10,0);

		ДБФ.поля.Добавить("id_good","N",12,0);
		ДБФ.поля.Добавить("start_dt","d",,);
		ДБФ.поля.Добавить("end_dt","d",,);
		ДБФ.поля.Добавить("scores","N",10,2);
		
		ИмяФайла = КаталогВременныхФайлов() + "gscores.dbf";
		ДБФ.СоздатьФайл(ИмяФайла); 		
		
		
		Выборка = рез.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДБФ.Добавить();
			ДБФ.ndoc = Выборка.НомерДок;
			ДБФ.ddoc = Выборка.ДатаДокумента;
			ДБФ.sdoc = Выборка.НомерСтроки;
			ДБФ.id_firm = 0;
			ДБФ.id_dep = 0;
	
			ДБФ.id_good = Выборка.КодТовара;
			ДБФ.start_dt =  Выборка.НачалоПериода;
			ДБФ.end_dt  =  Выборка.КонецПериода;
			ДБФ.scores = Выборка.КоличествоБаллов;
			ДБФ.Записать();  
		КонецЦикла;
		
		Если ДБФ.Открыта() Тогда
			ДБФ.ЗакрытьФайл();
		КонецЕсли;
		
		ИмяАрхива = СтрЗаменить(ИмяФайла,".dbf",".zip");
		
		ОМ17_ЗапаковатьФайлИСкопироватьЕгоВПапку (ИмяФайла,ИмяАрхива);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	МестаХранения.КаталогОбмена
		               |ИЗ
		               |	Справочник.МестаХранения КАК МестаХранения
		               |ГДЕ
		               |	МестаХранения.ПометкаУдаления = ЛОЖЬ
		               |	И МестаХранения.КаталогОбмена <> """"
		               |	И МестаХранения.СторонаДоговораКомиссии <> ЗНАЧЕНИЕ(Перечисление.СтороныДоговораКомиссии.Комитент)
		               |	И МестаХранения.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыМХ.Розн)
		               |	И МестаХранения.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)";
		Рез = Запрос.Выполнить();
		Выборка = Рез.Выбрать();
		Пока Выборка.Следующий() Цикл
			Попытка
				КопироватьФайл(ИмяАрхива,Выборка.КаталогОбмена + "\gscores.zip"	);
				//Сообщить(""+Выборка.КаталогОбмена + "\gscores.zip");
				//Возврат 0 ;
			Исключение
				#Если Клиент Тогда
					Сообщить(""+ ОписаниеОшибки());
				#КонецЕсли
			КонецПопытки;
		КонецЦикла;

		Выгружен = Истина;
		Изменение = Изменения.Добавить();
		Изменение.Дата = ТекущаяДата();
		Изменение.КомментарийИзменения = "Выгружен в аптеки";
		Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
		Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
		Записать(РежимЗаписиДокумента.Запись);
		#Если Клиент Тогда
			Предупреждение("Товар дня выгружен в аптеки.",5);
		#КонецЕсли		
		
	КонецЕсли;
	
	
КонецПроцедуры


Процедура ПроверитьНаЗаполнение(Отказ)
	
		Если НачалоПериода = Дата(1,1,1) Тогда
			#Если Клиент Тогда
				Предупреждение("Не указана дата начала акции. Документ не может быть проведен",3);
			#КонецЕсли
			Отказ = Истина;	
		КонецЕсли;
		
		Если КонецПериода = Дата(1,1,1) Тогда
			#Если Клиент Тогда
				Предупреждение("Не указана дата окончании акции. Документ не может быть проведен",3);
			#КонецЕсли
			Отказ = Истина;	
		КонецЕсли;
		
		Если КонецПериода < НачалоПериода Тогда
			#Если Клиент Тогда
				Предупреждение("Неправильно указан период акции. Документ не может быть проведен",3);
			#КонецЕсли
			Отказ = Истина;				
		КонецЕсли;
		
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПроверитьНаЗаполнение(Отказ);	
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	
	ЗаписатьДействияВИсториюДокумента(Изменения,РежимЗаписи,ПометкаУдаления);	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	//ТСО {05.11.2015 #0049
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КонтрактыПроизводителей") Тогда
		                  		
		ТипБонусаОпт = Истина;
		
		#Если Клиент Тогда
			
			ТипыБонусов = Новый СписокЗначений();
			ТипыБонусов.Добавить("Оптовый бонус");
			ТипыБонусов.Добавить("Розничный бонус");
			ТипБонуса = ТипыБонусов.ВыбратьЭлемент("Выберите тип бонуса");
			
			Если ТипБонуса = Неопределено Тогда
				ДополнительныеСвойства.Вставить("ОбработкаЗаполненияОтказ", Истина);
				Возврат;
			ИначеЕсли ТипБонуса.Значение = "Розничный бонус" Тогда			
				ТипБонусаОпт = Ложь;
			КонецЕсли;
			
		#КонецЕсли
		
		НачалоПериода = ДанныеЗаполнения.НачалоПериода;
		КонецПериода = ДанныеЗаполнения.КонецПериода;
		ДействиеВоВсехАптеках = Истина;      		
		
		Для Каждого ТекСтрокаТовар Из ДанныеЗаполнения.Товар Цикл
			НоваяСтрока = Товар.Добавить();
			НоваяСтрока.Отменена = ТекСтрокаТовар.Отменена;
			НоваяСтрока.КодТовара = ТекСтрокаТовар.КодТовара;			
			НоваяСтрока.Товар = ТекСтрокаТовар.Товар;
			НоваяСтрока.КоличествоБаллов = ?(ТипБонусаОпт, ТекСтрокаТовар.БонусОптовый, ТекСтрокаТовар.БонусРозничный);
		КонецЦикла;
		
	КонецЕсли;
	//ТСО }

КонецПроцедуры
