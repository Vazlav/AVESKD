
//1. ЦенаЗакупБезНДСРасчет = Окр((СуммаЗакуп - НДСЗакуп)/(Количество*Коэфф),2)
//2. СуммаЗакупБезНДСРасчет = ЦенаЗакупБезНДСРасчет * Количество * Коэфф
//3. СуммаОстаткаОкругления = (СуммаЗакуп - НДСЗакуп) - СуммаЗакупБезНДСРасчет

//Перем мКолонкиТовары;
//Перем СписокКолонокДляПересчетаПоЦене;
//Перем СписокКолонокПересчетаЦЕН;
Перем мКоэффициент;

Процедура ОбновитьДанныеПоДоговорам()
	
	Если Склад.Пустая() или Поставщик.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ДатаПоиска = ?(ВхДатаНакл = Дата(1,1,1),ТекущаяДата(),ВхДатаНакл);
	Если Склад.РаботаТолькоПоКомиссии Тогда
		ФирмаКомитент = Склад.ФирмаКомитент;
		ПоставщикКомитент = ФирмаКомитент.ФирмаКакПоставщик;
		Если НЕ Поставщик.Пустая() Тогда
			ДоговорПоставки = ОМ_Справочники.ПолучитьДоговорПоставщика(ФирмаКомитент,Поставщик,ДатаПоиска);
			ВидПоступленияТовара = ДоговорПоставки.ВидПоступленияТовара;
			ДоговорПоставкиКомитент = ОМ_Справочники.ПолучитьДоговорПоставщика(Фирма,ПоставщикКомитент,ДатаПоиска);
			Если ДоговорПоставкиКомитент.Пустая() Тогда
				Предупреждение("Не найден договор между Фирмой аптеки и комитентом");
				Возврат;
			Иначе
				ВидПоступленияТовараКомитент = ДоговорПоставкиКомитент.ВидПоступленияТовара;
			КонецЕсли;
			
			Если ДоговорПоставки.ОтсрочкаПлатежа > 0 Тогда
				ОтсрочкаПлатежа = ДоговорПоставки.ОтсрочкаПлатежа;
			Иначе
				ОтсрочкаПлатежа = Поставщик.ОтсрочкаПлатежа;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ФирмаКомитент = Справочники.Фирмы.ПустаяСсылка();
		ПоставщикКомитент = Справочники.Поставщики.ПустаяСсылка();
		ДоговорПоставкиКомитент = Справочники.ДоговорыПоставки.ПустаяСсылка();
		ВидПоступленияТовараКомитент = Перечисления.ВидыПоступленияТоваров.ПустаяСсылка();
		ДоговорПоставки = ОМ_Справочники.ПолучитьДоговорПоставщика(Фирма,Поставщик,ДатаПоиска);
		ВидПоступленияТовара = ДоговорПоставки.ВидПоступленияТовара;
		Если ДоговорПоставки.ОтсрочкаПлатежа > 0 Тогда
			ОтсрочкаПлатежа = ДоговорПоставки.ОтсрочкаПлатежа;
		Иначе
			ОтсрочкаПлатежа = Поставщик.ОтсрочкаПлатежа;
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьПартию(стр)
	
	ПоставщикКод = Поставщик.Код;
	ПоставщикКодИсходный = ПоставщикКод;
	Если ЗначениеЗаполнено(ПоставщикКомитент) Тогда
		ВидПоступленияПорядок = Перечисления.ВидыПоступленияТоваров.Индекс(ДоговорПоставкиКомитент.ВидПоступленияТовара);
		ВидПоступленияИсходныйПорядок = Перечисления.ВидыПоступленияТоваров.Индекс(ДоговорПоставки.ВидПоступленияТовара);
	Иначе
		ВидПоступленияПорядок = Перечисления.ВидыПоступленияТоваров.Индекс(ВидПоступленияТовара);
		ВидПоступленияИсходныйПорядок = ВидПоступленияПорядок;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФирмаКомитент) Тогда
		ФирмаИсходная = ФирмаКомитент.Код;
	Иначе
		ФирмаИсходная = Фирма.Код;
	КонецЕсли;
	
	НоваяПартия = Справочники.УЗ_Партии.СоздатьЭлемент();
	НоваяПартия.УстановитьНовыйКод();
	Если НоваяПартия.Код = 0 Тогда // иногда не срабатывает УстановитьНовыйКод() и далее вылетает ошибка.  на 8.2 такой картины никогда не было
		#Если Клиент Тогда
			Сообщить("не сработал метод Партия.УстановитьНовыйКод(). Вызваем его повторно.");
		#КонецЕсли
		НоваяПартия.УстановитьНовыйКод();
	КонецЕсли;
	
	Если НоваяПартия.Код = 0 Тогда
		ВызватьИсключение "Код партии = 0";
	КонецЕсли;
	
	КодБезКС = "24"+Формат(Число(НоваяПартия.Код), "ЧЦ=10; ЧВН=; ЧГ=0");
	
	НоваяПартия.Наименование        = ВычислитьКонтрольнуюСумму(КодБезКС);
	//НоваяПартия.Баркод				= стр.Баркод;
	НоваяПартия.ДатаПоступления		= Дата;
	НоваяПартия.ДокументПоступления = Ссылка;
	НоваяПартия.КодТовара			= стр.КодТовара;
	НоваяПартия.К					= стр.КоэффициентРазбивки;
	//НоваяПартия.НомерГТД			= стр.НомерГТД;
	//НоваяПартия.Серия				= стр.Серия;
	//НоваяПартия.СрокГодности		= стр.СрокГодности;
	НоваяПартия.СтавкаНДСЗакуп		= стр.СтавкаНДСЗакуп;
	НоваяПартия.СтавкаНДСРозн		= стр.СтавкаНДСРозн;
	//НоваяПартия.ЦенаГосРегистрации	= стр.ЦенаГосРегистрации;
	НоваяПартия.ЦенаЗакуп			= стр.ЦенаЗакуп;
	НоваяПартия.ЦенаЗакупБезНДСРасчет = стр.ЦенаЗакупБезНДСРасчет;
	//НоваяПартия.ЦенаПроизводителяБезНДС = стр.ЦенаПроизводителя;
	//НоваяПартия.Производитель		= стр.Производитель;
	НоваяПартия.Поставщик			= ПоставщикКод;
	НоваяПартия.ПоставщикИсходный	= ПоставщикКодИсходный;
	НоваяПартия.ВидПоступления		= ВидПоступленияПорядок;
	НоваяПартия.ВидПоступленияИсходный = ВидПоступленияИсходныйПорядок;
	НоваяПартия.ФирмаИсходная		= ФирмаИсходная;
	НоваяПартия.БэкМаржа			= стр.БэкМаржа;
	НоваяПартия.Записать();
	
	Возврат НоваяПартия.Код;
	
	
КонецФункции

Процедура ОбновитьИтоги()
	
	ЭлементыФормы.ИтогиСуммаЗакуп.Заголовок = Формат(Товар.Итог("СуммаЗакуп"),"ЧЦ=10; ЧДЦ=2");
	ЭлементыФормы.ИтогиСуммаРозн.Заголовок = Формат(Товар.Итог("СуммаРозн"),"ЧЦ=10; ЧДЦ=2");
	ЭлементыФормы.ИтогиСуммаЗакупНДС.Заголовок = Формат(Товар.Итог("НДСЗакуп"),"ЧЦ=10; ЧДЦ=2");

	ТЗНДС = Товар.Выгрузить(,"СтавкаНДСЗакуп,НДСЗакуп");
	ТЗНДС.Свернуть("СтавкаНДСЗакуп","НДСЗакуп");
	
	Для каждого стр из ТЗНДС Цикл
		Если стр.СтавкаНДСЗакуп = 10 Тогда
			ЭлементыФормы.ИтогиСуммаЗакупНДС10.Заголовок = Формат(стр.НДСЗАкуп,"ЧЦ=10; ЧДЦ=2");
		ИначеЕсли стр.СтавкаНДСЗакуп = 18 или стр.СтавкаНДСЗакуп = 20 Тогда // НДС20/18 
			ЭлементыФормы.ИтогиСуммаЗакупНДС18.Заголовок = Формат(стр.НДСЗАкуп,"ЧЦ=10; ЧДЦ=2");
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ОбновитьИтоги();
	
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	//Если мКолонкиТовары.Код.Видимость Тогда
	//	Если ДанныеСтроки.Товар <> Неопределено Тогда
	//		ОформлениеСтроки.Ячейки.Код.УстановитьТекст(ДанныеСтроки.Товар.Код);
	//	Иначе
	//		ОформлениеСтроки.Ячейки.Код.УстановитьТекст("");
	//	КонецЕсли;
	//КонецЕсли;
	 Если ДанныеСтроки.Коэфф < ДанныеСтроки.КоэффициентРазбивки Тогда
		 ОформлениеСтроки.ЦветФона=Новый Цвет(176,224,230);
	 КонецЕсли;	
	
	 ЖВ = ДанныеСтроки.Товар.ЖНВЛС;
	 Если  ЖВ = Ложь и ДанныеСтроки.ЦенаГосРегистрации > 0 ТОгда
		 //Это строка с ошибками расценки или подозрительная с точки зрения цен или сроков годности
		 ОформлениеСтроки.ЦветФона=Новый Цвет(255,0,0);
	 КонецЕсли;
	 
	 
	 Если ЖВ = Истина тогда
		 //ОформлениеСтроки.Шрифт.Жирный = Истина;
		 ОформлениеСтроки.Ячейки.ЖНВЛС.ЗначениеКартинки  =БиблиотекаКартинок.Здоровье;
	 КонецЕсли;
	 


	 //+++ENT-798
	 Отбор = Новый Структура;
	 Отбор.Вставить("КодПартии",ДанныеСтроки.КодПартии);
	 МассивСтрок = ТЗКодовНС.НайтиСтроки(Отбор);
	 Если МассивСтрок.Количество()> 0 тогда
		ОформлениеСтроки.Ячейки.КодНС.УстановитьТекст(МассивСтрок[0].КодНС);		
	 КонецЕсли;

	 //---
	 
	 //Если  ОшибкиРасценки.Найти(ДанныеСтроки.Партия,"Партия")<> Неопределено ТОгда
	 //    //Это строка с ошибками расценки или подозрительная с точки зрения цен или сроков годности
	 //    ОформлениеСтроки.ЦветФона=Новый Цвет(255,155,240);
	 //КонецЕсли;
	
КонецПроцедуры

Процедура ТоварПередУдалением(Элемент, Отказ)
	
////------------------<Контроль изменения серии задним числом>-------------------GtG---- 
//	ТХТ="ВЫБРАТЬ
//	    |	СУММА(ПартииЖНВЛСОбороты.КолвоРасход) КАК КолвоРасход,
//	    |	ПартииЖНВЛСОбороты.Регистратор КАК Регистратор
//	    |ИЗ
//	    |	РегистрНакопления.ПартииЖНВЛС.Обороты(
//	    |			&НачПериода,
//	    |			,
//	    |			Регистратор,
//	    |			Товар = &ВыбТовар
//	    |				И Склад = &ВыбСклад
//	    |				И Партия = &ВыбПартия) КАК ПартииЖНВЛСОбороты
//	    |
//	    |СГРУППИРОВАТЬ ПО
//	    |	ПартииЖНВЛСОбороты.Регистратор";
//	
//	
//	
//	ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
//	
//	Партия=ТСД.Партия;
//	
//	
//	Если Партия.Пустая()=Ложь тогда
//		
//		Запрос= Новый Запрос;
//		Запрос.Текст=ТХТ;
//		
//		Запрос.УстановитьПараметр("НачПериода",НачалоДня(Дата));
//		Запрос.УстановитьПараметр("ВыбТовар",ТСД.ТОвар);
//		Запрос.УстановитьПараметр("ВыбСклад",Склад);
//		Запрос.УстановитьПараметр("ВыбПартия",ТСД.Партия);
//		
//		ТЗ=Запрос.Выполнить().Выгрузить();
//		
//		Если ТЗ.Количество()>0 Тогда
//			Сообщить(""+ТСД.ТОвар+"   Партия: "+Партия);
//			Сообщить("УЖЕ БЫЛ РАСХОД ЭТОЙ Партии!");
//			Для Каждого Стр из ТЗ Цикл
//				Сообщить(""+Стр.Регистратор+" расход "+Стр.КолвоРасход);
//			КонецЦикла;
//			Отказ=Истина;  // отключает процесс выбора из справочника
//		КонецЕсли;//ТЗ.Количество()>0 
//	КонецЕсли;//Партия.Пустая()=Ложь	
//	Если Отказ = Ложь Тогда
//		Предупреждение("Если удалили случайно, то можно закрыть документ без сохранения!",5);		
//	КонецЕсли;
	
	
КонецПроцедуры

Функция ПроверкаЗаполненияКритическиВажныхЗначенийДляСтроки  (ТекСтрокаТЧ) 
    // Назначение:
	// проверяет заполнены ли поля Цена и ставка ндс
	// Возвращает истина или ложь
    // 
	//--------------------------------------------------------------------------------
	 Если ТекСтрокаТЧ.Количество=0 Тогда
		 Предупреждение("Не указано количество!");
		 Возврат Ложь;
	 КонецЕсли;
	 
     Возврат Истина;
 КонецФункции

Функция НДСЗакупПравильный(ТекСтрокаТЧ)	// Назначение:
	// Проверяет на глюк
	// сумма НДС не должна отличаться на 0,хх от расчетного значения
	// допустимая погрешность ЛимитОтклоненияСуммПриПоступленииТовара от суммы НДС по 1-й штуке
	//============================================================================ GtG ===
	ПРеделПогрешности=Константы.ЛимитОтклоненияСуммПриПоступленииТовара.Получить();
	Если ПроверкаЗаполненияКритическиВажныхЗначенийДляСтроки  (ТекСтрокаТЧ)Тогда
		
		РасчетноеЗначениеНаВсюСумму=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(ТекСтрокаТЧ["СуммаЗакуп"],ТекСтрокаТЧ.СтавкаНДС,2,Дата);
		РасчетноеЗначениеНаВсюСумму=Окр(РасчетноеЗначениеНаВсюСумму,2);
		РасчетноеЗначение =РасчетноеЗначениеНаВсюСумму/ТекСтрокаТЧ.КоличествоФакт;
		
		РасчетноеЗначение=Окр(РасчетноеЗначение,2);
		МаксДопПогрешность=ПРеделПогрешности/100* РасчетноеЗначение;
		
		ТекЗн          =Окр(ТекСтрокаТЧ["НДСЗакуп"]/ТекСтрокаТЧ.КоличествоФакт,2); // 1 Шт
		ТекЗнНаВсюСумму=ТекСтрокаТЧ.НДСЗакуп;
		
		
		Погрешность= ТекЗн-РасчетноеЗначение;
		
		Если Погрешность<0 Тогда
			Погрешность=Погрешность*(-1);
		КонецЕсли; 
//		                            -maxD         +maxD
		//----------------------------{-----Rzn-----}--------------------------------------->
//		                     *   *       ^        ^   *      *
//                           |   |       |        |   |      |

		Если  (РасчетноеЗначение+Погрешность> РасчетноеЗначение+МаксДопПогрешность) или (РасчетноеЗначение-Погрешность< РасчетноеЗначение-МаксДопПогрешность)Тогда
			Предупреждение("Странная сумма НДС закуп.!
							|Расчетное значение НДС на всю сумму = "+РасчетноеЗначениеНаВсюСумму+"
							|Текущее значение НДС на всю сумму = "+ТекЗнНаВсюСумму+"
							|
							|Расчетное значение НДС на 1шт       = "+РасчетноеЗначение+"
							|Текущее значение НДС на 1шт       = "+ТекЗн+"
							|
							|Разница в НДС за 1шт. более допустимой: 
							| "+Погрешность+"  >  ("+ПРеделПогрешности+"% * "+РасчетноеЗначение+") = " +Окр(МаксДопПогрешность,5));
			Возврат	ЛОЖЬ;// Нужно пересчитать						
		Иначе
			ВОЗВРАТ ИСТИНА ; // ОК
		КонецЕсли; 
	КонецЕсли; 	
	ВОЗВРАТ ИСТИНА; // по умолчанию все ОК
 КонецФункции 


Процедура ПересчетСтрокиДокумента  (ТекСтрД, ИмяКол,БезВопросов= ЛОЖЬ) Экспорт
	
	//Если ИмяКол = "Количество" Тогда
	//	ТекСтрД.СуммаЗакуп				= ТекСтрД.Количество*ТекСтрД.ЦенаЗакуп;
	//	ТекСтрД.НДСЗакуп				= Окр(ТекСтрД.СуммаЗакуп - ТекСтрД.СуммаЗакуп/(1+ТекСтрД.СтавкаНДСЗакуп/100),2);
	//	ТекСтрД.ЦенаЗакупБезНДСРасчет	= Окр((ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп)/(ТекСтрД.Количество*ТекСтрД.Коэфф),2)* ТекСтрД.Коэфф;
	//	ТекСтрД.СуммаЗакупБезНДСРасчет	= ТекСтрД.ЦенаЗакупБезНДСРасчет * ТекСтрД.Количество;
	//	ТекСтрД.СуммаОстаткаОкругления	= (ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп) - ТекСтрД.СуммаЗакупБезНДСРасчет;
	//	ТекСтрД.СуммаРозн				= ТекСтрД.ЦенаРозн*ТекСтрД.Количество;	
	//КонецЕсли;
	
	Если ИмяКол = "ЦенаЗакуп" или ИмяКол = "Количество" Тогда
		ТекСтрД.СуммаЗакуп				= ТекСтрД.ЦенаЗакуп*ТекСтрД.Количество;
		ТекСтрД.НДСЗакуп				= Окр(ТекСтрД.СуммаЗакуп - ТекСтрД.СуммаЗакуп/(1+ТекСтрД.СтавкаНДСЗакуп/100),2);
		ТекСтрД.СуммаЗакупБезНДС		= ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп;
		ТекСтрД.ЦенаЗакупБезНДС			= ТекСтрД.СуммаЗакупБезНДС/ТекСтрД.Количество;
		ТекСтрД.ЦенаЗакупБезНДСРасчет	= Окр((ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп)/(ТекСтрД.Количество*ТекСтрД.Коэфф),2)* ТекСтрД.Коэфф;
		ТекСтрД.СуммаЗакупБезНДСРасчет	= ТекСтрД.ЦенаЗакупБезНДСРасчет * ТекСтрД.Количество ;
		ТекСтрД.СуммаОстаткаОкругления	= (ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп) - ТекСтрД.СуммаЗакупБезНДСРасчет;
	КонецЕсли;	
	
	Если ИмяКол = "СуммаЗакуп" Тогда
		ТекСтрД.ЦенаЗакуп				= ТекСтрД.СуммаЗакуп/ТекСтрД.Количество;
		ТекСтрД.НДСЗакуп				= Окр(ТекСтрД.СуммаЗакуп - ТекСтрД.СуммаЗакуп/(1+ТекСтрД.СтавкаНДСЗакуп/100),2);
		ТекСтрД.СуммаЗакупБезНДС		= ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп;
		ТекСтрД.ЦенаЗакупБезНДСРасчет	= Окр((ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп)/(ТекСтрД.Количество*ТекСтрД.Коэфф),2)*ТекСтрД.Коэфф;
		ТекСтрД.ЦенаЗакупБезНДС			= ТекСтрД.СуммаЗакупБезНДС/ТекСтрД.Количество;
		ТекСтрД.СуммаЗакупБезНДСРасчет	= ТекСтрД.ЦенаЗакупБезНДСРасчет * ТекСтрД.Количество;
		ТекСтрД.СуммаОстаткаОкругления	= (ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп) - ТекСтрД.СуммаЗакупБезНДСРасчет;
	КонецЕсли;
	
	Если ИмяКол = "СтавкаНДСЗакуп" Тогда
		ТекСтрД.НДСЗакуп				= Окр(ТекСтрД.СуммаЗакуп - ТекСтрД.СуммаЗакуп/(1+ТекСтрД.СтавкаНДСЗакуп/100),2);
		ТекСтрД.СуммаЗакупБезНДС		= ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп;
		ТекСтрД.ЦенаЗакупБезНДСРасчет	= Окр((ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп)/(ТекСтрД.Количество*ТекСтрД.Коэфф),2)*ТекСтрД.Коэфф;
		ТекСтрД.ЦенаЗакупБезНДС			= ТекСтрД.ЦенаЗакупБезНДСРасчет;
		ТекСтрД.СуммаЗакупБезНДСРасчет	= ТекСтрД.ЦенаЗакупБезНДСРасчет * ТекСтрД.Количество;
		ТекСтрД.СуммаОстаткаОкругления	= (ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп) - ТекСтрД.СуммаЗакупБезНДСРасчет;
	КонецЕсли;	
	

	Если ИмяКол = "ЦенаРозн" Тогда
		ТекСтрД.СуммаРозн = ТекСтрД.ЦенаРозн*ТекСтрД.Количество;
	КонецЕсли;
	
	Если ИмяКол = "СуммаРозн" Тогда
		ТекСтрД.ЦенаРозн = Окр(ТекСтрД.СуммаРозн/ТекСтрД.Количество,2);
	КонецЕсли;
	
	Если ИмяКол = "Коэфф" Тогда
		ТекСтрД.ЦенаЗакупБезНДСРасчет	= Окр((ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп)/(ТекСтрД.Количество*ТекСтрД.Коэфф),2)* ТекСтрД.Коэфф;
		ТекСтрД.СуммаЗакупБезНДСРасчет	= ТекСтрД.ЦенаЗакупБезНДСРасчет * ТекСтрД.Количество;
		ТекСтрД.СуммаОстаткаОкругления	= (ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп) - ТекСтрД.СуммаЗакупБезНДСРасчет;
	КонецЕсли;
	
	
    
КонецПроцедуры


Процедура ТоварПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования = Истина Тогда
		Возврат;
	КонецЕсли;

	
	ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	 ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
	 
	 
	 Если (ИмяТекКол="Количество") Тогда
		 ИмяТекКол="Количество";
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="ЦенаЗакупБезНДС" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="СтавкаНДСЗакуп" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="ЦенаРозн" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="СуммаРозн" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли;
	 
	 Если ИмяТекКол="СуммаЗакуп" Тогда
		  ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="НДСЗакуп" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="Коэфф" Тогда
		 Если ТСД.Коэфф <> ТСД.КоэффициентРазбивки и ТСД.Коэфф <> 1 Тогда
		     Предупреждение("Коэффициент может быть равен 1 или " + Формат(ТСД.КоэффициентРазбивки,"ЧГ=0"));
		     ТСД.Коэфф = мКоэффициент;
		     Отказ = Истина;
		     Возврат;
		 КонецЕсли;
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 	 
	 
	 //============================< Резервные затычки >================================GtG===

	 Если ИмяТекКол="" Тогда
		 ВОЗВРАТ ;
	 КонецЕсли; 
	
	
	
КонецПроцедуры

Процедура ТоварЕИТОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТС=ЭлементыФормы.ТОвар.ТекущаяСтрока;
	ТС.Коэфф= ВыбранноеЗначение.К;	
	
КонецПроцедуры


Процедура КоманднаяПанельТоваракнПодбор(Кнопка)
	
	ОтказПодбора = Ложь;
	Т = "";
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!");
		Возврат;
	КонецЕсли; 
	
	Если Склад.Пустая() Тогда 
		Т = Т + Символы.ПС + "Не заполнен Склад.";
		ОтказПодбора = Истина;
	КонецЕсли;
	
	Если Поставщик.Пустая() Тогда 
		Т = Т + Символы.ПС + "Не заполнен Поставщик.";
		ОтказПодбора = Истина;
	КонецЕсли;	
	
	Если Фирма.Пустая() Тогда 
		Т = Т + Символы.ПС + "Не заполнена Фирма.";
		ОтказПодбора = Истина;
	КонецЕсли;	
	
	Если ДоговорПоставки.Пустая() Тогда 
		Т = Т + Символы.ПС + "Не заполнен договор поставки ( закладка <Дополнительно>).";
		ОтказПодбора = Истина;
	КонецЕсли;	
	
	Если ВидПоступленияТовара.Пустая() Тогда 
		Т = Т + Символы.ПС + "Не заполнен вид поступления товара ( закладка <Дополнительно>).";
		ОтказПодбора = Истина;
	КонецЕсли;
	
	Если Склад.РаботаТолькоПоКомиссии Тогда
		Если ФирмаКомитент.Пустая() или ПоставщикКомитент.Пустая() или ДоговорПоставкиКомитент.Пустая() или ВидПоступленияТовараКомитент.Пустая() Тогда	
			Т = Т + Символы.ПС + "Не заполнены реквизиты комиссии ( закладка <Комиссия> )";	
			ОтказПодбора = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ОтказПодбора = Истина Тогда
		Предупреждение(Т);
		Возврат;
	КонецЕсли;
	
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПолучитьФорму("ФормаДляПодбора","",КлючУник);
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.ОткрытьМодально(0);
	
	
	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнРасценить(Кнопка)
	
	Если ТипНакладной = Перечисления.ТипыНакладной.ИнтернетЗаказ Тогда
		Предупреждение("ВНИМАНИЕ ! 
		|Накладная сформирована на основании интернет заказа! 
		|Изменение цены может привести к неприятным последствиям");	
	КонецЕсли;
	
	ОМ6_КоманднаяПанельКнопкаРасценить(ЭтаФорма,ЭтотОбъект,Товар);	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыСохранить(Кнопка)
	
	Если Проведен = Истина Тогда
		Предупреждение("Документ НЕ сохранен. В проведенном документе пользуйтесь кнопкой <Провести>!");
		Возврат;
	КонецЕсли;
	
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Вы действительно хотите сохранить документ/изменения?",Режим,0);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнВыгрузить(Кнопка)
	
	Если Проведен = Истина Тогда 
		Если Статус = Перечисления.СтатусПрихода.ВыгруженНаАптеку Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Документ был ранее выгружен в аптеку. ВЫГРУЗИТЬ еще раз?", Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		Иначе
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Вы действительно хотите выгрузить документ в аптеку?", Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВыгрузитьВАптеку() = Истина Тогда
			Предупреждение("Документ выгружен!",10);
		Иначе
			Предупреждение("Документ не выгружен!",10);
		КонецЕсли;
		ЭтаФорма.Закрыть();
	Иначе
		Предупреждение("Документ не проведен. Выгрузка невозможна",10);
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнДвижениеПоПартии(Кнопка)
	
	
	ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	
	Карточка=Отчеты.УЗ_ДвижениеТовара.Создать();
	
	Карточка.КодПартии=ТСД.КодПартии;
	Карточка.ВыбСклад=Склад;
	Карточка.ВыбТовар=ТСД.ТОвар;
	Карточка.ВыбФирма=Фирма;
	Карточка.НачПер=НачалоГода(Дата);
	Карточка.КонПер=ТекущаяДата();
	
	Ф=Карточка.ПолучитьФорму("Форма");
	
	Ф.Открыть();
	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнКарточкаСтроки(Кнопка)
	
	ФормаКарточки = ЭтотОбъект.ПолучитьФорму("КарточкаСтроки");
	ФормаКарточки.ВладелецФормы = ЭтаФорма;
	ФормаКарточки.ИндексТекСтроки = Товар.Индекс(ЭлементыФормы.Товар.ТекущаяСтрока);
	ФормаКарточки.Регион = Склад.Регион;
	ФормаКарточки.Проведен = ЭтотОбъект.Проведен;
	ФормаКарточки.ОткрытьМодально();	
	
КонецПроцедуры


Процедура ДобавитьТовар(СтрокаДобавления) 
    // Назначение:
	// Добавляет строку товара в документ
	// выполняет расчет числовых полей
    // 
	//--------------------------------------------------------------------------------
	
	ПарамПоиска = Новый  Структура;
	ПарамПоиска.Вставить("Товар",СтрокаДобавления.Товар);
	ПарамПоиска.Вставить("ЦенаЗакупБезНДС",СтрокаДобавления.ЦенаБезНДС);
	ПарамПоиска.Вставить("СтавкаНДСЗакуп",СтрокаДобавления.СтавкаНДС);
	ПарамПоиска.Вставить("Коэфф",СтрокаДобавления.ЕИТ.К);
	
	
	
	МассивНайденныхСтрок= Товар.НайтиСтроки(ПарамПоиска);
	
	Если МассивНайденныхСтрок.Количество()=0 Тогда
		
		
			//----------------------------< Добавляем только при добавлении КоэффДобавления=1  >--------------------------------GtG---
			НоваяСтрока=Товар.Добавить();
			НоваяСтрока.КодТовара=СтрокаДобавления.Товар.Код;
			НоваяСтрока.Товар=СтрокаДобавления.Товар;
			НоваяСтрока.Количество=СтрокаДобавления.Количество;
			НоваяСтрока.СтавкаНДСЗакуп=?(Поставщик.КонтрагентНаУСН = Истина, 0 , СтрокаДобавления.СтавкаНДС);
			НоваяСтрока.СтавкаНДСРозн = СтрокаДобавления.СтавкаНДС;
			НоваяСтрока.ЦенаГосРегистрации=0;
			//-----------------< единица  >----------------GtG---
			НоваяСтрока.Коэфф=СтрокаДобавления.ЕИТ.К;
			НоваяСтрока.КоэффициентРазбивки=СтрокаДобавления.Товар.ЕдиницаПоУмолчанию.К;
	        НоваяСтрока.ЦенаЗакупБезНДС = СтрокаДобавления.ЦенаБезНДС;
			НоваяСтрока.СуммаЗакупБезНДС = СтрокаДобавления.СуммаБезНДС;
			НоваяСтрока.ЦенаЗакуп = НоваяСтрока.ЦенаЗакупБезНДС + Окр(НоваяСтрока.ЦенаЗакупБезНДС/100*НоваяСтрока.СтавкаНДСЗакуп,2); 
			НоваяСтрока.СуммаЗакуп = НоваяСтрока.Количество*НоваяСтрока.ЦенаЗакуп;
			
			ОбщСтрокаВТ=НоваяСтрока;
			ПересчетСтрокиДокумента  (ОбщСтрокаВТ, "СуммаЗакуп", ИСТИНА);// пересчитывает ничего не спрашивая		
			//-----------------< создаем партию  >----------------GtG--- 
			НоваяСтрока.КодПартии=СоздатьПартию(НоваяСтрока);
			
	Иначе
		СтрокаВТ=МассивНайденныхСтрок[0];
		СтрокаВТ.Количество=СтрокаВТ.Количество+СтрокаДобавления.Количество;
		ПересчетСтрокиДокумента  (ОбщСтрокаВТ, "СуммаЗакуп", ИСТИНА);// пересчитывает ничего не спрашивая
		ОбщСтрокаВТ=СтрокаВТ;
		
	КонецЕсли; 
	
	
	
	
	РезДобавления=ОбщСтрокаВТ;
	
 КонецПроцедуры
 
Процедура УправлениеВидимостьюСтраниц()
	 
	Если НесопоставленныйТовар.Количество() = 0 Тогда
		ЭлементыФормы.ПанельТовара.Страницы.СтраницаНесопоставленногоТовара.Видимость = Ложь;
	Иначе
		ЭлементыФормы.ПанельТовара.Страницы.СтраницаНесопоставленногоТовара.Видимость = Истина;
	КонецЕсли;
	
	Если ОшибкиРасценки.Количество() = 0 Тогда
		ЭлементыФормы.ПанельТовара.Страницы.СтраницаОшибокРасценки.Видимость = Ложь;
	Иначе
		ЭлементыФормы.ПанельТовара.Страницы.СтраницаОшибокРасценки.Видимость = Истина;
	КонецЕсли;	
	
КонецПроцедуры
 
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда
		Для Ы=0 По ЗначениеВыбора.Количество()-1 Цикл
			
		      СтрТЗ= ЗначениеВыбора.Получить(Ы) ;
			  
			  ДобавитьТовар(СтрТЗ);
		
		КонецЦикла;
	ИначеЕсли ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.МестаХранения") Тогда
		Склад = ЗначениеВыбора;
		Фирма = Склад.Фирма;
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура СкладПриИзменении(Элемент)
	
	Если Элемент.Значение.Фирма <> Фирма Тогда
		Фирма = Элемент.Значение.Фирма;
		ДоговорПоставки = Справочники.ДоговорыПоставки.ПустаяСсылка();
	КонецЕсли;
	
	Если Элемент.Значение.ТипСклада = Перечисления.ТипыМХ.Опт Тогда
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Ложь;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Ложь;
	Иначе
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Истина;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Истина;
	КонецЕсли;	
	
	ОбновитьДанныеПоДоговорам();
	
	
КонецПроцедуры

Процедура ФирмаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если (Склад.Фирма <> ВыбранноеЗначение) и (НЕ Склад.Пустая()) Тогда
		Предупреждение("Нельзя выбрать фирму отличную от фирмы по уже выбранной ранее аптеке!"	);
		ВыбранноеЗначение = Фирма;
	КонецЕсли;	
	
КонецПроцедуры

Процедура КоманднаяПанельОшибкиНайтиСтрокуВТаблицеТовара(Кнопка)
	
	Если ОшибкиРасценки.Количество()=0 Тогда
		Возврат;
	КонецЕсли;	
	ОшПартия=ЭлементыФормы.ОшибкиРасценки.ТекущаяСтрока.Партия;
	Стр=Товар.Найти(ОшПартия,"КодПартии");
	ЭлементыФормы.ПанельТовара.ТекущаяСтраница = ЭлементыФормы.ПанельТовара.Страницы.СтраницаТовара;
	ЭлементыФормы.Товар.ТекущаяСтрока=Стр;	
	
КонецПроцедуры

Процедура ОбновитьДоступностьДокумента()
	
	// Всё , что ниже - полный алес: на данный момент работают аптеки с разной программой и разной логикой обработки статусов документов
	
	ФормаДляПросмотра = Ложь;
	
	Если НЕ ЭтоНовый() Тогда
		ДатаЗапрета = НастройкаПравДоступа.ВернутьДатуЗапретаРедактирования(Склад);
		Если Дата <= ДатаЗапрета Тогда
			ФормаДляПросмотра = Истина;
		КонецЕсли;
	КонецЕсли;  
	
	
	//запрещаем
	//Если Склад.АптекаНаНовомПО и (Статус = Перечисления.СтатусПрихода.Аннулирован 
	//	или Статус = Перечисления.СтатусПрихода.ВыгруженНаАптеку
	//	или СтатусДокАптеки = Перечисления.СтатусДокАптеки.Проведен )  
	//	Тогда
	//	
	//	ФормаДляПросмотра = Истина;	
	//КонецЕсли;
	//
	Если Проведен=Истина ТОгда
	//	
	//	ЭлементыФормы.Склад.ТолькоПросмотр = Истина; //нельзя изменять получателя
	//	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнЗафиксироватьИсправления.Доступность = Истина;
	//	
		ЭлементыФормы.НадписьПроведения.Заголовок = "ДОКУМЕНТ ПРОВЕДЕН!!!";

	//	Если Не РольДоступна("НачПриемногоОтдела") Тогда
	//		ФормаДляПросмотра = Истина;
	//	КонецЕсли;
	//ИначеЕсли Склад.АптекаНаНовомПО = Ложь или СтатусДокАптеки = Перечисления.СтатусДокАптеки.Неопределено или НЕ ЗначениеЗаполнено(СтатусДокАптеки) Тогда
	//	ФормаДляПросмотра = Ложь;
	КонецЕсли; 
	
	
	
	
	
	//разрешаем 
	Если СтатусДокАптеки = Перечисления.СтатусДокАптеки.КОбработкеОфисом Тогда
		ЭтаФорма.ТолькоПросмотр = Ложь;
		ЭлементыФормы.Склад.ТолькоПросмотр = Истина; //нельзя изменять получателя
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнАннулироватьДокумент.Доступность = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнЗафиксироватьИсправления.Доступность = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОДФ_Провести.Доступность = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОДФ_Записать.Доступность = Ложь;		
	ИначеЕсли СтатусДокАптеки = Перечисления.СтатусДокАптеки.Аннулирован Тогда
		ЭтаФорма.ТолькоПросмотр = Ложь;
	Иначе
		ЭтаФорма.ТолькоПросмотр = ФормаДляПросмотра;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнАннулироватьДокумент.Доступность = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнЗафиксироватьИсправления.Доступность = Ложь;
	КонецЕсли;
	
	
	Если НЕ РольДоступна("супер_АДМИНИСТРАТОР") Тогда
		Если ТипНакладной = Перечисления.ТипыНакладной.ИнтернетЗаказ или ТипНакладной = Перечисления.ТипыНакладной.ИндивидуальныйЗаказ Тогда
			ЭлементыФормы.ТипНакладной.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;
	

	
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	
	Если ЭтоНовый()=Истина Тогда
		Если НеудачныйВводНаОсновании=Истина ТОгда
		 	ЭтаФорма.Закрыть();
		КонецЕсли; 
		
		
		ДАта=ТекущаяДата();
		
	КонецЕсли;  
	
	Если Склад.ТипСклада = Перечисления.ТипыМХ.Опт Тогда
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Ложь;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Ложь;
	Иначе
		ЭлементыФормы.Товар.Колонки.ЦенаРозн.Видимость=Истина;
		ЭлементыФормы.Товар.Колонки.СуммаРозн.Видимость=Истина;
	КонецЕсли;
	
	
	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект,СписокПечатныхФорм);
	
	ОбновитьДоступностьДокумента();
	
	
	//+++ENT-798 заполним колонку на форме данными из регистра
	Если не ЭтоНовый() Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	КодыПартий.КодПартии КАК КодПартии
		               |ПОМЕСТИТЬ втКодыПартий
		               |ИЗ
		               |	&КодыПартий КАК КодыПартий
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	УЗ_Партии_КодНС.КодПартии КАК КодПартии,
		               |	УЗ_Партии_КодНС.КодНС КАК КодНС
		               |ИЗ
		               |	РегистрСведений.УЗ_Партии_КодНС КАК УЗ_Партии_КодНС
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКодыПартий КАК втКодыПартий
		               |		ПО УЗ_Партии_КодНС.КодПартии = втКодыПартий.КодПартии";
		
		Запрос.УстановитьПараметр("КодыПартий", Товар.Выгрузить(,"КодПартии"));
		ТзКодовНС = ЗАпрос.Выполнить().Выгрузить();
	КонецЕсли;
	//---

КонецПроцедуры

Процедура КоманднаяПанель1СопоставитьПозицию(Кнопка)
	
	Если НесопоставленныйТовар.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УсловиеФильтра = Новый СписокЗначений;
	
	ТЗНесопоставленныйТовар = Новый ТаблицаЗначений;
	ТЗНесопоставленныйТовар.Колонки.Добавить("Код");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Товар");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Связан");
	ТЗНесопоставленныйТовар.Колонки.Добавить("БарКод");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Производитель");
	ТЗНесопоставленныйТовар.Колонки.Добавить("Блокировка");
	
	Для каждого стр из НесопоставленныйТовар Цикл
		НоваяСтрока = ТЗНесопоставленныйТовар.Добавить();
		НоваяСтрока.Код = стр.Код;
		НоваяСтрока.Товар = стр.Товар;
		НоваяСтрока.Связан = NULL;
		НоваяСтрока.БарКод = стр.Баркод;
		НоваяСтрока.Блокировка = Ложь;
		
		УсловиеФильтра.Добавить(стр.Код);
	КонецЦикла;
	
	
	Связки=Обработки.УстановкаСвязокСПоставщикомИзДокумента.Создать();
	ФормаСвязок = Связки.ПолучитьФорму("УстановкаСвязокСПоставщикомНовая",, Новый УникальныйИдентификатор );
	ФормаСвязок.УсловиеФильтра=УсловиеФильтра;
	ФормаСвязок.ТЗНесопоставленныйТовар = ТЗНесопоставленныйТовар;
	ФормаСвязок.Поставщик=Поставщик;
	ФормаСвязок.ОткрытьМодально();	
	
КонецПроцедуры

Процедура КоманднаяПанель1ПеренестиВНакладную(Кнопка)
	
	
	ЕстьЧтоЗаписывать = Ложь;
	
	Если Склад.ТипНалогообложения = Перечисления.ТипыНалогообложения.УСН Тогда
		АптекаНаУСН = Истина;
	Иначе
		АптекаНаУСН = Ложь;
	КонецЕсли;	
	
	Для каждого стр из НесопоставленныйТовар Цикл
		
		Если стр.Обработана = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		Если  стр.ЦенаЗакуп = 0 или стр.ЦенаЗакупБезНДС = 0 Тогда
			Сообщить("по строке №" + стр.НомерСтроки + " не заданы закупочные цены");
			Продолжить;
		КонецЕсли;
		
		Если Цел(стр.ЦенаЗакуп/(1 + стр.СтавкаНДСЗакуп/100)) <> Цел(стр.ЦенаЗакупБезНДС)  Тогда
			Сообщить("по строке №" + стр.НомерСтроки + " некорректно заданы закупочные цены");
			Продолжить;
		КонецЕсли;
		
		Если Поставщик.ПоставщикСвязок.Пустая() Тогда
			ПоставщикСвязок = Поставщик;
		Иначе
			ПоставщикСвязок = Поставщик.ПоставщикСвязок;
		КонецЕсли;
		
		СтрокаТовара = ОМ_Справочники.ПолучитьТоварПоСвязке(СокрЛП(стр.Код),ПоставщикСвязок);
		Если СтрокаТовара = Неопределено Тогда
			Продолжить;
		Иначе
		КонецЕсли;
		
		СтрДок = Товар.Добавить();
		СтрДок.КодТовара = СтрокаТовара.КодТовара;
		СтрДок.Товар = СтрокаТовара.Товар;
		СтрДок.Коэфф	 = СтрокаТовара.Коэфф;
		СтрДок.КоэффициентРазбивки = СтрДок.Коэфф;
		СтрДок.Количество= стр.Количество;
		СтрДок.Баркод = СокрЛП(стр.БарКод);
		СтрДок.Серия = стр.Серия;
		СтрДок.СрокГодности = стр.СрокГодности;
		СтрДок.НомерГТД = стр.НомерГТД;
		СтрДок.НомерСертификата = стр.НомерСертификата;
		СтрДок.ЦенаГосрегистрации = стр.ЦенаГосрегистрации;
		СтрДок.ЦенаПроизводителя = стр.ЦенаПроизводителя;
		СтрДок.ЦенаЗакупБезНДС = стр.ЦенаЗакупБезНДС;
		СтрДок.ЦенаЗакуп = стр.ЦенаЗакуп;
		СтрДок.СтавкаНДСЗакуп = стр.СтавкаНДСЗакуп;
		СтрДок.КодПоставкиНаСклад = стр.КодПоставкиНаСклад;
		
		Если Поставщик.КонтрагентНаУСН = Истина Тогда
			СтрДок.СтавкаНДСРозн = СтрокаТовара.СтавкаНДС;
		Иначе
			СтрДок.СтавкаНДСРозн = стр.СтавкаНДСЗакуп;
		КонецЕсли;
		
		Если АптекаНаУСН Тогда
			СтрДок.СтавкаНДСРозн = 0;		
		КонецЕсли;
		
		
		Если стр.СуммаЗакуп > 0 Тогда
			СтрДок.СуммаЗакуп =  стр.СуммаЗакуп;
		Иначе
			СтрДок.СуммаЗакуп = СтрДок.ЦенаЗакуп*СтрДок.Количество;
		КонецЕсли;
		СтрДок.НДСЗакуп = ОМ3_НДСИзСуммыПоСтавке(СтрДок.СуммаЗакуп,СтрДок.СтавкаНДСЗакуп);		
		
		Если ТипНакладной = Перечисления.ТипыНакладной.ИндивидуальныйЗаказ Тогда
			СтрДок.ЦенаРозн = стр.ЦенаРозн;
			СтрДок.СуммаРозн = СтрДок.ЦенаРозн*СтрДок.Количество;
		КонецЕсли;
		
		СтрДок.ВходящаяЦенаПоставщика = стр.ВходящаяЦенаПоставщика;
		СтрДок.ВходящаяСтавкаНДСПоставщика = стр.ВходящаяСтавкаНДСПоставщика;
		СтрДок.КачествоТовара = стр.КачествоТовара;
		
		Попытка
			Если НЕ ПустаяСтрока(стр.Производитель) Тогда
				пл_НаименованияПроизводителей = Справочники.НаименованияПроизводителей.НайтиПоНаименованию(стр.Производитель, Истина);
				Если пл_НаименованияПроизводителей.Пустая() Тогда
					Эл = Справочники.НаименованияПроизводителей.СоздатьЭлемент();
					Эл.Наименование = стр.Производитель;
					Эл.ДатаСоздания = ТекущаяДата();
					Эл.Записать();
					СтрДок.Производитель = Эл.Ссылка;
				Иначе
					СтрДок.Производитель = пл_НаименованияПроизводителей;
				КонецЕсли;
			КонецЕсли;
		Исключение                 
		КонецПопытки;
				
		СтрДок.НомерЗаказа = Стр.НомерЗаказа;

		СтрДок.СуммаЗакупБезНДС = Окр(СтрДок.СуммаЗакуп/(1+СтрДок.СтавкаНДСЗакуп/100),2);
		СтрДок.ЦенаЗакупБезНДСРасчет	= Окр((СтрДок.СуммаЗакуп - СтрДок.НДСЗакуп)/(СтрДок.Количество*СтрДок.Коэфф),2)* СтрДок.Коэфф;
		СтрДок.СуммаЗакупБезНДСРасчет	= СтрДок.ЦенаЗакупБезНДСРасчет * СтрДок.Количество ;
		СтрДок.СуммаОстаткаОкругления	= (СтрДок.СуммаЗакуп - СтрДок.НДСЗакуп) - СтрДок.СуммаЗакупБезНДСРасчет;
		СтрДок.БэкМаржа = стр.БэкМаржа;
		
		СтрДок.КодПартии=СоздатьПартию(СтрДок);		
		
		ЕстьЧтоЗаписывать = Истина;
		стр.Обработана = Истина;
		
		//==>ЕНТ-1386.Коробка.2019.02.25
		Если Поставщик.Код = 3055 Тогда
			
			КодПартии_Поиск	= ПриходТовараСервер.ПолучитьКодБудущейПартииНесопоставленногоТовара(Число(стр.Код), НесопоставленныйТовар.Индекс(стр)+1,Номер);
			Запись = РегистрыСведений.УЗ_Партии_КодНС.СоздатьМенеджерЗаписи();
			Запись.КодПартии		= КодПартии_Поиск;
			Запись.ГУИДДокумента	= Ссылка.УникальныйИдентификатор();
			Запись.Прочитать();
			
			Запись.КодПартии	= СтрДок.КодПартии;
			Запись.Записать();
		
		КонецЕсли; 
		//<==ЕНТ-1386.Коробка.2019.02.25
		
	КонецЦикла;
	Если ЕстьЧтоЗаписывать = Истина Тогда
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура НесопоставленныйТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Обработана = Ложь Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,155,240);
	КонецЕсли;	
	
КонецПроцедуры

Процедура КоманднаяПанель2кнПечать(Кнопка)
	
	ОМ10_КнопкаПечатьНажатие(ЭтотОбъект,ЭтаФорма);	
	
КонецПроцедуры

Процедура ПолучитьДоговорИОтсрочку()
	
	Если НЕ Фирма.Пустая()  и НЕ Поставщик.Пустая() Тогда
		ДоговорПоставки = ОМ_Справочники.ПолучитьДоговорПоставщика(Фирма,Поставщик,ВхДатаНакл);	
		ОтсрочкаПлатежа = ДоговорПоставки.ОтсрочкаПлатежа;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоставщикОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПолучитьДоговорИОтсрочку();
	
КонецПроцедуры

Процедура ТоварПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	КоманднаяПанельТоваракнПодбор("");
	
КонецПроцедуры

Процедура ПоставщикПриИзменении(Элемент)
	
	ОбновитьДанныеПоДоговорам();

КонецПроцедуры

Процедура кнПоказатьИсториюПозицииНажатие(Элемент)
	
	ТС =  ЭлементыФормы.ТоварыБезЗаказа.ТекущаяСтрока;
	Если ТС = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Постр = Новый ПостроительОтчета;
	Постр.Текст  = "ВЫБРАТЬ
		           |	ВЫБОР
	               |		КОГДА ЗаказПоставщику.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |			ТОГДА ""+""
	               |		ИНАЧЕ ""-""
	               |	КОНЕЦ КАК Операция,
	               |	ЗаказПоставщику.Период,
	               |	ЗаказПоставщику.Регистратор КАК Документ,
	               |	ЗаказПоставщику.Поставщик,
				   |	ЗаказПоставщику.Количество,
	               |	ЗаказПоставщику.ЦенаЗакуп КАК Цена,
	               |	ЗаказПоставщику.ЦенаРозн
	               |ИЗ
	               |	РегистрНакопления.ЗаказПоставщику КАК ЗаказПоставщику
	               |ГДЕ
	               |	ЗаказПоставщику.Период >= &Период
	               |	И ЗаказПоставщику.Склад = &Аптека
	               |	И ЗаказПоставщику.Товар = &Товар
	               |	И ЗаказПоставщику.Поставщик = &Поставщик
	               |
				   |УПОРЯДОЧИТЬ ПО
				   |	ЗаказПоставщику.Период УБЫВ";
				   
				   Постр.Параметры.Вставить("Период",ТекущаяДата() - 60*60*24*20);
				   Постр.Параметры.Вставить("Аптека",Склад);
				   Постр.Параметры.Вставить("Поставщик",Поставщик);
				   Постр.Параметры.Вставить("Товар",ТС.Товар);
				   
				   Постр.ЗаполнитьНастройки();
				   
				   Постр.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Лето);
				   
				   Условие = Постр.УсловноеОформление.Добавить("Операция","Операция");
				   Условие.Область.Добавить("Операция","Операция",ТипОбластиОформления.Поле);
				   
				   
				   Условие.Отбор.Добавить("Операция");
				   Условие.Отбор["Операция"].Использование = Истина;
				   Условие.Отбор["Операция"].Значение = "+";
				   Условие.Отбор["Операция"].ВидСравнения = ВидСравнения.НеРавно;
				   Условие.Оформление.ЦветФона.Значение = Новый Цвет(255,196,187);
				   Условие.Оформление.ЦветФона.Использование = Истина;
				   Условие.Использование = Истина;	
				   
				   Условие2 = Постр.УсловноеОформление.Добавить("Операция","Операция");
				   Условие2.Область.Добавить("Операция","Операция",ТипОбластиОформления.Поле);				   
				   Условие2.Отбор.Добавить("Операция");
				   Условие2.Отбор["Операция"].Использование = Истина;
				   Условие2.Отбор["Операция"].Значение = "+";
				   Условие2.Отбор["Операция"].ВидСравнения = ВидСравнения.Равно;
				   Условие2.Оформление.ЦветФона.Значение = Новый Цвет(176,255,196);
				   Условие2.Оформление.ЦветФона.Использование = Истина;
				   Условие2.Использование = Истина;	
				   
				   
				   Постр.ТекстЗаголовка = "Движение заказа : " + ТС.Товар;
				   Постр.Выполнить();
				   Постр.Вывести();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НеудачныйВводНаОсновании = Истина Тогда
		Предупреждение("КОПИРОВАТЬ ПРИХОД ТОВАРА НЕЛЬЗЯ!",5);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Статус=Перечисления.СтатусПрихода.Черновик;
	КонецЕсли; 
	
КонецПроцедуры

Процедура кнОбновитьИсториюИзмененийНажатие(Элемент)
	
	
	 ТХТ = "ВЫБРАТЬ
	       |	ИзмененияПоступленийВАптеке.Документ,
	       |	ИзмененияПоступленийВАптеке.ИД КАК ИД,
	       |	ИзмененияПоступленийВАптеке.ДатаИзменения,
	       |	ИзмененияПоступленийВАптеке.Действие,
	       |	ИзмененияПоступленийВАптеке.ТабНомер,
	       |	ИзмененияПоступленийВАптеке.ФИО,
	       |	ИзмененияПоступленийВАптеке.НомерДокАптеки
	       |ИЗ
	       |	РегистрСведений.ИзмененияПоступленийВАптеке КАК ИзмененияПоступленийВАптеке
	       |ГДЕ
	       |	ИзмененияПоступленийВАптеке.Документ = &Документ
	       |
	       |УПОРЯДОЧИТЬ ПО
	       |	ИД";
	
		   
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Документ",Ссылка);
	ТЗИзмененийВАптеке = Запрос.Выполнить().Выгрузить();	
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	Если Проведен Тогда
		ЭлементыФормы.НадписьПроведения.Заголовок = "ДОКУМЕНТ ПРОВЕДЕН!";
	КонецЕсли;

КонецПроцедуры

Процедура ТоварЦенаПроизводителяПриИзменении(Элемент)
	
	ТСД= ЭлементыФормы.Товар.ТекущаяСтрока;
	МО_ПроверкаЦеныПроизводителя(ТСД);

	
КонецПроцедуры

Процедура ВхНомерНаклПриИзменении(Элемент)
	
		Введено=Элемент.Значение;
		
		ТХТ="ВЫБРАТЬ
		    |	ПоступлениеТовара.Ссылка как Поступление,
		    |	ПоступлениеТовара.ВхНомерНакл ВхНомер,
		    |	ПоступлениеТовара.Дата
		    |ИЗ
		    |	Документ.ПоступлениеТовара КАК ПоступлениеТовара
		    |ГДЕ
		    |	ПоступлениеТовара.ВхНомерНакл = &ВхНомерНакл
		    |	И ПоступлениеТовара.Поставщик = &Поставщик
		    |	И ПоступлениеТовара.Дата МЕЖДУ &НачДата И &КонДАта";
			
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("ВхНомерНакл",Введено);
		Запрос.УстановитьПараметр("Поставщик",Поставщик);
		Запрос.УстановитьПараметр("НачДата",НачалоГода(Дата));
		Запрос.УстановитьПараметр("КонДАта",КонецГода(Дата));
		
		Рез=Запрос.Выполнить().Выгрузить();
		Если Рез.Количество()>0 Тогда
			Сообщить("В этом году уже есть документ с номером " + ВхНомерНакл + " по этому поставщику!");
			Для каждого Стр из Рез Цикл
				Сообщить(""+Стр.Поступление+"  Вх. номер накл. "+Стр.ВхНомер);
			КонецЦикла;	 
		КонецЕсли;	
	
КонецПроцедуры

Процедура ДоговорПоставкиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ФирмаКомитент) Тогда
		Если Элемент.Значение.Фирма <> ФирмаКомитент Тогда
			ДоговорПоставки = Справочники.ДоговорыПоставки.ПустаяСсылка();
		КонецЕсли;
		
		Если Элемент.Значение.Владелец <> Поставщик Тогда
			ДоговорПоставки = Справочники.ДоговорыПоставки.ПустаяСсылка();
		КонецЕсли;
	ИНаче
		Если Элемент.Значение.Фирма <> Фирма Тогда
			ДоговорПоставки = Справочники.ДоговорыПоставки.ПустаяСсылка();
		КонецЕсли;
		
		Если Элемент.Значение.Владелец <> Поставщик Тогда
			ДоговорПоставки = Справочники.ДоговорыПоставки.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;

	
	Если ЗначениеЗаполнено(ДоговорПоставки) Тогда
		ВидПоступленияТовара = ДоговорПоставки.ВидПоступленияТовара;
	Иначе
		ВидПоступленияТовара = Перечисления.ВидыПоступленияТоваров.ПустаяСсылка();
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнАннулироватьДокумент(Кнопка)
	
	ПредыдущийСтатус = Статус;
	
	Если Статус = Перечисления.СтатусПрихода.ПроблемыВАптеке Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Аннулировать документ?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		ДокументАннулирован = Ложь;
		Попытка
			НачатьТранзакцию();
			Статус = Перечисления.СтатусПрихода.Аннулирован;
			
			Если Проведен Тогда
				Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Иначе
				Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Аннулирование",ПараметрыСеанса.ТекущийСотр,"Аннулирование офисом");
			Если ВыгрузитьВАптеку() = Истина Тогда
				ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Выгружен в аптеку",ПараметрыСеанса.ТекущийСотр,"Выгружено изменение статуса в аптеку");
				ДокументАннулирован = Истина;
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			Статус = ПредыдущийСтатус;
			Сообщить("Ошибка аннулирования" + ОписаниеОшибки());
		КонецПопытки;
		Если ДокументАннулирован Тогда
			Предупреждение("Документ аннулирован!",10);
			ЭтаФорма.Закрыть();
		Иначе
			Предупреждение("Аннулирование документа не произошло!",10);	
			ЭтаФорма.Закрыть();
		КонецЕсли;
	Иначе
		Предупреждение("Документ может быть аннулирован только при наличии статуса  <Проблемы в аптеке>");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнЗафиксироватьИсправления(Кнопка)
	
	Если СтатусДокАптеки = Перечисления.СтатусДокАптеки.КОбработкеОфисом Тогда
		ПредыдущийСтатус = Статус;
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Зафиксировать исправления и выгрузить в аптеку?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		ДокументЗаписан = Ложь;
		Попытка
			НачатьТранзакцию();
			Статус = Перечисления.СтатусПрихода.ВыгруженНаАптеку;
			
		
			Записать(РежимЗаписиДокумента.Проведение);
			ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Проведение",ПараметрыСеанса.ТекущийСотр,"Зафиксированы изменения в офисе");
			Если ВыгрузитьВАптеку() = Истина Тогда
				ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Выгружен в аптеку",ПараметрыСеанса.ТекущийСотр,"Выгружено изменение статуса в аптеку");
				ДокументЗаписан = Истина;
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			Статус = ПредыдущийСтатус;
			Сообщить("Ошибка " + ОписаниеОшибки());
		КонецПопытки;
		Если ДокументЗаписан Тогда
			Предупреждение("Изменения зафиксированы!",10);
			ЭтаФорма.Закрыть();
		Иначе
			Предупреждение("Изменения не зафиксированы!",10);	
			ЭтаФорма.Закрыть();
		КонецЕсли;
	Иначе
		Предупреждение("Документ может быть изменен только при наличии статуса в аптеке  <К обработке офисом>");
	КонецЕсли;
	               
	
	
КонецПроцедуры

Процедура ТоварПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	 ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	 ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
	 
	 
	 Если (ИмяТекКол="Коэфф") Тогда
		мКоэффициент = ТСД.Коэфф;	 
	 КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьИсторию()
	
	ИсторияИзменений.Очистить();
	
	ТЗИстории = ОбщегоНазначения.ПолучитьИсториюИзмененийДокумента(Ссылка);
	Если НЕ ТЗИстории = Неопределено Тогда
		ЭлементыФормы.ИсторияИзменений.Значение = ТЗИстории;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПанельШапкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элемент.ТекущаяСтраница = Элемент.Страницы.СтраницаИстории Тогда
		ПоказатьИсторию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДоговорПоставкиКомитентПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДоговорПоставкиКомитент) Тогда
		ВидПоступленияТовараКомитент = ДоговорПоставкиКомитент.ВидПоступленияТовара;
	Иначе
		ВидПоступленияТовараКомитент = Перечисления.ВидыПоступленияТоваров.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	ФормаСтруктурыПодчиненности = КритерииОтбора.СтруктураПодчиненности.ПолучитьФорму("ФормаСписка");
	Если ФормаСтруктурыПодчиненности.Открыта() Тогда
		ФормаСтруктурыПодчиненности.Закрыть();
	КонецЕсли;
	ФормаСтруктурыПодчиненности.ПараметрОтборПоЗначению = Ссылка;
	ФормаСтруктурыПодчиненности.Открыть();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Поставщик.КонтрагентНаУСН Тогда
		ЕстьОшибки = Ложь;
		Для каждого стр из Товар Цикл
			Если стр.СтавкаНДСЗакуп > 0 Тогда
				Сообщить("некорректная ставка НДС закуп. по строке " + стр.НомерСтроки + ".  ");	
				ЕстьОшибки = Истина;
			КонецЕсли;
		КонецЦикла;
		Если ЕстьОшибки Тогда
			Предупреждение("Некорректно заданы ставки НДС закуп для поставщика на УСН",4);	
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнОткрытьЗаказ(Кнопка)
	
	ТекСтрока = ЭлементыФормы.Товар.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекСтрока.НомерЗаказа = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НомераЗаказа = Товар.Выгрузить(,"НомерЗаказа");
	НомераЗаказа.Свернуть("НомерЗаказа","");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Заказ.Ссылка как Док
	               |ИЗ
	               |	Документ.Заказ КАК Заказ
	               |ГДЕ
	               |	Заказ.Номер в (&Номера)
	               |	И Заказ.Дата между &ДатаНач и &ДатаКон";
				   
	Запрос.УстановитьПараметр("Номера",НомераЗаказа.ВыгрузитьКолонку("НомерЗаказа"));
	Запрос.УстановитьПараметр("ДатаНач",Дата - 20*24*60*60);
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(Дата));
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Предупреждение("Заказ не найден. Период поиска 20 дней.");
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	Если Выборка.Количество() > 1 Тогда
		Предупреждение("Найдено более 1 заказа!");
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		Выборка.Док.ПолучитьФорму().Открыть();
	КонецЦикла;
	
	
КонецПроцедуры

