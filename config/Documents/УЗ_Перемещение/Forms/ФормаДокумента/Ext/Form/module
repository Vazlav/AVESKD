//1. ЦенаЗакупБезНДСРасчет = Окр((СуммаЗакуп - НДСЗакуп)/(Количество*Коэфф),2)
//2. СуммаЗакупБезНДСРасчет = ЦенаЗакупБезНДСРасчет * Количество * Коэфф
//3. СуммаОстаткаОкругления = (СуммаЗакуп - НДСЗакуп) - СуммаЗакупБезНДСРасчет

Перем ТЗДопКолонки;

Процедура УправлениеНадписямиКнопок()
	
	Если Согласован = Ложь Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Согласовать";
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Отмена согласования";
	КонецЕсли;
	

КонецПроцедуры

Процедура УправлениеДоступностьюФормы()
	
	Если Не РольДоступна("супер_АДМИНИСТРАТОР") Тогда 
		Если НЕ ЗначениеЗаполнено(ИДДокументаАптекиОтправитель) Тогда
			Если Статус = Перечисления.СтатусыПеремещения.ОжидаетОтгрузку 
				или Статус = Перечисления.СтатусыПеремещения.ОжидаетСогласования 
				или Статус = Перечисления.СтатусыПеремещения.НазначениеПеревозчика Тогда
				ЭтаФорма.ТолькоПросмотр = Ложь;
			Иначе
				ЭтаФорма.ТолькоПросмотр = Истина;
			КонецЕсли;
		Иначе
			Если Статус = Перечисления.СтатусыПеремещения.ОжидаетОтгрузку и СтатусДокАптекиОтправителя = Перечисления.СтатусДокАптеки.КОбработкеОфисом Тогда
			Иначе
				Если Статус = Перечисления.СтатусыПеремещения.ОжидаетОтгрузку
					или Статус = Перечисления.СтатусыПеремещения.ВПути 
					или Статус = Перечисления.СтатусыПеремещения.Завершен Тогда
					ЭтаФорма.ТолькоПросмотр = Истина;
					ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыОК.Доступность = Ложь;
					ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнАннулироватьДокумент.Доступность = Ложь;
					ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыОК.Доступность = Ложь;
					ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыСохранить.Доступность = Ложь;
					ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Статус = Перечисления.СтатусыПеремещения.Аннулирован Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнАннулироватьДокумент.Доступность = Ложь;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыОК.Доступность = Ложь;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыСохранить.Доступность = Ложь;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Ложь;
			ЭлементыФормы.КоманднаяПанельТовара.Кнопки.кнРасценить.Доступность = Ложь;
			ЭлементыФормы.КоманднаяПанельТовара.Кнопки.кнПодбор.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УправлениеВидимостьюКолонок()
	
	Если ФирмаОтправитель = ФирмаПолучатель Тогда
		ЭлементыФормы.Товар.Колонки.КодПартииПолучателя.Видимость = Ложь;
		ЭлементыФормы.Товар.Колонки.СуммаРеализацииБезНДС.Видимость = Ложь;
		ЭлементыФормы.Товар.Колонки.СуммаРеализацииНДС.Видимость = Ложь;
	Иначе
		ЭлементыФормы.Товар.Колонки.КодПартииПолучателя.Видимость = Истина;
		ЭлементыФормы.Товар.Колонки.СуммаРеализацииБезНДС.Видимость = Истина;
		ЭлементыФормы.Товар.Колонки.СуммаРеализацииНДС.Видимость = Истина;		
	КонецЕсли;
	
КонецПроцедуры

Процедура УправлениеЦветомНаФорме()
	
	Если СкладПолучатель.ПометкаУдаления или (СкладПолучатель.ДатаЗакрытия < ТекущаяДата() и СкладПолучатель.ДатаЗакрытия <> Дата(1,1,1)) Тогда
		ЭлементыФормы.СкладПолучатель.ЦветФонаПоля = Новый Цвет(255, 68, 68);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьИсторию()
	
	ИсторияИзменений.Очистить();
	
	ТЗИстории = ОбщегоНазначения.ПолучитьИсториюИзмененийДокумента(Ссылка);
	Если НЕ ТЗИстории = Неопределено Тогда
		ЭлементыФормы.ИсторияИзменений.Значение = ТЗИстории;
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьПартию(стр)
	
	//ПоставщикКод = Поставщик.Код;
	//ПоставщикКодИсходный = ПоставщикКод;
	//Если ЗначениеЗаполнено(ПоставщикКомитент) Тогда
	//	ВидПоступленияПорядок = Перечисления.ВидыПоступленияТоваров.Индекс(ДоговорПоставкиКомитент.ВидПоступленияКомитент);
	//	ВидПоступленияИсходныйПорядок = Перечисления.ВидыПоступленияТоваров.Индекс(ДоговорПоставки.ВидПоступления);
	//Иначе
	//	ВидПоступленияПорядок = Перечисления.ВидыПоступленияТоваров.Индекс(ВидПоступленияТовара);
	//	ВидПоступленияИсходныйПорядок = ВидПоступленияПорядок;
	//КонецЕсли;
	//
	//Если ЗначениеЗаполнено(ФирмаКомитент) Тогда
	//	ФирмаИсходная = ФирмаКомитент.Код;
	//Иначе
	//	ФирмаИсходная = Фирма.Код;
	//КонецЕсли;
	//
	//НоваяПартия = Справочники.УЗ_Партии.СоздатьЭлемент();
	//НоваяПартия.УстановитьНовыйКод();
	//Если НоваяПартия.Код = 0 Тогда // иногда не срабатывает УстановитьНовыйКод() и далее вылетает ошибка.  на 8.2 такой картины никогда не было
	//	#Если Клиент Тогда
	//		Сообщить("не сработал метод Партия.УстановитьНовыйКод(). Вызваем его повторно.");
	//	#КонецЕсли
	//	НоваяПартия.УстановитьНовыйКод();
	//КонецЕсли;
	//
	//Если НоваяПартия.Код = 0 Тогда
	//	ВызватьИсключение "Код партии = 0";
	//КонецЕсли;
	//
	//КодБезКС = "24"+Формат(Число(НоваяПартия.Код), "ЧЦ=10; ЧВН=; ЧГ=0");
	//
	//НоваяПартия.Наименование        = ВычислитьКонтрольнуюСумму(КодБезКС);
	//НоваяПартия.Баркод				= стр.Баркод;
	//НоваяПартия.ДатаПоступления		= Дата;
	//НоваяПартия.ДокументПоступления = Ссылка;
	//НоваяПартия.КодТовара			= стр.КодТовара;
	//НоваяПартия.К					= стр.Коэфф;
	//НоваяПартия.НомерГТД			= стр.НомерГТД;
	//НоваяПартия.Серия				= стр.Серия;
	//НоваяПартия.СрокГодности		= стр.СрокГодности;
	//НоваяПартия.СтавкаНДСЗакуп		= стр.СтавкаНДСЗакуп;
	//НоваяПартия.СтавкаНДСРозн		= стр.СтавкаНДСРозн;
	//НоваяПартия.ЦенаГосРегистрации	= стр.ЦенаГосРегистрации;
	//НоваяПартия.ЦенаЗакуп			= стр.ЦенаЗакуп;
	//НоваяПартия.ЦенаЗакупБезНДСРасчет = стр.ЦенаЗакупБезНДСРасчет;
	//НоваяПартия.ЦенаПроизводителяБезНДС = стр.ЦенаПроизводителя;
	//НоваяПартия.Производитель		= стр.Производитель;
	//НоваяПартия.Поставщик			= ПоставщикКод;
	//НоваяПартия.ПоставщикИсходный	= ПоставщикКодИсходный;
	//НоваяПартия.ВидПоступления		= ВидПоступленияПорядок;
	//НоваяПартия.ВидПоступленияИсходный = ВидПоступленияИсходныйПорядок;
	//НоваяПартия.ФирмаИсходная		= ФирмаИсходная;
	//НоваяПартия.Записать();
	//
	//Возврат НоваяПартия.Код;
	
	
КонецФункции

Функция ПроверкаНулевыхЦен()
	
	Запрос = Новый Запрос;
	Если ВнутреннееПеремещение Тогда
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(РЦП.Цена, ЕСТЬNULL(РЦ.Цена, 0)) КАК ЦенаРознУпак
	               |ИЗ
	               |	Документ.УЗ_Перемещение.Товар КАК Перемещение
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦены КАК РЦ
	               |		ПО Перемещение.КодТовара = РЦ.ТоварКод
	               |			И (РЦ.АптекаКод = &СкладКод)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦеныПоПартиям КАК РЦП
	               |		ПО Перемещение.КодПартии = РЦП.ПартияКод
	               |			И (РЦП.АптекаКод = &СкладКод)
	               |ГДЕ
	               |	Перемещение.Ссылка = &Ссылка
	               |	И ЕСТЬNULL(РЦП.Цена, ЕСТЬNULL(РЦ.Цена, 0)) = 0"
	  Иначе
		 	Запрос.Текст = "ВЫБРАТЬ
		 	               |	ЕСТЬNULL(РЦП.Цена, ЕСТЬNULL(РЦ.Цена, 0)) КАК ЦенаРознУпак
		 	               |ИЗ
		 	               |	Документ.УЗ_Перемещение.Товар КАК Перемещение
		 	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦены КАК РЦ
		 	               |		ПО Перемещение.КодТовара = РЦ.ТоварКод
		 	               |			И (РЦ.АптекаКод = &СкладКод)
		 	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦеныПоПартиям КАК РЦП
		 	               |		ПО Перемещение.КодПартииПолучателя = РЦП.ПартияКод
		 	               |			И (РЦП.АптекаКод = &СкладКод)
		 	               |ГДЕ
		 	               |	Перемещение.Ссылка = &Ссылка
		 	               |	И ЕСТЬNULL(РЦП.Цена, ЕСТЬNULL(РЦ.Цена, 0)) = 0"

					   КонецЕсли;
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Запрос.УстановитьПараметр("СкладКод",СкладПолучатель.Код);
		Рез = Запрос.Выполнить();
		
		Возврат НЕ Рез.Пустой();
					   

КонецФункции


Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	 Если ДанныеСтроки.Коэфф < ДанныеСтроки.КоэффициентРазбивки Тогда
		 ОформлениеСтроки.ЦветФона=Новый Цвет(176,224,230);
	 КонецЕсли;	
	
	 ЖВ = ДанныеСтроки.Товар.ЖНВЛС;
	 
	 Если ЖВ = Истина тогда
		 //ОформлениеСтроки.Шрифт.Жирный = Истина;
		 ОформлениеСтроки.Ячейки.ЖНВЛС.ЗначениеКартинки  =БиблиотекаКартинок.Здоровье;
	 КонецЕсли;
	 
	 НайденнаяСтрока = ТЗДопКолонки.Найти(ДанныеСтроки.КодПартии,"КодПартии");
	 Если НЕ НайденнаяСтрока = Неопределено Тогда
		 ОформлениеСтроки.Ячейки.ЦенаГосРегистрации.Значение = НайденнаяСтрока.ЦенаГосРегистрации;
		 ОформлениеСтроки.Ячейки.БарКод.Значение = НайденнаяСтрока.БарКод;
		 ОформлениеСтроки.Ячейки.ЦенаПроизводителя.Значение = НайденнаяСтрока.ЦенаПроизводителя;
	КонецЕсли;

	
КонецПроцедуры

Процедура ТоварПередУдалением(Элемент, Отказ)
	
////------------------<Контроль изменения серии задним числом>-------------------GtG---- 
//	ТХТ="ВЫБРАТЬ
//	    |	СУММА(ПартииЖНВЛСОбороты.КолвоРасход) КАК КолвоРасход,
//	    |	ПартииЖНВЛСОбороты.Регистратор КАК Регистратор
//	    |ИЗ
//	    |	РегистрНакопления.ПартииЖНВЛС.Обороты(
//	    |			&НачПериода,
//	    |			,
//	    |			Регистратор,
//	    |			Товар = &ВыбТовар
//	    |				И Склад = &ВыбСклад
//	    |				И Партия = &ВыбПартия) КАК ПартииЖНВЛСОбороты
//	    |
//	    |СГРУППИРОВАТЬ ПО
//	    |	ПартииЖНВЛСОбороты.Регистратор";
//	
//	
//	
//	ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
//	
//	Партия=ТСД.Партия;
//	
//	
//	Если Партия.Пустая()=Ложь тогда
//		
//		Запрос= Новый Запрос;
//		Запрос.Текст=ТХТ;
//		
//		Запрос.УстановитьПараметр("НачПериода",НачалоДня(Дата));
//		Запрос.УстановитьПараметр("ВыбТовар",ТСД.ТОвар);
//		Запрос.УстановитьПараметр("ВыбСклад",Склад);
//		Запрос.УстановитьПараметр("ВыбПартия",ТСД.Партия);
//		
//		ТЗ=Запрос.Выполнить().Выгрузить();
//		
//		Если ТЗ.Количество()>0 Тогда
//			Сообщить(""+ТСД.ТОвар+"   Партия: "+Партия);
//			Сообщить("УЖЕ БЫЛ РАСХОД ЭТОЙ Партии!");
//			Для Каждого Стр из ТЗ Цикл
//				Сообщить(""+Стр.Регистратор+" расход "+Стр.КолвоРасход);
//			КонецЦикла;
//			Отказ=Истина;  // отключает процесс выбора из справочника
//		КонецЕсли;//ТЗ.Количество()>0 
//	КонецЕсли;//Партия.Пустая()=Ложь	
//	Если Отказ = Ложь Тогда
//		Предупреждение("Если удалили случайно, то можно закрыть документ без сохранения!",5);		
//	КонецЕсли;
	
	
КонецПроцедуры

 
Процедура ПересчетСтрокиДокумента  (ТекСтрД, ИмяКол,БезВопросов= ЛОЖЬ) Экспорт
	
	Если ИмяКол = "Количество" Тогда
		ТекСтрД.СуммаЗакуп				= ТекСтрД.Количество*ТекСтрД.ЦенаЗакуп;
		ТекСтрД.НДСЗакуп				= Окр(ТекСтрД.СуммаЗакуп - ТекСтрД.СуммаЗакуп/(1+ТекСтрД.СтавкаНДСЗакуп/100),2);
		ТекСтрД.ЦенаЗакупБезНДСРасчет	= Окр((ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп)/(ТекСтрД.Количество*ТекСтрД.Коэфф),2)* ТекСтрД.Коэфф;
		ТекСтрД.СуммаЗакупБезНДСРасчет	= ТекСтрД.ЦенаЗакупБезНДСРасчет * ТекСтрД.Количество;
		ТекСтрД.СуммаОстаткаОкругления	= (ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп) - ТекСтрД.СуммаЗакупБезНДСРасчет;
		ТекСтрД.СуммаРозн				= ТекСтрД.ЦенаРозн*ТекСтрД.Количество;	
	КонецЕсли;
	
	Если ИмяКол = "ЦенаЗакуп" Тогда
		ТекСтрД.СуммаЗакуп				= ТекСтрД.ЦенаЗакуп*ТекСтрД.Количество;
		ТекСтрД.НДСЗакуп				= Окр(ТекСтрД.СуммаЗакуп - ТекСтрД.СуммаЗакуп/(1+ТекСтрД.СтавкаНДСЗакуп/100),2);
		ТекСтрД.ЦенаЗакупБезНДСРасчет	= Окр((ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп)/(ТекСтрД.Количество*ТекСтрД.Коэфф),2)* ТекСтрД.Коэфф;
		ТекСтрД.ЦенаЗакупБезНДС			= ТекСтрД.ЦенаЗакупБезНДСРасчет;
		ТекСтрД.СуммаЗакупБезНДСРасчет	= ТекСтрД.ЦенаЗакупБезНДСРасчет * ТекСтрД.Количество ;
		ТекСтрД.СуммаОстаткаОкругления	= (ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп) - ТекСтрД.СуммаЗакупБезНДСРасчет;
	КонецЕсли;	
	
	Если ИмяКол = "СуммаЗакуп" Тогда
		ТекСтрД.ЦенаЗакуп				= ТекСтрД.СуммаЗакуп/ТекСтрД.Количество;
		ТекСтрД.НДСЗакуп				= Окр(ТекСтрД.СуммаЗакуп - ТекСтрД.СуммаЗакуп/(1+ТекСтрД.СтавкаНДСЗакуп/100),2);
		ТекСтрД.ЦенаЗакупБезНДСРасчет	= Окр((ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп)/(ТекСтрД.Количество*ТекСтрД.Коэфф),2)*ТекСтрД.Коэфф;
		ТекСтрД.ЦенаЗакупБезНДС			= ТекСтрД.ЦенаЗакупБезНДСРасчет;
		ТекСтрД.СуммаЗакупБезНДСРасчет	= ТекСтрД.ЦенаЗакупБезНДСРасчет * ТекСтрД.Количество;
		ТекСтрД.СуммаОстаткаОкругления	= (ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп) - ТекСтрД.СуммаЗакупБезНДСРасчет;
	КонецЕсли;
	
	Если ИмяКол = "СтавкаНДСЗакуп" Тогда
		ТекСтрД.НДСЗакуп				= Окр(ТекСтрД.СуммаЗакуп - ТекСтрД.СуммаЗакуп/(1+ТекСтрД.СтавкаНДСЗакуп/100),2);
		ТекСтрД.ЦенаЗакупБезНДСРасчет	= Окр((ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп)/(ТекСтрД.Количество*ТекСтрД.Коэфф),2)*ТекСтрД.Коэфф;
		ТекСтрД.ЦенаЗакупБезНДС			= ТекСтрД.ЦенаЗакупБезНДСРасчет;
		ТекСтрД.СуммаЗакупБезНДСРасчет	= ТекСтрД.ЦенаЗакупБезНДСРасчет * ТекСтрД.Количество;
		ТекСтрД.СуммаОстаткаОкругления	= (ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп) - ТекСтрД.СуммаЗакупБезНДСРасчет;
	КонецЕсли;	
	

	Если ИмяКол = "ЦенаРозн" Тогда
		ТекСтрД.СуммаРозн = ТекСтрД.ЦенаРозн*ТекСтрД.Количество;
	КонецЕсли;
	
	Если ИмяКол = "СуммаРозн" Тогда
		ТекСтрД.ЦенаРозн = Окр(ТекСтрД.СуммаРозн/ТекСтрД.Количество,2);
	КонецЕсли;
	
	Если ИмяКол = "Коэфф" Тогда
		ТекСтрД.ЦенаЗакупБезНДСРасчет	= Окр((ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп)/(ТекСтрД.Количество*ТекСтрД.Коэфф),2)* ТекСтрД.Коэфф;
		ТекСтрД.СуммаЗакупБезНДСРасчет	= ТекСтрД.ЦенаЗакупБезНДСРасчет * ТекСтрД.Количество;
		ТекСтрД.СуммаОстаткаОкругления	= (ТекСтрД.СуммаЗакуп - ТекСтрД.НДСЗакуп) - ТекСтрД.СуммаЗакупБезНДСРасчет;
	КонецЕсли;
	
	
    
КонецПроцедуры


Процедура ТоварПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	 //ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	 //ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
	 //
	 //
	 //Если (ИмяТекКол="Количество") Тогда
	 //    ИмяТекКол="Количество";
	 //    ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
	 //    ВОЗВРАТ ;
	 //КонецЕсли; 
	 //
	 //Если ИмяТекКол="ЦенаЗакупБезНДС" Тогда
	 //    ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
	 //    ВОЗВРАТ ;
	 //КонецЕсли; 
	 //Если ИмяТекКол="СтавкаНДСЗакуп" Тогда
	 //    ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
	 //    ВОЗВРАТ ;
	 //КонецЕсли; 
	 //
	 //Если ИмяТекКол="ЦенаРозн" Тогда
	 //    ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
	 //    ВОЗВРАТ ;
	 //КонецЕсли; 
	 //
	 //Если ИмяТекКол="СуммаРозн" Тогда
	 //    ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
	 //    ВОЗВРАТ ;
	 //КонецЕсли;
	 //
	 //Если ИмяТекКол="СуммаЗакуп" Тогда
	 //     ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
	 //    ВОЗВРАТ ;
	 //КонецЕсли; 
	 //Если ИмяТекКол="НДСЗакуп" Тогда
	 //    ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
	 //    ВОЗВРАТ ;
	 //КонецЕсли; 
	 //Если ИмяТекКол="Коэфф" Тогда
	 //    ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
	 //    ВОЗВРАТ ;
	 //КонецЕсли; 	 
	 //
	 ////============================< Резервные затычки >================================GtG===

	 //Если ИмяТекКол="" Тогда
	 //    ВОЗВРАТ ;
	 //КонецЕсли; 
	
	
	
КонецПроцедуры


Процедура КоманднаяПанельТоваракнПодбор(Кнопка)
	
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!");
		ВОЗВРАТ ;
	КонецЕсли; 
	
	
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПолучитьФорму("ФормаДляПодбора","",КлючУник);
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.ОткрытьМодально(0);
	
	
	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнРасценить(Кнопка)
	
	ОМ6_КоманднаяПанельКнопкаРасценить(ЭтаФорма,ЭтотОбъект,Товар);	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыСохранить(Кнопка)
	
	Если Проведен = Истина Тогда
		Предупреждение("Документ НЕ сохранен. В проведенном документе пользуйтесь кнопкой <Провести>!");
		Возврат;
	Иначе
		Если НЕ ДатаФактическойОтгрузки = Дата(1,1,1) Тогда
			Предупреждение("Документ НЕ сохранен. После заполнения даты файктической отгрузки документ необходимо только проводить ( Кнопка <Провести> ).");
			Возврат;			
		КонецЕсли;
	КонецЕсли;
	
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Вы действительно хотите сохранить документ/изменения?",Режим,0);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнВыгрузить(Кнопка)
	
	Если Статус = Перечисления.СтатусыПеремещения.ОжидаетОтгрузку или Статус = Перечисления.СтатусыПеремещения.Аннулирован Тогда
		Если  НЕ Статус = Перечисления.СтатусыПеремещения.Аннулирован Тогда
			ЕстьНулевыеЦены = ПроверкаНулевыхЦен();
			Если ЕстьНулевыеЦены Тогда
				Предупреждение("В документе есть строки с нулевой розничной ценой. Выгрузка не может быть выполнена");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ВыгрузитьОтправителюНаНовомПО();	
	Иначе
		Предупреждение("В статусе <" + Статус + "> документ не может быть выгружен в аптеку-отправитель.");
	КонецЕсли;
	
	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнДвижениеПоПартии(Кнопка)
	
	ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	
	Карточка=Отчеты.УЗ_ДвижениеТовара.Создать();
	
	Карточка.КодПартии=ТСД.КодПартии;
	Карточка.ВыбСклад=СкладОтправитель;
	Карточка.ВыбТовар=ТСД.ТОвар;
	Карточка.ВыбФирма=ФирмаОтправитель;
	Карточка.НачПер=НачалоГода(Дата);
	Карточка.КонПер=ТекущаяДата();
	
	Ф=Карточка.ПолучитьФорму("Форма");
	
	Ф.Открыть();

	
КонецПроцедуры

Процедура КоманднаяПанельТоваракнКарточкаСтроки(Кнопка)
	
	//ФормаКарточки = ЭтотОбъект.ПолучитьФорму("КарточкаСтроки");
	//ФормаКарточки.ВладелецФормы = ЭтаФорма;
	//ФормаКарточки.ИндексТекСтроки = Товар.Индекс(ЭлементыФормы.Товар.ТекущаяСтрока);
	//ФормаКарточки.Регион = Склад.Регион;
	//ФормаКарточки.Проведен = ЭтотОбъект.Проведен;
	//ФормаКарточки.ОткрытьМодально();	
	
КонецПроцедуры

Процедура ДобавитьТовар(СтрокаДобавления) 
    // Назначение:
	// Добавляет строку товара в документ
	// выполняет расчет числовых полей
    // 
	//--------------------------------------------------------------------------------
	
	//ПарамПоиска = Новый  Структура;
	//ПарамПоиска.Вставить("Товар",СтрокаДобавления.Товар);
	//ПарамПоиска.Вставить("ЕИТ",СтрокаДобавления.ЕИТ);
	//ПарамПоиска.Вставить("ЦенаЗакуп",СтрокаДобавления.Цена);
	//
	//
	//
	//МассивНайденныхСтрок= Товар.НайтиСтроки(ПарамПоиска);
	//
	//Если МассивНайденныхСтрок.Количество()=0 Тогда
	//	
	//	
	//		//----------------------------< Добавляем только при добавлении КоэффДобавления=1  >--------------------------------GtG---
	//		НоваяСтрока=Товар.Добавить();
	//		НоваяСтрока.КодТовара=СтрокаДобавления.Товар.Код;
	//		НоваяСтрока.Товар=СтрокаДобавления.Товар;
	//		НоваяСтрока.Количество=СтрокаДобавления.Количество;
	//		НоваяСтрока.СтавкаНДСЗакуп=НоваяСтрока.Товар.СтавкаНДС.Ставка;
	//		НоваяСтрока.СтавкаНДСРозн = НоваяСтрока.СтавкаНДСЗакуп;
	//		НоваяСтрока.ЦенаГосРегистрации=0;
	//		//-----------------< единица  >----------------GtG---
	//		НоваяСтрока.Коэфф=СтрокаДобавления.ЕИТ.К;
	//		НоваяСтрока.КоэффициентРазбивки=НоваяСтрока.Коэфф;
	//        НоваяСтрока.ЦенаЗакуп = СтрокаДобавления.Цена;
	//		НоваяСтрока.СуммаЗакуп = СтрокаДобавления.Сумма;
	//		НоваяСтрока.ЦенаЗакупБезНДС = Окр(НоваяСтрока.ЦенаЗакуп/(1+НоваяСтрока.СтавкаНДСРозн/100),2);

	//		
	//		ОбщСтрокаВТ=НоваяСтрока;
	//		
	//		//-----------------< создаем партию  >----------------GtG--- 
	//		НоваяСтрока.Партия=ОМ1_СоздатьПартиюТовара(СтрокаДобавления.Товар).Ссылка;
	//		
	//Иначе
	//	СтрокаВТ=МассивНайденныхСтрок[0];
	//	СтрокаВТ.Количество=СтрокаВТ.Количество+СтрокаДобавления.Количество;
	//    ОбщСтрокаВТ=СтрокаВТ;
	//КонецЕсли; 
	//
	//	  
	//Если ОбщСтрокаВТ.СуммаЗакуп<>0 Тогда
	//	// Запускаем пересчет строки по цене ибо она была задана ранее
	//	// Имеет смысл при добавлении товара в сущ строку
	//	ПересчетСтрокиДокумента  (ОбщСтрокаВТ, "СуммаЗакуп", ИСТИНА);// пересчитывает ничего не спрашивая
	//КонецЕсли; 
	
	//РезДобавления=ОбщСтрокаВТ;
	
 КонецПроцедуры
 
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда
		Для Ы=0 По ЗначениеВыбора.Количество()-1 Цикл
			
		      СтрТЗ= ЗначениеВыбора.Получить(Ы) ;
			  
			  ДобавитьТовар(СтрТЗ);
		
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура СкладОтправительПриИзменении(Элемент)
	
	Если Элемент.Значение.Фирма <> ФирмаОтправитель Тогда
		ФирмаОтправитель = Элемент.Значение.Фирма;
	КонецЕсли;
	УправлениеВидимостьюКолонок();	
	
КонецПроцедуры

Процедура СкладПолучательПриИзменении(Элемент)
	
	Если Элемент.Значение.Фирма <> ФирмаПолучатель Тогда
		ФирмаПолучатель = Элемент.Значение.Фирма;
	КонецЕсли;
	УправлениеВидимостьюКолонок();
	УправлениеЦветомНаФорме();
	
	
КонецПроцедуры

Процедура КоманднаяПанельОшибкиНайтиСтрокуВТаблицеТовара(Кнопка)
	
	Если ОшибкиРасценки.Количество()=0 Тогда
		Возврат;
	КонецЕсли;	
	ОшПартия=ЭлементыФормы.ОшибкиРасценки.ТекущаяСтрока.КодПартии;
	Стр=Товар.Найти(ОшПартия,"КодПартииПолучателя");
	ЭлементыФормы.ПанельТовара.ТекущаяСтраница = ЭлементыФормы.ПанельТовара.Страницы.СтраницаТовара;
	ЭлементыФормы.Товар.ТекущаяСтрока=Стр;	
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеКолонки()
	Запрос = Новый Запрос;
	Если ВнутреннееПеремещение Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	Док.НомерСтроки как НомСтр,
		|	П.ЦенаГосРегистрации,
		|	П.ЦенаПроизводителяБезНДС как ЦенаПроизводителя,
		|	П.Баркод, Док.КодПартии
		|ИЗ
		|	Документ.УЗ_Перемещение.Товар КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК П
		|		ПО Док.КодПартии = П.Код
		|ГДЕ
		|	Док.Ссылка = &Ссылка";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	Док.НомерСтроки КАК НомСтр,
		|	П.ЦенаГосРегистрации,
		|	П.ЦенаПроизводителяБезНДС КАК ЦенаПроизводителя,
		|	П.Баркод,
		|	Док.КодПартии
		|ИЗ
		|	Документ.УЗ_Перемещение.Товар КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК П
		|		ПО Док.КодПартииПолучателя = П.Код
		|ГДЕ
		|	Док.Ссылка = &Ссылка";
		
	КонецЕсли;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	ТЗДопКолонки = Запрос.Выполнить().Выгрузить();
	ТЗДопКолонки.Индексы.Добавить("КодПартии");
	//Если Не Рез.Пустой() Тогда
	//	Выборка  = Рез.Выбрать();
	//	Пока Выборка.Следующий() Цикл
	//		ТекСтрока = Товар.Получить(Выборка.НомСтр - 1);
	//		ЗаполнитьЗначенияСвойств(ТекСтрока,Выборка);
	//	КонецЦикла;
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый()=Истина Тогда
		Дата=ТекущаяДата();
	Иначе
		ДатаЗапретаПолучатель = НастройкаПравДоступа.ВернутьДатуЗапретаРедактирования(СкладПолучатель);
		ДатаЗапретаОтправитель = НастройкаПравДоступа.ВернутьДатуЗапретаРедактирования(СкладОтправитель);
		Если Дата <= Мин(ДатаЗапретаПолучатель,ДатаЗапретаОтправитель) Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
		КонецЕсли;
		ЗаполнитьДополнительныеКолонки();
	КонецЕсли;  
	
	
	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект,СписокПечатныхФорм);
	
	УправлениеНадписямиКнопок();
	УправлениеДоступностьюФормы();
	УправлениеВидимостьюКолонок();
	УправлениеЦветомНаФорме();
	
КонецПроцедуры

Процедура КоманднаяПанель2кнПечать(Кнопка)
	
	ОМ10_КнопкаПечатьНажатие(ЭтотОбъект,ЭтаФорма);	
	
КонецПроцедуры

Процедура ТоварПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!",5);
		ВОЗВРАТ ;
	КонецЕсли; 
	
	
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПолучитьФорму("ФормаДляПодбора","",КлючУник);
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ВладелецФормы=ЭтаФорма;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.ОткрытьМодально(0);	
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		Статус=Перечисления.СтатусыПеремещения.ОжидаетСогласования;
	КонецЕсли; 
	
КонецПроцедуры


Процедура ОсновныеДействияФормыкнСогласования(Кнопка)
	
	ПредыдущееЗначение = Согласован;
	Если НЕ Согласован Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Согласовать документ?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
		Согласован = Истина;
		//СогласованКем = ПараметрыСеанса.ТекущийСотр;
		
	ИначеЕсли Согласован Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Отменить согласование?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
		Согласован = Ложь;
	КонецЕсли;
	                               
	Попытка
		Записать(РежимЗаписиДокумента.Запись);
		Если Согласован Тогда
			ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Согласован",ПараметрыСеанса.ТекущийСотр,"Согласован офисом");
		Иначе
			ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Отмена согласования",ПараметрыСеанса.ТекущийСотр,"Отмена согласования офисом");
		КонецЕсли;
	Исключение
		Согласован = ПредыдущееЗначение;
	КонецПопытки;
	
	
	
	УправлениеНадписямиКнопок();
	УправлениеДоступностьюФормы();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнАннулироватьДокумент(Кнопка)
	
	Если СтатусДокАптекиОтправителя = Перечисления.СтатусДокАптеки.КОбработкеОфисом и НЕ Проведен Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Аннулировать документ?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		ДокументАннулирован = Ложь;
		Попытка
			НачатьТранзакцию();
			ПредыдущийСтатус = Статус;
			Статус = Перечисления.СтатусыПеремещения.Аннулирован;
			
			Записать(РежимЗаписиДокумента.Запись);
			ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Аннулирование",ПараметрыСеанса.ТекущийСотр,"Аннулирование офисом");
				
			Если ВыгрузитьОтправителюНаНовомПО() = Истина Тогда
				ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Выгружен в аптеку",ПараметрыСеанса.ТекущийСотр,"Выгружено изменение статуса в аптеку отправитель");
				ДокументАннулирован = Истина;
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			Сообщить("Ошибка аннулирования" + ОписаниеОшибки());
		КонецПопытки;
		Если ДокументАннулирован Тогда
			Предупреждение("Документ аннулирован!",10);
			ЭтаФорма.Закрыть();
		Иначе
			Статус = ПредыдущийСтатус;
			Предупреждение("Аннулирование документа не произошло!",10);	
			ЭтаФорма.Закрыть();
		КонецЕсли;
	Иначе
		Предупреждение("Документ может быть аннулирован только при наличии статуса аптеки <К обработке офисом>");
	КонецЕсли;
	  
	
КонецПроцедуры

Процедура ПанельШапкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элемент.ТекущаяСтраница = Элемент.Страницы.Изменения Тогда
		ПоказатьИсторию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнВыгрузитьПолучателю(Кнопка)

	Если НЕ (Статус = Перечисления.СтатусыПеремещения.ОжидаетСогласования или Статус = Перечисления.СтатусыПеремещения.НазначениеПеревозчика или  Статус = Перечисления.СтатусыПеремещения.ОжидаетОтгрузку) Тогда
		Если СкладПолучатель.АптекаНаНовомПО Тогда
			ВыгрузитьПолучателюНаНовомПО();           	
		Иначе
			ВыгрузитьВАптеку();
		КонецЕсли;
	Иначе
		Предупреждение("В статусе <" + Статус + "> документ не может быть выгружен в аптеку-отправитель.");
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПослеЗаписи()
	УправлениеДоступностьюФормы();
КонецПроцедуры

Процедура КоманднаяПанельТоваракнФильтрЖВ(Кнопка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Различные
	               |	АП.Код как КодТовара
				   |ИЗ
	               |	Документ.УЗ_Перемещение.Товар КАК Док
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Ассортиментный_План КАК АП
	               |		ПО Док.КодТовара = АП.Код
	               |ГДЕ
	               |	Док.Ссылка = &Ссылка и АП.ЖНВЛС = Истина";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	СписокЗнч = Новый СписокЗначений;
	Рез  = Запрос.Выполнить();
	Если НЕ Рез.Пустой() Тогда
		Выборка = Рез.Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокЗнч.Добавить(Выборка.КодТовара);
		КонецЦикла;
		
		
   		ЭлементыФормы.Товар.ОтборСтрок.КодТовара.ВидСравнения = ВидСравнения.ВСписке;
   		ЭлементыФормы.Товар.ОтборСтрок.КодТовара.Значение =СписокЗнч ;
   		ЭлементыФормы.Товар.ОтборСтрок.КодТовара.Использование = Истина;
			
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ТоварЦенаГосРегистрацииПриИзменении(Элемент)
	
	ТекСтрока = ЭлементыФормы.Товар.ТекущаяСтрока;
	Если ВнутреннееПеремещение Тогда
		Партия = Справочники.УЗ_Партии.НайтиПоКоду(ТекСтрока.КодПартии);
	Иначе
		Партия = Справочники.УЗ_Партии.НайтиПоКоду(ТекСтрока.КодПартииПолучателя);
	КонецЕсли;
	ПартияОбъект = Партия.ПолучитьОбъект();
	ПартияОбъект.ЦенаГосРегистрации = Элемент.Значение;
	ПартияОбъект.Записать();
	
	НайденнаяСтрока = ТЗДопКолонки.Найти(ТекСтрока.КодПартии,"КодПартии");
	Если НЕ НайденнаяСтрока = Неопределено Тогда
		НайденнаяСтрока.ЦенаГосРегистрации = Элемент.Значение;
	Иначе
		НоваяСтрока = ТЗДопКолонки.Добавить();
		НоваяСтрока.КодПартии = ТекСтрока.КодПартии;
		НоваяСтрока.ЦенаГосРегистрации = Элемент.Значение;
	КонецЕсли;

	

КонецПроцедуры

Процедура ТоварЦенаПроизводителяПриИзменении(Элемент)
	
	ТекСтрока = ЭлементыФормы.Товар.ТекущаяСтрока;
	Если ВнутреннееПеремещение Тогда
		Партия = Справочники.УЗ_Партии.НайтиПоКоду(ТекСтрока.КодПартии);
	Иначе
		Партия = Справочники.УЗ_Партии.НайтиПоКоду(ТекСтрока.КодПартииПолучателя);
	КонецЕсли;
	ПартияОбъект = Партия.ПолучитьОбъект();
	ПартияОбъект.ЦенаПроизводителяБезНДС = Элемент.Значение;
	ПартияОбъект.Записать();
	
	НайденнаяСтрока = ТЗДопКолонки.Найти(ТекСтрока.КодПартии,"КодПартии");
	Если НЕ НайденнаяСтрока = Неопределено Тогда
		НайденнаяСтрока.ЦенаПроизводителя = Элемент.Значение;
	Иначе
		НоваяСтрока = ТЗДопКолонки.Добавить();
		НоваяСтрока.КодПартии = ТекСтрока.КодПартии;
		НоваяСтрока.ЦенаПроизводителя = Элемент.Значение;
	КонецЕсли;
	
	
КонецПроцедуры

