

Перем КонтрольнаяСуммаШапкиИсходногоДокументаПередОткрытием ;
Перем КонтрольнаяСуммаТЧИсходногоДокументаПередОткрытием;
Перем СписокКолонокДляПересчетаПоЦене;
Перем СписокКолонокПересчетаЦенСуммНаценок;
Перем СписокКолонокПересчетаПроцентовНаценок;
Перем СписокКолонокПересчетаЦЕН;
Перем СтараяВалюта;
Перем ТЗСвНДС;


 //============================================================================ GtG ===
 Процедура ОбновитьСверткуПоНДС  () 
     // Назначение:
 	// Обновляет свертку по НДС
 	// 
     // 
 	//--------------------------------------------------------------------------------
	
	ТЗСвНДС =  Товар.Выгрузить();  	
	ТЗСвНДС.Свернуть("СтавкаНДС","СуммаЗакуп,НДСЗакуп");
	
	ЭлементыФормы.СверткаПоНДС.Значение=ТЗСвНДС;
	ЭлементыФормы.СверткаПоНДС.СоздатьКолонки();
	ЭлементыФормы.СверткаПоНДС.Колонки.Сдвинуть(1,-1);
	
	
	
  КонецПроцедуры
  //============================================================================ GtG ===
	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	  ОбновитьСверткуПоНДС  ();
	  ОМ4_ПередЗаписью(ЭтотОбъект,Товар,КонтрольнаяСуммаШапкиИсходногоДокументаПередОткрытием ,КонтрольнаяСуммаТЧИсходногоДокументаПередОткрытием);
	  ЭтотОбъект.СуммаДок=Товар.Итог("СуммаЗакуп");
  КонецПроцедуры




//============================================================================ GtG ===
Функция ПроверкаЗаполненияКритическиВажныхЗначенийДляСтроки  (ТекСтрокаТЧ) 
    // Назначение:
	// проверяет заполнены ли поля Цена и ставка ндс
	// Возвращает истина или ложь
    // 
	//--------------------------------------------------------------------------------
	 Если ТекСтрокаТЧ.Количество=0 Тогда
		 Предупреждение("Не указано количество!");
		 Возврат Ложь;
	 КонецЕсли;
	 
	 Если ТекСтрокаТЧ.СтавкаНДС.Пустая()  Тогда
		 Предупреждение("Не указана сатвка НДС!");
		 Возврат Ложь;
	 КонецЕсли;

     

     Возврат Истина;
КонецФункции
//============================================================================ GtG ===

//============================================================================ GtG ===
Функция ТекущаяСтрокаДокумента  () 
    // Назначение:
	// Дает объект - тек строку документа
	// 
    // 
	//--------------------------------------------------------------------------------
	ТекСтрокаТЧ="";
	ИндексТекСтроки=Товар.Индекс(ЭлементыФормы.Товар.ТекущаяСтрока);
    ТекСтрокаТЧ=ТОвар.Получить( ИндексТекСтроки); // Рез. тип объекта - СтрокаТабличнойЧасти

	Возврат ТекСтрокаТЧ;
	
КонецФункции
//============================================================================ GtG ===



Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	//------------------<Если уже кто-то открыл документ, то открываем форму на просмотр>-------------------Virus----26.11.2007
	Попытка
		Заблокировать();
	Исключение
		//Предупреждение("Бла-бла-бла документ уже открыт");
		ОшибкаПолная = ОписаниеОшибки();
		Ошибка = СтрПолучитьСТроку(ОшибкаПолная,2);
		Предупреждение(Ошибка);
		ЭтаФорма.ТолькоПросмотр = Истина;
	Конецпопытки;
	//--------------------------------------------------------Virus----КОНЕЦ--26.11.2007
	ОМ41_ПередОткрытиемДокумента  (ЭтотОбъект,ЭтаФорма,Отказ);
	
		
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый()=Истина Тогда
		Валюта=Константы.ОсновнаяВалютаУчета.Получить();
		Склад=Константы.ОсновнойСклад.Получить();
		Дата	= ТекущаяДата(); // Присваиваем именно дату дока к текущей дате и текущему времени
		СпособВозврата = Перечисления.ВидыВозвратаПоставщику.ВПроцессеРеализации;
		СкладОбработкаВыбора( ЭлементыФормы.Склад , Склад, Истина);
		
		НоваяСтрокаИзм = Изменения.Добавить();
		НоваяСтрокаИзм.Дата=ТекущаяДата();
		НоваяСтрокаИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		НоваяСтрокаИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
		
	Иначе
		ДатаЗапрета = НастройкаПравДоступа.ВернутьДатуЗапретаРедактирования(Склад);
		Если Дата <= ДатаЗапрета Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЕсли;  
	СтараяВалюта=Валюта;
	
	//ОМ4_ПРиОткрытии(ЭтотОбъект,Товар,КонтрольнаяСуммаШапкиИсходногоДокументаПередОткрытием,КонтрольнаяСуммаТЧИсходногоДокументаПередОткрытием);
	
	ОбновитьСверткуПоНДС  ();
	
	ДоступностьРасценки(Склад);

	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект,СписокПечатныхФорм);
	
	//------------------<Открытие непроведенного документа>-------------------GtG----
	// очень похоже что система упала и поднялась, могут возникнуть проблемы с 
	// резервом подбора
	//--------------------------------------------------------GtG----КОНЕЦ
	
	//------------------<Уберем из резерва все по этому документу и заново туда пропишем>-------------------GtG----
	Если ЭтотОбъект.ЭтоНовый()=Ложь Тогда
		Если ЭтотОбъект.Проведен=Ложь Тогда
			ОМ15_ОчисткаРезерваДокумента(ЭтотОбъект.Ссылка );// должна быть во всех документах, которые касаются резерва количества товара
			ОМ15_ДобавитьДокументЦеликомВРезервПодбора(ЭтотОбъект.Ссылка);	 
		КонецЕсли; 

	КонецЕсли;
	
КонецПроцедуры

 
Функция НДСЗакупПравильный(ТекСтрокаТЧ)	// Назначение:
	// Проверяет на глюк
	// сумма НДС не должна отличаться на 0,хх от расчетного значения
	// допустимая погрешность ЛимитОтклоненияСуммПриПоступленииТовара от суммы НДС по 1-й штуке
	//============================================================================ GtG ===
	ПРеделПогрешности=Константы.ЛимитОтклоненияСуммПриПоступленииТовара.Получить();
	Если ПроверкаЗаполненияКритическиВажныхЗначенийДляСтроки  (ТекСтрокаТЧ)Тогда
		
		РасчетноеЗначениеНаВсюСумму=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(ТекСтрокаТЧ.СуммаЗакуп,ТекСтрокаТЧ.СтавкаНДС,2);
		РасчетноеЗначениеНаВсюСумму=Окр(РасчетноеЗначениеНаВсюСумму,2);
		РасчетноеЗначение =РасчетноеЗначениеНаВсюСумму/ТекСтрокаТЧ.КоличествоФакт;
		
		РасчетноеЗначение=Окр(РасчетноеЗначение,2);
		МаксДопПогрешность=ПРеделПогрешности/100* РасчетноеЗначение;
		
		ТекЗн          =Окр(ТекСтрокаТЧ.НДСЗакуп/ТекСтрокаТЧ.КоличествоФакт,2); // 1 Шт
		ТекЗнНаВсюСумму=ТекСтрокаТЧ.НДСЗакуп;
		
		
		Погрешность= ТекЗн-РасчетноеЗначение;
		
		Если Погрешность<0 Тогда
			Погрешность=Погрешность*(-1);
		КонецЕсли; 
//		                            -maxD         +maxD
		//----------------------------{-----Rzn-----}--------------------------------------->
//		                     *   *       ^        ^   *      *
//                           |   |       |        |   |      |

		Если  (РасчетноеЗначение+Погрешность> РасчетноеЗначение+МаксДопПогрешность) или (РасчетноеЗначение-Погрешность< РасчетноеЗначение-МаксДопПогрешность)Тогда
			Предупреждение("Странная сумма НДС закуп.!
							|Расчетное значение НДС на всю сумму = "+РасчетноеЗначениеНаВсюСумму+"
							|Текущее значение НДС на всю сумму = "+ТекЗнНаВсюСумму+"
							|
							|Расчетное значение НДС на 1шт       = "+РасчетноеЗначение+"
							|Текущее значение НДС на 1шт       = "+ТекЗн+"
							|
							|Разница в НДС за 1шт. более допустимой: 
							| "+Погрешность+"  >  ("+ПРеделПогрешности+"% * "+РасчетноеЗначение+") = " +Окр(МаксДопПогрешность,5));
			Возврат	ЛОЖЬ;// Нужно пересчитать						
		Иначе
			ВОЗВРАТ ИСТИНА ; // ОК
		КонецЕсли; 
	КонецЕсли; 	
	ВОЗВРАТ ИСТИНА; // по умолчанию все ОК
 КонецФункции 


 //============================================================================ GtG ===
Процедура ПересчетСтрокиДокумента  (ТекСтрД, ИмяКол)  Экспорт
	 // Назначение:
	 // Выполняет пересчет строки документа и создает партию если ее нет
	 // Если партия есть то изменяет данные хранящиеся в ней.
	 //--------------------------------------------------------------------------------

	 Если (ИмяКол="КоличествоФакт")  Тогда
		 // Назначение:
		 // При изменении количества пересчитываем ВСЕ колонки по строке документа
		 // Если сумма и НДС закуп меняется кричим об этом
		 //============================================================================ GtG ===
		 
		ТекСтрД.СуммаЗакуп	= ТекСтрД.ЦенаЗакуп*ТекСтрД.КоличествоФакт;// пересчет при условии изменения количества
		ТекСтрД.СуммаРозн	= ТекСтрД.ЦенаРозн*ТекСтрД.КоличествоФакт;// пересчет при условии изменения количества
        ТекСтрД.НДСЗакуп   = ТекСтрД.СуммаЗакуп*ТекСтрД.СтавкаНДС.Ставка/(100+ТекСтрД.СтавкаНДС.Ставка);
	иначеЕсли (ИмяКол="СуммаЗакуп")  Тогда
		ТекСтрД.НДСЗакуп   = ТекСтрД.СуммаЗакуп*ТекСтрД.СтавкаНДС.Ставка/(100+ТекСтрД.СтавкаНДС.Ставка);
		ТекСтрД.ЦенаЗакуп = ТекСтрД.СуммаЗакуп/ТекСтрД.КоличествоФакт;// пересчет при условии изменения количества

	иначеЕсли (ИмяКол="СуммаРозн")  Тогда
		ТекСтрД.НДСРозн   = ТекСтрД.СуммаРозн*ТекСтрД.СтавкаНДС.Ставка/(100+ТекСтрД.СтавкаНДС.Ставка);
		ТекСтрД.ЦенаРозн = ТекСтрД.СуммаРозн/ТекСтрД.КоличествоФакт;// пересчет при условии изменения количества
	 КонецЕсли; 
	

	 
	 ОбновитьСверткуПоНДС  (); 
	 
 КонецПроцедуры
 //============================================================================ GtG ===
 




 Процедура ТоварПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	 
	 
	 ТСД=ТекущаяСтрокаДокумента();
	 ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
	 
	 //Сообщить(ИмяТекКол);
	 
	 Если ИмяТекКол="Количество" Тогда
		 // Назначение:
		 // При изменении количества пересчитываем ВСЕ колонки по строке документа
		 // Если сумма и НДС закуп меняется кричим об этом
		 // 
		 //============================================================================ GtG ===
		 //Отказ= ИСТИНА ;
		 ТСД.КоличествоФакт=ТСД.Количество;
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол); // пересчет при условии изменения количества
		 
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="КоличествоФакт" Тогда
		 // Назначение:
		 // При изменении количества пересчитываем ВСЕ колонки по строке документа
		 // Если сумма и НДС закуп меняется кричим об этом
		 // 
		 //============================================================================ GtG ===
		 //Отказ= ИСТИНА ;
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол); // пересчет при условии изменения количества
		 
		 ВОЗВРАТ ;
	 КонецЕсли; 

	 
	 Если ИмяТекКол="Товар" Тогда
		 // Назначение:
		 // При изменении товара изменяем партию, (владельца) если она существует или создаем новую
		 // 
		 // 
		 //============================================================================ GtG ===
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 
		 
		 
		  
		 //Отказ= ИСТИНА ;
		 
		 
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="ЦенаЗакупБезНДС" Тогда
		 // Назначение:
		 // При измененииЗакупки без ндс пересчет всех сумм (закуп, опт, розн)
		 // если була задана сумма вручную контроль несхождения
		 // модификация партии если она существует
		 //============================================================================ GtG ===
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 
		 
		 
		  
		 //Отказ= ИСТИНА ;
		 
		 
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="СтавкаНДС" Тогда
		 // Назначение:
		 // При СтавкаНДС без ндс пересчет всех сумм  (закуп, опт, розн)
		 // если була задана сумма вручную контроль несхождения
		 // модификация партии если она существует
		 //============================================================================ GtG ===
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 
		 //Отказ= ИСТИНА ;
		 
		 
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="ЦенаРозн" Тогда
		 //Отказ= ИСТИНА ;
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="ПроцентРознНац" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 
	 Если (ИмяТекКол="СуммаЗакуп") или (ИмяТекКол="СуммаРозн") Тогда
		  ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 Если ИмяТекКол="НДСЗакуп" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 //============================< Резервные затычки >================================GtG===

	 Если ИмяТекКол="" Тогда
		 //Отказ= ИСТИНА ;
		 
		 
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 
	 
	 
КонецПроцедуры


Процедура ПодборПоАПНажатие(Элемент)
	// Назначение:
	// Запускает процесс подбора по справочнику АП
	// Открывает форму для подбора АП
	// 
	//============================================================================ GtG ===
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!");
		ВОЗВРАТ ;
	КонецЕсли;
	
	Если  ЭтотОбъект.ЭтоНовый() ТОгда
		 ЭтотОбъект.Записать();
	КонецЕсли;	
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= ПолучитьОбщуюФорму("ОбщФормаПодборПоОстаткамСклада",ЭтаФорма,КлючУник);	
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.Открыть();
КонецПроцедуры



//============================================================================ GtG ===
Процедура ДобавитьТоварКолво  (СтрТЗ) 
    // Назначение:
	// Добавляет строку товара в документ
	// выполняет расчет числовых полей
    // 
	//--------------------------------------------------------------------------------
	
	ВыбТовар	=СтрТЗ.ТОвар;
	ВыбПартия	=СтрТЗ.Партия;
	ВыбКолво	=СтрТЗ.Колво;
	ВыбСерия    =СтрТЗ.Серия;

	ПарамПоиска = Новый  Структура;
	ПарамПоиска.Вставить("Товар",ВыбТовар);
	ПарамПоиска.Вставить("ЕИТ",СтрТЗ.Ед);
    ПарамПоиска.Вставить("Партия",СтрТЗ.Партия);
	ПарамПоиска.Вставить("Серия",СтрТЗ.Серия);
	
	МассивНайденныхСтрок= Товар.НайтиСтроки(ПарамПоиска);
	
	Если МассивНайденныхСтрок.Количество()=0 Тогда
		
		
					//----------------------------< Добавляем только при добавлении КоэффДобавления=1  >--------------------------------GtG---
			НоваяСтрокаВыбТовара=Товар.Добавить();
			НоваяСтрокаВыбТовара.Товар=ВыбТовар;
			НоваяСтрокаВыбТовара.КоличествоФакт=ВыбКолво;
			НоваяСтрокаВыбТовара.СтавкаНДС=СтрТЗ.СтавкаНДС;
			
			
			//-----------------< единица  >----------------GtG---
			НоваяСтрокаВыбТовара.ЕИТ=СтрТЗ.Ед;			
			НоваяСтрокаВыбТовара.Коэфф=НоваяСтрокаВыбТовара.ЕИТ.К;
			
			
			//----------------------------< партия >--------------------------------GtG---
			НоваяСтрокаВыбТовара.Партия=ВыбПартия;
			
			Если НоваяСтрокаВыбТовара.Партия.Пустая() Тогда
				НоваяСтрокаВыбТовара.Серия= НоваяСтрокаВыбТовара.Партия.Серия;
				НоваяСтрокаВыбТовара.Сертификат= НоваяСтрокаВыбТовара.Партия.Серия.Сертификат.Ссылка;
			Иначе	
				//----------------------------< Серия >--------------------------------GtG---
				НоваяСтрокаВыбТовара.Серия=ВыбСерия;
				НоваяСтрокаВыбТовара.Сертификат= ВыбСерия.Сертификат.Ссылка;
			КонецЕсли;
			
			
			
			
			
			//----------------------------< Цены , суммы , НДСы >--------------------------------GtG---
			НоваяСтрокаВыбТовара.НДСЗакуп	= СтрТЗ.НДСЗакуп;
			НоваяСтрокаВыбТовара.НДСРозн 	= СтрТЗ.НДСРозн;
			НоваяСтрокаВыбТовара.СуммаЗакуп = СтрТЗ.СуммаЗакуп;
			НоваяСтрокаВыбТовара.СуммаРозн 	= СтрТЗ.СуммаРозн;
			НоваяСтрокаВыбТовара.ЦенаЗакуп 	= СтрТЗ.СуммаЗакуп/ВыбКолво;
			НоваяСтрокаВыбТовара.ЦенаРозн 	= СтрТЗ.СуммаРозн/ВыбКолво;
			
			//----------------------------< Наценка >--------------------------------GtG---
			НоваяСтрокаВыбТовара.ПроцентРознНац= 100*(СтрТЗ.СуммаРозн-СтрТЗ.СуммаЗакуп)/СтрТЗ.СуммаЗакуп;
			Если ТипЗнч(ВыбПартия.ДокументПоступления) = Тип("ДокументСсылка.ПоступлениеТовара") Тогда
				НоваяСтрокаВыбТовара.НомДокПост = СокрЛП(ВыбПартия.ДокументПоступления.ВхНомерНакл);
			КонецЕсли;
			
			
			
		
	Иначе   // только при совпадении единиц измерения и партии

		СтрокаВТ=МассивНайденныхСтрок[0];
		СтрокаВТ.КоличествоФакт=СтрокаВТ.КоличествоФакт+ВыбКолво;
		
		
		СтрокаВТ.НДСЗакуп	= СтрокаВТ.НДСЗакуп+ СтрТЗ.НДСЗакуп;
		СтрокаВТ.НДСРозн 	= СтрокаВТ.НДСРозн + СтрТЗ.НДСРозн;
		СтрокаВТ.СуммаЗакуп = СтрокаВТ.СуммаЗакуп + СтрТЗ.СуммаЗакуп;
		СтрокаВТ.СуммаРозн 	= СтрокаВТ.СуммаРозн +	СтрТЗ.СуммаРозн;
		СтрокаВТ.ЦенаЗакуп 	= СтрокаВТ.СуммаЗакуп/СтрокаВТ.КоличествоФакт;
		СтрокаВТ.ЦенаРозн 	= СтрокаВТ.СуммаРозн /СтрокаВТ.КоличествоФакт;
		
		//----------------------------< Наценка >--------------------------------GtG---
		СтрокаВТ.ПроцентРознНац= 100*(СтрокаВТ.СуммаРозн-СтрокаВТ.СуммаЗакуп)/СтрокаВТ.СуммаЗакуп;

		
	КонецЕсли; 
	
 
 КонецПроцедуры
 //============================================================================ GtG ===
 

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	// Назначение:
	// Обрабатывает событие окончания подбора из формы подбора АП
	// На вход получает ТЗ товара
	// Циклически запускает обработку добавления и расчета строки документа
	//============================================================================ GtG ===
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда
		Для Ы=0 По ЗначениеВыбора.Количество()-1 Цикл
			
		      СтрТЗ= ЗначениеВыбора.Получить(Ы) ;
			  
			  ВыбТовар=СтрТЗ.Товар;
			  ВыбКолво=СтрТЗ.Колво;
			  
			  ДобавитьТоварКолво(СтрТЗ);
		
		КонецЦикла;
	КонецЕсли; 
	ДокОснование = Товар.Получить(0).Партия.ДокументПоступления;
	ПоНакладной = ""+ДокОснование.ВхНомерСФ + " от " + ДокОснование.ВхДатаСФ;
КонецПроцедуры



Процедура КоманднаяПанель1Расценить(Кнопка)
	// Вставить содержимое обработчика.
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!");
		ВОЗВРАТ ;
	КонецЕсли; 
	
	

	КлючУник=  Новый   УникальныйИдентификатор();
	ПолучитьОбщуюФорму("ОбщФормаРасценки",ЭтаФорма,КлючУник).Открыть();
КонецПроцедуры

Процедура ДоступностьРасценки(ВыбранноеЗначение)
	Красц=ЭлементыФормы.КоманднаяПанель1.Кнопки.Найти("Расценить");
	ЭФТК=ЭлементыФормы.Товар.Колонки;
	
	Если ВыбранноеЗначение.ТипСклада= Перечисления.ТипыМХ.Опт ТОгда

		ЭФТК.ПроцентРознНац.Видимость=ложь;
		ЭФТК.ЦенаРозн.Видимость=Ложь;
		ЭФТК.СуммаРозн.Видимость=Ложь;
		ЭФТК.НДСРозн.Видимость=Ложь;
	Иначе
	
	    ЭФТК.ПроцентРознНац.Видимость=Истина;
		ЭФТК.ЦенаРозн.Видимость=Истина;
		ЭФТК.СуммаРозн.Видимость=Истина;
		ЭФТК.НДСРозн.Видимость=Истина;
	КонецЕсли;	
КонецПроцедуры	


//============================================================================ GtG ===
Процедура ПроверкаЯчеекХранения  (ВыбСклад,Отправитель=Истина) 
    // Назначение:
	// Установка ячеек хранения в соответствии с выбранным складом 
    // для всех товаров документа
	//--------------------------------------------------------------------------------
	
	//Для каждого Стч  Из Товар Цикл
	//	Если Стч.МестоНаСкладе.Владелец<>ВыбСклад Тогда
	//		Если Отправитель= истина Тогда
	//			СТЧ.МестоНаСкладе=ОМ1_ПолучитьМестоНаСкладе(СТЧ.Товар,ВыбСклад);
	//		иначе	// по получателю			
	//			СТЧ.МестоНаСкладеПол=ОМ1_ПолучитьМестоНаСкладе(СТЧ.Товар,ВыбСклад);
	//		КонецЕсли; 
	//	КонецЕсли;	 
	//КонецЦикла; 

     

     
 КонецПроцедуры
 //============================================================================ GtG ===
 
//============================================================================ GtG ===
Функция СкладОптовый  (ВыбСкладСцылка) 
    // Назначение:
	// Для сокращения кода
	// 
    // 
	//--------------------------------------------------------------------------------
	Если ВыбСкладСцылка.ТипСклада=Перечисления.ТипыМХ.Опт Тогда
		Возврат ИСТИНА;
	КонецЕсли; 	
    Возврат Ложь;
КонецФункции
//============================================================================ GtG ===


Процедура СкладОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// если выбран оптовый склад, то на нем розничные цены не учитываем
	// если поступление на розничный склад, то на нем нужно учесть и в рознице 
	// и в оптовой 
	
	ЭТК=ЭлементыФормы.Товар.Колонки;
	
	ВидимостьНах= ИСТИНА; // розничные колонки завсегда видны
	Если СкладОптовый(ВыбранноеЗначение) Тогда
		ВидимостьНах= ЛОЖЬ;
	КонецЕсли; 	
		
	
	//----------------------------< С оптового склада прячем розн цену исх >--------------------------------GtG---
	Если Элемент.ИмЯ="Склад" Тогда
		//Сообщить("Херачим по складу отправителю");
		ЭТК.НДСРозн.Видимость= ВидимостьНах;
		ЭТК.СуммаРозн.Видимость= ВидимостьНах;
		ЭТК.ЦенаРозн.Видимость= ВидимостьНах;
		ЭТК.ПроцентРознНац.Видимость= ВидимостьНах;
		ПроверкаЯчеекХранения  (ВыбранноеЗначение,Истина) ; // истина - по отправителю / ложь- по получателю
		//----------------------------< Колонка затычка >--------------------------------GtG---
		//Если  (СкладОптовый(ВыбранноеЗначение)= ИСТИНА) Тогда
		//	  ЭТК.КолонкаЗатычка.Видимость= ЛОЖЬ; // 
		//  Иначе
		//	  ЭТК.КолонкаЗатычка.Видимость= Истина;
		//КонецЕсли; 
	КонецЕсли; //"Склад"
	
	 
	
КонецПроцедуры



Процедура ТоварЕИТОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ТС=ЭлементыФормы.ТОвар.ТекущаяСтрока;
	ТС.Коэфф= ВыбранноеЗначение.К;
	ТС.ЦенаЗакуп 	= ТС.ЦенаЗакуп/ТС.ЕИТ.К*ВыбранноеЗначение.К;
	ТС.ЦенаРозн  	= ТС.ЦенаРозн/ТС.ЕИТ.К*ВыбранноеЗначение.К;
	ТС.СуммаРозн	= ТС.ЦенаРозн*ТС.КОличествоФакт;
	ТС.СуммаЗакуп	= ТС.ЦенаЗакуп*ТС.КОличествоФакт;
	ТС.НДСЗакуп=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТС.СуммаЗакуп,ТС.СтавкаНДС);
	ТС.НДСРозн=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТС.СуммаРозн,ТС.СтавкаНДС);
	//Сообщить("");
	//Сообщить("Предыдущее значение ЕИТ="+ТС.ЕИТ+" новое "+ ВыбранноеЗначение);
	//
	//Сообщить("0002) Сюда вставить пересчет цены и всего остального по коэфф единицы , исходим из той цены и единицы что была до изменения");
	
КонецПроцедуры


Процедура ТоварПередНачаломДобавления(Элемент, Отказ, Копирование)
	// Запрещено добавлять стандартным образом
	ПодборПоАПНажатие("");
	Отказ= ИСТИНА;
КонецПроцедуры

Процедура ПриЗакрытии()
	//Сообщить("ПриЗакрытии");
	Если Товар.Количество()>0 Тогда
		Если  (ЭтотОбъект.Проведен=Ложь) и (ЭтотОбъект.ЭтоНовый() = Ложь) Тогда
			ОМ15_ОчисткаРезерваДокумента( ЭтотОбъект.Ссылка);
			Если ЭтотОбъект.ПометкаУдаления = Ложь Тогда //Если помечен на удаление, тогда надо только очистить резерв
				ОМ15_ДобавитьДокументЦеликомВРезервПодбора(ЭтотОбъект.Ссылка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПоставщикОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
//==================<При изменении Поставщика надо удалить все строки и зачистить регистр Резерва>===================Virus====27.11.2007	
// потому что нельзя в одном возвратном документе определенному поставщику закидывать товар от другого поставщика
	//Если (Элемент.Значение <> Справочники.Поставщики.ПустаяСсылка()) и (ЭтотОбъект.Проведен = Ложь ) Тогда
	//	Если Элемент.Значение <> ВыбранноеЗначение Тогда
	//		Товар.Очистить();
	//		ОМ15_ОчисткаРезерваДокумента(ЭтотОбъект.Ссылка,Ложь);
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры


Процедура ТоварКоличествоФактПриИзменении(Элемент)
	
	НовоеКФ=Элемент.Значение;
	СВТ=ТекущаяСтрокаДокумента();
	ОМ15_ИзменитьСтрокуРезерваПодбора(СВТ.Товар,СВТ.Партия,Склад,НовоеКФ, ЭтотОбъект.Ссылка);

КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	КодАП=ОформлениеСтроки.Ячейки.КодАП;
	ОформлениеСтроки.Ячейки.КодАП.УстановитьТекст(Формат(ДанныеСтроки.Товар.Код,"ЧЦ=10; ЧДЦ=0; ЧГ=0"));

КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	ОМ10_КнопкаПечатьНажатие (ЭтотОбъект,ЭтаФорма);
КонецПроцедуры

Процедура ОсновныеДействияФормыКарточкаТОвара(Кнопка)
		// Вставить содержимое обработчика.
	ТСД=ТекущаяСтрокаДокумента  ();
	
	Карточка=Отчеты.ДвижениеТовара1.Создать();
	
	Карточка.ВыбПартия=ТСД.Партия;
	
	Карточка.ВыбСклад=Склад;
	
	Карточка.ВыбТовар=ТСД.ТОвар;
	Карточка.ВыбФирма=Склад.Фирма;
	Карточка.НачПер=Дата-60*60*24*15;// по умолчанию за последние 15 дней
	Карточка.КонПер=Дата;
	
	
	Ф=Карточка.ПолучитьФорму("Форма");
	
	Ф.Открыть();

КонецПроцедуры

Процедура СкладПриИзменении(Элемент)
	
	Если Элемент.Значение.Фирма <> Фирма Тогда
		Фирма = Элемент.Значение.Фирма;
	КонецЕсли;
	
КонецПроцедуры

Процедура ФирмаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если (Склад.Фирма <> ВыбранноеЗначение) и (НЕ Склад.Пустая()) Тогда
		Предупреждение("Нельзя выбрать фирму отличную от фирмы по уже выбранной ранее аптеке!"	);
		ВыбранноеЗначение = Фирма;
	КонецЕсли
	
КонецПроцедуры

Процедура кнОбновитьИсториюИзмененийНажатие(Элемент)
	
	 ТХТ = "ВЫБРАТЬ
	       |	ИзмененияПоступленийВАптеке.Документ,
	       |	ИзмененияПоступленийВАптеке.ИД КАК ИД,
	       |	ИзмененияПоступленийВАптеке.ДатаИзменения,
	       |	ИзмененияПоступленийВАптеке.Действие,
	       |	ИзмененияПоступленийВАптеке.ТабНомер,
	       |	ИзмененияПоступленийВАптеке.ФИО,
	       |	ИзмененияПоступленийВАптеке.НомерДокАптеки
	       |ИЗ
	       |	РегистрСведений.ИзмененияПоступленийВАптеке КАК ИзмененияПоступленийВАптеке
	       |ГДЕ
	       |	ИзмененияПоступленийВАптеке.Документ = &Документ
	       |
	       |УПОРЯДОЧИТЬ ПО
	       |	ИД";
	
		   
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Документ",Ссылка);
	ТЗИзмененийВАптеке = Запрос.Выполнить().Выгрузить();
	
	
КонецПроцедуры

СписокКолонокДляПересчетаПоЦене="ЦенаЗакупБезНДС,Количество,КоличествоФакт,СтавкаНДС,";
СписокКолонокПересчетаЦенСуммНаценок=",";
СписокКолонокПересчетаПроцентовНаценок="ЦенаРознПол,ПроцентРознНацПол,";
СписокКолонокПересчетаЦЕН="СуммаЗакуп,";
