
Функция КорректировкаСпецСимволов(Значение)
	
	//Возврат Значение;
	
   Результат = СтрЗаменить(Значение, "&", "&amp;");
   Результат = СтрЗаменить(Результат, "<", "&lt;");
   Результат = СтрЗаменить(Результат, ">", "&gt;");
   Результат = СтрЗаменить(Результат, """", "&quot;");
   Результат = СтрЗаменить(Результат, "'", "&apos;");
   Результат = СтрЗаменить(Результат, "/", "&#x2F;");	
   Возврат Результат;
   
КонецФункции

Процедура ЗаписатьЭлементXML(ЗаписьXML, Имя, Значение) 
	
	//ЗаписьXML.ЗаписатьНачалоЭлемента(Имя);
	//ЗаписьXML.ЗаписатьТекст(Значение);
	//ЗаписьXML.ЗаписатьКонецЭлемента();
	Если Значение = "" Тогда
		ЗаписьXML.ДобавитьСтроку("<" + Имя + "/>");
	Иначе
		ЗаписьXML.ДобавитьСтроку("<" + Имя + ">" + Значение + "</" + Имя + ">");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьНачалоЭлемента(ЗаписьXML,Имя)
	
	ЗаписьXML.ДобавитьСтроку("<" + Имя + ">");
	
КонецПроцедуры

Процедура ЗаписатьКонецЭлемента(ЗаписьXML,Имя)
	
	ЗаписьXML.ДобавитьСтроку("</" + Имя + ">");
	
КонецПроцедуры


Функция ВыгрузитьВАптеку() Экспорт
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "SALES_PLAN_OWN_BRAND"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
		
	ЗаписьXML.ДобавитьСтроку("<hdr>");
		//ЗаписатьЭлементXML(ЗаписьXML, "id_doc_type", 	"222"); 
		ЗаписатьЭлементXML(ЗаписьXML, "ndoc",		Формат(Номер,"ЧГ=0")); 
		ЗаписатьЭлементXML(ЗаписьXML, "start_dt",	Формат(НачалоПериода,"ДФ=dd.MM.yyyy"));
		ЗаписатьЭлементXML(ЗаписьXML, "end_dt",		Формат(КонецПериода,"ДФ=dd.MM.yyyy"));
		ЗаписатьЭлементXML(ЗаписьXML, "dsc_office", КорректировкаСпецСимволов(СокрЛП(Комментарий)));	
  	ЗаписьXML.ДобавитьСтроку("</hdr>"); //конец записи секции  "hdr"
	
	ЗаписьXML.ДобавитьСтроку("<groups>");
	Для каждого стр из ГруппыТоваров Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_group"	,Формат(стр.Код,"ЧГ=0; ЧН=0"));
			ЗаписатьЭлементXML(ЗаписьXML, "descr"		,КорректировкаСпецСимволов(СокрЛП(стр.Наименование)));	
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</groups>");	
	
	ЗаписьXML.ДобавитьСтроку("<goods>");
	Для каждого стр из СоставГруппТоваров Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_group"	,Формат(стр.КодГруппыТоваров,"ЧГ=0; ЧН=0"));
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods"	,Формат(стр.Товар.Код,"ЧГ=0; ЧН=0"));
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</goods>");		
	
	ЗаписьXML.ДобавитьСтроку("<plan>");
	Для каждого стр из Показатели Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_group"	,Формат(стр.КодГруппыТоваров,"ЧГ=0; ЧН=0"));
			ЗаписатьЭлементXML(ЗаписьXML, "id_apt"		,Формат(стр.Аптека.Код,"ЧГ=0; ЧН=0"));
			ЗаписатьЭлементXML(ЗаписьXML, "amount"		,Формат(Окр(стр.КолвоПродаж,0),"ЧГ=0; ЧН=0"));
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</plan>");
	
	ЗаписьXML.ДобавитьСтроку("</document>"); //конец записи секции  "document"
	ВесьТекст = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисШВ");
	Если КодСчетчика = -1 Тогда
		КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисШВ");
		Если КодСчетчика = -1 Тогда
			Возврат Ложь;	
		КонецЕсли;
	КонецЕсли;
	
	МЗ = РегистрыСведений.ОфисАптекаШироковещание.СоздатьМенеджерЗаписи();
	МЗ.Код = КодСчетчика;
	МЗ.ТипУпаковки = "SALES_PLAN_OWN_BRAND";
	МЗ.Приоритет = 1;
	МЗ.ВерсияФормата = 1;
	МЗ.ИмяФайла = "sales_plan_own_brand_" + "_" + СокрЛП(Формат(Номер,"ЧГ=0")) + "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
	МЗ.ИдентификаторКодировки = 1;
	МЗ.ХМЛСтрока = ВесьТекст;
	МЗ.Записать();
	
	ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Выгружен",ПараметрыСеанса.ТекущийСотр,"Выгружен в аптеку");
	
	Возврат Истина;
	
	
	
	
КонецФункции

Процедура УдалитьДублиПоТоварам() Экспорт
	
	МассивСтрокДляУдаления = Новый Массив;
	
	ТЗ = СоставГруппТоваров.Выгрузить();
	ТЗ.Колонки.Добавить("КолвоПозиций");
	ТЗ.ЗаполнитьЗначения(1, "КолвоПозиций");
	ТЗ.Свернуть("КодГруппыТоваров, Товар", "КолвоПозиций");
	
	Для Каждого ТекСтрока Из ТЗ Цикл
		Если ТекСтрока.КолвоПозиций > 1 Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("КодГруппыТоваров", ТекСтрока.КодГруппыТоваров);
			Отбор.Вставить("Товар", ТекСтрока.Товар);
			
			НомерНайденнойСтроки = 1;
			НайденныеСтроки = СоставГруппТоваров.НайтиСтроки(Отбор);
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				Если НомерНайденнойСтроки < ТекСтрока.КолвоПозиций Тогда
					МассивСтрокДляУдаления.Добавить(НайденнаяСтрока);					
				КонецЕсли;
				
				НомерНайденнойСтроки = НомерНайденнойСтроки + 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого УдСтрока Из МассивСтрокДляУдаления Цикл
		НаимТовара = УдСтрока.Товар.Наименование;		
		СоставГруппТоваров.Удалить(УдСтрока);
		#Если Клиент Тогда
			Сообщить("Удалена дублирующая строка по товару " + НаимТовара, СтатусСообщения.Внимание);
		#КонецЕсли
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьДублиПоАптекам() Экспорт
	
	МассивСтрокДляУдаления = Новый Массив;
	
	ТЗ = Показатели.Выгрузить();
	ТЗ.Колонки.Добавить("КолвоПозиций");
	ТЗ.ЗаполнитьЗначения(1, "КолвоПозиций");
	ТЗ.Свернуть("КодГруппыТоваров, Аптека", "КолвоПозиций");
	
	Для Каждого ТекСтрока Из ТЗ Цикл
		Если ТекСтрока.КолвоПозиций > 1 Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("КодГруппыТоваров", ТекСтрока.КодГруппыТоваров);
			Отбор.Вставить("Аптека", ТекСтрока.Аптека);
			
			НомерНайденнойСтроки = 1;
			НайденныеСтроки = Показатели.НайтиСтроки(Отбор);
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				Если НомерНайденнойСтроки < ТекСтрока.КолвоПозиций Тогда
					МассивСтрокДляУдаления.Добавить(НайденнаяСтрока);					
				КонецЕсли;
				
				НомерНайденнойСтроки = НомерНайденнойСтроки + 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого УдСтрока Из МассивСтрокДляУдаления Цикл
		НаимАптеки = УдСтрока.Аптека.Наименование;		
		Показатели.Удалить(УдСтрока);
		#Если Клиент Тогда
			Сообщить("Удалена дублирующая строка по аптеке " + НаимАптеки, СтатусСообщения.Внимание);
		#КонецЕсли
	КонецЦикла;
	
КонецПроцедуры
