
Перем ТЗТовара;


Функция ПересчетКоличестваЧеков()
	
	ТЗНомеровЧеков=Новый ТаблицаЗначений();
	ТЗНомеровЧеков.Колонки.Добавить("НомерЧека");
	ТЗНомеровЧеков.Колонки.Добавить("ДатаОткрытияЧека");
	
	ДЛя Каждого Стр Из Товар Цикл
		СтрЧеков=ТЗНомеровЧеков.Добавить();
		СтрЧеков.НомерЧека =Стр.НомерЧека;
		СтрЧеков.ДатаОткрытияЧека = Стр.ДатаОткрытияЧека;
	КонецЦикла;	
	
	ДЛя Каждого Стр Из АвансыПоУслугам Цикл
		СтрЧеков=ТЗНомеровЧеков.Добавить();
		СтрЧеков.НомерЧека =Стр.НомерЧека;
		СтрЧеков.ДатаОткрытияЧека = Стр.ДатаОткрытияЧека;
	КонецЦикла;	

	ДЛя Каждого Стр Из Сертификаты Цикл
		СтрЧеков=ТЗНомеровЧеков.Добавить();
		СтрЧеков.НомерЧека =Стр.НомерЧека;
		СтрЧеков.ДатаОткрытияЧека = Стр.ДатаОткрытияЧека;
	КонецЦикла;	

	ТЗНомеровЧеков.Свернуть("НомерЧека,ДатаОткрытияЧека","");
	
	Возврат ТЗНомеровЧеков.Количество();
	
КонецФункции	


Процедура МиграцияККМ()
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("СкладВыручки",Склад);
	Запрос.УстановитьПараметр("ЗаводскойНомер",СокрЛП(ЗаводскойНомерККМ));
	
	Запрос.Текст="ВЫБРАТЬ
	             |	Кассы.Владелец как СкладКассы,
	             |	Кассы.ЗаводскойНомер,
	             |	Кассы.Ссылка,
	             |	Кассы.ПометкаУдаления,
	             |	&СкладВыручки  ,&ЗаводскойНомер
	             |ИЗ
	             |	Справочник.Кассы КАК Кассы
	             |ГДЕ
	             |	Кассы.ЗаводскойНомер = &ЗаводскойНомер
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Кассы.Код УБЫВ";
				 
	РЕз=Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр Из Рез Цикл 
		
		Если Стр.СкладКассы= Стр.СкладВыручки Тогда
			Касса=Стр.Ссылка;
			Если Стр.ПометкаУдаления=Истина Тогда
				ОбКасса=Стр.Ссылка.ПолучитьОбъект();
				ОбКасса.УстановитьПометкуУдаления(Ложь);
			КонецЕсли;	
		Иначе
			Если Стр.ПометкаУдаления=Истина Тогда
				продолжить;
			Иначе
				ОбКасса=Стр.Ссылка.ПолучитьОбъект();
				ОбКасса.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Касса.Пустая()=Истина ТОгда
			ККМ=Справочники.Кассы.СоздатьЭлемент();
			ККМ.ЗаводскойНомер=ЗаводскойНомерККМ;
			ККМ.Наименование=ЗаводскойНомерККМ;
			ККМ.Владелец=Склад;
			ККМ.УстановитьНовыйКод();
			ККМ.Записать(); // код уже не равен 0 и при записи дает нормальное имя кассы
			
			Касса=ККМ.Ссылка;
	КонецЕсли;	
	
КонецПроцедуры	



Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//  Сообщить(""+ЭтотОбъект+"   "+"1) ПередЗаписью  "+РежимЗаписи+"  "+Движения.ПартииЖНВЛС.Количество());
	
	
	
	Если РежимЗаписи=РежимЗаписиДокумента.Проведение Тогда
		ОтборПоПроведено=Новый Структура("Проведено",Ложь);

		ТЗТовара=Товар.Выгрузить(ОтборПоПроведено);
		
		ТЗТовара.Свернуть("Товар,К,СтавкаНДС,Партия","Количество,Сумма,СуммаНДС,СуммаЗакуп,НДСЗакуп");
		
		
		МассивСтрок=Товар.НайтиСтроки(ОтборПоПроведено);
		
		Для Каждого Стр Из МассивСтрок Цикл
			Стр.Проведено=Истина;
		КонецЦикла;
	
	ИначеЕсли РежимЗаписи=РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		Для Каждого Стр Из Товар Цикл
			Стр.Проведено=Ложь;
		КонецЦикла;
		
		Движения.ПартииЖНВЛС.Очистить();
		
	ИначеЕсли РежимЗаписи=РежимЗаписиДокумента.Запись Тогда
		// не надо ничего делать.
	КонецЕсли;

	//  Сообщить(""+ЭтотОбъект+"   "+"2) ПередЗаписью  "+РежимЗаписи+"  "+Движения.ПартииЖНВЛС.Количество());

	Если Касса.Пустая() ТОгда
		МиграцияККМ();
	КонецЕсли;
	
	//---------------<Расчет суммы документа>---------------------------// GtG // 03.01.2014 18:55:30
	СуммаСоСкидкой=Бухгалтерия.Итог("СуммаСоСкидкой");
	СуммаВозврата=СуммыПоЗетОтчетам.Итог("ВозвратыПоЗетОтчетуНал")+СуммыПоЗетОтчетам.Итог("ВозвратыПоЗетОтчетуБезНал");
	

	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
// ничего не делаем
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//---------------<Для отчета о продажах>---------------------------// GtG // 08.11.2013 15:41:42
	
	
	//---------------<списание товара>---------------------------// GtG // 08.11.2013 15:41:53
	
	
	НЗ=РегистрыНакопления.ПродажиСменККМ.СоздатьНаборЗаписей();
	НЗ.Отбор.Регистратор.Установить(ЭтотОбъект.Ссылка);
	
	Для Каждого ТекСтрокаТовар Из ТЗТовара Цикл
		Движение = НЗ.Добавить();
		Движение.Активность=Истина;
		Движение.Регистратор=ЭтотОбъект.Ссылка;
		//Движение.ВидДвижения = ВидДвиженияНакопления.Расход;// это оборотный регистр
		Движение.Период = Дата;
		Движение.Товар = ТекСтрокаТовар.Товар;
		Движение.Склад = Склад;
		Движение.Партия = ТекСтрокаТовар.Партия;
		Движение.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
		Движение.Фирма = Фирма;
		Движение.Колво = ТекСтрокаТовар.К*ТекСтрокаТовар.Количество;
		Движение.СуммаЗакупСНДС = ТекСтрокаТовар.СуммаЗакуп;
		Движение.СуммаНДСЗакуп = ТекСтрокаТовар.НДСЗакуп;
		Движение.СуммаРознСНДС = ТекСтрокаТовар.Сумма;
		Движение.СуммаРознНДС = ТекСтрокаТовар.СуммаНДС;
		Движение.ВидОперации = Перечисления.ВидыОпераций.ПродажаТМЦ;
	КонецЦикла;
	
	
	//Для Ы=1 по 10 цикл
	//	Попытка
			НЗ.Записать(Ложь); //- записи будут дописаны к уже существующим в информационной базе записям
	//		Прервать;
	//	Исключение 
	//		ОбщегоНазначения.Задержка(2);
	//	КонецПопытки;
	//КонецЦикла;	

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	//  Сообщить(""+ЭтотОбъект+"   "+"1) ОбработкаУдаленияПроведения  "+Движения.ПартииЖНВЛС.Количество());
	
	Для Каждого Стр Из Товар Цикл
			Стр.Проведено=Ложь;
		КонецЦикла;

    //---------------<по старым документам>---------------------------// GtG // 15.04.2014 17:35:41     
	Движения.ПартииЖНВЛС.Очистить();
	Движения.ПартииЖНВЛС.Записать();
    
    //---------------<По новым документам>---------------------------// GtG // 15.04.2014 17:35:49
    Движения.ПродажиСменККМ.Очистить();
	Движения.ПродажиСменККМ.Записать();
    
КонецПроцедуры


