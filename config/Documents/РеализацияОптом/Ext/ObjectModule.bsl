

 //============================================================================ GtG ===
 Функция ПроверкаНаНули  (Парам) 
     // Назначение:
 	// Проверяет строки товара на наличие строк с нулевыми значениями
 	// 
     // 
 	//--------------------------------------------------------------------------------
	Для Каждого ТекСтрокаТовар Из Товар Цикл
		Если ТекСтрокаТовар[Парам]=0 Тогда
			Возврат ЛОЖЬ;
		КонецЕсли;
	КонецЦикла; 	
	
	Возврат Истина;
 КонецФункции
 //============================================================================ GtG ===
 
 
Функция ПроверитьОстатки()
	
	ТекстЗапроса = "ВЫБРАТЬ 
	|ВложенныйЗапрос.Номенклатура, 
	|ВложенныйЗапрос.Партия КАК Партия, 
	|ВложенныйЗапрос.КоличествоСписываемое, 
	|ТоварыНаСкладахОстатки.КолвоОстаток 
	|ИЗ 
	|(ВЫБРАТЬ 
	|	ВнутреннийСписаниеТовары.Товар КАК Номенклатура, 
	|	ВнутреннийСписаниеТовары.Партия КАК Партия, 
	|	СУММА(ВнутреннийСписаниеТовары.КоличествоФакт *ВнутреннийСписаниеТовары.Коэфф) КАК КоличествоСписываемое 
	| ИЗ 
	|	Документ.РеализацияОптом.Товар КАК ВнутреннийСписаниеТовары 
	| ГДЕ 
	|	ВнутреннийСписаниеТовары.Ссылка = &Ссылка 
	| СГРУППИРОВАТЬ ПО 
	|	ВнутреннийСписаниеТовары.Товар, 
	|	ВнутреннийСписаниеТовары.Партия 
	|) КАК ВложенныйЗапрос 
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РегистрНакопления.ПартииЖНВЛС.Остатки(&МоментВремениДокумента, 
	|						Склад = &ВыбСклад
	|						И 
	|						Товар В (ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|									ВнутреннийСписаниеТоварыДляОтбора.Товар 
	|								ИЗ 
	|									Документ.РеализацияОптом.Товар КАК ВнутреннийСписаниеТоварыДляОтбора 
	|								ГДЕ 
	|								ВнутреннийСписаниеТоварыДляОтбора.Ссылка = &Ссылка)
	|						И
	|						Партия В (ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|									ВнутреннийСписаниеТоварыДляОтбора.Партия 
	|								ИЗ 
	|									Документ.РеализацияОптом.Товар КАК ВнутреннийСписаниеТоварыДляОтбора 
	|								ГДЕ 
	|								ВнутреннийСписаниеТоварыДляОтбора.Ссылка = &Ссылка)) КАК ТоварыНаСкладахОстатки 
	|ПО 
	|	ВложенныйЗапрос.Номенклатура = ТоварыНаСкладахОстатки.Товар И ВложенныйЗапрос.Партия = ТоварыНаСкладахОстатки.Партия
	|ГДЕ ВложенныйЗапрос.КоличествоСписываемое > ТоварыНаСкладахОстатки.КолвоОстаток";
	
	Запрос = Новый  Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("МоментВремениДокумента",МоментВремени());
	Запрос.УстановитьПараметр("ВыбСклад",Склад);
	Рез=Запрос.Выполнить();
	ТЗ=Рез.Выгрузить();	
	Если ТЗ.Количество() > 0 Тогда
		Для каждого стр Из ТЗ Цикл
			Сообщить("По товару " + стр.Номенклатура + "  партия = " + стр.Партия + " превышено количество .");
		КонецЦикла; 	
		Возврат Ложь;
	КонецЕсли;
	
    Возврат Истина;
		
КонецФункции



Процедура СформироватьСтруктуруДБФ(ТЗ,ДБФ)
			
			//============================< Генерим структуру DBF по ТЗ >================================GtG===
			Для Каждого Кол из ТЗ.Колонки Цикл
				//----------------------------------------------------------------------
	
				Если Кол.ТипЗначения.СодержитТип(Тип("Дата")) ТОгда
					Т="D";
					Д=0;
					Тч=0;
				ИначеЕсли Кол.ТипЗначения.СодержитТип(Тип("Число")) Тогда	
					Т="N";
					Д=15;
					Тч=2;
				ИначеЕсли Кол.ТипЗначения.СодержитТип(Тип("Строка")) Тогда	
					Т="S";
					Д=150;
					Тч=0;
				Иначе
					Сообщить("хрен знает какой тип");
				КонецЕсли;
				
				Если (Кол.Имя = "EAN13") или (Кол.Имя = "ExtParty") Тогда
					Т="S";
					Д=13;
					Тч=0;
				ИначеЕсли (Кол.Имя = "NameOKEI") или (Кол.Имя = "NDefOKEI") Тогда
					Т="S";
					Д=10;
					Тч=0;
				ИначеЕсли (Кол.Имя = "INN") Тогда
					Т="S";
					Д=12;
					Тч=0;
				ИначеЕсли (Кол.Имя = "KPP") Тогда
					Т="S";
					Д=9;
					Тч=0;
				ИначеЕсли (Кол.Имя = "NZAKSTR") Тогда
					Т="S";
					Д=20;
					Тч=0;
				КонецЕсли;
				
				
				
				
				ДБФ.поля.Добавить(Кол.Имя,Т,Д,Тч);
			КонецЦикла;
	
КонецПроцедуры

  
  
Функция ВыгрузитьДокумент() Экспорт
	  
	Если Грузополучатель.Пустая() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	КаталогФТП = Покупатель.КаталогЭкспортаНакладных;
	ДБФ= Новый  Xbase;
	ДБФ.Кодировка = КодировкаXBase.OEM;
	
	ТХТ = "ВЫБРАТЬ
	      |	РеализацияОптомТовар.Ссылка.Номер КАК NDOC,
	      |	РеализацияОптомТовар.Ссылка.Дата КАК DATEDOC,
	      |	РеализацияОптомТовар.Товар.Код КАК CODEPST,
		  |	РеализацияОптомТовар.Товар.Наименование КАК NAME,
	      |	РеализацияОптомТовар.ЕИТ.Код КАК EITCODE,
	      |	РеализацияОптомТовар.КоличествоФакт КАК QNT,
	      |	РеализацияОптомТовар.Партия.Наименование КАК PART,
	      |	РеализацияОптомТовар.Партия.ЦенаПроизводителяБезНДС КАК PRICE1,
	      |	РеализацияОптомТовар.Партия.НомерГТД.Наименование КАК NUMGTD,
	      |	РеализацияОптомТовар.Партия.БарКод КАК EAN13,
	      |	РеализацияОптомТовар.Партия.ЦенаГосРегистрации КАК REGPRC,
	      |	РеализацияОптомТовар.СтавкаНДС.Ставка КАК NDS,
	      |	ВЫРАЗИТЬ(РеализацияОптомТовар.ЦенаЗакуп / (1 + РеализацияОптомТовар.СтавкаНДС.Ставка / 100) КАК ЧИСЛО(12, 2)) КАК PRICE2N,
	      |	РеализацияОптомТовар.ЦенаЗакуп КАК PRICE2,
	      |	РеализацияОптомТовар.ЦенаРозн КАК PRICE3,
	      |	РеализацияОптомТовар.СуммаЗакуп КАК SUMPAY,
	      |	РеализацияОптомТовар.СуммаРозн КАК SUMROZN,
	      |	РеализацияОптомТовар.Партия.Серия.Наименование КАК SER,
	      |	РеализацияОптомТовар.Сертификат.Наименование КАК SERTIF,
	      |	РеализацияОптомТовар.Серия.СрокГодности КАК GDATE,
	      |	РеализацияОптомТовар.Ссылка.Грузополучатель.КодГрузополучателя как PODRCD
	      |ИЗ
	      |	Документ.РеализацияОптом.Товар КАК РеализацияОптомТовар
	      |ГДЕ
	      |	РеализацияОптомТовар.Ссылка = &Док";	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Док",ЭтотОбъект.Ссылка);
	
	Рез=Запрос.Выполнить();
	
	ТЗ=Рез.Выгрузить();
	
	СформироватьСтруктуруДБФ(ТЗ,ДБФ);
	
	
	Попытка
		ДБФ.СоздатьФайл(КаталогФТП + "" + Формат(Номер,"ЧГ=0")+".dbf");
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Для Каждого Стр из ТЗ Цикл		
		ДБФ.Добавить();
		Инд = 0;
		Партия = "";
		КоэффПоУмолчанию = 1;
		КодЕИТПоУмолчанию = 0;
		ТоварПоУмолчанию = "";
		Подменять = 0;
		Для к=0 По ТЗ.Колонки.Количество() - 1 Цикл
			Значение = стр.Получить(к);
			#Если Клиент Тогда
			состояние(Значение);
			#КонецЕсли
			ДБф.УстановитьЗначениеПоля(Инд,Значение);
			Инд=Инд+1;
		КонецЦикла;
		Дбф.Записать();
		
	КонецЦикла;
	
	Если ДБФ.Открыта()  = Истина Тогда
		ДБФ.ЗакрытьФайл();
	КонецЕсли;


	СтрИзм=Изменения.Добавить();
	СтрИзм.Сотрудник    = ПараметрыСеанса.ТекущийСотр;
	СтрИзм.Дата   = ТекущаяДата();
	СтрИзм.ТипИзм   = Перечисления.ДействияНадДокументами.Выгрузка;
	СтрИзм.КомментарийИзменения = "Выгружен в файл";
	ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
	Возврат Истина;
	  
КонецФункции
  
Функция ВыгрузитьДокументДляОриолы() Экспорт
	
	//ТСО {18.02.2015 #0001}
	
	Если  Не ЗначениеЗаполнено(ЭтотОбъект.НомерЗаявкиЛК) Тогда
		#Если Клиент Тогда
			Сообщить("Не заполнен номер заявки ЛК");
		#КонецЕсли
		Возврат Ложь;
	КонецЕсли;  	
	
	КаталогФТП = "\\id-vm-1\ftp_data\Post\moron\opt\";
	ИмяФайла = Формат(Номер, "ЧДЦ=; ЧН=; ЧГ=0");
	
	Текст = Новый ЗаписьТекста(КаталогФТП + ИмяФайла + ".csv", КодировкаТекста.ANSI);
	Текст.ЗаписатьСтроку("КодТовараПоставщика;НаименованиеТовара;Количество;Цена"); //Заголовок
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияОптомТовар.Товар.Код КАК КодТовараПоставщика,
	|	РеализацияОптомТовар.Товар.Наименование КАК НаименованиеТовара,
	|	РеализацияОптомТовар.КоличествоФакт КАК Количество,
	|	РеализацияОптомТовар.ЦенаЗакуп КАК Цена
	|ИЗ
	|	Документ.РеализацияОптом.Товар КАК РеализацияОптомТовар
	|ГДЕ
	|	РеализацияОптомТовар.Ссылка = &Док";	
	
	Запрос.УстановитьПараметр("Док", ЭтотОбъект.Ссылка);
	
	Рез = Запрос.Выполнить();
	Выборка = Рез.Выбрать();
	
	Пока Выборка.Следующий() Цикл 		
		КодТовараПоставщика	= Формат(Выборка.КодТовараПоставщика, "ЧДЦ=; ЧН=; ЧГ=0");
		НаименованиеТовара	= СокрЛП(Выборка.НаименованиеТовара);
		Количество			= Формат(Выборка.Количество, "ЧДЦ=; ЧН=; ЧГ=0");
		Цена				= Формат(Выборка.Цена, "ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
		
		Текст.ЗаписатьСтроку(КодТовараПоставщика + ";" + НаименованиеТовара + ";" + Количество + ";" + Цена);
		
	КонецЦикла;
	 		
	Текст.Закрыть();


	СтрИзм = Изменения.Добавить();
	СтрИзм.Сотрудник			= ПараметрыСеанса.ТекущийСотр;
	СтрИзм.Дата					= ТекущаяДата();
	СтрИзм.ТипИзм				= Перечисления.ДействияНадДокументами.Выгрузка;
	СтрИзм.КомментарийИзменения = "Выгружен в файл (для Ориолы)";
	
	ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат Истина;
	  
КонецФункции



 //============================================================================ GtG ===
Процедура ПриходРасходПоРегистрам(ТипДвижения) 
     // Назначение:
 	// Проведение документа по регистрам 
 	// либо приход , ибо расход
	// по указанному складу
 	//--------------------------------------------------------------------------------

 	
    Для Каждого ТекСтрокаТовар Из Товар Цикл
		
	
		//----------------------------< Партионные товары (ЖНВЛС/СВЛС) >--------------------------------GtG---
		
			ДвижениеП = Движения.ПартииЖНВЛС.Добавить();
			ДвижениеП.ВидДвижения=ТипДвижения; //ВидДвиженияНакопления.Приход;
			ДвижениеП.Период = Дата;
			ДвижениеП.Товар = ТекСтрокаТовар.Товар;
			ДвижениеП.Склад = Склад;
			ДвижениеП.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
			ДвижениеП.Партия = ТекСтрокаТовар.Партия ;
			ДвижениеП.Фирма= Склад.Фирма;
			ДвижениеП.ВидОперации=Перечисления.ВидыОпераций.РеализацияОпт;

			
			ДвижениеП.Колво = ТекСтрокаТовар.КоличествоФакт*ТекСтрокаТовар.Коэфф;
			ДвижениеП.СуммаЗакупСНДС = ТекСтрокаТовар.СуммаЗакуп;
			ДвижениеП.СуммаНДСЗакуп = ТекСтрокаТовар.НДСЗакуп;
			ДвижениеП.СуммаРознСНДС = ТекСтрокаТовар.СуммаРозн;
			ДвижениеП.СуммаРознНДС = ТекСтрокаТовар.НДСРозн;
			
		
	КонецЦикла;
	// записываем движения регистров
	//Движения.ПартииЖНВЛС.Записать();

	
	//----------------------------< По регитсру учета по ставке НДС >--------------------------------GtG---
	ТЗПодСвертку = ТОвар.Выгрузить();
	
	ТЗПодСвертку.Свернуть("СтавкаНДС","СуммаЗакуп,НДСЗакуп,СуммаРозн,НДСРозн");
	
	Для Каждого ТекСтрокаТовар Из ТЗПодСвертку Цикл
		// регистр ОстаткиПоСтНДСПоСкладам Приход
		Движение = Движения.ОстаткиПоСтНДСПоСкладам.Добавить();
		Движение.ВидДвижения =ТипДвижения;// ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
		Движение.Фирма= Склад.Фирма;
		Движение.ВидОперации=Перечисления.ВидыОпераций.РеализацияОпт;

		
		
		//Движение.Колво = ТекСтрокаТовар.КоличествоФакт;
		Движение.СуммаЗакупСНДС = ТекСтрокаТовар.СуммаЗакуп;
		Движение.СуммаНДСЗакуп = ТекСтрокаТовар.НДСЗакуп;
		Движение.СуммаРознСНДС = ТекСтрокаТовар.СуммаРозн;
		Движение.СуммаРознНДС = ТекСтрокаТовар.НДСРозн;
	КонецЦикла;
	// записываем движения регистров
	//Движения.ОстаткиПоСтНДСПоСкладам.Записать();
	
	//---------------<Теперь вы можете приобрести/получить взад  товар со скидкой!>---------------------------// GtG // 28.05.2013 12:08:18
	// Это позволяет избавиться от переоценки перед вертанием взад товара полученного не от того поставщика которому ввертывают в зад товар.
	Для Каждого ТекСтрокаТовар Из Товар Цикл
		Если ТекСтрокаТовар.СуммаСкидки=0 тогда
			Продолжить;
		КонецЕсли;	
		
			ДвижениеДиск = Движения.ДисконтПоПартиям.Добавить();
			// оборотный ДвижениеДиск.ВидДвижения=ТипДвижения; //ВидДвиженияНакопления.Приход;
			ДвижениеДиск.Период = Дата;
			ДвижениеДиск.Товар = ТекСтрокаТовар.Товар;
			ДвижениеДиск.Склад = Склад;
			ДвижениеДиск.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
			ДвижениеДиск.Партия = ТекСтрокаТовар.Партия ;
			ДвижениеДиск.Фирма= Склад.Фирма;
//			ДвижениеДиск.ВидОперации=Перечисления.ВидыОпераций.РеализацияОпт;
			ДвижениеДиск.НомерДК="Скидка мелкий опт/возврат";

			ДвижениеДиск.Колво = ТекСтрокаТовар.КоличествоФакт*ТекСтрокаТовар.Коэфф;
			ДвижениеДиск.СуммаСоСкидкой=ТекСтрокаТовар.СуммаСоСкидкой;
			ДвижениеДиск.СуммаСкидки=ТекСтрокаТовар.СуммаСкидки;
	КонецЦикла;

	       
		   
 
    
  КонецПроцедуры
  //============================================================================ GtG ===
  

  Процедура ДвижениеПродажПоТипамДляЦО() Экспорт
	 тхт="ВЫБРАТЬ
	     |	РеализацияОптомТовар.Товар.ТипДляЦО КАК ТоварТипДляЦО,
	     |	СУММА(РеализацияОптомТовар.СуммаРозн) КАК СуммаСоСкидкой,
	     |	СУММА(РеализацияОптомТовар.СуммаЗакуп) КАК СуммаЗакуп,
	     |	СУММА(0) КАК Скидка
	     |ИЗ
	     |	Документ.РеализацияОптом.Товар КАК РеализацияОптомТовар
	     |ГДЕ
	     |	РеализацияОптомТовар.Ссылка = &Ссылка
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	РеализацияОптомТовар.Товар.ТипДляЦО" ;
		 
		 
		 
		 //-------------------- Запрос by GtG -----------------------
		 // Назначение: Выборка из табличных частей документа для записи в регистр
		 //----------------------------------------------------------
		 
		 Запрос=Новый Запрос;
		 Запрос.Текст=ТХТ;
		 
		 Запрос.Параметры.Вставить("Ссылка", ЭтотОбъект.Ссылка);
		 
		 ТЗ=Запрос.Выполнить().Выгрузить();
		 
		 Для каждого  Стр Из ТЗ  Цикл
		 	Движение=Движения.ПродажиПоТипамДляЦО.Добавить();
			
			Движение.Активность=Истина;
			Движение.Период=Дата;
			Движение.Регистратор= ЭтотОбъект.Ссылка;
			Движение.Склад=Склад;
			Движение.СуммаЗакупочная=Стр.СуммаЗакуп;
			Движение.СуммаПродажСоСкидкой= Стр.СуммаСоСкидкой;
			Движение.СуммаСкидки=стр.Скидка;
			Движение.ТипДляЦО=Стр.ТоварТипДляЦО;
		 КонецЦикла; 
		 
		//Движения.ПродажиПоТипамДляЦО.Записать(); 
КонецПроцедуры  

  


Процедура ОбработкаПроведения(Отказ, Режим)
		
	#Если Клиент Тогда
	ОчиститьСообщения(); 
	#КонецЕсли
	
	Если ПроверитьОстатки() = Ложь Тогда
		Сообщить("Документ не проведен! Не хватает остатков");
		Отказ = ИСТИНА;
		ВОЗВРАТ ;	
	КонецЕсли;	
	
	//============================< Проверка на коэфф=0  >================================GtG===
	Если ПроверкаНаНули("Коэфф")=Ложь Тогда
		// Есть строки с 0-ми коэффициентами
		Сообщить("В документе есть строки с коэффициентами =0!
		|Это недопустимо!
		|Очевидно проблемы с единицами товаров.");
		Отказ = ИСТИНА;
		ВОЗВРАТ ;
	КонецЕсли;
	
	Если ПроверкаНаНули("ЦенаЗакуп")=Ложь Тогда
		// Есть строки с 0-ми
		Сообщить("В документе есть строки без закуп. цены!
		|Это недопустимо!
		|Укажите цену закупочную!");
		Отказ = ИСТИНА;
		ВОЗВРАТ ;
	КонецЕсли;

	
		
	//----------------------------< по складу отправителю >--------------------------------GtG---
	// расход из регистров: ОстаткиТовараПоСкладам
	//                    	ПартииЖНВЛС
	//                    	ОстаткиПоСтНДСПоСкладам
    ПриходРасходПоРегистрам  (ВидДвиженияНакопления.Расход);                    
	//-------------------------------------------------------------------------------------------
	#Если Клиент Тогда
	ОМ15_ОчисткаРезерваДокумента  (ЭтотОбъект.Ссылка );// должна быть во всех документах, которые касаются резерва количества товара
	#КонецЕсли
	ДвижениеПродажПоТипамДляЦО();
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Для Каждого Стр Из Товар Цикл
		Стр.СуммаСоСкидкой=Стр.СуммаРозн-Стр.СуммаСкидки;
		Стр.НДСРознСоСкидкой=?(Стр.СуммаСкидки=0, Стр.НДСРозн, Окр(Стр.СуммаСоСкидкой/(100+стр.СтавкаНДС.Ставка)*стр.СтавкаНДС.Ставка,2));
	КонецЦикла;	
	
	
	
	СуммаСкидки=Товар.Итог("СуммаСкидки");
	СуммаСоСкидкой=Товар.Итог("СуммаСоСкидкой");  
	
	
	ЗаписатьДействияВИсториюДокумента(Изменения,РежимЗаписи,ПометкаУдаления);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	//ТСО {25.03.2015 #0020
	КодПокупателя = ЭтотОбъект.Покупатель.Код;
	Если КодПокупателя = 582 Или КодПокупателя = 3055 Тогда
		НаборЗаписей = РегистрыСведений.СформированныеПечатныеФормы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(ЭтотОбъект.Ссылка);
		
		НоваяЗапись = НаборЗаписей.Добавить();	
		НоваяЗапись.Документ		= ЭтотОбъект.Ссылка;
		НоваяЗапись.Сформировать	= Истина;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;
	//ТСО }
	
КонецПроцедуры
