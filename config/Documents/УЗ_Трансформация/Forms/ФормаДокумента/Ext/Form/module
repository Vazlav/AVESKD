Перем пер_Отказано;

Функция ПолучитьМатрицуОкруглений()
	
	Запрос=Новый Запрос;

	Запрос.Текст = "ВЫБРАТЬ
             |	МатрицаОкруглений.Цена1,
             |	МатрицаОкруглений.Цена2,
             |	МатрицаОкруглений.ПроцентОтклоненияВверх,
             |	МатрицаОкруглений.ПроцентОтклоненияВниз,
             |	МатрицаОкруглений.СпособОкругления,
             |	МатрицаОкруглений.МетодОкругления,
             |	МатрицаОкруглений.ИспользоватьДляЖВ
             |ИЗ
             |	Справочник.МатрицаОкруглений КАК МатрицаОкруглений";
			 
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПоказатьИсторию()
	
	ИсторияИзменений.Очистить();
	
	ТЗИстории = ОбщегоНазначения.ПолучитьИсториюИзмененийДокумента(Ссылка);
	Если НЕ ТЗИстории = Неопределено Тогда
		ЭлементыФормы.ИсторияИзменений.Значение = ТЗИстории;
	КонецЕсли;
	
КонецПроцедуры

Процедура КорректировкаЦеныПоСтроке(стр)
	
	
	Партия = Справочники.УЗ_Партии.НайтиПоКоду(стр.КодПартии);
	
	Если стр.КоэффициентРазбивкиНовый > 1 Тогда
		стр.ЦенаИндивидуальнаяНовая = Окр(стр.ЦенаИндивидуальнаяНовая/стр.КоэффициентРазбивкиНовый,2)*стр.КоэффициентРазбивкиНовый;
	КонецЕсли;
	
	Если стр.ЖНВЛС = Истина и Партия.ЦенаПроизводителяБезНДС > 0 Тогда	

		СубъектРФ = Склад.СубъектРФ;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СубъектыРФОграниченияПоЦенообразованию.ПредельнаяНадбавкаРозн,
		               |	СубъектыРФОграниченияПоЦенообразованию.ПредельнаяНадбавкаПККНРозн
		               |ИЗ
		               |	Справочник.СубъектыРФ.ОграниченияПоЦенообразованию КАК СубъектыРФОграниченияПоЦенообразованию
		               |ГДЕ
		               |	СубъектыРФОграниченияПоЦенообразованию.Ссылка = &СубъектРФ
		               |	И СубъектыРФОграниченияПоЦенообразованию.ЦенаПроизводителяОт < &ЦенаПроизводителя
		               |	И СубъектыРФОграниченияПоЦенообразованию.ЦенаПроизводителяДо >= &ЦенаПроизводителя";
		
		Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
		Запрос.УстановитьПараметр("ЦенаПроизводителя",Партия.ЦенаПроизводителяБезНДС);
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Предупреждение("У субъекта РФ " + СубъектРФ + " нет соответствия цены производителя и предельной наценки");
			Возврат;
		КонецЕсли;
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		Если стр.Товар.ПККН = Истина Тогда
			ПредельнаяЦена =  (стр.ЦенаЗакупБезНДС+ Партия.ЦенаПроизводителяБезНДС/100*Выборка.ПредельнаяНадбавкаПККНРозн)*(1+Партия.СтавкаНДСРозн/100);
		Иначе
			ПредельнаяЦена =  (стр.ЦенаЗакупБезНДС+ Партия.ЦенаПроизводителяБезНДС/100*Выборка.ПредельнаяНадбавкаРозн)*(1+Партия.СтавкаНДСРозн/100);
		КонецЕсли;
		ПредельнаяЦена = Цел(ПредельнаяЦена*10)/10;
		ПредельнаяЦена = Окр(ПредельнаяЦена/стр.КоэффициентРазбивкиНовый,2)*стр.КоэффициентРазбивкиНовый;
		Если стр.ЦенаИндивидуальнаяНовая > ПредельнаяЦена Тогда
			стр.ЦенаИндивидуальнаяНовая = ПредельнаяЦена;		
		КонецЕсли;
		
		
	КонецЕсли;	
	
	Если стр.ЦенаИндивидуальнаяНовая > 0 и стр.ЦенаЗакуп > 0 Тогда
		стр.ПроцентНаценкиНовый = (Стр.ЦенаИндивидуальнаяНовая/Стр.ЦенаЗакуп - 1)*100;
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура КоманднаяПанель2кнОтобратьТовары(Кнопка)
	
	
	Построитель.Параметры.Вставить("СкладКод",Склад.Код);
	Построитель.Параметры.Вставить("Склад",Склад);
	Построитель.Параметры.Вставить("ТекДата",ТекущаяДата());
	Построитель.Параметры.Вставить("СубъектРФ",Склад.СубъектРФ);
	Построитель.Параметры.Вставить("ВидФиксЦены",Склад.ВидФиксЦены.Код);
	Построитель.Выполнить();
	Товар.Загрузить(Построитель.Результат.Выгрузить());
	
	ЭлементыФормы.ПанельТЧ.ТекущаяСтраница = ЭлементыФормы.ПанельТЧ.Страницы.Товар;
	
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.ЖНВЛС = Истина тогда
		 ОформлениеСтроки.Ячейки.ЖНВЛСКартинка.ЗначениеКартинки  =БиблиотекаКартинок.Здоровье;
	КонецЕсли;	
	Если ДанныеСтроки.ЖНВЛСНовый = Истина тогда
		 ОформлениеСтроки.Ячейки.ЖНВЛСКартинкаНовая.ЗначениеКартинки  =БиблиотекаКартинок.Здоровье;
	КонецЕсли;		 
	
КонецПроцедуры

Процедура УправлениеДоступностьюФормы()
	
	Если Выгружен и Не РольДоступна("супер_АДМИНИСТРАТОР") Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнПримененияЦен.Доступность = Ложь;	
		ЭтаФорма.ТолькоПросмотр = истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УправлениеДоступностьюФормы();
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	УправлениеДоступностьюФормы();
	
КонецПроцедуры

Процедура КоманднаяПанель1кнРасценить(Кнопка)
	
	ОМ6_КоманднаяПанельКнопкаРасценить(ЭтаФорма,ЭтотОбъект,Товар);	
	
КонецПроцедуры

Процедура КоманднаяПанель1кнУдалитьНеизмененныеЦены(Кнопка)
	
	СУС=Новый Массив;
	
	ДЛя Каждого Стр Из Товар цикл
		Если Стр.ЦенаИндивидуальнаяНовая = Стр.ЦенаИндивидуальная  и стр.ЦенаИндивидуальнаяНовая > 0 и стр.ЦенаИндивидуальная > 0 Тогда
			СУС.Добавить(Стр);
		ИначеЕсли Стр.ЦенаИндивидуальнаяНовая = Стр.ЦенаОбщая  и стр.ЦенаОбщая > 0 и стр.ЦенаИндивидуальнаяНовая > 0 и Стр.ЦенаИндивидуальная = 0 Тогда
			СУС.Добавить(Стр);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого Стр Из Сус Цикл
		Товар.Удалить(Стр);
	КонецЦикла;		
	
КонецПроцедуры

Процедура КоманднаяПанель1кнУдалитьСтараяМеньшеНовой(Кнопка)
	
	
	СУС=Новый Массив;
	
	ДЛя Каждого Стр Из Товар цикл
		Если Стр.ЦенаИндивидуальнаяНовая > Стр.ЦенаИндивидуальная  и стр.ЦенаИндивидуальнаяНовая > 0 и стр.ЦенаИндивидуальная > 0 Тогда
			СУС.Добавить(Стр);		
		ИначеЕсли Стр.ЦенаИндивидуальнаяНовая > Стр.ЦенаОбщая  и стр.ЦенаОбщая > 0 и стр.ЦенаИндивидуальнаяНовая > 0 и Стр.ЦенаИндивидуальная = 0 Тогда
			СУС.Добавить(Стр);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого Стр Из Сус Цикл
		Товар.Удалить(Стр);
	КонецЦикла;		
	
КонецПроцедуры

Процедура КоманднаяПанель1кнУдалитьСтараяБольшеНовой(Кнопка)
	
	СУС=Новый Массив;
	
	ДЛя Каждого Стр Из Товар цикл
		Если Стр.ЦенаИндивидуальнаяНовая < Стр.ЦенаОбщая  и стр.ЦенаОбщая > 0 и стр.ЦенаИндивидуальнаяНовая > 0 и Стр.ЦенаИндивидуальная = 0 Тогда
			СУС.Добавить(Стр);
		ИначеЕсли Стр.ЦенаИндивидуальнаяНовая < Стр.ЦенаИндивидуальная  и стр.ЦенаИндивидуальнаяНовая > 0 и стр.ЦенаИндивидуальная > 0 Тогда
			СУС.Добавить(Стр);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого Стр Из Сус Цикл
		Товар.Удалить(Стр);
	КонецЦикла;		
	
КонецПроцедуры

Процедура КоманднаяПанель1кнУдалитьЦенаНоваяРавнаНулю(Кнопка)
	
	СУС=Новый Массив;
	
	ДЛя Каждого Стр Из Товар цикл
		Если Стр.ЦенаИндивидуальнаяНовая = 0 Тогда
			СУС.Добавить(Стр);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого Стр Из Сус Цикл
		Товар.Удалить(Стр);
	КонецЦикла;		
	
КонецПроцедуры

Процедура КоманднаяПанель1ПоказатьПрогноз(Кнопка)
	
	СуммаСтарая = 0;
	СуммаНовая = 0;
	СуммаЗакуп = 0;
	Дельта = 0;
	Для Каждого Стр Из Товар Цикл
		  СуммаСтарая= СуммаСтарая + ?(Стр.ЦенаИндивидуальная>0,Стр.ЦенаИндивидуальная,Стр.ЦенаОбщая)*Стр.Количество/стр.КоэффициентРазбивки*стр.Коэфф;
		  СуммаНовая= СуммаНовая + ?(Стр.ЦенаИндивидуальнаяНовая>0,Стр.ЦенаИндивидуальнаяНовая,Стр.ЦенаОбщаяНовая)*Стр.Количество/стр.КоэффициентРазбивки*стр.Коэфф;

          СуммаЗакуп = СуммаЗакуп + (стр.ЦенаЗакуп*Стр.Количество/стр.КоэффициентРазбивки*стр.Коэфф);
	КонецЦикла;	
	
	Дельта = СуммаНовая - СуммаСтарая;
	
	  
	Сообщить("ИТОГО Суммарный результат переоценки: "+ Окр(Дельта,2));
	Сообщить("Сумма новая : " + СуммаНовая);
	Сообщить("Сумма старая: " + СуммаСтарая);
	Сообщить("Сумма закуп : " + СуммаЗакуп);
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнПримененияЦен(Кнопка)
	
	Записать(РежимЗаписиДокумента.Запись);
	Результат = ВыгрузитьВАптеку();	
	УправлениеДоступностьюФормы();
	//Если Результат = Истина Тогда
	//	Записать(РежимЗаписиДокумента.Проведение);	
	//КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнАннулироватьДокумент(Кнопка)
	
	ПредыдущийСтатус = СтатусТрансформации;
	
	Если Проведен или СтатусТрансформации = Перечисления.СтатусыПереоценки.Выгружен или СтатусТрансформации = Перечисления.СтатусыПереоценки.Завершен Тогда
		Предупреждение("Документ не может быть аннулирован в проведенном состоянии , в статусах <выгружен> или <завершен>");
		Возврат;
	КонецЕсли;
	
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Аннулировать документ?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		Если ПустаяСтрока(Комментарий) Тогда
			Предупреждение("Не указана причина аннулирования документа в комментарии. Выполнение не может быть продолжено!");	
			Возврат;
		КонецЕсли;
		
		ДокументАннулирован = Ложь;
		Попытка
			НачатьТранзакцию();
			СтатусТрансформации = Перечисления.СтатусыПереоценки.Аннулирован;
			
			Записать(РежимЗаписиДокумента.Запись);
			ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Аннулирование",ПараметрыСеанса.ТекущийСотр,"Аннулирование офисом");
			Если ВыгрузитьВАптеку() = Истина Тогда
				ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Выгружен в аптеку",ПараметрыСеанса.ТекущийСотр,"Выгружено изменение статуса в аптеку");
				ДокументАннулирован = Истина;
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			СтатусСписания = ПредыдущийСтатус;
			Сообщить("Ошибка аннулирования" + ОписаниеОшибки());
		КонецПопытки;
		Если ДокументАннулирован Тогда
			Предупреждение("Документ аннулирован!",10);
			ЭтаФорма.Закрыть();
		Иначе
			Предупреждение("Аннулирование документа не произошло!",10);	
			ЭтаФорма.Закрыть();
		КонецЕсли;
	
	
КонецПроцедуры

Процедура ПанельШапкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элемент.ТекущаяСтраница = Элемент.Страницы.История Тогда
		ПоказатьИсторию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ТоварЦенаИндивидуальнаяНоваяПриИзменении(Элемент)
	
	КорректировкаЦеныПоСтроке(ЭлементыФормы.Товар.ТекущаяСтрока);
	
КонецПроцедуры

Процедура Кнопка2Нажатие(Элемент)
	
	ТЗМатрицаОкруглений = ПолучитьМатрицуОкруглений();

	Для каждого стр из Товар Цикл
		стр.ЦенаИндивидуальнаяНовая = Окр(стр.ЦенаЗакуп+стр.ЦенаЗакуп/100*ПроцентНаценкиОтЗакупки,2);
		
		Для каждого строкаМО из ТЗМатрицаОкруглений Цикл
			Если (стр.ЦенаИндивидуальнаяНовая >= строкаМО.Цена1 и стр.ЦенаИндивидуальнаяНовая <=строкаМО.Цена2 ) и стр.ЖНВЛС = строкаМо.ИспользоватьДляЖВ Тогда
				стр.ЦенаИндивидуальнаяНовая = Округлить(стр.ЦенаИндивидуальнаяНовая,строкаМО.СпособОкругления,строкаМО.МетодОкругления);
				Прервать;	
			КонецЕсли;
		КонецЦикла;		
		
		КорректировкаЦеныПоСтроке(стр);
		
		Если стр.ЦенаИндивидуальнаяНовая > 0 и стр.ЦенаЗакуп > 0 Тогда
			стр.ПроцентНаценкиНовый = (Стр.ЦенаИндивидуальнаяНовая/Стр.ЦенаЗакуп - 1)*100;
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

Процедура кнУвеличитьнаценкуОтСтаройЦеныНажатие(Элемент)
	
	ТЗМатрицаОкруглений = ПолучитьМатрицуОкруглений();

	Для каждого стр из Товар Цикл
		Если стр.ЦенаИндивидуальная > 0 Тогда
			стр.ЦенаИндивидуальнаяНовая = Окр(стр.ЦенаИндивидуальная+стр.ЦенаИндивидуальная/100*ПроцентНаценкиОтСтаройРозницы,1);
		ИначеЕсли стр.ЦенаОбщая > 0 Тогда
			стр.ЦенаИндивидуальнаяНовая = Окр(стр.ЦенаОбщая+стр.ЦенаИндивидуальная/100*ПроцентНаценкиОтСтаройРозницы,1);
		Иначе
			Продолжить;
		КонецЕсли;
		
		
		
		Для каждого строкаМО из ТЗМатрицаОкруглений Цикл
			Если (стр.ЦенаИндивидуальнаяНовая >= строкаМО.Цена1 и стр.ЦенаИндивидуальнаяНовая <=строкаМО.Цена2 ) и стр.ЖНВЛС = строкаМо.ИспользоватьДляЖВ Тогда
				стр.ЦенаИндивидуальнаяНовая = Округлить(стр.ЦенаИндивидуальнаяНовая,строкаМО.СпособОкругления,строкаМО.МетодОкругления);
				Прервать;	
			КонецЕсли;
		КонецЦикла;		
		
		КорректировкаЦеныПоСтроке(стр);
		
		Если стр.ЦенаИндивидуальнаяНовая > 0 и стр.ЦенаЗакуп > 0 Тогда
			стр.ПроцентНаценкиНовый = (Стр.ЦенаИндивидуальнаяНовая/Стр.ЦенаЗакуп - 1)*100;
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура СкладПриИзменении(Элемент)
	
	Если Элемент.Значение.Фирма <> Фирма Тогда
		Фирма = Элемент.Значение.Фирма;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПересчетСтрокиДокумента  (ТекСтрД, ИмяКол,БезВопросов= ЛОЖЬ)
	
	Если ИмяКол = "Отказано" Тогда
		ТекСтрД.Количество				= ТекСтрД.Количество + пер_Отказано - ТекСтрД.Отказано;
	ИначеЕсли ИмяКол = "КоэффициентРазбивкиНовый" Или ИмяКол = "КоличествоНовый" или ИмяКол = "ТоварНовый" Тогда
		СуммаЗакупБезНДС = (ТекСтрД.ЦенаЗакупБезНДС*ТекСтрД.Количество*ТекСтрД.Коэфф/ТекСтрД.КоэффициентРазбивки);
		СуммаЗакупБезНДСНовая = Окр(СуммаЗакупБезНДС / ТекСтрД.КоличествоНовый,2)*ТекСтрД.КоличествоНовый;
		ТекСтрД.ЦенаЗакупБезНДСНовая = (СуммаЗакупБезНДСНовая/(ТекСтрД.КоличествоНовый*ТекСтрД.КоэффНовый))*ТекСтрД.КоэффициентРазбивкиНовый;
		ТекСтрД.СуммаОстаткаОкругления = СуммаЗакупБезНДС - СуммаЗакупБезНДСНовая;
	КонецЕсли;
	
КонецПроцедуры


Процедура ТоварПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования = Истина Тогда
		Возврат;
	КонецЕсли;

	
	ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
	 
	 
	 Если ИмяТекКол="Отказано" Тогда
		 Если ТСД.Отказано > ТСД.Количество или ТСД.Отказано < 0 Тогда
		     //Предупреждение("Коэффициент может быть равен 1 или " + Формат(ТСД.КоэффициентРазбивки,"ЧГ=0"));
		     ТСД.Отказано = пер_Отказано;
		     Отказ = Истина;
		     Возврат;
		 КонецЕсли;
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 ИначеЕсли ИмяТекКол = "КоэффициентРазбивкиНовый" Или ИмяТекКол = "КоличествоНовый" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
	 КонецЕсли; 	
	
КонецПроцедуры

Процедура ТоварПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	 ТСД=ЭлементыФормы.Товар.ТекущаяСтрока;
	 ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
	 
	 
	 Если (ИмяТекКол="Отказано") Тогда
		пер_Отказано = ТСД.Отказано;	 
	 КонецЕсли;	
	
КонецПроцедуры

Процедура ТоварПередУдалением(Элемент, Отказ)
	
	Предупреждение("Удаление строк запрещено! Для отказа позиции в списании используйте колонку <Отказано>");
	Отказ = Истина;
	
	
КонецПроцедуры

Процедура ТоварТоварНовыйПриИзменении(Элемент)
	
	ТСД = ЭлементыФормы.Товар.ТекущаяСтрока;
	ТСД.КодТовараНовый = Элемент.Значение.Код;
	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Отказать = Ложь;
	Для каждого стр из Товар Цикл
		Если (стр.ЦенаЗакупБезНДСНовая/стр.КоэффициентРазбивкиНовый)*100 <> Цел((стр.ЦенаЗакупБезНДСНовая/стр.КоэффициентРазбивкиНовый)*100) Тогда	
			Сообщить("По строке - " + стр.НомерСтроки + " ЦенаЗакупБезНДСНовая должна быть кратной коэффициенту разбивки.");	
			Отказать = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Отказать Тогда
		Сообщить("Документ не может быть выгружен в аптеку!");	
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры


Построитель.Текст = "ВЫБРАТЬ
                    |	АП.Код,
                    |	АП.Ссылка КАК Товар,
                    |	АП.Наименование,
                    |	АП.ЖНВЛС,
                    |	ЕСТЬNULL(ФЦ.Цена, 0) КАК ФиксЦена,
                    |	МАКСИМУМ(ЕСТЬNULL(СЦ.Ссылка.СпециальнаяЦена, 0)) КАК СпецЦена
                    |ПОМЕСТИТЬ ВтТовары
                    |ИЗ
                    |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксЦены.СрезПоследних(,ВидФиксЦены = &ВидФиксЦены) КАК ФЦ
                    |		ПО (ФЦ.КодТовара = АП.Код)
                    |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпециальныеЦены.Аптеки КАК СЦ
                    |		ПО (СЦ.Аптека = &Склад)
                    |			И АП.Ссылка = СЦ.Ссылка.Товар
                    |			И (&ТекДата МЕЖДУ СЦ.Ссылка.НачПериода И СЦ.Ссылка.КонПериода)
                    |{ГДЕ
                    |	АП.Ссылка.* КАК Товар,
                    |	(ЕСТЬNULL(ФЦ.Цена, 0)) КАК ФиксЦена,
                    |	(ЕСТЬNULL(СЦ.Ссылка.СпециальнаяЦена, 0)) КАК СпецЦена}
                    |
                    |СГРУППИРОВАТЬ ПО
                    |	АП.Ссылка,
                    |	ЕСТЬNULL(ФЦ.Цена, 0),
                    |	АП.Код,
                    |	АП.Наименование,
                    |	АП.ЖНВЛС
                    |
                    |ИНДЕКСИРОВАТЬ ПО
                    |	АП.Код
                    |;
                    |
                    |////////////////////////////////////////////////////////////////////////////////
                    |ВЫБРАТЬ
                    |	Остатки.ТоварКод КАК КодТовара,
                    |	Остатки.ПартияКод КАК КодПартии,
                    |	Остатки.КоличествоОстаток,
                    |	Остатки.СуммаЗакупБезНДСОстаток,
                    |	ЕСТЬNULL(РЦ.Цена, 0) КАК ЦенаОбщая,
                    |	ЕСТЬNULL(РЦП.Цена, 0) КАК ЦенаИндивидуальная,
                    |	ЕСТЬNULL(РЦП.Уценка, ЛОЖЬ) КАК Уценка,
                    |	ЕСТЬNULL(РЦП.ДатаУстановки, ЕСТЬNULL(РЦ.ДатаУстановки, ДАТАВРЕМЯ(1, 1, 1))) КАК ПредыдущаяДатаУстановкиЦены,
                    |	ЕСТЬNULL(РЦП.Документ, РЦ.Документ) КАК Документ,
                    |	ВтТовары.Наименование КАК Наименование,
                    |	ВтТовары.Товар,
                    |	Партии.СрокГодности,
                    |	Остатки.КоличествоОстаток КАК Количество,
                    |	Партии.ЦенаЗакупБезНДСРасчет КАК ЦенаЗакупБезНДС,
                    |	1 КАК Коэфф,
                    |	Партии.К КАК КоэффициентРазбивки,
                    |	ВтТовары.ЖНВЛС,
                    |	Партии.СтавкаНДСРозн КАК СтавкаНДС,
                    |	Партии.ЦенаЗакуп,
                    |	ВЫБОР
                    |		КОГДА Партии.ЦенаЗакуп > 0
                    |			ТОГДА (ЕСТЬNULL(РЦП.Цена, ЕСТЬNULL(РЦ.Цена, 0)) / Партии.ЦенаЗакуп - 1) * 100
                    |		ИНАЧЕ 0
                    |	КОНЕЦ КАК ПроцентНаценкиСтарый,
                    |	ВтТовары.СпецЦена
                    |ИЗ
                    |	РегистрНакопления.УЗ_Партии.Остатки(, СкладКод = &СкладКод) КАК Остатки
                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
                    |		ПО Остатки.ПартияКод = Партии.Код
                    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТовары КАК ВтТовары
                    |		ПО Остатки.ТоварКод = ВтТовары.Код
                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦены КАК РЦ
                    |		ПО Остатки.ТоварКод = РЦ.ТоварКод
                    |			И (РЦ.АптекаКод = &СкладКод)
                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦеныПоПартиям КАК РЦП
                    |		ПО Остатки.ПартияКод = РЦП.ПартияКод
                    |			И Остатки.ТоварКод = РЦП.ТоварКод
                    |			И (РЦП.АптекаКод = &СкладКод)
                    |{ГДЕ
                    |	(ЕСТЬNULL(РЦП.Цена, ЕСТЬNULL(РЦ.Цена, 0))) КАК ЦенаРозн,
                    |	Партии.СрокГодности,
                    |	Партии.ПартияРодительКод,
                    |	Партии.ДатаПоступления,
                    |	(ЕСТЬNULL(РЦП.ДатаУстановки, ЕСТЬNULL(РЦ.ДатаУстановки, ДАТАВРЕМЯ(1, 1, 1)))) КАК ПоследняяДатаУстановкиЦены,
                    |	Партии.ПоставщикИсходный,
                    |	(ВЫБОР
                    |			КОГДА Партии.ЦенаЗакуп > 0
                    |				ТОГДА (ЕСТЬNULL(РЦП.Цена, ЕСТЬNULL(РЦ.Цена, 0)) / Партии.ЦенаЗакуп - 1) * 100
                    |			ИНАЧЕ 0
                    |		КОНЕЦ) КАК ПроцентНаценкиСтарый}
                    |
                    |УПОРЯДОЧИТЬ ПО
                    |	Наименование";