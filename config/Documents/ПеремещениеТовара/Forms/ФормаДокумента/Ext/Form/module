

Перем КонтрольнаяСуммаШапкиИсходногоДокументаПередОткрытием ;
Перем КонтрольнаяСуммаТЧИсходногоДокументаПередОткрытием;
Перем СписокКолонокДляПересчетаПоЦене;
Перем СписокКолонокПересчетаЦенСуммНаценок;
Перем СписокКолонокПересчетаПроцентовНаценок;
Перем СписокКолонокПересчетаЦЕН;
Перем СтараяВалюта;
Перем ТЗСвНДС;

//============================================================================ GtG ===
Процедура ЛейблДокумента  () 
    // Назначение:
	// Устанавливает лейбл документа в зависимости от статуса
	// 
    // 
	//--------------------------------------------------------------------------------
	
	Если Статус=Перечисления.СтатусПеремещения.ЗагруженСоздан или 
		Статус=Перечисления.СтатусПеремещения.ОтданНаСборку   Тогда
		ЭлементыФормы.ЛейблДокумента.Заголовок="Заказ товара №";
	ИначеЕсли Статус=Перечисления.СтатусПеремещения.Перемещен или 
		Статус=Перечисления.СтатусПеремещения.ВыгруженНаАптеку Тогда
		ЭлементыФормы.ЛейблДокумента.Заголовок="Перемещение товара №";
	КонецЕсли; 
	
     

     
 КонецПроцедуры
 //============================================================================ GtG ===
Процедура Архивация(Файл)
	//Проверяем на наличие файла (на всяк случай ), потом геть его в архив, а dbf удаляем
	ВремФайл = Новый Файл(Файл);
	Если ВремФайл.Существует() Тогда
		ИмяАрхива = ВремФайл.Путь + "" + ВремФайл.ИмяБезРасширения + ".zip";
		ФайлАрхива = Новый ЗаписьZipФайла(ИмяАрхива, , , МетодСжатияZIP.Сжатие, УровеньСжатияZIP.Максимальный); 
		ФайлАрхива.Добавить(Файл, РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно); 
		ФайлАрхива.Записать();
		УдалитьФайлы(Файл);
		//ЭлементыФормы.ЛогПоле.ДобавитьСтроку(ИмяАрхива);
	КонецЕсли;
	//Возврат Новый Файл(ИмяАрхива);
КонецПроцедуры 
//============================================================================ GtG === 
Процедура ВыгрузитьИнформациюВАптеку() 
	
	//---------------------------------------------------------
	// Выгружаем при сборке инфу по товару в аптеку, 
	// чтобы она видела при заказе товар, который к ней прийдет
	// по прошлой заявке своей
	//---------------------------------------------------------
	
	ДБФ= Новый  Xbase;
		
	ДБФ.Кодировка = КодировкаXBase.ANSI;
    ДБФ.Поля.Добавить("CODEEIT","N",10,0);
	ДБФ.Поля.Добавить("CODEIZG","N",10,0);
	ДБФ.Поля.Добавить("QNT","N",10,0);
	ДБФ.Поля.Добавить("NUMDOC","N",10,0);
	ДБФ.Поля.Добавить("CODEPOST","N",6,0);
	ДБФ.Поля.Добавить("NAMEPOST","S",100,0);
	ДБФ.Поля.Добавить("PRICEPOST","N",10,2);
	
	КонечныйФайл = СкладПолучатель.КаталогОбмена+"\dps"+СкладПолучатель.Код+"_"+Формат(Номер,"ЧГ=0")+ "_" + СокрЛП(Лев(Дата,10)) +".dbf";
	ВременныйФайл =СкладПолучатель.КаталогОбмена+"\dtstemp.dbf"; 
	ДБФ.СоздатьФайл(ВременныйФайл);
	Для каждого стр Из Товар Цикл
	
		ДБФ.Добавить();
    	ДБФ.CODEEIT		= стр.ЕИТ.Код;
		ДБФ.CODEIZG		= 0;
		ДБФ.QNT			= стр.КоличествоФакт;
		ДБФ.NUMDOC		= НомерЗаявкиАптеки;
		ДБФ.CODEPOST	= Склад.Код;
		ДБФ.NAMEPOST	= Склад.Наименование;
		ДБФ.PRICEPOST	= стр.ЦенаРознПол ;
		ДБФ.Записать();			
	КонецЦикла; 
	
	

	Если ДБФ.Открыта()  = Истина Тогда
		ДБФ.ЗакрытьФайл();
	КонецЕсли;
	
	ПереместитьФайл(ВременныйФайл,КонечныйФайл); // переименовываем в норм. вид
	Архивация(КонечныйФайл);
	Предупреждение("Потверждение выгружено: " + Лев(КонечныйФайл,СтрДлина(КонечныйФайл)-4) + ".zip",3);
	

	
КонецПроцедуры
	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//ОбновитьСверткуПоНДС  ();
	//ОМ4_ПередЗаписью(ЭтотОбъект,Товар,КонтрольнаяСуммаШапкиИсходногоДокументаПередОткрытием ,КонтрольнаяСуммаТЧИсходногоДокументаПередОткрытием);
	СтрИзм=Изменения.Добавить();
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.Изменение;
	ЭтотОбъект.СуммаДок=Товар.Итог("СуммаЗакуп");
КонецПроцедуры




//============================================================================ GtG ===
Функция ПроверкаЗаполненияКритическиВажныхЗначенийДляСтроки  (ТекСтрокаТЧ) 
    // Назначение:
	// проверяет заполнены ли поля Цена и ставка ндс
	// Возвращает истина или ложь
    // 
	//--------------------------------------------------------------------------------
	 Если ТекСтрокаТЧ.Количество=0 Тогда
		 Предупреждение("Не указано количество!");
		 Возврат Ложь;
	 КонецЕсли;
	 
	 Если ТекСтрокаТЧ.СтавкаНДС.Пустая()  Тогда
		 Предупреждение("Не указана сатвка НДС!");
		 Возврат Ложь;
	 КонецЕсли;

     

     Возврат Истина;
КонецФункции
//============================================================================ GtG ===

//============================================================================ GtG ===
Функция ТекущаяСтрокаДокумента  () 
    // Назначение:
	// Дает объект - тек строку документа
	// 
    // 
	//--------------------------------------------------------------------------------
	ТекСтрокаТЧ="";
	ИндексТекСтроки=Товар.Индекс(ЭлементыФормы.Товар.ТекущаяСтрока);
    ТекСтрокаТЧ=ТОвар.Получить( ИндексТекСтроки); // Рез. тип объекта - СтрокаТабличнойЧасти

	Возврат ТекСтрокаТЧ;
	
КонецФункции
//============================================================================ GtG ===

Процедура ОбновитьРезервПодбора()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПеремещениеТовараТовар.Товар,
	               |	ПеремещениеТовараТовар.Партия,
				   |	&Склад как Склад,
				   |	&Док как Документ,
	               |	ПеремещениеТовараТовар.КоличествоФакт как Количество
	               |ИЗ
	               |	Документ.ПеремещениеТовара.Товар КАК ПеремещениеТовараТовар
	               |ГДЕ
	               |	ПеремещениеТовараТовар.Ссылка = &Док";
				   
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Док",ЭтотОбъект.Ссылка);
	
	
	НЗ = РегистрыСведений.РезервПодбора.СоздатьНаборЗаписей();
	НЗ.Отбор.Документ.Установить(ЭтотОбъект.Ссылка);
	НЗ.Загрузить(Запрос.Выполнить().Выгрузить());
	НЗ.Записать();	
		
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Попытка
		Заблокировать();
	Исключение
		//Предупреждение("Бла-бла-бла документ уже открыт");
		ОшибкаПолная = ОписаниеОшибки();
		Ошибка = СтрПолучитьСТроку(ОшибкаПолная,2);
		Предупреждение(Ошибка);
		ЭтаФорма.ТолькоПросмотр = Истина;
	Конецпопытки;

		
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый()=Истина Тогда
		//Валюта	= Константы.ОсновнаяВалютаУчета.Получить();
		//Если Склад = Справочники.МестаХранения.ПустаяСсылка() Тогда
		//	Склад	= Константы.ОсновнойСклад.Получить();
		//КонецЕсли;
		
		Дата	= ТекущаяДата(); // Присваиваем именно дату дока к текущей дате и текущему времени
		Создан	= Дата;
				
		Статус=Перечисления.СтатусПеремещения.ЗагруженСоздан;
		
		СкладОбработкаВыбора( ЭлементыФормы.Склад , Склад, Истина);
		СкладОбработкаВыбора( ЭлементыФормы.СкладПолучатель , СкладПолучатель, Истина);
		
		НоваяСтрокаИзм = Изменения.Добавить();
		НоваяСтрокаИзм.Дата=ТекущаяДата();
		НоваяСтрокаИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		НоваяСтрокаИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;

	КонецЕсли;  
	
	Если ВидОперации = Перечисления.ВидыОпераций.ПустаяСсылка() Тогда
		ВидОперации = Перечисления.ВидыОпераций.МежскладскаяПередача;
	КонецЕсли;
	
	//СтараяВалюта=Валюта;
	
	//ОМ4_ПРиОткрытии(ЭтотОбъект,Товар,КонтрольнаяСуммаШапкиИсходногоДокументаПередОткрытием,КонтрольнаяСуммаТЧИсходногоДокументаПередОткрытием);
	
	//ОбновитьСверткуПоНДС  ();
	
	//ДоступностьРасценки(Склад);

	ОМ10_ЗаполнитьСписокПечФорм(ЭтотОбъект,СписокПечатныхФорм);
	
	ЛейблДокумента(); // как Это назвать?
	
	Если ПараметрыСеанса.ТекущийСотр.Администратор=Ложь Тогда// не админы не могут менять и пересчитывать перемещение
		//в справочнике сотрудников
		//----------------------------< Если выгружен на аптеку - не редактируется! >--------------------------------GtG---
		Если Статус=Перечисления.СтатусПеремещения.ВыгруженНаАптеку тогда
			Предупреждение("Документ выгружен на аптеку! НЕ РЕДАКТИРУЕТСЯ!",10);
			
			ЭтаФорма.ТолькоПросмотр=Истина; 
			
			//ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗаказНаСборку.Доступность=Ложь;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Перемещение.доступность=Ложь;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОткорректироватьДокумент.доступность=Ложь;
			ЭлементыФормы.ИзменитьМестаХранения.Доступность=Ложь;
			ЭлементыФормы.Отложить_заказ.Доступность = Ложь;
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыСохранить.доступность=Ложь;
		КонецЕсли; 
		
		//Если Статус = Перечисления.СтатусПеремещения.ОтданНаСборку Тогда
		//	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗаказНаСборку.Доступность=Ложь;	
		//КонецЕсли;
				
		Если ЭтотОбъект.Проведен Тогда
			ЭлементыФормы.Товар.Колонки.Количество.Доступность=Ложь;
			ЭлементыФормы.Дата.Доступность=Ложь;
		КонецЕсли;
	Иначе
		ЭлементыФормы.ВыбСтатус.Видимость = Истина;
		ЭлементыФормы.ИзменитьНаСтатус.Видимость = Истина;
	КонецЕсли; 
	
	Если СкладОптовый(СкладПолучатель) Тогда
		ЭТК = ЭлементыФормы.Товар.Колонки;
		ЭТК.НДСРознПол.Видимость= Ложь;
		ЭТК.СуммаРознПол.Видимость= Ложь;
		ЭТК.ЦенаРознПол.Видимость= Ложь;
		ЭТК.ПроцентРознНацПол.Видимость= Ложь;
	Иначе
		ЭТК = ЭлементыФормы.Товар.Колонки;
		ЭТК.НДСРознПол.Видимость= Истина;
		ЭТК.СуммаРознПол.Видимость= Истина;
		ЭТК.ЦенаРознПол.Видимость= Истина;
		ЭТК.ПроцентРознНацПол.Видимость= Истина;
	КонецЕсли;
	
	
	ЭлементыФормы.Товар.Колонки.ПроверкаШК.Видимость = РежимСканирования;
	ЭлементыФормы.Товар.Колонки.КоличествоСобранное.Видимость = РежимСканирования;
	ЭлементыФормы.Товар.Колонки.НомерКоробки.Видимость = РежимСканирования;
	//------------------<Открытие непроведенного документа>-------------------GtG----
	// очень похоже что система упала и поднялась, могут возникнуть проблемы с 
	// резервом подбора
	//--------------------------------------------------------GtG----КОНЕЦ
	Если Товар.Количество() > 0 Тогда
		ПерваяСтрока=ТОвар.Получить(0);
		Если ПерваяСтрока.Партия.Пустая()= Ложь Тогда
			//------------------<Уберем из резерва все по этому документу и заново туда пропишем>-------------------GtG----
			Если ЭтотОбъект.ЭтоНовый()=Ложь Тогда
				Если ЭтотОбъект.Проведен=Ложь Тогда
					ОбновитьРезервПодбора();
					//ОМ15_ОчисткаРезерваДокумента(ЭтотОбъект.Ссылка );// должна быть во всех документах, которые касаются резерва количества товара
					//ОМ15_ДобавитьДокументЦеликомВРезервПодбора(ЭтотОбъект.Ссылка);	 
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЭтоНовый() Тогда
		ДатаЗапрета = НастройкаПравДоступа.ВернутьДатуЗапретаРедактирования(Склад);
		Если Дата <= ДатаЗапрета Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
		КонецЕсли;	
	КонецЕсли;
	
	
КонецПроцедуры //ПриОктрытии

 
Функция НДСЗакупПравильный(ТекСтрокаТЧ)	// Назначение:
	// Проверяет на глюк
	// сумма НДС не должна отличаться на 0,хх от расчетного значения
	// допустимая погрешность ЛимитОтклоненияСуммПриПоступленииТовара от суммы НДС по 1-й штуке
	//============================================================================ GtG ===
	ПРеделПогрешности=Константы.ЛимитОтклоненияСуммПриПоступленииТовара.Получить();
	Если ПроверкаЗаполненияКритическиВажныхЗначенийДляСтроки  (ТекСтрокаТЧ)Тогда
		
		РасчетноеЗначениеНаВсюСумму=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(ТекСтрокаТЧ.СуммаЗакуп,ТекСтрокаТЧ.СтавкаНДС,2);
		РасчетноеЗначениеНаВсюСумму=Окр(РасчетноеЗначениеНаВсюСумму,2);
		РасчетноеЗначение =РасчетноеЗначениеНаВсюСумму/ТекСтрокаТЧ.КоличествоФакт;
		
		РасчетноеЗначение=Окр(РасчетноеЗначение,2);
		МаксДопПогрешность=ПРеделПогрешности/100* РасчетноеЗначение;
		
		ТекЗн          =Окр(ТекСтрокаТЧ.НДСЗакуп/ТекСтрокаТЧ.КоличествоФакт,2); // 1 Шт
		ТекЗнНаВсюСумму=ТекСтрокаТЧ.НДСЗакуп;
		
		
		Погрешность= ТекЗн-РасчетноеЗначение;
		
		Если Погрешность<0 Тогда
			Погрешность=Погрешность*(-1);
		КонецЕсли; 
//		                            -maxD         +maxD
		//----------------------------{-----Rzn-----}--------------------------------------->
//		                     *   *       ^        ^   *      *
//                           |   |       |        |   |      |

		Если  (РасчетноеЗначение+Погрешность> РасчетноеЗначение+МаксДопПогрешность) или (РасчетноеЗначение-Погрешность< РасчетноеЗначение-МаксДопПогрешность)Тогда
			Предупреждение("Странная сумма НДС закуп.!
							|Расчетное значение НДС на всю сумму = "+РасчетноеЗначениеНаВсюСумму+"
							|Текущее значение НДС на всю сумму = "+ТекЗнНаВсюСумму+"
							|
							|Расчетное значение НДС на 1шт       = "+РасчетноеЗначение+"
							|Текущее значение НДС на 1шт       = "+ТекЗн+"
							|
							|Разница в НДС за 1шт. более допустимой: 
							| "+Погрешность+"  >  ("+ПРеделПогрешности+"% * "+РасчетноеЗначение+") = " +Окр(МаксДопПогрешность,5));
			Возврат	ЛОЖЬ;// Нужно пересчитать						
		Иначе
			ВОЗВРАТ ИСТИНА ; // ОК
		КонецЕсли; 
	КонецЕсли; 	
	ВОЗВРАТ ИСТИНА; // по умолчанию все ОК
 КонецФункции 

 




 Процедура ТоварПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	 
	 	 
	 ТСД=ТекущаяСтрокаДокумента();
	 ИмяТекКол=Элемент.ТекущаяКолонка.Имя;
	 
	 Если (ТСД.Партия = Справочники.Партии.ПустаяСсылка()) 
		 или (Статус = Перечисления.СтатусПеремещения.Отложен) Тогда
		 Возврат;
	 КонецЕсли;
	 
	 //Сообщить(ИмяТекКол);
	 
	 

	 
	 
	 Если ИмяТекКол="Количество" Тогда
		 // Назначение:
		 // При изменении количества пересчитываем ВСЕ колонки по строке документа
		 // Если сумма и НДС закуп меняется кричим об этом
		 // 
		 //============================================================================ GtG ===
		 //Отказ= ИСТИНА ;
		 ТСД.КоличествоФакт=ТСД.Количество;
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол); // пересчет при условии изменения количества
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="КоличествоФакт" Тогда
		 // Назначение:
		 // При изменении количества пересчитываем ВСЕ колонки по строке документа
		 // Если сумма и НДС закуп меняется кричим об этом
		 // 
		 //============================================================================ GtG ===
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол); // пересчет при условии изменения количества
		 
		 Если РежимСканирования=Истина Тогда
			 ТСД.ПроверкаШК=Истина;
			 ЭлементыФормы.Товар.РежимВыделенияСтроки=РежимВыделенияСтрокиТабличногоПоля.Ячейка; //для того, чтобы не маячило
			 ЭлементыФормы.Товар.Колонки.КоличествоФакт.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
		 КонецЕсли;
		 
		 ВОЗВРАТ ;
	 КонецЕсли; 

	 
	 Если ИмяТекКол="ЦенаРознПол" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 Если ИмяТекКол="ПроцентРознНацПол" Тогда
		 ПересчетСтрокиДокумента  (ТСД, ИмяТекКол);
		 ВОЗВРАТ ;
	 КонецЕсли; 
	 
	 //============================< Резервные затычки >================================GtG===

	 Если ИмяТекКол="" Тогда
		 ВОЗВРАТ ;
	 КонецЕсли; 
КонецПроцедуры


Процедура ПодборПоАПНажатие(Элемент)
	// Назначение:
	// Запускает процесс подбора по справочнику АП
	// Открывает форму для подбора АП
	// 
	//============================================================================ GtG ===
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!");
		ВОЗВРАТ ;
	КонецЕсли; 
	
	Если СкладПолучатель.Пустая() Тогда
		Предупреждение("Не выбран склад-получатель!");
		ВОЗВРАТ ;
	КонецЕсли;	
	
	Если  ЭтотОбъект.ЭтоНовый() ТОгда
		 ЭтотОбъект.Записать();
	КонецЕсли;	 
	
	
	КлючУник=  Новый   УникальныйИдентификатор();
	ФормаПодбора= ПолучитьОбщуюФорму("ОбщФормаПодборПоОстаткамСклада",ЭтаФорма,КлючУник);	
	ФормаПодбора.МножественныйВыбор= ИСТИНА;
	ФормаПодбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаПодбора.Открыть();
КонецПроцедуры



//============================================================================ GtG ===
Процедура ДобавитьТоварКолво  (СтрТЗ) 
    // Назначение:
	// Добавляет строку товара в документ
	// выполняет расчет числовых полей
    // выдергивает из регистра информации Цены последние цены на товар 
	// в разрезе АП по не жнвлс и по партии для ЖНВЛС
	//--------------------------------------------------------------------------------
	
	ВыбТовар	=СтрТЗ.ТОвар;
	ВыбПартия	=СтрТЗ.Партия;
	ВыбКолво	=СтрТЗ.Колво;
	ВыбСерия    =СтрТЗ.Серия;
	
	ПарамПоиска = Новый  Структура;
	ПарамПоиска.Вставить("Товар",ВыбТовар);
	ПарамПоиска.Вставить("ЕИТ",СтрТЗ.Ед);
    ПарамПоиска.Вставить("Партия",СтрТЗ.Партия);
	ПарамПоиска.Вставить("Серия",СтрТЗ.Серия);
	
	
	МассивНайденныхСтрок= Товар.НайтиСтроки(ПарамПоиска);
	
	Если МассивНайденныхСтрок.Количество()=0 Тогда
		
		
		//----------------------------< Добавляем только при добавлении КоэффДобавления=1  >--------------------------------GtG---
		НоваяСтрокаВыбТовара=Товар.Добавить();
		НоваяСтрокаВыбТовара.Товар=ВыбТовар;
		НоваяСтрокаВыбТовара.Количество=ВыбКолво;
		НоваяСтрокаВыбТовара.КоличествоФакт=ВыбКолво;
		НоваяСтрокаВыбТовара.СтавкаНДС=СтрТЗ.СтавкаНДС;

		
		//-----------------< единица  >----------------GtG---
		НоваяСтрокаВыбТовара.ЕИТ=СтрТЗ.Ед;			
		НоваяСтрокаВыбТовара.Коэфф=НоваяСтрокаВыбТовара.ЕИТ.К;
		
		
		//----------------------------< партия >--------------------------------GtG---
		НоваяСтрокаВыбТовара.Партия=ВыбПартия;
		
		Если НоваяСтрокаВыбТовара.Партия<>Справочники.Партии.ПустаяСсылка() Тогда
			НоваяСтрокаВыбТовара.Серия= НоваяСтрокаВыбТовара.Партия.Серия;
			НоваяСтрокаВыбТовара.Сертификат= НоваяСтрокаВыбТовара.Партия.Серия.Сертификат;
		Иначе	
			//----------------------------< Серия >--------------------------------GtG---
			НоваяСтрокаВыбТовара.Серия=ВыбСерия;
			НоваяСтрокаВыбТовара.Сертификат= ВыбСерия.Сертификат;
		КонецЕсли;
		
		НоваяСтрокаВыбТовара.Баркод= НоваяСтрокаВыбТовара.Партия.Баркод;
		
		
		
		
		//----------------------------< Цены , суммы , НДСы >--------------------------------GtG---
		НоваяСтрокаВыбТовара.НДСЗакуп	= СтрТЗ.НДСЗакуп;
		НоваяСтрокаВыбТовара.НДСРозн 	= СтрТЗ.НДСРозн;
		НоваяСтрокаВыбТовара.СуммаЗакуп = СтрТЗ.СуммаЗакуп;
		НоваяСтрокаВыбТовара.СуммаРозн 	= СтрТЗ.СуммаРозн;
		НоваяСтрокаВыбТовара.ЦенаЗакуп 	= СтрТЗ.СуммаЗакуп/ВыбКолво;
		НоваяСтрокаВыбТовара.ЦенаРозн 	= СтрТЗ.СуммаРозн/ВыбКолво;
		
		//----------------------------< Наценка >--------------------------------GtG---
		НоваяСтрокаВыбТовара.ПроцентРознНац= 100*(СтрТЗ.СуммаРозн-СтрТЗ.СуммаЗакуп)/СтрТЗ.СуммаЗакуп;
		
		//============================< Цепляем розничную цену из регистра сведений ЦЕНЫ >================================GtG===
		//Если 
		
		ТХТ= "ВЫБРАТЬ
		     |	ЦеныСрезПоследних.ЦенаРознГТТ
		     |ИЗ
		     |	РегистрСведений.Цены.СрезПоследних КАК ЦеныСрезПоследних
		     |ГДЕ
		     |	ЦеныСрезПоследних.АП.Ссылка = &Ссылка
		     |	И ЦеныСрезПоследних.Активность = ИСТИНА
		     |	И ЦеныСрезПоследних.РЕГИОН = &Регион
		     |	И ЦеныСрезПоследних.Партия = &Партия
		     |
		     |СГРУППИРОВАТЬ ПО
		     |	ЦеныСрезПоследних.ЦенаРознГТТ";
		
		
		/// ЦЕНА НА 1 ИДЕАЛЬНУЮ  СФЕРИЧЕСКУЮ ЕДИНИЦУ с К=1!!!
		
		Запрос= Новый  Запрос;
		Запрос.УстановитьПараметр( "Ссылка",ВыбТовар);
		Запрос.УстановитьПараметр( "Регион",СкладПолучатель.Регион);
		Запрос.УстановитьПараметр( "Партия",ВыбПартия);
		Запрос.Текст=тхт;
		Рез= Запрос.Выполнить();
		ТЗ=Рез.Выгрузить();
		
		Если ТЗ.Количество()=0 Тогда
			Сообщить("У товара "+ВыбТОвар+" нет розничной цены!");
		Иначе
			Если ТЗ.Количество()>1 Тогда
				Сообщить("У товара "+ВыбТОвар+" "+ТЗ.Количество()+"  розничных цен!") ;
			КонецЕсли;
			СтрЦен=ТЗ.Получить(0);
			НоваяСтрокаВыбТовара.ЦенаРознПол=СтрЦен.ЦенаРознГТТ*НоваяСтрокаВыбТовара.Коэфф;
			НоваяСтрокаВыбТовара.СуммаРознПол=НоваяСтрокаВыбТовара.КоличествоФакт*НоваяСтрокаВыбТовара.ЦенаРознПол;
			НоваяСтрокаВыбТовара.НДСРознПол=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(НоваяСтрокаВыбТовара.СуммаРознПол,НоваяСтрокаВыбТовара.СтавкаНДС,2);
	     КонецЕсли;	
		
		
		
	Иначе   // только при совпадении единиц измерения , серии и партии
		
		СтрокаВТ=МассивНайденныхСтрок[0];
		СтрокаВТ.КоличествоФакт=СтрокаВТ.КоличествоФакт+ВыбКолво;
		
		
		СтрокаВТ.НДСЗакуп	= СтрокаВТ.НДСЗакуп+ СтрТЗ.НДСЗакуп;
		СтрокаВТ.НДСРозн 	= СтрокаВТ.НДСРозн + СтрТЗ.НДСРозн;
		СтрокаВТ.СуммаЗакуп = СтрокаВТ.СуммаЗакуп + СтрТЗ.СуммаЗакуп;
		СтрокаВТ.СуммаРозн 	= СтрокаВТ.СуммаРозн +	СтрТЗ.СуммаРозн;
		СтрокаВТ.ЦенаЗакуп 	= СтрокаВТ.СуммаЗакуп/СтрокаВТ.КоличествоФакт;
		СтрокаВТ.ЦенаРозн 	= СтрокаВТ.СуммаРозн /СтрокаВТ.КоличествоФакт;
		
		//----------------------------< Наценка >--------------------------------GtG---
		СтрокаВТ.ПроцентРознНац= 100*(СтрокаВТ.СуммаРозн-СтрокаВТ.СуммаЗакуп)/СтрокаВТ.СуммаЗакуп;
		Если СтрокаВТ.Серия.ПУстая()=Ложь Тогда
			СтрокаВТ.БарКод=СтрокаВТ.Серия.Баркод;
		Иначе
			СтрокаВТ.БарКод=Справочники.ШКПТ.ПустаяСсылка(); // нет серии нет баркода!
		КонецЕсли; 
		
		
	КонецЕсли; 
	
	
 
 
 КонецПроцедуры
 //============================================================================ GtG ===
 



Процедура КнопкаПечатьНажатие(Элемент)
		
	ОМ10_КнопкаПечатьНажатие (ЭтотОбъект,ЭтаФорма);
	
		
КонецПроцедуры


Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	// Назначение:
	// Обрабатывает событие окончания подбора из формы подбора АП
	// На вход получает ТЗ товара
	// Циклически запускает обработку добавления и расчета строки документа
	//============================================================================ GtG ===
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда
		Для Ы=0 По ЗначениеВыбора.Количество()-1 Цикл
			
		      СтрТЗ= ЗначениеВыбора.Получить(Ы) ;
			  
			  ВыбТовар=СтрТЗ.Товар;
			  ВыбКолво=СтрТЗ.Колво;
			  
			  ДобавитьТоварКолво(СтрТЗ);
		
		КонецЦикла;
	КонецЕсли; 
КонецПроцедуры



Процедура КоманднаяПанель1Расценить(Кнопка)
	// Вставить содержимое обработчика.
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!");
		ВОЗВРАТ ;
	КонецЕсли; 
	
	Если СкладПолучатель=Справочники.МестаХранения.ПустаяСсылка() Тогда
		Предупреждение("Не выбран склад получатель!");
		ВОЗВРАТ ;
	КонецЕсли; 	

	
	Если Статус=Перечисления.СтатусПеремещения.ВыгруженНаАптеку Тогда
		Предупреждение("Документ выгружен на аптеку! Возможен расход цены менять нельзя!");
		Возврат;
	КонецЕсли; 	
	
	ОМ6_КоманднаяПанельКнопкаРасценить(ЭтаФорма,ЭтотОбъект,Товар,Ложь);

КонецПроцедуры

//Процедура ДоступностьРасценки(ВыбранноеЗначение)
//	Красц=ЭлементыФормы.КоманднаяПанель1.Кнопки.Найти("Расценить");
//	ЭФТК=ЭлементыФормы.Товар.Колонки;
//	
//	Если ВыбранноеЗначение.ТипСклада= Перечисления.ТипыМХ.Опт ТОгда
//		КРасц.Доступность=Ложь;
//		ЭФТК.ПроцентРознНац.Видимость=ложь;
//		ЭФТК.ЦенаРозн.Видимость=Ложь;
//		ЭФТК.СуммаРозн.Видимость=Ложь;
//		ЭФТК.НДСРозн.Видимость=Ложь;
//	Иначе
//		КРасц.Доступность=Истина;
//		ЭФТК.ПроцентРознНац.Видимость=Истина;
//		ЭФТК.ЦенаРозн.Видимость=Истина;
//		ЭФТК.СуммаРозн.Видимость=Истина;
//		ЭФТК.НДСРозн.Видимость=Истина;
//	КонецЕсли;	
//КонецПроцедуры	


//============================================================================ GtG ===
Процедура ПроверкаЯчеекХранения  (ВыбСклад,Отправитель=Истина) 
    // Назначение:
	// Установка ячеек хранения в соответствии с выбранным складом 
    // для всех товаров документа
	//--------------------------------------------------------------------------------
	
	//Для каждого Стч  Из Товар Цикл
	//	Если Стч.МестоНаСкладе.Владелец<>ВыбСклад Тогда
	//		Если Отправитель= истина Тогда
	//			СТЧ.МестоНаСкладе=ОМ1_ПолучитьМестоНаСкладе(СТЧ.Товар,ВыбСклад);
	//		иначе	// по получателю			
	//			СТЧ.МестоНаСкладеПол=ОМ1_ПолучитьМестоНаСкладе(СТЧ.Товар,ВыбСклад);
	//		КонецЕсли; 
	//	КонецЕсли;	 
	//КонецЦикла; 

     

     
 КонецПроцедуры
 //============================================================================ GtG ===
 
//============================================================================ GtG ===
Функция СкладОптовый  (ВыбСкладСцылка) 
    // Назначение:
	// Для сокращения кода
	// 
    // 
	//--------------------------------------------------------------------------------
	Если ВыбСкладСцылка.ТипСклада=Перечисления.ТипыМХ.Опт Тогда
		Возврат ИСТИНА;
	КонецЕсли; 	
    Возврат Ложь;
КонецФункции
//============================================================================ GtG ===


Процедура СкладОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// если выбран оптовый склад, то на нем розничные цены не учитываем
	// если поступление на розничный склад, то на нем нужно учесть и в рознице 
	// и в оптовой 
	
	
	//
	//Если  
	//		ВыбранноеЗначение.Пустая()=Ложь и 
	//		Элемент.имя="СкладПолучатель" И
	//		ВыбранноеЗначение.ТипСклада=Перечисления.ТипыМХ.Розн И
	//		ВыбранноеЗначение.ГруппаТТ.Пустая()
	//		
	//		// Короче: У ВЫБРАННОГО  розничного склада-получателя  должна быть заполнена ГТТ
	//Тогда
	//	ПРедупреждение("У выбранного розничного склада-получателя НЕТ ПРИВЯЗКИ К ГРУППЕ ТТ!");
	//	СтандартнаяОбработка=Ложь;
	//	ВыбранноеЗначение=Справочники.МестаХранения.ПустаяСсылка();
	//	Элемент.Значение=ВыбранноеЗначение;
	//	ВОЗВРАТ ;
	//КонецЕсли; 	
	
	
	
	ЭТК=ЭлементыФормы.Товар.Колонки;
	
	ВидимостьНах= ИСТИНА; // розничные колонки завсегда видны
	Если СкладОптовый(ВыбранноеЗначение) Тогда
		ВидимостьНах= ЛОЖЬ;
	КонецЕсли; 	
		
	
	//----------------------------< С оптового склада прячем розн цену исх >--------------------------------GtG---
	Если Элемент.ИмЯ="Склад" Тогда
		
		Если (ВыбранноеЗначение.Фирма <> СкладПолучатель.Фирма) и (НЕ СкладПолучатель.Пустая() = Истина) Тогда
			Предупреждение("Отправитель и получатель должны принадлежать одному юр.лицу!");
			Склад = Справочники.МестаХранения.ПустаяСсылка();
		КонецЕсли;
		
		Фирма = ВыбранноеЗначение.Фирма;
		
		//Сообщить("Херачим по складу отправителю");
		ЭлементыФормы.НомДокАптеки.Доступность = ВидимостьНах;
		ЭТК.НДСРозн.Видимость= ВидимостьНах;
		ЭТК.СуммаРозн.Видимость= ВидимостьНах;
		ЭТК.ЦенаРозн.Видимость= ВидимостьНах;
		ЭТК.ПроцентРознНац.Видимость= ВидимостьНах;
		ПроверкаЯчеекХранения  (ВыбранноеЗначение,Истина) ; // истина - по отправителю / ложь- по получателю
		Если (ВидимостьНах = Ложь)  Тогда
			ВидОперации = Перечисления.ВидыОпераций.МежскладскаяПередача;
		ИначеЕсли (ВидимостьНах = Истина) и (СкладПолучатель.ТипСклада = Перечисления.ТипыМХ.Опт) Тогда
			ВидОперации = Перечисления.ВидыОпераций.ВозвратНаСклад;
		ИначеЕсли (ВидимостьНах = Истина) и (СкладПолучатель.ТипСклада = Перечисления.ТипыМХ.Розн) Тогда 
			ВидОперации = Перечисления.ВидыОпераций.МежскладскаяПередача;
		КонецЕсли;
	КонецЕсли; //"Склад"
	
	Если Элемент.ИмЯ="СкладПолучатель" Тогда
		
		Если (Склад.Фирма <> ВыбранноеЗначение.Фирма) и (НЕ Склад.Пустая() = Истина) Тогда
			Предупреждение("Отправитель и получатель должны принадлежать одному юр.лицу!");
			ВыбранноеЗначение = Справочники.МестаХранения.ПустаяСсылка();
			Возврат;
		КонецЕсли;
		
		Фирма = ВыбранноеЗначение.Фирма;		
		//Сообщить("Херачим по складу получателю");
		ЭТК.НДСРознПол.Видимость= ВидимостьНах;
		ЭТК.СуммаРознПол.Видимость= ВидимостьНах;
		ЭТК.ЦенаРознПол.Видимость= ВидимостьНах;
		ЭТК.ПроцентРознНацПол.Видимость= ВидимостьНах;
		ПроверкаЯчеекХранения  (ВыбранноеЗначение, ЛОЖЬ ) ; // истина - по отправителю / ложь- по получателю
		Если (ВидимостьНах = Ложь) и (Склад.ТипСклада = Перечисления.ТипыМХ.Розн)  Тогда
			ВидОперации = Перечисления.ВидыОпераций.ВозвратНаСклад;
		ИначеЕсли (ВидимостьНах = Ложь) и (Склад.ТипСклада = Перечисления.ТипыМХ.Опт)  Тогда
			ВидОперации = Перечисления.ВидыОпераций.МежскладскаяПередача;
		ИначеЕсли (ВидимостьНах = Истина) и (Склад.ТипСклада = Перечисления.ТипыМХ.Опт) Тогда
			ВидОперации = Перечисления.ВидыОпераций.МежскладскаяПередача;
		ИначеЕсли (ВидимостьНах = Истина) и (Склад.ТипСклада = Перечисления.ТипыМХ.Розн) Тогда 
			ВидОперации = Перечисления.ВидыОпераций.МежскладскаяПередача;
		КонецЕсли;		
	КонецЕсли;//"СкладПолучатель" 
	
			
	//ДоступностьРасценки(ВыбранноеЗначение);

	
КонецПроцедуры



Процедура ТоварЕИТОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ТС=ЭлементыФормы.ТОвар.ТекущаяСтрока;
	ТС.Коэфф= ВыбранноеЗначение.К;
	
	//Сообщить("");
	//Сообщить("Предыдущее значение ЕИТ="+ТС.ЕИТ+" новое "+ ВыбранноеЗначение);
	//
	//Сообщить("0002) Сюда вставить пересчет цены и всего остального по коэфф единицы , исходим из той цены и единицы что была до изменения");
	//----------------------------< Пересчет цен >--------------------------------GtG---
	ТС.ЦенаЗакуп 	= ТС.ЦенаЗакуп/ТС.ЕИТ.К*ВыбранноеЗначение.К;
	ТС.ЦенаРозн  	= ТС.ЦенаРозн/ТС.ЕИТ.К*ВыбранноеЗначение.К;
	ТС.ЦенаРознПол	= ТС.ЦенаРознПол/ТС.ЕИТ.К*ВыбранноеЗначение.К;
	
	ПересчетСтрокиДокумента  (ТС,"КоличествоФакт");
	
КонецПроцедуры


Процедура ТоварПередНачаломДобавления(Элемент, Отказ, Копирование)
	// Запрещено добавлять стандартным образом
	ПодборПоАПНажатие("");
	Отказ= ИСТИНА;
КонецПроцедуры

Процедура ТоварПроцентРознНацПолПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	
	
	
	ТекСтрД= ЭлементыФормы.Товар.ТекущаяСтрока;
	ПересчетСтрокиДокумента  (ТекСтрД, "ПроцентРознНацПол");
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаказНаСборку(Кнопка)
	
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!");
		ВОЗВРАТ ;
	КонецЕсли;
	
	Если (НачалоДня(Дата) < НачалоДня(ТекущаяДата())) 
		И ((Статус = Перечисления.СтатусПеремещения.ЗагруженСоздан) или (Статус = Перечисления.СтатусПеремещения.Отложен)) Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Отдавая на сборку задним числом, есть вероятность 100% навесить на склад МИНУСА
						| 							ПРОДОЛЖИТЬ ??? ", Режим,0,КодВозвратаДиалога.Нет);	
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			ВОЗВРАТ;	
		КонецЕсли;					
	КонецЕсли;
	 
	
	//Если Статус=Перечисления.СтатусПеремещения.ЗагруженСоздан Тогда // передвинем в конец списка
		СтарыйСтатус = Статус;
		Статус=Перечисления.СтатусПеремещения.ОтданНаСборку;

	//Если НачалоДня(Дата) < НачалоДня(ТекущаяДата()) Тогда
	//	Дата = КонецДня(Дата);
	//Иначе
	//	Дата = ТекущаяДата();
	//КонецЕсли;
	//-------------------------------------------------------
	//	!!!!!!!!!!!!!! ВАЖНО ДЛЯ СКЛАДСКИХ РАСХОДОВ !!!!!!!!!
	//  !!!!!!!!!!!!!! ВАЖНО ДЛЯ СКЛАДСКИХ РАСХОДОВ !!!!!!!!!
	
	//	Дата = ОМ3_ПоследняяДата(Дата);	
	
	//	!!!!!!!!!!!!!! ВАЖНО ДЛЯ СКЛАДСКИХ РАСХОДОВ !!!!!!!!!
	//-------------------------------------------------------

	
	Попытка
		
		//------------------<В историю>-------------------GtG----16.09.2008
		СтрИзм=Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="Отдан на сборку";
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.Изменение;
		
		//------------------<Сборка>-------------------GtG----16.09.2008
		
		ЭтотОбъект.Записать(РежимЗаписиДокумента.Проведение,РежимПРоведенияДокумента.Неоперативный);
		
		ЛейблДокумента();
		
		//ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ЗаказНаСборку.Доступность=Ложь;
		
		Если (ВидОперации = Перечисления.ВидыОпераций.ПеремещениеТМЦ) и (НомерЗаявкиАптеки > 0) Тогда
			ВыгрузитьИнформациюВАптеку();
		КонецЕсли;
		
		
		
		
	Исключение
		Сообщить("Документ нельзя отдать на сборку !", СтатусСообщения.Важное);
		Статус = СтарыйСтатус;
		ЭтотОбъект.Записать();
	КонецПопытки;
	
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыИзменениеМестаХранения(Кнопка)
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!");
		ВОЗВРАТ ;
	КонецЕсли;
	
	Если СкладПолучатель.ТипСклада = Перечисления.ТипыМХ.Розн Тогда
		Предупреждение("Эта операция осуществляется только на складе");
		Возврат;
	КонецЕсли;
	
	Статус=Перечисления.СтатусПеремещения.ИзменениеМестаХранения;
	Ответ=КодВозвратаДиалога.Нет;
	Если Дата<>ТекущаяДата() Тогда
		Ответ=Вопрос("Изменить дату документа с "+Дата+" на "+ТекущаяДата()+"?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Нет ,"Изменить дату?"); 
	КонецЕсли; 
	
	Если Ответ=КодВозвратаДиалога.Да Тогда
		Дата=ТекущаяДата();// передвинуть в конец списка
	КонецЕсли; 	
	
	Попытка
		
		//------------------<В историю>-------------------GtG----16.09.2008
		СтрИзм=Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="Изменение КМХ";
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ИзмТабЧасть;

		
		
		
		ЭтотОбъект.Записать(РежимЗаписиДокумента.Проведение,РежимПРоведенияДокумента.Неоперативный);
		
		ЛейблДокумента();
	Исключение
	КонецПопытки;
КонецПроцедуры


Процедура ОсновныеДействияФормыПеремещение(Кнопка,Предупреждать)
	
	Если Предупреждать = Неопределено Тогда
		Предупреждать = Истина;
	КонецЕсли;
	
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Предупреждение("Редактирование документа запрещено!");
		ВОЗВРАТ ;
	КонецЕсли;
	
	Если (РежимСканирования) и (Предупреждать) Тогда
		Предупреждение("В режиме сканирования документ проводится по кнопке <Откорректировать документ> ! ");
		Возврат;
	КонецЕсли;
	
	Если СкладПолучатель.ПометкаУдаления или (ТекущаяДата() >= СкладПолучатель.ДатаЗакрытия и СкладПолучатель.ДатаЗакрытия <> Дата(1,1,1)) Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("ВНИМАНИЕ! Вы пытаетесь переместить товар на закрытую аптеку. Продолжить?", Режим,0,КодВозвратаДиалога.Нет);	
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			ВОЗВРАТ;	
		КонецЕсли;		
	
	КонецЕсли;
	
	
	
	
	Если (НачалоДня(Дата) < НачалоДня(ТекущаяДата())) 
		И ((Статус = Перечисления.СтатусПеремещения.ЗагруженСоздан) или (Статус = Перечисления.СтатусПеремещения.Отложен)) Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Перемещая документ задним числом, есть вероятность 100% навесить на склад МИНУСА
						|				 				ПРОДОЛЖИТЬ ??? ", Режим,0,КодВозвратаДиалога.Нет);	
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			ВОЗВРАТ;	
		КонецЕсли;					
	КонецЕсли;
	
    СтарыйСтатус = Статус;
	Статус=Перечисления.СтатусПеремещения.Перемещен;
	
	//------------------<Проверка проведения дока задним числом>-------------------Virus----15.11.2007                                               
	//--- Если документ проводится задним числом (причем не временем а именно датой)
	//--- тогда мы его пихаем в конец дня, в котором он проводится
	//Если НачалоДня(Дата) < НачалоДня(ТекущаяДата()) Тогда
	//	Дата = КонецДня(Дата);
	//Иначе
	//	Дата = ТекущаяДата();
	//КонецЕсли;
	
	//-------------------------------------------------------
	//	!!!!!!!!!!!!!! ВАЖНО ДЛЯ СКЛАДСКИХ РАСХОДОВ !!!!!!!!!
	//  !!!!!!!!!!!!!! ВАЖНО ДЛЯ СКЛАДСКИХ РАСХОДОВ !!!!!!!!!
	
	//	Дата = ОМ3_ПоследняяДата(Дата);	
	
	//	!!!!!!!!!!!!!! ВАЖНО ДЛЯ СКЛАДСКИХ РАСХОДОВ !!!!!!!!!
	//-------------------------------------------------------
	
	
		 //--------------------------------------------------------Virus----КОНЕЦ--15.11.2007		
	
	//Ответ=КодВозвратаДиалога.Нет;
	//Если Дата<>ТекущаяДата() Тогда
	//	Ответ=Вопрос("Изменить дату документа с "+Дата+" на "+ТекущаяДата()+"?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Нет ,"Изменить дату?"); 
	//КонецЕсли; 
	//
	//Если Ответ=КодВозвратаДиалога.Да Тогда
	//	Дата=ТекущаяДата();// передвинуть в конец списка
	//КонецЕсли; 
	Попытка	
		
		//------------------<В историю>-------------------GtG----16.09.2008
		СтрИзм=Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="Перемещение товара";
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.Изменение;

		//------------------<Перемещение>-------------------GtG----16.09.2008
		
		ЭтотОбъект.Записать(РежимЗаписиДокумента.Проведение,РежимПРоведенияДокумента.Неоперативный);
		ЛейблДокумента();
	Исключение
		Сообщить("Документ нельзя провести на аптеку !", СтатусСообщения.Важное);
		Сообщить("ПРИЧИНА ОШИБКИ: "+Символы.ПС+ОписаниеОшибки()); // GtG 16.01.2008 12:50:58
		Статус = СтарыйСтатус;
		//ЭтотОбъект.Записать();
	КонецПопытки;
	
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	
	
	Если ДанныеСтроки.Партия.Пустая()=Ложь ТОгда
		 ОформлениеСтроки.Ячейки.СрокГодности.УстановитьТекст(Формат(ДанныеСтроки.Партия.СрокГодности,"ДФ=dd.MM.yyyy"));
	КонецЕсли;
	
    //------------------<Для удобочитаемости документа>-------------------GtG----
	КодАП=ОформлениеСтроки.Ячейки.КодАП;
	ОформлениеСтроки.Ячейки.КодАП.УстановитьТекст(Формат(ДанныеСтроки.ТОвар.Код,"ЧЦ=10; ЧДЦ=0; ЧГ=0"));
	
	 Если ДанныеСтроки.Товар.ЖНВЛС = Истина тогда
		 //ОформлениеСтроки.Шрифт.Жирный = Истина;
		 ОформлениеСтроки.Ячейки.ЖНВЛС.ЗначениеКартинки  =БиблиотекаКартинок.Здоровье;
	 КонецЕсли;	
	
	//Если 		
	//	ДанныеСтроки.Еит.ПометкаУдаления=Истина  или 
	//	ДанныеСтроки.Еит.Пустая()=Истина 
	//тогда
	//	  ОформлениеСтроки.Ячейки.ЕИТ.ЦветФона=Новый Цвет(255, 0, 0);
	//КонецЕсли;
	//------------------<Отметим косого владельца единицы>-------------------GtG----   
	//Если ДанныеСтроки.Еит.Владелец.ссылка<>ДанныеСтроки.ТОвар.Ссылка Тогда
	//	ОформлениеСтроки.Ячейки.ЕИТ.ЦветФона=Новый Цвет(255, 0, 0);
	//	ОформлениеСтроки.Ячейки.Товар.ЦветФона=Новый Цвет(255, 0, 0);
	//КонецЕсли;
	
	//------------------<Отметим единицу без наименования товара>-------------------GtG----
	// такую невозможно сопоставить
	//Если СтрДлина(СокрЛП(ДанныеСтроки.Еит.НаименованиеТовара))=0 Тогда
	//	ОформлениеСтроки.Ячейки.ЕИТ.ЦветФона=Новый Цвет(255, 0, 255);
	//	ОформлениеСтроки.Ячейки.Товар.ЦветФона=Новый Цвет(255, 0, 255);
	//КонецЕсли;

	
	Если РежимСканирования Тогда
		Если ДанныеСтроки.КоличествоСобранное <> ДанныеСтроки.КоличествоФакт Тогда
			ОформлениеСтроки.Ячейки.КоличествоСобранное.ЦветФона = Новый Цвет(255,0,0);
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры


  //============================================================================ GtG ===
 

   
 //============================================================================ GtG ===
 Процедура ПересчетСтрокиДокумента  (ТекСтрД, ИмяКол) Экспорт
	 // Назначение:
	 // Выполняет пересчет строки документа и создает партию если ее нет
	 // Если партия есть то изменяет данные хранящиеся в ней.
	 //--------------------------------------------------------------------------------
	 //сообщить(ИмяКол);
	 
	 ////----------------------------< Урезание процента наценки по ЖНВЛС/СВЛС >--------------------------------GtG---
	 //ИсходныйПроцентРознНацПол=ТекСтрД.ПроцентРознНацПол;
	 //МаксДопПроц=ОМ6_ПроверкаПроцентаНаценки(ТекСтрД.Товар, СкладПолучатель.Регион, ИсходныйПроцентРознНацПол);
	 //Если ТекСтрД.ПроцентРознНацПол>МаксДопПроц тогда
	 //	ТекСтрД.ПроцентРознНацПол=МаксДопПроц ;
	 //КонецЕсли;
	 //
	 
	 СписокКолонокДляПересчетаПоЦене="Количество, КоличествоФакт,";


	 
	 	//----------------------------< Пересчет по цене >--------------------------------GtG--- 
		Если Найти(СписокКолонокДляПересчетаПоЦене,ИмяКол+",")<>0 тогда
			
			//сообщить("Пересчет по цене "+ИмяКол);
		 
		// есть ТекСтрД.ЦенаЗакуп=ТекСтрД.ЦенаЗакупБезНДС+ТекСтрД.ЦенаЗакупБезНДС/100*ТекСтрД.СтавкаНДС.Ставка;
		ТекСтрД.СуммаЗакуп=ТекСтрД.ЦенаЗакуп*ТекСтрД.КоличествоФАКТ; // !!! ПО ФАКТИЧЕСКОМУ КОЛВУ !!!
		ТекСтрД.НДСЗакуп=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД.СуммаЗакуп,ТекСтрД.СтавкаНДС);
		//----------------------------< Пересчет нацененных сумм >--------------------------------GtG---
		
		//есть ТекСтрД.ЦенаРозн=ТекСтрД.ЦенаЗакуп+ТекСтрД.ЦенаЗакуп/100*ТекСтрД.ПроцентРознНац;
		ТекСтрД.СуммаРозн=ТекСтрД.ЦенаРозн* ТекСтрД.КоличествоФАКТ;
		ТекСтрД.НДСРозн=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД.СуммаРозн,ТекСтрД.СтавкаНДС);

		ТекСтрД.СуммаРознПол=ТекСтрД.ЦенаРознПол* ТекСтрД.КоличествоФАКТ;
		ТекСтрД.НДСРознПол=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД.СуммаРознПол,ТекСтрД.СтавкаНДС);

		ТекСтрД.ПроцентРознНацПол=100*(ТекСтрД.СуммаРознПол-ТекСтрД.СуммаЗакуп)/ТекСтрД.СуммаЗакуп;
		
		Если ТекСтрД.Товар.ЖНВЛС = истина Тогда
			
		КонецЕсли;
		//		х%= 100%*(РП-Закуп)/Закуп
		

		
	КонецЕсли;

	 
	 ////----------------------------< Пересчет сумм и %-ов наценок >--------------------------------GtG--- 
	 //Если Найти(СписокКолонокПересчетаПроцентовНаценок,ИмяКол+",")<>0 Тогда
	 //	
	 //   // сообщить("Пересчет сумм и %-ов наценок "+ИмяКол);
	 //	
	 //   ТекСтрД.ЦенаРознПол=ТекСтрД.ЦенаЗакуп+ТекСтрД.ЦенаЗакуп/100*ТекСтрД.ПроцентРознНацПол;
	 //   ТекСтрД.СуммаРознПол=ТекСтрД.ЦенаРознПол* ТекСтрД.КоличествоФАКТ;
	 //   ТекСтрД.НДСРознПол=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке  (ТекСтрД.СуммаРознПол,ТекСтрД.СтавкаНДС);
	 //КонецЕсли; 	
	 
	// ОбновитьСверткуПоНДС  (); 
	 
 КонецПроцедуры
 //============================================================================ GtG ===
  

Процедура ОсновныеДействияФормы1КарточкаТОвара(Кнопка)
	// Вставить содержимое обработчика.
	ТСД=ТекущаяСтрокаДокумента  ();
	
	Карточка=Отчеты.ДвижениеТовара1.Создать();
	
	Карточка.ВыбПартия=ТСД.Партия;
	
	Карточка.ВыбСклад=Склад;
	
	Карточка.ВыбТовар=ТСД.ТОвар;
	Карточка.ВыбФирма=Склад.Фирма;
	Карточка.НачПер=Дата-60*60*24*15;// по умолчанию за последние 15 дней
	Карточка.КонПер=Дата;
	
	
	Ф=Карточка.ПолучитьФорму("Форма");
	
	Ф.Открыть();
	
	
КонецПроцедуры

Процедура ТоварКоличествоПриИзменении(Элемент)
	//------------------<меняется факт колво - меняется резерв>-------------------GtG---- 
	
	НовоеКФ=Элемент.Значение;
	СВТ=ТекущаяСтрокаДокумента();
	Если (СВТ.Партия = Справочники.Партии.ПустаяСсылка()) 
		или (Статус = Перечисления.СтатусПеремещения.Отложен) Тогда
		Возврат;
	КонецЕсли;	
	ОМ15_ИзменитьСтрокуРезерваПодбора(СВТ.Товар,СВТ.Партия,Склад,НовоеКФ, ЭтотОбъект.Ссылка);
	
КонецПроцедуры

Процедура ДействияФормыРасценитьПоАПГТТ(Кнопка)
	
	Если СкладПолучатель.ГруппаТТ.Пустая() тогда
		Предупреждение("Нет ГТТ у склада! Розничная цена будет равна закупочной!");
		Для каждого Стр из Товар Цикл
			стр.ЦенаРознПол=Стр.ЦенаЗакуп;
			Стр.СуммаРознПол=Стр.СуммаЗакуп;
			Стр.НДСРознПол=Стр.НДСЗакуп;
		КонецЦикла;	
		Возврат;
	КонецЕсли;
	
	
	//------------------<Дернем цены из АПГТТ>-------------------GtG----
	ТХТ="ВЫБРАТЬ
	    |	АП_ГТТ.Товар КАК Товар,
	    |	АП_ГТТ.ЕИТ.К КАК К,
	    |	АП_ГТТ.РозничнаяЦенаГТТ КАК РознЦенаПол
	    |ИЗ
	    |	Справочник.АП_ГТТ КАК АП_ГТТ
	    |ГДЕ
	    |	АП_ГТТ.Владелец = &ГТТ
	    |	И АП_ГТТ.Товар В(&СписокТоваров)";
	
	  Запрос=Новый Запрос;
	  Запрос.Текст=ТХТ;
	  
	  
	  СписокТоваров=Товар.ВыгрузитьКолонку("ТОвар");
	  
	  
	  Запрос.УстановитьПараметр("СписокТоваров",СписокТоваров);
	  Запрос.УстановитьПараметр("ГТТ",СкладПолучатель.ГруппаТТ.Ссылка);

	  
	  ТЗ=Запрос.Выполнить().Выгрузить();
	
	  Для каждого Стр из Товар Цикл
		  
		  //------------------<Первая попытка поиска - по товару и коэффициенту>-------------------GtG----
		  
		  СтруктураПоиска=Новый Структура();
		  СтруктураПоиска.Вставить("Товар",Стр.Товар);
		  СтруктураПоиска.Вставить("К",Стр.Коэфф);
		  МНС=ТЗ.НайтиСтроки(СтруктураПоиска);
		  
		  УспешноНайденоТочноеСоответствие=Истина;
		  
		  Если МНС.Количество()=0 Тогда
			  УспешноНайденоТочноеСоответствие=Ложь;
		  КонецЕсли; 	  
		  
		  
		  Если УспешноНайденоТочноеСоответствие=Истина Тогда
			  //------------------<Берем цену как первую попавшуюся>-------------------GtG----
			  НСтр=Мнс.Получить(0);
			  Стр.ЦенаРознПол=НСтр.РознЦенаПол;
			  ПересчетСтрокиДокумента  (Стр, "Количество");
		  Иначе
			  //------------------<Вторая попытка - по товару только>-------------------GtG----
			  СтруктураПоиска=Новый Структура();
			  СтруктураПоиска.Вставить("Товар",Стр.Товар);
			  СтруктураПоиска.Вставить("К",Стр.Коэфф);
			  МНС=ТЗ.НайтиСтроки(СтруктураПоиска);
			  
			  Если МНС.Количество()=0 Тогда
				  Сообщить("Для "+Стр.Товар+" не найдено цены в АПГТТ!");
				  Продолжить;
			  КонецЕсли; 	  
			  
			  
			  НСтр=Мнс.Получить(0);
			  Стр.ЦенаРознПол=НСтр.РознЦенаПол/НСтр.К*Стр.Коэфф;
			  ПересчетСтрокиДокумента  (Стр, "Количество");
  		  
		  КонецЕсли; 
		  
	  КонецЦикла;	 
	
	
	  
	  //------------------<В историю>-------------------GtG----16.09.2008
		СтрИзм=Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="Расценка по АПГТТ";
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ИзмТабЧасть;

	
	
	
	
	
	
	
	
КонецПроцедуры

Процедура ТоварЦенаРознПолПриИзменении(Элемент)
	ТекСтрД= ЭлементыФормы.Товар.ТекущаяСтрока;
	ПересчетСтрокиДокумента  (ТекСтрД, "КоличествоФакт");
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если ТОвар.Количество()>0 Тогда
		ПерваяСтрока=ТОвар.Получить(0);
		Если ПерваяСтрока.Партия.Пустая()= Ложь Тогда
		//------------------<Чистим резерв подбора >-------------------GtG----15.11.2007
		// только если в документе набирали товар, и он не является свежим заказом (с еще не подобранными партиями)
		
			Если  (ЭтотОбъект.Проведен=Ложь) и (ЭтотОбъект.ЭтоНовый() = Ложь) Тогда
				ОМ15_ОчисткаРезерваДокумента( ЭтотОбъект.Ссылка );
				Если ЭтотОбъект.ПометкаУдаления = Ложь Тогда //Если помечен на удаление, тогда надо только очистить резерв
					ОбновитьРезервПодбора();
					//ОМ15_ДобавитьДокументЦеликомВРезервПодбора(ЭтотОбъект.Ссылка);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

//------------------<При удалении строки удаляем информацию о ней из Резерва подбора>-------------------Virus----15.11.2007
Процедура ТоварПередУдалением(Элемент, Отказ)

	ТекСтр = ЭлементыФормы.Товар.ТекущаяСтрока;
	Если (ЭтотОбъект.Проведен = Ложь) Тогда
		ОМ15_УдалитьСтрокуДокИзРезерваПодбора (ТекСтр.Товар,ТекСтр.Партия,Склад,ЭтотОбъект.Ссылка);
	КонецЕсли;
	
	СтрНеудовлПозиций = НеудовлетвореннаяПотребность.Добавить();
	ЗаполнитьЗначенияСвойств(СтрНеудовлПозиций,ТекСтр);
	//СтрНеудовлПозиций.Товар = ТекСтр.Товар;
	//СтрНеудовлПозиций.Количество = ТекСтр.Количество;
	//СтрНеудовлПозиций.Партия = ТекСтр.Партия;
	СтрНеудовлПозиций.Удалена = Истина;
					
	
КонецПроцедуры

Процедура ТоварКоличествоФактОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
		//------------------<меняется факт колво - меняется резерв>-------------------GtG---- 
	НовоеКФ=Элемент.Значение;
	СВТ=ТекущаяСтрокаДокумента();
	Если (СВТ.Партия = Справочники.Партии.ПустаяСсылка()) 
		или (Статус = Перечисления.СтатусПеремещения.Отложен) Тогда
		Возврат;
	КонецЕсли;	
	Если НовоеКФ < СВТ.КоличествоФакт Тогда
		ОМ15_ИзменитьСтрокуРезерваПодбора(СВТ.Товар,СВТ.Партия,Склад,НовоеКФ, ЭтотОбъект.Ссылка);
	КонецЕсли;
    ЭлементыФормы.Товар.Колонки.КоличествоФакт.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;
КонецПроцедуры

Процедура Отложить_заказНажатие(Элемент)
	
	Если ЭтотОбъект.Проведен=Ложь ТОгда
		ОМ15_ОчисткаРезерваДокумента  ( ЭтотОбъект.Ссылка) ;
		//------------------<Зачищаем Товар до состояния свежего заказа>-------------------GtG----15.11.2007
		ЭтотОбъект.ПриКопировании( Неопределено );
		Статус=Перечисления.СтатусПеремещения.Отложен;
		
		
		//------------------<В историю>-------------------GtG----16.09.2008
		СтрИзм=Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="Заказ отложен";
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ИзмТабЧасть;

		
		
	Иначе
		ПРедупреждение("Документ проведен, отложить его невозможно!");
	КонецЕсли; 
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	//Если ШК=Ложь Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Сообщить("Штрих" + Данные);
	//
	//ТХТ = "ВЫБРАТЬ
	//|	ШКПТ.Владелец.Ссылка as Единица,
	//|	ШКПТ.Ссылка as БарКодОбъект,
	//|	ШКПТ.Владелец.Владелец.Ссылка as Товар
	//|ИЗ
	//|	Справочник.ШКПТ КАК ШКПТ
	//|ГДЕ
	//|	ШКПТ.Наименование = &Штрих";
	//
	//Запрос=Новый Запрос;
	//Запрос.Текст=ТХТ;
	//Запрос.УстановитьПараметр("Штрих",Данные);
	//ТЗ = Запрос.Выполнить().Выгрузить();
	//Если ТЗ.Количество() > 0 Тогда
	//	Если ТЗ.Количество() = 1 Тогда
	//		Адрес = ТЗ.ПОлучить(0);	
	//	КонецЕсли;
	//	Если ТЗ.Количество() > 1 Тогда
	//		Сообщить("Внимание: для двух позиций товара имеется один ШК. Выберите нужную строку!");
	//		Адрес = ТЗ.ВыбратьСтроку("Выберите правильную позицию");
	//	КонецЕсли;
	//	СтруктураОтбора = Новый Структура();
	//	СтруктураОтбора.Вставить("Товар",Адрес.Товар);
	//	СтрокаТабличнойЧасти = Неопределено;
	//	МассивНайденныхСтрок = Товар.НайтиСтроки(СтруктураОтбора);
	//	КолСтрок = МассивНайденныхСтрок.Количество();
	//	Если КолСтрок = 0 Тогда
	//		Предупреждение("Нет выбранного товара в документе...");
	//		Возврат;
	//	ИначеЕсли КолСтрок = 1 Тогда
	//		ЭлементыФормы.Товар.РежимВыделенияСтроки=РежимВыделенияСтрокиТабличногоПоля.Строка; //чтобы лучше было видно на какой товар спозиционировались
	//		ЭлементыФормы.Товар.Колонки.КоличествоФакт.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
	//		ЭлементыФормы.Товар.ТекущаяСтрока = МассивНайденныхСтрок.Получить(0);
	//		ЭлементыФормы.Товар.ТекущаяКолонка = ЭлементыФормы.Товар.Колонки["КоличествоФакт"];
	//		//Количество = 1;
	//		//Если ВвестиЧисло(Количество, "Введите количество", 10, 2) Тогда
	//		//	ТекСтрока = МассивНайденныхСтрок.Получить(0);
	//		//	ТекСтрока.КоличествоФакт = Количество;
	//		//КонецЕсли;	
	//		
	//	Иначе
	//		
	//	КонецЕсли;
	//	ТекСтрока = ТекущаяСтрокаДокумента();
	//	ТекСтрока.БарКод = Адрес.БарКодОбъект;
	//	ТекСтрока.ЕИТ =  Адрес.Единица;
	//	

	//Иначе
	//	Предупреждение("Нет такого штриха в базе!")
	//КонецЕсли;
	
КонецПроцедуры

Процедура ШКПриИзменении(Элемент)
	ЭлементыФормы.Товар.Колонки.ПроверкаШК.Видимость = Элемент.Значение;
	ЭлементыФормы.Товар.Колонки.КоличествоСобранное.Видимость = Элемент.Значение;
	ЭлементыФормы.Товар.Колонки.НомерКоробки.Видимость = Элемент.Значение;
КонецПроцедуры

Процедура ИзменитьНаСтатусНажатие(Элемент)
	
	БылСтатус=Статус;
	
	Статус = ВыбСтатус;
	Записать(РежимЗаписиДокумента.Запись);
	
	//------------------<В историю>-------------------GtG----16.09.2008
		СтрИзм=Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="Изменен статус документа с "+БылСтатус+" на "+Статус;
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.Изменение;

	
	
КонецПроцедуры

Процедура ДействияФормыПечатьШК(Кнопка)
	
	ТекСтрока = ТекущаяСтрокаДокумента();

	Если ТекСтрока.Товар.ТипШтрихКода = Перечисления.ТипыШтрихкода.Заводской Тогда
		Предупреждение("Нельзя распечатать Штрих-Код на этот товар!");
		Возврат;
	КонецЕсли;	
	
		
	ТД = Новый ТекстовыйДокумент;
	ТД.УстановитьТипФайла(КодировкаТекста.ANSI); 
	
	ТД.ДобавитьСтроку(Номер);
	ТД.ДобавитьСтроку(Формат(Дата,"ДФ=dd.MM.yyyy"));
	ТД.ДобавитьСтроку(СкладПолучатель.Наименование);

	
	ТД.ДобавитьСтроку(ТекСтрока.ЕИТ.НаименованиеТовара);
    ТД.ДобавитьСтроку(Формат(ТекСтрока.КоличествоФакт,"ЧГ=0"));
	ТД.ДобавитьСтроку(Формат(ТекСтрока.ЦенаРознПол,"ЧДЦ=2; ЧРД=-; ЧГ="));
	ТД.ДобавитьСтроку(Лев(ТекСтрока.Партия,СтрДлина(ТекСтрока.Партия)-1));
	ТД.Записать(Константы.ПутьКЗебре.Получить()+"\N_"+ФОрмат(Номер,"ЧГ=0")+".txt",КодировкаТекста.ANSI);
	ПРедупреждение(""+Номер+" от "+Дата+" Отправлено на Зебру!",5);
	
	
КонецПроцедуры

Процедура ПодтянутьРозничныеЦены ()  
	//----------------------------------
	//Назначение:
	//  Тянем Розн цены из регистра розн цен срез последних
	//  
	//  
	//  
	//----------------------------------
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Вы действительно хотите подтянуть новые цены?",Режим,0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
		
	СписокПартий=Товар.ВыгрузитьКолонку( "Партия");
	
	
	ТХТ="ВЫБРАТЬ
	    |	ЦеныСрезПоследних.Партия,
	    |	ЦеныСрезПоследних.ЦенаРознГТТ КАК Цена
	    |ИЗ
	    |	РегистрСведений.Цены.СрезПоследних(
	    |		,
	    |		Партия В (&СписокПартий)
	    |			И РЕГИОН = &РегионСклада) КАК ЦеныСрезПоследних";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("СписокПартий",СписокПартий);
		Запрос.УстановитьПараметр("РегионСклада",СкладПолучатель.Регион);
		
		
		ТЗ=Запрос.Выполнить().Выгрузить();	
	
	    Для каждого Стр из Товар Цикл
			
			СтрЦен=ТЗ.Найти(Стр.Партия,"Партия");
			
			Если СтрЦен = Неопределено Тогда
				Сообщить("По строке " + Стр.НомерСтроки + " не подтянулась цена розн");
			Иначе
				Стр.ЦенаРознПол=СтрЦен.Цена*Стр.Коэфф; // за идеальную сферическую единицу * коэфф текущей ЕИТ
				Стр.СуммаРознПол=Стр.ЦенаРознПол*Стр.КоличествоФакт;
				Стр.НДСРознПол=ОМ3_ПолучитьНДСПоСуммеСНДСИСтавке(Стр.СуммаРознПол,Стр.СтавкаНДС);
			КонецЕсли;
		КонецЦикла;	
КонецПроцедуры	//ПодтянутьРозничныеЦены


Процедура ДействияФормыРозничныеЦеныПоРасценке(Кнопка)
	Если СкладПолучатель.ТипСклада=Перечисления.ТипыМХ.Розн ТОгда
		//------------------<Затянем розничные цены по расценке>-------------------GtG----23.01.2008
		ПодтянутьРозничныеЦены();
		
		//------------------<В историю>-------------------GtG----16.09.2008
		СтрИзм=Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="Подтянуты розничные цены";
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ИзмТабЧасть;

		
		
	Иначе
		Предупреждение("На оптовом складе розничных цен нет!");
	КонецЕсли; 

КонецПроцедуры

Процедура ДействияФормыВыгрузитьПотверждение(Кнопка)
	
	Если Склад.Делфи = Истина Тогда
		ВыгрузитьВАптеку(Истина);
	Иначе
		Если (ВидОперации = Перечисления.ВидыОпераций.МежскладскаяПередача) и (НомерЗаявкиАптеки > 0) Тогда
			ВыгрузитьИнформациюВАптеку();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОткорректироватьДокумент(Кнопка)
	
	Если РежимСканирования Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Вы действительно хотите откорректировать документ?",Режим,0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		Иначе
			Состояние("корректировка документа....");
			//По первому циклу проверяем есть ли превышенное собранное количество
			ЕстьПревышения = Ложь;
			СообщениеОПревышении = "Есть превышение собранного количества в строках: ";
			Для каждого стр из Товар Цикл
				Если стр.КоличествоСобранное > стр.КоличествоФакт Тогда
					ЕстьПревышения = Истина;
					СообщениеОПревышении = СообщениеОПревышении + " - "  + стр.НомерСтроки; 
				КонецЕсли;
			КонецЦикла;
			
			Если ЕстьПревышения Тогда
				Сообщить(СообщениеОПревышении);
				Возврат;
			КонецЕсли;
			
			Для каждого стр из Товар Цикл
				Если (стр.КоличествоФакт <> стр.КоличествоСобранное) и (стр.КоличествоСобранное <>0) Тогда
					Если стр.КоличествоСобранное > стр.КоличествоФакт Тогда
						Сообщить("строка: " + стр.НомерСтроки + " количество собранное больше выписанного. пропускаем позицию");
					Иначе
						стр.КоличествоФакт = стр.КоличествоСобранное;
						ПересчетСтрокиДокумента(стр, "КоличествоФакт"); // пересчет при условии изменения количества
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			//Теперь удалим строки , где ничего склад не собрал. т.е. КоличествоСобранное = 0
			Строки = Товар.НайтиСтроки(Новый Структура("КоличествоСобранное",0));
			Для Каждого стр Из Строки Цикл
				СтрНеудовлПозиций = НеудовлетвореннаяПотребность.Добавить();
				СтрНеудовлПозиций.Товар = стр.Товар;
				СтрНеудовлПозиций.Количество = стр.Количество;
				СтрНеудовлПозиций.Удалена = Истина;
				Товар.Удалить(стр);
			КонецЦикла;
			//Ну а теперь проведем документ с окончательным перемещением по регистру на аптеку получатель
			Состояние("проведение документа....");
			
			ОсновныеДействияФормыПеремещение(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Перемещение,Ложь);
			
			Если ЭтотОбъект.Статус = Перечисления.СтатусПеремещения.Перемещен Тогда
					СтрИзм=Изменения.Добавить();
					СтрИзм.Дата=ТекущаяДата();
					СтрИзм.КомментарийИзменения="Откорректирован и проведен ";
					СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
					СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.Откорректирован;
					ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		Предупреждение("Документ корректируется только в режиме сканирования!");
	КонецЕсли;

КонецПроцедуры

Процедура ДействияФормыКоличествоМест(Кнопка)
	
	ТХТ = "ВЫБРАТЬ
	      |	МАКСИМУМ(ПеремещениеТовараТовар.НомерКоробки) КАК КоличествоМест
	      |ИЗ
	      |	Документ.ПеремещениеТовара.Товар КАК ПеремещениеТовараТовар
	      |ГДЕ
	      |	ПеремещениеТовараТовар.Ссылка = &Док";
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Док",ЭтотОбъект.Ссылка);
	ТЗ = Запрос.Выполнить().Выгрузить();
	Предупреждение("Количество мест = " + ТЗ.Получить(0).КоличествоМест);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыСохранить(Кнопка)
	
	Если ЭтотОбъект.Проведен=Истина Тогда
		ПРедупреждение("ДОКУМЕНТ ПРОВЕДЕН! 
		| Для записи нужно нажать на соответствующую статусу документа кнопку
		| т.е. Заказ на сборку, Перемещение или Откорректировать документ");
		Возврат;
		
	КонецЕсли;	   
	
	стрИзм = Изменения.Добавить();
	стрИзм.Дата = ТекущаяДата();
	стрИзм.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	стрИзм.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
	стрИзм.КомментарийИзменения = "Записан";
	
	ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
	
	
КонецПроцедуры

Процедура КнСоздатьЗаказПоставщикуНажатие(Элемент)
	
	Если НеудовлетвореннаяПотребность.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Товар");
	ТЗ.Колонки.Добавить("Количество");
	ТЗ.Колонки.Добавить("НомерЗаявкиАптеки");
	
	Для каждого стр из НеудовлетвореннаяПотребность Цикл
		Если ГруппаТовара <> Справочники.ОсновныеГруппы.ПустаяСсылка() Тогда
			Если (стр.Товар.ОсновнаяГруппа <> ГруппаТовара)  Тогда	
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		стрТЗ = ТЗ.Добавить();
		стрТЗ.Товар = стр.Товар;
		стрТЗ.Количество = стр.Количество;
		стрТЗ.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
		
	КонецЦикла;
	
	Если ТЗ.Количество() = 0 Тогда
		Предупреждение("По данным условиям ни одна строка не подходит для заказа");
		Возврат;
	Конецесли;
	
	
	ТХТ = "ВЫБРАТЬ
	      |	Заказ.Ссылка как Заказ
	      |ИЗ
	      |	Документ.Заказ КАК Заказ
	      |ГДЕ
	      |	Заказ.Проведен = ЛОЖЬ
	      |	И Заказ.Дата МЕЖДУ &НачДата И &КонДата
	      |	И Заказ.Склад = &Аптека
	      |	И Заказ.Поставщик = &ПустойПоставщик
	      |	И Заказ.ПометкаУдаления = ЛОЖЬ";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Аптека",СкладПолучатель);
	Запрос.УстановитьПараметр("ПустойПоставщик",Справочники.Поставщики.ПустаяСсылка());
	Запрос.УстановитьПараметр("НачДата",НачалоДня(ТекущаяДата()) - 60*60*3*24);
	Запрос.УстановитьПараметр("КонДата",ТекущаяДата());
	ТЗВрем = Запрос.Выполнить().Выгрузить();	
	
	Если ТЗВрем.Количество() = 0 Тогда
		СтрокаИнфо = "Создан новый документ : ";
		ДокЗаказа = Документы.Заказ.СоздатьДокумент();
		ДокЗаказа.Дата = Текущаядата();
		ДокЗаказа.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
		ДокЗаказа.Склад = СкладПолучатель;
		ДокЗаказа.Комментарий = "Создан на основании неуд. потр. " + ЭтотОбъект;
		ДокЗаказа.Товар.Загрузить(ТЗ);	
	Иначе
		СтрокаИнфо = "Добавлен в документ : ";
		ДокСсылка = ТЗВрем.Получить(0).Заказ;
		ДокЗаказа = ДокСсылка.ПолучитьОбъект();
		ДокЗаказа.Дата = ТекущаяДата(); 
		Для каждого стр Из ТЗ Цикл
			текТЧ = ДокЗаказа.Товар.Добавить();
			текТЧ.Товар = стр.Товар;
			текТЧ.Количество = стр.Количество;
			текТЧ.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
		КонецЦикла;
	КонецЕсли;	
	
	
	стрИзм = ДокЗаказа.Изменения.Добавить();
	стрИзм.Дата = ТекущаяДата();
	стрИзм.КомментарийИзменения = "Создан на основании неуд. потр. " + ЭтотОбъект;
	стрИзм.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	стрИзм.ТипИзм = Перечисления.ДействияНадДокументами.ВводНового;
	
	Попытка
		ДокЗаказа.Записать(РежимЗаписиДокумента.Запись);
		Предупреждение(СтрокаИнфо + " " + ДокЗаказа);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	
	
КонецПроцедуры

Процедура ДействияФормыВыгрузитьВАптеку(Кнопка)
	
	Если Модифицированность() = Истина Тогда
		Предупреждение("Документ был изменен. Перед выгрузкой необходимо документ провести.");	
		Возврат;
	КонецЕсли;
	
	
	Если (Проведен = Истина) 
		И ((Статус = Перечисления.СтатусПеремещения.Перемещен) или (Статус = Перечисления.СтатусПеремещения.ВыгруженНаАптеку))
		И (СкладПолучатель.ТипСклада = Перечисления.ТипыМХ.Розн) Тогда 
		Если Статус = Перечисления.СтатусПеремещения.ВыгруженНаАптеку Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Документ был ранее выгружен в аптеку. ВЫГРУЗИТЬ еще раз?", Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		Иначе
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Вы действительно хотите выгрузить документ в аптеку?", Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Склад.Делфи = Истина Тогда
			Если ВыгрузитьВАптеку(Истина) = Истина и ВыгрузитьВАптеку() = Истина Тогда // +Подтверждение
		        Предупреждение("Документ выгружен!");
			Иначе
		        Предупреждение("Документ НЕ выгружен!");
			КонецЕсли;
		Иначе
			Если ВыгрузитьВАптеку() = Истина Тогда
				Предупреждение("Документ выгружен!");
			Иначе
				Предупреждение("Документ НЕ выгружен!");
			КонецЕсли;
		КонецЕсли;
		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель2НайтиСтрокуВТаблицеТовара(Кнопка)
	
	Если ОшибкиРасценки.Количество()=0 Тогда
		Возврат;
	КонецЕсли;	
	ОшПартия=ЭлементыФормы.ОшибкиРасценки.ТекущаяСтрока.Партия;
	Стр=Товар.Найти(ОшПартия,"Партия");
	ЭтаФорма.Панель.ТекущаяСтраница= ЭтаФорма.Панель.Страницы.Найти("Основное");
	ЭлементыФормы.Товар.ТекущаяСтрока=Стр;
	
КонецПроцедуры

Процедура СкладПриИзменении(Элемент)
	
	Если Элемент.Значение.Фирма <> Фирма Тогда
		Фирма = Элемент.Значение.Фирма;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнКарточкаСтроки(Кнопка)
	
	ФормаКарточки = ЭтотОбъект.ПолучитьФорму("КарточкаСтроки");
	ФормаКарточки.ВладелецФормы = ЭтаФорма;
	ФормаКарточки.ИндексТекСтроки = Товар.Индекс(ЭлементыФормы.Товар.ТекущаяСтрока);
	ФормаКарточки.Проведен = ЭтотОбъект.Проведен;
	ФормаКарточки.ОткрытьМодально();	
	
КонецПроцедуры


//--------------------------------------------------------Virus----КОНЕЦ--15.11.2007


