
Процедура УправлениеНадписямиКнопок()
	
	Если Согласован = Ложь Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Согласовать";
		ЭлементыФормы.Товар.ТолькоПросмотр = Ложь;
		ЭлементыФормы.КоманднаяПанель1.Доступность = Истина;		
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Текст = "Отмена согласования";
		ЭлементыФормы.Товар.ТолькоПросмотр = Истина;
		ЭлементыФормы.КоманднаяПанель1.Доступность = Ложь;
	КонецЕсли;
	
	Если Проведен Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыСохранить.Доступность = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.кнСогласования.Доступность = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыСохранить.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ОткрытьПодбор()
	
	ФормаПодбора = ЭтотОбъект.ПолучитьФорму("ПодборТовара",ЭтаФорма,Новый УникальныйИдентификатор());
	ФормаПодбора.ВладелецФормы = ЭтаФорма;
	ФормаПодбора.ОткрытьМодально();
	
	Товар.Загрузить(ФормаПодбора.ТЗТовара);
	
	Если ТипЦены = Перечисления.ТипыЦенКонтракта.СипЦена Тогда
		ОчиститьКолонкуСтавкаНДС();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	//Если ТипЗнч(ЗначениеВыбора)=Тип("ТаблицаЗначений") Тогда	
	//	Для каждого стр из ЗначениеВыбора Цикл
	//		НоваяСтрока = Товар.Добавить();	
	//		ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
	//	КонецЦикла;
	//КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1кнПодбор(Кнопка)
	
	ОткрытьПодбор();

КонецПроцедуры

Процедура ТоварПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	ОткрытьПодбор();
	
КонецПроцедуры


Процедура ТоварПередУдалением(Элемент, Отказ)
	
	Если Проведен  Тогда
		Предупреждение("В выгруженном документе удаление строк запрещено. Можно только отменить действие строки.");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнСогласования(Кнопка)
	
	КодТекущегоСотрудника = ПараметрыСеанса.ТекущийСотр.Код;
	
	Если КодТекущегоСотрудника = 148 //Санакоев В.
		Или КодТекущегоСотрудника = СогласованКем.Код
		Или РольДоступна("супер_АДМИНИСТРАТОР") Тогда		
		ПравоОтменыСогласования = Истина;		
	Иначе
		ПравоОтменыСогласования = Ложь;		
	КонецЕсли;
	
	Если НЕ Проведен и Не Согласован Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Согласовать документ?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
		Согласован = Истина;
		СогласованКем = ПараметрыСеанса.ТекущийСотр;
		
	ИначеЕсли НЕ Проведен  и Согласован Тогда 		
		Если Не ПравоОтменыСогласования Тогда
			Предупреждение("Нет прав на отмену согласования", 3);			
			Возврат;			
		КонецЕсли;
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Отменить согласование?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
		Согласован = Ложь;
	Иначе
		Возврат;
	КонецЕсли;
	                               
	Изменение = Изменения.Добавить();
	Изменение.Дата = ТекущаяДата();
	Изменение.КомментарийИзменения = "Согласован = " + Согласован;
	Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
	
	Записать(РежимЗаписиДокумента.Запись);
	
	УправлениеНадписямиКнопок();
	
	
КонецПроцедуры

Процедура ТоварПриИзмененииФлажка(Элемент, Колонка)
	
	Если Колонка.Имя = "Отменена" Тогда
		ТекСтрока = Элемент.ТекущаяСтрока;
		Изменение = Изменения.Добавить();
		Изменение.Дата = ТекущаяДата();
		Изменение.КомментарийИзменения = "Флаг = " + ТекСтрока.Отменена + " № стр. " + ТекСтрока.НомерСтроки;
		Изменение.Сотрудник = ПараметрыСеанса.ТекущийСотр;
		Изменение.ТипИзм = Перечисления.ДействияНадДокументами.Изменение;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПриОткрытии()
	
	УправлениеНадписямиКнопок();
	УстановитьКодПоставщикаОриолы();
	
	УстановитьДоступностьКолонкиСтавкаНДС();
	
КонецПроцедуры


Процедура КоманднаяПанель1кнЗаполнитьПоПроизводителю(Кнопка)
	
	Если Проведен Тогда
		Предупреждение("Документ проведен. Изменение документа запрещено!");
		Возврат;
	КонецЕсли;
	
	Если Согласован Тогда
		Предупреждение("Документ прошел согласование. Изменение документа запрещено!");
		Возврат;
	КонецЕсли;	
	
	Если Производитель.Пустая() Тогда
		Предупреждение("Не выбран производитель. Выполнение не может быть продолжено!");
		Возврат;
	КонецЕсли;
	
	Если Товар.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Таблица товара будет перезаполнена. Продолжить выполнение?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Код КАК КодТовара,
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка КАК Товар,
				   // НДС20/18
	              // |	АССОРТИМЕНТНЫЙ_ПЛАН.СтавкаНДС.Ставка КАК СтавкаНДС
			 	   |	ВЫБОР
			 	   |		КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.СтавкаНДС.Код = 3
			 	   |				И &Дата < ДАТАВРЕМЯ(2019, 1, 1)
			  	   |			ТОГДА 18
			  	   |		ИНАЧЕ АССОРТИМЕНТНЫЙ_ПЛАН.СтавкаНДС.Ставка
			  	   |	КОНЕЦ КАК СтавкаНДС
	               |ИЗ
	               |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	               |ГДЕ
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Производитель = &Производитель
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Наименование";
	Запрос.УстановитьПараметр("Производитель",Производитель);
	Запрос.УстановитьПараметр("Дата",Дата);
	
	Товар.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если ТипЦены = Перечисления.ТипыЦенКонтракта.СипЦена Тогда
		ОчиститьКолонкуСтавкаНДС();
	КонецЕсли;
	
КонецПроцедуры


Процедура КоманднаяПанель1кнУстановитьБонус(Кнопка)
	
	Бонус = 0;

	ИмяКолонки = ЭлементыФормы.Товар.ТекущаяКолонка.Имя;
	Если Найти(ИмяКолонки,"Бонус") = 0 Тогда
		Предупреждение("Для текущего поля невозможно установить бонус");	
		Возврат;
	КонецЕсли;
	
	Если ВвестиЧисло(Бонус,"Введите бонус для колонки: " + ИмяКолонки,10,2) Тогда
		Для каждого стр из Товар Цикл
			стр[ИмяКолонки] = Бонус;
		КонецЦикла;
	КонецЕсли;
	
	// Пересчет цен ТЧ с учетом новых бонусов
	Для каждого СтрокаТЧ Из Товар Цикл
		РассчитатьЦеныСУчетомБонусов(СтрокаТЧ);	
	КонецЦикла; 
	
КонецПроцедуры


Процедура КоманднаяПанель2Действие(Кнопка)
	
    ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВФ.МножественныйВыбор = Ложь;
	
    ДВФ.Выбрать();
    
    Если ПустаяСтрока(ДВФ.ПолноеИмяФайла)=Ложь Тогда
        
        ДД=Новый ДвоичныеДанные(ДВФ.ПолноеИмяФайла);
        
        
        ХЗ=Новый ХранилищеЗначения (ДД, Новый СжатиеДанных(9));
		
		НоваяСтрока = Приложения.Добавить();
		НоваяСтрока.Наименование = "Приложение " + НоваяСтрока.НомерСтроки;
		НоваяСтрока.Приложение=ХЗ;
        НоваяСтрока.ИмяФайла=СтрЗаменить(ДВФ.ПолноеИмяФайла,ДВФ.Каталог,"");
 
    КонецЕсли;
	
	
КонецПроцедуры


Процедура КоманднаяПанель2ОткрытьПрицеп(Кнопка)
	
	ТС=ЭлементыФормы.Приложения.ТекущаяСтрока;
	Если ТС=Неопределено Тогда
		Предупреждение("Не выбрана строка вложения");
		Возврат;
	КонецЕсли;  
	
	ДД=ТС.Приложение.Получить(); // ДвоичныеДанные
	ИФ=ТС.ИмяФайла;
	
	ДД.Записать(КаталогВременныхФайлов()+"\"+ИФ);
	
	ЗапуститьПриложение(КаталогВременныхФайлов()+"\"+ИФ);
	
	
КонецПроцедуры


Процедура КоманднаяПанель2СохранитьФайлНаДиск(Кнопка)
	
    ТС=ЭлементыФормы.Приложения.ТекущаяСтрока;
    Если ТС=Неопределено Тогда
        Предупреждение("Не выбрана строка вложения");
        Возврат;
    КонецЕсли;  
    
    ДД=ТС.Приложение.Получить(); // ДвоичныеДанные
    ИФ=ТС.ИмяФайла;
    
    
    ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
    ДВФ.Выбрать();
    
    ДД.Записать(ДВФ.Каталог+"\"+ИФ);
    
    Сообщить("Приложение сохранено в "+ДВФ.Каталог+"\"+ИФ);
	
КонецПроцедуры

Процедура УстановитьКодПоставщикаОриолы()	
	КодПоставщикаОриолы = Производитель.КодПоставщикаОриолы;	
КонецПроцедуры

Процедура ПроизводительПриИзменении(Элемент)
	УстановитьКодПоставщикаОриолы();
	Если ЗначениеЗаполнено(Производитель.Поставщик) Тогда
	
		Если Поставщик <> Производитель.Поставщик Тогда
			ДоговорПоставщика = Справочники.ДоговорыПоставки.ПустаяСсылка()	
		КонецЕсли; 
		Поставщик = Производитель.Поставщик
	
	КонецЕсли; 
КонецПроцедуры

Процедура ПроизводительОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаЭлемента = Производитель.ПолучитьФорму("ФормаЭлемента");
	ФормаЭлемента.ОткрытьМодально();
	
	УстановитьКодПоставщикаОриолы();
	
КонецПроцедуры

Процедура УстановитьДоступностьКолонкиСтавкаНДС()
	
	ЭлементыФормы.Товар.Колонки.СтавкаНДС.ТолькоПросмотр = ТипЦены = Перечисления.ТипыЦенКонтракта.СипЦена;

КонецПроцедуры

Процедура ОчиститьКолонкуСтавкаНДС()
	
	// Заблокировано по задаче #42344
	//Для Каждого ТекСтрока Из Товар Цикл 		
	//	ТекСтрока.СтавкаНДС = 0;		
	//КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьКолонкуСтавкаНДС()
	
	Для Каждого ТекСтрока Из Товар Цикл
		// НДС20/18
		//ТекСтрока.СтавкаНДС = ТекСтрока.Товар.СтавкаНДС.Ставка;		
		ТекСтрока.СтавкаНДС = ПереопределениеЗначенияСтавки20_18(ТекСтрока.Товар.СтавкаНДС,Дата);		
	КонецЦикла;

КонецПроцедуры

Процедура ТипЦеныПриИзменении(Элемент)
	
	УстановитьДоступностьКолонкиСтавкаНДС();
	
	Если ТипЦены = Перечисления.ТипыЦенКонтракта.СипЦена Тогда
		ОчиститьКолонкуСтавкаНДС();
	Иначе
		ЗаполнитьКолонкуСтавкаНДС();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1кнЗагрузитьИзФайла(Кнопка)
	
	Если Товар.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНетОтмена;
		Ответ = Вопрос("Очистить существующий список товаров?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Товар.Очистить();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаЗагрузкиТоваров");
	ФайлИмпорта = Форма.ОткрытьМодально();
	
	Если Не ЗначениеЗаполнено(ФайлИмпорта) Тогда
		Возврат;
	КонецЕсли;
	
	ВыбФайл = Новый Файл(ФайлИмпорта); 	
	Если Не ВыбФайл.Существует() Тогда
		Сообщить("Не найден файл " + ФайлИмпорта);
		Возврат;
	КонецЕсли; 
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");	
	Исключение
		Сообщить ("Не удалось запустить Excel");
		Возврат;
	КонецПопытки;
	
	Книга = Excel.Workbooks.Open(ФайлИмпорта);	
	Лист = Книга.WorkSheets(1);	
	ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	
	Для Строка = 1 По ВсегоСтрок Цикл
		
		ОбработкаПрерыванияПользователя();
		
		КодТовара = ОМ_ТСО.ПолучитьЧислоИзСтроки(Лист.Cells(Строка,1).Value);
		БонусОптовый  = ОМ_ТСО.ПолучитьЧислоИзСтроки(Лист.Cells(Строка,2).Value);
		ЦенаЗакупБезНДС  = ОМ_ТСО.ПолучитьЧислоИзСтроки(Лист.Cells(Строка,3).Value);
		БонусСО  = ОМ_ТСО.ПолучитьЧислоИзСтроки(Лист.Cells(Строка,4).Value);
		БонусТП  = ОМ_ТСО.ПолучитьЧислоИзСтроки(Лист.Cells(Строка,5).Value);
		
		Если Не ЗначениеЗаполнено(КодТовара) Тогда
			Сообщить("Не заполнен код товара в строке : " + Строка + " выполнение прервано.");
			Прервать;
		КонецЕсли;
		
		ТекТовар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		
		Если Не ЗначениеЗаполнено(ТекТовар) Тогда				
			Сообщить("Не найден товар по коду: " + КодТовара);
			Продолжить;
		КонецЕсли;
		
		НовСтр = Товар.Добавить();
		НовСтр.Товар = ТекТовар;
		НовСтр.КодТовара = КодТовара;
		НовСтр.БонусОптовый = БонусОптовый;
		НовСтр.ЦенаЗакупБезНДС = ЦенаЗакупБезНДС;
		// НДС20/18
		//НовСтр.СтавкаНДС = ТекТовар.СтавкаНДС.Ставка;
		НовСтр.СтавкаНДС = ПереопределениеЗначенияСтавки20_18(ТекТовар.СтавкаНДС,Дата);
		НовСтр.БонусСО = БонусСО;
		НовСтр.БонусТП = БонусТП;
		
	КонецЦикла;
	
	Excel.Application.Quit(); 	
	
	
КонецПроцедуры



Процедура ТоварБонусОптовыйПриИзменении(Элемент)	
	РассчитатьЦеныСУчетомБонусов(ЭлементыФормы.Товар.ТекущаяСтрока);	
КонецПроцедуры

Процедура ТоварБонусДополнительныйПриИзменении(Элемент)
	РассчитатьЦеныСУчетомБонусов(ЭлементыФормы.Товар.ТекущаяСтрока);	
КонецПроцедуры

Процедура ТоварЦенаЗакупБезНДСПриИзменении(Элемент)	
	РассчитатьЦеныСУчетомБонусов(ЭлементыФормы.Товар.ТекущаяСтрока);	
КонецПроцедуры

Процедура ТоварСтавкаНДСПриИзменении(Элемент)
	РассчитатьЦеныСУчетомБонусов(ЭлементыФормы.Товар.ТекущаяСтрока);
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если Не ДанныеСтроки.Товар.УчаствуетВАП Тогда
		ОформлениеСтроки.ЦветТекста = Новый Цвет(153, 153, 153);		
	КонецЕсли;
	Если ДанныеСтроки <> Неопределено Тогда		
		ТипСТМ = ПолучитьТипСТМ(ДанныеСтроки.Товар);
		ОформлениеСтроки.Ячейки.ТипСТМ.Значение = ТипСТМ;
	КонецЕсли;
	ОформлениеСтроки.Ячейки.ЖНВЛП.УстановитьТекст(ДанныеСтроки.Товар.ЖНВЛС);
КонецПроцедуры

Функция ПолучитьТипСТМ(ТоварСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыСТМСрезПоследних.ТипСТМ
	|ИЗ
	|	РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	|ГДЕ
	|	ТоварыСТМСрезПоследних.Товар = &Товар";
	
	Запрос.УстановитьПараметр("Товар", ТоварСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Перечисления.ТипыСТМ.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.ТипСТМ;	

КонецФункции

Процедура ДнейОтсрочки1ПриИзменении(Элемент)
	
	Если ДнейОтсрочки > 360 Тогда
		Комментарий = СтрЗаменить(Комментарий," На реализации!","") + " На реализации!";
	Иначе
		Комментарий = СтрЗаменить(Комментарий,"На реализации!","");
	КонецЕсли;
	
КонецПроцедуры

Процедура ТоварБонусСОПриИзменении(Элемент)
	РассчитатьЦеныСУчетомБонусов(ЭлементыФормы.Товар.ТекущаяСтрока);
КонецПроцедуры

Процедура ТоварБонусТППриИзменении(Элемент)
	РассчитатьЦеныСУчетомБонусов(ЭлементыФормы.Товар.ТекущаяСтрока);
КонецПроцедуры
