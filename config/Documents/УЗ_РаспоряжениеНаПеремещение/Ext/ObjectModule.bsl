
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// регистр ТоварыКПеремещению 
	Движения.ТоварыКПеремещению.Записывать = Истина;
	Движения.ТоварыКПеремещению.Очистить();
	
	Если Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.Создан
		Или Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.Зарегистрирован Тогда
		
		Для Каждого ТекСтрокаТовар Из Товар Цикл
			Движение = Движения.ТоварыКПеремещению.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.СкладКод = Склад.Код;
			Движение.ТоварКод = ТекСтрокаТовар.Товар.Код;
			Движение.Количество = ТекСтрокаТовар.Количество;
		КонецЦикла;
		
	КонецЕсли;
	
	Если Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.Подтвержден 
		И (ВидЭкспедиции.Код = "oreola" Или ВидЭкспедиции.Код = "gdpspb") Тогда
		ОМ_ТСО.ЗарегистрироватьОбъектДляВыгрузки(Ссылка, Перечисления.ВидыВыгрузок.ВыгрузкаЗаявокНаПеремещениеОриоле);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьРаспоряжение() Экспорт
	
	СформироватьПечатнуюФорму();
	ВыгрузитьВЛичныйКабинет();
	ОтправитьСообщениеАптеке();
	  	
КонецПроцедуры

Процедура ВыгрузитьВЛичныйКабинет() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИсторияИзмененийДокументов.Пользователь.Наименование КАК Сотрудник
	|ПОМЕСТИТЬ втИсторияИзменений
	|ИЗ
	|	Справочник.ИсторияИзмененийДокументов КАК ИсторияИзмененийДокументов
	|ГДЕ
	|	(ВЫРАЗИТЬ(ИсторияИзмененийДокументов.Объект КАК Документ.УЗ_РаспоряжениеНаПеремещение)) = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсторияИзмененийДокументов.ДатаИзменения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспоряжениеНаПеремещениеТовар.Ссылка КАК Документ,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.Номер КАК НомерДокумента,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.Дата КАК ДатаДокумента,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.Склад.Код КАК КодАптеки,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.СкладПолучатель.Код КАК КодПолучателя,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.СозданВручную КАК СозданВручную,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.Срочно КАК Срочно,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.ИндивидуальныйЗаказ КАК ИндивидуальныйЗаказ,
	|	РаспоряжениеНаПеремещениеТовар.Товар.Код КАК КодТовара,
	|	РаспоряжениеНаПеремещениеТовар.Товар.Наименование КАК НаименованиеТовара,
	|	РаспоряжениеНаПеремещениеТовар.Товар.Холодильник КАК Терм,
	|	РаспоряжениеНаПеремещениеТовар.Количество КАК Количество,
	|	РаспоряжениеНаПеремещениеТовар.СуммаЗакуп КАК СуммаЗакуп,
	|	ЕСТЬNULL(втИсторияИзменений.Сотрудник, """") КАК Сотрудник,
	|	ЕСТЬNULL(РаспоряжениеНаПеремещениеТовар.Ссылка.ВидЭкспедиции.Код, """") КАК КодВидаЭкспедиции
	|ИЗ
	|	Документ.УЗ_РаспоряжениеНаПеремещение.Товар КАК РаспоряжениеНаПеремещениеТовар
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИсторияИзменений КАК втИсторияИзменений
	|		ПО (ИСТИНА)
	|ГДЕ
	|	РаспоряжениеНаПеремещениеТовар.Ссылка = &Ссылка
	|ИТОГИ
	|	МАКСИМУМ(Терм),
	|	СУММА(Количество),
	|	СУММА(СуммаЗакуп),
	|	МАКСИМУМ(Сотрудник),
	|	МАКСИМУМ(КодВидаЭкспедиции)
	|ПО
	|	Документ";

	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ВидЭкспедиции", Справочники.ВидыЭкспедиции.НайтиПоКоду("independent"));

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДокумент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаДокумент.Следующий() Цикл
		     		
		ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("txt");
		
		Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()),"-","");
		
		ФайлОтправки = Новый ТекстовыйДокумент;
		ФайлОтправки.УстановитьТипФайла(КодировкаТекста.Системная);
		
		
		//ШАПКА
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""from_loc""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(Формат(ВыборкаДокумент.КодАптеки, "ЧДЦ=; ЧН=; ЧГ=0"));
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""to_loc""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(Формат(ВыборкаДокумент.КодПолучателя, "ЧДЦ=; ЧН=; ЧГ=0"));
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""doc_number""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(ВыборкаДокумент.НомерДокумента); 		
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""doc_date""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(Формат(ВыборкаДокумент.ДатаДокумента, "ДФ=yyyy-MM-dd"));
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""plan_packed_date""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(Формат(ВыборкаДокумент.ДатаДокумента + 5*24*60*60, "ДФ=yyyy-MM-dd"));
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""auto""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(Формат(ВыборкаДокумент.СозданВручную, "БЛ=1; БИ=0"));
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""now""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(Формат(ВыборкаДокумент.Срочно, "БЛ=0; БИ=1"));
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""individual""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(Формат(ВыборкаДокумент.ИндивидуальныйЗаказ, "БЛ=0; БИ=1"));
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""exp_type""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(ВыборкаДокумент.КодВидаЭкспедиции);
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""creator_name""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(ВыборкаДокумент.Сотрудник);
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""therm""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(Формат(ВыборкаДокумент.Терм, "БЛ=0; БИ=1"));
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""summ""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(Формат(ВыборкаДокумент.СуммаЗакуп, "ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0"));
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""qnt_pos""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(Формат(ВыборкаДокумент.Количество, "ЧДЦ=; ЧН=; ЧГ=0"));
		
		
		//ТЧ
		СтрокаСпискаТоваров = "";
		Выборка = ВыборкаДокумент.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтрокаСпискаТоваров = СтрокаСпискаТоваров 
			+ Формат(Выборка.КодТовара, "ЧДЦ=; ЧН=; ЧГ=0") + ";"
			+ Выборка.НаименованиеТовара + ";"
			+ Формат(Выборка.Количество, "ЧДЦ=; ЧН=; ЧГ=0") + ";";
			
		КонецЦикла;
		
		СтрокаСпискаТоваров = Лев(СтрокаСпискаТоваров, СтрДлина(СтрокаСпискаТоваров) - 1);
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""pos_table""" + Символы.ПС);
		ФайлОтправки.ДобавитьСтроку(СтрокаСпискаТоваров);
		
		ФайлОтправки.ДобавитьСтроку("--" + Boundary);
		
		
		//ОТПРАВКА
		ФайлОтправки.Записать(ИмяФайлаОтправки, КодировкаТекста.Системная);
		
		ФайлОтправки = Новый Файл(ИмяФайлаОтправки);                         
		РазмерФайлаОтправки = XMLСтрока(ФайлОтправки.Размер());
		
		ЗаголовокHTTP = Новый Соответствие();
		ЗаголовокHTTP.Вставить("POST",				"/south_stream.php HTTP/1.1");
		ЗаголовокHTTP.Вставить("Host",				"green.366.ru");
		ЗаголовокHTTP.Вставить("Connection",		"close");
		ЗаголовокHTTP.Вставить("Content-Type",		"multipart/form-data; boundary=" + Boundary);
		ЗаголовокHTTP.Вставить("Content-Length",	РазмерФайлаОтправки);
		               		
		АдресСервера = "green.366.ru";
		РесурсНаСервере = "south_stream.php";
		
		Соединение = Новый HTTPСоединение(АдресСервера,,,,,,Новый ЗащищенноеСоединениеOpenSSL());
		
		ПостЗапрос = Новый HTTPЗапрос(РесурсНаСервере, ЗаголовокHTTP);
		ПостЗапрос.УстановитьИмяФайлаТела(ИмяФайлаОтправки);
		
		ФайлРезультата = ПолучитьИмяВременногоФайла();
		Соединение.ОтправитьДляОбработки(ПостЗапрос, ФайлРезультата);
		Соединение = Неопределено; 		
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтправитьСообщениеАптеке() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РаспоряжениеНаПеремещениеТовар.Ссылка КАК Документ,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.Номер КАК НомерДокумента,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.Дата КАК ДатаДокумента,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.Склад.Наименование КАК НаименованиеАптеки,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.СкладПолучатель.Наименование КАК НаименованиеПолучателя,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.Склад.Мэйл КАК ПочтаАптеки,
	|	РаспоряжениеНаПеремещениеТовар.Товар.Код КАК КодТовара,
	|	РаспоряжениеНаПеремещениеТовар.Товар.Наименование КАК НаименованиеТовара,
	|	РаспоряжениеНаПеремещениеТовар.Количество КАК Количество,
	|	РаспоряжениеНаПеремещениеТовар.Товар.Холодильник КАК Холод,
	|	Управляющие.АдресЭлектроннойПочты КАК ПочтаУправляющего
	|ИЗ
	|	Документ.УЗ_РаспоряжениеНаПеремещение.Товар КАК РаспоряжениеНаПеремещениеТовар
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения.Заведующие КАК Управляющие
	|		ПО РаспоряжениеНаПеремещениеТовар.Ссылка.Склад = Управляющие.Ссылка
	|			И (Управляющие.Должность = ЗНАЧЕНИЕ(Перечисление.ДолжностиРуководителейАптек.УправляющийАптекой))
	|ГДЕ
	|	РаспоряжениеНаПеремещениеТовар.Ссылка = &Ссылка
	|ИТОГИ
	|	МАКСИМУМ(ПочтаУправляющего)
	|ПО
	|	Документ";

	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;

	ВыборкаДокумент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаДокумент.Следующий() Цикл
				
		// Формируем файл для вложения
		ТабДок = Новый ТабличныйДокумент;
		
		Макет = ПолучитьМакет("МакетРаспоряжения");
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");	
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаДокумент);
		ОбластьШапка.Параметры.НомерДокумента = Формат(ВыборкаДокумент.НомерДокумента, "ЧДЦ=; ЧГ=0");
		ОбластьШапка.Параметры.ДатаДокумента = Формат(ВыборкаДокумент.ДатаДокумента, "ДФ=dd.MM.yyyy");
		
		ТабДок.Вывести(ОбластьШапка);
		
		ВыборкаДетальныеЗаписи = ВыборкаДокумент.Выбрать();
		
		Счетчик = 0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Счетчик = Счетчик + 1;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			ОбластьСтрока.Параметры.НомерДокумента = Формат(ВыборкаДокумент.НомерДокумента, "ЧДЦ=; ЧГ=0");
			ОбластьСтрока.Параметры.НомерСтроки = Счетчик;
			ТабДок.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		ИмяФайлаВложения = КаталогВременныхФайлов() + "Распоряжение на перемещение.xls";
		ТабДок.Записать(ИмяФайлаВложения, ТипФайлаТабличногоДокумента.XLS);		
		
		
		// Отправляем письмо
		Получатели = Новый Массив;
		Получатели.Добавить(ВыборкаДокумент.ПочтаАптеки);
		Получатели.Добавить(ВыборкаДокумент.ПочтаУправляющего);
		
		ТемаПисьма = "Распоряжение на перемещение №" + Формат(ВыборкаДокумент.НомерДокумента, "ЧДЦ=; ЧГ=0");
		
		ТекстПисьма = 		
		"Добрый день.<BR />"	
		
		+ "Данным распоряжением необходимо затребованный во вложении товар собрать к перемещению. " 
		+ "Вам необходимо в АРМ директора сформировать на основании данного распоряжения "
		+ "документ на перемещение товара.<BR />" 		
		
		+ "На данное перемещение в 1С создано распоряжение на перемещение товара! "
		+ "Перед проведением документа на перемещение в аптеке необходимо обязательно убедиться, "
		+ "что данное перемещение не дублирует одно из предыдущих!<BR />"
		
		+ "Перемещение осуществлять строго согласно действующего регламента!";
		
		Вложения = Новый Массив;
		Вложения.Добавить(ИмяФайлаВложения);
		
		Попытка
			ОМ_ТСО.ОтправитьПисьмо(Получатели, ТемаПисьма, "", ТекстПисьма, Вложения);
		Исключение
			Сообщить("Не удалось отправить сообщение аптеке. Ошибка:" + ОписаниеОшибки(), СтатусСообщения.Важное);
		КонецПопытки;
		
	КонецЦикла;  	

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаЗакуп = Товар.Итог("СуммаЗакуп");
	
	Если ЭтоНовый() Тогда
		ДокСсылка = ПолучитьСсылкуНового();	
		Если Не ЗначениеЗаполнено(ДокСсылка) Тогда
			ДокСсылка = Документы.УЗ_РаспоряжениеНаПеремещение.ПолучитьСсылку();	
			УстановитьСсылкуНового(ДокСсылка);
		КонецЕсли;
		Автор = ПараметрыСеанса.ТекущийСотр;
		ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(ДокСсылка, "Создание", ПараметрыСеанса.ТекущийСотр, "Создание нового документа");
	КонецЕсли;
	
	Если Не СозданВручную И Не ЗначениеЗаполнено(НомерЗаявкиЛК) Тогда
		Если Не ЗначениеЗаполнено(Номер) Тогда
			УстановитьНовыйНомер();
		КонецЕсли;
		
		НомерЗаявкиЛК = Номер;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ИзменитьСтатусВЛичномКабинете(Утвердить) Экспорт
		
	doc_number	= СокрЛП(НомерЗаявкиЛК);
	action		= Формат(Утвердить, "БЛ=0; БИ=1");
	exp_type	= ?(Утвердить, ВидЭкспедиции.Код, "");
	
	Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()),"-","");
	
	
	// Формируем файл отправки
	ИмяФайлаОтправки = ПолучитьИмяВременногоФайла("txt");
	
	ФайлОтправки = Новый ТекстовыйДокумент;
	ФайлОтправки.УстановитьТипФайла(КодировкаТекста.Системная);
	
	ФайлОтправки.ДобавитьСтроку("--" + Boundary);
	ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""doc_number""" + Символы.ПС);
	ФайлОтправки.ДобавитьСтроку(doc_number);
	
	ФайлОтправки.ДобавитьСтроку("--" + Boundary);
	ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""action""" + Символы.ПС);
	ФайлОтправки.ДобавитьСтроку(action);
	
	ФайлОтправки.ДобавитьСтроку("--" + Boundary);
	ФайлОтправки.ДобавитьСтроку("Content-Disposition: form-data; name=""exp_type""" + Символы.ПС);
	ФайлОтправки.ДобавитьСтроку(exp_type);
	
	ФайлОтправки.ДобавитьСтроку("--" + Boundary);
	
	ФайлОтправки.Записать(ИмяФайлаОтправки, КодировкаТекста.Системная);
	
	ФайлОтправки = Новый Файл(ИмяФайлаОтправки);
	РазмерФайлаОтправки = XMLСтрока(ФайлОтправки.Размер());
	
	
	// Отправляем запрос
	ЗаголовокHTTP = Новый Соответствие();
	ЗаголовокHTTP.Вставить("POST",				"/south_stream.php HTTP/1.1");
	ЗаголовокHTTP.Вставить("Host",				"green.366.ru");
	ЗаголовокHTTP.Вставить("Connection",		"close");
	ЗаголовокHTTP.Вставить("Content-Type",		"multipart/form-data; boundary=" + Boundary);
	ЗаголовокHTTP.Вставить("Content-Length",	РазмерФайлаОтправки);
	
	АдресСервера = "green.366.ru";
	РесурсНаСервере = "south_stream.php";
	
	Соединение = Новый HTTPСоединение(АдресСервера,,,,,,Новый ЗащищенноеСоединениеOpenSSL());
	
	ПостЗапрос = Новый HTTPЗапрос(РесурсНаСервере, ЗаголовокHTTP);
	ПостЗапрос.УстановитьИмяФайлаТела(ИмяФайлаОтправки);
	
	ФайлРезультата = ПолучитьИмяВременногоФайла();
	Соединение.ОтправитьДляОбработки(ПостЗапрос, ФайлРезультата);
	
	ТекстовыйФайлОтвет = Новый ТекстовыйДокумент;
	ТекстовыйФайлОтвет.Прочитать(ФайлРезультата, КодировкаТекста.UTF8);
	СтрокаОтветСервера = ТекстовыйФайлОтвет.ПолучитьТекст();
	СтрокаУспешно = "1";
	
	Если СтрокаОтветСервера = СтрокаУспешно Тогда
		Возврат Истина;
	Иначе
		Сообщить("Ответ сервера: " + СтрокаОтветСервера);
		Возврат Ложь;		
	КонецЕсли;
	
КонецФункции

Процедура СформироватьПечатнуюФорму()
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.РазмерКолонтитулаСверху = 0;
	ТабДок.РазмерКолонтитулаСнизу = 0;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ОтображатьСетку = Ложь;  	
	
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РНП";
				
	Макет = ПолучитьМакет("МакетРаспоряжения");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РаспоряжениеНаПеремещениеТовар.Ссылка КАК Документ,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.Номер КАК НомерДокумента,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.Дата КАК ДатаДокумента,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.Склад.Наименование КАК НаименованиеАптеки,
	|	РаспоряжениеНаПеремещениеТовар.Ссылка.СкладПолучатель.Наименование КАК НаименованиеПолучателя,
	|	РаспоряжениеНаПеремещениеТовар.Товар.Код КАК КодТовара,
	|	РаспоряжениеНаПеремещениеТовар.Товар.Наименование КАК НаименованиеТовара,
	|	РаспоряжениеНаПеремещениеТовар.Количество КАК Количество,
	|	РаспоряжениеНаПеремещениеТовар.Товар.Холодильник КАК Холод
	|ИЗ
	|	Документ.УЗ_РаспоряжениеНаПеремещение.Товар КАК РаспоряжениеНаПеремещениеТовар
	|ГДЕ
	|	РаспоряжениеНаПеремещениеТовар.Ссылка = &Ссылка
	|ИТОГИ ПО
	|	Документ";

	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДокумент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 	
	ВыборкаДокумент.Следующий();
	                    		
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ОбластьШапка.Параметры.Заполнить(ВыборкаДокумент);
	ОбластьШапка.Параметры.ДатаДокумента = Формат(ВыборкаДокумент.ДатаДокумента, "ДФ=dd.MM.yyyy");
	
	ТабДок.Вывести(ОбластьШапка);
	
	ВыборкаДетальныеЗаписи = ВыборкаДокумент.Выбрать();
	
	ч = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 		
		ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ОбластьСтрока.Параметры.НомерСтроки = ч;
		ТабДок.Вывести(ОбластьСтрока);
		
		ч = ч + 1;
		
	КонецЦикла;
	  
	
	ПутьКФайлу = ПолучитьИмяВременногоФайла("xls");
	ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLS);
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКФайлу); 			
	ДанныеСтрока = Base64Строка(ДвоичныеДанные);
	
	МЗ = РегистрыСведений.СформированныеПечатныеФормы.СоздатьМенеджерЗаписи();
	МЗ.Документ = ЭтотОбъект.Ссылка;
	МЗ.ТипФормы = 1;
	МЗ.ТипФайла = 1;
	МЗ.ДанныеФормы = ДанныеСтрока;
	МЗ.Сформировать = Ложь;
	МЗ.Записать();
	
	Попытка
		УдалитьФайлы(ПутьКФайлу);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	ЗаписыватьВИсторию = Истина;
	
	Если Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.Зарегистрирован Тогда		
		Действие = "Регистрация";
		КомментарийДействия = "Регистрация документа в ЛК";
	ИначеЕсли Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.Собран Тогда		
		Действие = "Подготовка";
		КомментарийДействия = "Подготовлен аптекой к отправке";
	ИначеЕсли Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.Подтвержден Тогда		
		Действие = "Утверждение";
		КомментарийДействия = "Утвержден менеджером";
	ИначеЕсли Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.Отклонен Тогда		
		Действие = "Аннулирование";
		КомментарийДействия = "Документ аннулирован";
	ИначеЕсли Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.НазначенВодитель Тогда		
		Действие = "Назначение водителя";
		КомментарийДействия = "Назначен водитель";
	ИначеЕсли Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.Вывезен Тогда		
		Действие = "Вывоз товара";
		КомментарийДействия = "Вывезен из аптеки-отправителя";
	ИначеЕсли Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.Доставлен Тогда		
		Действие = "Доставка товара";
		КомментарийДействия = "Доставлен в аптеку-получатель";
	ИначеЕсли Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.Принят Тогда		
		Действие = "Приемка";
		КомментарийДействия = "Принят получателем";
	ИначеЕсли Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.НеПринят Тогда		
		Действие = "Приемка";
		КомментарийДействия = "Отклонен получателем";
	ИначеЕсли Статус = Перечисления.СтатусыРаспоряженийНаПеремещение.Проверен Тогда		
		Действие = "Проверка";
		КомментарийДействия = "Проверен";
	Иначе
		ЗаписыватьВИсторию = Ложь;
	КонецЕсли;
	
	Если ЗаписыватьВИсторию Тогда
		ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(ЭтотОбъект.Ссылка, Действие, ПараметрыСеанса.ТекущийСотр, КомментарийДействия);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если Статус <> Перечисления.СтатусыРаспоряженийНаПеремещение.Создан
		И Статус <> Перечисления.СтатусыРаспоряженийНаПеремещение.Отклонен Тогда
		
		Отказ = Истина;
		#Если Клиент Тогда
			Сообщить("Документ зарегистрирован в ЛК. Изменения не сохранены.");
		#КонецЕсли
		
	КонецЕсли;
	
КонецПроцедуры
