Перем НеДаватьОткрыватьФорму Экспорт;
Перем ECR;

//============================================================================ GtG ===
Процедура ДвижениеТОвара()  
	
	ДТ= ЭтотОбъект.Движения.ПартииЖНВЛС;
	
	Для каждого Стр из ТОвар Цикл
		
		СтрДТ=ДТ.Добавить();
		
		СтрДТ.ВидДвижения=ВидДвиженияНакопления.Расход;
		СтрДТ.ВидОперации=Перечисления.ВидыОпераций.ПродажаТМЦ;
		СтрДТ.Активность=Истина;
		СтрДТ.Колво=Стр.Количество*Стр.К;
		СтрДТ.Партия=Стр.Партия;
		СтрДТ.Период=Дата;
		СтрДТ.Регистратор= ЭтотОбъект.Ссылка;
		СтрДТ.Склад= Аптека;
		СтрДТ.СтавкаНДС=Стр.СтавкаНДС;
		СтрДТ.СуммаЗакупСНДС=Стр.СуммаЗакуп;
		СтрДТ.СуммаНДСЗакуп=Стр.НДСЗакуп;
		СтрДТ.СуммаРознНДС=Стр.СуммаНДС;
		СтрДТ.СуммаРознСНДС=Стр.Сумма;
		СтрДТ.Товар=Стр.Товар;
		СтрДТ.Фирма= Фирма; 
	КонецЦикла;	
	
	//Движения.ПартииЖНВЛС.Записать();
КонецПроцедуры

//============================================================================ GtG ===


//==========================================================GtG====
Процедура ДвижениеДисконта ()  Экспорт
	//----------------------------------
	//Назначение:
	//  
	//  
	//  по регистру   ДисконтныеКарты
	//  
	//----------------------------------
	
	Для каждого Стр из Дисконт Цикл
		ДВ=Движения.ДисконтныеКарты.Добавить();
		
		ДВ.Активность=Истина;
		//ДВ.ВидДвижения=ВидДвиженияНакопления.Приход;
		ДВ.Колво=Стр.Количество*Стр.К;
		ДВ.НомерДК=СокрЛП(Стр.Карта);
		ДВ.Период=Дата;
		ДВ.Регистратор= ЭтотОбъект.Ссылка;
		ДВ.СуммаРознСоСк=Стр.СуммаСоСкидкой;
		ДВ.СуммаСкидки=Стр.СуммаСкидки;
		ДВ.Товар=Стр.Товар;
		
		//---------------<Дисконт по партиям>---------------------------// GtG // 30.05.2012 11:08:47 
		ДВ=Движения.ДисконтПоПартиям.Добавить();// обороты
		
		ДВ.Активность=Истина;
		ДВ.Период=Дата;
		ДВ.Регистратор= ЭтотОбъект.Ссылка;
		
		ДВ.Товар=Стр.Товар;
		ДВ.Склад     =Аптека ;
		ДВ.Партия    =Стр.Партия ;
		ДВ.СтавкаНДС =Стр.Партия.СтавкаНДС;
		ДВ.Фирма     =Фирма ;
		ДВ.НомерДК=СокрЛП(Стр.Карта);
		
		ДВ.Колво=Стр.Количество*Стр.К;
		ДВ.СуммаСоСкидкой=Стр.СуммаСоСкидкой;
		ДВ.СуммаСкидки=Стр.СуммаСкидки;
		

		
	КонецЦикла;	
	
	//Движения.ДисконтныеКарты.Записать();
	
	
	
	
КонецПроцедуры	//ДвижениеДисконта
//==========================================================GtG====

Процедура ДвижениеПродажПоТипамДляЦО() Экспорт
	 тхт="ВЫБРАТЬ
	     |	РеализацияККМТовар.Товар.ТипДляЦО,
	     |	СУММА(РеализацияККМТовар.СуммаЗакуп) КАК СуммаЗакуп,
	     |	СУММА(РеализацияККМТовар.Сумма) КАК Сумма,
	     |	РеализацияККМТовар.Ссылка
	     |ПОМЕСТИТЬ Товар
	     |ИЗ
	     |	Документ.РеализацияККМ.Товар КАК РеализацияККМТовар
	     |ГДЕ
	     |	РеализацияККМТовар.Ссылка = &Ссылка
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	РеализацияККМТовар.Товар.ТипДляЦО,
	     |	РеализацияККМТовар.Ссылка
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |ВЫБРАТЬ
	     |	РеализацияККМДисконт.Товар.ТипДляЦО,
	     |	РеализацияККМДисконт.Ссылка,
	     |	СУММА(РеализацияККМДисконт.СуммаСкидки) КАК СуммаСкидки
	     |ПОМЕСТИТЬ Скидка
	     |ИЗ
	     |	Документ.РеализацияККМ.Дисконт КАК РеализацияККМДисконт
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	РеализацияККМДисконт.Товар.ТипДляЦО,
	     |	РеализацияККМДисконт.Ссылка
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |ВЫБРАТЬ
	     |	Товар.ТоварТипДляЦО,
	     |	СУММА(Товар.СуммаЗакуп) КАК СуммаЗакуп,
	     |	СУММА(Товар.Сумма - ЕСТЬNULL(Скидка.СуммаСкидки, 0)) КАК СуммаСоСкидкой,
	     |	СУММА(Товар.Сумма) КАК Сумма,
	     |	СУММА(ЕСТЬNULL(Скидка.СуммаСкидки, 0)) КАК Скидка
	     |ИЗ
	     |	Товар КАК Товар
	     |		ЛЕВОЕ СОЕДИНЕНИЕ Скидка КАК Скидка
	     |		ПО Товар.Ссылка = Скидка.Ссылка
	     |			И Товар.ТоварТипДляЦО = Скидка.ТоварТипДляЦО
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	Товар.ТоварТипДляЦО
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |УНИЧТОЖИТЬ Скидка
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |УНИЧТОЖИТЬ Товар" ;
		 
		 
		 
		 //-------------------- Запрос by GtG -----------------------
		 // Назначение: Выборка из табличных частей документа для записи в регистр
		 //----------------------------------------------------------
		 
		 Запрос=Новый Запрос;
		 Запрос.Текст=ТХТ;
		 
		 Запрос.Параметры.Вставить("Ссылка", ЭтотОбъект.Ссылка);
		 
		 ТЗ=Запрос.Выполнить().Выгрузить();
		 
		 Для каждого  Стр Из ТЗ  Цикл
		 	Движение=Движения.ПродажиПоТипамДляЦО.Добавить();
			
			Движение.Активность=Истина;
			Движение.Период=Дата;
			Движение.Регистратор= ЭтотОбъект.Ссылка;
			Движение.Склад=Аптека;
			Движение.СуммаЗакупочная=Стр.СуммаЗакуп;
			Движение.СуммаПродажСоСкидкой= Стр.СуммаСоСкидкой;
			Движение.СуммаСкидки=стр.Скидка;
			Движение.ТипДляЦО=Стр.ТоварТипДляЦО;
		 КонецЦикла; 
		 
		 
		 
	//	Движения.ПродажиПоТипамДляЦО.Записать(); 
		 
		 
		 
		 
		 
		 //----------------------------------------------------------
		 
		 
	
КонецПроцедуры  

 
Функция ПробитьНаФР()
	
		
	Попытка
		ЗагрузитьВнешнююКомпоненту("C:\Program Files (x86)\1cv82\common\DLL\FPRNM1C.dll");
		ECR = Новый("AddIn.FprnM45");
		СостояниеККМ="ККМ:Подключена";
		
	исключение
		
		СостояниеККМ="ККМ:НЕ ПОДКЛЮЧЕНА!!!";
		Возврат Ложь;
		
	конецпопытки;

	
	Если НомерЗаказа=0 Тогда
		Предупреждение("Не указан номер заказа!");
		Возврат ложь;
	КонецЕсли;	
	
	
	Если   ЧекПробитНаККМ=Истина ТОгда
		Состояние("Этот возврат пробит на ККМ!");
		Возврат ложь;
	КонецЕсли;	
	
	Если Товар.Количество()=0 Тогда
		ПРедупреждение("Нет товара для пробития в чек!");
		Возврат ложь;
	КонецЕсли;	
	
	
	
	ТекущийЧек=ЭтотОбъект; // чтоб дальше не переписывать много, ибо текст процедуры потырен из обработки
	
	
	
	СтрИзм=ТекущийЧек.Изменения.Добавить();
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.КомментарийИзменения="Возврат отправлен на ККМ";
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
	
	Для Ы=1 По 20 Цикл
		Попытка
			ТекущийЧек.Записать(РежимЗаписиДокумента.Запись);
			Прервать;
		Исключение
			ПРедупреждение("Блокировка, ждем 3 сек и пробуем еще раз записать документ...",3);
		КонецПопытки;
	КонецЦикла;	
	
	
	//---------------<пробиваем чек на ККМ>---------------------------// GtG // 26.07.2012 12:57:07
	
	
	
	
	
	ECR.DeviceEnabled = 1;
	Если ECR.ResultCode <> 0 тогда
		Предупреждение("Нет связи с фискальным регистратором!");
		Возврат ложь;
	КонецЕсли;
	
	// получаем состояние ККМ
	ГетСтатус=ECR.GetStatus() ;
	Если ГетСтатус <> 0 тогда
		Предупреждение("Неверное состояние ККМ ! Код ошибки "+ГетСтатус);
		Возврат ложь;
	КонецЕсли;
	
	//// проверяем на всякий случай ККМ на фискализированность , а вот это похер
	//  Если ECR.Fiscal = 1 тогда
	//	Если Вопрос("ККМ фискализирована! Вы действительно хотите продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет тогда
	//	  Возврат;
	//	КонецЕсли;
	//  КонецЕсли;
	
	
	ECR.Password = 30;
	ECR.Mode = 1;
	КодОшибки=ECR.SetMode();
	
	Если КодОшибки<>0 Тогда
		ПРедупреждение("Не удалось войти в режим регистрации! Код ошибки ККМ "+КодОшибки);
		Возврат ложь;
	КонецЕсли;
	
	
	
	
	
	
	// если есть открытый чек, то отменяем его
	Если ECR.CheckState <> 0 тогда
		Если ECR.CancelCheck() <> 0 тогда
			ПРедупреждение("На ККМ был открытый чек и не удалось его отменить!");
			Возврат ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущийЧек.ДокументОснование.Пустая() Тогда
		НомерЗаказаДляЧека=НомерЗаказа;
	Иначе
		НомерЗаказаДляЧека=""+ТекущийЧек.ДокументОснование.ТипИсточника+"-"+ТекущийЧек.ДокументОснование.НомерЗаказа;
	КонецЕСли;
	
	
	

		ECR.TextWrap=1;
		ECR.Caption= "Возврат по заказу № "+ТекущийЧек.ТипИсточника+"-"+ТекущийЧек.НомерЗаказа;
		ECR.PrintString();

		ECR.TextWrap=0;
		ECR.Caption= "--------------------------";
		ECR.PrintString();


	
	
	Для каждого стр из Товар цикл
		//Секции 0%=1 10%=2 18%=3
		Если Стр.СтавкаНДС.Ставка=0 Тогда
			Department=1;
		ИначеЕсли Стр.СтавкаНДС.Ставка=10 Тогда	
			Department=2;
		ИначеЕсли Стр.СтавкаНДС.Ставка=18 Тогда	
			Department=3;
		КонецЕсли;	
		
		
		
		
		// продажа без сдачи
		// регистрация продажи
		
		ECR.TextWrap=1;
		ECR.Caption= СокрЛП(Стр.Товар.Наименование);
		ECR.PrintString();
		
		ECR.Name = СокрЛП(Стр.Партия.Наименование);
		ECR.Price = Стр.Сумма/стр.Количество;  //(-/- = +)
		ECR.Quantity = -Стр.Количество;
		ECR.Department = Department;
		КодОшибки=ECR.Return();
		Если КодОшибки <> 0 тогда
			Предупреждение("Не удалось пробить товар "+Стр.Товар+" партия "+Стр.партия+" Ошибка ККМ "+КодОшибки);
			Возврат ложь;
		КонецЕсли;
		
		//Если Стр.Скидка<>0 Тогда
		//	// скидка суммой на предыдущую позицию
		//	ECR.summ = Стр.Скидка;
		//	ECR.Destination = 1; // 1-на строку, 0- на весь чек
		//	ECR.DiscountTypeNumber=0;
		//	КодОшибки=ECR.SummDiscount() ;
		//	Если КодОшибки<> 0 тогда
		//		Предупреждение("Не удалось дать скидку на строку товар "+Стр.Товар+" партия "+Стр.партия+" Ошибка ККМ "+КодОшибки);
		//		Возврат;
		//	КонецЕсли;
		//КонецЕсли;
		
		
		
	КонецЦикла;	
	
	//---------------<Пробиваем доставку, если есть>---------------------------// GtG // 31.07.2012 18:28:03
	
			
	Для Каждого СтрУ из АвансыПоУслугам Цикл
		
		//СтрокаДоставки=ТекущийЧек.АвансыПоУслугам.Добавить();
		//
		//СтрокаДоставки.ВидОперации =Перечисления.ВидыОперацийСАвансамиПоУслугам.Реализация;
		//СтрокаДоставки.ТипОплаты   =Перечисления.ТипыОплаты.Наличными;
		//СтрокаДоставки.НомерЗаказа =ТекущийЧек.НомерЗаказа;
		//СтрокаДоставки.ДатаЗаказа  =ТекущийЧек.ДатаЗаказа;
		//СтрокаДоставки.Сумма      = ТарифыПоДоставке.Цена;
		////СтрокаДоставки.Касса      =
		////СтрокаДоставки.ЗетОчет
		//СтрокаДоставки.СтавкаНДС = ТарифыПоДоставке.СтавкаНДС;
		//СтрокаДоставки.СуммаНДС  = Окр(ТарифыПоДоставке.Цена/(100+ТарифыПоДоставке.СтавкаНДС.ставка)*ТарифыПоДоставке.СтавкаНДС.ставка,2);
		//СтрокаДоставки.Услуга   =ТарифыПоДоставке;
		
		ECR.TextWrap=1;
		ECR.Caption= СокрЛП(СтрУ.Услуга);
		ECR.PrintString();
		
		ECR.Name = СокрЛП(СтрУ.Услуга.ШтрихКод);
		ECR.Price = -СтрУ.Сумма;
		ECR.Quantity = 1;
		ECR.Department = СтрУ.Услуга.КатегорияУслуги.НомерСекцииККМ;
		КодОшибки=ECR.Return();
		Если КодОшибки <> 0 тогда
			Предупреждение("Не удалось пробить доставку "+СтрУ.Услуга+" Ошибка ККМ "+КодОшибки);
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;	
		
				
			
	//	Тип закрытия чека: TypeClose
	//0 – наличными;
	//1 – тип оплаты 1;
	//2 – тип оплаты 2;
	//3 – тип оплаты 3;
	//4 – тип оплаты 4;
	//5 – тип оплаты 5.
	
	ECR.RegisterNumber=19; // 19  === Режим работы ККМ,(Mode, AdvancedMode).,Номер текущего чека (CheckNumber), Состояние текущего чека(CheckState)
	                       //Сквозной номер документа (DocNumber). 
	ECR.GetRegister();
	ТекущийЧек.НомерЧекаВозврата=ECR.CheckNumber;
	ТекущийЧек.НомерДокументаВозврата=ECR.DocNumber;
	
	ECR.RegisterNumber=22; //22 Заводской номер ККМ (SerialNumber).
	ECR.GetRegister();
	ТекущийЧек.СерийныйНомер=ECR.SerialNumber;
	
	ECR.RegisterNumber=21; //21 Номер смены (Session):
	ECR.GetRegister();
	ТекущийЧек.НомерСмены=ECR.Session;
	
	
	
	
		
	ТекущийЧек.ДатаСмены=ТекущаяДата();
	
	
	
	ECR.TypeClose = 0;
	КодОшибки=ECR.CloseCheck();
	Если КодОшибки <> 0 тогда
		ПРедупреждение("Не удалось пробить чек! Код ошибки "+КодОшибки);
		Возврат Ложь;
	КонецЕсли;
	
	
		
	
	
	
	//---------------<в случае успешного пробития чека >---------------------------// GtG // 26.07.2012 12:54:52
	
	ТекущийЧек.ЧекПробитНаККМ=Истина;
	
	СтрИзм=ТекущийЧек.Изменения.Добавить();
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.КомментарийИзменения="Чек пробит на ККМ";
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
	
	
	Для Ы=1 По 20 Цикл
		Попытка
			ТекущийЧек.Записать(РежимЗаписиДокумента.Проведение);
			Прервать;
		Исключение
			ПРедупреждение("Блокировка, ждем 3 сек и пробуем еще раз провести чек...",3);
		КонецПопытки;
	КонецЦикла;	

	
	
	
	
	
	
	//Если ТекущийЧек.ДокументОснование.Пустая()=Ложь  Тогда
	//	Заказ=ТекущийЧек.ДокументОснование.ПолучитьОбъект();
	//	Заказ.ЧекПробит=Истина; 
	//	Заказ.Курьер=Курьер;
	//	Заказ.СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.ВПути;
	//	Заказ.Записать(РежимЗаписиДокумента.Проведение);
	//КонецЕсли;	
		
	
       ВОзврат Истина;
	

	
КонецФункции	


Процедура СторноДолгаКурьера()
	    Движения.УчетДенегВИнтернетАптеке.Очистить();
	
	
		  // долг вешается на курьера когда заказ в пути или оплачен и когда пробит чек.  
		  // но возвращается обратно после закрытия смены, поэтому нужно перепроводить заказы при закрытии смены по чекам
		  ДДВА=Движения.УчетДенегВИнтернетАптеке.Добавить();
		  
	      ДДВА.Активность=Истина;
		  ДДВА.ВидДвижения=ВидДвиженияНакопления.Приход;
		  ДДВА.ЗаказОтПокупателя=ЭтотОбъект.ДокументОснование;
		  ДДВА.Курьер=ЭтотОбъект.ДокументОснование.Курьер;
		  ДДВА.Период=Дата;
		  ДДВА.Регистратор=ЭтотОбъект.ДокументОснование;
		  ДДВА.Сумма= товар.Итог("Сумма");
		  ДДВА.Фирма=ЭтотОбъект.ДокументОснование.Склад.Фирма;
	      ДДВА.Склад=ЭтотОбъект.ДокументОснование.Склад;
	  
	
	
	
	Движения.УчетДенегВИнтернетАптеке.Записать();

	
КонецПроцедуры	


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	#IF CLIENT Then
		ОчиститьСообщения(); 
	#ENDIF
	
	Если Товар.Количество()=0 Тогда
		Отказ=Истина;
		Предупреждение("Чек без товара не проводится!",2);
		Возврат;
	КонецЕсли;	
		
		
		ДвижениеТОвара();
		
		ДвижениеДисконта();
		
		ДвижениеПродажПоТипамДляЦО();
		
		СторноДолгаКурьера();
		
	    ОМ12_КопияДвиженийПартийВРегистрПоСтавкамНДС(ЭтотОбъект,Движения.ПартииЖНВЛС.Выгрузить());
		
		Для Каждого Движение Из Движения Цикл
			Движение.Записать();
		КонецЦикла;	
		
		ПробитьНаФР();
		
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения) 
	
	ЭтотОбъект.СуммаСоСкидкой=Товар.Итог("Сумма") - Дисконт.Итог("СуммаСкидки")+АвансыПоУслугам.Итог("Сумма");

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения= Неопределено Тогда
		Предупреждение("Создавать документ можно только на основании Чека ККМ!");
		СтандартнаяОбработка=Ложь;
		НеДаватьОткрыватьФорму=Истина;
		Возврат;
    КонецЕсли;
	
	
	Если ДанныеЗаполнения.ЧекПробитНаККМ=Ложь тогда
		ПРедупреждение("Этот чек не пробит на ккм, нельзя по нему вернуть");
		СтандартнаяОбработка=Ложь;
		НеДаватьОткрыватьФорму=Истина;
		Возврат;
	КонецЕсли;
	
	Если ДанныеЗаполнения.СменаЗакрыта=Истина Тогда
		Предупреждение("Эта смена уже закрыта! 
						|Нельзя вернуть товар через фискальный регистратор. 
						|Используйте возврат от покупателя");
		СтандартнаяОбработка=Ложь;
		НеДаватьОткрыватьФорму=Истина;
		Возврат;
	КонецЕсли;	
	
	
	
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЧекПродажи") Тогда
		// Заполнение шапки
		Аптека = ДанныеЗаполнения.Аптека;
		ДатаЗаказа = ДанныеЗаполнения.ДатаЗаказа;
		ДатаСмены = ДанныеЗаполнения.ДатаСмены;
		ДокументОснование = ДанныеЗаполнения.ДокументОснование;
		НомерДокумента = ДанныеЗаполнения.НомерДокумента;
		НомерЗаказа = ДанныеЗаполнения.НомерЗаказа;
		НомерСмены = ДанныеЗаполнения.НомерСмены;
		НомерЧека = ДанныеЗаполнения.НомерЧека;
		Пользователь = ДанныеЗаполнения.Пользователь;
		СерийныйНомер = ДанныеЗаполнения.СерийныйНомер;
		СменаЗакрыта = ДанныеЗаполнения.СменаЗакрыта;
		ВозвращаемыйЧек = ДанныеЗаполнения.Ссылка;
		СуммаСоСкидкой = ДанныеЗаполнения.СуммаСоСкидкой;
		ТипИсточника = ДанныеЗаполнения.ТипИсточника;
		Фирма = ДанныеЗаполнения.Фирма;
		ЧекПробитНаККМ = ложь;
		Для Каждого ТекСтрокаАвансыПоУслугам Из ДанныеЗаполнения.АвансыПоУслугам Цикл
			НоваяСтрока = АвансыПоУслугам.Добавить();
			НоваяСтрока.ВидОперации = ТекСтрокаАвансыПоУслугам.ВидОперации;
			НоваяСтрока.ДатаЗаказа = ТекСтрокаАвансыПоУслугам.ДатаЗаказа;
			НоваяСтрока.ЗетОчет = ТекСтрокаАвансыПоУслугам.ЗетОчет;
			НоваяСтрока.Касса = ТекСтрокаАвансыПоУслугам.Касса;
			НоваяСтрока.НомерЗаказа = ТекСтрокаАвансыПоУслугам.НомерЗаказа;
			НоваяСтрока.СтавкаНДС = ТекСтрокаАвансыПоУслугам.СтавкаНДС;
			НоваяСтрока.Сумма = -ТекСтрокаАвансыПоУслугам.Сумма;
			НоваяСтрока.СуммаНДС = -ТекСтрокаАвансыПоУслугам.СуммаНДС;
			НоваяСтрока.ТипОплаты = ТекСтрокаАвансыПоУслугам.ТипОплаты;
			НоваяСтрока.Услуга = ТекСтрокаАвансыПоУслугам.Услуга;
		КонецЦикла;
		Для Каждого ТекСтрокаДисконт Из ДанныеЗаполнения.Дисконт Цикл
			НоваяСтрока = Дисконт.Добавить();
			НоваяСтрока.К = ТекСтрокаДисконт.К;
			НоваяСтрока.Карта = ТекСтрокаДисконт.Карта;
			НоваяСтрока.Количество = ТекСтрокаДисконт.Количество;
			НоваяСтрока.Партия = ТекСтрокаДисконт.Партия;
			НоваяСтрока.СуммаСкидки = -ТекСтрокаДисконт.СуммаСкидки;
			НоваяСтрока.СуммаСоСкидкой = -ТекСтрокаДисконт.СуммаСоСкидкой;
			НоваяСтрока.Товар = ТекСтрокаДисконт.Товар;
		КонецЦикла;
		Для Каждого ТекСтрокаТовар Из ДанныеЗаполнения.Товар Цикл
			НоваяСтрока = Товар.Добавить();
			НоваяСтрока.ЕИТ = ТекСтрокаТовар.ЕИТ;
			НоваяСтрока.К = ТекСтрокаТовар.К;
			НоваяСтрока.Количество = -ТекСтрокаТовар.Количество;
			НоваяСтрока.НДСЗакуп = -ТекСтрокаТовар.НДСЗакуп;
			НоваяСтрока.Партия = ТекСтрокаТовар.Партия;
			НоваяСтрока.СтавкаНДС = ТекСтрокаТовар.СтавкаНДС;
			НоваяСтрока.Сумма = -ТекСтрокаТовар.Сумма;
			НоваяСтрока.СуммаЗакуп = -ТекСтрокаТовар.СуммаЗакуп;
			НоваяСтрока.СуммаНДС = -ТекСтрокаТовар.СуммаНДС;
			НоваяСтрока.Товар = ТекСтрокаТовар.Товар;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры



НеДаватьОткрыватьФорму=Ложь;



