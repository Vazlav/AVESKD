Перем ДокИзФормы Экспорт;
Перем АвтозапускРасценкиИзФормы Экспорт;

Перем ТЗКосяков;
Перем ИспользоватьЦеныКонкурентов;
Перем ДокОбъект Экспорт;
Перем ТЗМатрицаОгруглений Экспорт;

//==================<КУЧЕРЯВОЕ ЦЕНООБРАЗОВАНИЕ>===================GtG====22.11.2007
//расчет цен ведется на самую мелкую единицу измерения
//чтобы процент наценки не превышал максимальный лимит:
//	округление по верхнему пределу в меньшюу сторону
//	округление по нижнему лимиту в большую сторону
//тогда цена всегда будет в допустимо мдиапазоне
//и для укрупненных единиц измерени явсегда будет делиться нацело, без длинны ххвостов
//	Для товаров цена которых меньше константы минимальная цена округления округляе мцену до 1-й копейки
//		если цена больше константы - округляем до 5 или 10 копеек ,
//			что указано в константе метод округления розн. цены
// после асрчета цены (на 1) она умножается на коэффициент единицы из документа
//
// алгоритмы , условия их применения и необходимые для расечта параметры описываются в справочнике АлгоритмыЦенообразованияРегионов
// подчиненном справочнику Регионы
//
// Цена рассчитывается на единицу измерения с коэффициентом =1, при этом цена более крупной еит должна без дробей делиться на коэффициент.
// Если в документе использовалась ЕИТ с К<>1 цо единичную цену умножаем на К

Перем КоличествоОшибокРАсценки;

Перем ДанныеТекПартии; // для поиска спецЦены по строке документа. 


//==========================================================GtG====
Процедура АвтозапускРасценкиТовара ()  
	//----------------------------------
	//Назначение:
	//  
	//  
	//  
	//  
	//----------------------------------
	ЭтаФорма.ОтключитьОбработчикОжидания("АвтозапускРасценкиТовара");
	ОсновныеДействияФормыРасценить("");
	КоманднаяПанель1СохранитьЦены("");
	
	КоманднаяПанель1Закрыть("");

КонецПроцедуры	//АвтозапускРасценкиТовара
//==========================================================GtG====

Функция КонтрольПоЗакупке(ТЧТовар,Регион)
	//----------------------------------
	//Назначение:
	// Перемещение товара - удаляем из ТЧТовар строки с розничной ценой получателя
	// Проверяет по каждой строке закупочную цену.  
	//  Берем последние 10 партий по товару отсортированые по цене в обратном порядке
	//  Из полученных берем первую -> МАКСЗакупЦена
	//  Текущая закуп цена  (ТЗЦ) должна быть <= МАКСЗакупЦена+МаксимальноДопустимыйПроцентОтклоненияОтПредыдущейЗакупочнойЦены%
	//        Если   ТЗЦ не удовлетворит этому условию - в комментарий документа пишем сообщение о том, что закупка по товару больше максимальной,
	//		         таки расценяем как получится, но документ не проводим (если раценка запущена при автоматической загрузке документа)
    //
	// ТАкже проверяет срок годности, должен быть больше чем константа.МинимальныйСрокГодности (дней)
	//	
	//	
	//----------------------------------
	//СписокИсключаемыхСтрок= Новый СписокЗначений; 
	
	
	ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Проверка закупочных цен...";
	
	
	ТЗКосяков = Новый ТаблицаЗначений;
	ТЗКосяков.Колонки.Добавить("Партия");
	ТЗКосяков.Колонки.Добавить("Товар");
	ТЗКосяков.Колонки.Добавить("Косяк");
	ТЗКосяков.Колонки.Добавить("ЦенаПоРасценке");

	
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.РаспоряжениеНаПереоценку") 
		 ИЛИ
		 ТипЗнч(Документ)=Тип("ДокументСсылка.ПерерасценкаТоваровНаСкладе") 
		 ИЛИ 
		 ТипЗнч(Документ)=Тип("ДокументСсылка.ПерерасценкаТоваров")
		Тогда
		Возврат ТЗКосяков;	// распоряжения на переоценку не контролируем
	КонецЕсли;		
	
	
	ДокДата=КонецДня(Документ.Дата);
	МинСГ=	Константы.МинимальныйСрокГодности.Получить();
	
	ВидДок=Документ.МЕТАДАННЫЕ().Имя;

	
	Запрос=Новый Запрос;
		
		
	ТХТ = "ВЫБРАТЬ
	      |	ИсторияЗакупочнойЦены.Товар,
	      |	СРЕДНЕЕ(ИсторияЗакупочнойЦены.Цена) КАК МаксЗакупЦена
	      |ИЗ
	      |	РегистрСведений.ИсторияЗакупочнойЦены КАК ИсторияЗакупочнойЦены
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ."+ВидДок+".Товар КАК ПоступлениеТовараТовар
	      |		ПО ИсторияЗакупочнойЦены.Товар = ПоступлениеТовараТовар.Товар
	      |			И (ПоступлениеТовараТовар.Ссылка = &Документ)
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ИсторияЗакупочнойЦены.Товар";
		
		
		
	
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("Документ",Документ);
	ТЗ=Запрос.Выполнить().Выгрузить();
	ТЗ.Индексы.Добавить("Товар");
	МаксПроцент = Константы.МаксимальноДопустимыйПроцентОтклоненияОтПредыдущейЗакупочнойЦены.Получить();
	Для каждого Стр из ТЧТОвар Цикл
		
			СтрокаМаксЦеныТОвара=ТЗ.Найти(Стр.Товар,"Товар");
		
		Если СтрокаМаксЦеныТОвара= Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		МаксЗакупЦена=СтрокаМаксЦеныТОвара.МаксЗакупЦена;
		
		Если МаксЗакупЦена=0 ТОгда
			Продолжить;
		КонецЕсли;	
		
		
		Если  Стр.КоличествоФакт=0 или Стр.Коэфф=0 ТОгда
			Продолжить;
		КонецЕсли;	
		
		
		
		Попытка
			ТЗЦ=Стр.СуммаЗакуп /(Стр.КоличествоФакт* Стр.Коэфф);
		Исключение
			ТЗЦ=Стр.ЦенаЗакуп; // для перерасценки 
		КонецПопытки;
		
		
		
		ПроцентПревышения= (ТЗЦ/МаксЗакупЦена-1)*100;
		
		Если ПроцентПревышения> МаксПроцент Тогда
			// значит товар закупили по цене превышающей предыдущую закупку
			// расценяем, и пишем в комментарий документа  строчку о товаре.
			// документ не проводим.
			
			Косяк=ТЗКосяков.Добавить();
			Косяк.Партия=Стр.Партия;
			Косяк.ТОвар=Стр.Товар;
			Косяк.Косяк="Превышение закупочной цены! "+ТЗЦ+" > "+МАКСЗакупЦена+" на "+ПроцентПревышения+"%";
		КонецЕсли;
		//-------------- ЗАПРОС GTG --------------------------КОНЕЦ
		
		
		//Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПоступлениеТовара") ТОгда
		//	//==================<Проверка срока годности>===================GtG====25.11.2008
		//	
		//	//-------------- ЗАПРОС GTG --------------------------НАЧАЛО
		//	//Назначение: Расчет миндаты
		//	//
		//	ТХТ="ВЫБРАТЬ
		//	|	РАЗНОСТЬДАТ( &ДокДата,&СрокГодности, ДЕНЬ) КАК РазницаДат";
		//	
		//	
		//	Запрос=Новый Запрос;
		//	Запрос.Текст=ТХТ;
		//	Запрос.УстановитьПараметр("ДокДата",ДокДата);
		//	Запрос.УстановитьПараметр("СрокГодности",КонецДня(Стр.Серия.СрокГодности));
		//	
		//	РазницаДат=Запрос.Выполнить().Выгрузить().Получить(0).РазницаДат;
		//	
		//	Если РазницаДат<=МинСГ Тогда
		//		Косяк=ТЗКосяков.Добавить();
		//		Косяк.Партия=Стр.Партия;
		//		Косяк.ТОвар=Стр.Товар;
		//		РазницаПо30ДневномуМесяцу=Окр(РазницаДат/30,0);
		//		Косяк.Косяк="Маленький срок годности! "+РазницаПо30ДневномуМесяцу+" мес.";
		//	КонецЕсли;
		//	
		//КонецЕсли;
		
	КонецЦикла;		
	
	Возврат ТЗКосяков;	
	
	
КонецФункции


Функция Условие_СодЗнач(Лево,Право)
	
	// Лево - это  либо ТЗ либо Неопределено
	// Право - Это одно значение
	
	
	
	
	
	Если Лево=Неопределено тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Лево.Найти(Право)= Неопределено Тогда
		Возврат Ложь; // нет там такого
	Иначе
		Возврат Истина;
	КонецЕсли;	
КонецФункции





Процедура ПриОткрытии()
	// Подставляем регион из склада или из константы
	// регион используется для расчета предельной наценки по ЖНВЛС / СВЛС
	// Запуск расценки Только из формы прихода товара(пока что)
	//------------------------------------------------------------------------
	
 	
	
	
	Попытка
		Документ=ЭтаФорма.ВладелецФормы.Ссылка;
		Если Документ.Склад.ТипСклада=Перечисления.ТипыМХ.Розн Тогда
			УстановитьрозничныеЦеныВДокументе=Истина;
		Иначе
			УстановитьрозничныеЦеныВДокументе=Ложь;
		КонецЕсли;	
		//ФинСкидка=ЭтаФорма.ВладелецФормы.ФинСкидка;
		ЭлементыФормы.ТП.ФиксацияСлева=2;
		ЭлементыФормы.Индикатор.Видимость=Ложь;
		//ЭлементыФормы.ТОварИндюк.Видимость=Ложь;
	Исключение
	КонецПопытки;
	
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПерерасценкаТоваровНаСкладе") ТОгда
		УстановитьрозничныеЦеныВДокументе=Ложь;
	КонецЕсли;
	
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПерерасценкаТоваров") ТОгда
		УстановитьрозничныеЦеныВДокументе=Истина;
		РасцениватьВсеСтрокиДокумента=Истина;
		ЗаписыватьЦеныВРегистрЦен=Ложь;
		//АвтоРасценка=Ложь;
		ПроверятьЗакупкуИРозницу = Ложь;
	КонецЕсли;
	
	
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПеремещениеТовара") ТОгда
		Если Документ.СкладПолучатель.ТипСклада=Перечисления.ТипыМХ.Опт ТОгда
			
			ПРедупреждение("Расценку товара на оптовом складе делают документом ПЕРЕРАСЦЕНКА ТОВАРА НА СКЛАДЕ!");
			ЭтаФорма.Закрыть();
			Возврат;
			
		Иначе
			
			ЭлементыФормы.ЗаписыватьЦеныВРегистрЦен.Доступность=Ложь;
			ЭлементыФормы.УстановитьрозничныеЦеныВДокументе.Доступность=Ложь;
			
			ЗаписыватьЦеныВРегистрЦен=Ложь;
			УстановитьрозничныеЦеныВДокументе=Истина;
			
			РегионСклада=Документ.СкладПолучатель.Регион;
			Склад=Документ.СкладПолучатель;
			
			КоманднаяПанель2неВыбратьВсеРег("");
			Для каждого Стр из ВыбРег Цикл
				Если Стр.Значение=РегионСклада ТОгда
					Стр.Пометка=Истина;
				КонецЕсли;	
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если АвтоРасценка = Ложь и ИспользоватьЦеныКонкурентов = Истина Тогда
		ЭлементыФормы.ТП.Колонки.МинимальнаяЦена.Видимость=Истина;
		ЭлементыФормы.ТП.Колонки.СредневзвешеннаяЦена.Видимость=Истина;
		ЭлементыФормы.ТП.Колонки.Конкурент.Видимость=Истина;
	Иначе
		ЭлементыФормы.ТП.Колонки.МинимальнаяЦена.Видимость=Ложь;
		ЭлементыФормы.ТП.Колонки.СредневзвешеннаяЦена.Видимость=Ложь;
		ЭлементыФормы.ТП.Колонки.Конкурент.Видимость=Ложь;
	КонецЕсли;	
	
	
	//==================<Регионы по авторасценке>===================GtG====21.11.2008
	Если АвтоРасценка=Истина ТОгда
		// только для поступления товара
		Документ=ДокОбъект.Ссылка;
		Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПеремещениеТовара") ТОгда
			РегионСклада=Документ.СкладПолучатель.Регион;
			Склад=Документ.СкладПолучатель;
		ИНаче
			РегионСклада=Документ.Склад.Регион;
			Склад=Документ.Склад;
		КОнецЕсли;
		
		
		Если ТипЗнч(Документ)=Тип("ДокументСсылка.РаспоряжениеНаПереоценку") ТОгда
              РасцениватьВсеСтрокиДокумента=Истина;
		КонецЕсли;	
		
		
		Если Склад.ТипСклада=Перечисления.ТипыМХ.Розн ТОгда  // только по региону аптеки
			
			Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПоступлениеТовара") ТОгда
				ЗаписыватьЦеныВРегистрЦен=Истина; // по приходам пишем в регистр цен
			КонецЕсли;	
			
			УстановитьрозничныеЦеныВДокументе=Истина;// по розничным складам цену пицем в документ
			
			КоманднаяПанель2неВыбратьВсеРег("");
			Для каждого Стр из ВыбРег Цикл
				Если Стр.Значение=РегионСклада ТОгда
					Стр.Пометка=Истина;
				КонецЕсли;	
			КонецЦикла;	
		Иначе
			КоманднаяПанель2ВыбратьВсеРЕг(""); // по всем регионам
		КонецЕсли;
		
		
		ВыводитьНеРасцененные=Ложь; // что расценится то и выведем
		
		ЭтаФорма.ПодключитьОбработчикОжидания("АвтозапускРасценкиТовара",1); // через секунду после открытия 
																			 // стартанет расценка товара
	КонецЕсли;
	//================================================GtG====КОНЕЦ==21.11.2008
	
	
	
КонецПроцедуры



//==========================================================GtG====
Функция ВеткаОшибокТОвара (ВеткаТОварПРов,ВеткаРОдитель,Текст)  
	//----------------------------------
	//Назначение:
	//  Определяет выведена ли ветка товара и если нет то создает ее
	//  
	//  
	//  
	//----------------------------------
	Если ВеткаТОварПРов= Неопределено ТОгда
		Рез=ВеткаРОдитель.Строки.Добавить();
		Рез.Ошибки=Текст.Ссылка;
	Иначе
		Рез=ВеткаТОварПРов;
	КонецЕсли; 
	
	Возврат Рез;	
	
КонецФункции	//ВеткаОшибокТОвара
//==========================================================GtG====


//==========================================================GtG====
Функция ПравильнаяФормулаРасчета (Знач ИсходнаяФормула)  
	//----------------------------------
	//Назначение:
	//  Приводит формулу расчета к идэальным сферическим единицам
	//  
	//  
	//  
	//----------------------------------
	
	Если Найти(ИсходнаяФормула,"АП_ГТТ.РозничнаяЦенаГТТ")<>0 Тогда
		// Делим цену АПГТТ на К ЕИТ, которая указана в АПГТТ
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"АП_ГТТ.РозничнаяЦенаГТТ","(АП_ГТТ.РозничнаяЦенаГТТ/АП_ГТТ.ЕИТ.К)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли; 
	
	
	Если Найти(ИсходнаяФормула,"Док.ЦенаПроизводителя")<>0 Тогда
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"Док.ЦенаПроизводителя","(Док.ЦенаПроизводителя/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли;	 
	
	
	Если Найти(ИсходнаяФормула,"Док.ЦенаЗакупБезНДС")<>0 Тогда
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"Док.ЦенаЗакупБезНДС","(Док.ЦенаЗакупБезНДС/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли; 
	
	Если Найти(ИсходнаяФормула,"(Док.ЦенаЗакуп)")<>0 Тогда	
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"(Док.ЦенаЗакуп)","((Док.ЦенаЗакуп)/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли;
	
	Если Найти(ИсходнаяФормула,"Док.ЦенаГосРегистрации")<>0 Тогда
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"Док.ЦенаГосРегистрации","(Док.ЦенаГосРегистрации/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли;
	
	Если СтрДлина(СокрЛП(ИсходнаяФормула))<5 тогда // а вдруг жестко задали цену? до 9999
		Попытка // а вдруг там просто число
			Ч=Число(ИсходнаяФормула);
			ИсходнаяФормула=ИсходнаяФормула+"/ДокЕитК";
		Исключение
			// бредовая идея
		КонецПопытки;	
	КонецЕсли; 
	
	Возврат ИсходнаяФормула;	
	
КонецФункции	//ПравильнаяФормулаРасчета
//==========================================================GtG====


//============================================================================ GtG ===
Процедура КомментаторРасчета  (ТОварОбъект,Таб,Макет,ИмяСекции,СтруктураПараметров="") 
	// Назначение:
	// Вывод, или не вывод , строки комментария расчета
	// 
	// 
	//--------------------------------------------------------------------------------
	Если  Комментировать=Ложь тогда
		ВОЗВРАТ ;
	КонецЕсли; 	
	
	
	Если ТОварОбъект<>Неопределено тогда // не гтт

	    Товар=ТОварОбъект.Ссылка;
	
			
		Если ПоТОвару.Пустая()=Ложь тогда
			Если Товар<>ПоТОвару.Ссылка тогда
				Возврат;
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЕсли; 
	
	//============================< Шаблон печати таблицы начало >================================GtG===
	Секция=Макет.ПолучитьОбласть(ИмяСекции); // тип Табличный документ
	//
	//СтруктураПарам= Новый  Структура;
	//СтруктураПарам.Вставить("Имя параметра как в макете","Значение параметра");
	//// .....
	// ... парам N
	Если СтруктураПараметров<>"" Тогда	
		Секция.Параметры.Заполнить(СтруктураПараметров); // заполняет данными из структуры (параметры и расшифровки), только те у которых имена совпадают
	КонецЕсли; 
	
		
	
	Если ИмяСекции="Регион" ТОгда   
		Попытка
			Таб.ЗакончитьГруппуСтрок();
		Исключение
			//Нет так нет...
		КонецПопытки; 
		Таб.Вывести(Секция); // аналог ВывестиСекцию v7.7
		Таб.НачатьГруппуСтрок(,);
	Иначе
		Таб.Вывести(Секция); // аналог ВывестиСекцию v7.7
	КонецЕсли;	

	
	//============================< Шаблон печати таблицы конец >================================GtG===
	
	
	
	
КонецПроцедуры
//============================================================================ GtG ===


//==========================================================GtG====
Функция ПолучитьТаблицуСтарыхРозничныхЦен (Дата,Склад,Регион,СписокСтрокДокумента,Документ)  
	//----------------------------------
	//Назначение:
	//  Список предыдущих расценок товаров из документа
	//----------------------------------
	
	ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Получаем таблицу Старых Розничных Цен...";

	
	ПериодВыборки=15;//дней
	
	КонецПериода=Дата-30;
	НачалоПериода = КонецПериода - 60*60*24*ПериодВыборки;
	
	ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
	
	
	ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	      |	ПоступлениеТовараТовар.Товар
	      |ПОМЕСТИТЬ ТаблицаТовараДокумента
	      |ИЗ
	      |	Документ."+ВидДок+".Товар КАК ПоступлениеТовараТовар
	      |ГДЕ
	      |	ПоступлениеТовараТовар.Ссылка = &Документ
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ЦеныСрезПоследних.АП,
	      |	ЦеныСрезПоследних.ЦенаРознГТТ,
	      |	МАКСИМУМ(ЦеныСрезПоследних.Период) КАК Период
	      |ПОМЕСТИТЬ БАЗА
	      |ИЗ
	      |	РегистрСведений.Цены КАК ЦеныСрезПоследних
	      |ГДЕ
	      |	ЦеныСрезПоследних.Период МЕЖДУ &НачалоПериода И &КонецПериода
	      |	И ЦеныСрезПоследних.РЕГИОН = &регион
	      |	И ЦеныСрезПоследних.АП В(&СписокТоваров)
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ЦеныСрезПоследних.АП,
	      |	ЦеныСрезПоследних.ЦенаРознГТТ
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	База.АП,
	      |	МАКСИМУМ(База.Период) КАК Период
	      |ПОМЕСТИТЬ РаспоследниеЦены
	      |ИЗ
	      |	БАЗА КАК База
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	База.АП
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ПартииЖНВЛСОстатки.Товар,
	      |	СУММА(ПартииЖНВЛСОстатки.КолвоОстаток) КАК КолвоОстаток,
	      |	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.ЕИТЗакупки.К КАК цена
	      |ПОМЕСТИТЬ ВыборкаОстатков
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	      |			,
	      |			Товар В (&СписокТоваров)
	      |				И Склад = &Склад) КАК ПартииЖНВЛСОстатки
	      |ГДЕ
	      |	ПартииЖНВЛСОстатки.КолвоОстаток > 0
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ПартииЖНВЛСОстатки.Товар,
	      |	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.ЕИТЗакупки.К
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	РаспоследниеЦены.АП,
	      |	РаспоследниеЦены.Период,
	      |	БАЗА.ЦенаРознГТТ
	      |ПОМЕСТИТЬ ПоследниеЦены
	      |ИЗ
	      |	РаспоследниеЦены КАК РаспоследниеЦены
	      |		ЛЕВОЕ СОЕДИНЕНИЕ БАЗА КАК БАЗА
	      |		ПО (БАЗА.АП = РаспоследниеЦены.АП)
	      |			И (БАЗА.Период = РаспоследниеЦены.Период)
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ТаблицаТовараДокумента.Товар КАК Товар,
	      |	ЕСТЬNULL(ВыборкаОстатков.КолвоОстаток, 0) КАК Остаток,
	      |isnull(	ЕСТЬNULL(ВыборкаОстатков.цена, ПоследниеЦены.ЦенаРознГТТ),0) КАК ПрошлаяЦена
	      |ИЗ
	      |	ТаблицаТовараДокумента КАК ТаблицаТовараДокумента
	      |		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеЦены КАК ПоследниеЦены
	      |		ПО ТаблицаТовараДокумента.Товар = ПоследниеЦены.АП
	      |		ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаОстатков КАК ВыборкаОстатков
	      |		ПО ТаблицаТовараДокумента.Товар = ВыборкаОстатков.Товар
		  |где isnull(	ЕСТЬNULL(ВыборкаОстатков.цена, ПоследниеЦены.ЦенаРознГТТ),0)>0
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ База
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ ВыборкаОстатков
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ РаспоследниеЦены
	      |;
	      |Уничтожить ТаблицаТовараДокумента
		  |;
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ ПоследниеЦены";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
	Запрос.УстановитьПараметр("Регион",Регион);
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("СписокТоваров",СписокСтрокДокумента);
	Запрос.УстановитьПараметр("Документ",Документ);
	
	ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Таблица Старых Розничных Цен получена...";

	
	Возврат Запрос.Выполнить().Выгрузить();
	
	
КонецФункции	//ПолучитьТаблицуСтарыхРозничныхЦен
//==========================================================GtG====

//==========================================================GtG====
Функция ПолучитьПрошлуюЦену (ТоварСсылка,Регион,ТаблицаСтарыхРозничныхЦен)  
	//----------------------------------
	//Назначение:
	//  Получает из таблицы предыдущую цену, или ноль если ничего нет
	//----------------------------------
	
		
	МассивНайденныхСтрок=ТаблицаСтарыхРозничныхЦен.НайтиСтроки(Новый Структура("Товар",ТоварСсылка));
	
	Если МассивНайденныхСтрок.Количество()=0 Тогда
		Возврат 0;
	КонецЕсли; 
	
	Возврат МассивНайденныхСтрок.Получить(0).ПрошлаяЦена;
	
КонецФункции	//ПолучитьПрошлуюЦену
//==========================================================GtG====

 
Функция ПолучитьТаблицуЦенКонкурентов()
	
	ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Получаем таблицу цен конкурентов...";

	
	ТХТ = "ВЫБРАТЬ
	      |	Конкуренты.Наименование КАК ИмяКонкурента,
	      |	Конкуренты.Вес,
	      |	ЦеныКонкурентов.Цена,
	      |	ВыборкаТовары.Товар,
	      |	ВыборкаТовары.КодТовара,
	      |	Конкуренты.Код КАК КодКонкурента
	      |ПОМЕСТИТЬ ВремВыборка
	      |ИЗ
	      |	РегистрСведений.ЦеныКонкурентов КАК ЦеныКонкурентов
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	      |			товары.Товар КАК Товар,
	      |			товары.Товар.Код КАК КодТовара
	      |		ИЗ
	      |			Документ.ПоступлениеТовара.Товар КАК товары
	      |		ГДЕ
	      |			товары.Ссылка = &Документ) КАК ВыборкаТовары
	      |		ПО (ВыборкаТовары.КодТовара = ЦеныКонкурентов.КодТовараСправочной)
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонкурентыЕГК КАК Конкуренты
	      |		ПО ЦеныКонкурентов.КодКонкурента = Конкуренты.Код
	      |			И (Конкуренты.Вес > 0)
	      |			И (Конкуренты.ЗагружатьДанные = ИСТИНА)
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	МАКСИМУМ(ВремВыборка.ИмяКонкурента) КАК ИмяКонкурента,
	      |	ВремВыборка.КодТовара,
	      |	выборка2.МинЦена
	      |ПОМЕСТИТЬ ВыборкаМинЦен
	      |ИЗ
	      |	ВремВыборка КАК ВремВыборка
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	      |			МИНИМУМ(ВремВыборка.Цена) КАК МинЦена,
	      |			ВремВыборка.КодТовара КАК КодТовара
	      |		ИЗ
	      |			ВремВыборка КАК ВремВыборка
	      |		ГДЕ
	      |			ВремВыборка.Вес > 0
	      |		
	      |		СГРУППИРОВАТЬ ПО
	      |			ВремВыборка.КодТовара) КАК выборка2
	      |		ПО ВремВыборка.КодТовара = выборка2.КодТовара
	      |			И ВремВыборка.Цена = выборка2.МинЦена
	      |ГДЕ
	      |	ВремВыборка.Вес > 0
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ВремВыборка.КодТовара,
	      |	выборка2.МинЦена
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ЕСТЬNULL(СУММА(ВремВыборка.Цена * ВремВыборка.Вес) / СУММА(ВремВыборка.Вес), 0) КАК СВЦена,
	      |	ВремВыборка.Товар,
	      |	ВремВыборка.КодТовара,
	      |	ВыборкаМинЦен.ИмяКонкурента,
	      |	ВыборкаМинЦен.МинЦена
	      |ИЗ
	      |	ВремВыборка КАК ВремВыборка
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыборкаМинЦен КАК ВыборкаМинЦен
	      |		ПО (ВыборкаМинЦен.КодТовара = ВремВыборка.КодТовара)
	      |ГДЕ
	      |	ВремВыборка.Вес > 0
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ВремВыборка.Товар,
	      |	ВремВыборка.КодТовара,
	      |	ВыборкаМинЦен.ИмяКонкурента,
	      |	ВыборкаМинЦен.МинЦена
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ ВремВыборка
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ ВыборкаМинЦен";
		  
	Запрос  = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Документ",Документ);
	ТЗЦенКонкурентов = Запрос.Выполнить().Выгрузить();
	Для каждого стр из ТЗЦенКонкурентов Цикл
		Если стр.СВЦена > 0 Тогда
			Если стр.СВЦена > 0 и стр.СВЦена <= 10	Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До10коп, Перечисления.МетодыОкругления.Математически);
			ИначеЕсли стр.СВЦена > 10 и стр.СВЦена <= 50 Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До50коп, Перечисления.МетодыОкругления.Математически);
			ИначеЕсли стр.СВЦена > 50 Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.ДоРуб, Перечисления.МетодыОкругления.Математически);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	Возврат ТЗЦенКонкурентов;
	
КонецФункции
 


Функция ПолучитьДанныеПоТОварамДокумента(Документ)
	
	ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Получаем таблицу данных по товарам документа...";
	
	ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
	
	Запрос=Новый Запрос;
	
	Запрос.Текст="ВЫБРАТЬ
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценки,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценкиДоп,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценки.Наценка КАК Наценка,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценки.МинНаценка КАК МинНаценка,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценки.МаксНаценка КАК МаксНаценка,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценкиДоп.Наценка КАК НаценкаДоп,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценкиДоп.МинНаценка КАК МинНаценкаДоп,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценкиДоп.МаксНаценка КАК МаксНаценкаДоп,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ПометкаУдаления,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Предопределенный,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Родитель,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ЭтоГруппа,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Код,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Наименование,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Поставщик,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Производитель,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Бренд,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ЖНВЛС,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.СВЛС,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Сезон,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ТипДляЦО,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.АптечныйОБ,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Артикул,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаАП,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаФТГ,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ДатаВводаВАП,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Дисконт,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Дозировка,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ЕдиницаПоУмолчанию,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ЕдиницаПоУмолчанию.К КАК Коэфф,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ЗакупочнаяЦена,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Категория,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.КолвоВУпаковке,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ЛекФорма,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.МаксЦенаMedlux,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.МеждународноеНазвание,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.МинЦенаMedlux,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Назначение,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ОбобщеннаяГруппа,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ОсновнаяГруппа,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Подкатегория,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.НеУчаствуетВМотивации,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Причина,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ПроцентДисконта,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Реализация,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.РозничнаяЦена,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.РозничнаяЦенаДоп,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Сезонный,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.СпецПроект,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.СпецРознЦена,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.СтавкаНДС,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Страна,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ТипШтрихкода,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.УТК,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.УчаствуетВАП,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Фасовка,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Примечание,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ЕдиницаОтгрузки,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.КолвоМин,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.КолвоМакс,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ТорговоеНаименование,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Концентрация,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Дополнение,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.НаименованиеПоГенератору,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Топ100,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Топ1000,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Новинка,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Разбивается,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ЕдиницаМин,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.ЗаказНаСкладе,
	             |	АССОРТИМЕНТНЫЙ_ПЛАН.Представление,
	             |	ЕСТЬNULL(ФиксированныеЦены.Цена, 0) КАК ФиксированнаяЦена,
				 |	ЕСТЬNULL(ЦеныМониторинга.Цена, 0) КАК ЦенаМониторинга
	             |ИЗ
	             |	Документ."+ВидДок+".Товар КАК ДокПост_Товар
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	             |		ПО ДокПост_Товар.Товар = АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка
	             |			И (ДокПост_Товар.Ссылка = &Документ)
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксированныеЦены.СрезПоследних КАК ФиксированныеЦены
	             |		ПО (ФиксированныеЦены.Товар = ДокПост_Товар.Товар) И (ДокПост_Товар.Ссылка = &Документ)
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныМониторинга КАК ЦеныМониторинга
	             |		ПО (ЦеныМониторинга.Товар = ДокПост_Товар.Товар) И (ДокПост_Товар.Ссылка = &Документ)				 
				 |ГДЕ
				 |	ДокПост_Товар.Ссылка = &Документ";
    Запрос.УстановитьПараметр("Документ",Документ);
	
	ТЗ=Запрос.Выполнить().Выгрузить(); //тз
	
	ТЗ.Индексы.Добавить("Ссылка");
	
	Возврат   ТЗ;
	
КонецФункции	


Функция ПолучитьДанныеПоПартиямДокумента(Документ)
	
	ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Получаем таблицу данных по партиям документа...";
	
	ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
	//
	//  "+ВидДок+"
	Запрос=Новый Запрос();
	
	Запрос.Текст="	ВЫБРАТЬ
	|		ДокТовар.Партия КАК Партия,
	|		ДокТовар.Партия.СтавкаНДС КАК СтавкаНДС,
	|		ДокТовар.Партия.ЦенаЗакуп КАК ЦенаЗакуп,
	|		ДокТовар.Партия.ЦенаПроизводителяБезНДС КАК ЦенаПроизводителяБезНДС,
	|		ДокТовар.Партия.ЦенаГосРегистрации КАК ЦенаГосРегистрации,
	|		ДокТовар.Товар КАК Товар
	|	ПОМЕСТИТЬ PRT
	|	ИЗ
	|		Документ."+ВидДок+".Товар КАК ДокТовар
	|	ГДЕ
	|		ДокТовар.Ссылка = &Документ
	|	
	|	ИНДЕКСИРОВАТЬ ПО
	|		Товар
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	ВЫБРАТЬ
	|		СпециальныеЦеныАптеки.Ссылка.Товар КАК Товар,
	|		СпециальныеЦеныАптеки.Ссылка.СпециальнаяЦена
	|	ПОМЕСТИТЬ СпецЦены
	|	ИЗ
	|		Справочник.СпециальныеЦены.Аптеки КАК СпециальныеЦеныАптеки
	|	ГДЕ
	|		СпециальныеЦеныАптеки.Ссылка.ПометкаУдаления = ЛОЖЬ
	|		И &Дата МЕЖДУ НАЧАЛОПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.КонПериода, ДЕНЬ)
	|		И СпециальныеЦеныАптеки.Аптека = &Склад
	|	
	|	ИНДЕКСИРОВАТЬ ПО
	|		Товар
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	ВЫБРАТЬ
	|		PRT.Партия,
	|		PRT.СтавкаНДС,
	|		PRT.ЦенаЗакуп,
	|		PRT.ЦенаПроизводителяБезНДС,
	|		PRT.ЦенаГосРегистрации,
	|		PRT.Товар,
	|		ЕСТЬNULL(СпецЦены.СпециальнаяЦена, 0) КАК СпецЦена,
	|		ВЫБОР
	|			КОГДА СпецЦены.СпециальнаяЦена ЕСТЬ NULL 
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК ЕстьСпецЦена
	|	ИЗ
	|		PRT КАК PRT
	|			ЛЕВОЕ СОЕДИНЕНИЕ СпецЦены КАК СпецЦены
	|			ПО PRT.Товар = СпецЦены.Товар
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ PRT
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ СпецЦены
	|"; // Сгенерировано в GtG's Консоль запросов. 04.03.2013 19:05:39
	
	
    Запрос.УстановитьПараметр("Документ",Документ);
	Запрос.УстановитьПараметр("Дата",Документ.Дата);
	
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПеремещениеТовара") Тогда
		ДокСклад=Документ.СкладПолучатель;
	Иначе
		ДокСклад=Документ.Склад;
	КонецЕсли;	
	Запрос.УстановитьПараметр("Склад",ДокСклад);
	
	
	
	
	ТЗ=Запрос.Выполнить().Выгрузить(); //тз
	
	ТЗ.Индексы.Добавить("Партия");
	
	Возврат   ТЗ;
	
	
КонецФункции	


//==========================================================GtG====
Функция ОМ6_ЕстьСпецЦена (Товар,Склад,Дата)  
	//----------------------------------
	//Назначение:
	//  Ищет спеццену 
	//Товар,Склад,Дата не нужно, оставлено для совместимости
	//----------------------------------
	Возврат ДанныеТекПартии.ЕстьСпеццена;
КонецФункции	//ОМ6_ЕстьСпецЦена
//==========================================================GtG====

//==========================================================GtG====
Функция ОМ6_СпецЦена (Товар,Склад,Дата)  
	//----------------------------------
	//Назначение:
	//  Ищет спеццену в справочнике спеццен
	//Товар,Склад,Дата не нужно, оставлено для совместимости
	//----------------------------------
	
	Возврат ДанныеТекПартии.Спеццена;

КонецФункции	//ОМ6_ЕстьСпецЦена
//==========================================================GtG====





Процедура ОсновныеДействияФормыРасценить(Кнопка) Экспорт
	Перем СокрСтр;
	
	 НачалоРасценки=ТекущаяДата();
	//Сообщить(ТекущаяДата());
	//МодОсновныеДействияФормыРасценить(Кнопка);
	
	
	
	
	//возврат;
	
	Если Типзнч(Документ)=Тип("ДокументСсылка.ПеремещениеТовара") ТОгда
		Если Документ.Статус= Перечисления.СтатусПеремещения.ВыгруженНаАптеку Тогда
			Предупреждение("Документ выгружен на аптеку, возможен расход ! Расценить невозможно!",10);
			ЭтаФорма.Закрыть();
			Возврат;
		КонецЕсли;
		
		//---------------------- Перед расценкой в партии должен торчать поставщик ----------GtG--24.04.2009
		// при автоматической расценке записи реквизитов в партии нет пока не проведется документ.
	Иначе
		Для каждого СтрДок Из Документ.Товар Цикл // на всякий случай запишем данные в партию до проведения документа
			ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Обновляем данные по партиям документа...";

			Если ТипЗнч(Документ)<>Тип("ДокументСсылка.ПерерасценкаТоваров") Тогда
			   ОМ1_ОбновитьДанныеПартии  (СтрДок, Документ.ПолучитьОбъект());
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;	
	
	
	
	
		
	
	ЭтаФорма.Панель.ТекущаяСтраница= ЭтаФорма.Панель.Страницы.Найти("Страница1");
	ЭтаФорма.Обновить();
	
	ЭлементыФормы.ХодРасценкиРегион.Видимость=Истина;
	ЭлементыФормы.ХодРасценкиТОвар.Видимость=Истина;
	ЭлементыФормы.Индикатор.Видимость=Истина;
	//ЭлементыФормы.ТОварИндюк.Видимость=Истина;
	
	КоличествоОшибокРАсценки=0;
	
	Таб= ЭлементыФормы.Таб;
	Таб.Очистить();
	
	Таб.ОтображатьСетку= ЛОЖЬ;
	Таб.АвтоМасштаб= ИСТИНА;
	Таб.ОтображатьЗаголовки = Ложь;
	Макет=ПолучитьОбщийМакет("РасценкаКомментарий");
	
	Секция=Макет.ПолучитьОбласть("Шапка"); // тип Табличный документ
	Таб.Вывести(Секция); // аналог ВывестиСекцию v7.7
	
	ТП.Очистить();
	
	Если  ЭтаФорма.ВладелецФормы= Неопределено Тогда
		 ЭВФ=Документ;
	 Иначе
		ЭВФ=ЭтаФорма.ВладелецФормы;//Документ.ПолучитьОбъект(); 
	КонецЕсли;
	
	ДатаДок=ЭВФ.Дата;
	
	//------------------<СКЛАД для использования в алгоритмах завязанных на складе>-------------------GtG----21.11.2008
	Если ТипЗнч(ЭВФ)=Тип("ДокументОбъект.ПеремещениеТовара") 
		или ТипЗнч(ЭВФ)=Тип("ДокументСсылка.ПеремещениеТовара")
		или ТипЗнч(ЭВФ.Ссылка)=Тип("ДокументСсылка.ПеремещениеТовара")
		
		тогда
		СКЛАД=ЭВФ.СкладПолучатель;
	Иначе
		СКЛАД=ЭВФ.Склад;
	КонецЕсли; 
	//------------------------------------------------------------------------------------------------GtG----КОНЕЦ--21.11.2008
	
	
	ДатаВыходаНаПМ=КонецМесяца(КонецМесяца(СКЛАД.ДатаПерехода)+1);// среднестатистический срок выхода на проектную мощность  через месяц после конца месяца открытия аптеки
	
	
	//------------------<Сколько регионов?>-------------------GtG----09.01.2008
	ТЗРег= Новый ТаблицаЗначений;
	ТЗРег.Колонки.Добавить("Рег");
	Для каждого Стр из ВыбРег Цикл
		Если Стр.Пометка=Истина Тогда
			СтрРег=ТЗРег.Добавить();
			СтрРег.Рег=Стр.Значение;
		КонецЕсли;	
	КонецЦикла;	
	//--------------------------------------------------------GtG----КОНЕЦ--09.01.2008
		
	
	
	
	
	КСТовара=ЭВФ.Товар.Количество();
	
	ИТОГОСтрокРез=КСТовара*ТЗРег.Количество(); // сколько должно получиться строчек на выходе
	
	
	Если АвтоРасценка=Ложь Тогда
		ЭлементыФормы.Индикатор.МаксимальноеЗначение=ИТОГОСтрокРез;
		ЭлементыФормы.Индикатор.Значение=0;
		Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПерерасценкаТоваров") Тогда
			Попытка
				Комментировать = ЭВФ.ВыводитьКомментарийРасчета;
			Исключение
			КонецПопытки;
		КонецЕсли;
	Иначе
		Комментировать=Ложь;
	КонецЕсли;
		
	
	Попытка
		Курс=ПолучитьКурсВалюты(ЭВФ.Валюта, ЭВФ.Дата);
	ИСключение
		Курс=1;  // в документе нет реквизита валюта
	КонецПопытки;
	
	ТЧТовар= ЭВФ.Товар.Выгрузить(); //ЭтаФорма.ВладелецФормы.Товар;
	
	
	//==================<Определяем по закупочной цене какие товары будем расценять>===================GtG====21.11.2008
	// товары которые не расценяются в расценку не попадут


	ТЗКосяков=КонтрольПоЗакупке(ТЧТовар,СКЛАД.Регион);

	//=================================================================================================GtG====21.11.2008
	
	СтрокаНулевыхЦен=ТЧТовар.Найти(0,"ЦенаЗакуп");
	Если СтрокаНулевыхЦен<> Неопределено Тогда
		Косяк=ТЗКосяков.Добавить();
		Косяк.Партия="";
		Косяк.ТОвар="";
		Косяк.Косяк="В документе есть строки с нулевой закупочной ценой!";
		ПРедупреждение("В документе есть строки с нулевой закупочной ценой!
		|РАСЦЕНИТЬ НЕВОЗМОЖНО! ДОКУМЕНТ НЕ ГОТОВ!",2);
		
				
		Попытка
			ОП=ЭВФ.ОшибкиРасценки;
			Если Константы.БеспределСЖНВЛС.Получить() = Истина Тогда
				ПустаяПартия = Справочники.Партии.ПустаяСсылка();
				
				СписокУдаляемыхСтрок=новый СписокЗначений;
				
				Для каждого стр из ОП Цикл
					Если стр.Партия = ПустаяПартия Тогда
						продолжить;
					КонецЕсли;
					СписокУдаляемыхСтрок.Добавить(стр);
				КонецЦикла;
				Для Каждого ССУС из СписокУдаляемыхСтрок цикл
					ОП.Удалить(ССУС.Значение);
				КонецЦикла;	
				
				
			Иначе
				ОП.Очистить();// при каждой расценке перезаполняется. в идеале - пустая.
			КонецЕсли;
			
			ТЗКосяков.Свернуть("Партия,Товар,Косяк,ЦенаПоРасценке","");
			
			
			Для каждого Стр из ТЗКосяков Цикл
				СтрОп=ОП.Добавить();
				СтрОП.Товар 	= Стр.Товар;
				СтрОП.Партия 	= Стр.Партия;
				СтрОП.ОписаниеОшибки= Стр.Косяк;
				СтрОП.ЦенаПоРасценке= Стр.ЦенаПоРасценке;
			КонецЦикла;
		Исключение	
		КонецПопытки; 
		
		Попытка
			ЭВФ.Состояние=Справочники.СостояниеДокумента.НайтиПоНаименованию("не готов");
		Исключение
		КонецПопытки;
        ЭВФ.зАПИСАТЬ(РежимЗаписиДокумента.Запись);

		
		ЭтаФорма.Закрыть();
		Возврат; // произойдет ошибка расценки. Не расцениваем недоделанный документ
	КонецЕсли; 
	
	Если АвтоРасценка = Ложь и ИспользоватьЦеныКонкурентов = Истина и ПроверятьЗакупкуИРозницу = Истина Тогда
		ТЗЦенКонкурентов = ПолучитьТаблицуЦенКонкурентов();
	КонецЕсли;
	
	
	СписокСтрокДокумента=ТЧТовар.ВыгрузитьКолонку("ТОвар");
	
	
	
	ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Поиск старых розничных цен...";
	Если ПроверятьЗакупкуИРозницу = Истина Тогда
		ТаблицаСтарыхРознЦен=ПолучитьТаблицуСтарыхРозничныхЦен(ЭВФ.Дата,Склад,СКЛАД.Регион,СписокСтрокДокумента,Документ);
	КонецЕсли;
	ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Старые розн. цены получены.";
	
	//----------------------------< Готовим Дерево Ошибок (ДО) >--------------------------------GtG---
	ДО = Новый ДеревоЗначений;
	КДО=ДО.Колонки.Добавить("Ошибки");
	
	ДО.Строки.Очистить();
	
	
	Корень=ДО.Строки.Добавить();
	
	Корень.Ошибки="Расценка документа ";
	
	//----------------------------<  >--------------------------------GtG---	
	
	ЕстьОшибки=Ложь;
	
		
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПеремещениеТОвара") Тогда
		ТЧТовар.Колонки.Добавить("ЦенаГосРегистрации");
		ТЧТовар.Колонки.Добавить("ЦенаПроизводителя");
		ТЧТовар.Колонки.Добавить("ЦенаЗакупБезНДС");
		ТЧТовар.ЗаполнитьЗначения(0,"ЦенаГосРегистрации");
		
		Для каждого СтрТЧТовар из ТЧТовар Цикл
			СтрТЧТовар.ЦенаЗакупБезНДС= СтрТЧТовар.ЦенаЗакуп - ОМ3_НДСИзСуммыПоСтавке (СтрТЧТовар.ЦенаЗакуп,СтрТЧТовар.СтавкаНДС);
			СтрТЧТовар.ЦенаПроизводителя=СтрТЧТовар.Партия.ЦенаПроизводителяБезНДС;
		КонецЦикла;	
	КонецЕсли;
	
	ТЧ = ТЧТовар.сКОПИРОВАТЬ(,"Товар,Партия,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС"); //ЭВФ.Товар.Выгрузить();

	ТЧ.Свернуть("Товар,Партия,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС","");
	
	
	Если АвтоРасценка=Ложь Тогда
		ЭлементыФормы.Индикатор.Значение=0;
		ЭлементыФормы.Индикатор.МаксимальноеЗначение=ТЗРег.Количество();
	КонецЕсли;
	

	ЗадержкаОтображенияНаИндикаторе=Истина;  // наращиваем индюк после обработки региона
	
	Для каждого СтрРег из ТЗРег цикл // ПО РЕГИОНАМ
		
		ЭлементыФормы.ХодРасценкиРегион.Заголовок=СтрРег.Рег;
		
		
		Если ЗадержкаОтображенияНаИндикаторе=Ложь ТОгда
			
			Если АвтоРасценка=Ложь Тогда
			ЭлементыФормы.Индикатор.Значение=ЭлементыФормы.Индикатор.Значение+1;
			КонецЕсли;
			
		Иначе 
			ЗадержкаОтображенияНаИндикаторе=Ложь; // сначала нужно обработать ГТТ а потом вывести процент на индикатор
		КонецЕсли; 	
		
		
		
				
		ТекРегион=СтрРег.Рег;
		
		
		Если ТекРегион.ПометкаУдаления=Истина ТОгда
			ПРодолжить; // Удаленные регионы НЕ обрабатываем!
		КонецЕсли; 
		
		
		
		
		ВеткаРегион=Корень.Строки.Добавить();
		ВеткаРегион.Ошибки="по Региону   "+ТекРегион;
		
		
		
		КомментаторРасчета  (Неопределено,Таб,Макет,"Регион",Новый Структура("Регион",ТекРегион));
		
		
		
		//------------------<Получим алогоритмы ценообразования из справочников>-------------------GtG----16.11.2007
		//Регион
		//	Алгоритмы ценообразования
		//		УСЛОВИЯ ПРИМЕНЕНИЯ АЛГОРИТМОВ
		// Выборку строим начиная с конца (УПА)
		ТХТ="ВЫБРАТЬ
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ЛеваяЧасть,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ТипУсловия,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ПраваяЧасть,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ОбъединятьСоСледующим,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ПорядокФормированияУсловия КАК ПорядокФормированияУсловия,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Приоритет КАК Приоритет,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаС,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаПо,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.МинПроцНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.МаксПроцНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ФормулаРасчетаЦены,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ФормулаРасчетаПроцентаНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Ссылка КАК АлгоритмСсылка,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ОткрывающаяСкобка КАК ОСК,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ЗакрывающаяСкобка как ЗСК
		    |ИЗ
		    |	Справочник.АлгоритмыЦенообразованияРегионов.УсловияПрименения КАК АлгоритмыЦенообразованияРегионовУсловияПрименения
		    |ГДЕ
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Владелец = &Регион
		    |	И &ДатаДок МЕЖДУ АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаС И АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаПо
		    |
		    |УПОРЯДОЧИТЬ ПО
		    |	Приоритет,
		    |	ПорядокФормированияУсловия";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Регион",ТекРегион); 
		Запрос.УстановитьПараметр("ДАТАДок",ДатаДок);
		
		ИсходнаяТЗПравил=Запрос.Выполнить().Выгрузить(); // сырые данные
		ИсходнаяТЗПравил.Колонки.Добавить("УсловиеВыполнилось");
		ИсходнаяТЗПРавил.Колонки.Добавить("ВырИтУсл");  // выаржение для вычисления иотгового результата условия примеенния
		
		
		
		Если ИсходнаяТЗПРавил.Количество()=0 ТОгда
			ТекстОшибки=("   По региону  "+ТекРегион+" не задано ни одного алгоритма ценообразования! НЕ РАСЦЕНЕНО! (Задается через справочник регионов.)");
			
			ОшибкаРЕгион=ВеткаРегион.Строки.Добавить();
			ОшибкаРегион.Ошибки=ТекстОшибки;
			СсылкаРегион=ОшибкаРЕгион.Строки.Добавить();
			СсылкаРегион.ошибки=ТекРегион;
			
			КомментаторРасчета  (Неопределено,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион));
			
			КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
			
			Продолжить; // по группам ТТ
		КонецЕсли; 	
		
		ТЗХ=ИсходнаяТЗПРавил.Скопировать();
		ТЗХ.Свернуть("Приоритет"); //,ПорядокФормированияУсловия");
		КоличествоАлгоритмов=ТЗХ.Количество();
		
		
		
		//------------------<Собираем из кусочков сложные условия>-------------------GtG----16.11.2007
		ВеткаТовары=ВеткаРегион.Строки.Добавить();
		ВеткаТовары.Ошибки=" Ошибки при расценке товара по региону  ";
		ЕстьОшибкиПоГТТ=Ложь;
		
		
		КоличествоСтрок = ТЧТовар.Количество();
		Если АвтоРасценка=Ложь ТОгда
			//ЭлементыФормы.ТОварИндюк.Значение=0;
			//ЭлементыФормы.ТОварИндюк.МаксимальноеЗначение= КоличествоСтрок;
		КонецЕсли;
		
		НН=0;
		
		
		ИсходнаяТЗПРавил.Сортировать("ПРиоритет,ПорядокФормированияУсловия");
		
				
		
		ДанныеПоТоварамДокумента = ПолучитьДанныеПоТОварамДокумента(Документ); //04-03-2013// ТОВАРЫ ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		ДанныеПоПартиямДокумента = ПолучитьДанныеПоПартиямДокумента(Документ);  //04-03-2013// Партии ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Расчет цен по строкам документа...";
		Для каждого Стр из ТЧТовар Цикл // по строкам документа
			
			ПостОбработкаЦены=Ложь;
			
			ДанныеТекПартии=ДанныеПоПартиямДокумента.Найти(Стр.Партия,"Партия");// строка тз
			
			
			НН=НН+1;
			
			//ТОвар=Стр.Товар.ПолучитьОбъект();
			
			//---------------<ускорение ускорения расценки>---------------------------// GtG // 04.03.2013 16:43:19 
			 // данные по всем товарам в одну тз
			//------------------<Ускорение расценки>-------------------GtG----27.11.2008 
			// чтобы избежать многочисленных обращений к базе Товар - делаем как ТЗ из 1-й строки
			// с колонками соответствующими всем реквизитам товара.
			// при вычислении условий типа товар.ххх = уууу это даст ускорение вычисления
			//-------------- ЗАПРОС GTG --------------------------НАЧАЛО
			//Назначение: все реквизиты товара
			//
			//ТХТ="ВЫБРАТЬ
			//	|	АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка,
			//	|	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценки,.... и т.д.  
						
			
			ТОВАР= ДанныеПоТоварамДокумента.найти(Стр.Товар,"ССЫЛКА"); // строка ТЗ
			
			
			
			
			//-------------- ЗАПРОС GTG --------------------------КОНЕЦ
			
		    //--------------------------------------------------------GtG----КОНЕЦ--27.11.2008
			
			
			СтрТОвар=ТОВар.Ссылка;
			СтрТОварКод=Товар.Код;
			
			//ЭлементыФормы.ХодРасценкиТОвар.Заголовок=Товар.Наименование;
			
			КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Товар",Новый Структура("ТОВар,Расшифровка,ТОВарКод",СтрТОвар,СтрТОвар,СтрТОварКод));
			
			Если АвтоРасценка=Ложь ТОгда
				//ЭлементыФормы.ТОварИндюк.Значение=ЭлементыФормы.ТОварИндюк.Значение+1;
				
				Дрыг=цел(КоличествоСтрок/100);
				Если Дрыг=0 тогда Дрыг=1 конецесли;
				
				
				если  НН%Дрыг=0 тогда
					Состояние("расчет " + НН + " из " + КоличествоСтрок);
				КонецЕсли;
				
			КонецЕсли;	
			
			ВеткаТовар= Неопределено;
			
			Если Стр.КоличествоФакт=0 тогда
				ТекстОшибки="Расценим, НО Фактическое количество товара равно нулю! ("+СтрТоварКод+")  "+СтрТовар+"    Не РАСЦЕНЕН!";
				
				ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
				ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
				ВеткаТОварОш.Ошибки=ТекстОшибки;
				
				КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""));
				
				ЕстьОшибкиПоГТТ=Истина;
				КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
				//Продолжить;
			КонецЕсли; 
			
			
			
			ТЗПРавил=ИсходнаяТЗПРавил.Скопировать();
			РознЦена=0;
			
			//------------------<1) нужны значения всех возможных переменных из алгоритма условий>-------------------GtG----17.11.2007
			//---------------- Товар-------
			//			ТОвар=Стр.Товар;
			//------------------Регион------
			Регион=ТекРегион;
			
			//------------- ГТТ------
			//ГТТ=ВыбГТТ.Ссылка;
			
			//------------------<строка документа>-------------------GtG----17.11.2007 
			Док=Стр;
			
			//------------------<Единица измерения>-------------------GtG----28.11.2007
			Если Док.Еит.Пустая()=Истина ТОгда
				ТекстОшибки="В документе у товара не указана единица измерения! ("+СтрТоварКод+")  "+СтрТОвар+"    Не РАСЦЕНЕН!";
				ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТОвар);
				ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
				ВеткаТОварОш.Ошибки=ТекстОшибки;
				ЕстьОшибкиПоГТТ=Истина;
				
				КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""));
				
				КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
				
				Продолжить; // по таблице товаров
			Иначе
				ДокЕитК=Док.Коэфф;  // коэффициент единицы измерения из документа
				ДокЕИТ=Док.Еит;
			КонецЕсли; 
			
			Если ПроверятьЗакупкуИРозницу = Истина Тогда  //Virus 04.03.2013
				Отбор = Новый Структура();
				//Отбор.Вставить("Регион",Регион);
				Отбор.Вставить("Товар",Товар.Ссылка);
				Строки = ТаблицаСтарыхРознЦен.НайтиСтроки(Отбор);
				Если Строки.Количество() > 0 Тогда
					ПредыдущаяРознЦена = Строки[0].ПрошлаяЦена;
					Остаток			 =  Строки[0].Остаток;
				Иначе
					ПредыдущаяРознЦена = 0;
					Остаток = 0;
				КонецЕсли;
			Иначе
				ПредыдущаяРознЦена = 0;
				Остаток = 0;
			КонецЕсли;
			
			
			Если АвтоРасценка = Ложь и ИспользоватьЦеныКонкурентов = Истина и ПроверятьЗакупкуИРозницу = Истина Тогда
            	СтрокаЦеныКонкурента = ТЗЦенКонкурентов.Найти(Товар.Ссылка,"Товар");
			Иначе
				СтрокаЦеныКонкурента = Неопределено;
			КонецЕсли;
			
			~ПостобработкаЦены:  // безусловный переход сюда, если есть алгоритмы с отрицательным приоритетом.
			
			
			
			
			//------------------<Рассчитываем условия по каждой строке условий применения алгоритма>-------------------GtG----17.11.2007 
			// Если условие составное это даст для каждой части ИСТИНА или ЛОЖЬ потом их можно
			// загнать в одно выражение и получить результат
			
			ТЗПравил.Колонки.Добавить("РасшифровкаОшибки");
			
			Для каждого СтрП из ТЗПравил Цикл  // по таблице правил
				
				Если ПостОбработкаЦены=Истина Тогда // при повторной обработке отрицательных алгоритмов не берем положительные вообще
					Если  СтрП.приоритет>0 Тогда
						СтрП.УсловиеВыполнилось=Ложь;
						ПРодолжить;
					КонецЕсли;
				КонецЕсли;	
				
				
				
				
				Если СтрП.ЗСК=Истина или СтрП.ОСК=Истина Тогда // это скобка "(" или ")"
					СтрП.УсловиеВыполнилось=Истина; // скобки всегда считаем истинными
				Иначе// собственно это условие	 
					ЗначениеПРавойЧасти=СтрП.ПраваяЧасть;
					
					Если ТипЗнч(ЗначениеПРавойЧасти)=Тип("Строка") Тогда // значит это формула и ее нужно вычислить
						ЗначениеПРавойЧасти =Вычислить( ЗначениеПРавойЧасти );
					КонецЕсли;	
					
					ТХТВычислить=""+СтрП.ЛеваяЧасть+" "+СтрП.ТипУсловия+" ЗначениеПРавойЧасти";
					
					
					Если  СтрП.ТипУсловия="СодЗнач" Тогда // вычисляет сидит ли значение Лева в таблице значений Права
						ТХТВычислить=""+Условие_СодЗнач(Вычислить(СтрП.ЛеваяЧасть),ЗначениеПРавойЧасти)+"";
						
						// ТХТВычислить будет как "Истина" или "Ложь"
					КонецЕсли;
					
					
					

					Попытка
							СтрП.УсловиеВыполнилось=Вычислить(ТХТВычислить);		
					Исключение  //ибо могут накосячить при написании условий
						ТекстОшибкиВычисления=ОписаниеОшибки()+"
									|Ошибка вычисления выражения. 
									|Алгоритм  "+СтрП.АлгоритмСсылка+"
									|"+СтрП.ЛеваяЧасть+" Условие сравнения "+СтрП.ТипУсловия+" Значение в правой части "+ЗначениеПРавойЧасти; 
						ВызватьИсключение ТекстОшибкиВычисления; // точно! - накосячили.
					КонецПопытки ;
					
					
					
					Если СтрП.УсловиеВыполнилось=Ложь Тогда
						СтрП.РасшифровкаОшибки="Не выполнилось условие "+ТХТВычислить;// СтрЗаменить(ТХТВычислить,"ЗначениеПРавойЧасти",ЗначениеПРавойЧасти);//+", а по товару "+Вычислить(СтрП.ЛеваяЧасть);
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла;	// по таблице правил
			
			
			Приоритет=0;
			ВырИтУсл="";
			
			Для каждого СтрП из ТЗПравил Цикл  // по таблице правил 2 заход
				
				Если Приоритет<>СтрП.Приоритет Тогда // новое правило расчета
					ВырИтУсл="";
					
					Приоритет=СтрП.Приоритет; // запомним какой был последним
					
				КонецЕсли;	
				
				
				Если СтрП.ЗСК=Истина Тогда // это скобка ")"
					СтрПУсловиеВыполнилось=")"
				ИначеЕсли СтрП.ОСК=Истина Тогда // это скобка "("
					СтрПУсловиеВыполнилось="("
				Иначе  // Это условие
					СтрПУсловиеВыполнилось =СтрП.УсловиеВыполнилось;
				КонецЕсли; 	
					
				
				
				СтрП.ВырИтУсл=ВырИтУсл+" "+СтрПУсловиеВыполнилось+" "+СтрП.ОбъединятьСоСледующим;
				ВырИтУсл= СтрП.ВырИтУсл;// в последней строке сложного условия оно соберется все целиком
				// эта строка будет имет ьмакс порядок формирования
				
				
			КонецЦикла; // по таблице правил 2 заход
			
			//------------------<Свернет таблицу правил>-------------------GtG----20.11.2007
			
			
			ТЗПРавил.Сортировать("ПорядокФормированияУсловия Desc");
			ТЗПРавил.Сортировать("Приоритет Asc");

			
						
			ТЗПравил.Колонки.Удалить("ЛеваяЧасть");
			ТЗПравил.Колонки.Удалить("ТипУсловия");
			ТЗПравил.Колонки.Удалить("ПраваяЧасть");
			ТЗПравил.Колонки.Удалить("ОбъединятьСоСледующим");
			ТЗПравил.Колонки.Удалить("УсловиеВыполнилось");
			
			ППР=0; // правилоПриоритет
			ППФУ=0;  // правило, порядок формирования условия
			Удаляемыестроки=Новый СписокЗначений;
			
			СписокНевыполнившихсяУсловий=Новый СписокЗначений; // для человеческой расшифровки ошибки если
			// ни один алгоритм не подойдет	
			
			
			// АХТУНГ ДАНГЕР!
			
						
			//ПРи большом кол-ве условий неправильный порядок условий
			
			ТЗПравил.Колонки.Добавить("ЭтоУдаляемоеУсловие");
			ТЗПРавил.ЗаполнитьЗначения(Ложь,"ЭтоУдаляемоеУсловие");
			
			Для каждого СтрП из ТЗПравил Цикл
				
				
				Если ППР<СтрП.Приоритет Тогда
					ППР=СтрП.Приоритет ;    // правило приоритет
					ППФУ=СтрП.ПорядокФормированияУсловия; //правило, порядок формирования условия)
				КонецЕсли;	
				
				
									
				Если СтрП.ПорядокФормированияУсловия < ППФУ Тогда
					// это огрызок недоделанного сложного условия
					// его надо убрать чтоб дальше не мешался
					СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
					Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП);
                КонецЕсли; 
				
				//======================= Самый медленный кусок ======================
				Если прав( СтрП.ВырИтУсл,2)=" И" Или  прав( СтрП.ВырИтУсл,4)=" ИЛИ" Тогда
					СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
					Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
				Иначе
					Попытка
						Если Вычислить(СтрП.ВырИтУсл)=Ложь Тогда
							//------------------<Еще подуменьшим количество условий>-------------------GtG----20.11.2007 
							// Отбросим ложные строки
							СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
							Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
						КонецЕсли; 
					Исключение
						//------------------<Точно это огрызок сложного условия и он не посчитается>-------------------GtG----29.12.2007
						// Отбросим ложные строки
						СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
						Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
					КонецПопытки; 
				КонецЕсли; 
                //====================================================

			КонецЦикла;	
			
			
			
			//------------------<Удаляем неподходящие алгоритмы>-------------------GtG----23.11.2007
			//Для каждого СтрУС из Удаляемыестроки Цикл
			//	Попытка
			//		ТЗПРавил.Удалить(СтРУС.Значение);// удаляем лишние строки условий 
			//	ИСключение
			//		// значит уже прибили нах
			//	КонецПопытки; 
			//КонецЦикла;	
			ТЗПравил=ТзПравил.Скопировать(Новый Структура("ЭтоУдаляемоеУсловие",Ложь));
			
			
			
			
			
			//------------------<Должны остаться только подходящие>-------------------GtG----23.11.2007
			// если ничего не подошло - расценка невозможна 
			// выведем список невыполнившихся условий и перейдем к расценке следующего товара
			Если ТЗПравил.Количество()=0  и ПостОбработкаЦены=Ложь Тогда
				
				Если ВыводитьНеРасцененные=Истина  Тогда  
					//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
					
					//ДокПартияЦенаЗакуп=ДанныеТекПартии["ЦенаЗакуп"]; // 1 раз лезем в базу
					
					Цена_Розничная=0;
					СтрТП=Тп.Добавить();
					СтрТП.ТОвар=СтрТОвар; //ссылка
					СтрТП.Партия=ДанныеТекПартии["Партия"];
					СтрТП.ЕИТ=Док.Еит;
					СтрТП.КоэффЕит=ДокЕитК;
					СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
					СтрТП.ЦенаГосРег=0;
					СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
					СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
					
					СтрТП.Топ100=Товар.Топ100;
					СтрТП.Топ1000=ТОвар.Топ1000;
					
					СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
					СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
					СтрТП.Регион  =ТекРегион;
					СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
					
					СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
					СтрТП.НН=НН;
					СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
					СтрТП.Остаток = Остаток;
					Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
						СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
						СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
						СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
					КонецЕсли;
					
				КонецЕсли; 
				
				Попытка
					Косяк=ТЗКосяков.Добавить();
					Косяк.Партия=СтрТП.Партия;
					Косяк.ТОвар=СтрТП.ТОвар;
					Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
				Исключение
					Попытка
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия="Партия неизвестна";
						Косяк.ТОвар=СтрТП.ТОвар;
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					Исключение
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия="Партия неизвестна";
						Косяк.ТОвар="Товар неизвестен!";
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					КонецПопытки;
				КонецПопытки; 
				
				

				
				
				
				
				ТекстОшибки=" Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
				
				ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
				ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
				ВеткаТОварОш.Ошибки=ТекстОшибки;
				ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
				ВеткаТОварОшСсы.Ошибки=СтрТОвар; // ссылка на товар
				ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
				ВеткаТОварОшСсы.Ошибки=ТекРегион; // ссылка на регион
				
				
				КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион));
				
				
				//------------------<Список невыполнившихся условий>-------------------GtG----23.11.2007
				Для каждого ЧПО из СписокНевыполнившихсяУсловий Цикл
					Если СокрЛП(ЧПО.Значение)="" ТОгда
						Продолжить;
					КонецЕсли; 
					
					ВеткаЧПО=ВеткаТОварОшСсы.Строки.Добавить();
					ВеткаЧПО.Ошибки=ЧПО.Значение;
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки,Расшифровка",ЧПО.Значение,ТекРегион));
					КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
					
				КонецЦикла;	
				
				
				
				ЕстьОшибкиПоГТТ=Истина;
				Продолжить;  // не расценилось
			КонецЕсли; 	
			
			
			
			
			
			//==================<а вот теперь можно начинать считать цену розничную>===================GtG====20.11.2007 
			// Должен сработать алгоритм расценки с наибольшим приоритетом
			// Поэтому с меньшим даже и смотреть не стоит
			
			
			
			//~ПостобработкаЦены:  // безусловный переход сюда, если есть алгоритмы с отрицательным приоритетом.
			// сюда прыгаем после расчета цены по основным алгоритмам с положительным приоритетом	
			Если ПостОбработкаЦены=Ложь Тогда
				ТЗПравил.Сортировать("Приоритет desc");
				// в ТЗ рпавил первыми пойдут условия с максимальным проядком формирования
				//  т.е. самые доделанные. остальные будут недоделанными огрызками и от них надо избавиться
			Иначе
				
				Если  ТЗПРавил.Количество()=0 ТОгда // Это значит, что при обработке отрицательных
					// алгоритмов ни один из них не сработал и товар считаем расцененным по положительному алгоритму
					//??? Продолжить;
				КонецЕсли;	
				
				ТЗПРавил.Сортировать("Приоритет Asc");
				//Для постобработки розничной цены с помощью алгоритмов с отрицательным приоритетом
			КонецЕсли;
			
			
			
			
			
			
			
			
			
			
			ЕСЛИ ТЗПравил.Количество()>0 ТОГДА  // ЕСЛИ ИМЕЕТСЯ РАБОЧИЙ АЛГОРИТМ ДЛЯ РАСЧЕТОВ //
				
				РабочийАлгоритм=ТЗПравил.Получить(0); // первая строка сверху по таблице правил расчета
				
				
				
				КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Алг",Новый Структура("Алг,Расшифровка",РабочийАлгоритм.АлгоритмСсылка,РабочийАлгоритм.АлгоритмСсылка));
				
				//==================<перед тем, как вычислять цены >===================GtG====22.11.2007
				// нужно проверить все ли условия на ноебходимые данные 
				// по выбранному алгоритму выполняются , НО это еще не гарантирует что он сработает
				
				// ..запросом собарть условия в тз
				// построить условия, вычислить их и получить бульрезультат по всем условиям 
				// через И если в итоге ПРАВДА тогда все ОК иначе алгоритм не сработает
				
				ТХТ="ВЫБРАТЬ
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Реквизит,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.ДолженБыть,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Чему,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Ссылка
				|ИЗ
				|	Справочник.АлгоритмыЦенообразованияРегионов.НеобходимыеРеквизиты КАК АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты
				|ГДЕ
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Ссылка = &ВыбАлгоритм";
				
				
				Запрос=Новый Запрос;
				Запрос.Текст=ТХТ;
				Запрос.УстановитьПараметр("ВыбАлгоритм",РабочийАлгоритм.АлгоритмСсылка);
				
				НеобхРекв=Запрос.Выполнить().Выгрузить();
				НеобхРекв.Колонки.Добавить("УсловиеВыполнилось");
				
				Для каждого СтрНРекв из НеобхРекв Цикл
					
					Если СтрНРекв.ДолженБыть = "СодЗнач" Тогда
						ВызватьИсключение "Нельзя использовать тип сравнения СодЗнач в необходимых реквизитах алгоритма ценообразования!";
					КонецЕсли;	
					
					ТекстУсловия=""+СтрНРекв.Реквизит+" "+ СтрНРекв.ДолженБыть+" "+СтрНРекв.Чему;
					СтрНРекв.УсловиеВыполнилось=Вычислить(ТекстУсловия);
				КонецЦикла;	
				
				//------------------<Если какое-либо условие не выполнилось то нихрена не расчитается>-------------------GtG----22.11.2007
				ЕстьОшибкиПоУПА=Ложь;
				Для каждого СтрНРекв из НеобхРекв Цикл
					Если СтрНРекв.УсловиеВыполнилось=Ложь Тогда
						ТекстОшибки=""+СтрНРекв.Реквизит+" "+ СтрНРекв.ДолженБыть+" "+СтрНРекв.Чему+" Условие не выполнилось!";
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""));
						
						
						ЕстьОшибкиПоУПА=Истина;
					КонецЕсли; 
				КонецЦикла;	
				Если  ЕстьОшибкиПоУПА=Истина Тогда
					//товар не расценился
					КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
					Продолжить;
				КонецЕсли; 	
				//--------------------------------------------------------GtG----КОНЕЦ--22.11.2007
				
				
				
				
				
				
				
				Попытка 
					
					
					//------------------<МОМЕНТ с ценами из АП>--------------------------------GtG----28.11.2007
					// Расчет цены на 1 минимальную единицу
					// Цены если из основного ап считаем заданными на единицу по умолчанию (делим на еёйный К)
					// Если цена задана из АПГТТ то там должна быть ЕИТ на которую задана цена (делим на еёйный К), 
					//
					// Получившуюся Розн цену * на К по документу
					//
					// В РЕГИСТРЕ ЦЕН ХРАНИМ ЦЕНУ В РАСЧЕТЕ НА К=1 ! ДАЛЕЕ ВЕЗДЕ ЕЕ МНОЖИМ НА К ЕДИНИЦЫ
					//
					//------------------<--------------------->--------------------------------GtG----28.11.2007
					
					ФормулаДляРасчетаЦены= РабочийАлгоритм.ФормулаРасчетаЦены;
					ФормулаДляРасчетаПроцНац=РабочийАлгоритм.ФормулаРасчетаПроцентаНаценки;
					
					
					ФормулаДляРасчетаЦены=ПравильнаяФормулаРасчета(ФормулаДляРасчетаЦены);
					ФормулаДляРасчетаПроцНац=ПравильнаяФормулаРасчета(ФормулаДляРасчетаПроцНац);
					
					
					
					
					
					
					//------------------------------------------------------------GtG----28.11.2007
					
					Цена_Розничная=Вычислить(ФормулаДляРасчетаЦены); // на идеальную сферическую единицу в вакууме
					
					
					//--- Округляем в БОЛЬШУЮ сторону до 10 копеек
					
					Цена_Розничная=ОМ3_ОтброситьДо10Коп(Цена_Розничная);
					//--- потом при расчете границ наценки обкорнается в меньшую сторону
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаДляРасчетаЦены,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная));
					
					
					
					
				Исключение
					
					
					//Начало добавил 19.11.2012  Васильченко
					Если ВыводитьНеРасцененные=Истина  Тогда  
						//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
						
						
						
						Цена_Розничная=0;
						СтрТП=Тп.Добавить();
						СтрТП.ТОвар=СтрТОвар; //ссылка
						СтрТП.Партия=ДанныеТекПартии["Партия"];
						СтрТП.ЕИТ=Док.Еит;
						СтрТП.КоэффЕит=ДокЕитК;
						СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
						СтрТП.ЦенаГосРег=0;
						СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
						СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
						
						СтрТП.Топ100=Товар.Топ100;
						СтрТП.Топ1000=ТОвар.Топ1000;
						
						СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
						СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
						СтрТП.Регион  =ТекРегион;
						СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
						
						СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
						СтрТП.НН=НН;
						СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
						СтрТП.Остаток = Остаток;
						
						Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
							СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
							СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
							СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
						КонецЕсли;
						

					КонецЕсли;					
					//Конец добавил 19.11.2012  Васильченко
					
					
					ТекстОшибки="Ошибка при расчете розничной цены:";
					ООШ=ОписаниеОшибки();
					
					
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);	
					
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
					
					ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
					ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаЦены));
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ));
					
					КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
					
					ЕстьОшибкиПоГТТ=Истина;
					
					Продолжить;								
				КонецПопытки;
				
				Попытка 
					пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),4,РежимОкругления.Окр15как20); // В большую СТОРОНУ!  
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки));
					
					
				Исключение
					
					ТекстОшибки="Ошибка при расчете процента наценки:";
					ООШ=ОписаниеОшибки();
					
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
					
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
					
					ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
					ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаПроцНац));
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ));
					
					КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
					
					
					ЕстьОшибкиПоГТТ = Истина;
					
					Продолжить;								
				КонецПопытки;
				
				МинПроцНаценки=Вычислить(РабочийАлгоритм.МинПроцНаценки);
				
				МаксПроцНаценки=Вычислить(РабочийАлгоритм.МаксПроцНаценки);
				
				//КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки));
				
				
				Если МинПроцНаценки=0 Тогда
					МинПроцНаценки=Константы.МинимальноДопустимаяНаценка.Получить();
					
					Ахтунг_Дангер=""+ТекРегион+"  "+ТОВар.Наименование+" Не удалось вычислить минимальный процент наценки по формуле "+РабочийАлгоритм.МинПроцНаценки+"
					| принимаем = "+МинПроцНаценки+" %";
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер));		
					
				КонецЕсли; 	
				
				Если МаксПроцНаценки=0 Тогда
					МаксПроцНаценки=70;
					Ахтунг_Дангер=(""+ТекРегион+"  "+ТОВар.Наименование+" Не удалось вычислить максимальный процент наценки по формуле "+РабочийАлгоритм.МаксПроцНаценки+"
					| принимаем = "+МаксПроцНаценки+" %");
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер));		
					
					
				КонецЕсли; 	
				
				// прокомментируем новые границы процента наценки
				КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки));
				
				
				//==================<зарубим лишнее / добавим если процент наценки вылез за границы максимально-минимального диапазона>===================GtG====20.11.2007
				
				Если  пРОЦЕНТ_Наценки>МаксПроцНаценки тогда
					//Зарубим
					
					Ахтунг_Дангер=("Превышение максимального процента наценки! Уменьшаем наценку..."+пРОЦЕНТ_Наценки+">"+МаксПроцНаценки);
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер));
					
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+МаксПроцНаценки) / (100+Окр(пРОЦЕНТ_Наценки,1)) )";// в меньшую сторону
					// чем больше бы лпроцент наценки тем меньше будет цена( про копейки)
					
					Попытка
						
						
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);// в меньшую сторону (актуально для ЖНВЛС)
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная));
						
						
						
						
					Исключение
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						ТекстОшибки="Ошибка при расчете уточненной цены";
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР));
						КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
						
						
					КонецПопытки;
					
					Попытка
						//----------------------------< пересчитаем процент наценки по скорректированной Розничной цене >--------------------------------GtG--- 
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),3,РежимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки));
						
						
						
					Исключение
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						ТекстОшибки="Ошибка при расчете уточненного процента наценки";
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
				ИначеЕсли пРОЦЕНТ_Наценки<МинПроцНаценки Тогда
					
					ЕстьКосякТопа=Ложь;
					
					Если ТОвар.Топ100=Ложь ТОгда
						ПодтягиватьКПроценту= "МинПроцНаценки"; // было  "МаксПроцНаценки";
					Иначе   // Если заниженный процент по ТОП 100 то это - косяк и товар надо возвращать или пересматривать цену на товар в АП
						ПодтягиватьКПроценту="МинПроцНаценки";
						
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия=Стр.Партия;
						Косяк.ТОвар=Стр.Товар;
						Косяк.Косяк="ТОП 100! Заниженный процент наценки! Слишком высокая закупка! Вернуть или пересмотреть цену в АП!";
						
						ЕстьКосякТопа=Истина;
					КонецЕсли;
					
					
					//Подтянем
					Ахтунг_Дангер=("Заниженный процент наценки! Рассчитываем по "+ПодтягиватьКПроценту+" ..."+пРОЦЕНТ_Наценки+"<"+МинПроцНаценки);
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер));
					
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+"+ПодтягиватьКПроценту+") / (100+пРОЦЕНТ_Наценки) )";// в меньшую сторону  топ 100, в большую остальные 
					
					Попытка
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная));
					Исключение
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						ТекстОшибки="Ошибка при расчете уточненной цены";
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР));
						
						КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
					
					Попытка
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),6,режимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки));
						
					Исключение
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						ТекстОшибки="Ошибка при расчете уточненного процента наценки";
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
					КонецПопытки;
					
					
					Если ЕстьКосякТопа=Истина ТОгда
						Косяк.ЦенаПоРасценке=Цена_Розничная*ДокЕитК;
					КонецЕсли; 
					
				КонецЕсли;
				
				
				
				
				ЦенаЕд=Цена_Розничная; // для комментатора

				//ПредыдущаяРознЦена=ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
				
				//СпособОкругления = Неопределено;
				//МетодОкругления = Неопределено;
				
				//Округление цены по новым правилам из справочника МатрицаОкругления
				Если ТекРегион.ИспользоватьМатрицуОкругления = Истина Тогда
					ПроцентОтклоненияВверх	= неопределено;
					ПроцентОтклоненияВниз	= неопределено;
					ЦенаДоКорректировки = Цена_Розничная;
					Для каждого строкаМО из ТЗМатрицаОгруглений Цикл
						Если (Цена_Розничная >= строкаМО.Цена1 и Цена_Розничная <=строкаМО.Цена2 ) и ТОвар.ЖНВЛС = строкаМо.ИспользоватьДляЖВ Тогда
							Цена_Розничная = Округлить(Цена_Розничная,строкаМО.СпособОкругления,строкаМО.МетодОкругления);
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Округление",Новый Структура("СпособОкругления,ЦенаДоОкругления,ЦенаПослеОкругления",строкаМО.СпособОкругления,ЦенаДоКорректировки,Цена_Розничная));
							//СпособОкругления = строкаМО.СпособОкругления;
							//МетодОкругления = строкаМО.МетодОкругления;	
							ПроцентОтклоненияВверх	= строкаМО.ПроцентОтклоненияВверх;
							ПроцентОтклоненияВниз	= строкаМО.ПроцентОтклоненияВниз;
							Прервать;	
						КонецЕсли;
					КонецЦикла;				
				КонецЕсли;
				
				Если  ТекРегион.ИспользоватьПредыдущуюРозничнуюЦенуПриРасценке=Истина тогда
					//------------------<Подгоняем новую розничную под старую>-------------------GtG----27.11.2008
					// Считаем процент наценки по алг расчета процента исходя из старой цены Nold
					// Считаем процент наценки по алг расчета процента исходя из новой цены  Nnew
					// если Nold-Nnew >10% тогда  берем цену по расценке (как более правильную)
					//  <10% берем старую цену , ибо нормально
					Если 	ТОвар.ЖНВЛС=Ложь 		и 
						Товар.Топ100=Ложь 		и 
						ОМ6_ЕстьСпецЦена(Товар.Ссылка,Склад,ДатаДок)=ложь и    //????? Virus
						ПредыдущаяРознЦена>0  и Цена_Розничная > 0
						Тогда					                
						ЦенаДоКорректировки = Цена_Розничная;
						Если Цена_Розничная > ПредыдущаяРознЦена Тогда
							Если ((Цена_Розничная/ПредыдущаяРознЦена)-1)*100 < ПроцентОтклоненияВверх Тогда 
								Цена_Розничная = ПредыдущаяРознЦена;
							КонецЕсли;
						ИначеЕсли Цена_Розничная < ПредыдущаяРознЦена Тогда
							Если ((ПредыдущаяРознЦена/Цена_Розничная)-1)*100 < ПроцентОтклоненияВниз Тогда 
								Цена_Розничная = ПредыдущаяРознЦена;
							КонецЕсли;
						Иначе
						КонецЕсли;
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"КорректировкаЦены",Новый Структура("ПредыдущаяЦена,ЦенаДоКорректировки,ЦенаПослеКорректировки",ПредыдущаяРознЦена,ЦенаДоКорректировки,Цена_Розничная));
					КонецЕсли;	
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Рез",Новый Структура("ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки",ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки));
					
				КонецЕсли; // регион использует расценку с подтягиванием предыдущей розничной цены
				
				
				//==================<Реальная несферическая единица не в вакууме>===================GtG====28.11.2007
				Цена_Розничная=Цена_Розничная*ДокЕитК;
				
				//------------------<еще проверочку на превыешние закупочной цены розничной рассчитанной чтобы в минус не ушло>-------------------GtG----21.11.2007
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					Если Цена_Розничная<=Док.ЦенаЗакуп  Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина  Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар=СтрТОвар;
							СтрТП.Партия=ДанныеТекПартии["Партия"];
							СтрТП.ЕИТ=Док.Еит;
							СтрТП.КоэффЕит=ДокЕитК;
							СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
							СтрТП.ЦенаГосРег=0;
							СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
							
							СтрТП.Топ100=Товар.Топ100;
							СтрТП.Топ1000=ТОвар.Топ1000;
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток = Остаток;
							
							Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
								СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
								СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
								СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
							КонецЕсли;
							

						КонецЕсли; 
						
						
						
						
						
						ТекстОшибки="Розничная цена оказалась меньше закупочной!    ("+Товар.Код+")  "+Товар.Наименование+"    Не РАСЦЕНЕН!";
						
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ЕстьОшибкиПоГТТ=Истина;
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
						
						КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
						
						
						
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия=Стр.Партия;
						Косяк.ТОвар=Стр.Товар;
						Косяк.Косяк="Розничная цена оказалась меньше закупочной! НЕ РАСЦЕНЕН!";
						Косяк.ЦенаПоРасценке=Цена_Розничная;
						
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					//==================<Не ТОПОВЫЕ позиции наценка от закупки с ндс НЕ МЕНЕЕ 10% полюбому>===================GtG====21.01.2008
					Если (ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"],Цена_Розничная)<МинимальныйПроцентНаценкиКромеТопов)
						И (Товар.Топ100=Ложь и ТОвар.Топ1000=Ложь)
						Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина  Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар=СтрТОвар;
							СтрТП.Партия=Док.Партия;
							СтрТП.ЕИТ=Док.Еит;
							СтрТП.КоэффЕит=ДокЕитК;
							СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
							СтрТП.ЦенаГосРег=0;
							СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
							
							СтрТП.Топ100=Товар.Топ100;
							СтрТП.Топ1000=ТОвар.Топ1000;
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток = Остаток;
							
							Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
								СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
								СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
								СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
							КонецЕсли;


						КонецЕсли; 
						
						ТекстОшибки="НЕ ТОПОВЫЙ товар, наценка от закупки с НДС меньше "+МинимальныйПроцентНаценкиКромеТопов+"% ("+Товар.Код+")  "+Товар+"    Не РАСЦЕНЕН!";
						
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ЕстьОшибкиПоГТТ=Истина;
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
						
						КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
						
						Продолжить;
					КонецЕсли;
					//================================================GtG====КОНЕЦ==21.01.2008
				КонецЕсли;
				
				
				//----------------------------< комментарий окончательного результата по товару >--------------------------------GtG--- 
				//КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Рез",Новый Структура("ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки",ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки));
				
				
				
				//==================<Проверяем отклонение новой розничной цены от старой, не более чем в 2 раза>===================GtG====28.11.2008
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					Если ПредыдущаяРознЦена>0 Тогда
						КонтрольноеОтклонение=ПредыдущаяРознЦена/(Цена_Розничная/ДокЕитК);
						
						Если КонтрольноеОтклонение<=0.5 или КонтрольноеОтклонение>=2 тогда
							// это косяк. цена отличается более чем в 2 раза от предыдущей
							ТекстОшибки="Розничная цена отличается более чем в 2 раза от предыдущей розничной!";
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
							
							Косяк=ТЗКосяков.Добавить();
							Косяк.Партия=Стр.Партия;
							Косяк.ТОвар=Стр.Товар;
							Косяк.Косяк="Розничная цена отличается более чем в 2 раза от предыдущей розничной!";
							// попадет в тч ошибок расценки и документ не проведется
							
						КонецЕсли;
					КонецЕсли; 
				КонецЕсли;
				//================================================GtG====КОНЕЦ==28.11.2008
				
				
			КОНЕЦЕСЛИ;  // ЕСЛИ ИМЕЕТСЯ РАБОЧИЙ АЛГОРИТМ ДЛЯ РАСЧЕТОВ //
			
			
			
			///// ==========ЕСЛИ в регионе есть алгоритмы с отрицательным приоритетом, то прогоним еще раз по ним
			
			ИсходнаяТЗПравил.Сортировать("Приоритет Asc, ПорядокФормированияУсловия asc");

			Если ИсходнаяТЗПравил.Получить(0).Приоритет < 0 и 
				 	ПостОбработкаЦены=Ложь 
					//и 
				 	//ОМ6_ЕстьСпецЦена(Товар.Ссылка,Склад,ДатаДок)=истина   
					тогда
					ТЗПРавил=ИсходнаяТЗПРавил.Скопировать();
					ПостОбработкаЦены=Истина;
					Перейти ~ПостобработкаЦены; // 1 дополнительный проход по товару
				
			КонецЕсли;
			
			
			
			
			
			//==================<Выводим строку расцененного товара >===================GtG====20.11.2007
			СтрТП=Тп.Добавить();
			СтрТП.ТОвар=СтрТОвар;
			СтрТП.Партия=ДанныеТекПартии["Партия"];
			СтрТП.ЕИТ=Док.Еит;
			СтрТП.КоэффЕит=ДокЕитК;
			СтрТП.ЦенаПРБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
			СтрТП.ЦенаГосРег=0;
			СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
			СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
			
			СтрТП.Регион=ТекРегион;
			
			СтрТП.Топ100=Товар.Топ100;
			СтрТП.Топ1000=ТОвар.Топ1000;
			
			СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
			СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
			СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
			СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);			
			СтрТП.НН=НН;
			
			СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;
			СтрТП.Остаток = Остаток;
			
			Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
				СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
				СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
				СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
			КонецЕсли;
			
			
		КонецЦикла;	// по строкам документа
		
		Состояние("расчет " + НН + " из " + КоличествоСтрок);
		
		
		Если ЕстьОшибкиПоГТТ=Ложь тогда
			ВеткаТОварОш=ВеткаРегион.Строки.Добавить();
			ВеткаТОварОш.Ошибки="ОК. Ошибок нет";
		КонецЕсли;
		
		
		Если Цена_Розничная=0 ТОгда
			Косяк=ТЗКосяков.Добавить();
			Косяк.Партия=Стр.Партия;
			Косяк.ТОвар=Стр.Товар;
			Косяк.Косяк="Товар не расценился.";
		КонецЕсли;	
		
		
	КонецЦикла; // по Регионам
	
	
	Если АвтоРасценка=Ложь Тогда
		ЭлементыФормы.Индикатор.Значение=ЭлементыФормы.Индикатор.Значение+1;// обработан последний регион
	КонецЕсли;
	
	ЭлементыФормы .ДеревоОшибок.Значение=ДО;
	ЭлементыФормы.ДеревоОшибок.СоздатьКолонки();
	
	Попытка
		Таб.ЗакончитьГруппуСтрок();
	Исключение
	КонецПопытки;
	Таб.ТолькоПросмотр=Истина;
	Таб.ПоказатьУровеньГруппировокСтрок(Таб.КоличествоУровнейГруппировокСтрок()-1);
	Таб.Показать(); // вывод на экран
	
	ЭлементыФормы.Индикатор.Видимость=Ложь;
	//ЭлементыФормы.ТОварИндюк.Видимость=Ложь;
	
	ЭлементыФормы.ХодРасценкиРегион.Видимость=Ложь;
		
	ЭлементыФормы.ТП.ФиксацияСлева=3;
	ЭлементыФормы.ТП.Колонки.Топ100.Формат="БЛ=' '; БИ=V";
	ЭлементыФормы.ТП.Колонки.Топ1000.Формат="БЛ=' '; БИ=V";
	
	
	
	КонецРасценки=ТекущаяДата();
	
	ВремяВыполнения=КонецРасценки-НачалоРасценки;
	
	ВВМин=Цел(ВремяВыполнения/60);
	ВВСек=ВремяВыполнения%60;
	
	
	
	ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Готово! "+Формат(ВВМин,"ЧЦ=2; ЧН=00; ЧВН=")+":"+Формат(ВВсек,"ЧЦ=2; ЧН=00; ЧВН=");
	
КонецПроцедуры

Процедура ТПГТТОткрытие(Элемент, СтандартнаяОбработка)
КонецПроцедуры

Процедура КоманднаяПанель1СохранитьЦены(Кнопка)
	//СохранитьЦены в партии , серии;
	
	
	//==================<ВАЖНО>===================GtG====28.11.2007
	// в регистре цен хранятся цены на идеальные сферические единицы в вакууме, с коэфициентом=1
	//================================================GtG====КОНЕЦ==28.11.2007
	
	
	Если ЭтаФорма.ВладелецФормы= Неопределено Тогда
		ЭФВО=ДокОбъект;	
	Иначе
		ЭФВО=ЭтаФорма.ВладелецФормы;
	КонецЕсли;
	
	Если ЭФВО=Неопределено Тогда
		ЭФВО=Документ.ПолучитьОбъект();
	КонецЕсли;	
	
	
	Если ЗаписыватьЦеныВРегистрЦен=Истина ТОгда
		
		
		//----------------------------< Очистка регистра цен перед записью новых значений >--------------------------------GtG---
		Попытка
			Движения=ЭФВО.Движения;
		Исключение
			ЭФВО=Документ.ПолучитьОбъект();
			Движения=ЭФВО.Движения;
		КонецПопытки;
		
		
		Для к = 0 По 5 Цикл
			Попытка
				Движения.Цены.Очистить(); 			 
				Движения.Цены.Записать();
				Прервать;
			Исключение
				Предупреждение("Ожидание блокировки записи цен в регистр сведений",2);
			КонецПопытки;
		КонецЦикла;
		//----------------------------<  >--------------------------------GtG---
		
		
		Если АвтоРасценка=Ложь ТОгда
			//ЭлементыФормы.ТОварИндюк.Значение=0;
			//ЭлементыФормы.ТОварИндюк.МаксимальноеЗначение=ТП.Количество();
		КонецЕсли;
	
		//ЭлементыФормы.ТОварИндюк.Видимость=Истина;
		
		
		Для Каждого Стр из ТП Цикл
			
			
			
			Если Стр.ЦенаРозн=0 Тогда
				Если Авторасценка=Ложь ТОгда  // при ручной расценке долбим пока все цены не рассчитаются
					ПРедупреждение("У товара "+Стр.ТОвар+" для региона "+Стр.регион+" не рассчиталась розничная цена!
					|Чтобы цены сохранились - они все должны быть рассчитаны!");
					Возврат;
				Иначе
					Продолжить; // при авторасценке пропускаем строчку нерасцененного товара
				КонецЕсли;	
			КонецЕсли;	
			
			
			ЗапРС=Движения.Цены.Добавить();
			
			ЗапРС.Активность=Истина;
			ЗапРС.АП=Стр.ТОвар;
			
			
			ЗапРС.РЕГИОН=Стр.РЕГИОН;
						
			ЗапРС.Партия=Стр.Партия;
			ЗапРС.Период=ЭФВО.Дата;
			ЗапРС.Регистратор=ЭФВО.Ссылка;
			
			ЗапРС.ЦенаРознГТТ=Стр.ЦенаРозн/Стр.КоэффЕит;
			
			Если АвтоРасценка=Ложь ТОгда
				//ЭлементыФормы.ТОварИндюк.Значение=ЭлементыФормы.ТОварИндюк.Значение+1;
			КонецЕсли;
		
		КонецЦикла; 
		Для к = 0 По 5 Цикл
			Попытка
				Движения.Цены.Записать();
				Прервать;
			Исключение
				Предупреждение("Ожидание блокировки записи цен в регистр сведений",2);
			КонецПопытки;
		КонецЦикла;
				
		СтрИзм=ЭФВО.Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		Если АвтоРасценка=Ложь ТОгда
			СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.Расценка;
		Иначе
			СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.АвтоРасценка;
		КонецЕсли;
		
		
		КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+ТЗКосяков.Количество();
		
		СтрИзм.КомментарийИзменения="Ошибок при расценке "+КоличествоОшибокРАсценки;
		
		Если типзнч(ЭФВО)  = Тип ("ДокументОбъект.ПоступлениеТовара") ТОгда
			ЭФВО.Дата=ТекущаяДАта();
			
			СтрИзм=ЭФВО.Изменения.Добавить();
			СтрИзм.Дата=ТекущаяДата();
			СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
			СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ИзменениеДаты;
			СтрИзм.КомментарийИзменения="Фактически оприходован "+ЭФВО.Дата;
			
			//ЭФВО.Записать(); Запишем документ один раз в конце процедуры
		КонецЕсли; 
	КонецЕсли;	
	
	ОчиститьСообщения(); 
	ЕСли УстановитьрозничныеЦеныВДокументе=Истина Тогда //пихаем их в документ
		
		Если АвтоРасценка=Ложь ТОгда
			//ЭлементыФормы.ТОварИндюк.Значение=0;
			//ЭлементыФормы.ТОварИндюк.МаксимальноеЗначение=ТП.Количество();
		КонецЕсли;
		
		//ЭлементыФормы.ТОварИндюк.Видимость=Истина;
		
		
		если АвтоРасценка=Ложь 
				и ТипЗнч(Документ)<>Тип("ДокументСсылка.ПеремещениеТовара") 
				и ТипЗнч(Документ)<>Тип("ДокументСсылка.ПереРасценкаТоваров") 
				
			Тогда
			Если  ЭФВО.Проведен=Истина Тогда
				ПРедупреждение("В проведенный документ розничные цены записать не могу!");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		
		ТОвар=ЭФВО.Товар;
		
		Для каждого СтрТП из ТП Цикл
			
			
			Если СтрТП.ЦенаРозн=0 Тогда
				Если Авторасценка=Ложь ТОгда  // при ручной расценке долбим пока все цены не рассчитаются
					ПРедупреждение("У товара "+СтрТП.ТОвар+" для региона "+СтрТП.регион+" не рассчиталась розничная цена!
					|Чтобы цены сохранились - они все должны быть рассчитаны!");
					Возврат;
				Иначе
					Продолжить; // при авторасценке пропускаем строчку нерасцененного товара
				КонецЕсли;	
			КонецЕсли;	

			
			
			Если ТипЗнч(Документ)<>Тип("ДокументСсылка.ПерерасценкаТоваров") Тогда
				
				
				Если ТипЗнч(Документ)<>Тип("ДокументСсылка.ПеремещениеТовара") Тогда
					Если СтрТП.Регион<>ЭФВО.Склад.Регион Тогда
						Продолжить;
					КонецЕсли;
				Иначе // перемещение товара
					Если СтрТП.Регион<>ЭФВО.СкладПолучатель.Регион Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				// в перерасценке товаров допустимо расценять по другому региону
			КонецЕсли;
			
			
			Если Строка(СтрТП.ЦенаРозн)="" Тогда
				//Сообщить("Строка "+СтрТП.НН+"  Нет розничной цены! Товар: "+СтрТП.ТОвар+"   Партия: "+СтрТП.Партия);
				Продолжить;
			КонецЕсли; 	
			
			СтрП=ТОВар.Найти(СтрТП.Партия,"Партия");
			Если СтрП= Неопределено Тогда
				//Сообщить("Не найдена строка с партией "+СтрТП.Партия+" пропускаем...");
				Продолжить;
			КонецЕсли; 
			
			
			Цена1миншт=СтрТП.ЦенаРозн/СтрТП.КоэффЕит;
			
			
			
			Если ТипЗнч(Документ)<>Тип("ДокументСсылка.ПеремещениеТовара") Тогда
				СтрП.ЦенаРозн=Цена1миншт*СтрП.Коэфф;	
				СтрП.СуммаРозн=СтрП.ЦенаРозн*СтрП.КоличествоФакт;
				
				Если  СтрП.СуммаЗакуп<>0 и СтрП.СуммаРозн<>0 Тогда
					СтрП.ПроцентРознНац=(СтрП.СуммаРозн/СтрП.СуммаЗакуп-1)*100;
				ИначеЕсли СтрП.ЦенаРозн<>0 и СтрП.ЦенаЗакуп<>0 ТОГДА
					СтрП.ПроцентРознНац=(СтрП.ЦенаРозн/СтрП.ЦенаЗакуп-1)*100;
				КонецЕсли;	
				
				
				
				
				//------------------<Не пропускаем товар с отрицательной наценкой ( косяк разбивки?)>-------------------GtG----01.12.2008
				Если СтрП.ПроцентРознНац<0 Тогда
					Косяк=ТЗКосяков.Добавить();
					Косяк.Партия=СтрП.Партия;
					Косяк.ТОвар=СтрП.Товар;
					Косяк.Косяк="Отрицательная наценка! (Разбивочный товар?) "+СтрП.ПроцентРознНац;
					Косяк.ЦенаПоРасценке=СтрП.ЦенаРозн;
				КонецЕсли;
				СтрП.НДСРозн=ОМ3_НДСИзСуммыПоСтавке(СтрП.СуммаРозн,СтрП.СтавкаНДС);
			Иначе
				СтрП.ЦенаРознПол=Цена1миншт*СтрП.Коэфф;	
				СтрП.СуммаРознПол=СтрП.ЦенаРознПол*СтрП.КоличествоФакт;
				
				Если  СтрП.СуммаЗакуп<>0 и СтрП.СуммаРознПол<>0 Тогда
					СтрП.ПроцентРознНац=(СтрП.СуммаРознПол/СтрП.СуммаЗакуп-1)*100;
				ИначеЕсли СтрП.ЦенаРознПол<>0 и СтрП.ЦенаЗакуп<>0 ТОГДА
					СтрП.ПроцентРознНац=(СтрП.ЦенаРознПол/СтрП.ЦенаЗакуп-1)*100;
				КонецЕсли;	
				
				
				
				
				//------------------<Не пропускаем товар с отрицательной наценкой ( косяк разбивки?)>-------------------GtG----01.12.2008
				Если СтрП.ПроцентРознНац<0 Тогда
					Косяк=ТЗКосяков.Добавить();
					Косяк.Партия=СтрП.Партия;
					Косяк.ТОвар=СтрП.Товар;
					Косяк.Косяк="Отрицательная наценка! (Разбивочный товар?) "+СтрП.ПроцентРознНац;
					Косяк.ЦенаПоРасценке=СтрП.ЦенаРознПол;
				КонецЕсли;
				СтрП.НДСРознПол=ОМ3_НДСИзСуммыПоСтавке(СтрП.СуммаРознПол,СтрП.СтавкаНДС);

				
			КонецЕсли;
			
			
			Если АвтоРасценка=Ложь ТОгда
				//ЭлементыФормы.ТОварИндюк.Значение=ЭлементыФормы.ТОварИндюк.Значение+1;
			КонецЕсли;	
			
		КонецЦикла;	
		//ЭФВО.Записать(РежимЗаписиДокумента.Запись); Запишем документ один раз в конце процедуры
		
		//сообщить("Розничные цены записаны в документ");
		
	КонецЕсли;
	
	
	Если (ТипЗнч(Документ)=Тип("ДокументСсылка.ПоступлениеТовара"))  ТОгда
		ОП=ЭФВО.ОшибкиРасценки;
		
		Если Константы.БеспределСЖНВЛС.Получить() = Истина Тогда
			ПустаяПартия = Справочники.Партии.ПустаяСсылка();
			
			СписокУдаляемыхСтрок=новый СписокЗначений;
			ЕстьКосякиЖ2010=ложь;
			Для каждого стр из ОП Цикл
				Если стр.Партия = ПустаяПартия Тогда
					//Это косяк ЖНВЛС апрель 2010. нет цены госреестра либо она там совсем кривая
					
					// Нужно запороть документ - 1) колво=бойбрак=недовоз + комментарий "Проблемы с ценой госрегистрации"
					// 2) сумма розн=0
					
					ТабТовара=ЭФВО.Товар;
					
					СтрокиТовара=ТабТовара.НайтиСтроки(новый Структура("ТОвар",Стр.Товар)); // все строки товара в доке
					
					Для Каждого СтрСтрТовара Из СтрокиТовара Цикл
						СтрСтрТовара.СуммаРозн  =0;
						СтрСтрТовара.КоличествоФакт=0;
						СтрСтрТовара.БойБрак	   =СтрСтрТовара.Количество;
						СтрСтрТовара.Недовоз   =СтрСтрТовара.Количество;
						ЕстьКосякиЖ2010=Истина;
					КонецЦикла;
					продолжить;
				КонецЕсли;
				СписокУдаляемыхСтрок.Добавить(стр);
			КонецЦикла;
			Для Каждого ССУС из СписокУдаляемыхСтрок цикл
				ОП.Удалить(ССУС.Значение);
			КонецЦикла;	
			
			Если ЕстьКосякиЖ2010=Истина тогда
				ЭФВО.Комментарий=ЭФВО.Комментарий+" ### Проблемы с ценой госрегистрации ###" ;
			КонецЕсли;
			
			
		Иначе
			ОП.Очистить();// при каждой расценке перезаполняется. в идеале - пустая.
		КонецЕсли;

		
		ТЗКосяков.Свернуть("Партия,Товар,Косяк,ЦенаПоРасценке","");
		
		
		Для каждого Стр из ТЗКосяков Цикл
			СтрОп=ОП.Добавить();
			СтрОП.Товар 	= Стр.Товар;
			СтрОП.Партия 	= Стр.Партия;
			СтрОП.ОписаниеОшибки= Стр.Косяк;
			СтрОП.ЦенаПоРасценке= Стр.ЦенаПоРасценке;
		КонецЦикла;
		
		
		ЭФВО.Статус=Перечисления.СтатусПрихода.Расценен;
		
		Если ТЗКосяков.Количество()>0 ТОгда
			ЭФВО.Статус=Перечисления.СтатусПрихода.ПроблемыСРасценкой;
		КонецЕсли;
		

	ИначеЕсли (ТипЗнч(Документ)=Тип("ДокументСсылка.ПеремещениеТовара")) ТОгда
		ОП=ЭФВО.ОшибкиРасценки;
		ОП.Очистить();// при каждой расценке перезаполняется. в идеале - пустая.
		
		ТЗКосяков.Свернуть("Партия,Товар,Косяк,ЦенаПоРасценке","");
		
		
		Для каждого Стр из ТЗКосяков Цикл
			СтрОп=ОП.Добавить();
			СтрОП.Товар 	= Стр.Товар;
			СтрОП.Партия 	= Стр.Партия;
			СтрОП.ОписаниеОшибки= Стр.Косяк;
			СтрОП.ЦенаПоРасценке= Стр.ЦенаПоРасценке;
		КонецЦикла;
		
		
		ЭФВО.Статус=Перечисления.СтатусПеремещения.Расценен;
		
		Если ТЗКосяков.Количество()>0 ТОгда
			ЭФВО.Статус=Перечисления.СтатусПеремещения.ПроблемыСРасценкой;
		КонецЕсли;
		
		
	КонецЕсли;
	
	Для н = 0 По 5 Цикл
		Попытка
			ЭФВО.Записать(РежимЗаписиДокумента.Запись);
			Прервать;
		Исключение
			Предупреждение("Ожидание блокировки",1);
		КонецПопытки;
	КонецЦикла;
	
	
	
	
	//предупреждение("Расценка сохранена.",1);
	
    	
КонецПроцедуры

Процедура ДеревоОшибокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если ТипЗнч(ВыбраннаяСтрока.Ошибки)<>Тип("Строка") ТОгда
		ВыбраннаяСтрока.Ошибки.ПолучитьФорму().Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура ПоТОваруНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	МассивТоваров=ЭтаФорма.ВладелецФормы.Товар.ВыгрузитьКолонку("Товар");
	Элемент.СписокВыбора.ЗагрузитьЗначения(МАссивТоваров);
КонецПроцедуры

Процедура ТПЦенаРознПриИзменении(Элемент)
	
	//Пересчет процентов наценки при изменении розничной цены вручную
	
	ТСР= ЭлементыФормы.ТП.ТекущаяСтрока;
	
	СтрТП=ЭлементыФормы.ТП.ТекущаяСтрока;
	Если СтрТП.Товар.ЖНВЛС = Истина Тогда
		//СтрТП.ЦенаОптовая=СтрТП.ЦенаРозн;// затычка
		ЦенаЗакупБезНДС = Окр(СтрТП.ЦенаЗакуп/(1+СтрТП.Партия.СтавкаНДС.Ставка/100),2);
		СтрТП.НаценкаОтЗакупки = Окр((СтрТП.ЦенаРозн/(1+СтрТП.Партия.СтавкаНДС.Ставка/100) - ЦенаЗакупБезНДС)*100/СтрТП.ЦенаПрБезНДС,2);
	Иначе
		СтрТП.НаценкаОтЗакупки = ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,СтрТП.ЦенаРозн);
	КонецЕсли;
	СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,СтрТП.ЦенаРозн);
	СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп-ОМ3_НДСИзСуммыПоСтавке(СтрТП.ЦенаЗакуп,СтрТП.Партия.СтавкаНДС,2),СтрТП.ЦенаРозн);
	СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаПрБезНДС,СтрТП.ЦенаРозн);
	
КонецПроцедуры

Процедура КоманднаяПанель1Закрыть(Кнопка)
	ЭтаФорма.Закрыть();
КонецПроцедуры

Процедура КоманднаяПанель2ВыбратьВсеРЕг(Кнопка)
	ВыбРег.ЗаполнитьПометки(Истина);
КонецПроцедуры

Процедура КоманднаяПанель2неВыбратьВсеРег(Кнопка)
	ВыбРег.ЗаполнитьПометки(Ложь);

КонецПроцедуры

Процедура КоманднаяПанель2ОбратитьРЕГ(Кнопка)
	Для каждого Стр из ВыбРег Цикл
		Стр.Пометка=Не Стр.Пометка;
	КонецЦикла;	 
КонецПроцедуры

Процедура ТППриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Остаток > 0 Тогда
		ОформлениеСтроки.Ячейки.Товар.ЦветФона = Новый Цвет(104, 240, 90);	
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1кнПоказатьЦеныКонкурентов(Кнопка)
	
	Если Константы.ИспользоватьЦеныКонкурентовПриРасценке.Получить() = Истина Тогда
		ТекСтрока = ЭлементыФормы.ТП.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ  ПустаяСтрока(ТекСтрока.Конкурент) Тогда
			Форма = ПолучитьФорму("Обработка.Расценка_v2.Форма.ВсеЦеныКонкурентов");
			Форма.Код = ТекСтрока.Товар.Код;
			Форма.Открыть();
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Запрос=Новый Запрос;

Запрос.Текст = "ВЫБРАТЬ
             |	МатрицаОкруглений.Цена1,
             |	МатрицаОкруглений.Цена2,
             |	МатрицаОкруглений.ПроцентОтклоненияВверх,
             |	МатрицаОкруглений.ПроцентОтклоненияВниз,
             |	МатрицаОкруглений.СпособОкругления,
             |	МатрицаОкруглений.МетодОкругления,
             |	МатрицаОкруглений.ИспользоватьДляЖВ
             |ИЗ
             |	Справочник.МатрицаОкруглений КАК МатрицаОкруглений";
			 
ТЗМатрицаОгруглений	= Запрос.Выполнить().Выгрузить();

ЭлементыФормы.ХодРасценкиРегион.Видимость=Ложь;
ЭлементыФормы.ХодРасценкиТОвар.Видимость=Ложь;
	
Комментировать=Истина;
ВыводитьНеРасцененные=Истина;

ТХТ="ВЫБРАТЬ
	    |	Регионы.Ссылка как Рег
	    |ИЗ
	    |	Справочник.Регионы КАК Регионы
	    |ГДЕ
	    |	Регионы.ПометкаУдаления = Ложь";
Запрос.Текст=ТХТ;
	
ВыбРег.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Рег"));

Попытка
	Если ЭтаФорма.ВладелецФормы.Склад.ТипСклада = Перечисления.ТипыМХ.Розн Тогда
		Для каждого Стр из ВыбРег Цикл
			Если Стр.Значение= ЭтаФорма.ВладелецФормы.Склад.Регион ТОгда
				Стр.Пометка=Истина;
			КонецЕсли;
		КонецЦикла;	
	Иначе
		ВыбРег.ЗаполнитьПометки(Истина);
	КонецЕсли;
Исключение
КонецПопытки; 


МинимальныйПроцентНаценкиКромеТопов=0;

ЗаписыватьЦеныВРегистрЦен=Истина;
УстановитьрозничныеЦеныВДокументе=Ложь;
ИспользоватьЦеныКонкурентов = Константы.ИспользоватьЦеныКонкурентовПриРасценке.Получить();
ПроверятьЗакупкуИРозницу = Истина;

