Перем ПервичныйТекстЗапроса;


Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура КоманднаяПанель1ОтобратьТовар(Кнопка)
	
	ТЗДокументы.Очистить();
	
	Построитель.Параметры.Очистить();
	
	Построитель.Параметры.Вставить("ТекущаяДата",КонецДня(ТекущаяДата()));
	Построитель.Параметры.Вставить("ИскатьМинЦГР",ИскатьМинЦГР);

	
	
	
	Построитель.ОтображатьСостояние=Истина;
	
	Построитель.Выполнить();
	
	Рез=Построитель.Результат.Выгрузить();
	
	
	Если Тест=Ложь Тогда
		
		//---------------------- Доп обрабока : количество - целые упаковки ----------GtG--27.08.2009 
		// нихрена - все подряд, но если есть огрызки - то доводим количество до полной коробки в плюс. 04.04.2009
		Для каждого  Стр Из Рез  Цикл
			Если  Стр.Остаток- Цел(Стр.Остаток)>0 тогда
				Стр.Остаток=Цел(Стр.Остаток)+1;
			КонецЕсли; 
		КонецЦикла;  
	КонецЕсли;
	
	ЭлементыФормы.РезОтбора.Значение=Рез;
	ЭлементыФормы.РезОтбора.СоздатьКолонки();
	Заполнить_ПоляДляФормулы();

	
	Если Тест=Ложь Тогда
		ЭлементыФормы.РезОтбора.Колонки["НоваяЦена"].ЦветФонаПоля=Новый Цвет(255,255,175);
		ЭлементыФормы.РезОтбора.Колонки["ПроцентНаценки"].ЦветФонаПоля=Новый Цвет(255, 222, 254);
	КонецЕсли;
	
	ЭлементыФормы.Панель1.ТекущаяСтраница= ЭлементыФормы.Панель1.Страницы["РезультатОтбора"];
	
	
	
КонецПроцедуры

Процедура ВыполнитьИзменениеЦеныНажатие(Элемент)
	
	УстановитьПроцентНаценки=0; // чтоб не путацца
	ЕдинаяЦена=0;
	
	
	Если ИзменитьРозничнуюЦенуНа=0 Тогда
		Предупреждение("Не заполнено поле ""Изменить розничную цену на"" !");
		Возврат;
	КонецЕсли; 
	
	Если Вопрос("Изменить розничную цену на "+ИзменитьРозничнуюЦенуНа+"% относительно старой розничной цены?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Нет,"Изменить относительно старой цены?")=КодВозвратаДиалога.Нет тогда
		Предупреждение("Вы отказались от изменения цены на "+ИзменитьРозничнуюЦенуНа+"%");
		Возврат;
	КонецЕсли; 	
	
	
	
	Для каждого Стр из РезОтбора Цикл
		Стр.НоваяЦена=Окр(Стр.СтараяЦена+Стр.СтараяЦена/100*ИзменитьРозничнуюЦенуНа,1);
		Стр.ПроцентНаценки=Окр((Стр.НоваяЦена/Стр.ЗакупочнаяЦена-1)*100,2);
	КонецЦикла;	 
КонецПроцедуры

Процедура НоваяЦенаСтараяЦенаНажатие(Элемент)
	Для каждого Стр из РезОтбора Цикл
		Стр.НоваяЦена=Стр.СтараяЦена;
		Стр.ПроцентНаценки=Окр((Стр.НоваяЦена/Стр.ЗакупочнаяЦена-1)*100,2);
	КонецЦикла;	 
КонецПроцедуры

//==========================================================GtG====
Функция ПолучитьСписокСкладов ()  
	//----------------------------------
	//Назначение:
	//  Все склады из тз отобранного товара
	//----------------------------------
	ТЗ=РезОтбора.Скопировать();
	ТЗ.Свернуть("Склад");
	
	Если ТЗ.Количество()>0 тогда
		Возврат ТЗ.ВыгрузитьКолонку("Склад");
	Иначе
		Возврат Новый массив;
	КонецЕсли;
	
КонецФункции	//ПолучитьСписокСкладов
//==========================================================GtG====

Функция ЦеныПравильные()
	Для каждого  Стр  Из  РезОтбора Цикл
		Если Стр.СтараяЦена=Стр.НоваяЦена ТОгда
			Возврат Ложь;// Если хоть одна строка содержит не измененные цены - в сад! Ибо так нельзя, проходили, знаем...
		КонецЕсли;	
	КонецЦикла;  
	Возврат Истина; // все ОК.
КонецФункции // ЦеныПравильные()
 

Функция ПроверитьПереоценкуСвежихПартий()
	
	Запрос=Новый Запрос();
	
	Запрос.Текст=" ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		база.ДокументПоступления как Документ,
	|		база.ДокументПоступленияСклад КАК Аптека
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА Партии.ПартияРодитель.Ссылка ЕСТЬ NULL 
	|					ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Партии.ДокументПоступления.Дата, ДЕНЬ), &ТекущаяДата, ДЕНЬ)
	|				ИНАЧЕ NULL
	|			КОНЕЦ КАК ВозрастПартии,
	|			Партии.ДокументПоступления КАК ДокументПоступления,
	|			Партии.Ссылка КАК Партия,
	|			Партии.ДокументПоступления.Склад КАК ДокументПоступленияСклад
	|		ИЗ
	|			Справочник.Партии КАК Партии
	|		ГДЕ
	|			Партии.Ссылка В(&МассивПартий)
	|			И ВЫБОР
	|					КОГДА Партии.ПартияРодитель.Ссылка ЕСТЬ NULL 
	|						ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Партии.ДокументПоступления.Дата, ДЕНЬ), &ТекущаяДата, ДЕНЬ)
	|					ИНАЧЕ NULL
	|				КОНЕЦ ЕСТЬ НЕ NULL 
	|			И ВЫБОР
	|					КОГДА Партии.ПартияРодитель.Ссылка ЕСТЬ NULL 
	|						ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Партии.ДокументПоступления.Дата, ДЕНЬ), &ТекущаяДата, ДЕНЬ)
	|					ИНАЧЕ NULL
	|				КОНЕЦ <= 3) КАК база
	|	
	|	УПОРЯДОЧИТЬ ПО
	|		ДокументПоступленияСклад,
	|		база.ДокументПоступления
	| ";
	
	Запрос.УстановитьПараметр("ТекущаяДата",НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("МассивПартий",РезОтбора.ВыгрузитьКолонку("Партия"));
	
	Рез=Запрос.Выполнить().Выгрузить();
	
	Если Рез.Количество()=0 Тогда
		// Все Ок 
		Возврат неопределено;
	Конецесли;
	
	Таб=Новый ТабличныйДокумент;
	Макет=ЭтотОбъект.ПолучитьМакет("ПредупреждениеОПереоценкеСвежихПриходов");
	
	Секция=Макет.ПолучитьОбласть("Шапка");
	Таб.Вывести(Секция);
	
	Секция=Макет.ПолучитьОбласть("Строка");
	для Каждого Стр Из Рез Цикл
		
		Секция.Параметры.Заполнить(Стр);
		Таб.Вывести(Секция);
		
	КонецЦикла;	
	
	Таб.ТолькоПросмотр=Истина;
	Таб.ОтображатьЗаголовки=Ложь;
	Таб.ОтображатьСетку=Ложь;
	
	Таб.Показать();
	
	Возврат Рез;
	
КонецФункции


Функция СформироватьТекстАхтунгаПроПереоценкуСвежихПартий(РезПроверкиСвежихПартий,Аптека)
	
	Если РезПроверкиСвежихПартий=Неопределено Тогда
		Возврат "";
	КонецЕсли;	
	
	// РезПроверкиСвежихПартий= тз( документ,аптека)
	
	СообщениеАхтунга="ПРЕДУПРЕЖДЕНИЕ!!!   
	|   В глобальную переоценку попали партии поступившие в течение последних 3-х дней. 
	|   Требуется сначала оприходовать товар и проверить и отметить бой, брак, недовоз. 
	|   После загрузки переоценки отметить бой/брак/недовоз будет НЕВОЗМОЖНО!!!
	|
	| Проверьте следующие документы перед загрузкой глобальной переоценки:
	|";
	
	СтрокиАхтунга=РезПроверкиСвежихПартий.НайтиСтроки(Новый Структура("Аптека",Аптека));
	
	Если СтрокиАхтунга.Количество()=0 тогда
		Возврат "";
	КонецЕсли;
	
	Для Каждого Стр из СтрокиАхтунга цикл
		
	   СообщениеАхтунга=СообщениеАхтунга+Символы.ПС+Стр.Документ;
   КонецЦикла;
   
   
   СообщениеАхтунга=СообщениеАхтунга+Символы.ПС;
   
   Возврат СообщениеАхтунга ;

КонецФункции




Процедура СоздатьРаспоряженияНаПереоценку(Кнопка)
	
	КомментарийДокументов="ГЛ. ПЕРЕОЦЕНКА ("+Комментарий+")";
	
	
	
	//==================<ПолучитьСписокСкладов>===================GtG====30.01.2009
	
	СписокСкладов=ПолучитьСписокСкладов();
	
	Если СписокСкладов.Количество()= 0 Тогда
		Предупреждение("Нет товара для переоценки!");
		Возврат;
	КонецЕсли;	
	
	
	Если ЦеныПравильные()=Ложь Тогда
		Предупреждение("Новые цены равны старым! Вы не изменили новые цены!");
		Возврат;
	КонецЕсли;	
	
	ЕстьНулевыеЦены=Ложь;
	ЕстьОдинаковыеЦены = Ложь;
	Для Каждого Стр Из РезОтбора Цикл
		Если Стр.НоваяЦена=0 Тогда
			Сообщить("Нулевая новая цена! "+Стр.Товар);
			ЕстьНулевыеЦены=Истина;
		КонецЕсли;	
		Если Стр.НоваяЦена = стр.СтараяЦена Тогда
			ЕстьОдинаковыеЦены = Истина;
			Сообщить("Цена не изменена! " + Стр.Товар );
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьНулевыеЦены=Истина Тогда
		
		Если НК_НУНОЦ=Ложь ТОгда
			Возврат;
		Иначе
			Сообщить("Создаем распоряжения на переоценку с нулевыми новыми ценами!");
		КонецЕсли;
		
	КонецЕсли;	
	
	Если ЕстьОдинаковыеЦены Тогда
		Предупреждение("Документы не созданы, так как в таблице присутствуют одинаковые цены до и после");
		Возврат;	
	КонецЕсли;
	
	
	//-------------------------------------------------------------------
	ЭлементыФормы.иНД.Значение=0;
	ЭлементыФормы.иНД.МаксимальноеЗначение=сПИСОКсКЛАДОВ.Количество();
	
	
	//---------------<Проверим на переоценку свежих партий>---------------------------// GtG // 08.06.2012 16:22:07 
	// если партия возникла 3 дня назад и позже , то существует вероятность того, что на аптеке товар
	// еще не разобран и недовозы и браки не проставлены. Если такой товар переоценить а потом обнаружится недовоз, то 
	// на остатках аптеки образуются минуса.
	
	//РезПроверкиСвежихПартий=ПроверитьПереоценкуСвежихПартий();
	РезПроверкиСвежихПартий = Неопределено;
	
	
	Для каждого Аптека из СписокСкладов Цикл
		
		СписокНомеровРаспоряжений="";
		
		
		
		ЭлементыФормы.Инд.Значение=ЭлементыФормы.Инд.Значение+1; 
		
		
		
		//------------------<По каждому складу создаем документы переоценки по 200 строк не более>-------------------GtG----30.01.2009
		
		Х=0;
		
		СтрокиАптеки=РезОтбора.НайтиСтроки(Новый Структура("Склад",Аптека)); // строки рез отбора по складу аптека
		
		//------------------<Шапка>-------------------GtG----30.01.2009
		Док=Документы.РаспоряжениеНаПереоценку.СоздатьДокумент();
		Док.Дата=ТекущаяДата();
		Док.Комментарий=КомментарийДокументов;
		Док.Склад=Аптека;
		Док.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		Док.Статус=Перечисления.СтатусПеремещения.ЗагруженСоздан;
		//--------------------------------------------------------GtG----КОНЕЦ--30.01.2009
		
		
		Для каждого СА из СтрокиАптеки Цикл 
			
			Х=Х+1;
			
			// СА - фактически строка рез отбора
			СтрДок=Док.Товар.Добавить();
			
			//---------------------------------------
			СтрДок.ЕИТ=СА.ЕдиницаОтгрузки;
			СтрДок.К=СА.ЕдОтгр_К;
			СтрДок.Количество= СА.Остаток;
			СтрДок.Комментарий=СА.Комментарий;
			СтрДок.НоваяЦена  = СА.НоваяЦена  ;
			СтрДок.Партия  = СА.Партия  ;
			СтрДок.ПроцентНаценки  = СА.ПроцентНаценки  ;
			СтрДок.Серия  = СА.Серия  ;
			СтрДок.СрокГодности  = СА.СрокГодности  ;
			СтрДок.СтараяЦена  = СА.СтараяЦена  ;
			СтрДок.Товар  = СА.Товар  ;
			
			//--------------------- Проверим на возможный косяк с разбивкой и откорректируем новую цену -----------
			Если (СА.Разбивается=Истина) и (КорректировкаРазбивки = Истина) Тогда
				КоэффКосячности=СтрДок.СтараяЦена/СтрДок.НоваяЦена;
				Если КоэффКосячности>3 Тогда
					// маловероятно, что товар переоценен более чем в 3 раза. Значит это 
					// попытка установить цену за упаковку как за штучку
				    НоваяЦенаУпаковки=СтрДок.НоваяЦена*СтрДок.К;
					
					КоэфКос2=?(СтрДок.СтараяЦена>НоваяЦенаУпаковки,СтрДок.СтараяЦена,НоваяЦенаУпаковки)/?(СтрДок.СтараяЦена<НоваяЦенаУпаковки,СтрДок.СтараяЦена,НоваяЦенаУпаковки); // большую/меньшую
					Если КоэфКос2>1 и КоэфКос2<3 Тогда
						// Это точно тот самый косяк. Ставим цену за упаковку
						СтрДок.НоваяЦена  = НоваяЦенаУпаковки;
					КонецЕсли;	
					
				КонецЕсли;
			
			КонецЕсли;
			
			//Корректируем новую цену на случай, когда при делении на коэффициент получается хвост после запятой
			Если СА.Разбивается = Истина или  СА.ЕдОтгр_К > 1 Тогда
				ЦенаЗаШтучку = СА.НоваяЦена/СА.ЕдОтгр_К;
				
				Если Цел(ЦенаЗаШтучку*100)/100	<> ЦенаЗаШтучку Тогда
					Если СА.ЖНВЛС = Истина Тогда
						ЦенаЗаШтучку = Цел(ЦенаЗаШтучку*10)/10;	
					Иначе
						ЦенаЗаШтучку = Окр(ЦенаЗаШтучку,2);
					КонецЕсли;
						
					СтрДок.НоваяЦена = ЦенаЗаШтучку*СА.ЕдОтгр_К;
					
				КонецЕсли;
			КонецЕсли;
			
			Если Х%200=0 ТОгда
				Док.Записать(РежимЗаписиДокумента.Запись);
				ДлинаНомера = СтрДлина(Формат(Док.Номер,"ЧГ="));
				Док.НомерДокументаАптеки=Лев("ГП00000000",10-ДлинаНомера)+Формат(Док.Номер,"ЧГ=");
				Док.Записать(РежимЗаписиДокумента.Проведение);
				
				СписокНомеровРаспоряжений=СписокНомеровРаспоряжений+" "+Док.НомерДокументаАптеки+Символы.ПС;
				
				
				ДокСтр=ТЗДокументы.Добавить();
				ДокСтр.Документ=Док.Ссылка;
				ДокСтр.Склад=Док.Склад;
				ДокСтр.Комментарий=Док.Комментарий;
				
				//------------------<Шапка>-------------------GtG----30.01.2009
				Док=Документы.РаспоряжениеНаПереоценку.СоздатьДокумент();
				Док.Дата=ТекущаяДата();
				Док.Комментарий=КомментарийДокументов;
				Док.Склад=Аптека;
				Док.Сотрудник=ПараметрыСеанса.ТекущийСотр;
				Док.Статус=Перечисления.СтатусПеремещения.ЗагруженСоздан;
				//--------------------------------------------------------GtG----КОНЕЦ--30.01.2009
			КонецЕсли;
		КонецЦикла;	 
		
		//------------------<последний документ пачки>-------------------GtG----30.01.2009
		Док.Записать(РежимЗаписиДокумента.Запись);
		ДлинаНомера = СтрДлина(Формат(Док.Номер,"ЧГ="));
		Док.НомерДокументаАптеки=Лев("ГП00000000",10-ДлинаНомера)+Формат(Док.Номер,"ЧГ=");
		Док.Записать(РежимЗаписиДокумента.Проведение);
		СписокНомеровРаспоряжений=СписокНомеровРаспоряжений+" "+Док.НомерДокументаАптеки+Символы.ПС;
		
		ДокСтр=ТЗДокументы.Добавить();
		ДокСтр.Документ=Док.Ссылка;
		ДокСтр.Склад=Док.Склад;
		ДокСтр.Комментарий=Док.Комментарий;
		//--------------------------------------------------------GtG----КОНЕЦ--30.01.2009
		
		
		
		МПочтец= Обработки.Почтарь;
		Почтец=МПочтец.Создать();
		Почтец.СписокВложений.Очистить();
		Почтец.Рассылка.Очистить();
		Почтец.Автоотправка=ИСТИНА;
		Почтец.Рассылка.Добавить(СокрЛП(Аптека.Мэйл));
		
		//Если ДублироватьПисьма=Истина Тогда
		//	Почтец.Рассылка.Добавить("n.gorodsky@apteka5.ru");
		//КонецЕсли;
		
		ТекстАхтунгаПроПереоценкуСвежихПартий=СформироватьТекстАхтунгаПроПереоценкуСвежихПартий(РезПроверкиСвежихПартий,Аптека);
		
		
		Почтец.Тема="ГЛОБАЛЬНАЯ ПЕРЕОЦЕНКА "+Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy")+"  "+Аптека;
		
		Почтец.ТекстПисьма=" Глобальная переоценка. 
		|
		|"+ТекстАхтунгаПроПереоценкуСвежихПартий+"
		|
		| Для Вашей аптеки готовы файлы. Заберите их через ftp-сервис.
		|
		|   ----------------=========== ВНИМАНИЕ ===========---------------------------
		|	ПО ВСЕМ ВОПРОСАМ ПО ЭТОЙ ПЕРЕОЦЕНКЕ ОБРАЩАТЬСЯ В ОТДЕЛ ПЕРЕОЦЕНКИ
		|	----------------================================---------------------------
		|
		| Список распоряжений на переоценку: 
		|"+СписокНомеровРаспоряжений+"
		|----------------------------------------------
		|Параметры переоценки:
		|   "+комментарий+"
		| ";
		
		Для каждого Остр из Построитель.Отбор Цикл
			СтрУсловия=""+Остр.Имя+" "+Остр.ВидСравнения+" "+Остр.Значение;
			Почтец.ТекстПисьма=Почтец.ТекстПисьма+ СтрУсловия+ Символы.ПС;
		КонецЦикла;	
		
		Почтец.ТекстПисьма=Почтец.ТекстПисьма+"|
		|"+Комментарий+"
		|----------------------------------------------"+Символы.ПС;
		Почтец.ТекстПисьма=Почтец.ТекстПисьма+"Схема ГЛОБАЛЬНОЙ переоценки:
		
		|          1) Аптека загружает распоряжение на переоценку (через ftp-сервис). Проводит. В Аптеке появляется переоценка.
		|ВНИМАНИЕ ! Товар который содержится в распоряжении на переоценку блокируется и продать его нельзя (на кассах не видно).
		|          2) Аптека проводит переоценку. Выгружает переоценку в офис .
		|ТОВАР Разблокируется и его можно продавать (становится виден на кассах).
		|          3) Аптека загружает из офиса партии переоценки.  ЭТОТ ПУНКТ делать обязательно! Иначе могут быть проблемы с загрузкой выручки.
		|РЕКОМЕНДАЦИЯ:
		|          Переоценку пропроизводить по одному документу. Провели распоряжение (1) , провели переоценку (2), 
		|          потом провели следующее распоряжение (1) , провели переоценку (2).
		|          После всех операций  выгрузили переоценки-загрузили партии  (3).
		|-----------------------------------------------";
		
		//Ф=Почтец.ПолучитьФорму("Форма", ЭтаФорма, Новый УникальныйИдентификатор);
		//Ф.Открыть();
		Почтец.функция_Послать();
		
	КонецЦикла;	 
	
КонецПроцедуры

Процедура ИзменитьПроцентНаценкиНажатие(Элемент)
	
	ИзменитьРозничнуюЦенуНа=0;
	ЕдинаяЦена=0;
	
	
	
	Если УстановитьПроцентНаценки=0 Тогда
		Предупреждение("Не заполнено поле ""Установить процент наценки"" !");
		Возврат;
	КонецЕсли; 
	
	Если Вопрос("Установить процент наценки "+УстановитьПроцентНаценки+"% от закупочной цены?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Нет,"Изменить относительно старой цены?")=КодВозвратаДиалога.Нет тогда
		Предупреждение("Вы отказались от установки процента наценки  "+УстановитьПроцентНаценки+"% от закупочной цены.");
		Возврат;
	КонецЕсли; 	

	
	Для каждого Стр из РезОтбора Цикл
		Стр.НоваяЦена=ОМ3_ОтброситьДо10Коп( (Стр.ЗакупочнаяЦена)+ (стр.ЗакупочнаяЦена)/100*УстановитьПроцентНаценки);
		Стр.ПроцентНаценки=Окр((Стр.НоваяЦена/Стр.ЗакупочнаяЦена-1)*100,2);
	КонецЦикла;	 
КонецПроцедуры

Процедура УстЕдинуюЦенуНаВсеНажатие(Элемент)
	
	ИзменитьРозничнуюЦенуНа=0;
	УстановитьПроцентНаценки=0;
	
	
	
	
	  Если ЕдинаяЦена=0 Тогда
		Предупреждение("Не заполнено поле ""Установить единую цену на весь товар"" !");
		Возврат;
	КонецЕсли; 
	
	Если Вопрос("Установить единую цену  "+ЕдинаяЦена+" руб. на весь товар?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Нет,"Установить единую цену на весь товар")=КодВозвратаДиалога.Нет тогда
		Предупреждение("Вы отказались от установки единой цены "+ЕдинаяЦена+" руб. на весь товар");
		Возврат;
	КонецЕсли; 
	
	Для каждого Стр из РезОтбора Цикл
		Стр.НоваяЦена=ОМ3_ОтброситьДо10Коп(ЕдинаяЦена);
		Стр.ПроцентНаценки=Окр((Стр.НоваяЦена/Стр.ЗакупочнаяЦена-1)*100,2);
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЦенуИзАПНажатие(Элемент)
	Если Вопрос("Установить цену на товары как указано в АП?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Нет,"Установить цену как в АП")=КодВозвратаДиалога.Нет тогда
		Предупреждение("Вы отказались от установки цены как в АП.");
		Возврат;
	КонецЕсли; 
	
	ЕстьТоварыСНулевойЦенойВАП=Ложь;
	
	Для каждого Стр из РезОтбора Цикл
		Стр.НоваяЦена=ОМ3_ОтброситьДо10Коп(Стр.Товар.РозничнаяЦена);
		Стр.ПроцентНаценки=Окр((Стр.НоваяЦена/Стр.ЗакупочнаяЦена-1)*100,2);
		
		Если Стр.НоваяЦена=0 Тогда
			ЕстьТоварыСНулевойЦенойВАП=Истина;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если ЕстьТоварыСНулевойЦенойВАП=Истина ТОгда
		
		Х=РезОтбора.Скопировать();
		
		Х.Свернуть("ТОвар,НоваяЦена","");
		Х.Сортировать("НоваяЦена");
		
		Для каждого  Стр Из Х Цикл
			Если Стр.НоваяЦена=0 ТОгда
				Сообщить(""+Стр.ТОвар.Код+"   "+Стр.Товар);
			КонецЕсли;	
		КонецЦикла;  
		
		
		ПРедупреждение("ВНИМАНИЕ! Есть строки с НУЛЕВОЙ ЦЕНОЙ (не указана розничная цена в АП) !!!");
	КонецЕсли; 	

КонецПроцедуры

Процедура ФайлЦенНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДВФ.Фильтр="*.DBF|*.DBF";
	ДВФ.МножественныйВыбор=Ложь;
	
	Если ДВФ.Выбрать()=Истина ТОгда
		ФайлЦен=ДВФ.ПолноеИмяФайла;
	КонецЕсли;	
КонецПроцедуры

Процедура ЗагрузитьФайлЦенНажатие(Элемент)
	
	Если ПустаяСтрока(ФайлЦен)=Истина Тогда
		ПРедупреждение("Не выбран файл цен!");
		Возврат;
	КонецЕсли; 	
	
	
	ДБФ= Новый Xbase;
	
	ДБФ.ОткрытьФайл(ФайлЦен);
	
	ДБФ.Кодировка=КодировкаXBase.OEM;
	
	Если ДБФ.Открыта()=Ложь ТОгда
		Предупреждение("Это неправильный файл или файл открыт другой программой, например EXCEL-ем. 
						|Закройте другую программу и попробуйте еще раз.");
		Возврат;
	КонецЕсли; 	
	
	
	ЭлементыФормы.ИндФЦ.Значение=0;
	ЭлементыФормы.ИндФЦ.МаксимальноеЗначение=ДБФ.КоличествоЗаписей();
	ЭлементыФормы.ИндФЦ.Видимость=Истина;
	
	
	СодержимоеФайла.Очистить();
	
	ЭтаФорма.Обновить();
	
	ЕстьСтараяЦена=Истина;
	Если ДБФ.поля.Найти("PriceOld")=Неопределено Тогда
		ЕстьСтараяЦена=ЛОжь;
	КонецЕсли;
	
	ЕстьПартия=Истина;
	Если ДБФ.поля.Найти("Part")=Неопределено Тогда
		ЕстьПартия=ЛОжь;
	КонецЕсли;
	
	ЕстьСклад=Истина;
	Если ДБФ.поля.Найти("Sklad")=Неопределено Тогда
		ЕстьСклад=ЛОжь;
	КонецЕсли;

	ЕстьОстаток=Истина;
	Если ДБФ.поля.Найти("Ost")=Неопределено Тогда
		ЕстьОстаток=ЛОжь;
	КонецЕсли;

           
	
	Для Ы=1 по ДБФ.КоличествоЗаписей() Цикл
		ДБФ.Перейти(Ы);
		ЭлементыФормы.ИндФЦ.Значение=ЭлементыФормы.ИндФЦ.Значение+1;
		
		СФС=СодержимоеФайла.Добавить();
		
		СФС.Код=ДБФ.Code;
		
		СФС.Наименование=ДБФ.NAME;
		
		СФС.НоваяЦена=ДБФ.Price;
		
		
		
		
		СФС.Товар=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(ДБФ.Code);
		СФС.ЕдиницаОтгрузки = СФС.Товар.ЕдиницаПоУмолчанию;
		СФС.ЕДОтгр_К = СФС.ЕдиницаОтгрузки.К;
		
		Если ЕстьСтараяЦена=Истина Тогда
			СФС.СтараяЦена=ДБФ.PriceOld;
		КонецЕсли;
		
		Если  ЕстьПартия=Истина Тогда
			СФС.Партия = Справочники.Партии.НайтиПоНаименованию(ДБФ.Part);
			СФС.Серия = СФС.Партия.Серия;
			СФС.СрокГодности = СФС.Серия.СрокГодности;
			СФС.ПроцентНаценки = Окр((СФС.НоваяЦена/СФС.Партия.ЦенаЗакуп-1)*100,2);
		КонецЕсли;
		
		Если ЕстьСклад=Истина Тогда
			СФС.Склад = Справочники.МестаХранения.НайтиПоКоду(ДБФ.Sklad);
		КонецЕсли;
		
		Если ЕстьОстаток=Истина Тогда
			СФС.Остаток = ДБФ.Ost;
		КонецЕСли;
		
		СФС.Комментарий = "Глобальная переоценка";
		
	КонецЦикла; 
	
	ДБФ.ЗакрытьФайл();
	
	
	ЭлементыФормы.ИндФЦ.Видимость=Ложь;
	
КонецПроцедуры

Процедура ЗаполнитьТЗДГПНажатие(Элемент)
	
	Если Аптека.Пустая()=Истина ТОгда
		Предупреждение("Не указана аптека!");
		Возврат;
	КонецЕсли; 
	
	
	Пока ПОСТРОИТЕЛЬ.Отбор.Количество()<>0 Цикл
		ПОСТРОИТЕЛЬ.Отбор.Удалить(0);
	КонецЦикла;
	
	
	ПОСТРОИТЕЛЬ.ЗаполнитьНастройки();
	
	ЭП=ПОСТРОИТЕЛЬ.Отбор.Добавить("Склад","Склад","Склад");
	
	ЭП.ВидСравнения=ВидСравнения.Равно;
	ЭП.Значение=Аптека;
	ЭП.Использование=Истина;
	
	ЭП=ПОСТРОИТЕЛЬ.Отбор.Добавить("Товар","Товар","Товар");
	ЭП.ВидСравнения=ВидСравнения.ВСписке;
	Для каждого  Стр Из СодержимоеФайла Цикл
		ЭП.Значение.Добавить(Стр.Товар);
	КонецЦикла; 
	ЭП.Использование=Истина;
	
	КоманднаяПанель1ОтобратьТовар("");

	
	Для каждого  Стр Из СодержимоеФайла Цикл
		
		 ПарамОтбора=Новый Структура;
		 
		 ПарамОтбора.Вставить("Товар",Стр.Товар);
		 
		
		 НайденныеСтроки=РезОтбора.НайтиСтроки(ПарамОтбора);
		 
		 Для каждого  НС  Из НайденныеСтроки Цикл
			 НС.НоваяЦена=Стр.НоваяЦена;
		     НС.ПроцентНаценки=Окр((НС.НоваяЦена/НС.ЗакупочнаяЦена-1)*100,2);
		 КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	
	Если ХХХХ=0 Тогда
		предупреждение("Не указан Х!");
		Возврат;
	КонецЕсли; 
	
	
	Индекс = РезОтбора.Количество() - 1; 
	Пока Индекс >= 0 Цикл 
		стр = РезОтбора.Получить(Индекс);
		
		Если стр.ПроцентНаценки < ХХХХ Тогда
			стр.НоваяЦена = Окр(стр.ЗакупочнаяЦена*(1 + ХХХХ/100+0.001),2);
			стр.ПроцентНаценки = Окр((стр.НоваяЦена/стр.ЗакупочнаяЦена-1)*100,2);
		КонецЕсли;		
		
		Если стр.НоваяЦена >= стр.СтараяЦена Тогда
			РезОтбора.Удалить(Индекс); 
		КонецЕсли;
		
		Индекс = Индекс - 1; 
		
	КонецЦикла; 
	
	
КонецПроцедуры

Процедура УдалитьБезрезультатныеСтроки(Элемент)
	
		
	Индекс = РезОтбора.Количество() - 1; 
	Пока Индекс >= 0 Цикл 
		стр = РезОтбора.Получить(Индекс);
		
			
		
		Если стр.ДельтаСумм =0 Тогда
			РезОтбора.Удалить(Индекс); 
		КонецЕсли;
		
		Индекс = Индекс - 1; 
		
	КонецЦикла; 
	
	
КонецПроцедуры





Процедура ЦОЖНВЛС_Апрель10Нажатие(Элемент)
	
	ЭлементыФормы.Инд.Значение=0;
	ЭлементыФормы.Инд.МаксимальноеЗначение=РезОтбора.Количество();
	
	СписокУдаляемыхСтрок=Новый СписокЗначений;
	
	Для Каждого Стр Из РезОтбора Цикл
		ЭлементыФормы.Инд.Значение=ЭлементыФормы.Инд.Значение+1;	
		//Склад	Товар	Остаток	ЗакупочнаяЦена	ЕдиницаОтгрузки	ЕдОтгр_К	СтараяЦена	НоваяЦена	
		//ПроцентНаценки	СрокГодности	ДатаСозданияПартии	ПартияПоставщик	ДокументПоступленияПартии	
		//Партия	Серия	ПартияАптеки	Комментарий	МинЦенаГР	
		
		Если  Стр.МинЦенаГР<=50 Тогда
			ПДОН=20;
			ПДРН=32;
			
			ПДОЦ= Стр.МинЦенаГР+Стр.МинЦенаГР/100*ПДОН; //цна гос. рег +  20% от цены госрегистрации
			ЗакупБезНДС=Стр.ЗакупочнаяЦена*100/110;
			Если  ЗакупБезНДС > ПДОЦ Тогда
				Стр.НоваяЦена=  (ПДОЦ+Стр.МинЦенаГР/100*ПДРН)*110/100;
			КонецЕсли;	
				
		ИначеЕсли  Стр.МинЦенаГР>50 и Стр.МинЦенаГР<=500 Тогда
			ПДОН=15;
			ПДРН=28;
			
			ПДОЦ= Стр.МинЦенаГР+Стр.МинЦенаГР/100*ПДОН; //цна гос. рег +  20% от цены госрегистрации
			ЗакупБезНДС=Стр.ЗакупочнаяЦена*100/110;
			Если  ЗакупБезНДС > ПДОЦ Тогда
				Стр.НоваяЦена=  (ПДОЦ+Стр.МинЦенаГР/100*ПДРН)*110/100;
			КонецЕсли;	
				

		ИначеЕсли  Стр.МинЦенаГР>500 Тогда
			ПДОН=10;
			ПДРН=15;
			
			ПДОЦ= Стр.МинЦенаГР+Стр.МинЦенаГР/100*ПДОН; //цна гос. рег +  20% от цены госрегистрации
			ЗакупБезНДС=Стр.ЗакупочнаяЦена*100/110;
			Если  ЗакупБезНДС > ПДОЦ Тогда
				Стр.НоваяЦена=  (ПДОЦ+Стр.МинЦенаГР/100*ПДРН)*110/100;
			КонецЕсли;	
				

		КонецЕсли;
		
		
		//------- Проверим, не ниже ли наша текущая цена, если ниже то не переоценяем --------------
		Стр.НоваяЦена=ОМ3_ОтброситьДо10Коп(Стр.НоваяЦена);
		
		
		Если Стр.СтараяЦена<=Стр.НоваяЦена Тогда
			Стр.НоваяЦена = Стр.СтараяЦена;
			СписокУдаляемыхСтрок.Добавить(Стр);
			
		КонецЕсли;	
	КонецЦикла;
	
	Сообщить("Было "+ РезОтбора.Количество()+" строк.");
	
	Сообщить("--- Удаляем строки с нулевой суммой переоценки -----");
	
	Для Каждого Стр Из СписокУдаляемыхСтрок Цикл
		 РезОтбора.Удалить(Стр.Значение);
	КонецЦикла;	
	
	Сообщить("Осталось "+ РезОтбора.Количество()+" строк на переоценку.");

	
	Для Каждого Стр Из РезОтбора Цикл
		  Стр.ПроцентНаценки= Окр((стр.НоваяЦена/стр.ЗакупочнаяЦена-1)*100,2)
	КонецЦикла;	
	
	
КонецПроцедуры

Процедура РасчетРезультатаНажатие(Элемент)
	Для Каждого Стр Из РезОтбора Цикл
		  Стр.СуммаПоСтарымЦенам= Стр.СтараяЦена*Стр.Остаток;
          Стр.СуммаПоНовымЦенам = стр.НоваяЦена*Стр.Остаток;
		  Стр.ДельтаСумм        = Стр.СуммаПоНовымЦенам-Стр.СуммаПоСтарымЦенам;
	  КонецЦикла;	
	  
	 Сообщить("ИТОГО Суммарный результат переоценки: "+ Окр(РезОтбора.Итог("ДельтаСумм"),2));

КонецПроцедуры

Процедура КоманднаяПанель6Действие(Кнопка)
	ТХТ=ЭлементыФормы.ТекстЗапроса.ПолучитьТекст();
	Если ПустаяСтрока(ТХТ)=Истина ТОгда
		КЗ= Новый КонструкторЗапроса();
	Иначе
		КЗ= Новый КонструкторЗапроса(ТХТ);
	КонецЕсли;	
	
	КЗ.ОткрытьМодально();
	ЭлементыФормы.ТекстЗапроса.УстановитьТекст(КЗ.Текст);
КонецПроцедуры

Процедура КоманднаяПанель6ТекстЗапросаВПостроитель(Кнопка)
	Построитель.Текст= ЭлементыФормы.ТекстЗапроса.ПолучитьТекст();
КонецПроцедуры

Процедура КоманднаяПанель6СохранитьЗапрос(Кнопка)
	ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДВФ.Заголовок=("Сохранить запрос");
	ДВФ.Расширение="SQL";
	ДВФ.Фильтр="Запросы *.SQL|*.SQL";
	
	Если ДВФ.Выбрать()=Истина ТОгда
		Текст=Новый ТекстовыйДокумент;
		Текст.УстановитьТекст(ЭлементыФормы.ТекстЗапроса.ПолучитьТекст());
		Текст.Записать(ДВФ.ПолноеИмяФайла,КодировкаТекста.ANSI);
		Предупреждение("Сохранено в 
					    |"+ДВФ.ПолноеИмяФайла,10);		
	КонецЕсли; 

КонецПроцедуры

Процедура КоманднаяПанель6ОткрытьСохрЗапрос(Кнопка)
	ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВФ.Заголовок=("Открыть сохраненный запрос");
	ДВФ.Расширение="SQL";
	ДВФ.Фильтр="Запросы *.SQL|*.SQL";
	
	Если ДВФ.Выбрать()=Истина ТОгда
		Текст=Новый ТекстовыйДокумент;
		Текст.Прочитать(ДВФ.ПолноеИмяФайла,КодировкаТекста.ANSI);
		
		ЭлементыФормы.ТекстЗапроса.УстановитьТекст(Текст.ПолучитьТекст());
		
	КонецЕсли; 

КонецПроцедуры

Процедура КоманднаяПанель6ИсходныйЗапрос(Кнопка)
	ЭлементыФормы.ТекстЗапроса.УстановитьТекст(ПервичныйТекстЗапроса);
КонецПроцедуры


Процедура Заполнить_ПоляДляФормулы()
	
	   ПоляДляФормулы.Очистить();
	   
	   Для Каждого Кол Из РезОтбора.Колонки Цикл
		   
		   
		   Если нАЙТИ(Кол.ТипЗначения,"Число")<>0 Тогда
			   ПоляДляФормулы.Добавить("Стр."+Кол.Имя,""+Кол.Имя+" (число)");
		   Иначе
			   ПоляДляФормулы.Добавить("Стр."+Кол.Имя,""+Кол.Имя+" (НЕ число!)");
		   КонецЕсли;
	   КонецЦикла;	   
КонецПроцедуры	

Процедура ЗаполнитьГотовуюТаблицуНажатие(Элемент)
	
	
	СодержимоеФайла.Колонки.Добавить("СуммаПоСтарымЦенам");
	СодержимоеФайла.Колонки.Добавить("СуммаПоНовымЦенам");
	СодержимоеФайла.Колонки.Добавить("ДельтаСумм");
	
	
	
	
	ЭлементыФормы.РезОтбора.Значение = СодержимоеФайла;
	ЭлементыФормы.РезОтбора.СоздатьКолонки();
	Заполнить_ПоляДляФормулы();
	
	
	
	
	
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель4УдалитьГдеНоваяБольшеСтарой(Кнопка)
	Если РезОтбора.Количество()=0 тогда
		Предупреждение("Товар не отобран!");
		Возврат;
	КонецЕсли;
	
	СУС=Новый Массив;
	
	ДЛя Каждого Стр Из РезОтбора цикл
		Если Стр.НоваяЦена >= Стр.СтараяЦена Тогда
			СУС.Добавить(Стр);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого Стр Из Сус Цикл
		РезОтбора.Удалить(Стр);
	КонецЦикла;	
КонецПроцедуры

Процедура КоманднаяПанель4УдалитьГдеНОваяМеньшеСтарой(Кнопка)
	Если РезОтбора.Количество()=0 тогда
		Предупреждение("Товар не отобран!");
		Возврат;
	КонецЕсли;

	СУС=Новый Массив;
	
	ДЛя Каждого Стр Из РезОтбора цикл
		Если стр.НоваяЦена <= стр.СтараяЦена Тогда
			СУС.Добавить(Стр);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого Стр Из Сус Цикл
		РезОтбора.Удалить(Стр);
	КонецЦикла;	
КонецПроцедуры

Процедура УстЕдинуюЦенуНаВсе1Нажатие(Элемент)
	

	Для каждого Стр из РезОтбора Цикл
		Стр.НоваяЦена=Стр.ЗакупочнаяЦена;
		Стр.ПроцентНаценки=Окр((Стр.НоваяЦена/Стр.ЗакупочнаяЦена-1)*100,2);
	КонецЦикла;	
	
	
КонецПроцедуры

Процедура ОкруглитьНовыеЦеныНажатие(Элемент)
	Для каждого Стр из РезОтбора Цикл
		Стр.НоваяЦена=ОМ3_ОтброситьДо10Коп(Стр.НоваяЦена);
		Стр.ПроцентНаценки=Окр((Стр.НоваяЦена/Стр.ЗакупочнаяЦена-1)*100,2);
	КонецЦикла;	 
КонецПроцедуры

Процедура ОкруглитьДоРублейНажатие(Элемент)
	Для каждого Стр из РезОтбора Цикл
		Стр.НоваяЦена= Цел(Стр.НоваяЦена);
		Стр.ПроцентНаценки=Окр((Стр.НоваяЦена/Стр.ЗакупочнаяЦена-1)*100,2);
	КонецЦикла;	 
КонецПроцедуры

Процедура ОкруглитьМатДоРублейНажатие(Элемент)
	Для каждого Стр из РезОтбора Цикл
		Стр.НоваяЦена= окр(Стр.НоваяЦена,0);
		Стр.ПроцентНаценки=Окр((Стр.НоваяЦена/Стр.ЗакупочнаяЦена-1)*100,2);
	КонецЦикла;	 
КонецПроцедуры




Процедура РасчитатьПоФормулеНажатие(Элемент)
	Для каждого Стр из РезОтбора Цикл
		Попытка
			Стр.НоваяЦена=Вычислить(ПроизвольнаяФормулаРасчетаЦены);
			Стр.ПроцентНаценки=Окр((Стр.НоваяЦена/Стр.ЗакупочнаяЦена-1)*100,2);
		Исключение
			Сообщить("КРИВАЯ ФОРМУЛА!!!" + ОписаниеОшибки());
			Прервать;
		КонецПопытки;	
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПолеВФормулуНажатие(Элемент)
	
 ПроизвольнаяФормулаРасчетаЦены=	ПроизвольнаяФормулаРасчетаЦены+" "+ЭлементыФормы.ПоляДляФормулы.ТекущаяСтрока.Значение;
	
	
КонецПроцедуры


ТХТИнструкция="1) Отобрать товар для переоценки с помощью отбора
|2) Задать процент изменения розничной цены или 
|   Процент наценки от закупочной цены или
|   Единую розничную цену
|3) Создать распоряжения на переоценку";

ПервичныйТекстЗапроса="ВЫБРАТЬ
                      |	ПартииЖНВЛСОстатки.Товар,
                      |	ПартииЖНВЛСОстатки.Товар.ЕдиницаМин,
                      |	ПартииЖНВЛСОстатки.Товар.ЕдиницаМин.К,
                      |	ПартииЖНВЛСОстатки.КолвоОстаток,
                      |	ВЫБОР
                      |		КОГДА ПартииЖНВЛСОстатки.КолвоОстаток > 0
                      |			ТОГДА ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток
                      |		ИНАЧЕ 0
                      |	КОНЕЦ КАК СтараяЦена,
                      |	ВЫБОР
                      |		КОГДА ПартииЖНВЛСОстатки.КолвоОстаток > 0
                      |			ТОГДА ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток
                      |		ИНАЧЕ 0
                      |	КОНЕЦ КАК НоваяЦена,
                      |	ПартииЖНВЛСОстатки.Партия,
                      |	ПартииЖНВЛСОстатки.Партия.Серия КАК Серия,
                      |	ПартииЖНВЛСОстатки.Партия.СрокГодности КАК СрокГодности,
                      |	0 КАК ПартияАптеки,
                      |	ВЫРАЗИТЬ(ВЫБОР
                      |			КОГДА ПартииЖНВЛСОстатки.КолвоОстаток > 0
                      |				ТОГДА (ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток / (ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток) - 1) * 100
                      |			ИНАЧЕ 0
                      |		КОНЕЦ КАК ЧИСЛО(10, 2)) КАК ПроцентНаценки,
                      |	""ГЛОБАЛЬНАЯ ПЕРЕОЦЕНКА"" КАК Комментарий,
                      |	ПартииЖНВЛСОстатки.Склад КАК Склад,
                      |	ВЫБОР
                      |		КОГДА ПартииЖНВЛСОстатки.КолвоОстаток > 0
                      |			ТОГДА ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток
                      |		ИНАЧЕ 0
                      |	КОНЕЦ КАК ЗакупочнаяЦена,
                      |	ПартииЖНВЛСОстатки.Партия.Поставщик
                      |ПОМЕСТИТЬ ПервичнаяВыборка
                      |{ВЫБРАТЬ
                      |	Товар,
                      |	ТоварЕдиницаМин,
                      |	ТоварЕдиницаМинК,
                      |	КолвоОстаток,
                      |	СтараяЦена,
                      |	НоваяЦена,
                      |	Партия,
                      |	Серия,
                      |	СрокГодности,
                      |	ПартияАптеки,
                      |	ПроцентНаценки,
                      |	Комментарий,
                      |	Склад,
                      |	ЗакупочнаяЦена,
                      |	ПартияПоставщик}
                      |ИЗ
                      |	РегистрНакопления.ПартииЖНВЛС.Остатки(&ТекущаяДата, {(Партия.Поставщик), (Товар).*, (Склад).*, (Партия.ДатаПоступления)}) КАК ПартииЖНВЛСОстатки
                      |ГДЕ
                      |	ПартииЖНВЛСОстатки.КолвоОстаток > 0
                      |	И ВЫБОР
                      |			КОГДА ПартииЖНВЛСОстатки.КолвоОстаток > 0
                      |				ТОГДА ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток
                      |			ИНАЧЕ 0
                      |		КОНЕЦ > 0
                      |{ГДЕ
                      |	(ВЫРАЗИТЬ(ВЫБОР
                      |				КОГДА ПартииЖНВЛСОстатки.КолвоОстаток > 0
                      |					ТОГДА (ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток / (ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток) - 1) * 100
                      |				ИНАЧЕ 0
                      |			КОНЕЦ КАК ЧИСЛО(10, 2))) КАК Процент_наценки}
                      |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |ВЫБРАТЬ
                      |	ЦеныГосРеестра.Владелец,
                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЦеныГосРеестра.Цена) КАК Цена
                      |ПОМЕСТИТЬ ЦГР
                      |ИЗ
                      |	Справочник.ЦеныГосРеестра КАК ЦеныГосРеестра
                      |ГДЕ
                      |	&ИскатьМинЦГР = ИСТИНА
                      |
                      |СГРУППИРОВАТЬ ПО
                      |	ЦеныГосРеестра.Владелец
                      |
                      |ИМЕЮЩИЕ
                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЦеныГосРеестра.Цена) = 1
                      |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |ВЫБРАТЬ
                      |	ПервичнаяВыборка.Склад КАК Склад,
                      |	ПервичнаяВыборка.Товар,
                      |	ВЫБОР
                      |		КОГДА ПервичнаяВыборка.КолвоОстаток / ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К < 1
                      |				И ПервичнаяВыборка.КолвоОстаток / ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К > 0
                      |			ТОГДА 1
                      |		ИНАЧЕ ПервичнаяВыборка.КолвоОстаток / ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К
                      |	КОНЕЦ КАК Остаток,
                      |	ПервичнаяВыборка.ЗакупочнаяЦена * ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К КАК ЗакупочнаяЦена,
                      |	ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию КАК ЕдиницаОтгрузки,
                      |	ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К КАК ЕдОтгр_К,
                      |	ПервичнаяВыборка.СтараяЦена * ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К КАК СтараяЦена,
                      |	ПервичнаяВыборка.НоваяЦена * ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К КАК НоваяЦена,
                      |	ПервичнаяВыборка.ПроцентНаценки,
                      |	ПервичнаяВыборка.СрокГодности,
                      |	ПервичнаяВыборка.Партия.ДатаПоступления КАК ДатаСозданияПартии,
                      |	ПервичнаяВыборка.ПартияПоставщик,
                      |	ПервичнаяВыборка.Партия.ДокументПоступления КАК ДокументПоступленияПартии,
                      |	ПервичнаяВыборка.Партия,
                      |	ПервичнаяВыборка.Серия,
                      |	ПервичнаяВыборка.ПартияАптеки,
                      |	ПервичнаяВыборка.Комментарий,
					  |	ПервичнаяВыборка.Товар.Разбивается КАК Разбивается,
					  |	ПервичнаяВыборка.Товар.ЖНВЛС как ЖНВЛС,
                      |	ЕСТЬNULL(МинЦеныГР.МинЦенаГР, 0) КАК МинЦенаГР,
                      |	0 КАК СуммаПоСтарымЦенам,
                      |	0 КАК СуммаПоНовымЦенам,
                      |	0 КАК ДельтаСумм
                      |ИЗ
                      |	ПервичнаяВыборка КАК ПервичнаяВыборка
                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                      |			ЦеныГосРеестра.Владелец КАК Владелец,
                      |			МИНИМУМ(ЦеныГосРеестра.Цена) КАК МинЦенаГР
                      |		ИЗ
                      |			Справочник.ЦеныГосРеестра КАК ЦеныГосРеестра
                      |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЦГР КАК ЦГР
                      |				ПО ЦеныГосРеестра.Владелец = ЦГР.Владелец
                      |		
                      |		СГРУППИРОВАТЬ ПО
                      |			ЦеныГосРеестра.Владелец) КАК МинЦеныГР
                      |		ПО ПервичнаяВыборка.Товар = МинЦеныГР.Владелец
                      |			И (&ИскатьМинЦГР = ИСТИНА)
                      |ГДЕ
                      |	ПервичнаяВыборка.КолвоОстаток / ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К > 0
                      |	И ВЫБОР
                      |			КОГДА &ИскатьМинЦГР = ИСТИНА
                      |				ТОГДА МинЦеныГР.МинЦенаГР
                      |			ИНАЧЕ 1
                      |		КОНЕЦ > 0
                      |{ГДЕ
                      |	ПервичнаяВыборка.Склад.*,
                      |	ПервичнаяВыборка.Товар.*,
                      |	(ВЫБОР
                      |			КОГДА ПервичнаяВыборка.КолвоОстаток / ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К < 1
                      |					И ПервичнаяВыборка.КолвоОстаток / ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К > 0
                      |				ТОГДА 1
                      |			ИНАЧЕ ПервичнаяВыборка.КолвоОстаток / ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К
                      |		КОНЕЦ) КАК Остаток,
                      |	(ПервичнаяВыборка.ЗакупочнаяЦена * ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К) КАК ЗакупочнаяЦена_Партии,
                      |	ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.*,
                      |	ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К,
                      |	(ПервичнаяВыборка.СтараяЦена * ПервичнаяВыборка.Товар.ЕдиницаПоУмолчанию.К) КАК СтараяЦена_Розн,
                      |	ПервичнаяВыборка.ПроцентНаценки КАК Процент_Наценки,
                      |	ПервичнаяВыборка.СрокГодности,
                      |	ПервичнаяВыборка.Партия.ДатаПоступления,
                      |	ПервичнаяВыборка.ПартияПоставщик.*,
                      |	ПервичнаяВыборка.Партия.ДокументПоступления.*,
                      |	ПервичнаяВыборка.Партия.*,
                      |	ПервичнаяВыборка.Серия.*}
                      |
                      |УПОРЯДОЧИТЬ ПО
                      |	Склад,
                      |	ПервичнаяВыборка.Товар.Наименование
                      |{УПОРЯДОЧИТЬ ПО
                      |	Товар.*,
                      |	ЕдОтгр_К,
                      |	ПроцентНаценки,
                      |	СтараяЦена,
                      |	НоваяЦена,
                      |	Остаток,
                      |	Партия.*,
                      |	Серия.*,
                      |	СрокГодности,
                      |	Склад.*,
                      |	ЗакупочнаяЦена,
                      |	ПартияПоставщик.*,
                      |	ДатаСозданияПартии,
                      |	ДокументПоступленияПартии.*}
                      |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |УНИЧТОЖИТЬ ПервичнаяВыборка
                      |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |УНИЧТОЖИТЬ ЦГР";

				  
Построитель.Текст = ПервичныйТекстЗапроса				  ;
ЭлементыФормы.ТекстЗапроса.УстановитьТекст(ПервичныйТекстЗапроса);

КорректировкаРазбивки = Ложь;