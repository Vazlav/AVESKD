//---------------<Комментарии>---------------------------// GtG // 26.07.2012 13:25:00
// 1) Резерв подбора используем из расчета, что один юзверь может одновременно работать только с одним чеком
//    Поэтому при создании нового чека жестко чистим резерв подбора по текущему юзверю


//---------------<------------------------------------------------->---------------------------// GtG // 26.07.2012 13:25:06


Перем ПоисковыйЗапрос; // кэшируется сервером БД , создается при запуске обработки
Перем ЗапросПоПартиям; // кэшируется сервером БД , создается при запуске обработки
Перем ЗапросКонтроляОбщегоОстатка; // кэшируется сервером БД , создается при запуске обработки
Перем ТекущийЧек;
Перем ТекФирма;
Перем ТекАптека;
Перем ИнтернетДоставкаДК;
Перем ECR;
Перем ЗапросПроверкиСопоставления;

Перем ЕстьОшибкиПриПодбореПартий;

Перем ЭтоРабочееМестоРезервируетТовар;
Перем ТекущийОтбор;
Перем АптекаКассира;


Процедура ПоискТовараПриИзменении(Элемент)
	
	Если СтрДлина(ПоискТовара)<3 тогда
		ТАбНайденногоТовара.Очистить();	
		Возврат;
	КонецЕсли;	
		
	ПоисковыйЗапрос.УстановитьПараметр("Наименование",""+СтрЗаменить(ПоискТовара," ","%%")+"%");
	ЭлементыФормы.ТАбНайденногоТовара.Значение=ПоисковыйЗапрос.Выполнить().Выгрузить();
	ЭлементыФормы.ТАбНайденногоТовара.СоздатьКолонки();
	
	

	
	
	
КонецПроцедуры

Процедура ПоискТовараОчистка(Элемент, СтандартнаяОбработка)
	ТАбНайденногоТовара.Очистить();	
КонецПроцедуры


Процедура ЖесткаяОчисткаРезерваПодбора()
	// Очищает резерв подбора по текущему юзверю. 
	// все товары по всем чекам (на случай, если чек не пробьют и начнут другой, или падения связи или еще чего, когда зависает резерв подбора)
	
	МенЗап=РегистрыСведений.РезервПодбора.СоздатьНаборЗаписей();
	МенЗап.Отбор.Найти("Пользователь").Установить(ПараметрыСеанса.ТекущийСотр);
	МенЗап.Отбор.Найти("Склад").Установить(ТекАптека);

	МенЗап.Прочитать();
	МенЗап.Очистить();
	МенЗап.Записать();
КонецПроцедуры	

Процедура КорректировкаРезерваПодбора(Товар,Партия,ОставитьвРезервеШтук)
	// Корректирует резерв подбора по указанной партии, или очищает его если оставитьштук=0
	
	
	МенЗап=РегистрыСведений.РезервПодбора.СоздатьНаборЗаписей();
	МенЗап.Отбор.Найти("Пользователь").Установить(ПараметрыСеанса.ТекущийСотр);
	МенЗап.Отбор.Найти("Склад").Установить(ТекАптека);
	МенЗап.Отбор.Найти("Товар").Установить(Товар);
	МенЗап.Отбор.Найти("Партия").Установить(Партия);
	
	МенЗап.Прочитать();
	
	Если ОставитьвРезервеШтук=0 тогда
		МенЗап.Очистить();
	Иначе
		ТЗ=МенЗап.Выгрузить();
		ТЗ.Получить(0).Количество =  ОставитьвРезервеШтук ;
		МенЗап.Загрузить(ТЗ);
	КонецЕсли;	
	
	МенЗап.Записать();
КонецПроцедуры	


Процедура ОсвободитьРезерв(СтрокаДанныхДляЧека)
	// срабатывает при удалении строки
	
	МенЗап=РегистрыСведений.РезервПодбора.СоздатьНаборЗаписей();
	МенЗап.Отбор.Найти("Пользователь").Установить(ПараметрыСеанса.ТекущийСотр);
	МенЗап.Отбор.Найти("Склад").Установить(ТекАптека);
	МенЗап.Отбор.Найти("Товар").Установить(СтрокаДанныхДляЧека.Товар);
	МенЗап.Отбор.Найти("Партия").Установить(СтрокаДанныхДляЧека.Партия);
	
	МенЗап.Прочитать();
	МенЗап.Очистить();
	МенЗап.Записать();

	ПоискТовараПриИзменении("");
	
	
КонецПроцедуры	






Процедура ПриОткрытии()
	ЖесткаяОчисткаРезерваПодбора();
	ДанныеДляЧека.Очистить();
	ТАбНайденногоТовара.Очистить();
	ПоискТовара="";
	НомерЗаказа=0;
	
	Если ПараметрыСеанса.ТекущийСотр.Администратор=Истина Тогда
		ЭлементыФормы.ЭмуляцияККМ.Видимость=истина;
	Иначе	
		ЭлементыФормы.ЭмуляцияККМ.Видимость=Ложь;
	КонецЕсли;	
	
	
	
	КонтролироватьОбщийОстатокПоТоваруПриИзменении("");
	
	Если ТекущийЧек=Неопределено Тогда
	 	ТекущийЧек=Документы.ЧекПродажи.СоздатьДокумент();
	Иначе
		Если ТекущийЧек.Товар.Количество()<>0 или ТекущийЧек.АвансыПоУслугам.Количество()<>0 ТОгда // предыдущий чек не пустой, значит нужен новый
			ТекущийЧек=Документы.ЧекПродажи.СоздатьДокумент();
		Иначе // предыдущий чек пустой, можно его заюзать
			
			СтрИзм=ТекущийЧек.Изменения.Добавить();
	        СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	        СтрИзм.КомментарийИзменения="Используем пустой чек.";
	        СтрИзм.Дата=ТекущаяДата();
	        СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
		КонецЕсли;
	КонецЕсли;	
		
	ТекущийЧек.Аптека=ТекАптека;
	ТекущийЧек.Фирма=ТекФирма;
	ТекущийЧек.Дата=ТекущаяДата();
	ТекущийЧек.Пользователь=ПараметрыСеанса.ТекущийСотр;
	ТекущийЧек.ЧекПробитНаККМ=Ложь;
	
	СтрИзм=ТекущийЧек.Изменения.Добавить();
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.КомментарийИзменения="Новый чек";
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
	ТекущийЧек.Записать(РежимЗаписиДокумента.Запись);
	
	ЭлементыФормы.НадписьПроТекЧек.Заголовок=""+ТекущийЧек+"  (Не пробит)";
	
	
	
	//---------------<Отбор только непробитых>---------------------------// GtG // 30.07.2012 12:21:18
	
	Если ТекущийОтбор<>Неопределено ТОгда
		
		ЗаполнитьЗначенияСвойств(СписокЗаказов.Отбор,ЗначениеИзСтрокиВнутр(ТекущийОтбор));
	Иначе
		
		СписокЗаказов.Отбор.Сбросить();
	КонецЕсли;
	
	ТарифыПоДоставке="";
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ГенераторПароля.Доступность=РольДоступна("ИА_ПробитиеНеправильныхЖВ");
	
	Запрос=новый Запрос("ВЫБРАТЬ
	                    |	ККМ_ПользователиКассиры.Аптека
	                    |ИЗ
	                    |	РегистрСведений.ККМ_ПользователиКассиры КАК ККМ_ПользователиКассиры
	                    |ГДЕ
	                    |	ККМ_ПользователиКассиры.Пользователь = &Пользователь");
						
	Запрос.УстановитьПараметр("Пользователь",ПараметрыСеанса.ТекущийСотр);					
	Рез= Запрос.Выполнить().Выгрузить();
	
	Если Рез.Количество()<>0 Тогда
		ОтборПоОнлайнЗоне=СписокЗаказов.Отбор.Найти("Склад");
		ОтборПоОнлайнЗоне.Установить(Рез.Получить(0).Аптека,Истина);
		АптекаКассира=Рез.Получить(0).Аптека;
	КонецЕсли;					
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
		
	Попытка
		ЗагрузитьВнешнююКомпоненту("C:\Program Files (x86)\1cv82\common\DLL\FPRNM1C.dll");
		ECR = Новый("AddIn.FprnM45");
		СостояниеККМ="ККМ:Подключена";
		ЭтоРабочееМестоРезервируетТовар=Истина;
	исключение
		Предупреждение("Ошибка загрузки внешней компоненты C:\Program Files (x86)\1cv82\common\DLL\FPRNM1C.dll, ПЕЧАТЬ ЧЕКОВ НЕВОЗМОЖНА!!!
		|Без ККМ резервирование товара производиться не будет.");
		СостояниеККМ="ККМ:НЕ ПОДКЛЮЧЕНА!!!";
		ЭтоРабочееМестоРезервируетТовар=Ложь;
		
	конецпопытки;

	
	
	
	
	
	
	
	
	
	Состояние("Кэшируем рабочие запросы на сервере...");
	
	ПоисковыйЗапрос=Новый Запрос( "ВЫБРАТЬ
                                  | АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка КАК Ссылка
                                  |ПОМЕСТИТЬ ИскомыйТовар
                                  |ИЗ
                                  | Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
                                  |ГДЕ
                                  | АССОРТИМЕНТНЫЙ_ПЛАН.Наименование ПОДОБНО &Наименование
                                  |
                                  |ИНДЕКСИРОВАТЬ ПО
                                  | Ссылка
                                  |;
                                  |
                                  |////////////////////////////////////////////////////////////////////////////////
                                  |ВЫБРАТЬ
                                  | ОстБезУчРез.Товар,
                                  | ОстБезУчРез.КолвоОстаток - ЕСТЬNULL(РезервПодбораПоСкладу.Количество, 0) КАК ДоступноеКоличество
                                  |ИЗ
                                  | (ВЫБРАТЬ
                                  |     ПартииЖНВЛСОстатки.Товар КАК Товар,
                                  |     ПартииЖНВЛСОстатки.КолвоОстаток КАК КолвоОстаток
                                  | ИЗ
                                  |     РегистрНакопления.ПартииЖНВЛС.Остатки(
                                  |             ,
                                  |             Склад = &Склад
                                  |                 И Фирма = &Фирма
                                  |                 И Товар В
                                  |                     (ВЫБРАТЬ
                                  |                         ИТ.Ссылка
                                  |                     ИЗ
                                  |                         ИскомыйТовар КАК ИТ)) КАК ПартииЖНВЛСОстатки
                                  |         ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИскомыйТовар КАК ИскомыйТовар
                                  |         ПО ПартииЖНВЛСОстатки.Товар = ИскомыйТовар.Ссылка
                                  | ГДЕ
                                  |     ПартииЖНВЛСОстатки.КолвоОстаток > 0) КАК ОстБезУчРез
                                  |     ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                                  |         РезервПодбора.Товар КАК Товар,
                                  |         СУММА(РезервПодбора.Количество) КАК Количество
                                  |     ИЗ
                                  |         РегистрСведений.РезервПодбора КАК РезервПодбора
                                  |     ГДЕ
                                  |         РезервПодбора.Склад = &Склад
                                  |     
                                  |     СГРУППИРОВАТЬ ПО
                                  |         РезервПодбора.Товар) КАК РезервПодбораПоСкладу
                                  |     ПО ОстБезУчРез.Товар = РезервПодбораПоСкладу.Товар
                                  |;
                                  |
                                  |////////////////////////////////////////////////////////////////////////////////
                                  |УНИЧТОЖИТЬ ИскомыйТовар"); // Сгенерировано в GtG's Консоль запросов. 25.07.2012 17:29:28

	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	ККМ_ПользователиКассиры.Пользователь,
	                    |	ККМ_ПользователиКассиры.Фирма,
	                    |	ККМ_ПользователиКассиры.Аптека
	                    |ИЗ
	                    |	РегистрСведений.ККМ_ПользователиКассиры КАК ККМ_ПользователиКассиры
	                    |ГДЕ
	                    |	ККМ_ПользователиКассиры.Пользователь = &Пользователь");
	Запрос.УстановитьПараметр("Пользователь",ПараметрыСеанса.ТекущийСотр);
	Рез=Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		ПРедупреждение("Не настроена привязка пользователя к фирме и складу в регистре сведений ""ККМ пользователи-кассиры""");
		Отказ=Истина;
		возврат;
	КонецЕсли;	
	
	Выб=Рез.Выбрать();
	Выб.Следующий();
	
	ТекАптека=Выб.Аптека;
	ТекФирма= Выб.Фирма ;
	
	
	ПоисковыйЗапрос.УстановитьПараметр("Наименование","-=Затычка на поиск наименования=-");
	ПоисковыйЗапрос.УстановитьПараметр("Склад",ТекАптека);
	ПоисковыйЗапрос.УстановитьПараметр("Фирма",ТекФирма);

	ПоисковыйЗапрос.Выполнить(); // чтоб на сервере в кэш попал, хотя он ничего и не найдет
	
	
	//---------------<Кэшируем на сервере запрос по партиям>---------------------------// GtG // 26.07.2012 12:39:01
	ЗапросПоПартиям=Новый Запрос();
	ЗапросПоПартиям.Текст= "ВЫБРАТЬ
	                       |	ПартииЖНВЛСОстатки.Товар КАК Товар,
	                       |	ПартииЖНВЛСОстатки.Склад,
	                       |	ПартииЖНВЛСОстатки.Партия,
	                       |	ПартииЖНВЛСОстатки.СтавкаНДС,
	                       |	ПартииЖНВЛСОстатки.Фирма,
	                       |	ПартииЖНВЛСОстатки.КолвоОстаток,
	                       |	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток,
	                       |	ПартииЖНВЛСОстатки.СуммаНДСЗакупОстаток,
	                       |	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток,
	                       |	ПартииЖНВЛСОстатки.СуммаРознНДСОстаток КАК РознНДС,
	                       |	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток КАК РознЦена,
	                       |	ПартииЖНВЛСОстатки.КолвоОстаток - ЕСТЬNULL(Резерв.Количество, 0) КАК ДоступноеКолво,
	                       |	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток - &ИнтернетЦена КАК СкидкаНа1ШтТовара,
	                       |	&ИнтернетЦена,
	                       |	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток КАК ЗакупЦена,
	                       |	ПартииЖНВЛСОстатки.Товар.Код КАК Код,
	                       |	ВЫБОР
	                       |		КОГДА &НетРазрешенияНаОбманЖВ = ИСТИНА
	                       |			ТОГДА ПартииЖНВЛСОстатки.Товар.ЖНВЛС
	                       |		ИНАЧЕ ЛОЖЬ
	                       |	КОНЕЦ КАК ТоварЖНВЛС,
	                       |	ПартииЖНВЛСОстатки.Партия.ДокументПоступления
	                       |ПОМЕСТИТЬ ПервичнаяВыборка
	                       |ИЗ
	                       |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	                       |			,
	                       |			Фирма = &Фирма
	                       |				И Склад = &Склад
	                       |				И Товар = &Товар) КАК ПартииЖНВЛСОстатки
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                       |			РезервПодбора.Товар КАК Товар,
	                       |			РезервПодбора.Склад КАК Склад,
	                       |			РезервПодбора.Партия КАК Партия,
	                       |			СУММА(РезервПодбора.Количество) КАК Количество
	                       |		ИЗ
	                       |			РегистрСведений.РезервПодбора КАК РезервПодбора
	                       |		ГДЕ
	                       |			РезервПодбора.Товар = &Товар
	                       |			И РезервПодбора.Склад = &Склад
	                       |		
	                       |		СГРУППИРОВАТЬ ПО
	                       |			РезервПодбора.Товар,
	                       |			РезервПодбора.Склад,
	                       |			РезервПодбора.Партия) КАК Резерв
	                       |		ПО ПартииЖНВЛСОстатки.Товар = Резерв.Товар
	                       |			И ПартииЖНВЛСОстатки.Склад = Резерв.Склад
	                       |			И ПартииЖНВЛСОстатки.Партия = Резерв.Партия,
	                       |	Константа.ИА_МинНаценка КАК ИА_МинНаценка
	                       |ГДЕ
	                       |	ПартииЖНВЛСОстатки.КолвоОстаток > 0
	                       |	И ПартииЖНВЛСОстатки.КолвоОстаток - ЕСТЬNULL(Резерв.Количество, 0) > 0
	                       |	И ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток + ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток / 100 * ИА_МинНаценка.Значение <= &ИнтернетЦена
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ ПЕРВЫЕ 100000000
	                       |	ПервичнаяВыборка.Товар,
	                       |	ПервичнаяВыборка.Склад,
	                       |	ПервичнаяВыборка.Партия,
	                       |	ПервичнаяВыборка.СтавкаНДС,
	                       |	ПервичнаяВыборка.Фирма,
	                       |	ПервичнаяВыборка.КолвоОстаток,
	                       |	ПервичнаяВыборка.СуммаЗакупСНДСОстаток,
	                       |	ПервичнаяВыборка.СуммаНДСЗакупОстаток,
	                       |	ПервичнаяВыборка.СуммаРознСНДСОстаток,
	                       |	ПервичнаяВыборка.РознНДС,
	                       |	ПервичнаяВыборка.РознЦена,
	                       |	ПервичнаяВыборка.ДоступноеКолво,
	                       |	ПервичнаяВыборка.СкидкаНа1ШтТовара,
	                       |	ПервичнаяВыборка.ИнтернетЦена,
	                       |	ПервичнаяВыборка.ЗакупЦена КАК ЗакупЦена,
	                       |	ПервичнаяВыборка.Код,
	                       |	ПервичнаяВыборка.ТоварЖНВЛС,
	                       |	ПервичнаяВыборка.ПартияДокументПоступления,
	                       |	ВЫРАЗИТЬ(ПервичнаяВыборка.Партия.ЦенаЗакуп / (100 + ПервичнаяВыборка.Партия.СтавкаНДС.Ставка) * 100 КАК ЧИСЛО(15, 2)) КАК ЖВ_ЦенаЗакупБезНДС,
	                       |	ПервичнаяВыборка.Партия.К КАК ЖВ_ЕИТЗакупкиК,
	                       |	ПервичнаяВыборка.Партия.ЦенаПроизводителяБезНДС КАК ЖВ_ЦенаПроизводителяБезНДС,
	                       |	ПервичнаяВыборка.Партия.ЦенаГосРегистрации КАК ЖВ_ЦенаГосРегистрации,
	                       |	ПервичнаяВыборка.Партия.СтавкаНДС.Ставка КАК ЖВ_СтавкаНДСПокупки
	                       |ПОМЕСТИТЬ ДляЖВ
	                       |ИЗ
	                       |	ПервичнаяВыборка КАК ПервичнаяВыборка
	                       |
	                       |УПОРЯДОЧИТЬ ПО
	                       |	ЗакупЦена УБЫВ
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |УНИЧТОЖИТЬ ПервичнаяВыборка
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	ДляЖВ.Товар,
	                       |	ДляЖВ.Склад,
	                       |	ДляЖВ.Партия,
	                       |	ДляЖВ.СтавкаНДС,
	                       |	ДляЖВ.Фирма,
	                       |	ДляЖВ.КолвоОстаток,
	                       |	ДляЖВ.СуммаЗакупСНДСОстаток,
	                       |	ДляЖВ.СуммаНДСЗакупОстаток,
	                       |	ДляЖВ.СуммаРознСНДСОстаток,
	                       |	ДляЖВ.РознНДС,
	                       |	ДляЖВ.РознЦена,
	                       |	ДляЖВ.ДоступноеКолво,
	                       |	ДляЖВ.СкидкаНа1ШтТовара,
	                       |	ДляЖВ.ИнтернетЦена,
	                       |	ДляЖВ.ЗакупЦена,
	                       |	ДляЖВ.Код,
	                       |	ДляЖВ.ТоварЖНВЛС,
	                       |	ДляЖВ.ПартияДокументПоступления,
	                       |	ВЫБОР
	                       |		КОГДА ДляЖВ.ЖВ_ЦенаПроизводителяБезНДС <= 50
	                       |			ТОГДА (ДляЖВ.ЖВ_ЦенаЗакупБезНДС + ДляЖВ.ЖВ_ЦенаПроизводителяБезНДС / 100 * 32) * (1 + ДляЖВ.ЖВ_СтавкаНДСПокупки / 100)
	                       |		КОГДА ДляЖВ.ЖВ_ЦенаПроизводителяБезНДС > 50
	                       |				И ДляЖВ.ЖВ_ЦенаПроизводителяБезНДС <= 500
	                       |			ТОГДА (ДляЖВ.ЖВ_ЦенаЗакупБезНДС + ДляЖВ.ЖВ_ЦенаПроизводителяБезНДС / 100 * 28) * (1 + ДляЖВ.ЖВ_СтавкаНДСПокупки / 100)
	                       |		КОГДА ДляЖВ.ЖВ_ЦенаПроизводителяБезНДС > 500
	                       |			ТОГДА (ДляЖВ.ЖВ_ЦенаЗакупБезНДС + ДляЖВ.ЖВ_ЦенаПроизводителяБезНДС / 100 * 15) * (1 + ДляЖВ.ЖВ_СтавкаНДСПокупки / 100)
	                       |	КОНЕЦ / ДляЖВ.ЖВ_ЕИТЗакупкиК КАК ЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУ
	                       |ПОМЕСТИТЬ РезВыборкиПартий
	                       |ИЗ
	                       |	ДляЖВ КАК ДляЖВ
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |УНИЧТОЖИТЬ ДляЖВ
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	РезВыборкиПартий.Товар,
	                       |	РезВыборкиПартий.Склад,
	                       |	РезВыборкиПартий.Партия КАК Партия,
	                       |	РезВыборкиПартий.СтавкаНДС,
	                       |	РезВыборкиПартий.Фирма,
	                       |	РезВыборкиПартий.КолвоОстаток,
	                       |	РезВыборкиПартий.СуммаЗакупСНДСОстаток,
	                       |	РезВыборкиПартий.СуммаНДСЗакупОстаток,
	                       |	РезВыборкиПартий.СуммаРознСНДСОстаток,
	                       |	РезВыборкиПартий.РознНДС,
	                       |	РезВыборкиПартий.РознЦена,
	                       |	РезВыборкиПартий.ДоступноеКолво,
	                       |	РезВыборкиПартий.СкидкаНа1ШтТовара,
	                       |	РезВыборкиПартий.ИнтернетЦена,
	                       |	РезВыборкиПартий.ЗакупЦена,
	                       |	РезВыборкиПартий.Код,
	                       |	РезВыборкиПартий.ТоварЖНВЛС,
	                       |	РезВыборкиПартий.ПартияДокументПоступления,
	                       |	ВЫРАЗИТЬ(РезВыборкиПартий.ЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУ КАК ЧИСЛО(15, 2)) КАК ЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУ,
	                       |	ВЫБОР
	                       |		КОГДА (ВЫРАЗИТЬ(РезВыборкиПартий.ЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУ КАК ЧИСЛО(15, 2))) < РезВыборкиПартий.ИнтернетЦена
	                       |				И РезВыборкиПартий.ТоварЖНВЛС = ИСТИНА
	                       |			ТОГДА ИСТИНА
	                       |		ИНАЧЕ ЛОЖЬ
	                       |	КОНЕЦ КАК ПревышениеЖНВЛС,
	                       |	&НетРазрешенияНаОбманЖВ КАК НетРазрешенияНаОбманЖВ
	                       |ПОМЕСТИТЬ СыройРезультат
	                       |ИЗ
	                       |	РезВыборкиПартий КАК РезВыборкиПартий
	                       |ГДЕ
	                       |	РезВыборкиПартий.ДоступноеКолво > 0
	                       |	И РезВыборкиПартий.СуммаЗакупСНДСОстаток > 0
	                       |	И РезВыборкиПартий.СуммаРознСНДСОстаток > 0
	                       |
	                       |ИНДЕКСИРОВАТЬ ПО
	                       |	Партия
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |УНИЧТОЖИТЬ РезВыборкиПартий
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                       |	СыройРезультат.Партия КАК Партия,
	                       |	СыройРезультат.Партия.ЦенаЗакуп,
	                       |	СыройРезультат.Партия.ЕИТЗакупки.К,
	                       |	СыройРезультат.Партия.ЦенаЗакуп / СыройРезультат.Партия.К КАК ЗакупЦенаШтучки_ПоПриходу
	                       |ПОМЕСТИТЬ ДанныеПартий_ПоЗакупке
	                       |ИЗ
	                       |	СыройРезультат КАК СыройРезультат
	                       |
	                       |ИНДЕКСИРОВАТЬ ПО
	                       |	Партия
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	БазаОкончательнойВыборки.Товар,
	                       |	БазаОкончательнойВыборки.Склад,
	                       |	БазаОкончательнойВыборки.Партия,
	                       |	БазаОкончательнойВыборки.СтавкаНДС,
	                       |	БазаОкончательнойВыборки.Фирма,
	                       |	БазаОкончательнойВыборки.КолвоОстаток,
	                       |	БазаОкончательнойВыборки.СуммаЗакупСНДСОстаток,
	                       |	БазаОкончательнойВыборки.СуммаНДСЗакупОстаток,
	                       |	БазаОкончательнойВыборки.СуммаРознСНДСОстаток,
	                       |	БазаОкончательнойВыборки.РознНДС,
	                       |	БазаОкончательнойВыборки.РознЦена,
	                       |	БазаОкончательнойВыборки.ДоступноеКолво,
	                       |	БазаОкончательнойВыборки.СкидкаНа1ШтТовара,
	                       |	БазаОкончательнойВыборки.ИнтернетЦена,
	                       |	БазаОкончательнойВыборки.ЗакупЦена,
	                       |	БазаОкончательнойВыборки.Код,
	                       |	БазаОкончательнойВыборки.ТоварЖНВЛС,
	                       |	БазаОкончательнойВыборки.ПартияДокументПоступления,
	                       |	БазаОкончательнойВыборки.ЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУ,
	                       |	БазаОкончательнойВыборки.ПревышениеЖНВЛС,
	                       |	БазаОкончательнойВыборки.НетРазрешенияНаОбманЖВ,
	                       |	БазаОкончательнойВыборки.ЗакупЦенаШтучки_ПоПриходу,
	                       |	БазаОкончательнойВыборки.КосячнаяПартия
	                       |ИЗ
	                       |	(ВЫБРАТЬ
	                       |		СыройРезультат.Товар КАК Товар,
	                       |		СыройРезультат.Склад КАК Склад,
	                       |		СыройРезультат.Партия КАК Партия,
	                       |		СыройРезультат.СтавкаНДС КАК СтавкаНДС,
	                       |		СыройРезультат.Фирма КАК Фирма,
	                       |		СыройРезультат.КолвоОстаток КАК КолвоОстаток,
	                       |		СыройРезультат.СуммаЗакупСНДСОстаток КАК СуммаЗакупСНДСОстаток,
	                       |		СыройРезультат.СуммаНДСЗакупОстаток КАК СуммаНДСЗакупОстаток,
	                       |		СыройРезультат.СуммаРознСНДСОстаток КАК СуммаРознСНДСОстаток,
	                       |		СыройРезультат.РознНДС КАК РознНДС,
	                       |		СыройРезультат.РознЦена КАК РознЦена,
	                       |		СыройРезультат.ДоступноеКолво КАК ДоступноеКолво,
	                       |		СыройРезультат.СкидкаНа1ШтТовара КАК СкидкаНа1ШтТовара,
	                       |		СыройРезультат.ИнтернетЦена КАК ИнтернетЦена,
	                       |		СыройРезультат.ЗакупЦена КАК ЗакупЦена,
	                       |		СыройРезультат.Код КАК Код,
	                       |		СыройРезультат.ТоварЖНВЛС КАК ТоварЖНВЛС,
	                       |		СыройРезультат.ПартияДокументПоступления КАК ПартияДокументПоступления,
	                       |		СыройРезультат.ЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУ КАК ЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУ,
	                       |		СыройРезультат.ПревышениеЖНВЛС КАК ПревышениеЖНВЛС,
	                       |		СыройРезультат.НетРазрешенияНаОбманЖВ КАК НетРазрешенияНаОбманЖВ,
	                       |		ДанныеПартий_ПоЗакупке.ЗакупЦенаШтучки_ПоПриходу КАК ЗакупЦенаШтучки_ПоПриходу,
	                       |		ВЫБОР
	                       |			КОГДА СыройРезультат.ЗакупЦена - ДанныеПартий_ПоЗакупке.ЗакупЦенаШтучки_ПоПриходу > 0.2
	                       |					ИЛИ СыройРезультат.ЗакупЦена - ДанныеПартий_ПоЗакупке.ЗакупЦенаШтучки_ПоПриходу < -0.2
	                       |				ТОГДА ИСТИНА
	                       |			ИНАЧЕ ЛОЖЬ
	                       |		КОНЕЦ КАК КосячнаяПартия
	                       |	ИЗ
	                       |		СыройРезультат КАК СыройРезультат
	                       |			ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПартий_ПоЗакупке КАК ДанныеПартий_ПоЗакупке
	                       |			ПО СыройРезультат.Партия = ДанныеПартий_ПоЗакупке.Партия) КАК БазаОкончательнойВыборки
	                       |ГДЕ
	                       |	БазаОкончательнойВыборки.КосячнаяПартия = ЛОЖЬ
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |УНИЧТОЖИТЬ ДанныеПартий_ПоЗакупке
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |УНИЧТОЖИТЬ СыройРезультат"; // Сгенерировано в GtG's Консоль запросов. 26.10.2012 13:23:28


	
	 ЗапросПоПартиям.УстановитьПараметр("Склад",ТекАптека);
	 ЗапросПоПартиям.УстановитьПараметр("Товар",Неопределено);
	 ЗапросПоПартиям.УстановитьПараметр("Фирма",ТекАптека.Фирма);
	 ЗапросПоПартиям.УстановитьПараметр("ИнтернетЦена",1000000000);// нет у нас такого товара
	 ЗапросПоПартиям.УстановитьПараметр("НетРазрешенияНаОбманЖВ",ИСТИНА);

	 
	 ЗапросПоПартиям.Выполнить(); // кэшируем запрос на сервере бд

	
	ИнтернетДоставкаДК="#Интернет#";
	
	ТекущийЧек=Неопределено;	
	
	
	
	
	
КонецПроцедуры

Процедура ТАбНайденногоТовараПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ТАбНайденногоТовараПередНачаломИзменения(Элемент, Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ТАбНайденногоТовараВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	ФормаВводаПараметров=ЭтотОбъект.ПолучитьФорму("ПараметрыСтрокиДляДобавленияВЧек",ЭтаФорма,1);
	ФормаВводаПараметров.Товар=ВыбраннаяСтрока.Товар;
	ФормаВводаПараметров.МаксКолво=ВыбраннаяСтрока.ДоступноеКоличество;
	
	ФормаВводаПараметров.Открыть();
	
	
	
КонецПроцедуры


Процедура Зарезервировать(Стр,ТребуемоеКолво)
	
	Если ЭтоРабочееМестоРезервируетТовар=Ложь ТОгда
		Возврат;
	КонецЕСли;	
	
	
	Возврат; // отключено совсем
	
	МенЗап=РегистрыСведений.РезервПодбора.СоздатьМенеджерЗаписи();
	//---------------<Ищем запись>---------------------------// GtG // 27.07.2012 11:14:38
    МенЗап.Склад=Стр.Склад;
	МенЗап.Товар=Стр.Товар;
	МенЗап.Партия=Стр.партия;
	МенЗап.Пользователь=ПараметрыСеанса.ТекущийСотр;
	
	МенЗап.Документ=ТекущийЧек.ссылка;
	
	МенЗап.Прочитать();
	
	БылоВРезерве=МенЗап.Количество;
	//---------------<Пишем запись>---------------------------// GtG // 27.07.2012 11:14:46
	МенЗап.Склад=Стр.Склад;
	МенЗап.Товар=Стр.Товар;
	МенЗап.Партия=Стр.партия;
	МенЗап.Пользователь=ПараметрыСеанса.ТекущийСотр;
	МенЗап.Документ=ТекущийЧек.ссылка;
	
	МенЗап.Количество=БылоВРезерве+ТребуемоеКолво;
	
	МенЗап.Записать();

	Состояние("Добавлено в резерв "+ТребуемоеКолво);
	ПоискТовараПриИзменении("");
КонецПроцедуры	

Процедура ДобавитьВЧек(Стр,ТребуемоеКолво,ед,кзаказа)
	
	// в стр все количества и цены в минимальных единичках !!!
	
	СтрЧека=ДанныеДляЧека.Добавить();
	
	СтрЧека.КодАП =  Стр.Код;	
	СтрЧека.Товар =  Стр.Товар;
	СтрЧека.Партия =  Стр.Партия;
    СтрЧека.СтавкаНДС =  Стр.СтавкаНДС;
	
	СтрЧека.ТоварЖНВЛС=Стр.ТоварЖНВЛС;
	
	СтрЧека.ЕИТ=Ед;
	СтрЧека.К=Кзаказа;
	
	СтрЧека.Количество =  ТребуемоеКолво/кзаказа;    // приводим к единице заказа
	СтрЧека.ИнтернетЦена =  Стр.ИнтернетЦена*кзаказа;// приводим к единице заказа
    СтрЧека.Цена =  Стр.ИнтернетЦена*кзаказа;// приводим к единице заказа


	СтрЧека.ИнтернетСумма =  Стр.ИнтернетЦена*ТребуемоеКолво; //все в мин единичках , можно не делитьперемножать на кзаказа
	СтрЧека.Сумма =  Стр.ИнтернетЦена*ТребуемоеКолво;//все в мин единичках , можно не делитьперемножать на кзаказа
	СтрЧека.МаксЦенаЖВ=Стр.ЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУ*кЗаказа;
	СтрЧека.Скидка =  0;
	
	
	
	
	
	Если  ТребуемоеКолво=Стр.КолвоОстаток тогда  //в минимальных единичках
		Закупка=Стр.СуммаЗакупСНДСОстаток;
		ЗакупНДС=Стр.СуммаНДСЗакупОстаток;
		
	Иначе	                            //цена мин ед              *//колво мин ед       //===> можно не делитьперемножать на кзаказа
		Закупка=  Окр( (Стр.СуммаЗакупСНДСОстаток/стр.КолвоОстаток)*ТребуемоеКолво   ,2);
		ЗакупНДС=  Окр( (Стр.СуммаНДСЗакупОстаток/стр.КолвоОстаток)*ТребуемоеКолво   ,2);
	КонецЕсли;
	
	СтрЧека.СуммаЗакупочная = Закупка ;
	СтрЧека.НДСЗакупочный =  ЗакупНДС;
	СтрЧека.НДСпоскладу=Окр(СтрЧека.Сумма/(100+Стр.СтавкаНДС.Ставка)*Стр.СтавкаНДС.Ставка,2);//это уже по чеку
	СтрЧека.ИнтернетНДС= Окр(СтрЧека.ИнтернетСумма/(100+Стр.СтавкаНДС.Ставка)*Стр.СтавкаНДС.Ставка,2);//это уже по чеку

	
	//---------------<алярма по наценке, как проверка коэффициента>---------------------------// GtG // 20.09.2012 19:24:47
	АлярмНаценка=Окр((СтрЧека.Сумма/СтрЧека.СуммаЗакупочная-1)*100,2);// в процентах
	Если АлярмНаценка>255 тогда
		Предупреждение("Подозрительная наценка по "+СокрЛП(СтрЧека.Товар)+" !!!
		|Наценка получилась "+АлярмНаценка+"%
		|Попробуйте выполнить подбор в других единицах измерения!");
	КонецЕсли;	
	
	
	
	
	ДанныеДляЧека.Свернуть("КодАП,Товар,ИнтернетЦена,Партия,Цена,СтавкаНДС,еит,к,МаксЦенаЖВ,ТоварЖНВЛС","Количество,ИнтернетСумма,Сумма,Скидка,СуммаЗакупочная,ИнтернетНДС,НДСЗакупочный,НДСпоскладу");
		
	
	
	
	
КонецПроцедуры	


Функция КонтрольОбщегоОстаткаТовара(Товар,Аптека)
	
	ЗапросКонтроляОбщегоОстатка.УстановитьПараметр("Товар",Товар);
	ЗапросКонтроляОбщегоОстатка.УстановитьПараметр("Склад",Аптека);
	
	Рез=ЗапросКонтроляОбщегоОстатка.Выполнить().Выгрузить();
	Если Рез.Количество()=0 Тогда
		Возврат 0;
	Иначе
	  Возврат Рез.Получить(0).ОбщийОстаток;
	КонецЕсли;  
КонецФункции


Процедура ДобавитьПартии(параметр)
	
	//параметр = структура типа "Товар,Колво {в минимальных единичках колво из заказа умноженное на кзаказа},Цена,Ед,КЗаказа"
	
	// Выбираем партии с остатков с учетом резерва, 
	// добавляем в табличку для документа и в резерв подбора, 
	// чтоб другие не схватили
	
	//---------------<Резервируем товар по колву без партий, чтоб не перехватили>---------------------------// GtG // 26.07.2012 14:08:40
	
	//параметр: СтруктураРезультата=Новый Структура("Товар,Колво,Цена",Товар,Количество,Цена);
	
	
	//---------------<Отключена блокировка дублей.>---------------------------// GtG // 22.08.2012 15:10:47
	//УжеЕстьТовар=ДанныеДляЧека.Найти(Параметр.Товар,"Товар");
	//Если УжеЕстьТовар<>Неопределено Тогда
	//	
	//	Если УжеЕстьТовар.ИнтернетЦена<>Параметр.Цена Тогда
	//		Предупреждение("Уже есть такой товар с ценой "+УжеЕстьТовар.ИнтернетЦена +" !!!");
	//		Возврат;
	//	КонецЕсли;	
	//КонецЕсли;
	//---------------<---------------------->---------------------------// GtG // 22.08.2012 15:10:55
	
	Макет=ЭтотОбъект.ПолучитьМакет("ЛогОшибок");
	
	Если Параметр.ПарольЖвЗаказа=ПарольЖВ ТОгда
		НетРазрешенияНаОбманЖВ=ЛОжь;
	Иначе
		НетРазрешенияНаОбманЖВ=Истина;
	КонецЕсли;	
	
	
	Если КонтролироватьОбщийОстатокПоТовару=Истина тогда
		
		ВНаличии=КонтрольОбщегоОстаткаТовара(Параметр.Товар, Параметр.Склад);
		
		Если ВНаличии<=0 Тогда
			
			Область=Макет.ПолучитьОбласть("КритОш");
			Область.Параметры.ТекстКритическойОшибки	    =  "Остаток товара по всем партиям = "+ВНаличии+" !!!";
			ЭлементыФормы.ТабЛог.Вывести(Область);
			
			
			Область=Макет.ПолучитьОбласть("Ругачка");
			
			
			Область.Параметры.Ругачка=("Нехватает товара! Суммарный остаок товара по всем партиям ="+ВНаличии+" 
			|Товар: "+Параметр.Товар+"
			|Цена из интернет-заказа: "+Параметр.Цена);
			
			Возврат;
			
		КонецЕсли;
	КонецЕсли;	
	
	
	
	 ЗапросПоПартиям.УстановитьПараметр("Товар",Параметр.Товар);
	 ЗапросПоПартиям.УстановитьПараметр("ИнтернетЦена",Параметр.Цена);  // за минимальную единицу
	 ЗапросПоПартиям.УстановитьПараметр("НетРазрешенияНаОбманЖВ",НетРазрешенияНаОбманЖВ);
	 ЗапросПоПартиям.УстановитьПараметр("Склад",Параметр.Склад);

	 
	 
	 
	 Рез=ЗапросПоПартиям.Выполнить().Выгрузить(); // даст остатки по партиям в минимальных единицах , с учетом резерва - только те партии где за вычетом резерва что-то еще есть
	 
	 
	 Если Рез.Количество()=0 тогда
		 
		 
		 Область=Макет.ПолучитьОбласть("КритОш");
		 Область.Параметры.ТекстКритическойОшибки	    =  "Нет остатка с закупочной ценой меньше или равной "+ Параметр.Цена;
		 ЭлементыФормы.ТабЛог.Вывести(Область);

		 
		 Область=Макет.ПолучитьОбласть("Ругачка");

		 
		 Область.Параметры.Ругачка=("Нехватает товара! Все либо не оприходовано, либо продано, либо зарезервировано по другим чекам!
		 |Товар: "+Параметр.Товар+"
		 |Цена из интернет-заказа: "+Параметр.Цена);
		 
		 ЕстьОшибкиПриПодбореПартий=Истина;
		 
		 Возврат;
	 КонецЕсли;
	 
	 
	 //рез отсортирован по возрастанию цены
	 
	 ТребуемоеКолво=Параметр.Колво;// в мин единичках
	 Набрано=0;
	 Для каждого стр из Рез Цикл
		 
		 Если стр.ДоступноеКолво< Параметр.КЗаказа тогда
			 Продолжить; // этот остаток не кратен кЗаказа, не получится продать 1 пачку
		 КонецЕСли; 	 
		 
		 
		 
		 Если Стр.ПревышениеЖНВЛС=Истина ТОгда
			 Область=Макет.ПолучитьОбласть("Ругачка");

		 
		 Область.Параметры.Ругачка=("Превышение цены по ЖНВЛС! 
			 				|"+Параметр.Товар+"
							|Партия "+ Стр.Партия);
			Область=Макет.ПолучитьОбласть("СтрокаОстКрасн");
			 Область.Параметры.Партия	    =  Стр.Партия;
			 Область.Параметры.ЦенаЗакуп		= Стр.ЗакупЦена*параметр.КЗаказа;
			 Область.Параметры.ОстатокСкл=		Стр.ДоступноеКолво/параметр.КЗаказа;
			 Область.Параметры.Ед=параметр.Ед;
			 Область.Параметры.К=параметр.КЗаказа;
			 Область.Параметры.МаксЦенаЖВ="Макс. цена: "+Стр.ЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУ*параметр.КЗаказа;
			 ЭлементыФормы.ТабЛог.Вывести(Область);
			 
			 Сообщить("Заказ "+НомерЗаказа+"  "+Параметр.Товар+"  Цена не выше "+Стр.ЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУ*параметр.КЗаказа);
			 
			 
			Продолжить;
		КонецЕсли;	
		 
		 
		 Если  ТребуемоеКолво=0 тогда
			
			 прервать;
		 КонецЕсли;
		 
		 
		 Если Стр.ЗакупЦена>Стр.ИнтернетЦена Тогда
			 Область=Макет.ПолучитьОбласть("Ругачка");

		 
		 Область.Параметры.Ругачка=("Пратия с закупочной ценой ВЫШЕ цены заказа со скидкой! "+Стр.Партия+"  "+Стр.ЗакупЦена+">"+Стр.ИнтернетЦена+"   пропускаем.");
			 
			 Область=Макет.ПолучитьОбласть("СтрокаОстКрасн");
			 Область.Параметры.Партия	    =  Стр.Партия;
			 Область.Параметры.ЦенаЗакуп		= Стр.ЗакупЦена;
			 Область.Параметры.ОстатокСкл=		Стр.ДоступноеКолво;
			 Область.Параметры.Ед=параметр.Ед;
			 Область.Параметры.К=параметр.КЗаказа;

			 ЭлементыФормы.ТабЛог.Вывести(Область);
			 
			 Продолжить;
		 КонецЕсли;	 
		 
		 
		 
		 Если Стр.ДоступноеКолво >ТребуемоеКолво Тогда
			 // частично по доступному колву
			 
			 УшлоВЧек=ТребуемоеКолво; // в мин единичках
			 
			 Зарезервировать(Стр,ТребуемоеКолво);  // в мин единичках
			 ДобавитьВЧек(Стр,ТребуемоеКолво,параметр.ед,параметр.кЗаказа);
			 Набрано=Набрано+ТребуемоеКолво;  // в мин единичках
			 ТребуемоеКолво=0;
		 Иначе	 
			 // в ноль по доступному колву
			 УшлоВЧек=Стр.ДоступноеКолво;  // в мин единичках

			 Зарезервировать(Стр,Стр.ДоступноеКолво); // в мин единичках
			 ДобавитьВЧек (Стр,Стр.ДоступноеКолво,параметр.ед,параметр.кЗаказа);  // в мин единичках
			 Набрано=Набрано+Стр.ДоступноеКолво;   // в мин единичках
			 ТребуемоеКолво=ТребуемоеКолво-Стр.ДоступноеКолво; // в мин единичках
		 конецЕсли; 
		 
		 Область=Макет.ПолучитьОбласть("СтрокаОст");
		 Область.Параметры.Партия	    =  Стр.Партия;
		 Область.Параметры.ЦенаЗакуп		= Стр.ЗакупЦена*параметр.кЗаказа;
		 Область.Параметры.ОстатокСкл=		Стр.ДоступноеКолво/параметр.кЗаказа;
		 Область.Параметры.ДобавленоВЧек=УшлоВЧек/параметр.кЗаказа;
		 Область.Параметры.Ед	= параметр.ед;
		 Область.Параметры.К    = параметр.кЗаказа;
		 ЭлементыФормы.ТабЛог.Вывести(Область);

		 
		 
	 КонецЦикла;
	 
	 Если  ТребуемоеКолво<>0 тогда
		 
		 Область=Макет.ПолучитьОбласть("Ругачка");
		   

		 
		 Нехватило=Параметр.Колво-Набрано ;
		 Область.Параметры.Ругачка	    =("Не хватило товара для полного удовлетворения клиента!!! 
		 |Нужно : "+Параметр.Колво/параметр.кЗаказа+" "+параметр.ед+" Доступно:"+Набрано/параметр.кЗаказа+" "+параметр.ед+" Не хватило:"+Нехватило/параметр.кЗаказа+" "+параметр.ед+"
		 |Вероятно есть пратия с закупочной ценой ниже цены заказа со скидкой!");	
		 
		 ЭлементыФормы.ТабЛог.Вывести(Область);
		 
		 ЕстьОшибкиПриПодбореПартий=Истина;
	 иначе
		 Область=Макет.ПолучитьОбласть("ОК");
		 ЭлементыФормы.ТабЛог.Вывести(Область);
	 КонецЕсли;
	 
 КонецПроцедуры	
	


Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)

		
		ДобавитьПартии(ЗначениеВыбора);
		


	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ОсновныеДействияФормыПробитьЧек(Кнопка)
	Если НомерЗаказа=0 Тогда
		Предупреждение("Не указан номер заказа!");
		Возврат;
	КонецЕсли;	
	
	
	Если   ТекущийЧек.ЧекПробитНаККМ=Истина ТОгда
		ПРедупреждение("Этот чек уже пробит на ККМ!");
		Возврат;
	КонецЕсли;	
	
	Если ДанныеДляЧека.Количество()=0 Тогда
		ПРедупреждение("Нет товара для пробития в чек!");
		ЖесткаяОчисткаРезерваПодбора();
		Возврат;
	КонецЕсли;	
	
	
	Если ТекущийЧек.ДокументОснование.Пустая()=Ложь Тогда
		Если ТекущийЧек.ДокументОснование.ПРоведен=ЛОжь Тогда
			Предупреждение("Заказ еще не проведен!",1);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Курьер.Пустая()=Истина  или пустаястрока(Курьер)=Истина ТОгда
		Предупреждение("Не назначен курьер!");
		Возврат;
	КонецЕсли;	
	
		
	Если ТекущийЧек.ДокументОснование.Пустая() Тогда
		ТекущийЧек.НомерЗаказа=НомерЗаказа;
	Иначе
		ТекущийЧек.ТипИсточника=ТекущийЧек.ДокументОснование.ТипИсточника;
		ТекущийЧек.НомерЗаказа=ТекущийЧек.ДокументОснование.НомерЗаказа;
	КонецЕСли;

	
	Если ЕстьОшибкиПриПодбореПартий=Истина ТОгда
		ПРедупреждение("Были ошибки при подборе партий в чек! 
		|Смотри в логе.
		|Чек пробить нельзя!");
		Возврат;
	КонецЕсли;
	
	
	
	
	Если 1=100 тогда //затычка
		ТекущийЧек=Документы.ЧекПродажи.СоздатьДокумент();
	КонецЕсли;	 //затычка
	
	ТекущийЧек.Товар.Очистить();
	ТекущийЧек.Дисконт.Очистить();
	ТекущийЧек.АвансыПоУслугам.Очистить();
	
	
	//---------------<Заталкиваем данные в чек>---------------------------// GtG // 27.07.2012 13:57:23
	Для Каждого Стр Из ДанныеДляЧека Цикл
		ТоварСтр=ТекущийЧек.Товар.Добавить();
		
		ТоварСтр.Товар        = Стр.Товар;
		ТоварСтр.ЕИТ          = Стр.еит;
		ТоварСтр.К            = стр.к;
		ТоварСтр.Количество   = Стр.Количество;
		ТоварСтр.Партия       = Стр.Партия;
		ТоварСтр.Сумма        = Стр.Сумма;
		ТоварСтр.СтавкаНДС    = Стр.СтавкаНДС;
		ТоварСтр.СуммаНДС     = Стр.НДСпоскладу;
		ТоварСтр.СуммаЗакуп   = Стр.СуммаЗакупочная;
		ТоварСтр.НДСЗакуп     = Стр.НДСЗакупочный  ;
		
		Если Стр.Скидка<>0 Тогда
			ДисконтСтр=ТекущийЧек.Дисконт.Добавить();
			ДисконтСтр.Карта=ИнтернетДоставкаДК;
			ДисконтСтр.Товар=Стр.Товар;
			ДисконтСтр.Еит=Стр.еит;
			ДисконтСтр.СуммаСоСкидкой =Стр.ИнтернетСумма;
			ДисконтСтр.СуммаСкидки=Стр.Скидка;
			ДисконтСтр.К=стр.к;
			ДисконтСтр.Количество=Стр.Количество;
			ДисконтСтр.Партия  =Стр.Партия;
		КонецЕсли;	
	КонецЦикла;
	//---------------<>---------------------------// GtG // 27.07.2012 13:57:28
	
	ТекущийЧек.ШКЛПВ=ТекущийЧек.ДокументОснование.ШКЛПВ;
	
	СтрИзм=ТекущийЧек.Изменения.Добавить();
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.КомментарийИзменения="Чек отправлен на ККМ";
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
	
	Для Ы=1 По 20 Цикл
		Попытка
			ТекущийЧек.Записать(РежимЗаписиДокумента.Запись);
			Прервать;
		Исключение
			ПРедупреждение("Блокировка, ждем 3 сек и пробуем еще раз записать документ...",3);
		КонецПопытки;
	КонецЦикла;	
	
	ЭлементыФормы.НадписьПроТекЧек.Заголовок=""+ТекущийЧек+"  (Отправлен на ККМ)";
	//---------------<пробиваем чек на ККМ>---------------------------// GtG // 26.07.2012 12:57:07
	
	
	
	Если ЭмуляцияККМ=Ложь Тогда
		
		ECR.DeviceEnabled = 1;
		Если ECR.ResultCode <> 0 тогда
			Предупреждение("Нет связи с фискальным регистратором!");
			Возврат;
		КонецЕсли;
		
		// получаем состояние ККМ
		ГетСтатус=ECR.GetStatus() ;
		Если ГетСтатус <> 0 тогда
			Предупреждение("Неверное состояние ККМ ! Код ошибки "+ГетСтатус);
			Возврат;
		КонецЕсли;
		
		//// проверяем на всякий случай ККМ на фискализированность , а вот это похер
		//  Если ECR.Fiscal = 1 тогда
		//	Если Вопрос("ККМ фискализирована! Вы действительно хотите продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет тогда
		//	  Возврат;
		//	КонецЕсли;
		//  КонецЕсли;
		
		
		ECR.Password = 30;
		ECR.Mode = 1;
		КодОшибки=ECR.SetMode();
		
		Если КодОшибки<>0 Тогда
			ПРедупреждение("Не удалось войти в режим регистрации! Код ошибки ККМ "+КодОшибки);
			Возврат;
		КонецЕсли;
		
		
		
		
		
		
		// если есть открытый чек, то отменяем его
		Если ECR.CheckState <> 0 тогда
			Если ECR.CancelCheck() <> 0 тогда
				ПРедупреждение("На ККМ был открытый чек и не удалось его отменить!");
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;  // эмуляцияккм = ложь
	
	Если ТекущийЧек.ДокументОснование.Пустая() Тогда
		НомерЗаказаДляЧека=НомерЗаказа;
	Иначе
		НомерЗаказаДляЧека=""+ТекущийЧек.ДокументОснование.ТипИсточника+"-"+ТекущийЧек.ДокументОснование.НомерЗаказа;
	КонецЕСли;
	
	
	Если ЭмуляцияККМ=Ложь Тогда
		
		
		
		ECR.TextWrap=1;
		ECR.Caption= "Заказ № "+ТекущийЧек.ТипИсточника+"-"+ТекущийЧек.НомерЗаказа;
		ECR.PrintString();
		
		ECR.TextWrap=0;
		ECR.Caption= "--------------------------";
		ECR.PrintString();
		
		
		
		
		Для каждого стр из ДанныеДляЧека цикл
			//Секции 0%=1 10%=2 18%=3
			Если Стр.СтавкаНДС.Ставка=0 Тогда
				Department=1;
			ИначеЕсли Стр.СтавкаНДС.Ставка=10 Тогда	
				Department=2;
			ИначеЕсли Стр.СтавкаНДС.Ставка=18 Тогда	
				Department=3;
			КонецЕсли;	
			
			
			
			
			// продажа без сдачи
			// регистрация продажи
			
			ECR.TextWrap=1;
			ECR.Caption= СокрЛП(Стр.Товар.Наименование);
			ECR.PrintString();
			
			ECR.Name = СокрЛП(Стр.Партия.Наименование);
			ECR.Price = Стр.Цена;
			ECR.Quantity = Стр.Количество;
			ECR.Department = Department;
			КодОшибки=ECR.Registration();
			Если КодОшибки <> 0 тогда
				Предупреждение("Не удалось пробить товар "+Стр.Товар+" партия "+Стр.партия+" Ошибка ККМ "+КодОшибки);
				Возврат;
			КонецЕсли;
			
			Если Стр.Скидка<>0 Тогда
				// скидка суммой на предыдущую позицию
				ECR.summ = Стр.Скидка;
				ECR.Destination = 1; // 1-на строку, 0- на весь чек
				ECR.DiscountTypeNumber=0;
				КодОшибки=ECR.SummDiscount() ;
				Если КодОшибки<> 0 тогда
					Предупреждение("Не удалось дать скидку на строку товар "+Стр.Товар+" партия "+Стр.партия+" Ошибка ККМ "+КодОшибки);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
			
			
		КонецЦикла;	
	КонецЕсли; //эмуляцияккм=ложь
	//---------------<Пробиваем доставку, если есть>---------------------------// GtG // 31.07.2012 18:28:03
	
	Если тарифыподоставке="" Тогда
		// доставка бесплатно
		
	Иначе
		
		
		
		СтрокаДоставки=ТекущийЧек.АвансыПоУслугам.Добавить();
		
		СтрокаДоставки.ВидОперации =Перечисления.ВидыОперацийСАвансамиПоУслугам.Реализация;
		СтрокаДоставки.ТипОплаты   =Перечисления.ТипыОплаты.Наличными;
		СтрокаДоставки.НомерЗаказа =ТекущийЧек.НомерЗаказа;
		СтрокаДоставки.ДатаЗаказа  =ТекущийЧек.ДатаЗаказа;
		СтрокаДоставки.Сумма      = ТарифыПоДоставке.Цена;
		//СтрокаДоставки.Касса      =
		//СтрокаДоставки.ЗетОчет
		СтрокаДоставки.СтавкаНДС = ТарифыПоДоставке.СтавкаНДС;
		СтрокаДоставки.СуммаНДС  = Окр(ТарифыПоДоставке.Цена/(100+ТарифыПоДоставке.СтавкаНДС.ставка)*ТарифыПоДоставке.СтавкаНДС.ставка,2);
		СтрокаДоставки.Услуга   =ТарифыПоДоставке;
		
		Если ЭмуляцияККМ=Ложь Тогда
			
			ECR.TextWrap=1;
			ECR.Caption= СокрЛП(ТарифыПоДоставке.Наименование);
			ECR.PrintString();
			
			ECR.Name = СокрЛП(ТарифыПоДоставке.ШтрихКод);
			ECR.Price = СтрокаДоставки.Сумма;
			ECR.Quantity = 1;
			ECR.Department = ТарифыПоДоставке.КатегорияУслуги.НомерСекцииККМ;
			КодОшибки=ECR.Registration();
			Если КодОшибки <> 0 тогда
				Предупреждение("Не удалось пробить доставку "+ТарифыПоДоставке+" Ошибка ККМ "+КодОшибки);
				Возврат;
			КонецЕсли;
		КонецЕсли;  // ЭмуляцияККМ=Ложь
		
	конецесли;
	
			
	Если ЭмуляцияККМ=Ложь Тогда		
		//	Тип закрытия чека: TypeClose
		//0 – наличными;
		//1 – тип оплаты 1;
		//2 – тип оплаты 2;
		//3 – тип оплаты 3;
		//4 – тип оплаты 4;
		//5 – тип оплаты 5.
		
		ECR.RegisterNumber=19; // 19  === Режим работы ККМ,(Mode, AdvancedMode).,Номер текущего чека (CheckNumber), Состояние текущего чека(CheckState)
		//Сквозной номер документа (DocNumber). 
		ECR.GetRegister();
		ТекущийЧек.НомерЧека=ECR.CheckNumber;
		ТекущийЧек.НомерДокумента=ECR.DocNumber;
		
		ECR.RegisterNumber=22; //22 Заводской номер ККМ (SerialNumber).
		ECR.GetRegister();
		ТекущийЧек.СерийныйНомер=ECR.SerialNumber;
		
		ECR.RegisterNumber=21; //21 Номер смены (Session):
		ECR.GetRegister();
		ТекущийЧек.НомерСмены=ECR.Session;
	Иначе //Если ЭмуляцияККМ=истина
		
		ТекущийЧек.НомерСмены=12345;
		
	КонецЕсли;// ЭмуляцияККМ=Ложь 
	
	
		
	ТекущийЧек.ДатаСмены=ТекущаяДата();
	
	
	Если ЭмуляцияККМ=Ложь Тогда
		ECR.TypeClose = 0;
		КодОшибки=ECR.CloseCheck();
		Если КодОшибки <> 0 тогда
			ПРедупреждение("Не удалось пробить чек! Код ошибки "+КодОшибки);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;//ЭмуляцияККМ=Ложь 
		
	
	
	
	//---------------<в случае успешного пробития чека >---------------------------// GtG // 26.07.2012 12:54:52
	
	ТекущийЧек.ЧекПробитНаККМ=Истина;
	
	СтрИзм=ТекущийЧек.Изменения.Добавить();
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.КомментарийИзменения="Чек пробит на ККМ";
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
	
	
	Для Ы=1 По 20 Цикл
		Попытка
			ТекущийЧек.Записать(РежимЗаписиДокумента.Проведение);
			Прервать;
		Исключение
			ПРедупреждение("Блокировка, ждем 3 сек и пробуем еще раз провести чек...",3);
		КонецПопытки;
	КонецЦикла;	

	
	
	
	
	ЭлементыФормы.НадписьПроТекЧек.Заголовок=""+ТекущийЧек+"  (Пробит на ККМ)";
	
	Если ТекущийЧек.ДокументОснование.Пустая()=Ложь  Тогда
		Заказ=ТекущийЧек.ДокументОснование.ПолучитьОбъект();
		Заказ.ЧекПробит=Истина; 
		Заказ.Курьер=Курьер;
		Заказ.СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.ВПути;
		Заказ.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;	
		
	
    ТекущийЧек=Неопределено;// создается новый чек
	ЖесткаяОчисткаРезерваПодбора();

    ПриОткрытии();// по кругу
	
	
КонецПроцедуры

Процедура ПоискТовараОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ПоискТовараПриИзменении(Элемент);
КонецПроцедуры

Процедура ОбновлениеОтображения()
	ЭтаФорма.Заголовок="Продажа через ККМ. "+СостояниеККМ+"  Аптека: "+АптекаКассира;
КонецПроцедуры

Процедура ДанныеДляЧекаПередУдалением(Элемент, Отказ)
	ОсвободитьРезерв(ЭлементыФормы.ДанныеДляЧека.ТекущаяСтрока);
КонецПроцедуры

Процедура Панель1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	//Если ТекущаяСтраница=0 Тогда
	//	СписокЗаказов.Отбор.Сбросить();
	//	
	//	
	//	ОтборПоПробитию=СписокЗаказов.Отбор.Найти("ЧекПробит");
	//	ОтборПоПробитию.Установить(Ложь,Истина);
	//	
	//	ОтборПоСкладу=СписокЗаказов.Отбор.Найти("Склад");
	//	ОтборПоСкладу.Установить(ТекАптека,Истина);
	//	
	//КонецЕсли;
	//
		
КонецПроцедуры

Функция ПроверкаСопоставления(ЗаказСсылка)
	
	  ЗапросПроверкиСопоставления.УстановитьПараметр("Ссылка",ЗаказСсылка);
	  
	  Рез=ЗапросПроверкиСопоставления.Выполнить().Выгрузить();
	  
	  Если Рез.Количество()=0 Тогда
		  Возврат Истина;
	  Иначе 
		  Если Рез.Получить(0).Товар=0 Тогда
			  Возврат Истина;
		  КонецЕсли;	
		  Возврат Ложь;
	КонецЕсли;  
	  
	
	
	
КонецФункции	

Функция НомерЗаказаДляПечати(ДокЗаказа)
	
	Если ПустаяСтрока(ДокЗаказа.ТипИсточника)=Истина ТОгда
		Возврат Формат(ДокЗаказа.НомерЗаказа,"ЧГ=0");
	Иначе
		Возврат ""+ДокЗаказа.ТипИсточника+"-"+Формат(ДокЗаказа.НомерЗаказа,"ЧГ=0");
    КонецЕсли;
КонецФункции	


Процедура ЗапомнитьТекущийОтбор()
	
	ТекущийОтбор=ЗначениеВСтрокуВнутр(СписокЗаказов.Отбор);
	
КонецПроцедуры

Процедура МиниОтчетПоОстаткамТоваровИзЗаказа(ДокЗаказа)
	ПостроительОст=Новый ПостроительОтчета;
	
	ПостроительОст.Текст= "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ИнтернетЗаказТовар.Товар,
	                      |	ИнтернетЗаказТовар.Ссылка.ФизическаяАптека,
	                      |	ИнтернетЗаказТовар.Ссылка.Склад,
	                      |	СУММА(ИнтернетЗаказТовар.Количество * ИнтернетЗаказТовар.К) КАК Заказано
	                      |ПОМЕСТИТЬ ТоварыИзЗаказа
	                      |ИЗ
	                      |	Документ.ИнтернетЗаказ.Товар КАК ИнтернетЗаказТовар
	                      |ГДЕ
	                      |	ИнтернетЗаказТовар.Ссылка = &Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ИнтернетЗаказТовар.Товар,
	                      |	ИнтернетЗаказТовар.Ссылка.ФизическаяАптека,
	                      |	ИнтернетЗаказТовар.Ссылка.Склад
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЕСТЬNULL(ПартииЖНВЛСОстатки.КолвоОстаток, 0) КАК Колво_Остаток,
	                      |	ПартииЖНВЛСОстатки.Склад,
	                      |	ПартииЖНВЛСОстатки.Товар
	                      |ПОМЕСТИТЬ Остатки
	                      |ИЗ
	                      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	                      |			,
	                      |			(Склад = &Онлайн
	                      |				ИЛИ Склад = &ОффЛайн)
	                      |				И Товар В
	                      |					(ВЫБРАТЬ
	                      |						ТоварыИзЗаказа.Товар
	                      |					ИЗ
	                      |						ТоварыИзЗаказа КАК ТоварыИзЗаказа)) КАК ПартииЖНВЛСОстатки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	База.Склад КАК Склад,
	                      |	База.Товар,
	                      |	База.Заказано КАК Заказано,
	                      |	База.Остаток КАК Остаток,
	                      |	База.Комментарий
	                      |{ВЫБРАТЬ
	                      |	Товар.*,
	                      |	Остаток}
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		ТоварыИзЗаказа.Склад КАК Склад,
	                      |		ТоварыИзЗаказа.Товар КАК Товар,
	                      |		ТоварыИзЗаказа.Заказано КАК Заказано,
	                      |		ЕСТЬNULL(Остатки.Колво_Остаток, 0) КАК Остаток,
	                      |		ВЫБОР
	                      |			КОГДА ТоварыИзЗаказа.Заказано - ЕСТЬNULL(Остатки.Колво_Остаток, 0) > 0
	                      |				ТОГДА ""Недостаточно""
	                      |			ИНАЧЕ ""ОК""
	                      |		КОНЕЦ КАК Комментарий
	                      |	ИЗ
	                      |		ТоварыИзЗаказа КАК ТоварыИзЗаказа
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	                      |			ПО ТоварыИзЗаказа.Склад = Остатки.Склад
	                      |				И ТоварыИзЗаказа.Товар = Остатки.Товар
	                      |	
	                      |	ОБЪЕДИНИТЬ ВСЕ
	                      |	
	                      |	ВЫБРАТЬ
	                      |		ТоварыИзЗаказа.ФизическаяАптека,
	                      |		ТоварыИзЗаказа.Товар,
	                      |		ТоварыИзЗаказа.Заказано,
	                      |		ЕСТЬNULL(Остатки.Колво_Остаток, 0),
	                      |		ВЫБОР
	                      |			КОГДА ТоварыИзЗаказа.Заказано - ЕСТЬNULL(Остатки.Колво_Остаток, 0) > 0
	                      |				ТОГДА ""Недостаточно""
	                      |			ИНАЧЕ ""ОК""
	                      |		КОНЕЦ
	                      |	ИЗ
	                      |		ТоварыИзЗаказа КАК ТоварыИзЗаказа
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	                      |			ПО ТоварыИзЗаказа.Товар = Остатки.Товар
	                      |				И ТоварыИзЗаказа.ФизическаяАптека = Остатки.Склад) КАК База
	                      |ИТОГИ
	                      |	СУММА(Заказано),
	                      |	СУММА(Остаток)
	                      |ПО
	                      |	Склад
	                      |{ИТОГИ ПО
	                      |	Товар.*}
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ ТоварыИзЗаказа"; // Сгенерировано в GtG's Консоль запросов. 13.11.2012 18:44:32

 ПостроительОст.ТекстЗаголовка="Остатки товаров по заказу №"+ДокЗаказа.ТипИсточника+"-"+ДокЗаказа.НомерЗаказа;
	ПостроительОст.Параметры.Очистить();
//----------------------------- параметры построителя -------------------//
ПостроительОст.Параметры.Вставить("Ссылка",ДокЗаказа);
ПостроительОст.Параметры.Вставить("Онлайн",ДокЗаказа.Склад);
ПостроительОст.Параметры.Вставить("ОффЛайн",ДокЗаказа.ФизическаяАптека);    
ПостроительОст.Выполнить();
ПостроительОст.МакетОформления=ПолучитьМакетОформления(СтандартноеОформление.ТРАВА);
ПостроительОст.ОформитьМакет();
ЭлементыФормы.МиниОтчетПоОстаткам.Очистить();
ПостроительОст.Вывести(ЭлементыФормы.МиниОтчетПоОстаткам);

						 
	
КонецПроцедуры	



Процедура СписокЗаказовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ОчиститьСообщения();	
	
	СтандартнаяОбработка=Ложь;
	ДокЗаказа=ВыбраннаяСтрока;  // ссылка
	
	Если ДокЗаказа.ЧекПробит =Истина ТОгда
		Предупреждение("По этому заказу чек уже пробит!",1);
		Возврат;
	КонецЕсли;
	
	
	//---------------<Для подбора по минимальным единицам в заказе все строки должны быть с коэффициентом = 1!>---------------------------// GtG // 30.07.2013 17:05:58
	Если ПодборПоМинЕд=Истина тогда
		Запрос=Новый Запрос("ВЫБРАТЬ
		|	ИнтернетЗаказТовар.Товар
		|ИЗ
		|	Документ.ИнтернетЗаказ.Товар КАК ИнтернетЗаказТовар
		|ГДЕ
		|	ИнтернетЗаказТовар.Ссылка = &Ссылка
		|	И ИнтернетЗаказТовар.К <> 1");
		Запрос.УстановитьПараметр("Ссылка",ДокЗаказа);
		
		Если Запрос.Выполнить().Пустой() = Ложь Тогда
			Предупреждение("ВНИМАНИЕ!!!
			|Для подбора по минимальным единицам 
			|в заказе все строки должны быть с коэффициентом = 1
			|ТОВАР МОЖЕТ СПИСАТЬСЯ НЕПРАВИЛЬНО!!!");
		КонецЕсли;
	КонецЕсли;
	
	
	//---------------<>---------------------------// GtG // 30.07.2013 17:06:03
	
	
	
	
	Курьер="";
		
	
	МиниОтчетПоОстаткамТоваровИзЗаказа(ДокЗаказа);
	
	
	//---------------<Для лога>---------------------------// GtG // 30.07.2012 11:48:01
	ЭлементыФормы.ТабЛог.Очистить();
	Макет=ЭтотОбъект.ПолучитьМакет("ЛогОшибок");
	Область=Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.НомерЗаказа=НомерЗаказаДляПечати(ДокЗаказа);
	ЭлементыФормы.ТабЛог.Вывести(Область);
    //---------------<>---------------------------// GtG // 30.07.2012 11:48:04
	
	
	Если ПроверкаСопоставления(ДокЗаказа)=ложь Тогда
		Предупреждение("В заказе №"+НомерЗаказаДляПечати(ДокЗаказа)+" есть строки несопоставленного товара!");
		
		//---------------<Для лога>---------------------------// GtG // 30.07.2012 11:48:01
		Область=Макет.ПолучитьОбласть("КритОш");
		Область.Параметры.ТекстКритическойОшибки="В заказе есть строки несопоставленного товара!";
		ЭлементыФормы.ТабЛог.Вывести(Область);
		//---------------<>---------------------------// GtG // 30.07.2012 11:48:04
		
		
		Возврат;
	КонецЕсли;	
	
	ЗапомнитьТекущийОтбор();
	
	ПриОткрытии(); // замутит новый чек или сбросит потроха последнего непробитого текущего
	
	
	Курьер=ДокЗаказа.Курьер;
	
	
	ТекущийЧек.ДокументОснование=ДокЗаказа;
	ТекущийЧек.НомерЗаказа=НомерЗаказаДляПечати(ДокЗаказа);
	ТекущийЧек.ДатаЗаказа =ДокЗаказа.ДатаЗаказа;
	НомерЗаказа=ДокЗаказа.НомерЗаказа ;
	
	ЗаказаноЕдиницВсехТоваров=ДокЗаказа.Товар.Итог("Количество");

	СтрИзм=ТекущийЧек.Изменения.Добавить();
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.КомментарийИзменения="Начинаем заполнять по заказу № "+НомерЗаказаДляПечати(ДокЗаказа);
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
	ТарифыПоДоставке=ДокЗаказа.Доставка;
	
	ЕстьОшибкиПриПодбореПартий=Ложь;
	
	
	ПарольЖвЗаказа=ГенераторПароляОбманаЖВ(ДокЗаказа);
	
	КолвоНепробиваемого=0;
	
	Для Каждого стр из ДокЗаказа.Товар Цикл
		
		Если Стр.СтатусСтроки=Перечисления.ИА_СтатусСтрокиЗаказа.НеПробивать ТОгда
			Сообщить("Не пробиваем : "+Стр.Товар+"    "+Стр.Количество+" "+Стр.ЕИТ);
			КолвоНепробиваемого=КолвоНепробиваемого+Стр.Количество;
			Продолжить;
		КонецЕсли;	
		
		
		Если ПодборПоМинЕд=Истина Тогда
			КЗаказа=1;
			Ед=Стр.Товар.ЕдиницаМин;
		Иначе
			КЗаказа=Стр.Товар.ЕдиницаПоУмолчанию.к;
			Ед=Стр.Товар.ЕдиницаПоУмолчанию;
		конецесли;
		
		параметр=Новый Структура("Товар,Колво,Цена,Ед,КЗаказа,ПарольЖвЗаказа,Склад",Стр.ТОвар,Стр.Количество*КЗаказа,Стр.ЦенаСоСкидкой/КЗаказа,ед,КЗаказа,ПарольЖвЗаказа,ДокЗаказа.Склад);
		
		
		//---------------<Для лога>---------------------------// GtG // 30.07.2012 11:48:01
		Область=Макет.ПолучитьОбласть("СтрокаЗаказа");
		
		Область.Параметры.Товар			=	Стр.ТОвар;
		Область.Параметры.ИЦена	        =  Стр.ЦенаСоСкидкой;
		Область.Параметры.КолвоЗаказа	=	Стр.Количество;
		Область.Параметры.Ед	=	Ед;
		Область.Параметры.к	=	КЗаказа;

		

		ЭлементыФормы.ТабЛог.Вывести(Область);
		
		Область=Макет.ПолучитьОбласть("ШапкаОст");
		ЭлементыФормы.ТабЛог.Вывести(Область);
		
		//---------------<>---------------------------// GtG // 30.07.2012 11:48:04
		
		
		
		
		ДобавитьПартии(параметр);
		// Выбираем партии с остатков с учетом резерва, 
		// добавляем в табличку для документа и в резерв подбора, 
		// чтоб другие не схватили
		
		//---------------<Резервируем товар по колву без партий, чтоб не перехватили>---------------------------// GtG // 26.07.2012 14:08:40
		
		//параметр: СтруктураРезультата=Новый Структура("Товар,Колво,Цена",Товар,Количество,Цена);
		
	КонецЦикла;	
	
	Если ЕстьОшибкиПриПодбореПартий=Истина ТОгда
		ПРедупреждение("Были ошибки при подборе партий в чек! 
		|Смотри в логе.
		|Чек пробить нельзя!");
		Возврат;
	КонецЕсли;
	
	ПодобраноЕдиницВсехТоваров=ДанныеДляЧека.Итог("Количество");
	
	
	Если ЗаказаноЕдиницВсехТоваров-КолвоНепробиваемого<>ПодобраноЕдиницВсехТоваров Тогда
		предупреждение("ВНИМАНИЕ!!!
		|
		|Сумма заказа не совпадает с суммой чека!
		|Количество единиц товаров отличается от заказанного!
		|
		|Проверьте корректность данных чека и лог!");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	ЖесткаяОчисткаРезерваПодбора();
КонецПроцедуры

Процедура СписокЗаказовПриАктивизацииСтроки(Элемент)
	
	ДанныеДляЧека.Очистить();
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПробитьЧек.Доступность=Истина;
	
	Попытка
		
		ДокЗаказа= ЭлементыФормы.СписокЗаказов.ТекущаяСтрока;
		
		ЭлементыФормы.НадписьПроЗаказ.Заголовок="Заказ №"+НомерЗаказаДляПечати(ДокЗаказа);
		ЭлементыФормы.КомментарийКЗаказу.Заголовок=""+ЭлементыФормы.СписокЗаказов.ТекущаяСтрока.Комментарий;
		
		Если  ЭлементыФормы.СписокЗаказов.ТекущаяСтрока.ЧекПробит=Истина ТОгда
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПробитьЧек.Доступность=Ложь;
		КонецЕсли;	
		
	Исключение
		ЭлементыФормы.НадписьПроЗаказ.Заголовок="Заказ №";
	КонецПопытки;
	
	
	
КонецПроцедуры

Процедура ФильтрПоНомеруЗаказаПриИзменении(Элемент)
	
	Если  СписокЗаказов.Отбор.НомерЗаказа.Значение<>0 Тогда
		СписокЗаказов.Отбор.Найти("НомерЗаказа").Использование=Истина;
	Иначе
		СписокЗаказов.Отбор.Найти("НомерЗаказа").Использование=Ложь;
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ФильтрПоНомеруЗаказаОчистка(Элемент, СтандартнаяОбработка)
	СписокЗаказов.Отбор.Найти("НомерЗаказа").Использование=Ложь;
	
КонецПроцедуры

Процедура ТабЛогОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	 СтандартнаяОбработка=Ложь;
	 
	 Построитель=Новый ПостроительОтчета;
	 Построитель.Текст=("ВЫБРАТЬ
	                    |	ПартииЖНВЛСОстатки.Товар.Код КАК КодАП,
	                    |	ПартииЖНВЛСОстатки.Товар,
	                    |	ПартииЖНВЛСОстатки.Партия,
	                    |	ПартииЖНВЛСОстатки.КолвоОстаток,
	                    |	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток КАК ЦенаЗакупочная,
	                    |	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток КАК СуммаЗакупочная,
	                    |	ПартииЖНВЛСОстатки.Партия.ДокументПоступления,
	                    |	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * 1.04 КАК Мин_Розн_Цена
	                    |ИЗ
	                    |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	                    |			,
	                    |			Товар = &Товар
	                    |				И Склад = &Склад
	                    |				И Фирма = &Фирма) КАК ПартииЖНВЛСОстатки
	                    |ГДЕ
	                    |	ПартииЖНВЛСОстатки.КолвоОстаток > 0");
	Построитель.Параметры.Вставить("Фирма",ТекФирма);
	Построитель.Параметры.Вставить("Склад",ТекАптека);
	Построитель.Параметры.Вставить("ТОвар",Расшифровка);
	Построитель.ЗаполнениеРасшифровки=ВидЗаполненияРасшифровкиПостроителяОтчета.Расшифровка;
	
	Построитель.Выполнить();
	
	Построитель.ТекстЗаголовка=Расшифровка;
	
	Построитель.МакетОформления=ПолучитьМакетОформления(СтандартноеОформление.Трава);
	
	ТабОст=Новый ТабличныйДокумент;
						 
	Построитель.Вывести(ТабОст);	
	
	Если Построитель.Результат.Пустой() ТОгда
		Мак=ЭтотОбъект.ПолучитьМакет("РасшифровкаОстатка");
		Область=Мак.ПолучитьОбласть("ТовараНет");
		ТабОст.Вывести(Область);
	КонецЕсли;	
	
	ТабОст.ТолькоПросмотр=Истина;
	ТабОст.ОтображатьГруппировки=Ложь;
	ТабОст.ОтображатьСетку=Ложь;
	ТабОст.Показать("Остатки по "+Расшифровка);					 
	
КонецПроцедуры

Процедура СписокЗаказовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Попытка
		Если ПроверкаСопоставления(ДанныеСтроки.Ссылка)=Ложь Тогда
			ОформлениеСтроки.ЦветФона=новый Цвет(238,200,249);
		КонецЕсли;
	Исключение	
	КонецПопытки;	
	
	Попытка
		Если ДанныеСтроки.ЧекПробит=Истина Тогда
			ОформлениеСтроки.ЦветФона=новый Цвет(230,230,250);
		КонецЕсли;
	Исключение	
	КонецПопытки;	
	
	
	
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель2Новые(Кнопка)
	ЭлемОтбора=СписокЗаказов.Отбор.Найти("СтатусЗаказа");
	ЭлемОтбора.Установить(Перечисления.ИА_СтатусЗаказа.Зарегистрирован,Истина);
	
КонецПроцедуры

Процедура КоманднаяПанель2Собранные(Кнопка)
	ЭлемОтбора=СписокЗаказов.Отбор.Найти("СтатусЗаказа");
	ЭлемОтбора.Установить(Перечисления.ИА_СтатусЗаказа.Собран,Истина);
КонецПроцедуры

Процедура КоманднаяПанель2Оплаченные(Кнопка)
	ЭлемОтбора=СписокЗаказов.Отбор.Найти("СтатусЗаказа");
	ЭлемОтбора.Установить(Перечисления.ИА_СтатусЗаказа.Оплачен,Истина);
КонецПроцедуры

Процедура КоманднаяПанель2Все(Кнопка)
	СписокЗаказов.Отбор.Сбросить();
КонецПроцедуры

Процедура КоманднаяПанель2Отказанные(Кнопка)
	ЭлемОтбора=СписокЗаказов.Отбор.Найти("СтатусЗаказа");
	ЭлемОтбора.Установить(Перечисления.ИА_СтатусЗаказа.Отказ,Истина);
КонецПроцедуры

Процедура ДанныеДляЧекаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если данныеСтроки.товар.Разбивается=истина Тогда
		ОформлениеСтроки.Цветфона=Новый Цвет(200,230,255);
	КонецЕсли;
	
	Если данныеСтроки.ИнтернетЦена>ДанныеСтроки.МаксЦенаЖВ и ДанныеСтроки.МаксЦенаЖВ<>0 и ДанныеСтроки.ТоварЖНВЛС=истина Тогда
		ОформлениеСтроки.Цветфона=Новый Цвет(255,230,230);
	КонецЕсли;

	
КонецПроцедуры

Процедура ОсновныеДействияФормыГенераторПароля(Кнопка)
	ФГП=ЭтотОбъект.ПолучитьФорму("ГенераторПароляОбманаЖВ");
	ФГП.ИнтернетЗаказ=ЭлементыФормы.СписокЗаказов.ТекущаяСтрока;
	ФГП.Открыть();
КонецПроцедуры

Процедура ПолеВвода1ПриИзменении(Элемент)
	ОтборПоНомеруЗаказа=СписокЗаказов.Отбор.Найти("НомерЗаказа");
	Если ФильтрПоНомеруЗаказа=0 Тогда
		ОтборПоНомеруЗаказа.Использование=Ложь;
	Иначе
		ОтборПоНомеруЗаказа.Установить(ФильтрПоНомеруЗаказа,Истина);
	КонецЕсли;
КонецПроцедуры

Процедура ПечатьНажатие(Элемент)
 	ЭлементыФормы.СписокЗаказов.ТекущаяСтрока.ПолучитьОбъект().МО_Печать();
КонецПроцедуры

Процедура ФильтрПоНомеруЗаказаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ПолеВвода1ПриИзменении(Элемент) ;

КонецПроцедуры

Процедура ПолеВвода1ЫПриИзменении(Элемент)
	ОтборПоНомеруЗаказа=СписокЗаказов.Отбор.Найти("Номер");
	Если ФильтрПоНомеру1С=0 Тогда
		ОтборПоНомеруЗаказа.Использование=Ложь;
	Иначе
		ОтборПоНомеруЗаказа.Установить(ФильтрПоНомеру1С,Истина);
	КонецЕсли;
КонецПроцедуры
		


Процедура ФильтрПоНомеру1СОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ПолеВвода1ЫПриИзменении(Элемент) ;

КонецПроцедуры



Процедура ОчиститьРезервПодбораНажатие(Элемент)
	ОМ_СправочнаяСлужба.ОМСС_ОчисткаРезерваПодбораПоАптеке(ПоАптеке);
КонецПроцедуры

Процедура КоманднаяПанель2Некомплект(Кнопка)
	ЭлемОтбора=СписокЗаказов.Отбор.Найти("СтатусЗаказа");
	ЭлемОтбора.Установить(Перечисления.ИА_СтатусЗаказа.НеКомплект,Истина);
КонецПроцедуры

Процедура ИсправитьЖВНажатие(Элемент)
	
	//--------------- в заказе меняем цену на жв ----------------------------------------------
	// все жв из заказа  если партия не от "стар и млада" то
	//                   если цена заказа со ск > предельной ЖВ то
	//                  в заказе меняем на предельную ЖВ и округлить до 50 в меньшую сторону
	//                  и вывести в историю изменений документа про исправленные цены
	//-----------------------------------------------------------------------------------------
	
	
	ТекЗаказ=ЭлементыФормы.СписокЗаказов.ТекущаяСтрока;
	
	ТекЗаказОбъект=ТекЗаказ.ПолучитьОбъект();
	
	
	

	
	Для Каждого Стр Из ТекЗаказОбъект.Товар  Цикл
		
		Если Стр.Товар.ЖНВЛС=ЛОжь Тогда
			Продолжить;
		КонецЕсли;	
		
		
		
		
		
		ЗапросПоПартиям.УстановитьПараметр("Товар",Стр.Товар);
		ЗапросПоПартиям.УстановитьПараметр("ИнтернетЦена",Стр.Цена/Стр.К);  // за минимальную единицу
		ЗапросПоПартиям.УстановитьПараметр("НетРазрешенияНаОбманЖВ",Истина);
		ЗапросПоПартиям.УстановитьПараметр("Склад",ТекЗаказОбъект.Склад);
		
		Рез=ЗапросПоПартиям.Выполнить().Выгрузить(); // даст остатки по партиям в минимальных единицах , с учетом резерва - только те партии где за вычетом резерва что-то еще есть
		
		Если Рез.Количество()=0 Тогда
			 Сообщить("не удалось исправить "+Стр.ТОвар+" т.к. нет на остатках");
		КонецЕсли;
		
				
		
		//---------------<При наличии нескольких партий догоняем до минимальной цены из имеющихся>---------------------------// GtG // 06.11.2012 13:16:07
		ВсегоНаОстаткеБезПревышения=0;
		МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа=1000000;
		Для Каждого СтрРез Из Рез Цикл
			
			Если СтрРез.Партия.Поставщик.Код=777 или СтрРез.Партия.Поставщик.Код=744 ТОгда
				ПарольЖВ=ГенераторПароляОбманаЖВ(ТекЗаказ);
				ПРедупреждение("Есть товар от ""Стар И Млада"" Заказ коррекции не подлежит!!!");
				Возврат ; 
			КонецЕсли;	
			
			Если СтрРез.ПревышениеЖНВЛС=Ложь Тогда
				ВсегоНаОстаткеБезПревышения=ВсегоНаОстаткеБезПревышения+СтрРез.КолвоОстаток;
				Если  ВсегоНаОстаткеБезПревышения>=Стр.Количество *стр.К тогда
					прервать; // все ОК превышения нет и количества достаточно
				Иначе	
					Продолжить;//не все ок - превышения нет, но количесва не хватает
				КонецЕсли;
			Иначе //есть превышение
				
  				МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа=Мин(МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа,СтрРез.ЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУ*стр.К);
				
				
				
			КонецЕсли;
		КонецЦикла;
		
		Если МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа=1000000 ТОгда
			// Не изменяем
		Иначе
			
			//---------------<Обрубаем до 50 копеек>---------------------------// GtG // 06.11.2012 19:29:07
			Копейки=МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа -Цел(МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа);
			Если Копейки>0.50 тогда 
				Копейки=0.50;
			Иначе
				Копейки=0;
			КонецЕсли;
			
			МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа=Цел(МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа)+Копейки;
			//---------------<>---------------------------// GtG // 06.11.2012 19:29:12

			
			
			// Изменяем в заказе на МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа   (за единицу заказа)
			СтрИзм=ТекЗаказОбъект.Изменения.Добавить();
			СтрИзм.Сотрудник =ПараметрыСеанса.ТекущийСотр;
			СтрИзм.Дата      =ТекущаяДата();
			СтрИзм.ТипИзм    =ТекЗаказОбъект.СтатусЗаказа;
			СтрИзм.КомментарийИзменения="Изменена цена ЖВ "+Стр.Товар+" с "+Стр.Цена+" на "+МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа;
			Сообщить("Изменена цена ЖВ "+Стр.Товар+" с "+Стр.Цена+" на "+МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа);
			
						
			Стр.Цена=МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа;
			Стр.ЦенаСоСкидкой=МинЖВ_МАКС_ЦЕНА_ЗА_МИН_ЕДИНИЦУЗаказа;
			Стр.Сумма = Стр.Цена*Стр.Количество;
			Стр.СуммаСоСкидкой = Стр.ЦенаСоСкидкой*Стр.Количество;
		КонецЕсли
	КонецЦикла;
	
	ТекЗаказОбъект.СуммаСоСкидкой = ТекЗаказОбъект.Товар.Итог("СуммаСоСкидкой")+ ТекЗаказОбъект.Доставка.Цена;
	ТекЗаказОбъект.Сумма = ТекЗаказОбъект.Товар.Итог("Сумма")+ ТекЗаказОбъект.Доставка.Цена;
	
	Попытка
		ТекЗаказОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ТекЗаказОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецПопытки;
	
	
КонецПроцедуры

Процедура СборочныйЛистНажатие(Элемент)
ЭлементыФормы.СписокЗаказов.ТекущаяСтрока.ПолучитьОбъект().МО_Печать(Ложь,Ложь,Истина,Неопределено,Ложь, 2);
КонецПроцедуры

Процедура ВыгрузкаСВыборомНажатие(Элемент)
	
	ДокСсылка=ЭлементыФормы.СписокЗаказов.ТекущаяСтрока;
	
	ГенЗаказа=Обработки.ГенераторЗаявкиНаПеремещениеВОнлайнЗону.Создать();
	ГенЗаказа.Заказ=ДокСсылка;
	ГенЗаказа.Аптека=ДокСсылка.ФизическаяАптека;
	ГенЗаказа.ОнлайнЗона=ДокСсылка.Склад;
	
	ГенЗаказа.ПолучитьФорму("Форма").Открыть();
КонецПроцедуры

Процедура ВыгрузкаНаФизическуюАптекуНажатие(Элемент)
	ДокСсылка=ЭлементыФормы.СписокЗаказов.ТекущаяСтрока;
	
	ГенЗаказа=Обработки.ГенераторЗаявкиНаПеремещениеВОнлайнЗону.Создать();
	ГенЗаказа.Заказ=ДокСсылка;
	ГенЗаказа.Аптека=ДокСсылка.ФизическаяАптека;
	ГенЗаказа.ОнлайнЗона=ДокСсылка.Склад;
	
	ГенЗаказа.МО_ВыгрузитьЗаказ(ДокСсылка);
	предупреждение("Выгружена заявка на перемещение товара ",10);

КонецПроцедуры

Процедура ДатаОтгрузкиПриИзменении(Элемент)
	ОтборПоСтатусу=СписокЗаказов.Отбор.Найти("ДатаОтгрузки");		
	ОтборПоСтатусу.Использование=Истина;    
	ОтборПоСтатусу.ВидСравнения=ВидСравнения.Равно;
	ОтборПоСтатусу.Значение=ДатаОтгрузки;

КонецПроцедуры

Процедура ДатаОтгрузкиОчистка(Элемент, СтандартнаяОбработка)
	ОтборПоСтатусу=СписокЗаказов.Отбор.Найти("ДатаОтгрузки");		
	ОтборПоСтатусу.Использование=Ложь;  
КонецПроцедуры

Процедура КонтролироватьОбщийОстатокПоТоваруПриИзменении(Элемент)
	Если КонтролироватьОбщийОстатокПоТовару=Истина Тогда
		ЭлементыФормы.НадписьПроКонтрольОбщегоОстатка.Заголовок="Контроль общего остатка: Вкл.";
		ЭлементыФормы.НадписьПроКонтрольОбщегоОстатка.ЦветТекста=Новый Цвет(0,250,0);
	иначе
		ЭлементыФормы.НадписьПроКонтрольОбщегоОстатка.Заголовок="Контроль общего остатка: Выкл.";
		ЭлементыФормы.НадписьПроКонтрольОбщегоОстатка.ЦветТекста=Новый Цвет(250,0,0);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЭмуляцияККМПриИзменении(Элемент)
	Если ЭмуляцияККМ=Истина Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПробитьЧек.Доступность=Истина;
	КонецЕсли;	
КонецПроцедуры



ТекущийОтбор=Неопределено;
ЭтоРабочееМестоРезервируетТовар=Ложь;

ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Очистить();

ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить("","Доставка бесплатно");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 50 руб."),"Доставка 50 руб.");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 100 руб."),"Доставка 100 руб.");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 150 руб."),"Доставка 150 руб.");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 200 руб."),"Доставка 200 руб.");


ЗапросПроверкиСопоставления=Новый Запрос("ВЫБРАТЬ
                                         |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИнтернетЗаказНесопоставленныйТовар.Товар) КАК Товар
                                         |ИЗ
                                         |	Документ.ИнтернетЗаказ.НесопоставленныйТовар КАК ИнтернетЗаказНесопоставленныйТовар
                                         |ГДЕ
                                         |	ИнтернетЗаказНесопоставленныйТовар.Ссылка = &Ссылка
                                         |	И ИнтернетЗаказНесопоставленныйТовар.Обработана = ЛОЖЬ");
										 
КонтролироватьОбщийОстатокПоТовару=Истина;
ЗапросКонтроляОбщегоОстатка=Новый Запрос("ВЫБРАТЬ
                                         |	ПартииЖНВЛСОстатки.КолвоОстаток как ОбщийОстаток
                                         |ИЗ
                                         |	РегистрНакопления.ПартииЖНВЛС.Остатки(
                                         |			,
                                         |			Товар = &Товар
                                         |				И Склад = &Склад) КАК ПартииЖНВЛСОстатки");