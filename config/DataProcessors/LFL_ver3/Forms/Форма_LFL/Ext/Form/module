Перем МВТ;// менеджер временных таблиц


Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры


Процедура ТаблицаПениодовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	//Элемент.ТекущаяСтрока.НомерПериода=Элемент.ТекущаяСтрока.НомерСтроки;
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(Элемент.ТекущаяСтрока.НачалоПериода, ?(Элемент.ТекущаяСтрока.КонецПериода='0001-01-01', Элемент.ТекущаяСтрока.КонецПериода, КонецДня(Элемент.ТекущаяСтрока.КонецПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		Элемент.ТекущаяСтрока.НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
		Элемент.ТекущаяСтрока.КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
	ТаблицаПениодов.Свернуть("НачалоПериода,КонецПериода","");
	
	
	ТаблицаПениодов.Сортировать("НачалоПериода");
	
КонецПроцедуры

Процедура ОсновныеДействияФормы_1_ОтобратьСопоставимыеАптеки(Кнопка)
	ОчиститьСообщения();
	Если ТаблицаПениодов.Количество()<2 ТОгда
		Предупреждение("Не выбраны периоды!");
		Возврат;
	КонецЕсли; 	
	
	
	Если БезУчетаВыходаНаПроектнуюМощность=Истина Тогда
		
		ТХТ="ВЫБРАТЬ РАЗЛИЧНЫЕ
		    |	РеализацияККМ.Склад  как Аптека
		    |ИЗ
		    |	Документ.РеализацияККМ КАК РеализацияККМ
		    |ГДЕ
		    |	РеализацияККМ.Проведен = ИСТИНА
		    |	И РеализацияККМ.Дата МЕЖДУ &Дата1 И &Дата2";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Дата1",НачалоДня(ТаблицаПениодов.Получить(0).НачалоПериода));
		Запрос.УстановитьПараметр("Дата2",КонецДня(ТаблицаПениодов.Получить(ТаблицаПениодов.Количество()-1).КонецПериода));
		
		ТСопоставимыеАптеки= Запрос.Выполнить().Выгрузить();
		
		ЭлементыФормы.СопоставимыеАптеки.Значение=ТСопоставимыеАптеки;
		ЭлементыФормы .СопоставимыеАптеки.СоздатьКолонки();
		
		//----------------------------------------------------------
		ЭлементыФормы.Н_КолвоУчВРасчАптек.Заголовок=СопоставимыеАптеки.Количество();
		
		ЭтаФорма.Обновить();
		
		РасчетБазыДляLFL();
		Возврат;
	КонецЕсли;	
	
	
	
	
	 /// Условие сопоставимости - аптека должна работать , давать выручку во всех периодах и в  первом периоде должна выйти на 
	 /// проектную мощьность.
	 
	 /// Условие выхода на проектную мощность - в первром периоде аптека должна давать чеков макс на 10 % больше или меньше чем в следующем месяце
	 
	 
	 
	 
	 ТаблицаПениодов.Сортировать("НачалоПериода");
	 
	 НачПер=ТаблицаПениодов.Получить(0).НачалоПериода;
	 КонПер=ТаблицаПениодов.Получить(0).КонецПериода;
	
	 //-------------------- Запрос by GtG -----------------------
	 // Назначение: 
	 // 1) Рассчитываем месяц выхода на проектную мощность аптеки
	 //----------------------------------------------------------
	 ТХТ="ВЫБРАТЬ ПЕРВЫЕ 100000000
	     |	РеализацияККМ.Склад КАК Склад,
	     |	КОНЕЦПЕРИОДА(РеализацияККМ.Дата, МЕСЯЦ) КАК Месяц,
	     |	СУММА(РеализацияККМ.КоличествоЧеков) КАК КоличествоЧеков,
	     |	КОНЕЦПЕРИОДА(РеализацияККМ.Склад.ДатаПерехода, МЕСЯЦ) КАК МесяцОткрытия
	     |ПОМЕСТИТЬ ПервичнаяВыборка
	     |ИЗ
	     |	Документ.РеализацияККМ КАК РеализацияККМ
	     |ГДЕ
	     |	РеализацияККМ.Проведен = ИСТИНА
	     |	И КОНЕЦПЕРИОДА(РеализацияККМ.Дата, МЕСЯЦ) > КОНЕЦПЕРИОДА(РеализацияККМ.Склад.ДатаПерехода, МЕСЯЦ)
	     |	И РеализацияККМ.КоличествоЧеков > 0
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	РеализацияККМ.Склад,
	     |	КОНЕЦПЕРИОДА(РеализацияККМ.Дата, МЕСЯЦ),
	     |	КОНЕЦПЕРИОДА(РеализацияККМ.Склад.ДатаПерехода, МЕСЯЦ)
	     |
	     |УПОРЯДОЧИТЬ ПО
	     |	Склад,
	     |	Месяц
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |ВЫБРАТЬ
	     |	ПервичнаяВыборка.Склад,
	     |	СРЕДНЕЕ(ПервичнаяВыборка.КоличествоЧеков) КАК СредняяПроходимость
	     |ПОМЕСТИТЬ СреднееКоличествоЧеков
	     |ИЗ
	     |	ПервичнаяВыборка КАК ПервичнаяВыборка
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	ПервичнаяВыборка.Склад
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |ВЫБРАТЬ
	     |	ПервичнаяВыборка.Склад,
	     |	ПервичнаяВыборка.Месяц,
	     |	ПервичнаяВыборка.КоличествоЧеков,
	     |	ПервичнаяВыборка.МесяцОткрытия,
	     |	СреднееКоличествоЧеков.Склад КАК Склад1,
	     |	СреднееКоличествоЧеков.СредняяПроходимость,
	     |	ВЫБОР
	     |		КОГДА СреднееКоличествоЧеков.СредняяПроходимость = 0
	     |			ТОГДА 0
	     |		ИНАЧЕ (ПервичнаяВыборка.КоличествоЧеков / СреднееКоличествоЧеков.СредняяПроходимость - 1) * 100
	     |	КОНЕЦ КАК Отклонение
	     |ПОМЕСТИТЬ РасчВыхНаПргоектнМощ
	     |ИЗ
	     |	ПервичнаяВыборка КАК ПервичнаяВыборка
	     |		ЛЕВОЕ СОЕДИНЕНИЕ СреднееКоличествоЧеков КАК СреднееКоличествоЧеков
	     |		ПО ПервичнаяВыборка.Склад = СреднееКоличествоЧеков.Склад
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |УНИЧТОЖИТЬ ПервичнаяВыборка
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |УНИЧТОЖИТЬ СреднееКоличествоЧеков
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |ВЫБРАТЬ
	     |	РасчВыхНаПргоектнМощ.Склад,
	     |	МИНИМУМ(РасчВыхНаПргоектнМощ.Месяц) КАК МесяцВыходаНаПМ
	     |ПОМЕСТИТЬ ИтоговаяТаблица
	     |ИЗ
	     |	РасчВыхНаПргоектнМощ КАК РасчВыхНаПргоектнМощ
	     |ГДЕ
	     |	РасчВыхНаПргоектнМощ.Отклонение > -20
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	РасчВыхНаПргоектнМощ.Склад
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |УНИЧТОЖИТЬ РасчВыхНаПргоектнМощ
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |ВЫБРАТЬ
	     |	ИтоговаяТаблица.Склад КАК Склад,
	     |	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ИтоговаяТаблица.Склад.ДатаПерехода, МЕСЯЦ, 1), МЕСЯЦ) КАК МесяцПослеОткрытия,
	     |	ИтоговаяТаблица.МесяцВыходаНаПМ,
	     |	РАЗНОСТЬДАТ(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ИтоговаяТаблица.Склад.ДатаПерехода, МЕСЯЦ, 1), МЕСЯЦ), ИтоговаяТаблица.МесяцВыходаНаПМ, МЕСЯЦ)+1 КАК СрокВыхода
	     |ИЗ
	     |	ИтоговаяТаблица КАК ИтоговаяТаблица
	     |
	     |УПОРЯДОЧИТЬ ПО
	     |	Склад
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |УНИЧТОЖИТЬ ИтоговаяТаблица";
	 
	 Запрос=Новый Запрос;
	 Запрос.Текст=ТХТ;
	 	 
	 //----------------------------------------------------------
	 РезТЗ=Запрос.Выполнить().Выгрузить();
	 
	 ЭлементыФормы.Тест.Значение=РезТЗ;
	 ЭлементыФормы.Тест.СоздатьКолонки();
	 
	 // 2) проверяем первый период - берем только те аптеки, которые вышли в этом периоде на ПМ
	 
	 КонПер1=ТаблицаПениодов.Получить(0).КонецПериода;
	 
	 
	 ТабАптек= Новый ТаблицаЗначений;
	 ТабАптек.Колонки.Добавить("Аптека");
	 
	 Для каждого  Стр  Из РезТЗ  Цикл
		 Если Стр.МесяцВыходаНаПМ>КонПер1 тогда
			 // эта аптека еще не вышла на проектную мощность в первом периоде. не подходит.
			 продолжить;
		 КонецЕсли;
		 ТабАптек.Добавить().Аптека=Стр.Склад;
	 КонецЦикла; 
	 
	 // 3) Проверяем Последний период - из (2 - СписокАптекВышедшихНаПрМощ) оставляем только те аптеки, которые продолжают работать и в этом периоде.
	 
	 КонПер2=ТаблицаПениодов.Получить(ТаблицаПениодов.Количество()-1).КонецПериода;
	 
	 СписокАптекВышедшихНаПрМощ=ТабАптек.ВыгрузитьКолонку("Аптека");
	 
	 //-------------------- Запрос by GtG -----------------------
	 // Назначение: Получить список аптек, продолжающих работать в последнем периоде
	 //----------------------------------------------------------
	 ТХТ="ВЫБРАТЬ РАЗЛИЧНЫЕ
	     |	РеализацияККМ.Склад КАК Аптека
	     |ИЗ
	     |	(ВЫБРАТЬ
	     |		РеализацияККМТовар.Ссылка.Склад КАК Склад,
	     |		СУММА(РеализацияККМТовар.Количество) КАК Количество
	     |	ИЗ
	     |		Документ.РеализацияККМ.Товар КАК РеализацияККМТовар
	     |	ГДЕ
	     |		РеализацияККМТовар.Ссылка.Проведен = ИСТИНА
	     |		И РеализацияККМТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	     |	
	     |	СГРУППИРОВАТЬ ПО
	     |		РеализацияККМТовар.Ссылка.Склад) КАК ВообщеПродавалиТовар
	     |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияККМ КАК РеализацияККМ
	     |		ПО (РеализацияККМ.Склад = ВообщеПродавалиТовар.Склад)
	     |ГДЕ
	     |	РеализацияККМ.Дата МЕЖДУ &Дата1 И &Дата2
	     |	И (РеализацияККМ.Склад.ДатаЗакрытия = &ПустаяДатаЗакрытия
	     |			ИЛИ РеализацияККМ.Склад.ДатаЗакрытия > &Дата2)
	     |	И РеализацияККМ.Склад В(&СписокАптекВышедшихНаПрМощ)
	     |	И ВообщеПродавалиТовар.Количество > 0
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	РеализацияККМ.Склад";
	 
	 Запрос=Новый Запрос;
	 
	 Запрос.Текст=ТХТ;
	 
	 Запрос.УстановитьПараметр("Дата1",НачалоМесяца(КонПер2));
	 Запрос.УстановитьПараметр("Дата2",КонецМесяца(КонПер2));
	 Запрос.УстановитьПараметр("ПустаяДатаЗакрытия",ОМ3_ПустаяДата());
	 Запрос.УстановитьПараметр("СписокАптекВышедшихНаПрМощ",СписокАптекВышедшихНаПрМощ);
	 
	 ТСопоставимыеАптеки=Запрос.Выполнить().Выгрузить();
	 
	 ЭлементыФормы.СопоставимыеАптеки.Значение=ТСопоставимыеАптеки;
	 ЭлементыФормы .СопоставимыеАптеки.СоздатьКолонки();
	 
	 //----------------------------------------------------------
	 ЭлементыФормы.Н_КолвоУчВРасчАптек.Заголовок=СопоставимыеАптеки.Количество();
	 
	 ЭтаФорма.Обновить();
	 
     РасчетБазыДляLFL();
КонецПроцедуры


Процедура РасчетБазыДляLFL()
	
	Перем ППМестоРасположения,ППСклад,ППМесяцВыручки,ППКоличествоТовара,ППСуммаСоСкидкой,ППКоличествоЧеков,ППССП;
	
	
	
	
	//-------------------- Запрос by GtG -----------------------
	// Назначение: Данные для LFL анализа
	//----------------------------------------------------------
	ТХТ="ВЫБРАТЬ ПЕРВЫЕ 1000000000
	    |	BASE.Склад.МестоРасположения КАК МестоРасположения,
	    |	BASE.Склад КАК Склад,
	    |	BASE.МесяцВыручки КАК МесяцВыручки,
	    |	СУММА(BASE.КоличествоТовара) КАК КоличествоТовара,
	    |	СУММА(BASE.СуммаСоСкидкой) КАК СуммаСоСкидкой,
	    |	СУММА(BASE.КоличествоЧеков) КАК КоличествоЧеков,
	    |	ВЫРАЗИТЬ(СУММА(BASE.СуммаСоСкидкой) / СУММА(BASE.КоличествоЧеков) КАК ЧИСЛО(19, 2)) КАК ССП,
	    |	BASE.Склад.Регион.Код КАК Регион
	    |ПОМЕСТИТЬ БазаПредв
	    |ИЗ
	    |	(ВЫБРАТЬ
	    |		РеализацияККМТовар.Ссылка.Склад КАК Склад,
	    |		КОНЕЦПЕРИОДА(РеализацияККМТовар.Ссылка.Дата, МЕСЯЦ) КАК МесяцВыручки,
	    |		СУММА(РеализацияККМТовар.Количество) КАК КоличествоТовара,
	    |		РеализацияККМТовар.Ссылка.СуммаСоСкидкой КАК СуммаСоСкидкой,
	    |		РеализацияККМТовар.Ссылка.КоличествоЧеков КАК КоличествоЧеков
	    |	ИЗ
	    |		Документ.РеализацияККМ.Товар КАК РеализацияККМТовар
	    |	ГДЕ
	    |		РеализацияККМТовар.Ссылка.Проведен = ИСТИНА
	    |		И РеализацияККМТовар.Ссылка.Склад В(&СписокАптек)
	    |		И КОНЕЦПЕРИОДА(РеализацияККМТовар.Ссылка.Дата, МЕСЯЦ) В (&СписокДат)
	    |		И РеализацияККМТовар.Ссылка.КоличествоЧеков > 0
	    |	    И РеализацияККМТовар.Ссылка.Склад.код<>247
	    |	СГРУППИРОВАТЬ ПО
	    |		КОНЕЦПЕРИОДА(РеализацияККМТовар.Ссылка.Дата, МЕСЯЦ),
	    |		РеализацияККМТовар.Ссылка.Склад,
	    |		РеализацияККМТовар.Ссылка.КоличествоЧеков,
	    |		РеализацияККМТовар.Ссылка.СуммаСоСкидкой) КАК BASE
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	BASE.Склад.МестоРасположения,
	    |	BASE.Склад,
	    |	BASE.МесяцВыручки,
	    |	BASE.Склад.Регион.Код
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	МестоРасположения,
	    |	BASE.Склад.Наименование,
	    |	МесяцВыручки
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |  ##БАЗАСНУЛЯМИ##
		|;
	    |
		|  ВЫБРАТЬ
		|	БазаПолная.СкладКод,
		|	БазаПолная.СкладНаименование,
		|	БазаПолная.СкладРегионКод,
		|	БазаПолная.СкладРегионНаименование,
		|	БазаПолная.ДатаЗакрытия,
		|	БазаПолная.ДатаОткрытия,
		|	БазаПолная.СкладМестоРасположения,
		|	БазаПолная.МесяцВыручки,
		|	СУММА(БазаПолная.КоличествоТовара) КАК КоличествоТовара,
		|	СУММА(БазаПолная.СуммаСоСкидкой) КАК СуммаСоСкидкой,
		|	СУММА(БазаПолная.КоличествоЧеков) КАК КоличествоЧеков,
		|	СУММА(БазаПолная.ССП) КАК ССП
		|   ПОМЕСТИТЬ ВЫБОРКА
		|ИЗ
		|	БАЗАСНУЛЯМИ КАК БазаПолная
		
		|СГРУППИРОВАТЬ ПО
		|	БазаПолная.СкладНаименование,
		|	БазаПолная.СкладРегионНаименование,
		|	БазаПолная.ДатаЗакрытия,
		|	БазаПолная.ДатаОткрытия,
		|	БазаПолная.СкладМестоРасположения,
		|	БазаПолная.МесяцВыручки,
		|	БазаПолная.СкладКод,
		|	БазаПолная.СкладРегионКод
		|;
	    
		|////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	Выборка1.СкладКод,
	    |	Выборка1.СкладНаименование,
	    |	Выборка1.СкладРегионКод,
	    |	Выборка1.СкладРегионНаименование,
	    |	Выборка1.СкладМестоРасположения,
	    |   Выборка1.ДатаЗакрытия,
		|   Выборка1.ДатаОткрытия,
		|   1 как КолвоАптекГруппы,
		|   Выборка1.МесяцВыручки КАК МесяцВыручки1,
	    |	Выборка1.КоличествоТовара КАК КоличествоТовара1,
	    |	Выборка1.СуммаСоСкидкой КАК СуммаСоСкидкой1,
	    |	Выборка1.КоличествоЧеков КАК КоличествоЧеков1,
	    |	Выборка1.ССП КАК ССП1
		|   ##ПОЛЯ##
	    |ИЗ
	    |	Выборка КАК Выборка1
	    |		
		|   ##ДЖОЙН##
		|
	    |ГДЕ
	    |	Выборка1.МесяцВыручки = &МесяцВыручки1
	    |	
		|   ##УСЛОВИЕ##
		|Order by
		| Выборка1.СкладРегионКод,
		| Выборка1.СкладМестоРасположения,
		| Выборка1.СкладНаименование
		|;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ БазаПредв
		|;
		|УНИЧТОЖИТЬ БАЗАСНУЛЯМИ
		|;
		|УНИЧТОЖИТЬ Выборка
		|;";
		
	Запрос=Новый Запрос;
	
		
		ДЖОЙН="";
		УСЛОВИЕ="";
		ПОЛЯ="";
		
		ИменаПолейДляСвертки1="";
		ИменаПолейДляСвертки2="";
		
		Месяца="МесяцВыручки1";
		
		ИменаПолейДляСвертки1="КолвоАптекГруппы,КоличествоТовара1,СуммаСоСкидкой1,КоличествоЧеков1,ССП1";

		
		
		ЗатычкаОтсутствующихДанных="		
		|	ВЫБРАТЬ
		|	База.Склад.Код,
		|	База.Склад.Наименование,
		|	База.Склад.Регион.Код,
		|	База.Склад.Регион.Наименование,
		|	База.Склад.ДатаЗакрытия КАК ДатаЗакрытия,
		|	База.Склад.ДатаПерехода КАК ДатаОткрытия,
		|	База.Склад.МестоРасположения,
		|	База.МесяцВыручки,
		|	База.КоличествоТовара,
		|	База.СуммаСоСкидкой,
		|	База.КоличествоЧеков,
		|	База.ССП
		|	Поместить БАЗАСНулями
		|ИЗ
		|	БазаПредв КАК База
		|	
		|	";
		
	

 		
		
		
		
		
		
		
		
		
		
		
		Ы=0;
		Для Каждого Стр Из ТаблицаПениодов Цикл
			Ы=Ы+1;
			
			
			ЗатычкаОтсутствующихДанных=ЗатычкаОтсутствующихДанных+"
			|
			|ОБЪЕДИНИТЬ ВСЕ	
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|База.Склад.Код КАК СкладКод,
			|База.Склад.Наименование,
			|База.Склад.Регион.Код,
			|База.Склад.Регион.Наименование,
			|База.Склад.ДатаЗакрытия КАК ДатаЗакрытия,
			|База.Склад.ДатаПерехода КАК ДатаОткрытия,
			|База.Склад.МестоРасположения,
			|&МесяцВыручки"+Ы+" КАК МесяцВыручки,
			|0 КАК КоличествоТовара,
			|0 КАК СуммаСоСкидкой,
			|0 КАК КоличествоЧеков,
			|0 КАК ССП
			|ИЗ
			|БазаПредв КАК База
			|
			|";
			
			
			Запрос.УстановитьПараметр("МесяцВыручки"+Ы,Стр.КонецПериода);
			
			Если Ы=1 Тогда
				Продолжить;
			КонецЕсли;
			
			Месяца=Месяца+",МесяцВыручки"+Ы;
			
			ИменаПолейДляСвертки1=ИменаПолейДляСвертки1+",КоличествоТовара"+Ы+",СуммаСоСкидкой"+Ы+",КоличествоЧеков"+Ы+",ССП"+Ы;
			
			ДЖОЙН=Джойн+"
			|    FULL JOIN Выборка as Выборка"+Ы+" ON Выборка1.СкладКод=Выборка"+Ы+".СкладКод
			|";
			
			УСЛОВИЕ=УСЛОВИЕ+"
			| И  Выборка"+Ы+".МесяцВыручки = &МесяцВыручки"+Ы+"
			|";

			ПОЛЯ=ПОЛЯ+",
			|   Выборка"+Ы+".МесяцВыручки КАК МесяцВыручки"+Ы+",
			|	Выборка"+Ы+".КоличествоТовара КАК КоличествоТовара"+Ы+",
			|	Выборка"+Ы+".СуммаСоСкидкой КАК СуммаСоСкидкой"+Ы+",
			|	Выборка"+Ы+".КоличествоЧеков КАК КоличествоЧеков"+Ы+",
			|	Выборка"+Ы+".ССП КАК ССП"+Ы+"
			|";
			
		КонецЦикла;
		
		
		ТХТ=СтрЗаменить(ТХТ,"##ДЖОЙН##",Джойн);
		ТХТ=СтрЗаменить(ТХТ,"##УСЛОВИЕ##",УСЛОВИЕ);
		ТХТ=СтрЗаменить(ТХТ,"##ПОЛЯ##",ПОЛЯ);
		ТХТ=СтрЗаменить(ТХТ,"##БАЗАСНУЛЯМИ##",ЗатычкаОтсутствующихДанных);
		 

				
	
	Запрос.Текст=ТХТ;
	
	//Сообщить(ТХТ);
	
	
	Запрос.УстановитьПараметр("СписокАптек",СопоставимыеАптеки.ВыгрузитьКолонку("Аптека"));
	Запрос.УстановитьПараметр("СписокДат",ТаблицаПениодов.ВыгрузитьКолонку("КонецПериода"));
	
	
	Рез=Запрос.Выполнить().Выгрузить();
	
	ЭлементыФормы.МассивLFL.Значение=Рез;
	ЭлементыФормы.МассивLFL.СоздатьКолонки();
	
		
	Таб=Новый ТабличныйДокумент;
	Макет=ЭтотОбъект.ПолучитьМакет("Макет");

	
	
	//---------------- шапка --------------------------------------------------------------------------------
	Область=Макет.ПолучитьОбласть("Заголовок");
	Таб.Вывести(Область);
	
	Область=Макет.ПолучитьОбласть("Шапка|Основная");
	Таб.Вывести(Область);
	
	Ы=0;
	Для Каждого СтрПер из ТаблицаПениодов Цикл
		Ы=Ы+1;
		Область=Макет.ПолучитьОбласть("Шапка|Период");
		Область.Параметры.Период = СтрПер.КонецПериода;
		Таб.Присоединить(Область);
		
		Если Ы>1 тогда // отклонение можно посчитать
			Область=Макет.ПолучитьОбласть("Шапка|Отклонение");
			Таб.Присоединить(Область);
		КонецЕсли;	
	КонецЦикла;	
	

	
	
	
	
	
	
	
	
	
	//-------------- Табличка итогов по регионам ------------------------------------------------------------
	ИтогиСкладРегионКод=Рез.Скопировать();
	
	ИтогиСкладРегионКод.Свернуть("СкладРегионКод",ИменаПолейДляСвертки1);
	Ы=0;
	Для Каждого СтрПер Из ТаблицаПениодов Цикл
		Ы=Ы+1;
		Для Каждого Стр Из  ИтогиСкладРегионКод  Цикл
			ИсхССП=Стр["ССП"+Ы];
			
			Если Стр["КоличествоЧеков"+Ы]<>0 тогда
				Стр["ССП"+Ы]=Окр(Стр["СуммаСоСкидкой"+Ы]/Стр["КоличествоЧеков"+Ы],2);
			иначе
				Стр["ССП"+Ы]=0;
			КонецЕсли;
			
			
		КонецЦикла;
	КонецЦикла;
	
	
	//-------------- Табличка итогов по местам расположения -------------------------------------------------
	ИтогиМР=Рез.Скопировать();
	
	ИтогиМР.Свернуть("СкладРегионКод,СкладМестоРасположения",ИменаПолейДляСвертки1);
	Ы=0;
	Для Каждого СтрПер Из ТаблицаПениодов Цикл
		Ы=Ы+1;
		Для Каждого Стр Из  ИтогиМР  Цикл
			ИсхССП=Стр["ССП"+Ы];
			
			Если Стр["КоличествоЧеков"+Ы]<>0 тогда
				Стр["ССП"+Ы]=Окр(Стр["СуммаСоСкидкой"+Ы]/Стр["КоличествоЧеков"+Ы],2);
			иначе
				Стр["ССП"+Ы]=0;
			КонецЕсли;
			
			
		КонецЦикла;
	КонецЦикла;
	
    //---- Вывод в табличный документ ------------------------------------------------------------------------
	
	
	
	Для Каждого СтрР из  ИтогиСкладРегионКод Цикл 
		
		Область=Макет.ПолучитьОбласть("Регион|Основная");
		Область.Параметры.Регион=Справочники.Регионы.НайтиПоКоду(СтрР.СкладРегионКод);
		Область.Параметры.КолвоАптекГруппы=СтрР.КолвоАптекГруппы;
	
		Таб.Вывести(Область);

		Ы=0;
		Для Каждого СтрПер из ТаблицаПениодов Цикл
			Ы=Ы+1;
			Область=Макет.ПолучитьОбласть("Регион|Период");
			
			Область.Параметры.Выручка = СтрР["СуммаСоСкидкой"+Ы]   ;
			Область.Параметры.Трафик  = СтрР["КоличествоЧеков"+Ы]  ;
			Область.Параметры.ССП     = СтрР["ССП"+Ы]              ;
			Область.Параметры.КоличествоЕдиниц =СтрР["КоличествоТовара"+Ы] ;
			
			Таб.Присоединить(Область);
			
			Если Ы>1 тогда // отклонение можно посчитать
				Область=Макет.ПолучитьОбласть("Регион|Отклонение");
				Й=Ы-1; // предыдущий период
				
				Если  СтрР["СуммаСоСкидкой"+Й]<>0 Тогда
					Область.Параметры.Выручка = Окр((СтрР["СуммаСоСкидкой"+Ы]/СтрР["СуммаСоСкидкой"+Й]-1)*100  ,2) ;
					Область.Параметры.Трафик  = Окр((СтрР["КоличествоЧеков"+Ы]/СтрР["КоличествоЧеков"+Й]-1)*100 ,2) ;
					Область.Параметры.ССП     = Окр((СтрР["ССП"+Ы]/СтрР["ССП"+Й]-1)*100 ,2)             ;
					Область.Параметры.КоличествоЕдиниц =?(СтрР["КоличествоТовара"+Й]=0,0,  Окр((СтрР["КоличествоТовара"+Ы]/СтрР["КоличествоТовара"+Й]-1)*100,2) );
				иначе
					Область.Параметры.Выручка = 0;
					Область.Параметры.Трафик  = 0;
					Область.Параметры.ССП     = 0;
					Область.Параметры.КоличествоЕдиниц =0;
				КонецЕсли;
				
				Таб.Присоединить(Область);
			КонецЕсли;	
		КонецЦикла;	
		
		Таб.НачатьГруппуСтрок(СтрР.СкладРегионКод);
		
		
		СтрокиИтогиМР=ИтогиМР.НайтиСтроки(Новый Структура("СкладРегионКод",СтрР.СкладРегионКод));
		
		
		
		
		Для Каждого СтрМР из СтрокиИтогиМР Цикл
			
			//------------------------ Получим строки относящиеся к этой группе --------------------
			ОтборГруппыСтрок=Новый Структура("СкладРегионКод,СкладМестоРасположения",СтрР.СкладРегионКод,СтрМР.СкладМестоРасположения);
			СтрокиАптек=Рез.НайтиСтроки(ОтборГруппыСтрок);
			Если СтрокиАптек.Количество()=0 Тогда
				Продолжить; // здесь никого нет!
			КонецЕсли; 	
				

			
			
			
			
			Область=Макет.ПолучитьОбласть("Место|Основная");
			Область.Параметры.Место=СтрМР.СкладМестоРасположения;
			Область.Параметры.КолвоАптекГруппы=СтрМР.КолвоАптекГруппы;
			
			Таб.Вывести(Область);
			
			Ы=0;
			Для Каждого СтрПер из ТаблицаПениодов Цикл
				Ы=Ы+1;
				Область=Макет.ПолучитьОбласть("Место|Период");
				
				Область.Параметры.Выручка = СтрМР["СуммаСоСкидкой"+Ы]   ;
				Область.Параметры.Трафик  = СтрМР["КоличествоЧеков"+Ы]  ;
				Область.Параметры.ССП     = СтрМР["ССП"+Ы]              ;
				Область.Параметры.КоличествоЕдиниц =СтрМР["КоличествоТовара"+Ы] ;
				
				Таб.Присоединить(Область);
				
				Если Ы>1 тогда // отклонение можно посчитать
					Область=Макет.ПолучитьОбласть("Место|Отклонение");
					Й=Ы-1; // предыдущий период
					
					Если СтрМР["СуммаСоСкидкой"+Й]<>0 Тогда
						Область.Параметры.Выручка = Окр((СтрМР["СуммаСоСкидкой"+Ы]/СтрМР["СуммаСоСкидкой"+Й]-1)*100  ,2) ;
						Область.Параметры.Трафик  = Окр((СтрМР["КоличествоЧеков"+Ы]/СтрМР["КоличествоЧеков"+Й]-1)*100 ,2) ;
						Область.Параметры.ССП     = Окр((СтрМР["ССП"+Ы]/СтрМР["ССП"+Й]-1)*100 ,2)             ;
						Область.Параметры.КоличествоЕдиниц =?(СтрМР["КоличествоТовара"+Й]=0,0,Окр((СтрМР["КоличествоТовара"+Ы]/СтрМР["КоличествоТовара"+Й]-1)*100,2) );
					Иначе
						Область.Параметры.Выручка = 0;
						Область.Параметры.Трафик  = 0;
						Область.Параметры.ССП     = 0;
						Область.Параметры.КоличествоЕдиниц =0;
					КонецЕсли;
					
					Таб.Присоединить(Область);
				КонецЕсли;	
			КонецЦикла;	
			
			
			Таб.НачатьГруппуСтрок(СтрМР.СкладМестоРасположения);

						
			Для Каждого СтрА из СтрокиАптек Цикл
				
				Область=Макет.ПолучитьОбласть("Строка|Основная");
				Область.Параметры.Аптека=СокрЛП(СтрА.СкладНаименование);
				Область.Параметры.СтатусАптеки="Открыта "+Формат(СтрА.ДатаОткрытия,"ДФ=dd.MM.yy")+?(ОМ3_ЭтоПустаяДата(СтрА.ДатаЗакрытия)=Истина,""," Закрыта "+Формат(СтрА.ДатаЗакрытия,"ДФ=dd.MM.yy"));
				
				Таб.Вывести(Область);
				
				Ы=0;
				Для Каждого СтрПер из ТаблицаПениодов Цикл
					Ы=Ы+1;
					Область=Макет.ПолучитьОбласть("Строка|Период");
					
					Область.Параметры.Выручка = СтрА["СуммаСоСкидкой"+Ы]   ;
					Область.Параметры.Трафик  = СтрА["КоличествоЧеков"+Ы]  ;
					Область.Параметры.ССП     = СтрА["ССП"+Ы]              ;
					Область.Параметры.КоличествоЕдиниц =СтрА["КоличествоТовара"+Ы] ;
					
					Таб.Присоединить(Область);
					
					Если Ы>1 тогда // отклонение можно посчитать
						Область=Макет.ПолучитьОбласть("Строка|Отклонение");
						Й=Ы-1; // предыдущий период
						
						Если СтрА["СуммаСоСкидкой"+Й]<>0 Тогда
							Область.Параметры.Выручка = Окр((СтрА["СуммаСоСкидкой"+Ы]/СтрА["СуммаСоСкидкой"+Й]-1)*100  ,2) ;
							Область.Параметры.Трафик  = Окр((СтрА["КоличествоЧеков"+Ы]/СтрА["КоличествоЧеков"+Й]-1)*100 ,2) ;
							Область.Параметры.ССП     = Окр((СтрА["ССП"+Ы]/СтрА["ССП"+Й]-1)*100 ,2)             ;
							Область.Параметры.КоличествоЕдиниц =?(СтрА["КоличествоТовара"+Й]=0,0,   Окр((СтрА["КоличествоТовара"+Ы]/СтрА["КоличествоТовара"+Й]-1)*100,2) );
						Иначе
							Область.Параметры.Выручка = 0;
							Область.Параметры.Трафик  = 0;
							Область.Параметры.ССП     = 0;
							Область.Параметры.КоличествоЕдиниц =0;
						КонецЕсли;						
						
						
						Таб.Присоединить(Область);
					КонецЕсли;	
				КонецЦикла;	
				
				
				
				
				
				
			КонецЦикла;
			
			
			Таб.ЗакончитьГруппуСтрок(); // по месту

		КонецЦикла;
		
		Таб.ЗакончитьГруппуСтрок(); // по региону

		
	КонецЦикла;	
	
	
	//------------------------ общие итоги ---------------------------
	ИтогиСкладРегионКод.Свернуть("",ИменаПолейДляСвертки1);
	Ы=0;
	Для Каждого СтрПер Из ТаблицаПениодов Цикл
		Ы=Ы+1;
		Для Каждого Стр Из  ИтогиСкладРегионКод  Цикл
			ИсхССП=Стр["ССП"+Ы];
			Стр["ССП"+Ы]=?(Стр["КоличествоЧеков"+Ы]=0,0, Окр(Стр["СуммаСоСкидкой"+Ы]/Стр["КоличествоЧеков"+Ы],2));
			
		КонецЦикла;
	КонецЦикла;
	
	СтрР=ИтогиСкладРегионКод.Получить(0);
	
	Область=Макет.ПолучитьОбласть("Итого|Основная");
	Область.Параметры.КолвоАптекГруппы=СтрР.КолвоАптекГруппы;
	
	
	Таб.Вывести(Область);
	
	Ы=0;
	Для Каждого СтрПер из ТаблицаПениодов Цикл
		Ы=Ы+1;
		Область=Макет.ПолучитьОбласть("Итого|Период");
		
		Область.Параметры.Выручка = СтрР["СуммаСоСкидкой"+Ы]   ;
		Область.Параметры.Трафик  = СтрР["КоличествоЧеков"+Ы]  ;
		Область.Параметры.ССП     = СтрР["ССП"+Ы]              ;
		Область.Параметры.КоличествоЕдиниц =СтрР["КоличествоТовара"+Ы] ;
		
		Таб.Присоединить(Область);
		
		Если Ы>1 тогда // отклонение можно посчитать
			Область=Макет.ПолучитьОбласть("Итого|Отклонение");
			Й=Ы-1; // предыдущий период
			
			Если  СтрР["СуммаСоСкидкой"+Й]<>0 тогда
				Область.Параметры.Выручка = Окр((СтрР["СуммаСоСкидкой"+Ы]/СтрР["СуммаСоСкидкой"+Й]-1)*100  ,2) ;
				Область.Параметры.Трафик  = Окр((СтрР["КоличествоЧеков"+Ы]/СтрР["КоличествоЧеков"+Й]-1)*100 ,2) ;
				Область.Параметры.ССП     = Окр((СтрР["ССП"+Ы]/СтрР["ССП"+Й]-1)*100 ,2)             ;
				Область.Параметры.КоличествоЕдиниц =?( СтрР["КоличествоТовара"+Й]=0,0,      Окр((СтрР["КоличествоТовара"+Ы]/СтрР["КоличествоТовара"+Й]-1)*100,2)) ;
			Иначе
				Область.Параметры.Выручка = 0;
				Область.Параметры.Трафик  = 0;
				Область.Параметры.ССП     = 0 ;
				Область.Параметры.КоличествоЕдиниц =0 ;
			КонецЕсли;
			Таб.Присоединить(Область);
		КонецЕсли;	
	КонецЦикла;	
	
	
	
	

	
	
	
	Таб.ОтображатьСетку=Ложь;
	Таб.ТолькоПросмотр=Истина;
	Таб.ОтображатьЗаголовки=Истина;
	Таб.ФиксацияСверху=2;
	
	
	Таб.Показать(); 
	
	// массив необработанных данных на форму---------------------------------------------------------------------
	ЭлементыФормы.МассивLFL.Значение=Рез;
	ЭлементыФормы.МассивLFL.СоздатьКолонки(); 
	 
	
	
Конецпроцедуры	

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериодаБаз, ?(КонПериодаБаз='0001-01-01', КонПериодаБаз, КонецДня(КонПериодаБаз)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериодаБаз = НастройкаПериода.ПолучитьДатуНачала();
		КонПериодаБаз = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ПериодыИнфляцииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(Элемент.ТекущаяСтрока.НачПериода, ?(Элемент.ТекущаяСтрока.КонПериода='0001-01-01', Элемент.ТекущаяСтрока.КонПериода, КонецДня(Элемент.ТекущаяСтрока.КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Ложь;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		Элемент.ТекущаяСтрока.НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		Элемент.ТекущаяСтрока.КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
	ПериодыИнфляции.Свернуть("НачПериода,КонПериода","");
	
	
	ПериодыИнфляции.Сортировать("НачПериода");

КонецПроцедуры


Процедура ОпределитьТоварнуюБазу()
	
	
	//-------------------- Запрос by GtG -----------------------
	// Назначение: Найти Товары которые продавались во всех периодах
	//----------------------------------------------------------
	ТХТ="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПартииЖНВЛСОбороты.Товар,
	|	1 КАК ИДПериода
	|ПОМЕСТИТЬ ТоварнаяБаза
	|ИЗ
	|	РегистрНакопления.ПартииЖНВЛС.Обороты(&Дата1, &Дата2, Регистратор, ) КАК ПартииЖНВЛСОбороты
	|ГДЕ
	|	ПартииЖНВЛСОбороты.Регистратор ССЫЛКА Документ.РеализацияККМ
	|	ИЛИ ПартииЖНВЛСОбороты.Регистратор ССЫЛКА Документ.РеализацияОптом
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииЖНВЛСОбороты.Товар";
	
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МВТ;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("Дата1",НачалоДня(НачПериодаБаз));
	Запрос.УстановитьПараметр("Дата2",КонецДня(КонПериодаБаз));
	Запрос.Выполнить();
	
	//----------------------------------------------------------
		
	Для каждого  Стр Из ПериодыИнфляции Цикл
		
		
		Состояние("Рассчитываем базу товара за период с "+Формат(Стр.НачПериода,"ДФ=dd.MM.yy")+" по "+Формат(Стр.КонПериода,"ДФ=dd.MM.yy")+" ...");
		
		ТХТ="ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПартииЖНВЛСОбороты.Товар,
		|	1 КАК ИДПериода
		|ПОМЕСТИТЬ ТоварнаяБазаТекПер
		|ИЗ
		|	РегистрНакопления.ПартииЖНВЛС.Обороты(&Дата1, &Дата2, Регистратор, ) КАК ПартииЖНВЛСОбороты
		|ГДЕ
		|	(ПартииЖНВЛСОбороты.Регистратор ССЫЛКА Документ.РеализацияККМ
		|			ИЛИ ПартииЖНВЛСОбороты.Регистратор ССЫЛКА Документ.РеализацияОптом)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииЖНВЛСОбороты.Товар
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварнаяБаза.Товар,
		|	ТоварнаяБаза.ИДПериода
		|ИЗ
		|	ТоварнаяБаза КАК ТоварнаяБаза
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТоварнаяБаза
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТоварнаяБазаТекПер.Товар,
		|	СУММА(ТоварнаяБазаТекПер.ИДПериода) КАК ИДПериода
		|ПОМЕСТИТЬ ТоварнаяБаза
		|ИЗ
		|	ТоварнаяБазаТекПер КАК ТоварнаяБазаТекПер
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварнаяБазаТекПер.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТоварнаяБазаТекПер";
		
		Запрос=Новый Запрос;
		Запрос.МенеджерВременныхТаблиц=МВТ;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Дата1",НачалоДня(Стр.НачПериода));
		Запрос.УстановитьПараметр("Дата2",КонецДня(Стр.КонПериода));
		Запрос.Выполнить();
		
		
	КонецЦикла; 
	
	
	//-------------------- Запрос by GtG -----------------------
	// Назначение: Оставить в товарной базе только товары участвующие во всех периодах
	//----------------------------------------------------------
	ТХТ="ВЫБРАТЬ
	    |	ТоварнаяБаза.Товар,
	    |	ТоварнаяБаза.ИдПериода
	    |ПОМЕСТИТЬ АнализируемыйТовар
	    |ИЗ
	    |	ТоварнаяБаза КАК ТоварнаяБаза
	    |ГДЕ
	    |	ТоварнаяБаза.ИдПериода = &КоличествоПериодовПродажи
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ТоварнаяБаза";
	
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МВТ;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("КоличествоПериодовПродажи",ПериодыИнфляции.Количество()+1);
	
	Запрос.Выполнить();
	//----------------------------------------------------------
	
	//проверка результата
	
	Запрос=Новый Запрос("Выбрать * из АнализируемыйТовар упорядочить по товар.наименование");
	Запрос.МенеджерВременныхТаблиц=МВТ;
	
	 ЭлементыФормы.БазаПоТоварам.Значение= Запрос.Выполнить().Выгрузить();
	 ЭлементыФормы.БазаПоТоварам.СоздатьКолонки();
	
	
КонецПроцедуры



Процедура КоманднаяПанель3Сформировать(Кнопка)
	
	ОчиститьСообщения();
	
	МВТ=Новый МенеджерВременныхТаблиц;
	Состояние("Определяем товарную базу...");
	ОпределитьТоварнуюБазу();
	Состояние("Рассчитываем продажи за базовый период...");
	
	
	
	
	//-------------------- Запрос by GtG -----------------------
	// Назначение: Продажи за базовый период
	//----------------------------------------------------------
	ТХТ="ВЫБРАТЬ
	    |	base.ИДПериода,
	    |	base.Товар,
	    |	СУММА(base.СуммаРозн) КАК СуммаРозн,
	    |	СУММА(base.СуммаЗакуп) КАК СуммаЗакуп,
	    |	СУММА(base.СуммаРозн) / СУММА(base.Количество) КАК ЦенаРозн,
	    |	СУММА(base.СуммаЗакуп) / СУММА(base.Количество) КАК ЦенаЗакуп,
	    |	СУММА(base.Количество) КАК Количество,
	    |	СУММА(0) КАК ЧИЛ
	    |ПОМЕСТИТЬ БАЗА
	    |ИЗ
	    |	(ВЫБРАТЬ
	    |		&ИДПер КАК ИДПериода,
	    |		РеализацияККМТовар.Товар КАК Товар,
	    |		СУММА(РеализацияККМТовар.Сумма) КАК СуммаРозн,
	    |		СУММА(РеализацияККМТовар.СуммаЗакуп) КАК СуммаЗакуп,
	    |		СУММА(РеализацияККМТовар.Количество * РеализацияККМТовар.К) КАК Количество
	    |	ИЗ
	    |		Документ.РеализацияККМ.Товар КАК РеализацияККМТовар
	    |	ГДЕ
	    |		РеализацияККМТовар.Ссылка.Проверен = ИСТИНА
	    |		И РеализацияККМТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	    |		И РеализацияККМТовар.Товар В
	    |				(ВЫБРАТЬ
	    |					АнализируемыйТовар.Товар
	    |				ИЗ
	    |					АнализируемыйТовар)
	    |	
	    |	СГРУППИРОВАТЬ ПО
	    |		РеализацияККМТовар.Товар
	    |	
	    |	ОБЪЕДИНИТЬ ВСЕ
	    |	
	    |	ВЫБРАТЬ
	    |		&ИДПер,
	    |		РеализацияОптомТовар.Товар,
	    |		РеализацияОптомТовар.СуммаРозн,
	    |		СУММА(РеализацияОптомТовар.СуммаЗакуп),
	    |		РеализацияОптомТовар.КоличествоФакт * РеализацияОптомТовар.Коэфф
	    |	ИЗ
	    |		Документ.РеализацияОптом.Товар КАК РеализацияОптомТовар
	    |	ГДЕ
	    |		РеализацияОптомТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	    |		И РеализацияОптомТовар.Товар В
	    |				(ВЫБРАТЬ
	    |					АнализируемыйТовар.Товар
	    |				ИЗ
	    |					АнализируемыйТовар)
	    |		И РеализацияОптомТовар.Ссылка.Проведен = ИСТИНА
	    |	
	    |	СГРУППИРОВАТЬ ПО
	    |		РеализацияОптомТовар.Товар,
	    |		РеализацияОптомТовар.СуммаРозн,
	    |		РеализацияОптомТовар.КоличествоФакт * РеализацияОптомТовар.Коэфф) КАК base
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	base.Товар,
	    |	base.ИДПериода";
	
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МВТ;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("Дата1",НачалоДня(НачПериодаБаз));
	Запрос.УстановитьПараметр("Дата2",КонецДня(КонПериодаБаз));
	Запрос.УстановитьПараметр("ИДПер",0);
	
	Запрос.Выполнить();
	
	//----------------------------------------------------------
	
	Ы=0;
	Для каждого  Стр Из  ПериодыИнфляции Цикл
		Ы=Ы+1;
		Состояние("Рассчитываем продажи за период с "+Формат(Стр.НачПериода,"ДФ=dd.MM.yy")+" по "+Формат(Стр.КонПериода,"ДФ=dd.MM.yy")+" ...");
		
		
		ТХТ="ВЫБРАТЬ
		    |	base.ИДПериода,
		    |	base.Товар,
		    |	СУММА(base.СуммаРозн) КАК СуммаРозн,
		    |	СУММА(base.СуммаЗакуп) КАК СуммаЗакуп,
		    |	СУММА(base.СуммаРозн) / СУММА(base.Количество) КАК ЦенаРозн,
		    |	СУММА(base.СуммаЗакуп) / СУММА(base.Количество) КАК ЦенаЗакуп,
		    |	СУММА(base.Количество) КАК Количество,
		    |	СУММА(0) КАК ЧИЛ
		    |ПОМЕСТИТЬ БАЗАТек
		    |ИЗ
		    |	(ВЫБРАТЬ
		    |		&ИДПер КАК ИДПериода,
		    |		РеализацияККМТовар.Товар КАК Товар,
		    |		СУММА(РеализацияККМТовар.Сумма) КАК СуммаРозн,
		    |		СУММА(РеализацияККМТовар.СуммаЗакуп) КАК СуммаЗакуп,
		    |		СУММА(РеализацияККМТовар.Количество * РеализацияККМТовар.К) КАК Количество
		    |	ИЗ
		    |		Документ.РеализацияККМ.Товар КАК РеализацияККМТовар
		    |	ГДЕ
		    |		РеализацияККМТовар.Ссылка.Проверен = ИСТИНА
		    |		И РеализацияККМТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		    |		И РеализацияККМТовар.Товар В
		    |				(ВЫБРАТЬ
		    |					АнализируемыйТовар.Товар
		    |				ИЗ
		    |					АнализируемыйТовар)
		    |	
		    |	СГРУППИРОВАТЬ ПО
		    |		РеализацияККМТовар.Товар
		    |	
		    |	ОБЪЕДИНИТЬ ВСЕ
		    |	
		    |	ВЫБРАТЬ
		    |		&ИДПер,
		    |		РеализацияОптомТовар.Товар,
		    |		РеализацияОптомТовар.СуммаРозн,
		    |		СУММА(РеализацияОптомТовар.СуммаЗакуп),
		    |		РеализацияОптомТовар.КоличествоФакт * РеализацияОптомТовар.Коэфф
		    |	ИЗ
		    |		Документ.РеализацияОптом.Товар КАК РеализацияОптомТовар
		    |	ГДЕ
		    |		РеализацияОптомТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		    |		И РеализацияОптомТовар.Товар В
		    |				(ВЫБРАТЬ
		    |					АнализируемыйТовар.Товар
		    |				ИЗ
		    |					АнализируемыйТовар)
		    |		И РеализацияОптомТовар.Ссылка.Проведен = ИСТИНА
		    |	
		    |	СГРУППИРОВАТЬ ПО
		    |		РеализацияОптомТовар.Товар,
		    |		РеализацияОптомТовар.СуммаРозн,
		    |		РеализацияОптомТовар.КоличествоФакт * РеализацияОптомТовар.Коэфф) КАК base
		    |
		    |СГРУППИРОВАТЬ ПО
		    |	base.Товар,
		    |	base.ИДПериода
		    |
		    |ОБЪЕДИНИТЬ ВСЕ
		    |
		    |ВЫБРАТЬ
		    |	БАЗА.ИДпериода,
		    |	БАЗА.Товар,
		    |	БАЗА.СуммаРозн,
		    |	БАЗА.СуммаЗакуп,
		    |	БАЗА.ЦенаРозн,
		    |	БАЗА.ЦенаЗакуп,
		    |	БАЗА.Количество,
		    |	0
		    |ИЗ
		    |	База КАК БАЗА
		    |;
		    |
		    |////////////////////////////////////////////////////////////////////////////////
		    |УНИЧТОЖИТЬ База
		    |;
		    |
		    |////////////////////////////////////////////////////////////////////////////////
		    |ВЫБРАТЬ
		    |	БАЗАТек.ИДПериода,
		    |	БАЗАТек.Товар,
		    |	БАЗАТек.СуммаРозн,
		    |	БАЗАТек.СуммаЗакуп,
		    |	БАЗАТек.ЦенаРозн,
		    |	БАЗАТек.ЦенаЗакуп,
		    |	БАЗАТек.Количество,
			|   БАЗАТек.ЧИЛ
		    |ПОМЕСТИТЬ БАЗА
		    |ИЗ
		    |	БАЗАТек КАК БАЗАТек
		    |;
		    |
		    |////////////////////////////////////////////////////////////////////////////////
		    |УНИЧТОЖИТЬ БАЗАТек";
		
		Запрос=Новый Запрос;
		Запрос.МенеджерВременныхТаблиц=МВТ;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Дата1",НачалоДня(Стр.НачПериода));
		Запрос.УстановитьПараметр("Дата2",КонецДня(Стр.КонПериода));
		Запрос.УстановитьПараметр("ИДПер",Ы);
		
		Запрос.Выполнить();
		
		
		
	КонецЦикла; 
	
	
	
	//---------------------- Рассчет частного индекса Лос'Пидорасуса ----------GtG--19.11.2009 

	
	
	ТХТ="ВЫБРАТЬ
	    |	БАЗА.ИДпериода,
	    |	СУММА(БАЗА.СуммаРозн) КАК ОбщаяСуммаРозн,
	    |	СУММА(БАЗА.СуммаЗакуп) КАК ОбщаяСуммаЗакуп
	    |ПОМЕСТИТЬ ИтогиБаза
	    |ИЗ
	    |	База КАК БАЗА
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	БАЗА.ИДпериода
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	База.ИДпериода,
	    |	База.Товар,
	    |	База.СуммаРозн,
	    |	База.СуммаЗакуп,
	    |	База.ЦенаРозн,
	    |	База.ЦенаЗакуп,
	    |	База.Количество,
	    |	0 КАК ЧИЛЗакуп,
	    |	0 КАК ВесЗакуп,
	    |	0 КАК ЧИЛВзвешЗакуп,
	    |	0 КАК ЧИЛРозн,
	    |	0 КАК ВесРозн,
	    |	0 КАК ЧИЛВзвешРозн
	    |ПОМЕСТИТЬ ИндексЛаспейреса
	    |ИЗ
	    |	База КАК База
	    |ГДЕ
	    |	База.ИДпериода = 0";
	
	Запрос.Текст=ТХТ;	
	
	РезТЗ=Запрос.Выполнить();
			
			
			
			
			
	Ы=0;
	Для каждого Стр  Из ПериодыИнфляции Цикл
		Ы=Ы+1;
		
		Состояние("Индекс Ласпейреса за период с "+Формат(Стр.НачПериода,"ДФ=dd.MM.yy")+" по "+Формат(Стр.КонПериода,"ДФ=dd.MM.yy")+" ...");
		
		ТХТ= "ВЫБРАТЬ
		     |	БАЗА.ИДпериода,
		     |	БАЗА.Товар,
		     |	БАЗА.СуммаРозн,
		     |	БАЗА.СуммаЗакуп,
		     |	БАЗА.ЦенаРозн,
		     |	БАЗА.ЦенаЗакуп,
		     |	БАЗА.Количество,
		     |	БАЗА.ЦенаЗакуп / БАЗА_0.ЦенаЗакуп КАК ЧИЛЗакуп,
		     |	БАЗА.СуммаЗакуп / ИтогиБаза.ОбщаяСуммаЗакуп КАК ВесЗакуп,
		     |	БАЗА.ЦенаЗакуп / БАЗА_0.ЦенаЗакуп * БАЗА.СуммаЗакуп / ИтогиБаза.ОбщаяСуммаЗакуп КАК ЧИЛВзвешЗакуп,
		     |	БАЗА.ЦенаРозн / БАЗА_0.ЦенаРозн КАК ЧИЛРозн,
		     |	БАЗА.СуммаРозн / ИтогиБаза.ОбщаяСуммаРозн КАК ВесРозн,
		     |	БАЗА.ЦенаРозн / БАЗА_0.ЦенаРозн * БАЗА.СуммаРозн / ИтогиБаза.ОбщаяСуммаРозн КАК ЧИЛВзвешРозн
		     |ПОМЕСТИТЬ ЧИЛБаза
		     |ИЗ
		     |	База КАК БАЗА
		     |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		     |			БАЗА_0.ИДпериода КАК ИДпериода,
		     |			БАЗА_0.Товар КАК Товар,
		     |			БАЗА_0.СуммаРозн КАК СуммаРозн,
		     |			БАЗА_0.СуммаЗакуп КАК СуммаЗакуп,
		     |			БАЗА_0.ЦенаРозн КАК ЦенаРозн,
		     |			БАЗА_0.ЦенаЗакуп КАК ЦенаЗакуп,
		     |			БАЗА_0.Количество КАК Количество,
		     |			БАЗА_0.ЧИЛ КАК ЧИЛ
		     |		ИЗ
		     |			База КАК БАЗА_0
		     |		ГДЕ
		     |			БАЗА_0.ИДпериода = &Ы) КАК БАЗА_0
		     |		ПО (БАЗА_0.Товар = БАЗА.Товар)
		     |		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиБаза КАК ИтогиБаза
		     |		ПО (ИтогиБаза.ИДпериода = &ЫЫ)
		     |ГДЕ
		     |	БАЗА.ИДпериода = &ЫЫ
		     |;
		     |
		     |////////////////////////////////////////////////////////////////////////////////
		     |ВЫБРАТЬ
		     |	ЧИЛБаза.ИДпериода,
		     |	ЧИЛБаза.Товар,
		     |	ЧИЛБаза.СуммаРозн,
		     |	ЧИЛБаза.СуммаЗакуп,
		     |	ЧИЛБаза.ЦенаРозн,
		     |	ЧИЛБаза.ЦенаЗакуп,
		     |	ЧИЛБаза.Количество,
		     |	ЧИЛБаза.ЧИЛЗакуп,
		     |	ЧИЛБаза.ВесЗакуп,
		     |	ЧИЛБаза.ЧИЛВзвешЗакуп,
		     |	ЧИЛБаза.ЧИЛРозн,
		     |	ЧИЛБаза.ВесРозн,
		     |	ЧИЛБаза.ЧИЛВзвешРозн
		     |ПОМЕСТИТЬ теклп
		     |ИЗ
		     |	ЧИЛБаза КАК ЧИЛБаза
		     |
		     |ОБЪЕДИНИТЬ ВСЕ
		     |
		     |ВЫБРАТЬ
		     |	ИндексЛаспейреса.ИДпериода,
		     |	ИндексЛаспейреса.Товар,
		     |	ИндексЛаспейреса.СуммаРозн,
		     |	ИндексЛаспейреса.СуммаЗакуп,
		     |	ИндексЛаспейреса.ЦенаРозн,
		     |	ИндексЛаспейреса.ЦенаЗакуп,
		     |	ИндексЛаспейреса.Количество,
		     |	ИндексЛаспейреса.ЧИЛЗакуп,
		     |	ИндексЛаспейреса.ВесЗакуп,
		     |	ИндексЛаспейреса.ЧИЛВзвешЗакуп,
		     |	ИндексЛаспейреса.ЧИЛРозн,
		     |	ИндексЛаспейреса.ВесРозн,
		     |	ИндексЛаспейреса.ЧИЛВзвешРозн
		     |ИЗ
		     |	ИндексЛаспейреса КАК ИндексЛаспейреса
		     |;
		     |
		     |////////////////////////////////////////////////////////////////////////////////
		     |УНИЧТОЖИТЬ ЧИЛБаза
		     |;
		     |
		     |////////////////////////////////////////////////////////////////////////////////
		     |УНИЧТОЖИТЬ ИндексЛаспейреса
		     |;
		     |
		     |////////////////////////////////////////////////////////////////////////////////
		     |ВЫБРАТЬ
		     |	теклп.ИДпериода,
		     |	теклп.Товар,
		     |	теклп.СуммаРозн,
		     |	теклп.СуммаЗакуп,
		     |	теклп.ЦенаРозн,
		     |	теклп.ЦенаЗакуп,
		     |	теклп.Количество,
		     |	теклп.ЧИЛЗакуп,
		     |	теклп.ВесЗакуп,
		     |	теклп.ЧИЛВзвешЗакуп,
		     |	теклп.ЧИЛРозн,
		     |	теклп.ВесРозн,
		     |	теклп.ЧИЛВзвешРозн
		     |ПОМЕСТИТЬ ИндексЛаспейреса
		     |ИЗ
		     |	теклп КАК теклп
		     |ГДЕ
		     |	теклп.ИДпериода <> 0
		     |;
		     |
		     |////////////////////////////////////////////////////////////////////////////////
		     |УНИЧТОЖИТЬ теклп";
		
		
		
		Запрос.Текст=ТХТ;	
		Запрос.УстановитьПараметр("Ы",Ы-1);
		Запрос.УстановитьПараметр("ЫЫ",Ы);
		Запрос.Выполнить();
		
		
	КонецЦикла; 

	ТХТ="ВЫБРАТЬ
	    |	ИндексЛаспейреса.ИДпериода КАК ИДпериода,
	    |	СУММА(ИндексЛаспейреса.ЧИЛВзвешЗакуп) КАК ИЛ_Закуп,
	    |	СУММА(ИндексЛаспейреса.ЧИЛВзвешРозн) КАК ИЛ_Розн
	    |ИЗ
	    |	ИндексЛаспейреса КАК ИндексЛаспейреса
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ИндексЛаспейреса.ИДпериода
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	ИДпериода
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ИндексЛаспейреса";
	
	
	Запрос.Текст=ТХТ;
	РезТЗ=Запрос.Выполнить().Выгрузить();
	
	
	
	ЭлементыФормы.проверка.Значение=РезТЗ;
	ЭлементыФормы.проверка.СоздатьКолонки();
	
	
	
	
	
	ИтогоТЗ=Новый ТаблицаЗначений;
	ИтогоТЗ.Колонки.Добавить("ИЛ_Закуп");
	ИтогоТЗ.Колонки.Добавить("ИЛ_Розн");
	
	ИтогоСтр=ИтогоТЗ.Добавить();
	
	З=1;
	Р=1;
	Для каждого  Стр Из РезТЗ Цикл
		З=З*Стр.ИЛ_Закуп;
		Р=Р*Стр.ИЛ_Розн;
	КонецЦикла; 
	
	ИтогоСтр.ИЛ_Закуп=З;
	ИтогоСтр.ИЛ_Розн=Р;
	
	ЭлементыФормы.РезультатРасчетаИЛ.Значение=ИтогоТЗ;
	ЭлементыФормы.РезультатРасчетаИЛ.СоздатьКолонки();
	
	
	//----------------------------------------------------------
	
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель2ГодПомесячно(Кнопка)
	
	ТекГод=Год(ТекущаяДата());
	Если ВвестиЧисло(ТекГод,"Год (4 циры)",4,0)=Ложь Тогда
		Возврат;
	КонецЕсли; 	
	
	НачДата=НачалоГода(Дата(""+Формат(ТекГод, "ЧГ=0")+"01010000"));
	
	Для Ы=0 по 11 Цикл
		//-------------------- Запрос by GtG -----------------------
		// Назначение: Получить начало и конец интервала
		//----------------------------------------------------------
		ТХТ="ВЫБРАТЬ
		    |	ДОБАВИТЬКДАТЕ(&НачДата, МЕСЯЦ, &КолвоДобавляемыхМесяцев) КАК НачПериода";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("НачДата",НачДата);
		Запрос.УстановитьПараметр("КолвоДобавляемыхМесяцев",Ы);
		
		СтрПерИнфл=ПериодыИнфляции.Добавить();
		
		СтрПерИнфл.НачПериода=Запрос.Выполнить().Выгрузить().Получить(0).НачПериода;
		СтрПерИнфл.КонПериода=КонецМесяца(СтрПерИнфл.НачПериода);
		
		
		//----------------------------------------------------------
		
	КонецЦикла; 	
	
	
ПериодыИнфляции.Свернуть("НачПериода,КонПериода","");	
	
	
КонецПроцедуры

Процедура КоманднаяПанель2ГодПоквартально(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура КоманднаяПанель2КварталПомесячно(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

ЭлементыФормы.Н_КолвоУчВРасчАптек.Заголовок="---";

