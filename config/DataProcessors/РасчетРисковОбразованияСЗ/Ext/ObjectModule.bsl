Перем ТЗ_ПродажИОстатковПоКатегориямАптек90Дней;
Перем ИмяФайлаCSV;
Перем ОшибкаПриПеремещенииФайла;

Процедура ЗаполнитТЗПродажПоГруппеЗаПериод(МассивАптек)
	
	# Если Клиент Тогда
		Состояние ("Заполнение продаж за 90 дней по группе аптек...");
	# КонецЕсли
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	УЗ_ПартииОбороты.ТоварКод КАК КодТовара,
	|	МестаХранения.КатегорияАптекиSAS КАК КатегорияАптекиSAS,
	|	СУММА(ВЫБОР
	|			КОГДА УЗ_ПартииОбороты.Регистратор ССЫЛКА Документ.УЗ_РеализацияККМ
	|				ТОГДА УЗ_ПартииОбороты.КоличествоРасход / Партии.К
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Продажа
	|ПОМЕСТИТЬ ВТ_Оборот
	|ИЗ
	|	РегистрНакопления.УЗ_Партии.Обороты(&НачПериода, &КонПериода, Регистратор, СкладКод В (&МассивАптек)) КАК УЗ_ПартииОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
	|		ПО УЗ_ПартииОбороты.ПартияКод = Партии.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
	|		ПО УЗ_ПартииОбороты.СкладКод = МестаХранения.Код
	|ГДЕ
	|	Партии.К > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	УЗ_ПартииОбороты.ТоварКод,
	|	МестаХранения.КатегорияАптекиSAS
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииОстатки.ТоварКод КАК КодТовара,
	|	МестаХранения.КатегорияАптекиSAS КАК КатегорияАптекиSAS,
	|	СУММА(ПартииОстатки.КоличествоОстаток / Партии.К) КАК Остаток
	|ПОМЕСТИТЬ ВТ_ОстатокНаНачало
	|ИЗ
	|	РегистрНакопления.УЗ_Партии.Остатки(&КонПериода, СкладКод В (&МассивАптек)) КАК ПартииОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
	|		ПО (Партии.Код = ПартииОстатки.ПартияКод)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
	|		ПО ПартииОстатки.СкладКод = МестаХранения.Код
	|ГДЕ
	|	ПартииОстатки.КоличествоОстаток > 0
	|	И Партии.К > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииОстатки.ТоварКод,
	|	МестаХранения.КатегорияАптекиSAS
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартииОстатки.ТоварКод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ОстатокНаНачало.КодТовара, ВТ_Оборот.КодТовара) КАК КодТовара,
	|	ЕСТЬNULL(ВТ_ОстатокНаНачало.Остаток, 0) КАК Остаток,
	|	ЕСТЬNULL(ВТ_Оборот.Продажа, 0) КАК Продажа,
	|	ЕСТЬNULL(ВТ_ОстатокНаНачало.КатегорияАптекиSAS, ВТ_Оборот.КатегорияАптекиSAS) КАК КатегорияАптекиSAS
	|ИЗ
	|	ВТ_Оборот КАК ВТ_Оборот
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ОстатокНаНачало КАК ВТ_ОстатокНаНачало
	|		ПО ВТ_Оборот.КодТовара = ВТ_ОстатокНаНачало.КодТовара
	|			И ВТ_Оборот.КатегорияАптекиSAS = ВТ_ОстатокНаНачало.КатегорияАптекиSAS
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Оборот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ОстатокНаНачало";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(ТекущаяДата()) - 86400*90); // Период 90 дней
	Запрос.УстановитьПараметр("КонПериода",НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("МассивАптек",МассивАптек);
	
	ТЗ_Запрос = Запрос.Выполнить().Выгрузить();
	
	Если ТЗ_ПродажИОстатковПоКатегориямАптек90Дней.Количество() = 0 Тогда
		
		ТЗ_ПродажИОстатковПоКатегориямАптек90Дней = ТЗ_Запрос.Скопировать();
		
	Иначе
		
		Для каждого СтрокаТЗ Из ТЗ_Запрос Цикл
			
			НоваяСтрока = ТЗ_ПродажИОстатковПоКатегориямАптек90Дней.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ)
			
		КонецЦикла; 
		
	КонецЕсли;
	
	# Если Клиент Тогда
		Состояние ("Заполнение продаж за 90 дней по группе аптек...");
		ОбработкаПрерыванияПользователя();
	# КонецЕсли

КонецПроцедуры

Процедура СформироватьРасчетРискиОбразованияСЗ(ПереключательОтбор = 2, ОтборПоАптеке = Неопределено, ПутьКФайлу = "", РежимРеглОбработка = Ложь, ПочтаРассылки = "") Экспорт
	
	Результат.Очистить();
	Если НЕ РежимРеглОбработка Тогда
		# Если Клиент Тогда
		Сообщить("Начало обработки: "+ТекущаяДата());
		# КонецЕсли
	КонецЕсли;
	Запрос = Новый Запрос;
	
	ТЗ_ПродажИОстатковПоКатегориямАптек90Дней = Новый ТаблицаЗначений;
	ТЗ_ПродажИОстатковПоКатегориямАптек90Дней.Колонки.Добавить("КодТовара");
	ТЗ_ПродажИОстатковПоКатегориямАптек90Дней.Колонки.Добавить("КатегорияАптекиSAS");
	ТЗ_ПродажИОстатковПоКатегориямАптек90Дней.Колонки.Добавить("Остаток");
	ТЗ_ПродажИОстатковПоКатегориямАптек90Дней.Колонки.Добавить("Продажа");
	
	МассивАптек = Новый Массив;

	Если ПереключательОтбор = 0 Тогда // Отбор по аптеке
		
		МассивАптек.Добавить(ОтборПоАптеке.Код);
		ЗаполнитТЗПродажПоГруппеЗаПериод(МассивАптек);
		
	ИначеЕсли ПереключательОтбор = 1 Тогда // Отбор по списку аптек	
		
		Попытка
			
			Excel = Новый COMОбъект("Excel.Application");
			Excel.WorkBooks.Open(ПутьКФайлу);
			# Если Клиент Тогда
			Состояние("Обработка файла Microsoft Excel...");
			# КонецЕсли
			
		Исключение
			# Если Клиент Тогда
			Сообщить("Ошибка при открытии файла с помощью Excel! Загрузка не будет произведена!");
			Сообщить(ОписаниеОшибки());
			# КонецЕсли
			Возврат;
		КонецПопытки;
		
		Попытка
			//Открываем необходимый лист
			Excel.Sheets(1).Select(); // лист 1, по умолчанию
		Исключение
			//Закрываем Excel
			Excel.ActiveWorkbook.Close();
			Excel = 0;
			# Если Клиент Тогда
			Сообщить("Файл "+Строка(ПутьКФайлу)+" не соответствует необходимому формату! Первый лист не найден!");
			# КонецЕсли
			ОтменитьТранзакцию();
			Возврат;
		КонецПопытки;
		
		//Получим количество строк и колонок.
		//В разных версиях Excel получаются по-разному, поэтому сначала определим версию Excel
		Версия = Лев(Excel.Version,Найти(Excel.Version,".")-1);
		Если Версия = "8" тогда
			ФайлСтрок = Excel.Cells.CurrentRegion.Rows.Count;
			ФайлКолонок = Макс(Excel.Cells.CurrentRegion.Columns.Count, 13);
		Иначе
			ФайлСтрок = Excel.Cells(1,1).SpecialCells(11).Row;
			ФайлКолонок = Excel.Cells(1,1).SpecialCells(11).Column;
		Конецесли;
		
		МассивАптек = Новый Массив;
		
		Для СчЕкс = 1 По ФайлСтрок Цикл
			
			# Если Клиент Тогда
			Состояние("Обработка: "+ СчЕкс + " строк из " + ФайлСтрок);
			# КонецЕсли
			Если НЕ ПустаяСтрока(Excel.Cells(СчЕкс, 1).Text) Тогда
				МассивАптек.Добавить(Число(Excel.Cells(СчЕкс, 1).Text));
			КонецЕсли;
		
		КонецЦикла; 
		
		Excel.DisplayAlerts = 0; 
		Excel.Quit();
		Excel.DisplayAlerts = 1;

		ЗаполнитТЗПродажПоГруппеЗаПериод(МассивАптек);	
		
	ИначеЕсли ПереключательОтбор = 2 Тогда  // Без отбора все аптеки
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МестаХранения.Код
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|ГДЕ
		|	МестаХранения.ЗаказSAS = ИСТИНА
		|	И МестаХранения.СтатусАптеки = ЗНАЧЕНИЕ(Перечисление.СтатусыАптеки.Р)";
		
		Запрос.Текст = ТекстЗапроса;
		ТЗ_Запрос = Запрос.Выполнить().Выгрузить();
		МассивАптек = ТЗ_Запрос.ВыгрузитьКолонку("Код");
		
		ЗаполнитТЗПродажПоГруппеЗаПериод(МассивАптек);	
		
	КонецЕсли; 
	
	ТЗ_ПродажаПоАптеке90Дней = ТЗ_ПродажИОстатковПоКатегориямАптек90Дней.Скопировать(,"КодТовара,Продажа");
	ТЗ_ПродажИОстатковПоКатегориямАптек90Дней.Свернуть("КодТовара,КатегорияАптекиSAS","Остаток,Продажа");
	
	Если ТЗ_ПродажИОстатковПоКатегориямАптек90Дней.Количество() = 0 Тогда
		ТЗ_ПродажИОстатковПоКатегориямАптек90Дней.Добавить();
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Матрица.Товар.Код КАК ТоварКод,
	|	КОЛИЧЕСТВО(1) КАК КолвоАптекПоТоваруПоКатегории,
	|	Матрица.Аптека.КатегорияАптекиSAS КАК КатегорияАптекиSAS
	|ИЗ
	|	РегистрСведений.Матрица КАК Матрица
	|ГДЕ
	|	Матрица.Аптека.СтатусАптеки = ЗНАЧЕНИЕ(Перечисление.СтатусыАптеки.Р)
	|	И Матрица.Аптека.ЗаказSAS = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	Матрица.Товар.Код,
	|	Матрица.Аптека.КатегорияАптекиSAS";
	Запрос.Текст = ТекстЗапроса;
	ТЗ_КолвоАптекПоТоваруПоКатегории = Запрос.Выполнить().Выгрузить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(1) КАК КоличествоАптекПоКатегориямSAS,
	|	МестаХранения.КатегорияАптекиSAS КАК КатегорияАптекиSAS
	|ИЗ
	|	Справочник.МестаХранения КАК МестаХранения
	|ГДЕ
	|	МестаХранения.ЗаказSAS = ИСТИНА
	|	И МестаХранения.СтатусАптеки = ЗНАЧЕНИЕ(Перечисление.СтатусыАптеки.Р)
	|
	|СГРУППИРОВАТЬ ПО
	|	МестаХранения.КатегорияАптекиSAS";
	Запрос.Текст = ТекстЗапроса;
	ТЗ_КоличествоАптекПоКатегориямSAS = Запрос.Выполнить().Выгрузить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МестаХранения.Ссылка
	|ИЗ
	|	Справочник.МестаХранения КАК МестаХранения
	|";	
	
	Если ПереключательОтбор = 0 Тогда
		
		ТекстЗапроса = ТекстЗапроса+"
		|ГДЕ
		|	МестаХранения.Ссылка = &ОтборПоАптеке";
		Запрос.УстановитьПараметр("ОтборПоАптеке", ОтборПоАптеке);
		
	ИначеЕсли ПереключательОтбор = 1 Тогда
		
		ТекстЗапроса = ТекстЗапроса+"
		|ГДЕ
		|	МестаХранения.Код В (&Код)";
		Запрос.УстановитьПараметр("Код", МассивАптек);
		
	ИначеЕсли ПереключательОтбор = 2 Тогда
		
		ТекстЗапроса = ТекстЗапроса+"
		|ГДЕ
		|	МестаХранения.ЗаказSAS = ИСТИНА
		|	И МестаХранения.СтатусАптеки = ЗНАЧЕНИЕ(Перечисление.СтатусыАптеки.Р)";
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	ТЗ_АптекиSAS = Запрос.Выполнить().Выгрузить();
	
	Ссч = 1; КоличествоАптек = ТЗ_АптекиSAS.Количество();
	Для каждого СтрокаТЗ Из ТЗ_АптекиSAS Цикл
		
		# Если Клиент Тогда
		Состояние("Обрабатывается аптека: "+СтрокаТЗ.Ссылка + " ("+Ссч+" из " + КоличествоАптек+")");
		# КонецЕсли
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СохраненныеРасчетыЗаказовСрезПоследних.РасчетЗаказа,
		|	СохраненныеРасчетыЗаказовСрезПоследних.ДатаСозданияЗаписи КАК ДатаСозданияЗаписи
		|ИЗ
		|	РегистрСведений.СохраненныеРасчетыЗаказов.СрезПоследних(, Склад = &Склад) КАК СохраненныеРасчетыЗаказовСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСозданияЗаписи УБЫВ";
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Склад",СтрокаТЗ.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
		
			АвтозакозХранилище = Выборка.РасчетЗаказа;
			ТЗ_Автозаказ = АвтозакозХранилище.Получить();
			
		Иначе
			Продолжить
		КонецЕсли;
		
		Если ТЗ_Автозаказ = Неопределено Тогда
			Продолжить
		КонецЕсли; 
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Автозаказ.КодТовара КАК КодТовара,
		|	Автозаказ.Остаток КАК Остаток,
		|	Автозаказ.КуМин КАК КуМин,
		|	Автозаказ.Заказать КАК Заказать,
		|	Автозаказ.НЗ КАК НЗ,
		|	Автозаказ.Продажи КАК Продажи,
		|	Автозаказ.СредняяСкорость КАК СредняяСкорость,
		|	Автозаказ.Цена КАК Цена
		|ПОМЕСТИТЬ ВТ_Автозаказ
		|ИЗ
		|	&Автозаказ КАК Автозаказ
		|ГДЕ
		|	Автозаказ.Остаток < Автозаказ.КуМин
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодТовара
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АССОРТИМЕНТНЫЙ_ПЛАН.Код КАК ТоварКод,
		|	ГруппыАП.Наименование КАК ГруппаАП,
		|	АССОРТИМЕНТНЫЙ_ПЛАН.Наименование КАК ТоварНаименование,
		|	МестаХранения.Код КАК АптекаКод,
		|	МестаХранения.Наименование КАК АптекаНаименование,
		|	МестаХранения.КатегорияАптекиSAS КАК КатегорияАптекиSAS,
		|	СтавкиНДС.Ставка КАК СтавкаНДС
		|ПОМЕСТИТЬ ВТ_МатрицаТоваров
		|ИЗ
		|	РегистрСведений.Матрица КАК Матрица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыАП КАК ГруппыАП
		|			ПО АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаАП = ГруппыАП.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
		|			ПО АССОРТИМЕНТНЫЙ_ПЛАН.СтавкаНДС = СтавкиНДС.Ссылка
		|		ПО Матрица.Товар = АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
		|		ПО Матрица.Аптека = МестаХранения.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.SAS_ПотребностьАптек КАК SAS_ПотребностьАптек
		|		ПО Матрица.Аптека.Код = SAS_ПотребностьАптек.СкладКод
		|			И (АССОРТИМЕНТНЫЙ_ПЛАН.Код = SAS_ПотребностьАптек.ТоварКод)
		|ГДЕ
		|	Матрица.Аптека = &Аптека
		|	И SAS_ПотребностьАптек.ЧистаяПотребность ЕСТЬ NULL
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТоварКод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗ.ТоварКод КАК ТоварКод,
		|	ТЗ.КатегорияАптекиSAS КАК КатегорияАптекиSAS,
		|	ТЗ.КолвоАптекПоТоваруПоКатегории КАК КолвоАптекПоТоваруПоКатегории
		|ПОМЕСТИТЬ ВТ_МатрицаТоваровКоличествоТовараПоАптекам
		|ИЗ
		|	&ТЗ_КолвоАптекПоТоваруПоКатегории КАК ТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТоварКод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗ.КатегорияАптекиSAS КАК КатегорияАптекиSAS,
		|	ТЗ.КоличествоАптекПоКатегориямSAS КАК КоличествоАптекПоКатегориямSAS
		|ПОМЕСТИТЬ ВТ_МатрицаТоваровКоличествоАптекПоКатегориям
		|ИЗ
		|	&ТЗ_КоличествоАптекПоКатегориямSAS КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УЗ_ПартииОбороты.ТоварКод КАК КодТовара,
		|	СУММА(ВЫБОР
		|			КОГДА УЗ_ПартииОбороты.Регистратор ССЫЛКА Документ.УЗ_РеализацияККМ
		|				ТОГДА УЗ_ПартииОбороты.КоличествоРасход / Партии.К
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Продажа
		|ПОМЕСТИТЬ ВТ_Продажа90ДнейАптека
		|ИЗ
		|	РегистрНакопления.УЗ_Партии.Обороты(&НачПериода, &КонПериода, Регистратор, СкладКод = &КодАптеки) КАК УЗ_ПартииОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
		|		ПО УЗ_ПартииОбороты.ПартияКод = Партии.Код
		|ГДЕ
		|	Партии.К > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	УЗ_ПартииОбороты.ТоварКод
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодТовара
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗ.КодТовара КАК КодТовара,
		|	ТЗ.КатегорияАптекиSAS КАК КатегорияАптекиSAS,
		|	ТЗ.Остаток КАК Остаток,
		|	ТЗ.Продажа КАК Продажа
		|ПОМЕСТИТЬ ВТ_ПродажаИОстаток90ДнейКатегорияАптек
		|ИЗ
		|	&ТЗ_ПродажИОстатковПоКатегориямАптек90Дней КАК ТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодТовара
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_МатрицаТоваров.АптекаКод КАК АптекаКод,
		|	ВТ_МатрицаТоваров.АптекаНаименование КАК АптекаНаименование,
		|	ВТ_МатрицаТоваров.ТоварКод КАК ТоварКод,
		|	ВТ_МатрицаТоваров.ТоварНаименование КАК ТоварНаименование,
		|	ВЫРАЗИТЬ(ABCРасчет.ГруппаИтог КАК СТРОКА(1)) КАК ГруппаАП,
		|	ABCРасчет.ГруппаИтог КАК ГруппаАВС,
		|	ВТ_Автозаказ.КуМин КАК КуМин,
		|	ВТ_Автозаказ.НЗ КАК НЗ,
		|	0 КАК ПрогнозSAS,
		|	ВТ_Автозаказ.Заказать КАК Заказать,
		|	ВТ_Автозаказ.Остаток КАК Остаток,
		|	ВТ_Автозаказ.Продажи КАК Продажи,
		|	ВТ_Автозаказ.СредняяСкорость КАК СредняяСкорость,
		|	ВЫБОР
		|		КОГДА ВТ_МатрицаТоваров.СтавкаНДС = 0
		|			ТОГДА ВТ_Автозаказ.Цена
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВТ_МатрицаТоваров.СтавкаНДС = 10
		|					ТОГДА ВЫРАЗИТЬ(ВТ_Автозаказ.Цена / 1.1 КАК ЧИСЛО(15, 2))
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ВТ_МатрицаТоваров.СтавкаНДС = 18
		|							ТОГДА ВЫРАЗИТЬ(ВТ_Автозаказ.Цена / 1.18 КАК ЧИСЛО(15, 2))
		|						ИНАЧЕ ВЫБОР
		// НДС20/18
		|								КОГДА ВТ_МатрицаТоваров.СтавкаНДС = 20
		|									ТОГДА ВЫРАЗИТЬ(ВТ_Автозаказ.Цена / 1.2 КАК ЧИСЛО(15, 2))
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ВТ_МатрицаТоваров.СтавкаНДС = 0.15
		|											ТОГДА ВЫРАЗИТЬ(ВТ_Автозаказ.Цена / 1.18 КАК ЧИСЛО(15, 2))
		|										ИНАЧЕ ВТ_Автозаказ.Цена
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ * ВТ_Автозаказ.Заказать КАК СуммаПозииКЗаказу,
		|	ВЫБОР
		|		КОГДА ВТ_Автозаказ.Остаток - (ВЫРАЗИТЬ(ВТ_Продажа90ДнейАптека.Продажа / 90 КАК ЧИСЛО(10, 2))) * ВЫБОР
		|				КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.Бренд = &СпрТоварыГоспиталка
		|					ТОГДА 60
		|				ИНАЧЕ ВЫБОР
		|						КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.Категория = &СпрКатегорияОртопедия
		|								ИЛИ АССОРТИМЕНТНЫЙ_ПЛАН.ОбобщеннаяГруппа = &СпрОбобщенныеГруппы
		|							ТОГДА 120
		|						ИНАЧЕ ВЫБОР
		|								КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(АССОРТИМЕНТНЫЙ_ПЛАН.Категория.Наименование, """""""") КАК СТРОКА(3))) = ""СТМ""
		|									ТОГДА ВЫБОР
		|											КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.ТипДляЦО = ЗНАЧЕНИЕ(Перечисление.ТипыДляЦО.Парафармация)
		|												ТОГДА 120
		|											ИНАЧЕ ВЫБОР
		|													КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.ТипДляЦО = ЗНАЧЕНИЕ(Перечисление.ТипыДляЦО.Лексредства)
		|														ТОГДА 30
		|													ИНАЧЕ 0
		|												КОНЕЦ
		|										КОНЕЦ
		|								ИНАЧЕ ВЫБОР
		|										КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.ТипДляЦО = ЗНАЧЕНИЕ(Перечисление.ТипыДляЦО.Парафармация)
		|											ТОГДА 120
		|										ИНАЧЕ ВЫБОР
		|												КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.ТипДляЦО = ЗНАЧЕНИЕ(Перечисление.ТипыДляЦО.Лексредства)
		|													ТОГДА 30
		|												ИНАЧЕ 0
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ > 0
		|			ТОГДА (ВТ_Автозаказ.Остаток - (ВЫРАЗИТЬ(ВТ_Продажа90ДнейАптека.Продажа / 90 КАК ЧИСЛО(10, 2))) * ВЫБОР
		|					КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.Бренд = &СпрТоварыГоспиталка
		|						ТОГДА 60
		|					ИНАЧЕ ВЫБОР
		|							КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.Категория = &СпрКатегорияОртопедия
		|									ИЛИ АССОРТИМЕНТНЫЙ_ПЛАН.ОбобщеннаяГруппа = &СпрОбобщенныеГруппы
		|								ТОГДА 120
		|							ИНАЧЕ ВЫБОР
		|									КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(АССОРТИМЕНТНЫЙ_ПЛАН.Категория.Наименование, """""""") КАК СТРОКА(3))) = ""СТМ""
		|										ТОГДА ВЫБОР
		|												КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.ТипДляЦО = ЗНАЧЕНИЕ(Перечисление.ТипыДляЦО.Парафармация)
		|													ТОГДА 120
		|												ИНАЧЕ ВЫБОР
		|														КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.ТипДляЦО = ЗНАЧЕНИЕ(Перечисление.ТипыДляЦО.Лексредства)
		|															ТОГДА 30
		|														ИНАЧЕ 0
		|													КОНЕЦ
		|											КОНЕЦ
		|									ИНАЧЕ ВЫБОР
		|											КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.ТипДляЦО = ЗНАЧЕНИЕ(Перечисление.ТипыДляЦО.Парафармация)
		|												ТОГДА 120
		|											ИНАЧЕ ВЫБОР
		|													КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.ТипДляЦО = ЗНАЧЕНИЕ(Перечисление.ТипыДляЦО.Лексредства)
		|														ТОГДА 30
		|													ИНАЧЕ 0
		|												КОНЕЦ
		|										КОНЕЦ
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ) * ВЫБОР
		|					КОГДА ВТ_МатрицаТоваров.СтавкаНДС = 0
		|						ТОГДА ВТ_Автозаказ.Цена
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ВТ_МатрицаТоваров.СтавкаНДС = 10
		|								ТОГДА ВЫРАЗИТЬ(ВТ_Автозаказ.Цена / 1.1 КАК ЧИСЛО(15, 2))
		|							ИНАЧЕ ВЫБОР
		|									КОГДА ВТ_МатрицаТоваров.СтавкаНДС = 18
		|										ТОГДА ВЫРАЗИТЬ(ВТ_Автозаказ.Цена / 1.18 КАК ЧИСЛО(15, 2))
		|									ИНАЧЕ ВЫБОР
		// НДС20/18
		|											КОГДА ВТ_МатрицаТоваров.СтавкаНДС = 20
		|												ТОГДА ВЫРАЗИТЬ(ВТ_Автозаказ.Цена / 1.2 КАК ЧИСЛО(15, 2))
		|											ИНАЧЕ ВЫБОР
		|													КОГДА ВТ_МатрицаТоваров.СтавкаНДС = 0.15
		|														ТОГДА ВЫРАЗИТЬ(ВТ_Автозаказ.Цена / 1.18 КАК ЧИСЛО(15, 2))
		|													ИНАЧЕ ВТ_Автозаказ.Цена
		|												КОНЕЦ
		|										КОНЕЦ
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаСверхПозицииЗаказа,
		|	ВТ_МатрицаТоваровКоличество.КолвоАптекПоТоваруПоКатегории / ВТ_МатрицаТоваровКоличествоАптекПоКатегориям.КоличествоАптекПоКатегориямSAS * 100 КАК ПроцентАптекИмеющихПозициюВМатрице,
		|	ВТ_МатрицаТоваровКоличествоАптекПоКатегориям.КоличествоАптекПоКатегориямSAS КАК КоличествоАптекПоКатегориямSAS,
		|	ВТ_МатрицаТоваровКоличество.КолвоАптекПоТоваруПоКатегории КАК КолвоАптекПоТоваруПоКатегории,
		|	ВТ_МатрицаТоваров.КатегорияАптекиSAS КАК КатегорияАптекиSAS,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВТ_ПродажаИОстаток90ДнейКатегорияАптек.Продажа, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ВТ_ПродажаИОстаток90ДнейКатегорияАптек.Остаток, 0) * 90 / ВТ_ПродажаИОстаток90ДнейКатегорияАптек.Продажа
		|	КОНЕЦ КАК ОТМЗвГруппеАптек,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВТ_Продажа90ДнейАптека.Продажа, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ВТ_Автозаказ.Остаток, 0) * 90 / ВТ_Продажа90ДнейАптека.Продажа
		|	КОНЕЦ КАК ОТМЗвАптеке
		|ИЗ
		|	ВТ_МатрицаТоваров КАК ВТ_МатрицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Автозаказ КАК ВТ_Автозаказ
		|		ПО ВТ_МатрицаТоваров.ТоварКод = ВТ_Автозаказ.КодТовара
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ABCРасчет КАК ABCРасчет
		|		ПО ВТ_МатрицаТоваров.ТоварКод = ABCРасчет.КодТовара
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МатрицаТоваровКоличествоТовараПоАптекам КАК ВТ_МатрицаТоваровКоличество
		|		ПО ВТ_МатрицаТоваров.ТоварКод = ВТ_МатрицаТоваровКоличество.ТоварКод
		|			И ВТ_МатрицаТоваров.КатегорияАптекиSAS = ВТ_МатрицаТоваровКоличество.КатегорияАптекиSAS
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МатрицаТоваровКоличествоАптекПоКатегориям КАК ВТ_МатрицаТоваровКоличествоАптекПоКатегориям
		|		ПО ВТ_МатрицаТоваров.КатегорияАптекиSAS = ВТ_МатрицаТоваровКоличествоАптекПоКатегориям.КатегорияАптекиSAS
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Продажа90ДнейАптека КАК ВТ_Продажа90ДнейАптека
		|		ПО ВТ_МатрицаТоваров.ТоварКод = ВТ_Продажа90ДнейАптека.КодТовара
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
		|		ПО ВТ_МатрицаТоваров.ТоварКод = АССОРТИМЕНТНЫЙ_ПЛАН.Код
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПродажаИОстаток90ДнейКатегорияАптек КАК ВТ_ПродажаИОстаток90ДнейКатегорияАптек
		|		ПО ВТ_МатрицаТоваров.ТоварКод = ВТ_ПродажаИОстаток90ДнейКатегорияАптек.КодТовара
		|			И ВТ_МатрицаТоваров.КатегорияАптекиSAS = ВТ_ПродажаИОстаток90ДнейКатегорияАптек.КатегорияАптекиSAS
		|ГДЕ
		|	ВТ_Автозаказ.Остаток < ВТ_Автозаказ.КуМин
		|	И ABCРасчет.КодАптеки = &КодАптеки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_Автозаказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_МатрицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_МатрицаТоваровКоличествоТовараПоАптекам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_МатрицаТоваровКоличествоАптекПоКатегориям
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_Продажа90ДнейАптека
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ПродажаИОстаток90ДнейКатегорияАптек";
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Автозаказ",ТЗ_Автозаказ); 
		Запрос.УстановитьПараметр("Аптека",СтрокаТЗ.Ссылка); 
		Запрос.УстановитьПараметр("КодАптеки",СтрокаТЗ.Ссылка.Код); 
		Запрос.УстановитьПараметр("ТЗ_КолвоАптекПоТоваруПоКатегории",ТЗ_КолвоАптекПоТоваруПоКатегории); 
		Запрос.УстановитьПараметр("ТЗ_КоличествоАптекПоКатегориямSAS",ТЗ_КоличествоАптекПоКатегориямSAS); 
		Запрос.УстановитьПараметр("ТЗ_ПродажИОстатковПоКатегориямАптек90Дней",ТЗ_ПродажИОстатковПоКатегориямАптек90Дней); 
		Запрос.УстановитьПараметр("НачПериода",НачалоДня(ТекущаяДата()) - 86400*90); // Период 90 дней
		Запрос.УстановитьПараметр("КонПериода",НачалоДня(ТекущаяДата()));
		
		СпрТовары = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
		СпрТоварыГоспиталка = СпрТовары.НайтиПоНаименованию("Госпиталка");
		Если СпрТоварыГоспиталка <> СпрТовары.ПустаяСсылка() Тогда
			Запрос.УстановитьПараметр("СпрТоварыГоспиталка",СпрТоварыГоспиталка);
		Иначе
			
			СпрТоварыГоспиталка = СпрТовары.НайтиПоКоду(65528);
			Если СпрТоварыГоспиталка <> СпрТовары.ПустаяСсылка() Тогда
				Запрос.УстановитьПараметр("СпрТоварыГоспиталка",СпрТоварыГоспиталка);
			Иначе
				
				Запрос.УстановитьПараметр("СпрТоварыГоспиталка",СпрТовары.ПустаяСсылка());
				Если НЕ РежимРеглОбработка Тогда
					
					# Если Клиент Тогда
					Сообщить("В справочнике ""Бренды"" не найден элемент ""Госпиталка"", код 65528, который влияет на расчет кол-ва упаковок превышающее предустановленный лимит дней по оборачиваемости."+Символы.ПС+"
					|Расчет в колонке ""Сумма СЗ позиции в данной аптеке"" может быть не верным.", СтатусСообщения.Важное);
					# КонецЕсли
				
				КонецЕсли; 
			
			КонецЕсли;
		
		КонецЕсли; 
		
		СпрКатегория = Справочники.Категории;
		СпрКатегорияОртопедия = СпрКатегория.НайтиПоНаименованию("ОРТОПЕДИЯ");
		
		Если СпрКатегорияОртопедия <> СпрКатегория.ПустаяСсылка() Тогда
			Запрос.УстановитьПараметр("СпрКатегорияОртопедия",СпрКатегорияОртопедия);
		Иначе
			
			СпрКатегорияОртопедия = СпрКатегория.НайтиПоКоду(33);
			Если СпрКатегорияОртопедия <> СпрКатегория.ПустаяСсылка() Тогда
				Запрос.УстановитьПараметр("СпрКатегорияОртопедия",СпрКатегорияОртопедия);
			Иначе
				
				Если НЕ РежимРеглОбработка Тогда
				
					Запрос.УстановитьПараметр("СпрКатегорияОртопедия",СпрКатегория.ПустаяСсылка());
					# Если Клиент Тогда
					Сообщить("В справочнике ""Категории"" не найден элемент ""ОРТОПЕДИЯ"", код 33, который влияет на расчет кол-ва упаковок превышающее предустановленный лимит дней по оборачиваемости."+Символы.ПС+"
					|Расчет в колонке ""Сумма СЗ позиции в данной аптеке"" может быть не верным.", СтатусСообщения.Важное);
					# КонецЕсли
				
				КонецЕсли; 
			
			КонецЕсли;
		
		КонецЕсли; 
		
		СпрОбобщенныеГруппы = Справочники.ОбобщенныеГруппы;
		СпрОбобщенныеГруппыОртопедия = СпрОбобщенныеГруппы.НайтиПоНаименованию("ОРТОПЕДИЯ");
		
		Если СпрОбобщенныеГруппыОртопедия <> СпрОбобщенныеГруппы.ПустаяСсылка() Тогда
			Запрос.УстановитьПараметр("СпрОбобщенныеГруппы",СпрОбобщенныеГруппыОртопедия);
		Иначе
			
			СпрОбобщенныеГруппыОртопедия = СпрОбобщенныеГруппы.НайтиПоКоду(10);
			Если СпрОбобщенныеГруппыОртопедия <> СпрОбобщенныеГруппы.ПустаяСсылка() Тогда
				Запрос.УстановитьПараметр("СпрОбобщенныеГруппы",СпрОбобщенныеГруппыОртопедия);
			Иначе
				
				Если НЕ РежимРеглОбработка Тогда
				
					Запрос.УстановитьПараметр("СпрОбобщенныеГруппы",СпрОбобщенныеГруппы.ПустаяСсылка());
					# Если Клиент Тогда
					Сообщить("В справочнике ""ОбобщенныеГруппы"" не найден элемент ""ОРТОПЕДИЯ"", код 10, который влияет на расчет кол-ва упаковок превышающее предустановленный лимит дней по оборачиваемости."+Символы.ПС+"
					|Расчет в колонке ""Сумма СЗ позиции в данной аптеке"" может быть не верным.", СтатусСообщения.Важное);
					# КонецЕсли
			
				КонецЕсли; 
			
			КонецЕсли;
		
		КонецЕсли; 
		
		Запрос.УстановитьПараметр("Автозаказ",ТЗ_Автозаказ); 
		ТЗ_Запрос = Запрос.Выполнить().Выгрузить();
		
		//построитель = Новый ПостроительОтчета;
		//Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТЗ_Запрос);
		//Построитель.Выполнить();
		//Построитель.Вывести();

		//Результат.Загрузить(ТЗ_Запрос);
		Сч = 1; КоличествоСрок = ТЗ_Запрос.Количество();
		Для каждого СтрокаТЧ Из ТЗ_Запрос Цикл
		
			НоваяСтрока = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
			
			# Если Клиент Тогда
			Состояние("Заполнение таблицы результатов: "+Сч+ " из "+КоличествоСрок);
			# КонецЕсли
			Сч = Сч +1;
			
		КонецЦикла; 

		Ссч = Ссч + 1;
		
	КонецЦикла;
	
	Если РежимРеглОбработка Тогда
	
		//ВременныйКаталог = КаталогВременныхФайлов();
		Инфо = Новый СистемнаяИнформация;
		Если Инфо.ТипПлатформы = ТипПлатформы.Linux_x86 Или Инфо.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда
			ВременныйКаталог = "/home/usr1cv8/ftp_net/Post/GDPAHR/";
		Иначе
			ВременныйКаталог = "\\id-vm-1\ftp_data\Post\GDPAHR\";
		КонецЕсли;

		//ВыгрузитьФайлCVSНажатие(ВременныйКаталог);
		ЗаписатьТабличнуюЧастьВЭксель(ВременныйКаталог);
		Если Инфо.ТипПлатформы = ТипПлатформы.Linux_x86 Или Инфо.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда
			ПутьРасположенияФайла = ВременныйКаталог + "/"+ВозвратИмениCSVФайла();
		Иначе
			ПутьРасположенияФайла = ВременныйКаталог + "\"+ВозвратИмениCSVФайла();
		КонецЕсли;
		
		ОтправитьСообщениеНаПочту(Истина, ПочтаРассылки,ВременныйКаталог);
		//УдалитьФайлы(ПутьРасположенияФайла);
		
	КонецЕсли; 
	
	Если НЕ РежимРеглОбработка Тогда
		
		# Если Клиент Тогда
		Сообщить("Окончание обработки: "+ТекущаяДата());
		# КонецЕсли
	
	КонецЕсли; 
	
КонецПроцедуры


// Быстрый вариант записи в CSV
Процедура ЗаписатьТабличнуюЧастьВЭксель(ПутьВыгрузки) Экспорт

	кодировка = КодировкаТекста.ANSI;
	ИмяФайлаЛок = ПолучитьИмяВременногоФайла("csv");

	Файл_CSV = Новый ЗаписьТекста(ИмяФайлаЛок, Кодировка);
	
	Разделитель = ";";
	КолонкиТЗ = Результат.Выгрузить().Колонки;
	Для каждого Колонка Из КолонкиТЗ Цикл
		
		Если Лев(Колонка.Имя,2) = "Т_" Тогда
			Продолжить
		КонецЕсли; 
		стрКолонки = "" + стрКолонки + Колонка.Заголовок + разделитель;
		
	КонецЦикла; 
	Файл_CSV.ЗаписатьСтроку(стрКолонки);

	Сч = 1; 	

	КоличествоСтрок = Результат.Количество();
	Для каждого запись из Результат Цикл

		Текст = "";
		Текст = Текст + запись.НомерСтроки  
			+ разделитель + запись.АптекаКод
			+ разделитель + запись.АптекаНаименование
			+ разделитель + запись.ТоварКод
			+ разделитель + запись.ТоварНаименование
			+ разделитель + запись.ГруппаАП
			+ разделитель + запись.ГруппаАВС
			+ разделитель + запись.КуМин
			+ разделитель + запись.НЗ
			+ разделитель + запись.ПрогнозSAS
			+ разделитель + запись.Заказать
			+ разделитель + запись.Остаток
			+ разделитель + запись.Продажи
			+ разделитель + запись.СредняяСкорость
			+ разделитель + запись.КоличествоАптекПоКатегориямSAS
			+ разделитель + запись.КолвоАптекПоТоваруПоКатегории
			+ разделитель + запись.ПроцентАптекИмеющихПозициюВМатрице
			+ разделитель + запись.ОТМЗвАптеке
			+ разделитель + запись.ОТМЗвГруппеАптек
			+ разделитель + запись.СуммаПозииКЗаказу
			+ разделитель + запись.СуммаСверхПозицииЗаказа;
			
			Файл_CSV.ЗаписатьСтроку
			(Текст);
			
		# Если Клиент Тогда
		Состояние ("Обработано: "+Сч+" из "+ КоличествоСтрок);
		ОбработкаПрерыванияПользователя();
		# КонецЕсли
		Сч = Сч + 1;
	КонецЦикла;
	Файл_CSV.Закрыть();
	
	ПервыйСимволПути = Лев(ПутьВыгрузки,1);
	Попытка
		ПереместитьФайл(ИмяФайлаЛок,СокрЛП(ПутьВыгрузки+?(ПервыйСимволПути = "/","/","\")+ВозвратИмениCSVФайла()));
	Исключение
		ОшибкаПриПеремещенииФайла = Истина;
		ПереместитьФайл(ИмяФайлаЛок,СокрЛП(ПутьВыгрузки+?(ПервыйСимволПути = "/","/","\")+ВозвратИмениCSVФайла()));
	КонецПопытки;

КонецПроцедуры
 


// Вариант записи в CSV
Функция СоздатьЗаголовкиCSV(ТаблицаЗначений,разделитель)
	
	КолонкиТЗ = ТаблицаЗначений.Выгрузить().Колонки;
	Для каждого Колонка Из КолонкиТЗ Цикл
		Если Лев(Колонка.Имя,2) = "Т_" Тогда
			Продолжить
		КонецЕсли; 
		стрКолонки = "" + стрКолонки + Колонка.Заголовок + разделитель;
	КонецЦикла; 
	Возврат стрКолонки;
КонецФункции

Функция СоздатьДанныеCSV(ТаблицаЗначений,разделитель)

	Текст	= "";
	Сч = 1;
	КоличествоСтрок = ТаблицаЗначений.Количество();
	Для каждого запись из ТаблицаЗначений Цикл
		Если ПустаяСтрока(Текст) Тогда
			Текст = СоздатьЗаголовкиCSV(ТаблицаЗначений,разделитель) 
				+ Символы.ПС;    
		КонецЕсли;    

		Текст = Текст + запись.НомерСтроки  
			+ разделитель + запись.АптекаКод
			+ разделитель + запись.АптекаНаименование
			+ разделитель + запись.ТоварКод
			+ разделитель + запись.ТоварНаименование
			+ разделитель + запись.ГруппаАП
			+ разделитель + запись.ГруппаАВС
			+ разделитель + запись.КуМин
			+ разделитель + запись.НЗ
			+ разделитель + запись.ПрогнозSAS
			+ разделитель + запись.Заказать
			+ разделитель + запись.Остаток
			+ разделитель + запись.Продажи
			+ разделитель + запись.СредняяСкорость
			+ разделитель + запись.КоличествоАптекПоКатегориямSAS
			+ разделитель + запись.КолвоАптекПоТоваруПоКатегории
			+ разделитель + запись.ПроцентАптекИмеющихПозициюВМатрице
			+ разделитель + запись.ОТМЗвАптеке
			+ разделитель + запись.ОТМЗвГруппеАптек
			+ разделитель + запись.СуммаПозииКЗаказу
			+ разделитель + запись.СуммаСверхПозицииЗаказа
			+ Символы.ПС;
			
		# Если Клиент Тогда
		Состояние ("Обработано: "+Сч+" из "+ КоличествоСтрок);
		# КонецЕсли
		Сч = Сч + 1;
	КонецЦикла;

		//сообщить(текст);
	Возврат Текст;

КонецФункции //Процедура КнопкаВыполнитьНажатие(Кнопка)

Процедура ЗаписатьCSV(текст,ПутьВыгрузки)              
	
	
	кодировка = КодировкаТекста.ANSI;
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(СокрЛП(ПутьВыгрузки+"\"+ВозвратИмениCSVФайла()),Кодировка);            
	ТекстовыйФайлЗапись.ЗаписатьСтроку(текст); 
	ТекстовыйФайлЗапись.Закрыть();    
	
	//Сообщить("Выгрузка завершена!");

КонецПроцедуры // ЗаписатьCSV()

Процедура ВыгрузитьФайлCVSНажатие(ПутьВыгрузки)Экспорт
	
	Разделитель = ";";
	Текст = СоздатьДанныеCSV(Результат,Разделитель);
	
	ЗаписатьCSV(Текст,ПутьВыгрузки);
	
КонецПроцедуры


Функция СформироватьТекстПисьма()Экспорт

	Возврат "Внимание! Наличие в матрицах аптек указанных позиций приводит к применению в автозаказ 1С избытка товарного запаса, которое не сопоставимо с оптимизированным расчетом алгоритмом прогнозирования SAS, вытекающего из предустановленных значений целевого уровня сервиса на данные группы товара в разрезе АВС.                Заказ указанных товаров увеличивает товарный остаток аптек в части сверхзапасов исключительно на основании матриц! Данный отчет необходимо принять в качестве рекомендации к пересмотру участия указанных товаров в матрицах соответствующих аптек, либо к применению административно-управленческих инструментов по регулированию продаж в таких аптеках по отношению к продажам в группе из сопоставимых аптеках.
	|Сформированный файл расположен: \\id-vm-1\ftp_data\Post\GDPAHR\"+ВозвратИмениCSVФайла()+".";

КонецФункции // СформироватьТекстПисьма()

Функция СформироватьЗаголовокПисьма()Экспорт

	Возврат	"Риски образования СЗ по матрицам 1С";

КонецФункции // СформироватьЗаголовокПисьм()

Функция ВозвратИмениCSVФайла()

	Если ОшибкаПриПеремещенииФайла Тогда
	
		Возврат "RiskiSZ_"+Год(ТекущаяДата())+"_"+Месяц(ТекущаяДата())+"_"+День(ТекущаяДата())+".csv"	
	
	Иначе
	
		Возврат "RiskiSZ.csv"
	
	КонецЕсли; 
	
КонецФункции // ВозвратИмениCSVФайла()

 
Процедура ОтправитьСообщениеНаПочту(РежимРеглОбработка = Ложь, ПочтаРассылки = "",КатклогВыгрузки) Экспорт

	Почта=Обработки.Почтарь.Создать();
	Почта.Автоотправка=Истина;
	Если РежимРеглОбработка Тогда
		
		СтрокаСписокРассылки = ПочтаРассылки;
		МассивРассылки = Новый Массив;
		Пока
			(Найти(СтрокаСписокРассылки, ";") > 0 )
			И
			СтрДлина(СтрокаСписокРассылки) > 3
		Цикл
		     МассивРассылки.Добавить(Лев(СтрокаСписокРассылки, Найти(СтрокаСписокРассылки, ";")-1));
			 СтрокаСписокРассылки = Прав
			 (
			 	СтрокаСписокРассылки
				,
				СтрДлина(СтрокаСписокРассылки) - СтрДлина(МассивРассылки[МассивРассылки.Количество()-1]+1)
			 )
			 
		КонецЦикла;
		
		Для каждого м из МассивРассылки Цикл
			Почта.Рассылка.Добавить(м);
		КонецЦикла;
		
		Почта.Тема = СформироватьЗаголовокПисьма();
		Почта.ТекстПисьма = СформироватьТекстПисьма();
	
	Иначе
	
		Для каждого СтрокаПолучатель Из Получатели Цикл
		
			Почта.Рассылка.Добавить(СтрокаПолучатель.Адрес);
		
		КонецЦикла; 
		Почта.Тема = ТемаПисьма;
		Почта.ТекстПисьма = ТекстПисьма;

	КонецЕсли;
	
	//Почта.СписокВложений.Добавить(КатклогВыгрузки+"\"+ВозвратИмениCSVФайла());
	Почта.функция_Послать()

КонецПроцедуры
ОшибкаПриПеремещенииФайла = Ложь;
 