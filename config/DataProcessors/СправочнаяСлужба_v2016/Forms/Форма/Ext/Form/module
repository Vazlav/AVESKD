Перем Москва,МоскваЦентр;

Перем НачалоРазговора;
Перем ЭтоЧужаяСС;
Перем БрендАС;
Перем ТабБрендовАС;

Перем ГруппаБрендовПоУмолчанию;
Перем ГруппаБрендовДляВнешнейСправки;

Перем ЗапросПоОстаткамТоваров; // Из расчета что остатки могут быть запрошены по списку товаров.

Перем ТекущаяАптекаБронирования;

Перем СрезОстатков;
Перем ЗапросСрезаОстатков;

Перем ЗапросПометкиМетро;

Процедура ПоискПоВхождениюПриИзменении(Элемент)
	
	
	//Если Найти (ПоискПоВхождению,"%")=0 и пустаяСтрока(ПоискПоВхождению)=Ложь тогда
	//	ПоискПоВхождению="%"+СокрЛП(ПоискПоВхождению)+"%";
	//КонецЕсли;	
	//
	//

	//ЗаполнитьАП("Наименование подобно """+СокрЛП(ПоискПоВхождению)+"""");
	Если СтрДлина(СокрЛП(ПоискПоВхождению)) < 4 и НЕ ПустаяСтрока(ПоискПоВхождению) Тогда
		Предупреждение("строка поиска должна содержать минимум 4 символа");
		Возврат;
	КонецЕсли;
	
	ПоискЧерезADO(ПоискПоВхождению);
	
	
	
КонецПроцедуры


Процедура ПоискПоВхождениюОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	
	УсловиеПоискаТоваров=ПоискПоНечеткомуСоответствию.ПолучитьУсловиеОтбораПоНечеткомуСоответствию(ПоискПоВхождению,истина);
	
	Если УсловиеПоискаТоваров=Неопределено Тогда
		Предупреждение("Ничего не найдено!",1);
		Возврат;
	КонецЕсли;	
	
	ЗаполнитьАП(УсловиеПоискаТоваров);	
КонецПроцедуры


Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура Найти_товарНажатие(Элемент)
	
	
	////-------------- ЗАПРОС GTG --------------------------НАЧАЛО
	////Назначение: ПоискОстатков
	////
	//ТХТ="ВЫБРАТЬ
	//	|	ПартииЖНВЛСОстатки.Склад.Метро КАК Метро,
	//	|	ПартииЖНВЛСОстатки.Склад.Наименование КАК Аптека,
	//	|	ПартииЖНВЛСОстатки.Товар.Наименование КАК Товар,
	//	|	ПартииЖНВЛСОстатки.Партия.Наименование КАК Партия,
	//	|	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток,
	//	|	ВЫБОР
	//	|		КОГДА ПартииЖНВЛСОстатки.КолвоОстаток <> 0
	//	|			ТОГДА ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток
	//	|		ИНАЧЕ 0
	//	|	КОНЕЦ КАК Цена
	//	|ИЗ
	//	|	РегистрНакопления.ПартииЖНВЛС.Остатки(
	//	|		&ТекДата,
	//	|		Товар.Наименование ПОДОБНО &НаименованиеТовара
	//	|			И Склад.Регион = &Регион) КАК ПартииЖНВЛСОстатки
	//	|ГДЕ
	//	|	ПартииЖНВЛСОстатки.КолвоОстаток >= &МинКолвоОстаток
	//	|	И ПартииЖНВЛСОстатки.КолвоОстаток > 0
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	Аптека,
	//	|	Товар,
	//	|	Цена";
	//
	//Запрос=Новый Запрос;
	//Запрос.Текст=ТХТ;
	//Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	//Запрос.УстановитьПараметр("МинКолвоОстаток",МинОстаток);
	//Запрос.УстановитьПараметр("НаименованиеТовара","%"+НаименованиеДляПоиска+"%");
	//Запрос.УстановитьПараметр("Регион",Регион);
	//
	//ТЗ=Запрос.Выполнить().Выгрузить();
	//
	//ЭлементыФормы.ТП.Значение=ТЗ;   
	//ЭлементыФормы.ТП.СоздатьКолонки();
	////-------------- ЗАПРОС GTG --------------------------КОНЕЦ
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	
	
	
	
	
КонецПроцедуры



Процедура КоманднаяПанель2ОстаткиТОвараПоАптекам_F5(Кнопка,ЗапросПоСпискуТоваров=Ложь)
	
	Если ЭлементыФормы.АП.ТекущаяСтрока=Неопределено ТОгда
		Возврат;
	КонецЕсли;	
	
	СписокКодовТоваров = Новый СписокЗначений();
	
	
	ЭлементыФормы.ТоварОстатков.ЦветТекста=Новый Цвет(0,0,255);	
	
	ЭлементыФормы.ТоварОстатков.Заголовок=ЭлементыФормы.АП.ТекущаяСтрока.Товар;
	
	Если ЗапросПоСпискуТоваров=Неопределено Тогда
		ЗапросПоСпискуТоваров=Ложь;
	КонецЕсли;	
	
	Если ЗапросПоСпискуТоваров=Ложь Тогда
		ЗапросПоОстаткамТоваров.УстановитьПараметр("СписокТоваров",ЭлементыФормы.АП.ТекущаяСтрока.Товар);
		ТЗ=СписокТоваров.Скопировать();
		ТЗ.Колонки.Добавить("Код",Новый ОписаниеТипов("Число"));
		Стр=ТЗ.Добавить();
		Стр.ТОвар=ЭлементыФормы.АП.ТекущаяСтрока.Товар;
		Стр.Код=ЭлементыФормы.АП.ТекущаяСтрока.Код;
		Стр.Количество=МинОстаток;
		
		СписокКодовТоваров.Добавить(Стр.Код);
		
		ЗапросПоОстаткамТоваров.УстановитьПараметр("ТСписокТоваров",СписокТоваров);
		ЗапросПоОстаткамТоваров.УстановитьПараметр("ТСписокТоваров",ТЗ);
		ЗапросПоОстаткамТоваров.УстановитьПараметр("СписокКодовТоваров",СписокКодовТоваров);
	Иначе
		ЗапросПоОстаткамТоваров.УстановитьПараметр("СписокТоваров",СписокТоваров.ВыгрузитьКолонку("Товар"));
		ЗапросПоОстаткамТоваров.УстановитьПараметр("ТСписокТоваров",СписокТоваров);
		Для каждого стр из СписокТоваров Цикл
			СписокКодовТоваров.Добавить(стр.Значение.Код);
		КонецЦикла;
		ЗапросПоОстаткамТоваров.УстановитьПараметр("СписокКодовТоваров",СписокКодовТоваров);
		
		
	КонецЕсли;	
	
	ЗапросПоОстаткамТоваров.УстановитьПараметр("ТекущаяДата",ТекущаяДата()); //всегда  для отсева закрытых аптек
	

	
	
	Если ПодходящиеСтанцииМетро.Количество()<>0 Тогда
		МетроПоМаршрутизатору=ПодходящиеСтанцииМетро.Выгрузить();
	Иначе
		МетроПоМаршрутизатору=ПодходящиеСтанцииМетро.Выгрузить();//Пустая ТЗ
		МетроПоМаршрутизатору.Очистить(); // а вдруг глюк?
		
		Х=0;
		Для каждого ЭлемМетро из Метро Цикл
			Если ЭлемМетро.Пометка=Истина Тогда
				Х=Х+1;
				Стр=МетроПоМаршрутизатору.Добавить();
				Стр.Метро=ЭлемМетро.Значение;
				Стр.УдаленностьОтКлиента=0;// не важно
				// Стр.Линия не играем
			КонецЕСли;
		КонецЦикла;	
		
		//---------------<Если ничего в метро не отмечено считаем что отмечено всё>---------------------------// GtG // 29.04.2013 17:56:06 
		Если Х=0 Тогда
			МетроПоМаршрутизатору.Очистить();
			
			Для Ы=1 По Метро.Количество() Цикл
				МетроПоМаршрутизатору.Добавить(); // загрузить значения можно только в тз со строками
			КонецЦикла;	
			
			МетроПоМаршрутизатору.ЗагрузитьКолонку(Метро.ВыгрузитьЗначения(),"Метро");
			МетроПоМаршрутизатору.ЗаполнитьЗначения(0,"УдаленностьОтКлиента");
		КонецЕсли;	
	КонецЕсли;  
	
	Если МетроПоМаршрутизатору.Количество()=0 Тогда
		МетроПоМаршрутизатору.Очистить();
		Для Ы=1 По Метро.Количество() Цикл
			МетроПоМаршрутизатору.Добавить(); // загрузить значения можно только в тз со строками
		КонецЦикла;	
		
		МетроПоМаршрутизатору.ЗагрузитьКолонку(Метро.ВыгрузитьЗначения(),"Метро");
		МетроПоМаршрутизатору.ЗаполнитьЗначения(0,"УдаленностьОтКлиента");
	КонецЕсли;
	
	Если ВсеАптеки=1 Тогда 
		ЗапросПоОстаткамТоваров.УстановитьПараметр("ОсуществляетДоставкуКлиенту",Ложь);
	Иначе
		ЗапросПоОстаткамТоваров.УстановитьПараметр("ОсуществляетДоставкуКлиенту",Истина);
	КонецЕсли;
	
	ЗапросПоОстаткамТоваров.УстановитьПараметр("ВсеСубъектыРФ", СубъектыРФ.Количество()=0);
	ЗапросПоОстаткамТоваров.УстановитьПараметр("СубъектыРФ", СубъектыРФ);
	
	
	ЗапросПоОстаткамТоваров.УстановитьПараметр("ГруппировкаБрендов",БрендАС);
	ЗапросПоОстаткамТоваров.УстановитьПараметр("МетроПоМаршрутизатору",МетроПоМаршрутизатору);
	ЗапросПоОстаткамТоваров.УстановитьПараметр("ТекДата",ТекущаяДата());
	ЗапросПоОстаткамТоваров.УстановитьПараметр("МинОстаток",МинОстаток);
	
	//---------------<При начатом бронировании на аптеке нужно отсеить все кроме аптеки на которую начато бронирование>---------------------------// GtG // 14.05.2013 12:25:30
	ЗапросПоОстаткамТоваров.УстановитьПараметр("БронированиеПоАптеке",ПоАптекеБронирования);
	Если ПоАптекеБронирования=Истина ТОгда
		ЗапросПоОстаткамТоваров.УстановитьПараметр("АптекаБронирования",ТекущаяАптекаБронирования);
	Иначе
		ЗапросПоОстаткамТоваров.УстановитьПараметр("АптекаБронирования",NULL);
	КонецЕсли;	
	//---------------<>---------------------------// GtG // 14.05.2013 12:25:36
	
	
	
	Рез=ЗапросПоОстаткамТоваров.Выполнить().Выгрузить();
	
	ЭлементыФормы.ТП.Значение=Рез;
	Если РольДоступна("ЧужаяСправочнаяСлужба") Тогда
		ТП.Сортировать("Цена");
	КонецЕсли;
	ЭлементыФормы.ТП.СоздатьКолонки();
	
	
	Если ТП.Количество()=0 Тогда
		ЭлементыФормы.ТоварОстатков.ЦветТекста=Новый Цвет(255,0,0);
		ЭлементыФормы.ТоварОстатков.Заголовок=""+сокрлп(ЭлементыФормы.АП.ТекущаяСтрока.Товар)+"  Нет на остатках!";
	КонецЕсли;	
	
	Попытка	
		ЭлементыФормы.ТП.Колонки["КодАптеки"].Ширина=5;    
		ЭлементыФормы.ТП.Колонки["Аптека"].Ширина=50;    
		ЭлементыФормы.ТП.Колонки["Метро"].Ширина=25;
		ЭлементыФормы.ТП.Колонки["СубъектРФ"].Ширина=25;
		ЭлементыФормы.ТП.Колонки["Остаток"].Ширина=10;    
	//	ЭлементыФормы.ТП.Колонки["В_пути"].Ширина=10;    
		ЭлементыФормы.ТП.Колонки["Цена"].Ширина=10;    
		ЭлементыФормы.ТП.Колонки["ЕИТ"].Ширина=5;    
		ЭлементыФормы.ТП.Колонки["ТелефонДляСправки"].Ширина=30;    
		ЭлементыФормы.ТП.Колонки["РежимРаботы"].Ширина=25;    
		ЭлементыФормы.ТП.Колонки["Мин_Розн_Цена"].Ширина=10;    
		ЭлементыФормы.ТП.Колонки["К"].Ширина=5;    
		ЭлементыФормы.ТП.Колонки["Доставка"].Видимость=Ложь;//    ЭлементыФормы.ТП.Колонки["Доставка"].Ширина=10;    
		ЭлементыФормы.ТП.Колонки["ОсуществляетБронирование"].Видимость=Ложь;//    ЭлементыФормы.ТП.Колонки["ОсуществляетБронирование"].Ширина=10;    
		ЭлементыФормы.ТП.Колонки["УдаленностьОтКлиента"].Видимость=Ложь;    //ЭлементыФормы.ТП.Колонки["УдаленностьОтКлиента"].Ширина=10;    
		ЭлементыФормы.ТП.Колонки["Производитель"].Ширина=15;    
		ЭлементыФормы.ТП.Колонки["Товар"].Видимость=Ложь; //   ЭлементыФормы.ТП.Колонки["Товар"].Ширина=10;
		ЭлементыФормы.ТП.Колонки["СрокГодности"].Ширина = 15;
		ЭлементыФормы.ТП.Колонки["СрокГодности"].Формат = "ДФ=dd.MM.yyyy";
		
		//ТСО 08.11.2014
		Если ПоказыватьДатуПоследнейПоставки Тогда
			ЭлементыФормы.ТП.Колонки["ПоследняяПоставка"].Ширина = 15;
			ЭлементыФормы.ТП.Колонки["ПоследняяПоставка"].Формат = "ДФ=dd.MM.yyyy";
		КонецЕсли;
		
		//15.01.2015
		ЭлементыФормы.ТП.Колонки["Партия"].Видимость = Ложь; 		
		//*ТСО
		
		//Если ЭтоЧужаяСС=Истина Тогда // Прячем колонки остатков
		//	ЭлементыФормы.ТП.Колонки["Мин_Розн_Цена"].Видимость=Ложь;
		//	ЭлементыФормы.ТП.Колонки["К"].Видимость=Ложь;
		//	ЭлементыФормы.ТП.Колонки["Доставка"].Видимость=Ложь;
		//КонецЕсли;	
		//
		//
		//
		ЭлементыФормы.ТП.Колонки["Производитель"].Видимость=ПоказыватьПроизводителя;
		//
		//
		//
		////---------------<Форматируем заголовки колонок>---------------------------// GtG // 31.10.2012 10:46:06 
		//Для Каждого Кол Из ЭлементыФормы.ТП.Колонки Цикл
		//	Кол.ТекстШапки=СтрЗаменить(Кол.ТекстШапки,"_"," ");
		//КонецЦикла;
		//
	исключение
	КонецПопытки;
	
КонецПроцедуры


Процедура АППередНачаломИзменения(Элемент, Отказ)
	КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");

	Отказ=Истина;
КонецПроцедуры

Процедура АППередИзменениемРодителя(Элемент, Отказ)
	Отказ=истина;
КонецПроцедуры

Процедура АППередУстановкойПометкиУдаления(Элемент, Отказ)
	Отказ=истина;
КонецПроцедуры

Процедура АПВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");
	ЭлементыФормы.Панель1.ТекущаяСтраница=ЭлементыФормы.Панель1.Страницы.ОстаткиТовараПоАптекам;

	
	//УстановитьФильтрПоСпецЦенам();
	
	
	
КонецПроцедуры

Процедура ХНажатие(Элемент)
	
	Ответ=Вопрос("Закрыть окно справочной службы?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.ДА,"Закрыть?"); 
	
	Если Ответ=КодВозвратаДиалога.Да ТОгда
		ЭтаФорма.Закрыть();
	КонецЕсли;
КонецПроцедуры

Процедура РегионПриИзменении(Элемент)
	
	КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");

	
КонецПроцедуры

Процедура МетроПриИзменении(Элемент)
	КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");
КонецПроцедуры

Процедура МинОстатокПриИзменении(Элемент)
	КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");
КонецПроцедуры



//==========================================================GtG====
Процедура Послать (Тема,ТекстПисьма,АдресАптеки)  
	//----------------------------------
	//Назначение:
	//  
	//  
	//  Отправка письма
	//  
	//----------------------------------
	
	 // Вставить содержимое обработчика.
	 АдресСервераPOP3=Константы.АдресСервераPOP3.Получить();
	 АдресСервераSMTP=Константы.АдресСервераSMTP.Получить();
	 ВремяОжидания=Константы.ВремяОжидания.Получить();
	 Пароль=Константы.ПарольПочтыСклада.Получить();
	 ПарольSMTP=Константы.ПарольПочтыСклада.Получить();
	 Пользователь=Константы.ИмяПользователяПочты.Получить();
	 ПользовательSMTP=Пользователь;
	 ПортPOP3=Константы.ПортPOP3.Получить();
	 ПортSMTP=Константы.ПортSMTP.Получить();
	 Отправитель=Константы.ПользовательПочты.Получить();

	 
	// ПОПЫТКА // СРАЗУ ВСЕ СДЕЛАТЬ КУЧЕЙ
		 ЭП = Новый ИнтернетПочта;
		 
		 ПоПро=Новый ИнтернетПочтовыйПрофиль;
		 
		 ПоПро.АдресСервераPOP3=АдресСервераPOP3;
		 ПоПро.АдресСервераSMTP=АдресСервераSMTP;
		 ПоПро.ВремяОжидания=ВремяОжидания;
		 ПоПро.Пароль=Пароль;
		 ПоПро.ПарольSMTP=ПарольSMTP;
		 ПоПро.Пользователь=Пользователь;
		 ПоПро.ПользовательSMTP=ПользовательSMTP;
		 ПоПро.ПортPOP3=ПортPOP3;
		 ПоПро.ПортSMTP=ПортSMTP;

		 
		 ЭП.Подключиться(ПоПро);
		 
		 Мессага=Новый ИнтернетПочтовоеСообщение ;
		 Мессага.Отправитель=Отправитель;
		 Мессага.Кодировка="windows-1251";
		 
		 
		 Мессага.Получатели.Добавить(СокрЛП(АдресАптеки));
		 Мессага.Получатели.Добавить(СокрЛП("info@apteka-ave.ru")); // копия
		 
		 Мессага.Тема=Тема;
		 ТхтП=Мессага.Тексты.Добавить(ТекстПисьма);
		 ТхтП.ТипТекста=ТипТекстаПочтовогоСообщения.ПростойТекст;
		 ТхтП.Кодировка="windows-1251";
		 
		 
		 Попытка
			 ЭП.Послать(Мессага);
		 ИСключение
		
		 КонецПопытки;
		 
		 ПРедупреждение("Отправлено письмо по адресу "+АдресАптеки+" !",1);
		 
		 
	 //ИСКЛЮЧЕНИЕ  // ПРОБЛЕМА С ОТПРАВКОЙ
	 //	
	 //КОНЕЦПОПЫТКИ;
	 
КонецПроцедуры	//Послать

Процедура АППриАктивизацииСтроки(Элемент)
	
	МинОстаток=1;
	
	Если ЭлементыФормы.КПБронированияИА.Кнопки.Найти("ДобавитьВКорзину")=Неопределено ТОгда
		Возврат;
	КонецЕсли;	
	
	Если Элемент.ТекущаяСтрока.МинЦенаMedlux =0 Тогда
		ЭлементыФормы.КПБронированияИА.Кнопки.ДобавитьВКорзину.Доступность=Ложь;
		ЭлементыФормы.КПБронирования.Кнопки.ДобавитьВИнтернетЗаказ.Доступность=Ложь;
	иначе	
		ЭлементыФормы.КПБронированияИА.Кнопки.ДобавитьВКорзину.Доступность=Истина;
		ЭлементыФормы.КПБронирования.Кнопки.ДобавитьВИнтернетЗаказ.Доступность=Истина;
	КонецЕсли;	
	
	//КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");

	
КонецПроцедуры

Процедура ПриОткрытии()
	
	//Заполним список регионов
	
	//-------------- ЗАПРОС GTG --------------------------НАЧАЛО
	//Назначение: Список рабочих регионов
	//
	
//	ЭлементыФормы.Регион.Значение=0;
	
	ЭлементыФормы.Версия.Заголовок=Версия;
	
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	Метро.Ссылка
	                    |ИЗ
	                    |	Справочник.Метро КАК Метро
	                    |ГДЕ
	                    |	Метро.ПометкаУдаления = ЛОЖЬ
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	Метро.Наименование
	                    |АВТОУПОРЯДОЧИВАНИЕ");
	Метро.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));					
    Метро.ЗаполнитьПометки(Истина);
	
	//-------------- ЗАПРОС GTG --------------------------КОНЕЦ
	
	Для Ы=0 По 3 Цикл
		ОчиститьКорзину(Ы);// ПРИ ЗАПУСКЕ КОРЗИНА ДОЛЖНА БЫТЬ ПУСТА
	КонецЦикла;
	
	УправлениеВидимостью_ПоПравамПользователя();
	
	ПроцНачалоРазговора();
	
	ЖурналЗаказов.Порядок.Установить("Дата desc");	
	
	
	
	// покажем все товары независимо от наличия интернет цены
	Кнопка1Нажатие("");
	// установить фильтр на товар с интернет ценой ТСИЦНажатие("");

	СоздатьКнопкиБрендовАС();
	
	ПолучитьСрезОстатков();
	
	ПодключитьОбработчикОжидания("ПолучитьСрезОстатков",5000); // автоматический перезапрос остатков раз в пол-часа
	
	//СИнтЦеной = 1;
	
	
КонецПроцедуры

Процедура СоздатьКнопкиБрендовАС()
	
	ПанБренд=ЭлементыФормы.ПанельБрендовАС;
	ПанБренд.Кнопки.Очистить();
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	ГруппировкаБрендовДляСС.Ссылка,
	                    |	ГруппировкаБрендовДляСС.Наименование,
	                    |	ВЫРАЗИТЬ("""" КАК СТРОКА(250)) КАК Кнопка,
	                    |	ГруппировкаБрендовДляСС.Код,
	                    |	ГруппировкаБрендовДляСС.ПоУмолчанию
	                    |ИЗ
	                    |	Справочник.ГруппировкаБрендовДляСС КАК ГруппировкаБрендовДляСС");
	 ТабБрендовАС=Запрос.Выполнить().Выгрузить();
	 ТабБрендовАС.Добавить().Ссылка=Справочники.ГруппировкаБрендовДляСС.ПустаяСсылка();
	 
	 Для Каждого Стр Из ТабБрендовАС Цикл
		 
		 Кнопь=ПанБренд.Кнопки.Добавить("БрендАС_"+Стр.Код,ТипКнопкиКоманднойПанели.Действие,СокрЛП(Стр.Наименование),Новый Действие("ВыбратьФильтрПоБрендуАС"));
		 Кнопь.Текст=?(ПустаяСтрока(Стр.Наименование)=Истина,"ВСЕ",СокрЛП(Стр.Наименование));
		 Стр.Кнопка=Кнопь.Имя;
		 
		 Разд=ПанБренд.Кнопки.Добавить("Разделитель_"+Стр.Код,ТипКнопкиКоманднойПанели.Разделитель);
		 
		 Если БрендАС=Стр.Ссылка или ( БрендАС.пустая()=истина и Стр.Ссылка.Пустая()=Истина) ТОгда
			 АктивизироватьКнопку=Кнопь;
		 КонецЕсли; 
					 
	 КонецЦикла;
	 
	 
	 ВыбратьФильтрПоБрендуАС (АктивизироватьКнопку);

КонецПроцедуры	

Процедура ВыбратьФильтрПоБрендуАС (Кнопка)
	
	Если ТипЗнч(Кнопка)=Тип("СправочникСсылка.ГруппировкаБрендовДляСС") ТОгда
		// По переданному в параметре бренду АС нажимаем кнопку 
		БрендАС=Кнопка;
		ИмяКнопки=ТабБрендовАС.Найти(Кнопка,"Ссылка").Кнопка;
		
		
		Для Каждого Кнопь Из ЭлементыФормы.ПанельБрендовАС.Кнопки Цикл
			Кнопь.Пометка= Ложь;   
			Если Кнопь.Имя=ИмяКнопки Тогда
				Кнопь.Пометка=Истина;
			КонецЕсли;	
		КонецЦикла;
		
	Иначе	
		// По нажатой кнопке устанавливаем бренд ас 
		Для Каждого Кнопь Из ЭлементыФормы.ПанельБрендовАС.Кнопки Цикл
			Кнопь.Пометка= Ложь;   
			Если Кнопь=Кнопка Тогда
				Кнопь.Пометка=Истина;
			КонецЕсли;	
		КонецЦикла;
		
		Если типЗнч(Кнопка)=Тип("СправочникСсылка.БрендыАптечныхСетей") тогда
			БрендАС=Кнопка;
		Иначе	
			БрендАС=ТабБрендовАС.Найти(Кнопка.Имя,"Кнопка").Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(Кнопка)=Ложь Тогда
		КоманднаяПанель2ОстаткиТОвараПоАптекам_F5(Кнопка);
	КонецЕсли;

	
КонецПроцедуры	

Процедура КоманднаяПанель2КартаАптек(Кнопка)
	
	////ЗапуститьПриложение("http://maps.yandex.ru/?um=HMrzYVZKa1zsUlN01YVbI5rR1t4lujt8&ll=37.608167%2C55.847634&spn=0.363243%2C0.14042");
	//АдресЯндексКарт=Константы.ЯндексКартаСРасположениемАптек.Получить();
	//Если ПустаяСтрока(АдресЯндексКарт)=Истина Тогда
	//	Предупреждение("Не задано значение константы Яндекс карта с расположением аптек!");
	//	Возврат;
	//КонецЕсли;	
	//ЗапуститьПриложение(АдресЯндексКарт);
	//// Для редактирования карты зайти на Yandex.maps логин A5TS пароль GTG1925624gtg
	
	Попытка
	ОМ_СправочнаяСлужба.ОМСС_ПоказатьВБраузере(Константы.ЯндексКартаСРасположениемАптек.Получить());
Исключение
	ПРедупреждение("Не задана константа Карта с расположением аптек!");
	КонецПопытки;

	
	
КонецПроцедуры

Процедура РегионОчистка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ПолеВвода1ПриИзменении(Элемент)
	КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");
КонецПроцедуры

Процедура КоманднаяПанель2ДефектураПоСтроке(Кнопка)
	ЗаписьДефектуры=Документы.ДефектураСС.СоздатьДокумент();
	ЗаписьДефектуры.Дата=ТекущаяДата();
	ЗаписьДефектуры.Автор=ПараметрыСеанса.ТекущийСотр;
	ЗаписьДефектуры.Товар=ЭлементыФормы.АП.ТекущаяСтрока.Товар;
	ЗаписьДефектуры.Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры

Процедура КоманднаяПанель2ДефектураТексом(Кнопка)
	
	ЗаписьДефектуры=Документы.ДефектураСС.СоздатьДокумент();
	ЗаписьДефектуры.Дата=ТекущаяДата();
	ЗаписьДефектуры.Автор=ПараметрыСеанса.ТекущийСотр;
	ЗаписьДефектуры.Товар="";
	
	ФД=ЗаписьДефектуры.ПолучитьФорму("ФормаДокумента");
	ФД.ОткрытьМодально();
	
КонецПроцедуры

Процедура КоманднаяПанель2ИсточникИнформации(Кнопка)

	ИИ=ЭтотОбъект.ПолучитьФорму("ИсточникиИнформации");
	ИИ.ОткрытьМодально();
	
КонецПроцедуры

Процедура КоманднаяПанель1Действие(Кнопка)
	ПодходящиеСтанцииМетро.Очистить();
	Метро.ЗаполнитьПометки(Истина);
	КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");

КонецПроцедуры

Процедура КоманднаяПанель1Действие1(Кнопка)
	
	ПодходящиеСтанцииМетро.Очистить();
	Метро.ЗаполнитьПометки(Ложь);
	ТП.Очистить();
	//КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");


КонецПроцедуры

Процедура УстановкаСвязанныхПометокСтанцийМетро()
	ОтмечаемоеМетро=ЭлементыФормы.Метро.ТекущаяСтрока.Значение;
	Пометка=ЭлементыФормы.Метро.ТекущаяСтрока.Пометка;
	ЗапросПометкиМетро.УстановитьПараметр("ОтмечаемоеМетро",ОтмечаемоеМетро);
	
	Рез=ЗапросПометкиМетро.Выполнить();
	
	Если Рез.Пустой()=Ложь ТОгда
		
		
		Выб=Рез.Выбрать();
		Пока Выб.Следующий() Цикл
			ИзмСтанция=Метро.НайтиПоЗначению(Выб.Станция);
			Если ИзмСтанция<> Неопределено Тогда
				ИзмСтанция.Пометка=Пометка;
			КонецЕсли;
				
		КонецЦикла;
		
		
		
	КонецЕсли;	

	КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");

КонецПроцедуры



Процедура МетроПриИзмененииФлажка(Элемент)
	ПодходящиеСтанцииМетро.Очистить();
	
	ПодключитьОбработчикОжидания("УстановкаСвязанныхПометокСтанцийМетро",0.1,Истина);
		
	//КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");

КонецПроцедуры

Процедура КоманднаяПанель3ОтправитьПисьмоВАптеку(Кнопка)
	
	Если ПустаяСтрока(ФИО)=Истина Тогда
		Предупреждение("Не заполнено ФИО клиента!");
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Тел)=Истина Тогда
		Предупреждение("Не заполнен Тел. клиента!");
		Возврат;
	КонецЕсли;
	
	
	ТекстФайлаЦСВ=Новый ТекстовыйДокумент();
	
	
	ПсевдоИД=Новый УникальныйИдентификатор();   
	ТекДата=Формат(ТекущаяДата(),"ДЛФ=D");

	Тема="### БРОНИРОВАНИЕ ТОВАРА ### "+ТекущаяДата();
	
	ТекстПисьма="----------------------------------------------------------------------------
				|ID брони : "+ПсевдоИД+"   Дата: "+ТекДата+"
				|----------------------------------------------------------------------------
				|НОМЕР БРОНИ : "+НомерБрони+"
				|ФИО клиента : "+ФИО+" 
				|Телефон     : "+Тел+" 
				|Комментарий : "+КомментарийБронирования+"
				|----------------------------------------------------------------------------
				|
				|";
				 ХХ=0;
				 
				 
				 
				 
				 Для Каждого Стр Из ТаблицаБронирования Цикл   
					АптекаДляСМС=Стр.Аптека;
					АдресАптеки=Стр.Аптека.Мэйл;
					
					ХХ=ХХ+1;
					
				ТекстПисьма=ТекстПисьма+" "+ХХ+")  "+Стр.Товар+" ....... "+Стр.Количество+" "+Стр.ЕИТ+"...."+Стр.Цена+" руб.
				|";
				
				
				КомментарийДляЦСВ=СтрЗаменить(КомментарийБронирования,";"," ");
				КомментарийДляЦСВ=СтрЗаменить(КомментарийДляЦСВ,Символы.ПС," ");
				
				
				
								
				ТекстФайлаЦСВ.ДобавитьСтроку(""+ПсевдоИД+";"+
												формат(НомерБрони,"ЧГ=")+";"+
												ТекДата+";"+
												Формат(Стр.Аптека.Код,"ЧГ=")+";"+
												ФИО+";"+
												Тел+";"+
												Формат( Стр.ЕИТ.код,"ЧГ=")+";"+
												СтрЗаменить( Стр.Товар.Наименование,";"," ")+";"+
												Стр.Количество+";"+
												Формат( Стр.Цена,"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧГ=")+";"+
												Стр.ЕИТ+";"+
												сокрлп( СтрЗаменить(КомментарийДляЦСВ,";","")   )+";"+
												Формат( Стр.Аптека.Бренд.код,"ЧГ=")+";"+
												СокрЛП( СтрЗаменить(ИмяПользователя(),";","") ));
				
				
				
			КонецЦикла;	
			
			ТекстПисьма=ТекстПисьма+"----------------------------------------------------------------------------";
			
			ТекстФайлаЦСВ.Записать(Константы.КаталогФТП.Получить()+"reserve\"+ПсевдоИД+".csv",КодировкаТекста.UTF8);
			

			//---------------<Отправим еще и СМС-ку в аптеку, если у нее имеется телефон для смс информирования>---------------------------// GtG // 19.04.2013 18:18:29
			
			Если  ПустаяСтрока(АптекаДляСМС.ТелефонДляSMSИнформирования)=Ложь и ОтправитьSMSвАптеку=Истина тогда
				 ОтправительСМС=Обработки.ОтправкаСМС.Создать();
				 ОтправительСМС.Номер=АптекаДляСМС.ТелефонДляSMSИнформирования;
				 ОтправительСМС.ТекстСообщения="БРОНЬ! №"+формат(НомерБрони,"ЧГ=")+" "+ТекДата+" "+Сокрлп(ФИО)+" ["+ТаблицаБронирования.Количество()+"]";
				 ОтправительСМС.ТипСМССообщения=Перечисления.ТипыСМССообщений.Служебное;
				 ОтправительСМС.МО_ОтправитьСМС();
			КонецЕсли;
			
			
	Предупреждение ("Создана бронь №"+НомерБрони+"
	|Сообщите этот номер клиенту.
	|Он потребуется когда клиент будет забирать заказ из аптеки!");
			
	
	
	КоманднаяПанель3ОчиститьСписокТоваров(Кнопка);
	СписокТоваров.Очистить();
	СписокАптекДляСпискаТоваров.Строки.Очистить();
	ТекущаяАптекаБронирования="";
	ПоАптекеБронирования=Ложь;
КонецПроцедуры


Процедура КоманднаяПанель3ОчиститьСписокТоваров(Кнопка)
	ТаблицаБронирования.Очистить();
	ФИО="";
	КомментарийБронирования="";
	Тел="";
	Клиент="";
	ТекущаяАптекаБронирования="";
	ПоАптекеБронирования=Ложь;
КонецПроцедуры

Процедура КоманднаяПанель4Забронировать(Кнопка)
	
	КолвоСтрокБрониДоНачалаБронирования=ТаблицаБронирования.Количество();
	
	
	
	ТекСтрока=ЭлементыФормы.ТП.ТекущаяСтрока;
	ТекТовар=ЭлементыФормы.АП.ТекущаяСтрока.Товар.ссылка;
	
	Если ТаблицаБронирования.Количество()<>0 тогда
		ПерваяАптекаБрони=ТаблицаБронирования.Получить(0).Аптека;
		
		
		
		Если ТекСтрока.Аптека<> ПерваяАптекаБрони Тогда
			ПРедупреждение("Бронирование для самовывоза уже начато на аптеку "+ПерваяАптекаБрони +"!");
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	
	ПоАптекеБронирования= Истина;
	
	//---------------<Колво>---------------------------// GtG // 31.08.2012 12:49:06
	Количество=0;
	
	ФВК=ЭтотОбъект.ПолучитьФорму("ФормаВводаКоличества",ЭтаФорма,1);
	
	ФВК.МаксКолво=ТекСтрока.Остаток;
	ФВК.ТОвар=ТекТовар;
	ФВК.Цена=ТекСтрока.Цена;
	ФВК.Количество=Количество;
	ФВК.ЕИТ=ТекСтрока.ЕИТ;
	
	ФВК.ОткрытьМодально();
	
	Количество=ФВК.Количество;

	
	
	
	СтрБр=ТаблицаБронирования.Добавить();
	СтрБр.Товар=ТекТовар;
	СтрБр.Аптека=ТекСтрока.Аптека;
	СтрБр.Цена=ТекСтрока.Цена;
    СтрБр.Количество=Количество;
	СтрБр.ЕИТ=ТекСтрока.ЕИТ;
	
	ТаблицаБронирования.Свернуть("Товар,Аптека,Цена,ЕИТ","Количество");
	
	Если КолвоСтрокБрониДоНачалаБронирования=0 и ТаблицаБронирования.Количество()<>0 ТОгда
		НомерБрони=ОМ_СправочнаяСлужба.ОМСС_ПолучитьНомерБрони();
	КонецЕсли;	
	
	ТекущаяАптекаБронирования=ТаблицаБронирования.Получить(0).Аптека;
	
КонецПроцедуры


Процедура ПересчетСтрокВКорзине()  эКСПОРТ
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	ЕСТЬNULL(СУММА(1), 0) КАК КолвоСтрокВКорзине,
	                    |	Корзина.НомерКорзины
	                    |ИЗ
	                    |	РегистрСведений.Корзина КАК Корзина
	                    |ГДЕ
	                    |	Корзина.Пользователь = &Пользователь
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Корзина.НомерКорзины");
	Запрос.УстановитьПараметр("Пользователь",ПараметрыСеанса.ТекущийСотр);
	
	Рез=Запрос.Выполнить().Выгрузить();
	
	Для Ы=1 по 3 Цикл
		ЭлементыФормы["КорзинаN"+Ы].Заголовок="Корзина №"+Ы;
	КонецЦикла;	
	
	
	Для каждого Стр из Рез Цикл
		ЭлементыФормы["КорзинаN"+стр.НомерКорзины].Заголовок="Корзина №"+стр.НомерКорзины+" ("+Стр.КолвоСтрокВКорзине+")";
	КонецЦикла;	
	
	//Если Рез.Количество()=0 Тогда
	//	ЭлементыФормы.КоманднаяПанель2.Кнопки.Корзина.Текст="Корзина";
	//Иначе
	//	ЭлементыФормы.КоманднаяПанель2.Кнопки.Корзина.Текст="Корзина ("+Рез.Получить(0).КолвоСтрокВКорзине+")";
	//КонецЕсли;	
						
	
КонецПроцедуры	


Процедура ОбновлениеОтображения()
	Если ТаблицаБронирования.Количество()<>0 Тогда
		АптекаБронирования=ТаблицаБронирования.Получить(0).Аптека;
	Иначе	
		АптекаБронирования="";
	КонецЕсли;	
	
	ЭлементыФормы.Панель1.Страницы.Бронирование.Заголовок="Самовывоз ("+ТаблицаБронирования.Количество()+") "+АптекаБронирования;	
	ЭлементыФормы.Панель1.Страницы.СписокТоваров.Заголовок="Список товаров ("+СписокТоваров.Количество()+")";	
	
КонецПроцедуры


Процедура ПросмотрВБраузере(Аптека)
	Попытка
	ОМ_СправочнаяСлужба.ОМСС_ПоказатьВБраузере(Аптека.АдресАптекиНаСайте);
Исключение
	// когда нт остатка
	КонецПопытки;

	
КонецПроцедуры	


Процедура КоманднаяПанель2ПросмотрВБраузере(Кнопка)
	если ЭлементыФормы.ТП.ТекущаяСтрока<>неопределено тогда
	ПросмотрВБраузере(ЭлементыФормы.ТП.ТекущаяСтрока.Аптека);
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель3ПросмотрВБраузере(Кнопка)
	
	ТекСтрока = ЭлементыФормы.СписокАптекДляСпискаТоваров.ТекущаяСтрока;
	Если ТекСтрока <> Неопределено тогда
		
		Если ТекСтрока.Родитель = Неопределено Тогда
			БАптека=ТекСтрока.ДанныеСтроки;
		Иначе
			БАптека=ТекСтрока.Родитель.ДанныеСтроки;
		КонецЕсли;

		
		ПросмотрВБраузере(БАптека);
		
	КонецЕсли;
	
КонецПроцедуры








Процедура КоманднаяПанель1МетроНаКарте(Кнопка)
	
	ПОПЫТКА
		
		Если ПустаяСтрока(ЭлементыФормы.Метро.ТекущаяСтрока.Значение.АдресНаСайте)=Истина Тогда
			Предупреждение("У этого метро не задана ссылка на карту!");
			Возврат;
		КонецЕсли;
		ОМ_СправочнаяСлужба.ОМСС_ПоказатьВБраузере(ЭлементыФормы.Метро.ТекущаяСтрока.Значение.АдресНаСайте);
	иСКЛЮЧЕНИЕ
		Предупреждение("Не выбрано метро!");
	КонецПопытки;
	
	
	
	
КонецПроцедуры

Процедура КПБронированияДобавитьВИнтернетЗаказ(НомерКорзины)
	
	ТекСтрока=ЭлементыФормы.ТП.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	ТОвар=ЭлементыФормы.АП.ТекущаяСтрока.Товар;
	
	Если Товар.ОтпускПоРецепту = Истина Тогда
		Предупреждение("Отпуск данного препарата осуществляется строго по рецепту, предупредите клиента",10);
	КонецЕсли;
	
	Количество=0;
	
	ФВК=ЭтотОбъект.ПолучитьФорму("ФормаВводаКоличества",ЭтаФорма,1);
	
	ФВК.МаксКолво=ТекСтрока.Остаток;
	ФВК.ТОвар=Товар;
	ФВК.Цена=ТекСтрока.Цена;
	ФВК.Количество=Количество;
	
	
	//---------------<Контроль понижения цены от интернет цены>---------------------------// GtG // 31.08.2012 14:56:15
	Если ТОвар.МинЦенаMedlux<>0 Тогда
		ФВК.МинимальноДопустимаяЦена=ТОвар.МинЦенаMedlux-ТОвар.МинЦенаMedlux/100*5; //инет цена -5%
	Иначе
		ФВК.МинимальноДопустимаяЦена=ТекСтрока.Мин_Розн_Цена;
	КонецЕсли;	

	ФВК.еит=ТекСтрока.ЕИТ;
	
	
	
	ФВК.ОткрытьМодально();
	
	Количество=ФВК.Количество;
	ЕИТ=ФВК.ЕИТ;
	Цена=ФВК.Цена;
	
	ДобавитьВКорзину(ТекСтрока.Аптека,ТОвар,Цена,Количество,ЕИТ,НомерКорзины);
	ПересчетСтрокВКорзине();
КонецПроцедуры

Процедура ОткрытьКорзину(НомерКорзины)
	ФормаКорзины=ЭтотОбъект.ПолучитьФорму("ФормаЗаказа",ЭтаФорма,НомерКорзины);
	ФормаКорзины.НомерКорзины=НомерКорзины;
	ФормаКорзины.Открыть();
	ЭтаФорма.Обновить();
	ПересчетСтрокВКорзине();

КонецПроцедуры

Процедура КнДобавитьВКорзину(НомерКорзины,ТоварИзСписка=Неопределено,КолвоИзСписка=0)
	// По интернет цене, если нет то по цене остатка если такая есть, или вводить руками
	
	если ТоварИзСписка=Неопределено тогда
		ТекТОвар=ЭлементыФормы.АП.ТекущаяСтрока.Товар;
	иначе
		ТекТОвар=ТоварИзСписка;
	КонецЕсли;
	
	//Если ТекТОвар.МинЦенаMedlux=0 Тогда
	//	Предупреждение("У товара "+ТекТОвар+" нет интернет цены!",2);
	//	Возврат;
	//КонецЕсли;
	
	Если ТекТОвар.ОтпускПоРецепту = Истина Тогда
		Предупреждение("Отпуск данного препарата осуществляется строго по рецепту, предупредите клиента",10);
	КонецЕсли;	
	
	Количество=0;
	Цена=ТекТОвар.МинЦенаMedlux;  // за единицу на сайте. 
								  //Считаем, что на сайт выгружен обычный товар в единицах по умолчанию, 
								  //а разбивочный в единице из справочника ИА_Разбивочный товар, 
								  //а если там нет то в единице по умолчанию
	Если ТекТОвар.Разбивается=Истина Тогда
		//Ищем в каких единицах этот товар представлен на сайте							  
		Запрос=Новый Запрос("ВЫБРАТЬ
		                    |	ИА_РазбивочныйТовар.Товар,
		                    |	ИА_РазбивочныйТовар.ЕИТ_НаСайте
		                    |ИЗ
		                    |	Справочник.ИА_РазбивочныйТовар КАК ИА_РазбивочныйТовар
		                    |ГДЕ
		                    |	ИА_РазбивочныйТовар.Товар = &Товар");						  
		Запрос.УстановитьПараметр("Товар",ТекТОвар);
		Рез=Запрос.Выполнить().Выгрузить();
		Если Рез.Количество()=0 Тогда
			ЕИТ=ТекТОвар.ЕдиницаПоУмолчанию ; // нет записи в справочнике- считаем что в единицах по умолчанию (более крупных)
		Иначе
			ЕИТ=Рез.Получить(0).ЕИТ_НаСайте ;
		КонецЕсли;	
	Иначе
		ЕИТ=ТекТОвар.ЕдиницаПоУмолчанию ;// обычный товар считается что в единицах по умолчанию
	КонецЕсли;	
	
	
	если ТоварИзСписка=Неопределено тогда
		ФВК=ЭтотОбъект.ПолучитьФорму("ФормаВводаКоличества",ЭтаФорма,1);
		
		ФВК.МаксКолво=0;
		ФВК.ТОвар=ТекТОвар;
		ФВК.ЕИТ=ЕИТ;
		
		ФВК.Цена=ТекТОвар.МинЦенаMedlux;
		ФВК.Количество=Количество;
		//---------------<Контроль понижения цены от интернет цены>---------------------------// GtG // 31.08.2012 14:56:15
		// МинимальноДопустимаяЦена за единицу на сайте
		Если ТекТОвар.МинЦенаMedlux<>0 Тогда
			ФВК.МинимальноДопустимаяЦена=ТекТОвар.МинЦенаMedlux-ТекТОвар.МинЦенаMedlux/100*5; //инет цена -5%
		Иначе
			ФВК.МинимальноДопустимаяЦена=0;
		КонецЕсли;	
		
		
		
		
		ФВК.ОткрытьМодально();
		
		Количество=ФВК.Количество;
		Цена=ФВК.Цена; // а вдруг поменяли
		ЕИТ=ФВК.ЕИТ; // а вдруг поменяли
	Иначе
		Цена=ТекТОвар.МинЦенаMedlux;
        Количество=КолвоИзСписка;
	КонецЕсли;
	
	Если Количество=0 ТОгда
		ПРедупреждение("Не указано количество. Товар в корзину не добавлен!",2);
		Возврат;
	КонецЕсли;	
		
	
	ДобавитьВКорзину("",ТекТОвар,Цена,Количество,ЕИТ,НомерКорзины);
	ПересчетСтрокВКорзине();

КонецПроцедуры

Процедура ПриЗакрытии()
	Для Ы=1 по 3 цикл
		ОчиститьКорзину(Ы);// ПРИ закрытии КОРЗИНА ДОЛЖНА БЫТЬ ПУСТА
	КонецЦикла;
	
КонецПроцедуры


//---------------<Сценарий разговора>---------------------------// GtG // 31.08.2012 16:28:44

Функция ПолучитьОбластьНачалаРазговора()
	Макет=ЭтотОбъект.ПолучитьМакет("ВопросыИОтветы");
	Область=Макет.ПолучитьОбласть("Начало");
	ПараметрРасшНачала=Новый Структура("Тип,Ссылка","Ответ",НачалоРазговора);
	Область.Параметры.РасшифровкаОтвета=ПараметрРасшНачала;
	Возврат Область;
КонецФункции	

Процедура ПроцНачалоРазговора()
	ЭлементыФормы.ТабРазговора.Очистить();
	
	ЭлементыФормы.ТабРазговора.Вывести(ПолучитьОбластьНачалаРазговора());
	
	ВывестиОтвет(НачалоРазговора);
	
	
КонецПроцедуры	

Процедура ВывестиОтвет(Ответ)
	
	Таб=ЭлементыФормы.ТабРазговора;
	Таб.Очистить();
	Таб.Вывести(ПолучитьОбластьНачалаРазговора());

	
	
	Макет=ЭтотОбъект.ПолучитьМакет("ВопросыИОтветы");
	
	
	Область=Макет.ПолучитьОбласть("Ответ2");
	Область.Параметры.ТекстОтвета=Ответ.Наименование;
	
	Если ПустаяСтрока(Ответ.HTMLСсылка)=Истина Тогда
			 Область.Параметры.ДопИнфа="";
			 Область.Параметры.ДопИнфаРасшифровка="";
		 Иначе	 
			 Область.Параметры.ДопИнфа="Доп. информация";
			 Область.Параметры.ДопИнфаРасшифровка=Новый Структура("Тип,HTMLСсылка","HTML",Ответ.HTMLСсылка);
		КонецЕсли;	 

	
	
	
	Таб.Вывести(Область);
	//ОбластьРазделитель=Макет.ПолучитьОбласть("Разделитель");
		
	Область=Макет.ПолучитьОбласть("Вопрос2");

	Для Каждого СТр Из Ответ.Вопросы Цикл
		//ТабО.Вывести(ОбластьРазделитель);
		Область.Параметры.ТекстВопроса=Стр.Вопрос.Наименование;
		
		РасшифровкаВопроса=Новый Структура("Тип,Ссылка","Вопрос",Стр.Вопрос);
		
		Область.Параметры.РасшифровкаВопроса=РасшифровкаВопроса;
		Таб.Вывести(Область);
	КонецЦикла;
КонецПроцедуры	

Процедура ВывестиВопрос(Вопрос)
Таб=ЭлементыФормы.ТабРазговора;
	Таб.Очистить();
	Таб.Вывести(ПолучитьОбластьНачалаРазговора());

	
	
	Макет=ЭтотОбъект.ПолучитьМакет("ВопросыИОтветы");
	
	
	Область=Макет.ПолучитьОбласть("Вопрос1");
	Область.Параметры.ТекстВопроса=Вопрос.Наименование;
	Таб.Вывести(Область);
			
	Область=Макет.ПолучитьОбласть("Ответ1");

	Для Каждого СТр Из Вопрос.Ответы Цикл
		Область.Параметры.ТекстОтвета=Стр.Ответ.Наименование;
		
		РасшифровкаОтвета=Новый Структура("Тип,Ссылка","Ответ",Стр.Ответ);
		
		Область.Параметры.РасшифровкаОтвета=РасшифровкаОтвета;
		
		Если ПустаяСтрока(Стр.Ответ.HTMLСсылка)=Истина Тогда
			 Область.Параметры.ДопИнфа="";
			 Область.Параметры.ДопИнфаРасшифровка="";
		 Иначе	 
			 Область.Параметры.ДопИнфа="Доп. информация";
			 Область.Параметры.ДопИнфаРасшифровка=Новый Структура("Тип,HTMLСсылка","HTML",Стр.Ответ.HTMLСсылка);
		КонецЕсли;	 
		
		
		Таб.Вывести(Область);
	КонецЦикла;
КонецПроцедуры	

Процедура ОбработкаДополнительныхДействий(ВопросОтвет)
	Запрос=Новый Запрос("ВЫБРАТЬ
	|	СС_ДополнительныеДействия.Параметры,
	|	СС_ДополнительныеДействия.ПрограммныйКод
	|ИЗ
	|	Справочник.СС_ДополнительныеДействия КАК СС_ДополнительныеДействия
	|ГДЕ
	|	СС_ДополнительныеДействия.Владелец = &Владелец
	|	И СС_ДополнительныеДействия.ПометкаУдаления = Ложь");
	Запрос.УстановитьПараметр("Владелец",ВопросОтвет);
	
	ТЗ=Запрос.Выполнить().Выгрузить();
	Если ТЗ.Количество()=0 ТОгда
		Возврат;
	КонецЕсли;
	
	ДЛя Каждого Стр Из ТЗ Цикл // в кждой строке сидит программный блочек и ХЗ с параметрами к нему
		// Выполняем код через Выполнить();
		ПрограммныйКод=Стр.ПрограммныйКод;
		ПКПараметры=Стр.Параметры.Получить(); // Структура из ХранилищаЗначений;
		
		ПрограммныйКод=СтрЗаменить(ПрограммныйКод,"$","ПКПараметры.");
		
		Выполнить(ПрограммныйКод);
	КонецЦикла;
	
	
	
	
КонецПроцедуры

Процедура ТабРазговораОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка)=Тип("Структура") Тогда
		СтандартнаяОбработка=Ложь;
		
		Если Расшифровка.Тип="Вопрос" ТОгда
			 ВывестиВопрос(Расшифровка.Ссылка);
             ОбработкаДополнительныхДействий(Расшифровка.Ссылка);
			
		 ИначеЕсли Расшифровка.Тип="Ответ" ТОгда
			 ВывестиОтвет(Расшифровка.Ссылка);
			 ОбработкаДополнительныхДействий(Расшифровка.Ссылка);
			
		ИначеЕсли Расшифровка.Тип="HTML" ТОгда	
			Браузер=Обработки.ПросмотрХТМЛСтраницы.Создать();
			
			
			ХТМЛТХТ="<!DOCTYPE html> 
			|<html> 
			| <frameset cols=""100%"">
			|   <frame src="""+ Расшифровка.HTMLСсылка+""" /> 
			| </frameset> 
			|</html>";
			
			
			Браузер.ХТМЛКод=ХТМЛТХТ;
			
			
			
			ФормаБраузера=Браузер.ПолучитьФорму("Форма",ЭтаФорма,1);
			ФормаБраузера.Открыть();
			
			
		КонецЕсли;
		
	КонецЕсли;
	
	
	
	
КонецПроцедуры

Процедура ТППриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Доставка=Истина ТОгда
		ОформлениеСтроки.ЦветФона=Новый Цвет(200,255,200);
	КонецЕсли;	
	
	Если ДанныеСтроки.ОсуществляетБронирование=Истина ТОгда
		ОформлениеСтроки.Ячейки.Аптека.ЦветФона=Новый Цвет(200,200,255);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВсеАптекиПриИзменении(Элемент)
	КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");
КонецПроцедуры

Процедура КоманднаяПанель4Сегодняшние(Кнопка)
	ОтборПоДате=ЖурналЗаказов.Отбор.Найти("Дата");
	ОтборПоДате.ВидСравнения=ВидСравнения.ИнтервалВключаяГраницы;
	ОтборПоДате.ЗначениеС=НачалоДня(ТекущаяДата());
	ОтборПоДате.ЗначениеПо=КонецДня(ТекущаяДата());
	ОтборПоДате.Использование=Истина;
КонецПроцедуры

Процедура КоманднаяПанель4Действие(Кнопка)
	ОтборПоДате=ЖурналЗаказов.Отбор.Найти("Дата");
	ОтборПоДате.Использование=Ложь;
КонецПроцедуры

Процедура ТСИЦНажатие(Элемент)
	ОтборПоНаличиюИнтернетЦены=АП.Отбор.Найти("МинЦенаMedlux");
	ОтборПоНаличиюИнтернетЦены.ВидСравнения=ВидСравнения.НеРавно;
	ОтборПоНаличиюИнтернетЦены.Значение=0;
	ОтборПоНаличиюИнтернетЦены.Использование=Истина;
	
	ПомУд=АП.Отбор.Найти("ПометкаУдаления");
	ПомУд.Установить(Ложь,Истина);

КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
//	АП.Отбор.Сбросить();
//	ПомУд=АП.Отбор.Найти("ПометкаУдаления");
//	ПомУд.Установить(Ложь,Истина);
	

КонецПроцедуры

Процедура Телефон1ПриИзменении(Элемент)
	
	ОтборПоТелефону=ЖурналЗаказов.Отбор.Найти("Телефон");
	ОтборПоТелефону.ВидСравнения=ВидСравнения.Содержит;
	//ОтборПоТелефону.Значение=СокрЛП(Телефон1);
	ТекстОтбора=ЖурналЗаказов.Отбор.Телефон.Значение;
	ТекстОтбора=СтрЗаменить(ТекстОтбора,"-  ","");
	ТекстОтбора=СтрЗаменить(ТекстОтбора,"-  ","");
	ТекстОтбора=СтрЗаменить(ТекстОтбора,"- ","");
	ТекстОтбора=СтрЗаменить(ТекстОтбора,"- ","");
	ЖурналЗаказов.Отбор.Телефон.Значение=ТекстОтбора;

	
	ОтборПоТелефону.Использование=Не ПустаяСтрока(ЖурналЗаказов.Отбор.Телефон.Значение);
	
	

	
КонецПроцедуры

Процедура Телефон1Очистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	ЖурналЗаказов.Отбор.Телефон.Значение="";
	Телефон1ПриИзменении(Элемент);

КонецПроцедуры

Процедура ЗаказПоНомеру1СПриИзменении(Элемент)
	ОтборПоНомеру=ЖурналЗаказов.Отбор.Найти("Номер");
	ОтборПоНомеру.ВидСравнения=ВидСравнения.Равно;
	//ЖурналЗаказов.Отбор.Номер.Значение=ЗаказПоНомеру1С;
	ОтборПоНомеру.Использование=Не (ЖурналЗаказов.Отбор.Номер.Значение=0);
КонецПроцедуры

Процедура ЗаказПоНомеру1СОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	ЖурналЗаказов.Отбор.Номер.Значение=0;
	ЗаказПоНомеру1СПриИзменении(Элемент);
КонецПроцедуры

Процедура ОчиститьРезервПодбораНажатие(Элемент)
	ОМ_СправочнаяСлужба.ОМСС_ОчисткаРезерваПодбораПоАптеке(ПоАптеке);
КонецПроцедуры

Процедура ТоварВЗаказеОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=ЛОжь;
	ОтботПоТовару=ЖурналЗаказов.Отбор.Найти("ТоварВИнтернетЗаказе");
	ОтботПоТовару.Значение=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
	ОтботПоТовару.Использование=Ложь;
	ЭлементыФормы.ТоварВЗаказе.Значение=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
КонецПроцедуры

Процедура ОтчетПоТоварамВЗаказахНажатие(Элемент)
	Отчеты.ОтчетПоТоварамВИнтернетЗаказах.Создать().ПолучитьФорму().Открыть();
КонецПроцедуры

Процедура КлиентПриИзменении(Элемент)
	Если Клиент.Пустая()=Истина Тогда 
		ФИО="";
		Тел="";
	Иначе
		ФИО=Клиент.Наименование;
		Тел=Клиент.Телефон;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТоварВЗаказеПриИзменении(Элемент)
	ОтботПоТовару=ЖурналЗаказов.Отбор.Найти("ТоварВИнтернетЗаказе");
	ОтботПоТовару.Использование=Не ПустаяСтрока(ОтботПоТовару.Значение);
КонецПроцедуры

//---------------<Сценарий разговора конец>---------------------------// GtG // 31.08.2012 16:28:54

процедура УправлениеВидимостью_ПоПравамПользователя()
	
	БрендАС=ГруппаБрендовПоУмолчанию;

	//---------------<Отключим множественные корзинки>---------------------------// GtG // 08.11.2012 11:30:33
	//Если ОтключитьМК=Истина ТОгда
		ЭлементыФормы.КПБронированияИА.Кнопки.ДобавитьВКорзину2.Доступность=Не ОтключитьМК;//  Удалить(ЭлементыФормы.КПБронированияИА.Кнопки.ДобавитьВКорзину2);
		ЭлементыФормы.КПБронированияИА.Кнопки.ДобавитьВКорзину3.Доступность=Не ОтключитьМК;//        Удалить(ЭлементыФормы.КПБронированияИА.Кнопки.ДобавитьВКорзину3);
		ЭлементыФормы.КПБронированияИА.Кнопки.Д1.Доступность=Не ОтключитьМК;//                Удалить(ЭлементыФормы.КПБронированияИА.Кнопки.Д1);
		ЭлементыФормы.КПБронированияИА.Кнопки.Д2.Доступность=Не ОтключитьМК;//Удалить(ЭлементыФормы.КПБронированияИА.Кнопки.Д2);
		ЭлементыФормы.КПБронирования.Кнопки.ДобавитьВКорзину2.Доступность=Не ОтключитьМК;//Удалить(ЭлементыФормы.КПБронирования.Кнопки.ДобавитьВКорзину2);
		ЭлементыФормы.КПБронирования.Кнопки.ДобавитьВКорзину3.Доступность=Не ОтключитьМК;//Удалить(ЭлементыФормы.КПБронирования.Кнопки.ДобавитьВКорзину3);
		ЭлементыФормы.КорзинаN2.Видимость=Не ОтключитьМК;//Ложь;
		ЭлементыФормы.КорзинаN3.Видимость=Не ОтключитьМК;//=Ложь;
	//КонецЕсли;                                                        

	
	//Если РольДоступна("ЧужаяСправочнаяСлужба") Тогда // пока что по простому точим под горздрав
	//	ЭтоЧужаяСС=Истина;// для скрытия колонок в таблице остатков
	//	 БрендАС=ГруппаБрендовДляВнешнейСправки;
	//	 ЭлементыФормы.НадписьБрендАС.Заголовок=БрендАС;
	//	 
	//	
	//	
	//	 ЭлементыФормы.Панель1.Страницы.ЖурналЗаказов.Видимость=ЛОжь;
	//	 ЭлементыФормы.Панель1.Страницы.Сервис.Видимость=ЛОжь;
	//	 
	//	 ЭлементыФормы.Корзины.Видимость=ЛОжь;
	//	 ЭлементыФормы.КорзинаN1.Видимость=Ложь;
	//	 ЭлементыФормы.КорзинаN2.Видимость=Ложь;
	//	 ЭлементыФормы.КорзинаN3.Видимость=Ложь;
	//	 
	//	 //ЭлементыФормы.КоманднаяПанель2.Кнопки.Удалить( ЭлементыФормы.КоманднаяПанель2.Кнопки.Корзина);
	//	 ЭлементыФормы.КПБронированияИА.Кнопки.Удалить(ЭлементыФормы.КПБронированияИА.Кнопки.ДобавитьВКорзину1);
	//	 ЭлементыФормы.КПБронированияИА.Кнопки.Удалить(ЭлементыФормы.КПБронированияИА.Кнопки.ДобавитьВКорзину2);
	//	 ЭлементыФормы.КПБронированияИА.Кнопки.Удалить(ЭлементыФормы.КПБронированияИА.Кнопки.ДобавитьВКорзину3);
	//	 ЭлементыФормы.КПБронированияИА.Кнопки.Удалить(ЭлементыФормы.КПБронированияИА.Кнопки.Д1);
	//	 ЭлементыФормы.КПБронированияИА.Кнопки.Удалить(ЭлементыФормы.КПБронированияИА.Кнопки.Д2);
	//	  
	//	 ЭлементыФормы.КПБронирования.Кнопки.Удалить(ЭлементыФормы.КПБронирования.Кнопки.ДобавитьВКорзину1);
	//	 ЭлементыФормы.КПБронирования.Кнопки.Удалить(ЭлементыФормы.КПБронирования.Кнопки.ДобавитьВКорзину2);
	//	 ЭлементыФормы.КПБронирования.Кнопки.Удалить(ЭлементыФормы.КПБронирования.Кнопки.ДобавитьВКорзину3);
	//	 
	//	 //---------------<метро -- статический список>---------------------------// GtG // 26.10.2012 19:36:26
	//	 Запрос=Новый Запрос("");
	//	 Запрос.Текст= "ВЫБРАТЬ РАЗЛИЧНЫЕ
	//				   |	Метро.Ссылка
	//				   |ИЗ
	//				   |	Справочник.Метро КАК Метро
	//				   |ГДЕ
	//				   |	Метро.ПометкаУдаления = ЛОЖЬ
	//				   |
	//				   |УПОРЯДОЧИТЬ ПО
	//				   |	Метро.Наименование
	//				   |АВТОУПОРЯДОЧИВАНИЕ"; // Сгенерировано в GtG's Консоль запросов. 10.04.2013 14:58:47
	//	 
	//	
	//	 Метро.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));					
	//	 Метро.ЗаполнитьПометки(Истина);
	//	 
	//	 НачалоРазговора=Справочники.ОтветыСценарияРазговора.НайтиПоКоду(1000);// ответ с кодом 1000

	//	 ЭлементыФормы.ПанельБрендовАС.Видимость=Ложь;
	//	 
	//	
	//КонецЕсли;	
		
		
Конецпроцедуры	

Процедура КПБронированияИАДобавитьВКорзину1(Кнопка)
	КнДобавитьВКорзину(1);
КонецПроцедуры

Процедура КПБронированияИАДобавитьВКорзину2(Кнопка)
	КнДобавитьВКорзину(2);
КонецПроцедуры

Процедура КПБронированияИАДобавитьВКорзину3(Кнопка)
	КнДобавитьВКорзину(3);
КонецПроцедуры

Процедура КПБДобавитьВК1(Кнопка)
	КПБронированияДобавитьВИнтернетЗаказ(1);
КонецПроцедуры

Процедура КПБДобавитьВК2(Кнопка)
	КПБронированияДобавитьВИнтернетЗаказ(2);
КонецПроцедуры

Процедура КПБДобавитьВК3(Кнопка)
	КПБронированияДобавитьВИнтернетЗаказ(3);
КонецПроцедуры

Процедура КорзинаN1Нажатие(Элемент)
ОткрытьКорзину(1);	
	
КонецПроцедуры

Процедура КорзинаN2Нажатие(Элемент)
	ОткрытьКорзину(2);	
КонецПроцедуры

Процедура КорзинаN3Нажатие(Элемент)
	ОткрытьКорзину(3);	
КонецПроцедуры

Процедура ОтключитьМКПриИзменении(Элемент)
	УправлениеВидимостью_ПоПравамПользователя();
КонецПроцедуры


процедура КакДоехать(Аптека)
	
	Ф=ЭтотОбъект.ПолучитьФорму("КакДоехать");
	Ф.аптека=Аптека;
	Ф.КакДоехать=Аптека.КакДоехать;
	Ф.Открыть();
	
Конецпроцедуры	

Процедура КоманднаяПанель5Проезд(Кнопка)
	если ЭлементыФормы.ТП.ТекущаяСтрока<>неопределено тогда
	КакДоехать(ЭлементыФормы.ТП.ТекущаяСтрока.Аптека);
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель6Проезд(Кнопка)
	
	ТекСтрока = ЭлементыФормы.СписокАптекДляСпискаТоваров.ТекущаяСтрока;
	Если ТекСтрока <> Неопределено тогда
		
		Если ТекСтрока.Родитель = Неопределено Тогда
			БАптека=ТекСтрока.ДанныеСтроки;
		Иначе
			БАптека=ТекСтрока.Родитель.ДанныеСтроки;
		КонецЕсли;

		
		КакДоехать(БАптека);
	КонецЕсли;
	
КонецПроцедуры



Процедура Панель1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница=ЭлементыФормы.Панель1.Страницы.Бронирование Тогда
		Если ТаблицаБронирования.Количество()<>0 Тогда
			Если ПустаяСтрока(ТаблицаБронирования.Получить(0).Аптека.ТелефонДляSMSИнформирования)=Истина Тогда
				ОтправитьSMSвАптеку=Ложь;
				ЭлементыФормы.ОтправитьSMSвАптеку.Доступность=Ложь;
			Иначе
				ОтправитьSMSвАптеку=Ложь;
				ЭлементыФормы.ОтправитьSMSвАптеку.Доступность=Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
				
КонецПроцедуры

Процедура ТППриАктивизацииСтроки(Элемент)
	
	Если НЕ ЭлементыФормы.ТП.ТекущаяСтрока = Неопределено Тогда
		ЭлементыФормы.КПБронирования.Кнопки.Забронировать.Доступность=ЭлементыФормы.ТП.ТекущаяСтрока.ОсуществляетБронирование;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодборСтанцийМетроНажатие(Элемент)
	
  	ПерваяВыделеннаяСтанцияМетро = Неопределено;
	Для каждого ТекМетро из Метро Цикл
		Если ТекМетро.Пометка = Истина Тогда
			ПерваяВыделеннаяСтанцияМетро = ТекМетро.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	
	ПодходящиеСтанцииМетро.Очистить();
	ФормаМПодбораМетро = Обработки.МаршрутизаторПоМетро.ПолучитьФорму("Форма");
	Если НЕ ПерваяВыделеннаяСтанцияМетро = Неопределено Тогда 
		ФормаМПодбораМетро.СтанцияКлиента =  ПерваяВыделеннаяСтанцияМетро;
	КонецЕсли;
	ФормаМПодбораМетро.ОткрытьМодально();
	
	ПодходящиеСтанцииМетро.Загрузить(ФормаМПодбораМетро.ПодходящиеСтанцииМетро.выгрузить());
	 
	Метро.ЗаполнитьПометки(Ложь); // сбросим все и поставим у кого надо
	Отмечено=0;
	Для Каждого СтрПМ Из ПодходящиеСтанцииМетро Цикл
		
		ТекМетро=Метро.НайтиПоЗначению(СтрПМ.Метро);
		Если ТекМетро<>Неопределено Тогда
			ТекМетро.Пометка=Истина;
			Отмечено=Отмечено+1;
		КонецЕсли;
	КонецЦикла;	
	
	Если Отмечено=0 Тогда
		Метро.ЗаполнитьПометки(Истина);
	КонецЕсли;	
		
	КоманднаяПанель2ОстаткиТОвараПоАптекам_F5("");
	
	//---------------<Перенайти аптеки с полным списокм товара>---------------------------// GtG // 17.06.2013 10:43:38
	// в случае если он не пустой
	Если СписокТоваров.Количество()<>0 Тогда
		КоманднаяПанель6НайтиАптекиСПолнымСписком("");
	КонецЕсли;
	
	
	
	
КонецПроцедуры
//---------------<Действия со списком товаров>---------------------------// GtG // 29.04.2013 12:37:40
Процедура КоманднаяПанель6Очистить(Кнопка)
	СписокТоваров.Очистить();
	СписокАптекДляСпискаТоваров.Строки.Очистить();
КонецПроцедуры

Процедура КоманднаяПанель6НайтиАптекиСПолнымСписком(Кнопка)
	
	СписокТоваров.Свернуть("Товар","Количество");
	
	КоманднаяПанель2ОстаткиТОвараПоАптекам_F5(Кнопка,Истина);
	
	ТП.Сортировать("Аптека,Товар");
	
	
	
	ТзВрем = ТП.Скопировать();
	ТзВрем.Свернуть("Аптека,метро,ТелефонДляСправки,РежимРаботы,ОсуществляетБронирование,Цена,Товар","Остаток");
	СтараяАптека = "";
	Для каждого стр из ТЗВрем Цикл
		
		Если СтараяАптека <> стр.Аптека Тогда
			СтрокаАптеки = СписокАптекДляСпискаТоваров.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаАптеки,стр);
			СтрокаАптеки.ДанныеСтроки = стр.Аптека;
			СтараяАптека = стр.Аптека;
		КонецЕсли;
		
		СтрокаТовара = СтрокаАптеки.Строки.Добавить();
		СтрокаТовара.Аптека = стр.Товар;
		СтрокаТовара.Метро = ""+ стр.Остаток + " шт.";
		СтрокаТовара.ТелефонДляСправки = ""+ стр.Цена + " руб.";
		СтрокаТовара.ДанныеСтроки = стр.Товар;
		СтрокаТовара.ОсуществляетБронирование = стр.ОсуществляетБронирование;
		
	КонецЦикла;
	
	//СписокАптекДляСпискаТоваров=ТП.Скопировать(,"Аптека,метро,ТелефонДляСправки,РежимРаботы,ОсуществляетБронирование");
	//СписокАптекДляСпискаТоваров.Свернуть("Аптека,метро,ТелефонДляСправки,РежимРаботы,ОсуществляетБронирование","");
	
	
	Если СписокАптекДляСпискаТоваров.Строки.Количество()=0 Тогда
		Предупреждение("Нет аптеки, где имеется весь товар из списка!");
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура КПБронированияИАДобавитьВСписокПоиска(Кнопка)
	
	ТекТОвар=ЭлементыФормы.АП.ТекущаяСтрока.Товар;
	
	Количество=0;
	//Цена=ТекТОвар.МинЦенаMedlux;  // за единицу на сайте. 
	//							  //Считаем, что на сайт выгружен обычный товар в единицах по умолчанию, 
	//							  //а разбивочный в единице из справочника ИА_Разбивочный товар, 
	//							  //а если там нет то в единице по умолчанию
	Если ТекТОвар.Разбивается=Истина Тогда
		//Ищем в каких единицах этот товар представлен на сайте							  
		Запрос=Новый Запрос("ВЫБРАТЬ
		                    |	ИА_РазбивочныйТовар.Товар,
		                    |	ИА_РазбивочныйТовар.ЕИТ_НаСайте
		                    |ИЗ
		                    |	Справочник.ИА_РазбивочныйТовар КАК ИА_РазбивочныйТовар
		                    |ГДЕ
		                    |	ИА_РазбивочныйТовар.Товар = &Товар");						  
		Запрос.УстановитьПараметр("Товар",ТекТОвар);
		Рез=Запрос.Выполнить().Выгрузить();
		Если Рез.Количество()=0 Тогда
			ЕИТ=ТекТОвар.ЕдиницаПоУмолчанию ; // нет записи в справочнике- считаем что в единицах по умолчанию (более крупных)
		Иначе
			ЕИТ=Рез.Получить(0).ЕИТ_НаСайте ;
		КонецЕсли;	
	Иначе
		ЕИТ=ТекТОвар.ЕдиницаПоУмолчанию ;// обычный товар считается что в единицах по умолчанию
	КонецЕсли;	
								  
	ФВК=ЭтотОбъект.ПолучитьФорму("ФормаВводаКоличества",ЭтаФорма,1);
	
	ФВК.МаксКолво=0;
	ФВК.ТОвар=ТекТОвар;
	ФВК.ЕИТ=ЕИТ;
	
	ФВК.Цена=ТекТОвар.МинЦенаMedlux;
	ФВК.Количество=Количество;
	ФВК.МинимальноДопустимаяЦена=0;
	
	
	
	
	ФВК.ОткрытьМодально();
	
	Количество=ФВК.Количество;
	Цена=ФВК.Цена; // а вдруг поменяли
	ЕИТ=ФВК.ЕИТ; // а вдруг поменяли
	
	СтрокаСпискаТоваров=СписокТоваров.Добавить();
	СтрокаСпискаТоваров.Товар=ТекТОвар;
	СтрокаСпискаТоваров.Количество=Количество;
	
	СписокТоваров.Свернуть("Товар","Количество");
	
	ЭлементыФормы.Панель1.ТекущаяСтраница=ЭлементыФормы.Панель1.Страницы.СписокТоваров;
	
	СписокАптекДляСпискаТоваров.Строки.Очистить();
КонецПроцедуры

Процедура КоманднаяПанель6ЗабронироватьВВыбраннойАптеке(Кнопка)
	// Вставить содержимое обработчика.
	
	ТаблицаБронирования.Очистить();
	ТекСтрока = ЭлементыФормы.СписокАптекДляСпискаТоваров.ТекущаяСтрока;
		
	Если  ТекСтрока=Неопределено Тогда
		Предупреждение("Не выбрана аптека!");
		Возврат;
	КонецЕсли; 
	
	НомерБрони=ОМ_СправочнаяСлужба.ОМСС_ПолучитьНомерБрони();
	
	Если ТекСтрока.Родитель = Неопределено Тогда
		БАптека=ТекСтрока.ДанныеСтроки;
	Иначе
		БАптека=ТекСтрока.Родитель.ДанныеСтроки;
	КонецЕсли;
	
	
	
	
	Запрос=Новый Запрос();
	Запрос.Текст="ВЫБРАТЬ
	             |	ПартииЖНВЛСОстатки.Товар КАК Товар,
	             |	ПартииЖНВЛСОстатки.КолвоОстаток / ПартииЖНВЛСОстатки.Товар.ЕдиницаПоУмолчанию.К КАК Колво,
	             |	ВЫРАЗИТЬ(ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Товар.ЕдиницаПоУмолчанию.К КАК ЧИСЛО(10, 2)) КАК Цена
	             |ИЗ
	             |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	             |			,
	             |			Склад = &БАптека
	             |				И Товар В (&СписокТоваров)) КАК ПартииЖНВЛСОстатки
	             |ГДЕ
	             |	ПартииЖНВЛСОстатки.КолвоОстаток > 0
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Товар,
	             |	Цена";
	
	Запрос.УстановитьПараметр("БАптека",БАптека);
	Запрос.УстановитьПараметр("СписокТоваров",СписокТоваров.ВыгрузитьКолонку("товар"));
	
	Рез=Запрос.Выполнить().Выгрузить();
	
	
	Для Каждого Стр Из СписокТоваров Цикл
		СтрокиТовара=Рез.НайтиСтроки(Новый Структура("Товар",Стр.Товар));
		
		ОсталосьЗабронировать=Стр.Количество;
		Для Каждого СтрТ Из СтрокиТовара Цикл
			Если ОсталосьЗабронировать=0 ТОгда
				Прервать;
			КонецЕсли;	
			
			Если СтрТ.Колво>ОсталосьЗабронировать Тогда
				СтрБр=ТаблицаБронирования.Добавить();
				СтрБр.Товар=СтрТ.ТОвар;
				СтрБр.Количество=ОсталосьЗабронировать;
				ОсталосьЗабронировать=0;
				СтрБр.ЕИТ=СтрБр.Товар.ЕдиницаПоУмолчанию;
				СтрБр.Цена=СтрТ.Цена;
				СтрБр.Аптека=БАптека;
			Иначе
				СтрБр=ТаблицаБронирования.Добавить();
				СтрБр.Товар=СтрТ.ТОвар;
				СтрБр.Количество= СтрТ.Колво;//ОсталосьЗабронировать;
				ОсталосьЗабронировать=ОсталосьЗабронировать-СтрТ.Колво;
				СтрБр.ЕИТ=СтрБр.Товар.ЕдиницаПоУмолчанию;
				СтрБр.Цена=СтрТ.Цена;
				СтрБр.Аптека=БАптека;
			КонецЕсли;	
		КонецЦикла;	
		
		
		
	КонецЦикла;	
	
	 ЭлементыФормы.Панель1.ТекущаяСтраница=ЭлементыФормы.Панель1.Страницы["Бронирование"];
	
	 //СписокТоваров.Очистить();
	 СписокАптекДляСпискаТоваров.Строки.Очистить();
	
	
КонецПроцедуры

Процедура КоманднаяПанель6ЗаказатьВИнтернетАптеке(Кнопка)
	
	Для Каждого Стр Из СписокТоваров Цикл
		КнДобавитьВКорзину(1,Стр.Товар,Стр.Количество);
	КонецЦикла;	
	
	СписокТоваров.Очистить();
	СписокАптекДляСпискаТоваров.Строки.Очистить();
	
КонецПроцедуры

Процедура СписокТоваровПослеУдаления(Элемент)
	СписокАптекДляСпискаТоваров.Строки.Очистить();
КонецПроцедуры

Процедура СписокТоваровКоличествоПриИзменении(Элемент)
	СписокАптекДляСпискаТоваров.Строки.Очистить();
КонецПроцедуры

Процедура КоманднаяПанель3Действие(Кнопка)
	
	ТБ=ТаблицаБронирования.Скопировать();
	
	ТБ.Свернуть("Товар","Количество");
	
	СписокТоваров=ТБ;
	
	ТаблицаБронирования.Очистить();
	
	ТекущаяАптекаБронирования="";
	ПоАптекеБронирования=ЛОжь;
	
КонецПроцедуры

Процедура СписокАптекДляСпискаТоваровПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.ОсуществляетБронирование=Истина ТОгда
		ОформлениеСтроки.Ячейки.Аптека.ЦветФона=новый Цвет(200,200,255);
	КонецЕсли;	
	
	Если ДанныеСтроки.Родитель = неопределено Тогда
		ОформлениеСтроки.Ячейки.Аптека.УстановитьКартинку(БиблиотекаКартинок.ТТ);
	Иначе
		ОформлениеСтроки.Ячейки.Аптека.УстановитьКартинку(БиблиотекаКартинок.Ассортимент);
	КонецЕсли;	
	
КонецПроцедуры

Процедура СписокАптекДляСпискаТоваровПриАктивизацииСтроки(Элемент)
	
	ТекСтрока = ЭлементыФормы.СписокАптекДляСпискаТоваров.ТекущаяСтрока;
	Если ТекСтрока <> Неопределено тогда
		ЭлементыФормы.КоманднаяПанель6.Кнопки.ЗабронироватьВВыбраннойАптеке.Доступность=ТекСтрока.ОсуществляетБронирование;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура КПБронированияДействие(Кнопка) //ТСО изм 15.01.2015
	//Блокирует товар от показа справочной службе на 7 дней
	
	ТекСтрока = ЭлементыФормы.ТП.ТекущаяСтрока;
	ТоварКод	= ЭлементыФормы.АП.ТекущаяСтрока.Код;
	АптекаКод	= ТекСтрока.КодАптеки;
	ПартияКод	= ТекСтрока.ПартияКод;
	
	ВведеннаяДата = ТекущаяДата()+7*24*60*60;
	
	Если ВвестиДату(ВведеннаяДата, "Укажите дату окончания блокировки", ЧастиДаты.Дата) Тогда

		МЗ = РегистрыСведений.ВременнаяБлокировкаТоваровДляСС.СоздатьМенеджерЗаписи();
		МЗ.СкладКод	= АптекаКод;
		Мз.ТоварКод	= ТоварКод;
		Мз.ПартияКод	= ПартияКод;
		МЗ.Прочитать();
		
		МЗ.СкладКод				= АптекаКод;
		Мз.ТоварКод				= ТоварКод;
		Мз.ПартияКод				= ПартияКод;
		МЗ.НачалоБлокировки		= ТекущаяДата();
		МЗ.КонецБлокировки		= ВведеннаяДата; 
		
		МЗ.Записать();
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура АППриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	//Если ЕстьНаОстатках=1 ТОгда // выводим только если это требуется
	//	СтрОст=СрезОстатков.Найти(ДанныеСтроки.Ссылка,"Товар");
	//	Если СтрОст=Неопределено Тогда
	//		ОформлениеСтроки.Ячейки.ЕстьОстаток.Текст="";
	//	Иначе	
	//		ОформлениеСтроки.Ячейки.ЕстьОстаток.Значение=СтрОст.Количество;
	//	КонецЕсли;	
	//КонецЕсли;
КонецПроцедуры


Процедура ПолучитьСрезОстатков()
	Состояние("Получаем срез остатков...");

	СрезОстатков=ЗапросСрезаОстатков.Выполнить().Выгрузить();
	СрезОстатков.Индексы.Добавить("Товар");
	
	Состояние("Срез остатков получен.");
	
	
	Попытка
		ТекПозКурсора=ЭлементыФормы.АП.ТекущаяСтрока.Товар.ТОвар;
	Исключение
	КонецПопытки;	
	
	ЗаполнитьАП(ПоискПоВхождению);
		
	Попытка	
		ЭлементыФормы.АП.ТекущаяСтрока.Товар=АП.Найти(ТекПозКурсора,"Товар");
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ЕстьНаОстаткахПриИзменении(Элемент)
	
	ПолучитьСрезОстатков();
	
	
	
	
	
	
КонецПроцедуры


Процедура ЗаполнитьАП(Условие="")
	
	Запрос=Новый Запрос();
	
	Текст = // ТСО изм 26.08.2014
	"ВЫБРАТЬ
	|	ПродажиСменККМОбороты.Товар,
	|	СУММА(ПродажиСменККМОбороты.КолвоОборот) КАК КолвоОборот
	|ПОМЕСТИТЬ втЧеки
	|ИЗ
	|	РегистрНакопления.ПродажиСменККМ.Обороты КАК ПродажиСменККМОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиСменККМОбороты.Товар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Код,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Наименование КАК Наименование,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.МинЦенаMedlux,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.ЖНВЛС,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Бренд,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.ОбобщеннаяГруппа,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Подкатегория,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.ПометкаУдаления,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка КАК ТОвар,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СрезОстатков_дляСС.Количество, 0) - ЕСТЬNULL(втЧеки.КолвоОборот, 0) < 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СрезОстатков_дляСС.Количество, 0) - ЕСТЬNULL(втЧеки.КолвоОборот, 0)
	|	КОНЕЦ КАК ЕстьОстаток,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Разбивается,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.ЕдиницаПоУмолчанию,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.ЕдиницаМин,
	|	ЕСТЬNULL(ФиксированныеЦены.Цена,0) КАК ФиксЦена
	|ИЗ
	|	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрезОстатков_дляСС КАК СрезОстатков_дляСС
	|		ПО (СрезОстатков_дляСС.Товар = АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксЦены.СрезПоследних(,ВидФиксЦены = 1) КАК ФиксированныеЦены
	|		ПО (ФиксированныеЦены.КодТовара = АССОРТИМЕНТНЫЙ_ПЛАН.Код)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЧеки КАК втЧеки
	|		ПО АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка = втЧеки.Товар
	|ГДЕ
	|	АССОРТИМЕНТНЫЙ_ПЛАН.ПометкаУдаления = ЛОЖЬ
	|	И 1 = 1
	|	И 2 = 2
	|	И 3 = 3
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втЧеки";
	
	
	//Если ПустаяСтрока(Условие)=Ложь ТОгда	
	//	
	//	Если Найти(Условие,"Наименование подобно """)=0 тогда
	//  	  Условие1="Наименование подобно """+Условие+"""";
	//	Иначе
	//  	  Условие1=Условие;
	//	КонецЕсли;	  
	//	Текст=СтрЗаменить(Текст,"1 = 1",Условие1); // произвольное условие из параметра
	//КонецЕсли;	  
	
	Если ПустаяСтрока(Условие)=Ложь ТОгда	
		
		Если Найти(Условие,"АССОРТИМЕНТНЫЙ_ПЛАН.Код в (")<>0 Тогда
			Условие1=Условие;
		ИначеЕсли Найти(Условие,"Наименование подобно """)=0 тогда
			Условие1="Наименование подобно """+Условие+"""";
		Иначе
			Условие1=Условие;
		КонецЕсли;	  
		Текст=СтрЗаменить(Текст,"1 = 1",Условие1); // произвольное условие из параметра
	КонецЕсли;	
	
	Если ЕстьНаОстатках=0 Тогда
		Текст=СтрЗаменить(Текст,"2 = 2"," ЕСТЬNULL(СрезОстатков_дляСС.Количество, 0) > 0");
	КонецЕсли;
	
	Если СИнтЦеной=0 Тогда
		Текст=СтрЗаменить(Текст,"3 = 3"," АССОРТИМЕНТНЫЙ_ПЛАН.МинЦенаMedlux > 0");
	КонецЕсли;
	
	Запрос.Текст=Текст;		
	Запрос.УстановитьПараметр("Субъект",Справочники.СубъектыРФ.НайтиПоНаименованию("Москва",Истина));
	АП.Загрузить(Запрос.Выполнить().Выгрузить());			 
	
	
	
Конецпроцедуры	

Процедура Кнопка2Нажатие(Элемент)
	ПолучитьСрезОстатков();

КонецПроцедуры

Процедура ПоискПоВхождениюОчистка(Элемент, СтандартнаяОбработка)
	ПоискПоВхождению="";
	СтандартнаяОбработка=Ложь;
	ЗаполнитьАП(ПоискПоВхождению);
	//ПолучитьСрезОстатков();
КонецПроцедуры

Процедура СИнтЦенойПриИзменении(Элемент)
	ПолучитьСрезОстатков();
КонецПроцедуры

Процедура Пересчет_остатковНажатие(Элемент)
	МодульРегламентныхЗаданий.ПересчетСрезаОстатковДляСС();
	ПолучитьСрезОстатков();

КонецПроцедуры

Процедура КоманднаяПанель2кнПретензия(Кнопка)

	МенЗап=РегистрыСведений.ПретензииСправки.СоздатьМенеджерЗаписи();
	МенЗап.Дата=ТекущаяДата();
	МенЗап.Пользователь=ПараметрыСеанса.ТекущийСотр;
	
	менЗап.Прочитать();
	
	МенЗап.Дата=ТекущаяДата();
	МенЗап.Пользователь=ПараметрыСеанса.ТекущийСотр;
	
	МенЗап.Записать();	
	
	Предупреждение("Претензия зафиксирована",2);
	
КонецПроцедуры

Процедура ЖурналЗаказовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.ЕстьТоварСЦенойНоль = Истина Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,245,130);
	КонецЕсли;	
	
	Если ДанныеСтроки.ВидИнтернетЗаказа = Перечисления.ВидыИнтернетЗаказа.ИндивидуальныйЗаказ Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(237, 232, 129);
	КонецЕсли;
	
КонецПроцедуры


Процедура ПоискЧерезADO(ТекстПоиска)
	
	Если НЕ ПустаяСтрока(ТекстПоиска) Тогда
		УсловиеПоискаТоваров=ПоискПоНечеткомуСоответствию.ПолучитьУсловиеОтбораПоНечеткомуСоответствию(ТекстПоиска);
		
		Если УсловиеПоискаТоваров=Неопределено Тогда
			Предупреждение("Ничего не найдено!",1);
			Возврат;
		КонецЕсли;
	Иначе
		УсловиеПоискаТоваров = "";
	КонецЕсли;
	
	ЗаполнитьАП(УсловиеПоискаТоваров);	
	
	
КонецПроцедуры


Процедура КоманднаяПанель7Свернуть(Кнопка)
	
	Для Каждого СтрокаДерева Из СписокАптекДляСпискаТоваров.Строки Цикл
		ЭлементыФормы.СписокАптекДляСпискаТоваров.Свернуть(СтрокаДерева);
	КонецЦикла;	
	
КонецПроцедуры

Процедура КоманднаяПанель7Развернуть(Кнопка)
	
	Для Каждого СтрокаДерева Из СписокАптекДляСпискаТоваров.Строки Цикл
		ЭлементыФормы.СписокАптекДляСпискаТоваров.Развернуть(СтрокаДерева);
	КонецЦикла	
	
КонецПроцедуры

Процедура КоманднаяПанель4кнИндивидуальные(Кнопка)
	
	ОтборВидЗаказа=ЖурналЗаказов.Отбор.Найти("ВидИнтернетЗаказа");
	ОтборВидЗаказа.ВидСравнения=ВидСравнения.Равно;
	ОтборВидЗаказа.Значение=Перечисления.ВидыИнтернетЗаказа.ИндивидуальныйЗаказ;
	ОтборВидЗаказа.Использование=Истина;
	
	
КонецПроцедуры

Процедура КоманднаяПанель4кнДоставка(Кнопка)
	
	ОтборВидЗаказа=ЖурналЗаказов.Отбор.Найти("ВидИнтернетЗаказа");
	ОтборВидЗаказа.ВидСравнения=ВидСравнения.НеРавно;
	ОтборВидЗаказа.Значение=Перечисления.ВидыИнтернетЗаказа.ИндивидуальныйЗаказ;
	ОтборВидЗаказа.Использование=Истина;
	
КонецПроцедуры

Процедура КоманднаяПанель4кнВсе(Кнопка)
	
	ОтборВидЗаказа=ЖурналЗаказов.Отбор.Найти("ВидИнтернетЗаказа");
	ОтборВидЗаказа.Использование=Ложь;
	
	
КонецПроцедуры

Процедура ПоказыватьДатуПоследнейПоставкиПриИзменении(Элемент) //ТСО 09.11.2014
	ЗапросПоОстаткамТоваров.Текст = МО_ТекстЗапросаПолученияОстатков(ложь, ПоказыватьДатуПоследнейПоставки);
КонецПроцедуры

Процедура СубъектыРФНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Субъект1	= Справочники.СубъектыРФ.НайтиПоКоду(31); //МСК
	Субъект2	= Справочники.СубъектыРФ.НайтиПоКоду(16); //МО
	Субъект3	= Справочники.СубъектыРФ.НайтиПоКоду(32); //СПБ
	Субъект4	= Справочники.СубъектыРФ.НайтиПоКоду(14); //ЛО
	
	Субъект1_Отметка	= СубъектыРФ.НайтиПоЗначению(Субъект1) <> Неопределено;
	Субъект2_Отметка	= СубъектыРФ.НайтиПоЗначению(Субъект2) <> Неопределено;
	Субъект3_Отметка	= СубъектыРФ.НайтиПоЗначению(Субъект3) <> Неопределено;
	Субъект4_Отметка	= СубъектыРФ.НайтиПоЗначению(Субъект4) <> Неопределено;
	
	СписокЗнч = Новый СписокЗначений; 
	СписокЗнч.Добавить(Субъект1,,Субъект1_Отметка);
	СписокЗнч.Добавить(Субъект2,,Субъект2_Отметка);
	СписокЗнч.Добавить(Субъект3,,Субъект3_Отметка);
	СписокЗнч.Добавить(Субъект4,,Субъект4_Отметка);
	
	Если СписокЗнч.ОтметитьЭлементы("Выберите субъекты РФ") Тогда		
		СубъектыРФ.Очистить();
		
		Для Каждого ТекТип Из СписокЗнч Цикл			
	        Если ТекТип.Пометка Тогда
	            СубъектыРФ.Добавить(ТекТип.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СубъектыРФОчистка(Элемент, СтандартнаяОбработка)
	
	СубъектыРФ.Очистить();
	
КонецПроцедуры

//---------------<>---------------------------// GtG // 25.01.2013 12:41:55

//---------------<>---------------------------// GtG // 25.01.2013 12:41:57

Версия="5.0.11"; //22-07-2013

ЗапросПоОстаткамТоваров=Новый Запрос();
//---------------<Новый вариант запроса>---------------------------// GtG // 27.05.2013 17:55:23
ЗапросПоОстаткамТоваров.Текст= МО_ТекстЗапросаПолученияОстатков(ложь); // доступен для получения извне.
									
									
	                        
	
	
	
								   
ВсеАптеки=1;								   
ПоискПоВхождению="";
НачалоРазговора=Справочники.ОтветыСценарияРазговора.НайтиПоКоду(1);// ответ с кодом 1
ТоварВЗаказе=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
ЭтоЧужаяСС=Ложь;
ОтключитьМК=Истина;

//---------------<Константы по умолчанию>---------------------------// GtG // 10.04.2013 14:20:39 
ЗапросГБ=Новый Запрос("ВЫБРАТЬ
                      |	ГруппировкаБрендовДляСС.Ссылка
                      |ИЗ
                      |	Справочник.ГруппировкаБрендовДляСС КАК ГруппировкаБрендовДляСС
                      |ГДЕ
                      |	ГруппировкаБрендовДляСС.ПоУмолчанию = Истина");
ТЗПоУм=ЗапросГБ.Выполнить().Выгрузить();
Если ТЗПоУм.Количество()=0 Тогда
	ГруппаБрендовПоУмолчанию=Справочники.ГруппировкаБрендовДляСС.ПустаяСсылка();
ИНаче
	ГруппаБрендовПоУмолчанию=ТЗПоУм.Получить(0).Ссылка;
КонецЕСли;

ЗапросГБ.Текст="ВЫБРАТЬ
               |	ГруппировкаБрендовДляСС.Ссылка
               |ИЗ
               |	Справочник.ГруппировкаБрендовДляСС КАК ГруппировкаБрендовДляСС
               |ГДЕ
               |	ГруппировкаБрендовДляСС.ДляВнешнейСправки = ИСТИНА";

ТЗвс=ЗапросГБ.Выполнить().Выгрузить();
Если ТЗПоУм.Количество()=0 Тогда
	ГруппаБрендовДляВнешнейСправки=Справочники.ГруппировкаБрендовДляСС.ПустаяСсылка();
ИНаче
	ГруппаБрендовДляВнешнейСправки=ТЗвс.Получить(0).Ссылка;
КонецЕСли;

//---------------<Срез остатков из регистра сведений>---------------------------// GtG // 22.07.2013 17:11:47
Состояние("Получаем срез остатков...");
ЗапросСрезаОстатков=Новый Запрос;
ЗапросСрезаОстатков.Текст="ВЫБРАТЬ
                          |	Выборка.Товар,
                          |	СУММА(Выборка.Количество) КАК Количество
                          |ИЗ
                          |	(ВЫБРАТЬ
                          |		СрезОстатков_дляСС.Товар КАК Товар,
                          |		СрезОстатков_дляСС.Количество КАК Количество
                          |	ИЗ
                          |		РегистрСведений.СрезОстатков_дляСС КАК СрезОстатков_дляСС
                          |	
                          |	ОБЪЕДИНИТЬ ВСЕ
                          |	
                          |	ВЫБРАТЬ
                          |		АП.Ссылка,
                          |		ИА.КоличествоОстаток
                          |	ИЗ
                          |		РегистрНакопления.ОстаткиТовараИнтернетАптек.Остатки КАК ИА
                          |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
                          |			ПО ИА.КодТовара = АП.Код) КАК Выборка
                          |
                          |СГРУППИРОВАТЬ ПО
                          |	Выборка.Товар
                          |
                          |УПОРЯДОЧИТЬ ПО
                          |	Выборка.Товар.Наименование";
						  



ПодключитьОбработчикОжидания("ПолучитьСрезОстатков",10*60,Ложь); // один раз в 10 минут перечитывать срез остатков
ЕстьНаОстатках=1;

ЗапросПометкиМетро=Новый Запрос("ВЫБРАТЬ
	                                |	МетроПересадки.Станция как Станция
	                                |ИЗ
	                                |	Справочник.Метро.Пересадки КАК МетроПересадки
	                                |ГДЕ
	                                |	МетроПересадки.Ссылка = &ОтмечаемоеМетро");
