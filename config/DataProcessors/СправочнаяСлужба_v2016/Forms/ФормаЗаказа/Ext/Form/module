Процедура ОчиститьКорзину() Экспорт
	
	//---------------<Чистим корзину и все поля на форме>---------------------------// GtG // 29.08.2012 19:36:28
	МенЗап=РегистрыСведений.Корзина.СоздатьНаборЗаписей();
	МенЗап.Отбор["Пользователь"].Установить(ПараметрыСеанса.ТекущийСотр,Истина);
	МенЗап.Отбор["НомерКорзины"].Установить(НомерКорзины,Истина);
    МенЗап.Прочитать();
	МенЗап.Очистить();
	МенЗап.Записать();
	
	ЭтаФорма.ВладелецФормы.ПересчетСтрокВКорзине();
	
КонецПроцедуры



Процедура КоманднаяПанель1Очистить(Кнопка)
	Если Вопрос("Очистить корзину и данные клиента?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Нет,"Очистить корзину?")=КодВозвратаДиалога.Нет ТОгда
		Возврат;
	КонецЕсли;
	
	//---------------<Чистим корзину и все поля на форме>---------------------------// GtG // 29.08.2012 19:36:28
	ОчиститьКорзину();
	
	ВремяДоставки    ="";
	Емэйл            ="";
	НомерДК          ="";
	НомерРецепта     ="";
	Проезд           ="";
	ПроцентСкидки    ="";
	Телефон          ="";
	ФИОКлиента       ="";
	Клиент="";
	Метро="";
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСоздатьЗаказ(Кнопка)
	
	МенЗап=РегистрыСведений.Корзина.СоздатьНаборЗаписей();
	МенЗап.Отбор["Пользователь"].Установить(ПараметрыСеанса.ТекущийСотр,Истина);
	МенЗап.Отбор["НомерКорзины"].Установить(НомерКорзины,Истина);

    МенЗап.Прочитать();

	Если МенЗап.Количество()=0 ТОгда
		Предупреждение("Корзина пуста! Заказывать нечего!");
		Возврат;
	КонецЕсли;	
	
	
	ЕстьОшибкиЗаполнения=Ложь;
	СтрокаОшибок="";
	
	Если Аптека.Пустая() Тогда
		СтрокаОшибок=СтрокаОшибок+Символы.ПС+("Не определена аптека!");
		ЕстьОшибкиЗаполнения=Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(Фамилия) ТОгда
		СтрокаОшибок=СтрокаОшибок+Символы.ПС+("Не указана Фамилия клиента!");
		ЕстьОшибкиЗаполнения=Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(Телефон) ТОгда
		СтрокаОшибок=СтрокаОшибок+Символы.ПС+("Не указан телефон!");
		ЕстьОшибкиЗаполнения=Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(АдресДоставки) ТОгда
		СтрокаОшибок=СтрокаОшибок+Символы.ПС+("Не указан адрес доставки!");
		ЕстьОшибкиЗаполнения=Истина;
	КонецЕсли;	
	
	Если ПустаяСтрока(Проезд) ТОгда
		СтрокаОшибок=СтрокаОшибок+Символы.ПС+("Не указан проезд!");
		ЕстьОшибкиЗаполнения=Истина;
	КонецЕсли;	
	
	Если ПустаяСтрока(ВремяДоставки) ТОгда
		СтрокаОшибок=СтрокаОшибок+Символы.ПС+("Не указано время доставки!");
		ЕстьОшибкиЗаполнения=Истина;
	КонецЕсли;
	
	Если ДатаДоставки=Дата("00010101") ТОгда
		СтрокаОшибок=СтрокаОшибок+Символы.ПС+("Не указана дата доставки!");
		ЕстьОшибкиЗаполнения=Истина;
	КонецЕсли;
	
	Если ЕстьОшибкиЗаполнения=Истина ТОгда
		ПРедупреждение("Не все обязательные поля заполнены:"+СтрокаОшибок);
		ЭлементыФормы.Панель1.ТекущаяСтраница=ЭлементыФормы.Панель1.Страницы.Клиент;
		Возврат;
	КонецЕсли;	
	
	
	Если Вопрос("Создать заказ на "+Аптека+" ?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Да,"Создать заказ?")<>КодВозвратаДиалога.Да ТОгда
		Предупреждение("З А К А З    Н Е    С О З Д А Н!");
		вОЗВРАТ;
	КонецЕсли;	
	
	
	
	
	Заказ=Документы.ИнтернетЗаказ.СоздатьДокумент();
	
	Заказ.ТипИсточника=Перечисления.ИА_ТипИсточникаЗаказа.СправочнаяСлужба;
	Заказ.НомерЗаказа=ОМ_СправочнаяСлужба.ОМСС_ПолучитьНомерЗаказа(Заказ.ТипИсточника);
	
	Заказ.ВремяДоставки=ВремяДоставки;
	Заказ.ВидИнтернетЗаказа = ВидЗаказа ;
	Заказ.Дата=ТекущаяДата();
	Заказ.ДатаЗаказа=ТекущаяДата();
	Заказ.ДатаОтгрузки=ДатаДоставки;
	Заказ.Емэйл=Емэйл;
	Заказ.Источник=ПараметрыСеанса.ТекущийСотр;
	Заказ.Клиент=Клиент;
	Заказ.Комментарий=Комментарий;
	Заказ.Метро=Метро;
	Заказ.АдресДоставки=АдресДоставки;
	Заказ.НомерДК=НомерДК;
	Заказ.Доставка=ТарифыПоДоставке;
	Заказ.ВыдатьДК=ВыдатьДК;
	Заказ.Курьер=Справочники.Курьеры.НайтиПоНаименованию("Курьер");
	
	Если ПустаяСтрока(НомерРецепта)=Истина Тогда
		НомерРецептаДляЗаказа="";
	Иначе
		НомерРецептаДляЗаказа=СокрЛП(НомерРецепта);
	КонецЕсли;
	
	
	Заказ.НомерРецепта=НомерРецептаДляЗаказа;
	
	Заказ.Проезд=Проезд;
	Заказ.ПроцентСкидки=ПроцентСкидки;
	
	
	
	
	
	
	
	
	Заказ.Склад=ОМ_СправочнаяСлужба.ОМСС_ОнЛайнЗонаАптеки(Аптека); // онлайн зона
	Заказ.ФизическаяАптека=Аптека; // Физическая аптека, с остатками
	
	Заказ.СтатусЗаказа=Перечисления.ИА_СтатусЗаказа.Зарегистрирован;
	Заказ.Телефон=Телефон;
	Заказ.ФИОКлиента=СокрЛП(Фамилия)+" "+СокрЛП(Имя)+" "+СокрЛП(Отчество);	
	
	СтрИзм=Заказ.Изменения.Добавить();
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.КомментарийИзменения="Создан через справочную службу";
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.ТипИзм=Перечисления.ИА_СтатусЗаказа.Зарегистрирован;
	
	
	
	
		
	Для Каждого Зап Из МенЗап Цикл
		Стр=Заказ.Товар.Добавить();
		Стр.Количество=Зап.Количество;
		Стр.СтатусСтроки=Перечисления.ИА_СтатусСтрокиЗаказа.НетСтатуса;
		Стр.Сумма=Зап.СуммаБезСкидки;
		Стр.СуммаСоСкидкой=Зап.СуммаСоСкидкой;
		Стр.Товар=Зап.Товар;
		Стр.Цена=Зап.Цена;
		Стр.ЦенаСоСкидкой=Зап.СуммаСоСкидкой/Зап.Количество;
		Стр.ЕИТ=Зап.ЕИТ;
		Стр.К=Зап.ЕИТ.К;
	КонецЦикла;
	
	
	Заказ.СуммаСоСкидкой=Заказ.Товар.Итог("СуммаСоСкидкой");
	Заказ.Сумма=Заказ.Товар.Итог("Сумма");

	Х=0;
	Успешно=ЛОжь;
	Пока Х<20 цикл
		Х=Х+1;
		Попытка
			
			Заказ.Записать(РежимЗаписиДокумента.Запись);
			Успешно=Истина;
			Прервать;
		Исключение
			ПРедупреждение("Не удалось записать заказ. Блокировка. 
							|Ждем 5 секунд и пробуем записать еще раз",5);
							Успешно=Ложь;
		КонецПопытки;
	КонецЦикла;
	
	//---------------<Если так и не вышло записать заказ сохраним его в файлик>---------------------------// GtG // 19.10.2012 19:02:42
	Если Успешно=Ложь Тогда
		
		Каталог=Константы.КаталогФТП.Получить()+"out\ИЗаказ_backup\";
		ИмяФайла=""+Каталог+Формат(ТекущаяДата(),"ДФ=yyyy.MM.dd.HH.mm.ss; ДЛФ=")+"_IZ_"+Заказ.ТипИсточника+"-"+Заказ.НомерЗаказа+".1SData";
		
		СтруктураБекаба=Новый Структура;
		
		СтруктураШапки=Новый Структура;
		Для Каждого ДанноеШапки Из Заказ.Метаданные().Реквизиты Цикл
			СтруктураШапки.Вставить(ДанноеШапки.Имя,Заказ[ДанноеШапки.Имя]);
		КонецЦикла;	
		
		СтруктураБекаба.Вставить("Шапка",СтруктураШапки);
		
		ТЗТовара=Заказ.Товар.Выгрузить();
		СтруктураБекаба.Вставить("Товар",ТЗТовара);
		сообщить(ИмяФайла);
		Если ЗначениеВФайл(ИмяФайла,СтруктураБекаба )=Истина ТОгда
			ПРедупреждение("Не удалось создать заказ. Данные сохранены в файл "+Символы.ПС+ ИмяФайла);
		КонецЕсли;	
	Иначе
		 НайденнаяСтрока = Заказ.Товар.Найти(0,"Цена");
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			
				МПочтец= Обработки.Почтарь;
				Почтец=МПочтец.Создать();
				
				Почтец.Автоотправка=ИСТИНА;
				Почтец.Рассылка.Добавить("med03.zakaz@mail.ru");
				Почтец.Тема="Создан индивидуальный заказ № "+Заказ.Номер+" от "+Заказ.Дата + "  ( цена = 0 ) ";
				Почтец.ТекстПисьма=""+Почтец.Тема + "
				|	" + НайденнаяСтрока.Товар.Наименование + "	количество: " + НайденнаяСтрока.Количество;
				Почтец.функция_Послать();

		КонецЕсли;
	КонецЕсли;
	//---------------< - из бэкапа можно восстановить обработкой ИА_ВосстановлениеЗаказаИзБэкапа ->---------------------------// GtG // 19.10.2012 19:02:44
	
	
	ПРедупреждение("Создан заказ "+Заказ.ТипИсточника+"-"+Заказ.НомерЗаказа);
	
	
	ОчиститьКорзину();
	
	ЭтаФорма.ВладелецФормы.ПересчетСтрокВКорзине();
	
	
	//---------------<Печатаем Заказ на принтере сборщиков>---------------------------// GtG // 15.10.2012 18:24:45
	ПечатьЗаказаНаПринтереСборщиков(Заказ);
	
	
	// Будут делать вручную //ВыгрузитьЗаявкуНаПеремещениеПоЗаказу(Заказ);
	
	
	
	ЭтаФорма.Закрыть();
	
	
КонецПроцедуры

Процедура ВыгрузитьЗаявкуНаПеремещениеПоЗаказу(ЗаказОбъект)
	
	Если ЗаказОбъект.ФизическаяАптека.пустая()=Ложь и  ЗаказОбъект.ФизическаяАптека<>ЗаказОбъект.Склад тогда
		ГенЗаказа=Обработки.ГенераторЗаявкиНаПеремещениеВОнлайнЗону.Создать();
		ГенЗаказа.Заказ=ЗаказОбъект.Ссылка;
		ГенЗаказа.Аптека=ЗаказОбъект.ФизическаяАптека;
		ГенЗаказа.ОнлайнЗона=ЗаказОбъект.Склад;
		
		ГенЗаказа.МО_ВыгрузитьЗаказ(ЗаказОбъект.Ссылка);
		предупреждение("Выгружена заявка на перемещение товара. 
		|Файл выгружен в физическую аптеку.",10);
	КонецЕсли;
КонецПроцедуры	


Процедура ПечатьЗаказаНаПринтереСборщиков(ЗаказОбъект)
	
	
	 //---------------<Ищем принтер сборщиков>---------------------------// GtG // 15.10.2012 18:54:28
	 Запрос=Новый Запрос("ВЫБРАТЬ
	                     |	ДопРеквизитыМестХранения.ИмяПринтераСборщика  как ИмяПринтераСборщика
	                     |ИЗ
	                     |	РегистрСведений.ДопРеквизитыМестХранения КАК ДопРеквизитыМестХранения
	                     |ГДЕ
	                     |	ДопРеквизитыМестХранения.МестоХранения = &МестоХранения");
						 
	Запрос.УстановитьПараметр("МестоХранения",ЗаказОбъект.Склад);
	Рез=Запрос.Выполнить().Выгрузить();
	Если Рез.Количество()=0 Тогда
		Состояние("Не настроен принтер сборщиков!");
	Иначе
		ЗаказОбъект.МО_Печать(Истина, Ложь,Рез.Получить(0).ИмяПринтераСборщика,Ложь);
	КонецЕсли;

	
	
КонецПроцедуры


Процедура ЕмэйлПриИзменении(Элемент)
	//---------------<Проверка на корректность мыла>---------------------------// GtG // 29.08.2012 15:49:28
	
	Если ПустаяСтрока(Емэйл)=Истина Тогда
		Возврат;
	КонецЕсли;	
	
	//допустимые символы: б/м латиница -_ . @
	
	КодыДопустимыхСимволов=Новый ТаблицаЗначений;
	КодыДопустимыхСимволов.Колонки.Добавить("КодС");
	КодыДопустимыхСимволов.Колонки.Добавить("КодПо");
	
	//------------------
	СтрКДС=КодыДопустимыхСимволов.Добавить();
	СтрКДС.КодС=97;
	СтрКДС.КодПо=122;
	//------------------
	
	//------------------
	
	СтрКДС=КодыДопустимыхСимволов.Добавить();
	СтрКДС.КодС=45;
	СтрКДС.КодПо=46;
	//-----------------	
	СтрКДС=КодыДопустимыхСимволов.Добавить();
	СтрКДС.КодС=95;
	СтрКДС.КодПо=95;
	//------------------
	СтрКДС=КодыДопустимыхСимволов.Добавить();
	СтрКДС.КодС=64;
	СтрКДС.КодПо=90;
	

		
	//---------------<>---------------------------// GtG // 29.08.2012 16:00:26
	Емэйл=СокрЛП(Емэйл);
	
	ЕмэйлДопустимый=Истина;
	
	
	Для Ы=1 по СтрДлина(Емэйл) Цикл
		ПРоверяемыйСимвол=Сред(Емэйл,Ы,1);
		КодПРоверяемыйСимвол=КодСимвола(ПРоверяемыйСимвол);
		
		СимволВерный=ЛОжь;
		
		Для Каждого СтрКДС из КодыДопустимыхСимволов Цикл
			если КодПРоверяемыйСимвол>=СтрКДС.КодС и КодПРоверяемыйСимвол<=СтрКДС.КодПо тогда
				 СимволВерный=Истина;
				 Прервать;
			КонецЕсли; 
		КонецЦикла;	
		Если  СимволВерный=ЛОжь тогда
			Сообщить("Недопустимый символ в Е-мэйле: "+ПРоверяемыйСимвол+" позиция в строке "+ы);
			ЕмэйлДопустимый=Ложь;
		кОНЕЦеСЛИ;	
		
	КонецЦикла;	
	
	Если ЕмэйлДопустимый=Ложь тогда
		Сообщить("Е-мэйл с ошибками!");
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Аптека=Константы.ЦентральнаяИнтернетАптека.Получить();
	
	Корзина.Отбор["Пользователь"].Установить(ПараметрыСеанса.ТекущийСотр,Истина);
	Корзина.Отбор["НомерКорзины"].Установить(НомерКорзины,Истина);

	
	//---------------<Предварительно определяем склад>---------------------------// GtG // 30.08.2012 20:13:18
	// Если Все склады в корзине одинаковые, то скорее всего это получилось подбором по остаткам для бронирования в 
	// реальной аптеке или еще как-то
	
	Если ПустаяСтрока(Метро)=Истина Тогда
		Метро="";
	КонецЕсли;
	
	
	
КонецПроцедуры



Процедура Записать_нового_клиентаНажатие(Элемент)
	
	Если ПустаяСтрока(Телефон)=Истина тогда
		Предупреждение("Не указан телефон!");
		Возврат;
	КонецЕсли;
	
	Если Клиент.Пустая()=Истина тогда
		
		Запрос=новый запрос("ВЫБРАТЬ
		|	КлиентыИнтернетАптеки.Ссылка
		|ИЗ
		|	Справочник.КлиентыИнтернетАптеки КАК КлиентыИнтернетАптеки
		|ГДЕ
		|	КлиентыИнтернетАптеки.Телефон = &Телефон");
		
		Запрос.УстановитьПараметр("Телефон",Телефон);
		Рез=Запрос.Выполнить().Выгрузить();
		Если Рез.Количество()<>0 Тогда
			Ответ=Вопрос("Уже есть клиент с таким номером телефона! Записать еще одного?",РежимДиалогаВопрос.ДаНет);
			Если Ответ=КодВозвратаДиалога.Нет ТОгда
				Возврат;
			КонецЕсли;
		КонецЕсли;	
		
		
		
		
		
		НовыйКлиент=Справочники.КлиентыИнтернетАптеки.СоздатьЭлемент();
		
	Иначе
		
		Ответ=вопрос("Записать изменения?", РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Да);
		
		Если Ответ=КодВозвратаДиалога.Нет или Ответ=КодВозвратаДиалога.Таймаут Тогда
			Возврат;
		КонецЕсли;
		
		НовыйКлиент=Клиент.ПолучитьОбъект();
	КонецЕсли;
	
	
	НовыйКлиент.Фамилия=Фамилия;
	НовыйКлиент.Имя=Имя;
	НовыйКлиент.Отчество=Отчество;
	
	НовыйКлиент.Наименование=СокрЛП(Фамилия)+" "+СокрЛП(Имя)+" "+СокрЛП(Отчество);
	
	
	НовыйКлиент.Телефон=Телефон;
	НовыйКлиент.ДопТелефон=ДопТелефон;
	
	НовыйКлиент.Емэйл=Емэйл;
	НовыйКлиент.Адрес=АдресДоставки;
	НовыйКлиент.Метро=Метро;
	НовыйКлиент.Проезд=Проезд;
	НовыйКлиент.НомерДК=НомерДК;
	
	НовыйКлиент.ПроцентСкидки=ПроцентСкидки;
    НовыйКлиент.примечание=Примечание;
	
	
	НовыйКлиент.Записать();
	
	Клиент=НовыйКлиент.Ссылка;
	КлиентПриИзменении("");

КонецПроцедуры

Процедура КлиентПриИзменении(Элемент)
	Если Клиент.Пустая()=Истина Тогда
		ЭлементыФормы.Клиент.ЦветФонаПоля=Новый Цвет(255,255,0);//желтый

		Возврат;
	КонецЕсли;
	
	Фамилия=Клиент.Фамилия;
	Имя=Клиент.Имя;
	Отчество=Клиент.Отчество;
	Телефон=Клиент.Телефон;
	ДопТелефон=Клиент.ДопТелефон;
	Емэйл=Клиент.Емэйл;
	
	АдресДоставки=Клиент.Адрес;
	Метро=Клиент.Метро;
	Проезд=Клиент.Проезд;
	НомерДК=Клиент.НомерДК;
	примечание=Клиент.Примечание;
	ПроцентСкидки=Клиент.ПроцентСкидки;
    ЭлементыФормы.Клиент.ЦветФонаПоля=Новый Цвет(255,255,255);//белый

КонецПроцедуры

Процедура ОпределитьАптекуНажатие(Элемент)
	
	
	 Запрос=Новый Запрос();
	 
	 Запрос.Текст= "ВЫБРАТЬ
	               |	Корзина.Пользователь,
	               |	Корзина.Склад,
	               |	Корзина.Товар,
	               |	МИНИМУМ(Корзина.Цена / Корзина.ЕИТ.К) КАК Цена,
	               |	СУММА(Корзина.Количество * Корзина.ЕИТ.К) КАК Количество
	               |ПОМЕСТИТЬ Корзинка
	               |ИЗ
	               |	РегистрСведений.Корзина КАК Корзина
	               |ГДЕ
	               |	Корзина.Пользователь = &Пользователь
	               |	И Корзина.НомерКорзины = &НомерКорзины
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Корзина.Пользователь,
	               |	Корзина.Склад,
	               |	Корзина.Товар,
	               |	Корзина.Цена / Корзина.ЕИТ.К
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МестаХранения.Ссылка КАК АптекаСДоставкой,
	               |	ВЫБОР
	               |		КОГДА МестаХранения.Ссылка = ЦентральнаяИнтернетАптека.Значение
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ЭтоЦентральнаяИА
	               |ПОМЕСТИТЬ АптекиСДоставкой
	               |ИЗ
	               |	Справочник.МестаХранения КАК МестаХранения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ЦентральнаяИнтернетАптека КАК ЦентральнаяИнтернетАптека
	               |		ПО (ЦентральнаяИнтернетАптека.Значение = МестаХранения.Ссылка)
	               |ГДЕ
	               |	МестаХранения.ОсуществляетДоставкуКлиенту = ИСТИНА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Корзинка.Пользователь,
	               |	Корзинка.Склад,
	               |	Корзинка.Товар,
	               |	Корзинка.Цена,
	               |	Корзинка.Количество,
	               |	АптекиСДоставкой.АптекаСДоставкой,
	               |	АптекиСДоставкой.ЭтоЦентральнаяИА
	               |ПОМЕСТИТЬ потребность
	               |ИЗ
	               |	Корзинка КАК Корзинка,
	               |	АптекиСДоставкой КАК АптекиСДоставкой
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПартииЖНВЛСОстатки.Товар,
	               |	ПартииЖНВЛСОстатки.Склад,
	               |	ПартииЖНВЛСОстатки.Партия,
	               |	ПартииЖНВЛСОстатки.КолвоОстаток,
	               |	ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток,
	               |	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток,
	               |	ВЫБОР
	               |		КОГДА ПартииЖНВЛСОстатки.КолвоОстаток > 0
	               |			ТОГДА ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток + ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток / 100 * 4
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК МинДопустимаяЦенаРеализации
	               |ПОМЕСТИТЬ ОстаткиПоТиИА
	               |ИЗ
	               |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	               |			,
	               |			Склад В
	               |					(ВЫБРАТЬ
	               |						АптекиСДоставкой.АптекаСДоставкой
	               |					ИЗ
	               |						АптекиСДоставкой КАК АптекиСДоставкой)
	               |				И Товар В
	               |					(ВЫБРАТЬ
	               |						Корзинка.Товар
	               |					ИЗ
	               |						Корзинка КАК Корзинка)) КАК ПартииЖНВЛСОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	потребность.Пользователь,
	               |	потребность.Склад,
	               |	потребность.Товар,
	               |	потребность.Цена,
	               |	потребность.Количество,
	               |	потребность.АптекаСДоставкой,
	               |	потребность.ЭтоЦентральнаяИА,
	               |	ОстаткиПоТиИА.Партия,
	               |	ОстаткиПоТиИА.КолвоОстаток,
	               |	ОстаткиПоТиИА.СуммаЗакупСНДСОстаток,
	               |	ОстаткиПоТиИА.СуммаРознСНДСОстаток,
	               |	ОстаткиПоТиИА.МинДопустимаяЦенаРеализации
	               |ПОМЕСТИТЬ РаспределениеПоАптекам
	               |ИЗ
	               |	потребность КАК потребность
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоТиИА КАК ОстаткиПоТиИА
	               |		ПО потребность.Товар = ОстаткиПоТиИА.Товар
	               |			И потребность.АптекаСДоставкой = ОстаткиПоТиИА.Склад
	               |			И потребность.Цена >= ОстаткиПоТиИА.МинДопустимаяЦенаРеализации
	               |			И (ОстаткиПоТиИА.МинДопустимаяЦенаРеализации <> 0)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РаспределениеПоАптекам.Пользователь,
	               |	РаспределениеПоАптекам.Склад,
	               |	РаспределениеПоАптекам.Товар,
	               |	РаспределениеПоАптекам.Цена,
	               |	РаспределениеПоАптекам.Количество,
	               |	РаспределениеПоАптекам.АптекаСДоставкой,
	               |	РаспределениеПоАптекам.ЭтоЦентральнаяИА,
	               |	СУММА(РаспределениеПоАптекам.КолвоОстаток) КАК КолвоОстаток,
	               |	МАКСИМУМ(РаспределениеПоАптекам.МинДопустимаяЦенаРеализации) КАК МинДопустимаяЦенаРеализации
	               |ПОМЕСТИТЬ ВозмУдоК
	               |ИЗ
	               |	РаспределениеПоАптекам КАК РаспределениеПоАптекам
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РаспределениеПоАптекам.Пользователь,
	               |	РаспределениеПоАптекам.Склад,
	               |	РаспределениеПоАптекам.Товар,
	               |	РаспределениеПоАптекам.Цена,
	               |	РаспределениеПоАптекам.Количество,
	               |	РаспределениеПоАптекам.АптекаСДоставкой,
	               |	РаспределениеПоАптекам.ЭтоЦентральнаяИА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВозмУдоК.Пользователь,
	               |	ВозмУдоК.Склад,
	               |	ВозмУдоК.Товар,
	               |	ВозмУдоК.Цена,
	               |	ВозмУдоК.Количество,
	               |	ВозмУдоК.АптекаСДоставкой,
	               |	ВозмУдоК.ЭтоЦентральнаяИА,
	               |	ВозмУдоК.КолвоОстаток,
	               |	ВозмУдоК.МинДопустимаяЦенаРеализации
	               |ПОМЕСТИТЬ ВозмУдоК_ПоАптечный
	               |ИЗ
	               |	ВозмУдоК КАК ВозмУдоК
	               |ГДЕ
	               |	(ВозмУдоК.ЭтоЦентральнаяИА = ИСТИНА
	               |			ИЛИ ВозмУдоК.Количество <= ВозмУдоК.КолвоОстаток
	               |				И ВозмУдоК.Цена >= ВозмУдоК.МинДопустимаяЦенаРеализации
	               |				И ВозмУдоК.МинДопустимаяЦенаРеализации <> 0)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ТоварЦенаВКорзинке.Поле1) КАК КомбинацийТоварЦенаВКорзинке
	               |ПОМЕСТИТЬ КТЦ_ВКорзинке
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		Корзинка.Товар КАК Товар,
	               |		Корзинка.Цена КАК Цена,
	               |		1 КАК Поле1
	               |	ИЗ
	               |		Корзинка КАК Корзинка) КАК ТоварЦенаВКорзинке
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВложенныйЗапрос.Склад,
	               |	СУММА(ВложенныйЗапрос.Поле1) КАК КТЦ_ВВозмудкеПоаптечном
	               |ПОМЕСТИТЬ КТЦ_Поаптечно
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВозмУдоК_ПоАптечный.Товар КАК Товар,
	               |		ВозмУдоК_ПоАптечный.Цена КАК Цена,
	               |		ВозмУдоК_ПоАптечный.АптекаСДоставкой КАК Склад,
	               |		1 КАК Поле1
	               |	ИЗ
	               |		ВозмУдоК_ПоАптечный КАК ВозмУдоК_ПоАптечный
	               |	ГДЕ
	               |		(ВозмУдоК_ПоАптечный.ЭтоЦентральнаяИА = ИСТИНА
	               |				ИЛИ ВозмУдоК_ПоАптечный.Количество <= ВозмУдоК_ПоАптечный.КолвоОстаток)) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Склад
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КТЦ_Поаптечно.Склад
	               |ПОМЕСТИТЬ ПодходящиеСклады
	               |ИЗ
	               |	КТЦ_Поаптечно КАК КТЦ_Поаптечно
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КТЦ_ВКорзинке КАК КТЦ_ВКорзинке
	               |		ПО КТЦ_Поаптечно.КТЦ_ВВозмудкеПоаптечном = КТЦ_ВКорзинке.КомбинацийТоварЦенаВКорзинке
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПодходящиеСклады.Склад,
	               |	ПриоритетВыбораАптекиСДоставкой.Приоритет
	               |ПОМЕСТИТЬ ПодходящиеСкладыСПриоритетом
	               |ИЗ
	               |	ПодходящиеСклады КАК ПодходящиеСклады
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПриоритетВыбораАптекиСДоставкой КАК ПриоритетВыбораАптекиСДоставкой
	               |		ПО ПодходящиеСклады.Склад = ПриоритетВыбораАптекиСДоставкой.Аптека
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1000000000
	               |	ПодходящиеСкладыСПриоритетом.Склад КАК ПодхСклад,
	               |	РаспределениеПоАптекам.Пользователь,
	               |	РаспределениеПоАптекам.Склад,
	               |	РаспределениеПоАптекам.Товар,
	               |	РаспределениеПоАптекам.Цена,
	               |	РаспределениеПоАптекам.Количество,
	               |	РаспределениеПоАптекам.АптекаСДоставкой КАК АптекаСДоставкой,
	               |	РаспределениеПоАптекам.ЭтоЦентральнаяИА КАК ЭтоЦентральнаяИА,
	               |	РаспределениеПоАптекам.Партия,
	               |	РаспределениеПоАптекам.КолвоОстаток,
	               |	РаспределениеПоАптекам.СуммаЗакупСНДСОстаток,
	               |	РаспределениеПоАптекам.СуммаРознСНДСОстаток,
	               |	РаспределениеПоАптекам.МинДопустимаяЦенаРеализации,
	               |	ПодходящиеСкладыСПриоритетом.Приоритет КАК Приоритет
	               |ПОМЕСТИТЬ ФинальныйЭтап
	               |ИЗ
	               |	РаспределениеПоАптекам КАК РаспределениеПоАптекам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПодходящиеСкладыСПриоритетом КАК ПодходящиеСкладыСПриоритетом
	               |		ПО РаспределениеПоАптекам.АптекаСДоставкой = ПодходящиеСкладыСПриоритетом.Склад
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Приоритет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ФинальныйЭтап.АптекаСДоставкой КАК ЗаказатьНаАптеке
	               |ИЗ
	               |	ФинальныйЭтап КАК ФинальныйЭтап
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ Корзинка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ АптекиСДоставкой
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ потребность
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ОстаткиПоТиИА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ РаспределениеПоАптекам
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВозмУдоК
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВозмУдоК_ПоАптечный
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ КТЦ_ВКорзинке
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ КТЦ_Поаптечно
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ПодходящиеСклады
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ПодходящиеСкладыСПриоритетом
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ФинальныйЭтап"; // Сгенерировано в GtG's Консоль запросов. 05.09.2012 21:32:28


	
	 Запрос.УстановитьПараметр("Пользователь",ПараметрыСеанса.ТекущийСотр);
	 Запрос.УстановитьПараметр("НомерКорзины",НомерКорзины);
	 
	 Аптека=Запрос.Выполнить().Выгрузить().Получить(0).ЗаказатьНаАптеке;
	 
	 //---------------<Проапдейтим корзинку на предмет склада>---------------------------// GtG // 05.09.2012 21:34:12
	 МенЗап=РегистрыСведений.Корзина.СоздатьНаборЗаписей();
	МенЗап.Отбор["Пользователь"].Установить(ПараметрыСеанса.ТекущийСотр,Истина);
	МенЗап.Отбор["НомерКорзины"].Установить(НомерКорзины,Истина);
    МенЗап.Прочитать();
	
	ТЗ=МенЗап.Выгрузить();
	ТЗ.ЗаполнитьЗначения(Аптека,"Склад");
	
	МенЗап.Загрузить(ТЗ);
	МенЗап.Записать();
	 
		
	
КонецПроцедуры

Процедура НомерРецептаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Возврат;
	
	//---------------<Отключено>---------------------------// GtG // 08.10.2012 19:41:57
	
	
	
	 Префикс=Лев(Текст,4);
	 ТЗначащаяЧасть=Сред(Текст,5,СтрДлина(Текст));
	 ТПравильнаяЗначащаяЧасть="";
	 
	 Для Ы=1 По 13-4-СтрДлина(ТЗначащаяЧасть) Цикл
		 ТПравильнаяЗначащаяЧасть=ТПравильнаяЗначащаяЧасть+"0";
	 КонецЦикла;
	 ТПравильнаяЗначащаяЧасть=ТПравильнаяЗначащаяЧасть+ТЗначащаяЧасть;
	 ШтрихКод=Префикс+ТПравильнаяЗначащаяЧасть;
	 
	 //---------------<Проверим на правильность>---------------------------// GtG // 06.09.2012 18:04:23
	 КорректныйШтрихкод=ВычислитьКонтрольнуюСумму(Лев(ШтрихКод,12));
	 
	 Если ШтрихКод<>КорректныйШтрихкод Тогда
		 Предупреждение("Некорректный номер рецепта!");
		 Текст="";
		 СтандартнаяОбработка=Ложь;
		 Возврат;
	 КонецЕсли;
	 
	 //---------------<Поищем по базе штрихкодов врачей>---------------------------// GtG // 06.09.2012 18:07:09
	 ЗАпрос=Новый Запрос("ВЫБРАТЬ
	                     |	ВрачиРецептурныеКнижки.Ссылка
	                     |ИЗ
	                     |	Справочник.Врачи.РецептурныеКнижки КАК ВрачиРецептурныеКнижки
	                     |ГДЕ
	                     |	ВрачиРецептурныеКнижки.Штрихкод = &Штрихкод");
	 Запрос.УстановитьПараметр("ШтрихКод",ШтрихКод);
	 
	 ТЗ=Запрос.Выполнить().Выгрузить();
	 
	 Если ТЗ.Количество()=0 Тогда
		 ПРедупреждение("Неизвестный код рецепта!");
		 Текст="";
		 СтандартнаяОбработка=Ложь;
		 Возврат;
     КонецЕСли;
	 
	 Текст=КорректныйШтрихкод;
	 
	 ПроцентСкидки=0;
	 
	 
КонецПроцедуры

Процедура ПроцентСкидкиПриИзменении(Элемент)
	
	//---------------<Пересчет корзины при изменении скидки>---------------------------// GtG // 09.10.2012 10:52:41
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	Корзина.Пользователь,
	                    |	Корзина.Склад,
	                    |	Корзина.Товар,
	                    |	Корзина.Цена,
	                    |	Корзина.ЕИТ,
	                    |	Корзина.Количество,
	                    |	ВЫБОР
	                    |		КОГДА Корзина.Цена > &МаксЦенаДляПредоставленияСкидки
	                    |			ТОГДА 0
	                    |		ИНАЧЕ &ПроцентСкидки
	                    |	КОНЕЦ КАК ПроцентСкидки,
	                    |	Корзина.Цена * Корзина.Количество КАК СуммаБезСкидки,
	                    |	ВЫБОР
	                    |		КОГДА Корзина.Цена > &МаксЦенаДляПредоставленияСкидки
	                    |			ТОГДА 0
	                    |		ИНАЧЕ &ПроцентСкидки
	                    |	КОНЕЦ * (ВЫРАЗИТЬ(Корзина.Цена / 100 КАК ЧИСЛО(15, 2))) * Корзина.Количество КАК СуммаСкидки,
	                    |	Корзина.Цена * Корзина.Количество - ВЫБОР
	                    |		КОГДА Корзина.Цена > &МаксЦенаДляПредоставленияСкидки
	                    |			ТОГДА 0
	                    |		ИНАЧЕ &ПроцентСкидки
	                    |	КОНЕЦ * (ВЫРАЗИТЬ(Корзина.Цена / 100 КАК ЧИСЛО(15, 2))) * Корзина.Количество КАК СуммаСоСкидкой,
	                    |	Корзина.НомерКорзины
	                    |ИЗ
	                    |	РегистрСведений.Корзина КАК Корзина
	                    |ГДЕ
	                    |	Корзина.Пользователь = &Пользователь
	                    |	И Корзина.НомерКорзины = &НомерКорзины");	
	Запрос.УстановитьПараметр("Пользователь",ПараметрыСеанса.ТекущийСотр);
	Запрос.УстановитьПараметр("МаксЦенаДляПредоставленияСкидки",2000); // на товары дороже 2000 р/шт скидку не давать!
	Запрос.УстановитьПараметр("ПроцентСкидки",ПроцентСкидки);
	Запрос.УстановитьПараметр("НомерКорзины",НомерКорзины);
	
	Рез=Запрос.Выполнить().Выгрузить();
	
	КорМенНабЗап=РегистрыСведений.Корзина.СоздатьНаборЗаписей();
	ОтборПоПользователю=КорМенНабЗап.Отбор.Найти("Пользователь");
	ОтборПоПользователю.Установить(ПараметрыСеанса.ТекущийСотр,Истина);
	ОтборПоПользователю=КорМенНабЗап.Отбор.Найти("НомерКорзины");
	ОтборПоПользователю.Установить(НомерКорзины,Истина);
	
	КорМенНабЗап.Прочитать();
	
	КорМенНабЗап.Очистить();
	
	КорМенНабЗап.Загрузить(Рез);
	
	КорМенНабЗап.Записать();
	
КонецПроцедуры

Процедура НомерДКОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	Сообщить("ПРоверка номера ДК еще не написана!");	 

КонецПроцедуры

Процедура ДатаДоставкиПриИзменении(Элемент)
	
	Если НачалоДня(ДатаДоставки)<НачалоДня(ТекущаяДата()) Тогда
		ДатаДоставки=ТекущаяДата();
	КонецЕсли;	
	
КонецПроцедуры

Процедура КорзинаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.Коэфф.Значение=ДанныеСтроки.Еит.К;
КонецПроцедуры

Процедура НазначитьАптекуНажатие(Элемент)
	Если Аптека.Пустая()=Ложь Тогда
		
		
			
		
		//---------------<Проапдейтим корзинку на предмет склада>---------------------------// GtG // 05.09.2012 21:34:12
		МенЗап=РегистрыСведений.Корзина.СоздатьНаборЗаписей();
		МенЗап.Отбор["Пользователь"].Установить(ПараметрыСеанса.ТекущийСотр,Истина);
		МенЗап.Отбор["НомерКорзины"].Установить(НомерКорзины,Истина);
		МенЗап.Прочитать();
		
		ТЗ=МенЗап.Выгрузить();
		ТЗ.ЗаполнитьЗначения(Аптека,"Склад");
		
		МенЗап.Загрузить(ТЗ);
		МенЗап.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	Isnull(СУММА(Корзина.СуммаСоСкидкой),0) КАК СуммаСоСкидкой
	                    |ИЗ
	                    |	РегистрСведений.Корзина КАК Корзина
	                    |ГДЕ
	                    |	Корзина.Пользователь = &Пользователь");	
	Запрос.УстановитьПараметр("Пользователь",ПараметрыСеанса.ТекущийСотр);
	Рез=Запрос.Выполнить().Выгрузить();
	
	Если ТипЗнч(ТарифыПоДоставке)=Тип("СправочникСсылка.Услуги") ТОгда
		Х=ТарифыПоДоставке.Цена ;
	Иначе
		Х=0;
	КонецЕсли;
	
	
	Если Рез.Количество()=0 ТОгда
		ЭлементыФормы.НадпССК.Заголовок="0";
	Иначе
		ЭлементыФормы.НадпССК.Заголовок=Рез.Получить(0).СуммаСоСкидкой+Х;
	КонецЕсли;	
	
	ЭтаФорма.Заголовок="Корзина №"+НомерКорзины;
	
КонецПроцедуры


Процедура Телефон1ПриИзменении(Элемент)
	
	СЗ=ОМ_СправочнаяСлужба.ОМСС_ВыборКлиентаПоНомеруТелефона(Телефон1);//вернет список сзначений кодов КА или неопределено
	
	
	Если СЗ=Неопределено ТОгда
		Предупреждение("Не найдено клиента с таким номером телефона!");
		Возврат; 
	КонецЕсли;
	
	ФормаВыбораКлиента=Справочники.КлиентыИнтернетАптеки.ПолучитьФормуВыбора("ФормаСписка",ЭтаФорма,1);
	
	ОтборПоКодам=ФормаВыбораКлиента.Отбор.Найти("Код");
	
	ОтборПоКодам.ВидСравнения=ВидСравнения.ВСписке;
	ОтборПоКодам.Значение=СЗ;
	ОтборПоКодам.Использование=Истина;
	
	
	
	
	ФормаВыбораКлиента.Открыть();
	
	
	
КонецПроцедуры

Процедура АптекаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	 
	
	ФормаВыбора=Справочники.МестаХранения.ПолучитьФормуВыбора("ФормаВыбора_ИнтернетАптека",ЭтаФорма,1);
	//ФормаВыбора.Отбор.Найти("ОсуществляетДоставкуКлиенту").Установить(истина,истина);
	ФормаВыбора.Открыть();
КонецПроцедуры


Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("СправочникСсылка.МестаХранения") ТОгда
		Аптека=ЗначениеВыбора;
	КонецЕсли;	
	Если ТипЗнч(ЗначениеВыбора)=Тип("СправочникСсылка.КлиентыИнтернетАптеки") ТОгда
		Клиент=ЗначениеВыбора;
		КлиентПриИзменении("");
	КонецЕсли;	
	
	Если ТипЗнч(ЗначениеВыбора)=Тип("СправочникСсылка.Врачи") ТОгда
		НомерРецепта=ЗначениеВыбора.Код;
	КонецЕсли;	

	
КонецПроцедуры

Процедура Телефон1Открытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=ЛОжь;
	Телефон1ПриИзменении(Элемент);
КонецПроцедуры

Процедура АптекаПриИзменении(Элемент)
	Если Аптека.ОсуществляетДоставкуКлиенту=Ложь Тогда
		Предупреждение("Эту аптеку нельзя выбирать, она не осуществляет доставку!");
		Аптека="";
	КонецЕсли;	

КонецПроцедуры

Процедура ОсновныеДействияФормыВернутьсяВСправку(Кнопка)
	ЭтаФорма.ВладелецФормы.ПересчетСтрокВКорзине();
	ЭтаФорма.ВладелецФормы.Активизировать();
КонецПроцедуры

Процедура КорзинаПослеУдаления(Элемент)
	ЭтаФорма.ВладелецФормы.ПересчетСтрокВКорзине();
КонецПроцедуры

Процедура ТелефонПриИзменении(Элемент)
	Клиент="";
	ЭлементыФормы.Клиент.ЦветФонаПоля=Новый Цвет(255,255,0);//желтый
КонецПроцедуры

Процедура КоманднаяПанель1РазрешитьНазначениеАптеки(Кнопка)
	ЭлементыФормы.НазначитьАптеку.Доступность=Истина;
КонецПроцедуры

Процедура ПриЗакрытии()
	ЭтаФорма.ВладелецФормы.ПересчетСтрокВКорзине();
КонецПроцедуры

Процедура НомерРецептаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	
	ФВ=Справочники.Врачи.ПолучитьФормуВыбора("ФормаДляЗаказа",ЭтаФорма,1);
	ФВ.Открыть();
	
	
КонецПроцедуры



ВидЗаказа = Перечисления.ВидыИнтернетЗаказа.Обычный;

ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить("","Доставка бесплатно");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 50 руб."),"Доставка 50 руб.");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 100 руб."),"Доставка 100 руб.");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 150 руб."),"Доставка 150 руб.");
ЭлементыФормы.ТарифыПоДоставке.СписокВыбора.Добавить(Справочники.Услуги.НайтиПоНаименованию("Доставка 200 руб."),"Доставка 200 руб.");




