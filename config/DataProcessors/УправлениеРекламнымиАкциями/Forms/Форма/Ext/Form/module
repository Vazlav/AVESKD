
Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура КоманднаяПанель1ОбновитьСписокРекламныхАкций(Кнопка)
	
	//-------------- ЗАПРОС GTG --------------------------НАЧАЛО
	//Назначение: Считать список рекламных акций
	//
	ТХТ="ВЫБРАТЬ РАЗЛИЧНЫЕ
	    |	РекламныеАкции.Наименование,
	    |	РекламныеАкции.Начало,
	    |	РекламныеАкции.Окончание,
	    |	РекламныеАкции.Скидка,
	    |	РекламныеАкции.СпособПредоставленияСкидки
		|ИЗ
	    |	Справочник.РекламныеАкции КАК РекламныеАкции";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("",);
	
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	ЭлементыФормы.СРА.Значение=ТЗ;   
	ЭлементыФормы.СРА.СоздатьКолонки();
	//-------------- ЗАПРОС GTG --------------------------КОНЕЦ
	
	ЭлементыФормы.СРА.Колонки["Наименование"].Ширина=35;
	
	
	
	
	
	
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель2Сохранить(Кнопка)
	
	ОчиститьСообщения();
	
	
	СписокОтобранныхПозиций.Свернуть("ТОвар","");
	
	
	МассивТОваров=СписокОтобранныхПозиций.ВыгрузитьКолонку("Товар");
	
	
	//-------------- ЗАПРОС GTG --------------------------НАЧАЛО
	//Назначение: Выборка для добавления/удаления записей
	//
	ТХТ="ВЫБРАТЬ
	    |	база.Товар,
	    |	СУММА(база.Действие) КАК Действие
	    |ИЗ
	    |	(ВЫБРАТЬ
	    |		АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка КАК Товар,
	    |		1 КАК Действие
	    |	ИЗ
	    |		Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	    |	ГДЕ
	    |		АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка В(&СписокТоваровОстался)
	    |	
	    |	ОБЪЕДИНИТЬ ВСЕ
	    |	
	    |	ВЫБРАТЬ
	    |		РекламныеАкцииАП.Владелец.Ссылка,
	    |		-1
	    |	ИЗ
	    |		Справочник.РекламныеАкцииАП КАК РекламныеАкцииАП
	    |	ГДЕ
	    |		РекламныеАкцииАП.НаименованиеРекламнойАкции = &НаименованиеРекламнойАкции) КАК база
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	база.Товар";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("НаименованиеРекламнойАкции",ЭлементыФормы.РекламныеАкции.ТекущаяСтрока);
	Запрос.УстановитьПараметр("СписокТоваровОстался",МассивТОваров);

	
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	
	//-------------- ЗАПРОС GTG --------------------------КОНЕЦ
	
	
	
	
	
	
	Для каждого Стр из ТЗ Цикл
		
		Если Стр.Действие=0 ТОгда
			Продолжить; // ничего не изменилось
		КонецЕсли; 	
		
		Если Стр.Действие=1 Тогда
			//Добавляем
			РААП=Справочники.РекламныеАкцииАП.СоздатьЭлемент();
			РААП.Владелец=Стр.Товар;
			РААП.НаименованиеРекламнойАкции=ЭлементыФормы.РекламныеАкции.ТекущаяСтрока;
			РААП.Записать();
			Сообщить("Добавлен в акцию товар "+Стр.Товар);
		КонецЕсли; 
		
		Если Стр.Действие=-1 ТОгда
			// удаляем
			//-------------- ЗАПРОС GTG --------------------------НАЧАЛО
			//Назначение: Выбрать РААП товара по акции
			//
			ТХТ="ВЫБРАТЬ
			    |	РекламныеАкцииАП.Ссылка
			    |ИЗ
			    |	Справочник.РекламныеАкцииАП КАК РекламныеАкцииАП
			    |ГДЕ
			    |	РекламныеАкцииАП.Владелец = &Товар
			    |	И РекламныеАкцииАП.НаименованиеРекламнойАкции = &НаименованиеРекламнойАкции";
			
			Запрос=Новый Запрос;
			Запрос.Текст=ТХТ;
			Запрос.УстановитьПараметр("Товар",Стр.ТОвар);
			Запрос.УстановитьПараметр("НаименованиеРекламнойАкции",ЭлементыФормы.РекламныеАкции.ТекущаяСтрока);
			
			ТЗРААП=Запрос.Выполнить().Выгрузить();
			
			Если ТЗРаап.Количество()<>0 Тогда
				Для каждого СтрРаап из ТЗРаап Цикл
					Сообщить("Удален из рекламной акции товар "+Стр.товар);
					СтрРаап.Ссылка.ПолучитьОбъект().Удалить();
				КонецЦикла;
			КонецЕсли;	
			//-------------- ЗАПРОС GTG --------------------------КОНЕЦ
		КонецЕсли; 	
		
		
	КонецЦикла;	
	

КонецПроцедуры



Процедура КоманднаяПанель2ПодобратьТовар(Кнопка)
	
    Рез=Обработки.ОтборПоФильтру.ПолучитьФорму("Форма").ОткрытьМодально();
	Если Рез= Неопределено Тогда
		ПРедупреждение("Ничего не выбрано!");
		Возврат;

	КонецЕсли; 	
	
	
	
	Для каждого Стр из Рез Цикл
		
		СтрОП=СписокОтобранныхПозиций.Добавить();
		СтрОП.ТОвар=Стр.Значение;
		
	КонецЦикла;	
	
	СписокОтобранныхПозиций.Свернуть("ТОвар","");
	
	КоманднаяПанель2Сохранить(Кнопка);
	
	
КонецПроцедуры

Процедура РекламныеАкцииПриАктивизацииСтроки(Элемент)
	
	РекламнаяАкция=Элемент.ТекущаяСтрока.Ссылка;
	СписокОтобранныхПозиций.Очистить();
	
	//-------------- ЗАПРОС GTG --------------------------НАЧАЛО
	//Назначение: НайтиТоварыПоЭтойАкции
	//
	ТХТ="ВЫБРАТЬ
	    |	РекламныеАкцииАП.Владелец  как Товар
	    |ИЗ
	    |	Справочник.РекламныеАкцииАП КАК РекламныеАкцииАП
	    |ГДЕ
	    |	РекламныеАкцииАП.НаименованиеРекламнойАкции = &РекламнаяАкция";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("РекламнаяАкция",РекламнаяАкция);
	
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	
	Для каждого Стр из Тз Цикл
		
		СтрОП=СписокОтобранныхПозиций.Добавить();
		СтрОП.ТОвар=Стр.ТОвар;
		
	КонецЦикла;	
	
	СписокОтобранныхПозиций.Свернуть("ТОвар","");
	
	//-------------- ЗАПРОС GTG --------------------------КОНЕЦ
	
	
	
	
КонецПроцедуры


Процедура СписокОтобранныхПозицийПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	КоманднаяПанель2Сохранить("");
КонецПроцедуры

Процедура ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	  КоманднаяПанель2Сохранить("");
	
	
КонецПроцедуры

Процедура КоманднаяПанель2ОчиститьВсеТоварыРА(Кнопка)
	
	СписокОтобранныхПозиций.Очистить();
	
КонецПроцедуры

Процедура КоманднаяПанель2СкопироватьИзДругойАкции(Кнопка)

	   АкцияИсточникТовара=Неопределено;
	   Копир=ЭтотОбъект.ПолучитьФорму("КопированиеТоваровИзДругойАкции",ЭтаФорма,Новый УникальныйИдентификатор);
	   Копир.ТекущаяАкция=ЭлементыФормы.РекламныеАкции.ТекущаяСтрока;
	   Копир.СписокТОваров=СписокОтобранныхПозиций;
	   Копир.ОткрытьМодально();
	   
	   Сообщить(АкцияИсточникТовара);
	   Запрос=Новый Запрос("ВЫБРАТЬ
	   |	РекламныеАкцииАП.Владелец  как Товар
	   |ИЗ
	   |	Справочник.РекламныеАкцииАП КАК РекламныеАкцииАП
	   |ГДЕ
	   |	РекламныеАкцииАП.НаименованиеРекламнойАкции = &Акция_ИсточникТовара");
	   
	   Запрос.УстановитьПараметр("Акция_ИсточникТовара",АкцияИсточникТовара);
	   
	   Товары=Запрос.Выполнить().Выгрузить();
	   
	   
	  ЭлементыФормы.СписокОтобранныхПозиций.Значение=Товары; 
	   ЭлементыФормы.СписокОтобранныхПозиций.СоздатьКолонки();
	   
	   
	
	
КонецПроцедуры







ОчиститьСообщения();


