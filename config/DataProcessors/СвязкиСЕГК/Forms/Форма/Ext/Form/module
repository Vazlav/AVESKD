
Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура КоманднаяПанель2Обновить(Кнопка)
	
	Если ПоказыватьТолькоСвязанные = Истина Тогда
		ТипСоединения = "ВНУТРЕННЕЕ";
	Иначе
		ТипСоединения = "ЛЕВОЕ";
	КонецЕсли;
	Если УчаствуетВАП = Истина Тогда
		ДопУсловие = " И АССОРТИМЕНТНЫЙ_ПЛАН.УчаствуетВАП = Истина";
	Иначе
		ДопУсловие = "";
	КонецЕсли;
	
	ТХТ = "ВЫБРАТЬ
	      |	АССОРТИМЕНТНЫЙ_ПЛАН.Код,
	      |	АССОРТИМЕНТНЫЙ_ПЛАН.Наименование КАК Товар,
	      |	ЕСТЬNULL(СвязкиСЕГК.КодЕГК, 0) КАК КодЕГК,
	      |	ЕСТЬNULL(НоменклатураЕГК.Наименование, """") КАК ТоварЕГК
	      |ИЗ
	      |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	      |		" +ТипСоединения+ " СОЕДИНЕНИЕ Справочник.СвязкиСЕГК КАК СвязкиСЕГК
	      |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураЕГК КАК НоменклатураЕГК
	      |			ПО СвязкиСЕГК.КодЕГК = НоменклатураЕГК.Код
	      |		ПО (СвязкиСЕГК.Товар = АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка)
	      |ГДЕ  ИСТИНА = ИСТИНА " + ДопУсловие + "
	      |УПОРЯДОЧИТЬ ПО
	      |	Товар";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	ТЗ = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

Процедура ТЗПриАктивизацииСтроки(Элемент)
	
	Если ФильтроватьПоПервомуСлову = Истина Тогда
		ТекСтрока = Элемент.ТекущаяСтрока.Товар; 
		ПервыйПробел = Найти(ТекСтрока," ");
		СтрокаПоиска = "%"+Лев(ТекСтрока,ПервыйПробел)+"%";
		ПолучитьТаблицуЕГК(СтрокаПоиска);
	КонецЕсли;
	
	//ПолеТекТовар = Элемент.ТекущаяСтрока.Товар;
	
	
	//Если ФильтроватьПоПервомуСлову = Истина Тогда
	//	ТекСтрока = Элемент.ТекущаяСтрока.Товар; 	
	//	//ЕГК.Отбор.Добавить("Наименование");
	//	ЕГК.Отбор["Наименование"].ВидСравнения =ВидСравнения.Содержит;	
	//	ПервыйПробел = Найти(ТекСтрока," ");
	//	ЕГК.Отбор["Наименование"].Значение = Лев(ТекСтрока,ПервыйПробел);
	//	
	//	ЕГК.Отбор["Наименование"].Использование = Истина;
	//КонецЕсли;
	
	
КонецПроцедуры

Процедура ФильтроватьПоПервомуСловуПриИзменении(Элемент)
	
	Если Элемент.Значение = Ложь Тогда
		ЕГК.Отбор["Наименование"].Использование = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель2УстановитьСвязку(Кнопка)
	
	ТекСтрокаТЗ = ЭлементыФормы.ТЗ.ТекущаяСтрока;
	Если ТекСтрокаТЗ.КодЕГК > 0  Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Данная позиция уже имеет связку. Хотите установить еще одну?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		Иначе
			ОбновлятьСтроку = Ложь;
		КонецЕсли;
	Иначе
		ОбновлятьСтроку = Истина;
	КонецЕсли;
	ТекСтрокаЕГК = ЭлементыФормы.ЕГК.ТекущаяСтрока;
	СпрСвязкиЕГК = Справочники.СвязкиСЕГК;
	ТоварСсылка = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(ТекСтрокаТЗ.Код);
	Если ТоварСсылка.Пустая() Тогда
		Предупреждение("По коду " + ТекСтрокаТЗ.Код + " не найден товар в справочнике АП");
		Возврат;
	КонецЕсли;
	
	Связка = СпрСвязкиЕГК.СоздатьЭлемент();
	Связка.КодЕГК = ТекСтрокаЕГК.Код;
	Связка.Товар = ТоварСсылка;
	Попытка
		Связка.Записать();
		Если ОбновлятьСтроку = Истина Тогда
			ТекСтрокаТЗ.КодЕГК = ТекСтрокаЕГК.Код;
			ТекСтрокаТЗ.ТоварЕГК = ТекСтрокаЕГК.Наименование;
		КонецЕсли;
	Исключение
		Сообщить("Установить связку не удалось! Повторите попытку.",СтатусСообщения.Важное);
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	
КонецПроцедуры

Процедура КоманднаяПанель2УдалитьСвязку(Кнопка)
	
	ТекСтрокаТЗ = ЭлементыФормы.ТЗ.ТекущаяСтрока;
	КодЕГК = ТекСтрокаТЗ.КодЕГК;
	Если КодЕГК = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТХТ = "ВЫБРАТЬ
	      |	СвязкиСЕГК.Ссылка как Ссылка
	      |ИЗ
	      |	Справочник.СвязкиСЕГК КАК СвязкиСЕГК
	      |ГДЕ
	      |	СвязкиСЕГК.КодЕГК = &КодЕГК
	      |	И СвязкиСЕГК.Товар.Код = &Код";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("КодЕГК",КодЕГК);
	Запрос.УстановитьПараметр("Код",ТекСтрокаТЗ.Код);
	Рез=Запрос.Выполнить();
	
	Если Рез.Пустой() = Ложь Тогда
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		СвязкаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Попытка
			СвязкаОбъект.Удалить();
			ТекСтрокаТЗ.КодЕГК = 0;
			ТекСтрокаТЗ.ТоварЕГК = "";			
		Исключение
			Сообщить("Удалить связку не удалось! Повторите попытку.",СтатусСообщения.Важное);
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
    КонецЕсли;
	
КонецПроцедуры

Процедура ПоказыватьТолькоСвязанныеПриИзменении(Элемент)
	
	КоманднаяПанель2Обновить("");
	
КонецПроцедуры


Процедура УчаствуетВАППриИзменении(Элемент)
	КоманднаяПанель2Обновить("");
КонецПроцедуры

Процедура ПолучитьТаблицуЕГК(СтрокаПоиска)
	
	ТХТ = "ВЫБРАТЬ
	|	НоменклатураЕГК.Код,
	|	НоменклатураЕГК.Наименование КАК Наименование
	|ИЗ
	|	Справочник.НоменклатураЕГК КАК НоменклатураЕГК
	|ГДЕ
	|	НоменклатураЕГК.Наименование ПОДОБНО &Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Наименование",СтрокаПоиска); 
	ЕГК = Запрос.Выполнить().Выгрузить();
	ЕГК.Колонки["Код"].Ширина = 10;
	ЕГК.Колонки["Наименование"].Ширина = 100;	
	
КонецПроцедуры

Процедура ПолеТекТоварПриИзменении(Элемент)
	
	СтрокаПоиска = "%" + СтрЗаменить(СокрЛП(ПолеТекТовар)," ","%") + "%" ;
	//Сообщить(СтрокаПоиска);
    ПолучитьТаблицуЕГК(СтрокаПоиска);

	
КонецПроцедуры


Процедура Кнопка1Нажатие(Элемент)
	ПолеТекТовар = "";
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ПолеТекТовар;
КонецПроцедуры

