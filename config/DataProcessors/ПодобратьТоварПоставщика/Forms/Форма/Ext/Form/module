Перем МожноЗакрыть;
Процедура ЗаполнитьШапкуДокументаЗаказа(Док,Поставщик,Склад,НомерЗаявкиАптеки)
	
	Док.Поставщик=Поставщик;
	Док.Склад = Склад;
	Док.Статус=Перечисления.СтатусЗаказаПоставщику.Создан;
	Док.НомерЗаявкиАптеки = НомерЗаявкиАптеки;
	Док.Дата=ТекущаяДата();
		
	СтрИзм=Док.Изменения.Добавить();
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.КомментарийИзменения="Создан документ из " + ЭтотОбъект;
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
КонецПроцедуры

Процедура РаспределитьПоАптекам()
	
	ЭлементыФормы.Лог.Очистить();
	ЭлементыФормы.Лог.ДобавитьСтроку("Процесс обработки выбранных позиций:");
	
	ВыбранныеПозиции.Сортировать("Поставщик");
	
	
	
	Для каждого ТекАптека из СписокАптек Цикл
		Если ТекАптека.Пометка = Ложь Тогда
			Продолжить;
		КонецЕсли;
		Аптека = ТекАптека.Значение;
		Вхождение = 0;
		СтарыйПоставщик = Справочники.Поставщики.ПустаяСсылка();
		Док=Документы.Заказ.СоздатьДокумент();
		
		
		Для каждого стр из ВыбранныеПозиции Цикл
			
			Поставщик=стр.Поставщик;
			ТоварСсылка = стр.ТоварСсылка;
			Количество = стр.Количество;
			Цена = стр.Цена;
			КодТовараПоставщика = стр.Код;
			ТоварПоставщика = стр.Наименование;
			НомДок = 0;
			НомерЗаписи = стр.НомерЗаписи;
			КодПрайсЛиста = стр.КодПрайсЛиста;
			СрокГодности = стр.СрокГодности;			
			
			Если СтарыйПоставщик <> Поставщик Тогда
				Если Вхождение <> 0 Тогда
					Записан = Ложь;
					Для ы =0 по 3 Цикл
						Попытка
							Док.СуммаДок = Док.Товар.Итог("Сумма");
							Док.Записать(РежимЗАписиДокумента.Запись);
							//СписокДокументовЗаказа.Добавить(Док,Док);   // Запоминаем документ. Потом будем сверять и выгружать
							Записан = Истина;
							ЭлементыФормы.Лог.ДобавитьСтроку("	- создан документ " + Док);
							
							Если (ВыгружатьЗаказы = Истина) Тогда
								Попытка
									Если Док.ВыгрузитьПоставщику() = Истина Тогда
										Док.Записать(РежимЗаписиДокумента.Проведение);
										ЭлементыФормы.Лог.ДобавитьСтроку("	- выгрузили и провели ");
										Прервать;
									КонецЕсли;
								Исключение
									ЭлементыФормы.Лог.ДобавитьСтроку("	- ошибка выгрузки документа ");
									Записан = Истина; // а чтобы в глухой цикл не попасть
								КонецПопытки;
							Иначе
								Прервать;	
							КонецЕсли;
							
							//ЗаписатьЦеныВРегистр(ТЗОтказов,Док);
						Исключение
							ОбщегоНазначения.Задержка(2);
							Записан = Ложь;
						КонецПопытки; 
					КонецЦикла;				
					
					Док=Документы.Заказ.СоздатьДокумент();
					ЭлементыФормы.Лог.ДобавитьСтроку("------------------------------------" );
				КонецЕсли;
				ЗаполнитьШапкуДокументаЗаказа(Док,Поставщик,Аптека,0);
				ЭлементыФормы.Лог.ДобавитьСтроку("обработка поставщика: " + Поставщик);
				СтарыйПоставщик = Поставщик;
				Вхождение = 1;
			КонецЕсли;
			
			//------- Заполняем табл. часть документа		
			Стр = Док.Товар.Добавить();
			Стр.Товар=ТоварСсылка;
			Стр.Количество=Количество;
			Стр.Цена = Цена;
			Стр.Сумма = Цена*Количество;
			Стр.КодТовараПоставщика = КодТовараПоставщика;
			Стр.НаименованиеТовараПоставщика = ТоварПоставщика;
			Стр.НомерЗаявкиАптеки = НомДок;
			стр.НомерЗаписи = НомерЗаписи;
			стр.КаталогПрайса = КодПрайсЛиста;			
			
		КонецЦикла;
		Записан = Ложь;
		Для ы=0 по 3 Цикл
			Попытка
				Док.СуммаДок = Док.Товар.Итог("Сумма");
				Док.Записать(РежимЗАписиДокумента.Запись);
				ЭлементыФормы.Лог.ДобавитьСтроку("	- создан документ " + Док);
				Записан = Истина;
			Исключение
				ОбщегоНазначения.Задержка(2);
				Записан = Ложь;
			КонецПопытки;
		КонецЦикла;
		
		
		Если (ВыгружатьЗаказы = Истина) и Записан = Истина Тогда
			Попытка
				Если Док.ВыгрузитьПоставщику() = Истина Тогда
					Док.Записать(РежимЗаписиДокумента.Проведение);
					ЭлементыФормы.Лог.ДобавитьСтроку("	- выгрузили и провели ");
				КонецЕсли;
			Исключение
				ЭлементыФормы.Лог.ДобавитьСтроку("	- ошибка выгрузки документа ");
				Записан = Истина; // а чтобы в глухой цикл не попасть
			КонецПопытки;
		КонецЕсли;
		
		
	КонецЦикла;
	
    ЭлементыФормы.Лог.ДобавитьСтроку("Процесс окончен !!! ");
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Очистить таблицу выбранных позиций?",Режим,5,КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыбранныеПозиции.Очистить();
		Итоги.Очистить();
	КонецЕсли;

	
	
КонецПроцедуры

Процедура СоздатьДокументыЗаказа()
	
	ЭлементыФормы.Лог.Очистить();
	ЭлементыФормы.Лог.ДобавитьСтроку("Процесс обработки выбранных позиций:");
	
	ВыбранныеПозиции.Сортировать("Поставщик");
	
	Вхождение = 0;
	СтарыйПоставщик = Справочники.Поставщики.ПустаяСсылка();
	Док=Документы.Заказ.СоздатьДокумент();
	
	Для каждого стр из ВыбранныеПозиции Цикл
		
		Поставщик=стр.Поставщик;
		ТоварСсылка = стр.ТоварСсылка;
		Количество = стр.Количество;
		Цена = стр.Цена;
		КодТовараПоставщика = стр.Код;
		ТоварПоставщика = стр.Наименование;
		СрокГодности = стр.СрокГодности;
		НомДок = 0;
		НомерЗаписи = стр.НомерЗаписи;
		КодПрайсЛиста = стр.КодПрайсЛиста;
		
		
		Если СтарыйПоставщик <> Поставщик Тогда
			Если Вхождение <> 0 Тогда
				Записан = Ложь;
				Для н=1 по 5 Цикл
					Попытка
						Док.СуммаДок = Док.Товар.Итог("Сумма");
						Док.Записать(РежимЗАписиДокумента.Запись);
						//СписокДокументовЗаказа.Добавить(Док,Док);   // Запоминаем документ. Потом будем сверять и выгружать
						Записан = Истина;
						ЭлементыФормы.Лог.ДобавитьСтроку("	- создан документ " + Док);
						
						Если (ВыгружатьЗаказы = Истина) Тогда
								Попытка
									Если Док.ВыгрузитьПоставщику() = Истина Тогда
										Док.Записать(РежимЗаписиДокумента.Проведение);
										ЭлементыФормы.Лог.ДобавитьСтроку("	- выгрузили и провели ");
										Прервать;
									КонецЕсли;
								Исключение
									ЭлементыФормы.Лог.ДобавитьСтроку("	- ошибка выгрузки документа ");
									ЭлементыФормы.Лог.ДобавитьСтроку("	-  "+ ОписаниеОшибки());

									Записан = Истина; // а чтобы в глухой цикл не попасть
								КонецПопытки;
						Иначе
							ЭлементыФормы.Лог.ДобавитьСтроку("	- не выгружен. ");
							Прервать;
						КонецЕсли;						
						//ЗаписатьЦеныВРегистр(ТЗОтказов,Док);
					Исключение
						Записан = Ложь;
						#Если Клиент Тогда
							Предупреждение("Ожидание блокировки записи документа 2 сек.",2);
						#КонецЕсли
					КонецПопытки; 
				КонецЦикла;				

				Док=Документы.Заказ.СоздатьДокумент();
				ЭлементыФормы.Лог.ДобавитьСтроку("------------------------------------" );
			КонецЕсли;
			ЗаполнитьШапкуДокументаЗаказа(Док,Поставщик,Аптека,0);
			ЭлементыФормы.Лог.ДобавитьСтроку("обработка поставщика: " + Поставщик);
			СтарыйПоставщик = Поставщик;
			Вхождение = 1;
		КонецЕсли;
		
		
		//------------------<Проверим , есть ли товар по полученному коду в справочнике>-------------------Virus----28.12.2007
		//Если ТоварСсылка = СпрТовар.ПустаяСсылка() Тогда
		//	//Сообщить("Товар по коду = " + КодТовара + " не найден в справочнике АП!");
		//	Продолжить;
		//КонецЕсли; 
		
		//==================< Проверим цену на превышение и если оно есть, то выкидываем в отказы > ===========
		// пока не надо Расхождение = ПроверитьЦенуНаПревышение(ТоварСсылка,Цена);
		
		//Если Расхождение = "" Тогда 
			//------- Заполняем табл. часть документа		
			Стр = Док.Товар.Добавить();
			Стр.Товар=ТоварСсылка;
			Стр.Количество=Количество;
			Стр.Цена = Цена;
			Стр.Сумма = Цена*Количество;
			Стр.КодТовараПоставщика = КодТовараПоставщика;
			Стр.НаименованиеТовараПоставщика = ТоварПоставщика;
			Стр.НомерЗаявкиАптеки = НомДок;
			Стр.СрокГодности = СрокГодности;
			стр.НомерЗаписи = НомерЗаписи;
			стр.КаталогПрайса = КодПрайсЛиста;

		
		//Иначе //------ Есть превышение цены, значит в отказы закидываем
		//	Стр = ТЗОтказов.Добавить();
		//	Стр.Товар=ТоварСсылка;
		//	Стр.Количество=Количество;
		//	Стр.Цена = Цена;
		//	Стр.Сумма = Цена*Количество;
		//	Стр.КодТовараПоставщика = КодТовараПоставщика;
		//	Стр.НаименованиеТовараПоставщика = ТоварПоставщика;
		//	Стр.НомерЗаявкиАптеки = НомДок;
		//	Стр.ПричинаОтказа = Расхождение;
		//	РС. MoveNext(); 
		//Конецесли;
	КонецЦикла;
	
	Записан = Ложь;
	Для н=1 по 5 Цикл
		Попытка
			Док.СуммаДок = Док.Товар.Итог("Сумма");
			Док.Записать(РежимЗАписиДокумента.Запись);	
			
			Записан = Истина;
			ЭлементыФормы.Лог.ДобавитьСтроку("	- создан документ " + Док);
			Если (ВыгружатьЗаказы = Истина) Тогда
					Попытка
						Если Док.ВыгрузитьПоставщику() = Истина Тогда
							Док.Записать(РежимЗаписиДокумента.Проведение);
							ЭлементыФормы.Лог.ДобавитьСтроку("	- выгрузили и провели ");
							Прервать;
						КонецЕсли;
					Исключение
						ЭлементыФормы.Лог.ДобавитьСтроку("	- ошибка выгрузки документа ");
						ЭлементыФормы.Лог.ДобавитьСтроку("	-  "+ ОписаниеОшибки());
						Записан = Истина; // а чтобы в глухой цикл не попасть
						//Прервать;
					КонецПопытки;
			Иначе
				ЭлементыФормы.Лог.ДобавитьСтроку("	- не выгружен.");
				Прервать;
			КонецЕсли;			
		Исключение
			Записан = Ложь;
			#Если Клиент Тогда
				Предупреждение("Ожидание блокировки записи документа 2 сек.",2);
			#КонецЕсли
		КонецПопытки; 
	КонецЦикла;				
    ЭлементыФормы.Лог.ДобавитьСтроку("Процесс окончен !!! ");
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Очистить таблицу выбранных позиций?",Режим,5,КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыбранныеПозиции.Очистить();
		Итоги.Очистить();
	КонецЕсли;
	
КонецПроцедуры  //СоздатьДокументыЗаказа()


Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Если ВыбранныеПозиции.Количество() = 0 Тогда
		Предупреждение("Нет строк - нет и документов!");
		Возврат;
	КонецЕсли;
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Если ВладелецФормы <> Неопределено Тогда
		Ответ = Вопрос("Перенести позиции в документ?",Режим,0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			МожноЗакрыть = Истина;
			ОповеститьОВыборе(ВыбранныеПозиции);
		КонецЕсли;
	Иначе
		Ответ = Вопрос("Создать заказы из выбранного?",Режим,0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Лог;
			Если РаспределитьПоАптекам = Истина Тогда 
				РаспределитьПоАптекам();
			Иначе
				СоздатьДокументыЗаказа();		
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	
КонецПроцедуры

Процедура ПолучитьПрайс()
	
	//ПоискПо = 1 ---> Наименованию поставщика
	//ПоискПо = 2 ---> Наименованию фирмы
	//ПоискПо = 3 ---> Производителю
	Если НЕ ОтборПоставщик.Пустая() Тогда
		ОтборПоПоставщику = " КонтрактыИАптеки.Владелец.Владелец = &Поставщик И ";
	КонецЕсли;
	
	Если ПоискПо = 2 Тогда
		
		ТХТ = "ВЫБРАТЬ
		      |	КаталогПрайсЛистов.Настройка.Владелец КАК Поставщик,
		      |	КаталогПрайсЛистов.Настройка КАК Настройка,
		      |	КаталогПрайсЛистов.КодПрайсЛиста,
		      |	ВЫБОР
		      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика = 0
		      |			ТОГДА 1
		      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика
		      |	КОНЕЦ КАК БазовыйКоэфф,
		      |	ВЫБОР
		      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентПриведенияЦены = 0
		      |			ТОГДА 1
		      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентПриведенияЦены
		      |	КОНЕЦ КАК КоэффПриведения
		      |ПОМЕСТИТЬ Параметры
		      |ИЗ
		      |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
		      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
		      |			ПО КонтрактыИНастройки.НастройкаОбмена = КаталогПрайсЛистов.Настройка
		      |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
		      |ГДЕ  " + ОтборПоПоставщику + "
		      |	КонтрактыИАптеки.Активность = ИСТИНА
		      |	И КонтрактыИАптеки.Аптека = &Аптека
		      |	И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
		      |	И КонтрактыИАптеки.Владелец.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	Прайсы.Код КАК Код,
		      |	Прайсы.Товар КАК Наименование,
		      |	Связки.ТоварФирмы.Наименование КАК Аптечка,
		      |	Прайсы.Количество КАК Количество,
		      |	ВЫРАЗИТЬ(Прайсы.Цена * Параметры.БазовыйКоэфф КАК ЧИСЛО(12, 2)) КАК Цена,
		      |	Прайсы.Производитель,
		      |	Параметры.Поставщик КАК Поставщик,
		      |	Прайсы.СрокГодности КАК СрокГодности,
		      |	ЕСТЬNULL(Связки.Блокировка, ЛОЖЬ) КАК Блокировка,
		      |	Связки.ТоварФирмы.ЖНВЛС КАК Ж,
		      |	Связки.ТоварФирмы КАК Товар,
		      |	Выбор когда Прайсы.Кратность = 0 Тогда 1 Иначе Прайсы.Кратность КОНЕЦ КАК Кратность,
		      |	Параметры.Настройка КАК Настройка,
		      |	Прайсы.КодПрайсЛиста КАК КодПрайсЛиста,
		      |	Прайсы.НомерЗаписи КАК НомерЗаписи
		      |ИЗ
		      |	РегистрСведений.ПрайсЛисты КАК Прайсы
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Параметры КАК Параметры
		      |		ПО Прайсы.КодПрайсЛиста = Параметры.КодПрайсЛиста
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
		      |		ПО Прайсы.ПоставщикСвязки = Связки.Поставщик
		      |			И Прайсы.Код = Связки.КодТовараПоставщика
		      |			И (Связки.Блокировка = ЛОЖЬ)
		      |ГДЕ
		      |	Связки.ТоварФирмы.Наименование ПОДОБНО &Наименование
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	Аптечка,
		      |	Цена
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ Параметры";
		
		//ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		//	  |	Поставщики.Ссылка КАК Поставщик,
		//	  |	Выборка.Владелец
		//	  |ПОМЕСТИТЬ ТЗПоставщиков
		//	  |ИЗ
		//	  |	Справочник.Поставщики КАК Поставщики
		//	  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		//	  |			ОбслуживаемыеАптеки.Владелец КАК Владелец
		//	  |		ИЗ
		//	  |			Справочник.ОбслуживаемыеАптеки КАК ОбслуживаемыеАптеки
		//	  |		ГДЕ
		//	  |			ОбслуживаемыеАптеки.Аптека = &Аптека
		//	  |			И &УчитыватьАптеку = ИСТИНА) КАК Выборка
		//	  |		ПО (Выборка.Владелец = Поставщики.Ссылка)
		//	  |ГДЕ " + ОтборПоПоставщику + "
		//	  |	Поставщики.ОсуществляетПрямыеПоставки = ИСТИНА
		//	  | 
		//	  |	И ВЫБОР
		//	  |			КОГДА &УчитыватьАптеку = ИСТИНА
		//	  |				ТОГДА Выборка.Владелец
		//	  |			ИНАЧЕ Поставщики.Ссылка
		//	  |		КОНЕЦ = Поставщики.Ссылка
		//	  |;
		//	  |
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |ВЫБРАТЬ
		//	  |	ВЫБОР
		//	  |		КОГДА Прайсы.Поставщик = &Геофарм
		//	  |			ТОГДА Прайсы.Код + ""-"" + Прайсы.ПартияПоставщика
		//	  |		ИНАЧЕ Прайсы.Код
		//	  |	КОНЕЦ КАК Код,
		//	  |	Прайсы.Товар КАК Наименование,
		//	  |	СвязкиТовараСПоставщиком.ТоварФирмы.Наименование КАК Аптечка,
		//	  |	Прайсы.Количество,
		//	  |	Прайсы.Цена КАК Цена,
		//	  |	Прайсы.Производитель,
		//	  |	Прайсы.Поставщик,
		//	  |	СвязкиТовараСПоставщиком.ТоварФирмы.ЖНВЛС КАК Ж,
		//	  |	СвязкиТовараСПоставщиком.ТоварФирмы КАК Товар,
		//	  |	Прайсы.СрокГодности,
		//	  | ЕСТЬNULL(СвязкиТовараСПоставщиком.Блокировка,ЛОЖЬ) как Блокировка
		//	  |ИЗ
		//	  |	РегистрСведений.Прайсы КАК Прайсы
		//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК СвязкиТовараСПоставщиком
		//	  |		ПО Прайсы.Поставщик = СвязкиТовараСПоставщиком.Поставщик
		//	  |			И Прайсы.Код = СвязкиТовараСПоставщиком.КодТовараПоставщика
		//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗПоставщиков КАК ТЗПоставщиков
		//	  |		ПО (ТЗПоставщиков.Поставщик = Прайсы.Поставщик)
		//	  |ГДЕ
		//	  |	СвязкиТовараСПоставщиком.ТоварФирмы.Наименование ПОДОБНО &Наименование
		//	  |
		//	  |УПОРЯДОЧИТЬ ПО
		//	  |	Аптечка,
		//	  |	Цена
		//	  |;
		//	  |
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |УНИЧТОЖИТЬ ТЗПоставщиков";
		
		
	ИначеЕсли ПоискПо = 1 Тогда
		ТХТ = "ВЫБРАТЬ
		      |	КаталогПрайсЛистов.Настройка.Владелец КАК Поставщик,
		      |	КаталогПрайсЛистов.Настройка КАК Настройка,
		      |	КаталогПрайсЛистов.КодПрайсЛиста,
		      |	ВЫБОР
		      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика = 0
		      |			ТОГДА 1
		      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика
		      |	КОНЕЦ КАК БазовыйКоэфф,
		      |	ВЫБОР
		      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентПриведенияЦены = 0
		      |			ТОГДА 1
		      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентПриведенияЦены
		      |	КОНЕЦ КАК КоэффПриведения
		      |ПОМЕСТИТЬ Параметры
		      |ИЗ
		      |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
		      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
		      |			ПО КонтрактыИНастройки.НастройкаОбмена = КаталогПрайсЛистов.Настройка
		      |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
		      |ГДЕ  " + ОтборПоПоставщику + "
		      |	КонтрактыИАптеки.Активность = ИСТИНА
		      |	И КонтрактыИАптеки.Аптека = &Аптека
		      |	И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
		      |	И КонтрактыИАптеки.Владелец.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	Прайсы.Код КАК Код,
		      |	Прайсы.Товар КАК Наименование,
		      |	Связки.ТоварФирмы.Наименование КАК Аптечка,
		      |	Прайсы.Количество КАК Количество,
		      |	ВЫРАЗИТЬ(Прайсы.Цена * Параметры.БазовыйКоэфф КАК ЧИСЛО(12, 2)) КАК Цена,
		      |	Прайсы.Производитель,
		      |	Параметры.Поставщик КАК Поставщик,
		      |	Прайсы.СрокГодности КАК СрокГодности,
		      |	ЕСТЬNULL(Связки.Блокировка, ЛОЖЬ) КАК Блокировка,
		      |	Связки.ТоварФирмы.ЖНВЛС КАК Ж,
		      |	Связки.ТоварФирмы КАК Товар,
		      |	Выбор когда Прайсы.Кратность = 0 Тогда 1 Иначе Прайсы.Кратность КОНЕЦ КАК Кратность,
		      |	Параметры.Настройка КАК Настройка,
		      |	Прайсы.КодПрайсЛиста КАК КодПрайсЛиста,
		      |	Прайсы.НомерЗаписи КАК НомерЗаписи
		      |ИЗ
		      |	РегистрСведений.ПрайсЛисты КАК Прайсы
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Параметры КАК Параметры
		      |		ПО Прайсы.КодПрайсЛиста = Параметры.КодПрайсЛиста
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
		      |		ПО Прайсы.ПоставщикСвязки = Связки.Поставщик
		      |			И Прайсы.Код = Связки.КодТовараПоставщика
		      |			И (Связки.Блокировка = ЛОЖЬ)
		      |ГДЕ
		      |	Прайсы.Товар ПОДОБНО &Наименование
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	Аптечка,
		      |	Цена
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ Параметры";

		Иначе
		ТХТ = "ВЫБРАТЬ
		      |	КаталогПрайсЛистов.Настройка.Владелец КАК Поставщик,
		      |	КаталогПрайсЛистов.Настройка КАК Настройка,
		      |	КаталогПрайсЛистов.КодПрайсЛиста,
		      |	ВЫБОР
		      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика = 0
		      |			ТОГДА 1
		      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика
		      |	КОНЕЦ КАК БазовыйКоэфф,
		      |	ВЫБОР
		      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентПриведенияЦены = 0
		      |			ТОГДА 1
		      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентПриведенияЦены
		      |	КОНЕЦ КАК КоэффПриведения
		      |ПОМЕСТИТЬ Параметры
		      |ИЗ
		      |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
		      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
		      |			ПО КонтрактыИНастройки.НастройкаОбмена = КаталогПрайсЛистов.Настройка
		      |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
		      |ГДЕ  " + ОтборПоПоставщику + "
		      |	КонтрактыИАптеки.Активность = ИСТИНА
		      |	И КонтрактыИАптеки.Аптека = &Аптека
		      |	И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
		      |	И КонтрактыИАптеки.Владелец.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	Прайсы.Код КАК Код,
		      |	Прайсы.Товар КАК Наименование,
		      |	Связки.ТоварФирмы.Наименование КАК Аптечка,
		      |	Прайсы.Количество КАК Количество,
		      |	ВЫРАЗИТЬ(Прайсы.Цена * Параметры.БазовыйКоэфф КАК ЧИСЛО(12, 2)) КАК Цена,
		      |	Прайсы.Производитель,
		      |	Параметры.Поставщик КАК Поставщик,
		      |	Прайсы.СрокГодности КАК СрокГодности,
		      |	ЕСТЬNULL(Связки.Блокировка, ЛОЖЬ) КАК Блокировка,
		      |	Связки.ТоварФирмы.ЖНВЛС КАК Ж,
		      |	Связки.ТоварФирмы КАК Товар,
		      |	Выбор когда Прайсы.Кратность = 0 Тогда 1 Иначе Прайсы.Кратность КОНЕЦ КАК Кратность,
		      |	Параметры.Настройка КАК Настройка,
		      |	Прайсы.КодПрайсЛиста КАК КодПрайсЛиста,
		      |	Прайсы.НомерЗаписи КАК НомерЗаписи
		      |ИЗ
		      |	РегистрСведений.ПрайсЛисты КАК Прайсы
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Параметры КАК Параметры
		      |		ПО Прайсы.КодПрайсЛиста = Параметры.КодПрайсЛиста
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
		      |		ПО Прайсы.ПоставщикСвязки = Связки.Поставщик
		      |			И Прайсы.Код = Связки.КодТовараПоставщика
		      |			И (Связки.Блокировка = ЛОЖЬ)
		      |ГДЕ
		      |	Прайсы.Производитель ПОДОБНО &Наименование
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	Аптечка,
		      |	Цена
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ Параметры";

	
		
	КонецЕсли;
	
		Запрос = Новый  Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("УчитыватьАптеку",НЕ ПоВсемПрайсам);
		Запрос.УстановитьПараметр("Наименование","%" + СтрЗаменить(СокрЛП(СтрокаПоиска)," ","%") + "%");
		Запрос.УстановитьПараметр("Поставщик",ОтборПоставщик);
		ТЗ = Запрос.Выполнить().Выгрузить();
	ЭлементыФормы.Товар.Значение=ТЗ;
	ЭлементыФормы.Товар.СоздатьКолонки();
	ЭлементыФормы.Товар.Колонки.Код.Ширина = 6;
	ЭлементыФормы.Товар.Колонки.Наименование.Ширина = 50;
	ЭлементыФормы.Товар.Колонки.Аптечка.Ширина = 50;
	ЭлементыФормы.Товар.Колонки.Ж.Ширина = 4;
	ЭлементыФормы.Товар.Колонки.Поставщик.Ширина = 30;
	ЭлементыФормы.Товар.Колонки.Цена.Ширина = 10;
	ЭлементыФормы.Товар.Колонки.Количество.Ширина = 10;
	ЭлементыФормы.Товар.Колонки.СрокГодности.Ширина = 15;
	ЭлементыФормы.Товар.Колонки.Производитель.Ширина = 30;
	ЭлементыФормы.Товар.Колонки.Товар.Ширина = 50;
	ЭлементыФормы.Товар.Колонки.Блокировка.Ширина = 6;
	//ЭлементыФормы.Товар.Колонки.КодПоставщика.Ширина = 10;
	
	
КонецПроцедуры

Процедура ПолучитьПрайсСтарый()
	
	//ПоискПо = 1 ---> Наименованию поставщика
	//ПоискПо = 2 ---> Наименованию фирмы
	//ПоискПо = 3 ---> Производителю
	Если НЕ ОтборПоставщик.Пустая() Тогда
		ОтборПоПоставщику = " Поставщики.Ссылка = &Поставщик И ";
	КонецЕсли;
	
	Если ПоискПо = 2 Тогда
		
		ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		      |	Поставщики.Ссылка КАК Поставщик,
		      |	Выборка.Владелец
		      |ПОМЕСТИТЬ ТЗПоставщиков
		      |ИЗ
		      |	Справочник.Поставщики КАК Поставщики
		      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		      |			ОбслуживаемыеАптеки.Владелец КАК Владелец
		      |		ИЗ
		      |			Справочник.ОбслуживаемыеАптеки КАК ОбслуживаемыеАптеки
		      |		ГДЕ
		      |			ОбслуживаемыеАптеки.Аптека = &Аптека
		      |			И &УчитыватьАптеку = ИСТИНА) КАК Выборка
		      |		ПО (Выборка.Владелец = Поставщики.Ссылка)
		      |ГДЕ " + ОтборПоПоставщику + "
		      |	Поставщики.ОсуществляетПрямыеПоставки = ИСТИНА
			  | 
		      |	И ВЫБОР
		      |			КОГДА &УчитыватьАптеку = ИСТИНА
		      |				ТОГДА Выборка.Владелец
		      |			ИНАЧЕ Поставщики.Ссылка
		      |		КОНЕЦ = Поставщики.Ссылка
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	ВЫБОР
		      |		КОГДА Прайсы.Поставщик = &Геофарм
		      |			ТОГДА Прайсы.Код + ""-"" + Прайсы.ПартияПоставщика
		      |		ИНАЧЕ Прайсы.Код
		      |	КОНЕЦ КАК Код,
		      |	Прайсы.Товар КАК Наименование,
		      |	СвязкиТовараСПоставщиком.ТоварФирмы.Наименование КАК Аптечка,
		      |	Прайсы.Количество,
		      |	Прайсы.Цена КАК Цена,
		      |	Прайсы.Производитель,
		      |	Прайсы.Поставщик,
		      |	СвязкиТовараСПоставщиком.ТоварФирмы.ЖНВЛС КАК Ж,
		      |	СвязкиТовараСПоставщиком.ТоварФирмы КАК Товар,
		      |	Прайсы.СрокГодности,
			  | ЕСТЬNULL(СвязкиТовараСПоставщиком.Блокировка,ЛОЖЬ) как Блокировка
		      |ИЗ
		      |	РегистрСведений.Прайсы КАК Прайсы
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК СвязкиТовараСПоставщиком
		      |		ПО Прайсы.Поставщик = СвязкиТовараСПоставщиком.Поставщик
		      |			И Прайсы.Код = СвязкиТовараСПоставщиком.КодТовараПоставщика
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗПоставщиков КАК ТЗПоставщиков
		      |		ПО (ТЗПоставщиков.Поставщик = Прайсы.Поставщик)
		      |ГДЕ
		      |	СвязкиТовараСПоставщиком.ТоварФирмы.Наименование ПОДОБНО &Наименование
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	Аптечка,
		      |	Цена
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ТЗПоставщиков";
		
		
	ИначеЕсли ПоискПо = 1 Тогда
		ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		      |	Поставщики.Ссылка КАК Поставщик,
		      |	Выборка.Владелец
		      |ПОМЕСТИТЬ ТЗПоставщиков
		      |ИЗ
		      |	Справочник.Поставщики КАК Поставщики
		      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		      |			ОбслуживаемыеАптеки.Владелец КАК Владелец
		      |		ИЗ
		      |			Справочник.ОбслуживаемыеАптеки КАК ОбслуживаемыеАптеки
		      |		ГДЕ
		      |			ОбслуживаемыеАптеки.Аптека = &Аптека
		      |			И &УчитыватьАптеку = ИСТИНА) КАК Выборка
		      |		ПО (Выборка.Владелец = Поставщики.Ссылка)
		      |ГДЕ  " + ОтборПоПоставщику + "
		      |	Поставщики.ОсуществляетПрямыеПоставки = ИСТИНА
		      |	И ВЫБОР
		      |			КОГДА &УчитыватьАптеку = ИСТИНА
		      |				ТОГДА Выборка.Владелец
		      |			ИНАЧЕ Поставщики.Ссылка
		      |		КОНЕЦ = Поставщики.Ссылка
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	Прайсы.Код,
		      |	Прайсы.Товар КАК Наименование,
		      |	СвязкиТовараСПоставщиком.ТоварФирмы.Наименование КАК Аптечка,
		      |	Прайсы.Количество,
		      |	Прайсы.Цена КАК Цена,
		      |	Прайсы.Производитель,
		      |	Прайсы.Поставщик,
		      |	Прайсы.СрокГодности,
		      |	СвязкиТовараСПоставщиком.ТоварФирмы.ЖНВЛС КАК Ж,
		      |	СвязкиТовараСПоставщиком.ТоварФирмы КАК Товар,
			  | ЕСТЬNULL(СвязкиТовараСПоставщиком.Блокировка,ЛОЖЬ) как Блокировка
		      |ИЗ
		      |	РегистрСведений.Прайсы КАК Прайсы
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК СвязкиТовараСПоставщиком
		      |		ПО Прайсы.Поставщик = СвязкиТовараСПоставщиком.Поставщик
		      |			И Прайсы.Код = СвязкиТовараСПоставщиком.КодТовараПоставщика
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗПоставщиков КАК ТЗПоставщиков
		      |		ПО (ТЗПоставщиков.Поставщик = Прайсы.Поставщик)
		      |ГДЕ
		      |	Прайсы.Товар ПОДОБНО &Наименование
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	Аптечка,
		      |	Цена
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ТЗПоставщиков";
		Иначе
		ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		      |	Поставщики.Ссылка КАК Поставщик,
		      |	Выборка.Владелец
		      |ПОМЕСТИТЬ ТЗПоставщиков
		      |ИЗ
		      |	Справочник.Поставщики КАК Поставщики
		      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		      |			ОбслуживаемыеАптеки.Владелец КАК Владелец
		      |		ИЗ
		      |			Справочник.ОбслуживаемыеАптеки КАК ОбслуживаемыеАптеки
		      |		ГДЕ
		      |			ОбслуживаемыеАптеки.Аптека = &Аптека
		      |			И &УчитыватьАптеку = ИСТИНА) КАК Выборка
		      |		ПО (Выборка.Владелец = Поставщики.Ссылка)
		      |ГДЕ " + ОтборПоПоставщику + "
		      |	Поставщики.ОсуществляетПрямыеПоставки = ИСТИНА
		      |	И ВЫБОР
		      |			КОГДА &УчитыватьАптеку = ИСТИНА
		      |				ТОГДА Выборка.Владелец
		      |			ИНАЧЕ Поставщики.Ссылка
		      |		КОНЕЦ = Поставщики.Ссылка
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	Прайсы.Код ,
		      |	Прайсы.Товар КАК Наименование,
		      |	СвязкиТовараСПоставщиком.ТоварФирмы.Наименование КАК Аптечка,
		      |	Прайсы.Количество,
		      |	Прайсы.Цена КАК Цена,
		      |	Прайсы.Производитель,
		      |	Прайсы.Поставщик,
		      |	Прайсы.СрокГодности,
		      |	СвязкиТовараСПоставщиком.ТоварФирмы.ЖНВЛС КАК Ж,
		      |	СвязкиТовараСПоставщиком.ТоварФирмы КАК Товар,
			  | ЕСТЬNULL(СвязкиТовараСПоставщиком.Блокировка,ЛОЖЬ) как Блокировка
		      |ИЗ
		      |	РегистрСведений.Прайсы КАК Прайсы
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК СвязкиТовараСПоставщиком
		      |		ПО Прайсы.Поставщик = СвязкиТовараСПоставщиком.Поставщик
		      |			И Прайсы.Код = СвязкиТовараСПоставщиком.КодТовараПоставщика
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗПоставщиков КАК ТЗПоставщиков
		      |		ПО (ТЗПоставщиков.Поставщик = Прайсы.Поставщик)
		      |ГДЕ
		      |	Прайсы.Производитель ПОДОБНО &Наименование
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	Аптечка,
		      |	Цена
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ТЗПоставщиков";
	
		
	КонецЕсли;
	
		Запрос = Новый  Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("УчитыватьАптеку",НЕ ПоВсемПрайсам);
		Запрос.УстановитьПараметр("Наименование","%" + СтрЗаменить(СокрЛП(СтрокаПоиска)," ","%") + "%");
		Запрос.УстановитьПараметр("Геофарм",Справочники.Поставщики.НайтиПоКоду(287));
		Запрос.УстановитьПараметр("Поставщик",ОтборПоставщик);
		ТЗ = Запрос.Выполнить().Выгрузить();
	ЭлементыФормы.Товар.Значение=ТЗ;
	ЭлементыФормы.Товар.СоздатьКолонки();
	ЭлементыФормы.Товар.Колонки.Код.Ширина = 6;
	ЭлементыФормы.Товар.Колонки.Наименование.Ширина = 50;
	ЭлементыФормы.Товар.Колонки.Аптечка.Ширина = 50;
	ЭлементыФормы.Товар.Колонки.Ж.Ширина = 4;
	ЭлементыФормы.Товар.Колонки.Поставщик.Ширина = 30;
	ЭлементыФормы.Товар.Колонки.Цена.Ширина = 10;
	ЭлементыФормы.Товар.Колонки.Количество.Ширина = 10;
	ЭлементыФормы.Товар.Колонки.СрокГодности.Ширина = 15;
	ЭлементыФормы.Товар.Колонки.Производитель.Ширина = 30;
	ЭлементыФормы.Товар.Колонки.Товар.Ширина = 50;
	ЭлементыФормы.Товар.Колонки.Блокировка.Ширина = 6;
	//ЭлементыФормы.Товар.Колонки.КодПоставщика.Ширина = 10;
	
	
КонецПроцедуры

Процедура ПолучитьПрайс366()
	
	//ПоискПо = 1 ---> Наименованию поставщика
	//ПоискПо = 2 ---> Наименованию фирмы
	//ПоискПо = 3 ---> Производителю
	Если НЕ ОтборПоставщик.Пустая() Тогда
		ОтборПоПоставщику = " ОбслуживаемыеАптеки.Владелец = &Поставщик И ";
	Иначе
		ОтборПоПоставщику = "";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ОбслуживаемыеАптеки.Владелец.Код366 КАК КодПоставщика
	               |ИЗ
	               |	Справочник.ОбслуживаемыеАптеки КАК ОбслуживаемыеАптеки
	               |ГДЕ " + ОтборПоПоставщику + "
	               |	ОбслуживаемыеАптеки.Аптека = &Аптека
	               |	И ОбслуживаемыеАптеки.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА";
				   
	Запрос.УстановитьПараметр("Аптека",Аптека);
	Запрос.УстановитьПараметр("Поставщик",ОтборПоставщик);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Сообщить("У Аптеки нет привязки к поставщикам!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	МассивПоставщиков = Новый Массив;
	Выборка = Рез.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивПоставщиков.Добавить(Выборка.КодПоставщика);
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	КаталогПрайсЛистов366.КодПрайсЛиста
	               |ИЗ
	               |	РегистрСведений.КаталогПрайсЛистов366 КАК КаталогПрайсЛистов366
	               |ГДЕ
	               |	КаталогПрайсЛистов366.КодПоставщика в (&МассивПоставщиков)
	               |	И КаталогПрайсЛистов366.КодФирмы = &КодФирмы366";
				   
	Запрос.УстановитьПараметр("МассивПоставщиков",МассивПоставщиков);
	Запрос.УстановитьПараметр("КодФирмы366",КодФирмы366);

	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Сообщить("Нет прайлистов для этой аптеки",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	МассивПрайсов = Новый Массив;
	Выборка = Рез.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивПрайсов.Добавить(Выборка.КодПрайсЛиста);
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ОбслуживаемыеАптеки.Владелец КАК Поставщик,
	               |	ОбслуживаемыеАптеки.Владелец.Код366 КАК КодПоставщика
	               |ПОМЕСТИТЬ ТЗПоставщиков
	               |ИЗ
	               |	Справочник.ОбслуживаемыеАптеки КАК ОбслуживаемыеАптеки
	               |ГДЕ
	               |	ОбслуживаемыеАптеки.Аптека = &Аптека
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПрайсЛисты366.КодИндивидуальный КАК Код,
	               |	ПрайсЛисты366.Наименование КАК Наименование,
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Наименование КАК Аптечка,
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.ЖНВЛС КАК Ж,
	               |	ПрайсЛисты366.Цена КАК Цена,
	               |	ПрайсЛисты366.Остаток КАК Количество,
	               |	ТЗПоставщиков.Поставщик,
	               |	ПрайсЛисты366.СрокГодности КАК СрокГодности,
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка КАК Товар,
	               |	1 КАК Кратность,
	               |	ЛОЖЬ КАК Блокировка,
	               |	"""" КАК Производитель
	               |ИЗ
	               |	РегистрСведений.ПрайсЛисты366 КАК ПрайсЛисты366
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Связки366 КАК Связки366
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	               |			ПО Связки366.КодАП = АССОРТИМЕНТНЫЙ_ПЛАН.Код
	               |		ПО ПрайсЛисты366.КодИндивидуальный = Связки366.КодИндивидуальный
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов366 КАК КаталогПрайсЛистов366
	               |		ПО (КаталогПрайсЛистов366.КодПрайсЛиста = ПрайсЛисты366.КодПрайсЛиста)
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗПоставщиков КАК ТЗПоставщиков
	               |		ПО (ТЗПоставщиков.КодПоставщика = КаталогПрайсЛистов366.КодПоставщика)
	               |			И (КаталогПрайсЛистов366.КодФирмы = &КодФирмы366)
	               |ГДЕ
	               |	ПрайсЛисты366.КодПрайсЛиста В(&КодыПрайсов)
	               |	И ПрайсЛисты366.Наименование ПОДОБНО &Наименование
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Аптечка,
	               |	Цена
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТЗПоставщиков";
	

	Запрос.УстановитьПараметр("КодыПрайсов",МассивПрайсов);
	Запрос.УстановитьПараметр("Наименование","%" + СтрЗаменить(СокрЛП(СтрокаПоиска)," ","%") + "%");
		
	ТЗ = Запрос.Выполнить().Выгрузить();
	ЭлементыФормы.Товар.Значение=ТЗ;
	ЭлементыФормы.Товар.СоздатьКолонки();
	ЭлементыФормы.Товар.Колонки.Код.Ширина = 6;
	ЭлементыФормы.Товар.Колонки.Наименование.Ширина = 50;
	ЭлементыФормы.Товар.Колонки.Аптечка.Ширина = 50;
	ЭлементыФормы.Товар.Колонки.Ж.Ширина = 4;
	ЭлементыФормы.Товар.Колонки.Поставщик.Ширина = 30;
	ЭлементыФормы.Товар.Колонки.Цена.Ширина = 10;
	ЭлементыФормы.Товар.Колонки.Количество.Ширина = 10;
	ЭлементыФормы.Товар.Колонки.СрокГодности.Ширина = 15;
	ЭлементыФормы.Товар.Колонки.Производитель.Ширина = 30;
	ЭлементыФормы.Товар.Колонки.Товар.Ширина = 50;
	ЭлементыФормы.Товар.Колонки.Кратность.Ширина = 6;
	ЭлементыФормы.Товар.Колонки.Блокировка.Ширина = 6;
	
	//ЭлементыФормы.Товар.Колонки.КодПоставщика.Ширина = 10;
	
	
КонецПроцедуры

Процедура СтрокаПоискаПриИзменении(Элемент)
	
	//Если РаботаЧерезКонвертер = Истина Тогда
	//	ПолучитьПрайс366();
	//Иначе
		ПолучитьПрайс();
	//КонецЕсли;
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Товар;
	СтрокаПоиска = "";
	
КонецПроцедуры

Процедура ПоискНажатие(Элемент)
	
	СтрокаПоиска = "";
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.СтрокаПоиска;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ТХТ = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	      |	МестаХранения.Ссылка как Аптека,
		  |	МестаХранения.Ссылка.Наименование как Наименование
	      |ИЗ
	      |	Справочник.МестаХранения КАК МестаХранения
	      |ГДЕ
	      |	МестаХранения.ПометкаУдаления = ЛОЖЬ
	      |	И МестаХранения.НаПрямыхПоставках = ИСТИНА
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	МестаХранения.Наименование";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Для каждого стр из Рез Цикл
		СписокАптек.Добавить(стр.Аптека,стр.Наименование,Ложь);	
	КонецЦикла;
	
	РаспределитьПоАптекамПриИзменении("");
	
	Если ТипЗнч(ВладелецФормы.ДокументОбъект) = Тип("ДокументОбъект.ЗаказПроизводителю") Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.Доступность = Ложь;
		Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
			ПолучитьПрайс();
			ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Товар;			
		КонецЕсли;		
	ИначеЕсли ВладелецФормы <> Неопределено Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.Текст = "Перенести в документ"; 
	КонецЕсли;	
	
КонецПроцедуры

Процедура ТоварВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекСтрока = Элемент.ТекущаяСтрока;
	
	Если ТекСтрока.Количество = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекСтрока.Блокировка = Истина Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Текст = "Данная связка заблокирована. Продолжить заказ данной позиции?";
		Ответ = Вопрос(Текст, Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
	КонецЕсли;
	
	
	Количество = 1;
	Если ВвестиЧисло(Количество, "Введите количество", 10,0) Тогда
		Если Количество > ТекСтрока.Количество Тогда
			Предупреждение("Введенное количество превышает остаток. Приравняем его.");
			Количество = ТекСтрока.Количество;
		КонецЕсли;
		стр = ВыбранныеПозиции.Добавить();
		стр.Код = ТекСтрока.Код;
		стр.Наименование = ТекСтрока.Наименование;       
		стр.Поставщик = ТекСтрока.Поставщик;
		стр.Количество = Количество;
		стр.Цена = ТекСтрока.Цена;
		стр.Сумма = стр.Цена*стр.Количество;
		стр.СрокГодности = ТекСтрока.СрокГодности;
		стр.ТоварСсылка = ТекСтрока.Товар;
		стр.НомерЗаписи = ТекСтрока.НомерЗаписи;
		стр.КодПрайсЛиста = ТекСтрока.КодПрайсЛиста;
	КонецЕсли;
	
	ТЗВрем = ВыбранныеПозиции.Скопировать();
	ТЗврем.Свернуть("Поставщик","Сумма");
	ТЗврем.Колонки.Сдвинуть("Поставщик",-1);
	ТЗВрем.Сортировать("Поставщик");
	ЭлементыФормы.Итоги.Значение = ТЗВрем;
	ЭлементыФормы.Итоги.СоздатьКолонки();
	

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если МожноЗакрыть=Ложь Тогда
		Если Вопрос("Вы действительно хотите закрыть окно подбора?	
					| Все набранные позиции будут потеряны!",РежимДиалогаВопрос.ДаНет ,0,КодВозвратаДиалога.Нет)=КодВозвратаДиалога.Да ТОгда
					МожноЗакрыть=Истина;
		КонецЕсли;
	КонецЕсли;			
	Если МожноЗакрыть=Истина ТОгда
		Отказ=Ложь;
	Иначе
		Отказ=Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбранныеПозицииКоличествоПриИзменении(Элемент)
	
	Стр = ЭлементыФормы.ВыбранныеПозиции.ТекущаяСтрока;
	Стр.Сумма = Стр.Цена*Элемент.Значение;
	
КонецПроцедуры

Процедура ИтогиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если Итоги.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеСтроки.Поставщик.СуммаМинимальногоЗаказа > ДанныеСтроки.Сумма Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,200,200);	
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1СортировкаПоПоставщику(Кнопка)
	Товар.Сортировать("Наименование,Цена");
КонецПроцедуры

Процедура КоманднаяПанель1СортировкаПоА5(Кнопка)
	Товар.Сортировать("Аптечка,Цена");
КонецПроцедуры

Процедура КоманднаяПанель1СопоставитьПозицию(Кнопка)
	
	текСтр = ЭлементыФормы.Товар.ТекущаяСтрока;
	УсловиеФильтра = Новый СписокЗначений;
	УсловиеФильтра.Добавить(текСтр.Код);	
	Поставщик = текСтр.Поставщик;
	
	Связки=Обработки.УстановкаСвязокСПоставщикомНовая.Создать();
	Связки=Связки.ПолучитьФорму("УстановкаСвязокСПоставщикомНовая",, Новый УникальныйИдентификатор );
	Связки.УсловиеФильтра=УсловиеФильтра;
	Связки.Поставщик=Поставщик;
	Связки.ОткрытьМодально();
КонецПроцедуры

Процедура КоманднаяПанель2Действие(Кнопка)
	СписокАптек.ЗаполнитьПометки(Истина);
КонецПроцедуры

Процедура КоманднаяПанель2Действие1(Кнопка)
	СписокАптек.ЗаполнитьПометки(Ложь);
КонецПроцедуры


Процедура РаспределитьПоАптекамПриИзменении(Элемент)
	ЭлементыФормы.СписокАптек.Видимость = РаспределитьПоАптекам;
	ЭлементыФормы.КоманднаяПанель2.Видимость = РаспределитьПоАптекам;
КонецПроцедуры

Процедура ПометитьНажатие(Элемент)
	Если Категория.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	СписокАптек.ЗаполнитьПометки(Ложь);
	Для каждого стр из СписокАптек Цикл
		Если стр.Значение.КатегорияUMG = Категория Тогда
			стр.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Блокировка = Истина Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,155,240);	
	КонецЕсли;

	
КонецПроцедуры

Процедура АптекаПриИзменении(Элемент)
	
	РаботаЧерезКонвертер = Аптека.РаботаЧерезКонвертер;
	КодФирмы366 = Аптека.Фирма.Код366;
	
КонецПроцедуры

МожноЗакрыть = Ложь;
ВыгружатьЗаказы = Истина;
ЭлементыФормы.ПоискПо.СписокВыбора.Добавить(1,"Наименованию поставщика");
ЭлементыФормы.ПоискПо.СписокВыбора.Добавить(2,"Наименованию фирмы");
ЭлементыФормы.ПоискПо.СписокВыбора.Добавить(3,"Производителю");
ПоискПо = 1;
