перем РЗ;


Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	ЗагрузкаДанныхИзДиадока(СписокОрг,ЗЗаУпер);
	ЗЗаУпер=Ложь;
КонецПроцедуры

Процедура ЧасыНаФорме()
	ЭлементыФормы.Часы.Заголовок=ТекущаяДата();
КонецПроцедуры	

процедура ЗагрузкаДанныхИзДиадока_форма()
	ОтключитьОбработчикОжидания("ЗагрузкаДанныхИзДиадока_форма");
	Попытка
		ЗагрузкаДанныхИзДиадока(СписокОрг);
	Исключение
		
		ЛогОписание=""+ОписаниеОшибки()+Символы.ПС+"-------------------------------------------"+
						Символы.ПС+"ЗагрузкаДанныхИзДиадока_форма()";
					
		
		МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РЗ, Перечисления.ТипыЗаписейЛога.Ошибка,ЛогОписание);
		
	КонецПопытки;
	СледующийЗапуск=ТекущаяДата()+ПериодСрабатыванияСек;
	ЭлементыФормы.НадписьДатаСледЗапуска.Заголовок=СледующийЗапуск;
	
	ПараметрыАР=ВернутьПараметрыАктивностиРобота();
	ПараметрыАР.Примечание="След. запуск будет "+СледующийЗапуск;
	Обмен.ЗафиксироватьАктивностьРобота(ПараметрыАР);

	
	
	ПодключитьОбработчикОжидания("ЗагрузкаДанныхИзДиадока_форма",ПериодСрабатыванияСек);
КонецПроцедуры	

Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
	ПодключитьОбработчикОжидания("ЧасыНаФорме",1);
	ЗаполнитьСписокОрганизаций(СписокОрг);
	
	ПодключитьОбработчикОжидания("ЗагрузкаДанныхИзДиадока_форма",3);
	
	КодРобота = Строка(Новый УникальныйИдентификатор());
	Параметры = ВернутьПараметрыАктивностиРобота();
	Обмен.ЗафиксироватьАктивностьРобота(Параметры);

	
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыЗапуститьРобота(Кнопка)
	Попытка
		ПодключитьОбработчикОжидания("ЗагрузкаДанныхИзДиадока_форма",1);
	Исключение
	КонецПопытки;
КонецПроцедуры

Процедура ОстановитьАвтоматическоеПодписаниеНажатие(Элемент)
	ТабАвтоподпись.Очистить();
	Автоподпись.Очистить();
КонецПроцедуры

Процедура Надпись9Нажатие(Элемент)
	Для Каждого Стр Из ТабАвтоподпись Цикл
		Сообщить(""+Стр.Организация+"   "+Стр.ПроцессАвтоподписи);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Попытка
		ОтключитьОбработчикОжидания("ЗагрузкаДанныхИзДиадока_форма");
	Исключение
	КонецПопытки;

	Набор = РегистрыСведений.АктивностьРаботыРоботов.СоздатьНаборЗаписей();
	Набор.Отбор.КодРобота.Установить(КодРобота);
	Набор.Записать();
	
	//------ Останавливаем автоподписанта извещений------
	ТабАвтоподпись.Очистить();
	Автоподпись.Очистить();
	//------- Гасим ВК -------------------------------------------
	ДиадокАПИ_ВК=Неопределено;
	DiadocInvoiceAPI=Неопределено;
	DiadocInvoiceAPIObject=Неопределено;
	
	
КонецПроцедуры


ПериодСрабатыванияСек=60*60; // 60 минут


РЗ=Справочники.РегламентныеЗадания.НайтиПоКоду("ЭлСчФактуры");
	//---------------<Саморегистрация в справочнике>---------------------------// GtG // 22.05.2013 19:05:54
	Если РЗ.Пустая()=Истина Тогда
		ОбРз=Справочники.РегламентныеЗадания.СоздатьЭлемент();
		ОбРз.Код="ЭлСчФактуры";
		ОбРз.Наименование="Загрузка электронных счетов фактур";
		ОбРз.Записать();
		РЗ=ОбРз.Ссылка;
	КонецЕсли;	
