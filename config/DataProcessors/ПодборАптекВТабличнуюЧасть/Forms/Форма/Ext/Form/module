
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Построитель.Выполнить();
	МассивСкладов = Построитель.Результат.Выгрузить().ВыгрузитьКолонку("Склад");
	
	Закрыть(МассивСкладов);
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьПостроитель();
	
КонецПроцедуры

Процедура ИнициализироватьПостроитель()

	Построитель.Текст = 
	"ВЫБРАТЬ
	|	МестаХранения.Ссылка КАК Склад
	|ИЗ
	|	Справочник.МестаХранения КАК МестаХранения
	|{ГДЕ
	|	МестаХранения.Ссылка.* КАК Склад}";

КонецПроцедуры

Процедура ПередСохранениемЗначений(Отказ)
	
	НастройкиПостроителя = Построитель.ПолучитьНастройки(Истина, Ложь, Ложь, Ложь, Ложь);
	
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	
	Если ТипЗнч(НастройкиПостроителя) = Тип("НастройкиПостроителяОтчета") Тогда
		Построитель.УстановитьНастройки(НастройкиПостроителя, Истина, Ложь, Ложь, Ложь, Ложь);
	КонецЕсли;
		
КонецПроцедуры

Процедура КоманднаяПанельОтбораВвестиСписокКодов(Кнопка)
	
	СписокКодов = Новый СписокЗначений();
	СписокКодовСтрока = "";
	
	Если Не ВвестиСтроку(СписокКодовСтрока, "Введите список кодов", , Истина) Тогда
		Возврат;
	КонецЕсли;	
	
	Для ч = 1 По СтрЧислоСтрок(СписокКодовСтрока) Цикл	
		 
		ТекКод = ОМ_ТСО.УбратьНечисловыеСимволы(СтрПолучитьСтроку(СписокКодовСтрока, ч));
		
		Если ЗначениеЗаполнено(ТекКод) Тогда
		 	СписокКодов.Добавить(Число(ТекКод));
		КонецЕсли;
		 
	КонецЦикла;
	
	ОтборПоКодуСклада = Построитель.Отбор.Найти("СкладКод");
	
	Если ОтборПоКодуСклада = Неопределено Тогда
		ОтборПоКодуСклада = Построитель.Отбор.Добавить("Склад.Код");
	КонецЕсли;	
	
	ОтборПоКодуСклада.ВидСравнения	= ВидСравнения.ВСписке;
	ОтборПоКодуСклада.Использование	= Истина;
	ОтборПоКодуСклада.Значение		= СписокКодов;
	
КонецПроцедуры
