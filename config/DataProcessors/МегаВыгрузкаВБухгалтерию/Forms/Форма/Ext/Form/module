//==========================================================GtG====
Функция СписокОтмеченныхСкладов ()
	//----------------------------------
	//Назначение:
	//  
	//  Возвращает массив из отмеченных галками складов
	//  
	//  
	//----------------------------------
	ТЗ= Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Аптека");
	
	Для каждого Стр из Аптеки Цикл
		
		Если Стр.Пометка=Истина ТОгда
			ТЗ.Добавить().Аптека=Стр.Значение;
		КонецЕсли;	
	КонецЦикла;	
	
	
	Рез=ТЗ.ВыгрузитьКолонку("Аптека");
	Возврат Рез;	
КонецФункции	//СписокОтмеченныхСкладов
//==========================================================GtG====



//==========================================================GtG====
Процедура ЗадатьСтруктуруДБФ (ДБФ,Тип)  
	//----------------------------------
	//Назначение:
	//  ЗАдает структуру дбф 
	//----------------------------------
	ДБФ.Кодировка=КодировкаXBase.OEM; //DOS нах, общая для всех
	
	Если ТИп="Приход" ТОгда
		
		ДБФ.Поля.Добавить("SKDCode","N",8,0	);       //	Склад куда пришел товар
		
		ДБФ.Поля.Добавить("NDOC","N",10,0);       //	НОМЕР ДОК БАЗЫ	
		ДБФ.Поля.Добавить("DOCDATE","D",,);       //	ДАТА ДОК	
		
		ДБФ.Поля.Добавить("NDOCP","S",20,);       //	НОМЕР НАКЛ ПОСТАВЩИКА	
		ДБФ.Поля.Добавить("DOCDATEP","D",,);       //	ДАТА ДОК	
		
		ДБФ.Поля.Добавить("INN","S",12,);       //	ИНН ПОСТАВЩИКА	
		ДБФ.Поля.Добавить("KPP","S",12,);       //	КПП ПОСТАВЩИКА	
		
		ДБФ.Поля.Добавить("SUMZwN","N",15,2);       //	СУММА ЗАКУП СуммаЗАкупСНДС	
		ДБФ.Поля.Добавить("SUMZN","N",15,2);       //	СУММА ЗАКУП Закупочного НДС	
		
		ДБФ.Поля.Добавить("SUMRwN","N",15,2);       //Сумма РОЗНИЧНАЯ	
		ДБФ.Поля.Добавить("SUMRN","N",15,2);       //Сумма РОЗНИЧНого НДС	
		
		ДБФ.Поля.Добавить("SUMRwN","N",15,2);       //Сумма РОЗНИЧНАЯ	
		ДБФ.Поля.Добавить("SUMRN","N",15,2);       //Сумма РОЗНИЧНого НДС	
		
		ДБФ.Поля.Добавить("SR_BB","N",15,2);       //Сумма РОЗНИЧНАЯ бой брак	
		ДБФ.Поля.Добавить("SZ_BB","N",15,2);       //Сумма Закупочная бой Брак
		
		ДБФ.Поля.Добавить("SR_NDV","N",15,2);       //Сумма РОЗНИЧНАЯ недовоз
		ДБФ.Поля.Добавить("SZ_NDV","N",15,2);       //Сумма Закупочная недовоз
		
		
		ДБФ.Поля.Добавить("NDS","N",9,2	);       //	СТАВКА НДС	
		
		ДБФ.Поля.Добавить("FDATE","D",,);       //	ДАТА СФ	
		ДБФ.Поля.Добавить("FNOM","S",22,	);       //	НОМЕР СФ
		
		ДБФ.Поля.Добавить("OtsrPlat","N",3,0	);       //	отсрочка платежа
		
		ДБФ.Поля.Добавить("CRC","N",15,2	);       // Итоговая сумма документа для контроля

		
		
		
	ИначеЕСли Тип="Перемещение" ТОгда
		ДБФ.Поля.Добавить("Ndoc","N", 15 , 0  );  //	ПеремещениеТовараТовар.Ссылка.Номер,
		ДБФ.Поля.Добавить("DocDate","D",  ,  );  //	ПеремещениеТовараТовар.Ссылка.Дата,
		ДБФ.Поля.Добавить("OtprSkd","N", 10 ,0  );  //	ПеремещениеТовараТовар.Ссылка.Склад.Код,
		ДБФ.Поля.Добавить("PolSkd","N", 10 ,0  );  //	ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Код,
		ДБФ.Поля.Добавить("NDS","N", 6 ,2  );  //	ПеремещениеТовараТовар.СтавкаНДС.Ставка,
		ДБФ.Поля.Добавить("SumZ","N",15  ,2  );  //	СУММА(ПеремещениеТовараТовар.СуммаЗакуп) КАК СуммаЗакуп,
		ДБФ.Поля.Добавить("SumROtp","N",15  ,2  );  //	СУММА(ПеремещениеТовараТовар.СуммаРозн) КАК СуммаРозн,
		ДБФ.Поля.Добавить("SumRPol","N",15  ,2  );  //	СУММА(ПеремещениеТовараТовар.СуммаРознПол) КАК СуммаРознПол,
		ДБФ.Поля.Добавить("NDSZ","N",15  ,2  );  //	СУММА(ПеремещениеТовараТовар.НДСЗакуп) КАК НДСЗакуп,
		ДБФ.Поля.Добавить("NDSROtp","N", 15 ,2  );  //	СУММА(ПеремещениеТовараТовар.НДСРозн) КАК НДСРозн,
		ДБФ.Поля.Добавить("NDSRPol","N",  15,2  );  //	СУММА(ПеремещениеТовараТовар.НДСРознПол) КАК НДСРознПол
		ДБФ.Поля.Добавить("CRC","N",15,2	);       // Итоговая сумма документа для контроля
		
	ИначеЕсли Тип="СписокСкладов"  Тогда  
		ДБФ.Поля.Добавить("CODE","N",10,0 );//	МестаХранения.Код,
		ДБФ.Поля.Добавить("Name","S",  150,  );//	МестаХранения.Наименование,
		ДБФ.Поля.Добавить("Not","S",  15, );//	МестаХранения.ТипНалогообложения
		
	иначеЕсли  Тип="ВозвратПост"  Тогда  // !!! Возвратом только бракованный и битый товар, хороший обратной реализацией!!!!
		ДБФ.Поля.Добавить("Ndoc","N", 15 , 0  );        //	ВозвратТовараПоставщикуТовар.Ссылка.Номер,
	    ДБФ.Поля.Добавить("DocDate","D",  ,  );        //	ВозвратТовараПоставщикуТовар.Ссылка.Дата,
	    ДБФ.Поля.Добавить("SkdCode", "N" , 10  , 0  );        //	ВозвратТовараПоставщикуТовар.Ссылка.Склад.Код,
	    ДБФ.Поля.Добавить("RetType", "N" ,  1 , 0  );              // Тип возврата поставщику  брак обнаружен: 0-в процессе приемки, 1- в процессе реализации //	ВозвратТовараПоставщикуТовар.Ссылка.СпособВозврата,
	    ДБФ.Поля.Добавить("INN", "S" ,12,   );        //	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.ИНН КАК ИНН,
	    ДБФ.Поля.Добавить("KPP", "s" ,12   ,   );        //	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.КПП КАК КПП,
	    ДБФ.Поля.Добавить("OsnNum", "S" ,25   ,   );        //	ВозвратТовараПоставщикуТовар.Ссылка.ДокОснование.ВхНомерНакл КАК ОснНомер,
	    ДБФ.Поля.Добавить("NDSZ", "N" ,15   ,   2);        //	СУММА(ВозвратТовараПоставщикуТовар.НДСЗакуп) КАК НДСЗакуп,
	    ДБФ.Поля.Добавить("NDSR", "N" ,15   ,   2);        //	СУММА(ВозвратТовараПоставщикуТовар.НДСРозн) КАК НДСРозн,
	    ДБФ.Поля.Добавить("NDS", "N" , 6  ,2   );        //	ВозвратТовараПоставщикуТовар.СтавкаНДС.Ставка КАК СтНДС,
	    ДБФ.Поля.Добавить("SummZ", "N" ,15   ,2   );        //	СУММА(ВозвратТовараПоставщикуТовар.СуммаЗакуп) КАК СуммаЗакуп,
	    ДБФ.Поля.Добавить("SummR", "N" ,15   ,2   );        //	СУММА(ВозвратТовараПоставщикуТовар.СуммаРозн) КАК СуммаРозн
		ДБФ.Поля.Добавить("CRC","N",15,2	);       // Итоговая сумма документа для контроля
		ДБФ.Поля.Добавить("NDP", "s" ,20   ,   );  // номер документа поставщика (договор в бухгалтерии)      
		
		

	ИначеЕсли Тип="Выручка"  Тогда  
		ДБФ.Поля.Добавить("SkdCode", "N" , 10  , 0  );                 //	РеализацияККМБухгалтерия.Ссылка.Склад.Код КАК Склад,
	    ДБФ.Поля.Добавить("KKM", "s" , 10  , 0  );                 //	РеализацияККМБухгалтерия.Касса.ЗаводскойНомер КАК Касса,
	    ДБФ.Поля.Добавить("Znum", "N" , 10  ,0);                 //	РеализацияККМБухгалтерия.ЗетОчет,
	    ДБФ.Поля.Добавить("NDS", "N" , 6  ,2);                 //	РеализацияККМБухгалтерия.СтавкаНДС.Ставка КАК СтНДС,
	    ДБФ.Поля.Добавить("PAYTYPE", "S" , 15  ,);                 //	РеализацияККМБухгалтерия.ТипОплаты,
	    ДБФ.Поля.Добавить("SUMBSK", "N" , 15  ,2);                 //	РеализацияККМБухгалтерия.СуммаБезСкидки КАК СуммаБезСк,
	    ДБФ.Поля.Добавить("SUMWSK", "N" ,  15 ,2);                 //	РеализацияККМБухгалтерия.СуммаСоСкидкой КАК СуммаСоСк,
	    ДБФ.Поля.Добавить("SUMSK", "N" ,  15 ,2);                 //	РеализацияККМБухгалтерия.СуммаСкидки КАК СуммаСк,
	    ДБФ.Поля.Добавить("SUMNDSBSK", "N" , 15  ,2);                 //	РеализацияККМБухгалтерия.СуммаНДСБезСкидки КАК СуммаНДСБезСк,
	    ДБФ.Поля.Добавить("SUMNDSWSK", "N" ,  15 ,2);                 //	РеализацияККМБухгалтерия.СуммаНДДСоСкидкой КАК СуммаНДДСоСк,
	    ДБФ.Поля.Добавить("SUMZ", "N" ,  15 ,2);                 //	РеализацияККМБухгалтерия.ЗакупочнаяСНДС КАК ЗакупяСНДС,
	    ДБФ.Поля.Добавить("NDSZ", "N" ,  15 ,2);                 //	РеализацияККМБухгалтерия.НДСЗакуп,
	    ДБФ.Поля.Добавить("DOCDATE", "D" ,   ,);                 //	РеализацияККМБухгалтерия.Ссылка.Дата
        ДБФ.Поля.Добавить("Ndoc","N", 15 , 0  );  // номре документа в базе
		ДБФ.Поля.Добавить("CRC","N",15,2	);       // Итоговая сумма документа для контроля
		ДБФ.Поля.Добавить("SKDTxT","N",15,0	);       // Тип налогообложения склада
		
	ИначеЕсли Тип="Сертификаты"  Тогда  
		ДБФ.Поля.Добавить("Ndoc","N", 15 , 0  );  // номре документа в базе
	    ДБФ.Поля.Добавить("DOCDATE", "D" ,   ,);                 //	Дата
		ДБФ.Поля.Добавить("SERTNUM", "S" , 13  ,);                 //	Вид операции с сертификатом

		ДБФ.Поля.Добавить("NOMINAL", "N" ,  15 ,2);                 //	номинал сертификата
		ДБФ.Поля.Добавить("OPERTYPE", "N" , 1  ,0);                 //	Вид операции с сертификатом
		
		
	ИначеЕсли Тип="Переоценка"  Тогда  
		ДБФ.Поля.Добавить("NDS", "N" , 15  ,2);                 //	СУММА(ПереоценкаБухгалтерия.СтавкаНДС.Ставка) КАК СтавкаНДССтавка,
	    ДБФ.Поля.Добавить("SUMOldR", "N" , 15  ,2);                 //	СУММА(ПереоценкаБухгалтерия.СтараяСуммаРозн) КАК СтараяСуммаРозн,
	    ДБФ.Поля.Добавить("SUMNewR", "N" , 15  ,2);                 //	СУММА(ПереоценкаБухгалтерия.НоваяСуммаРозн) КАК НоваяСуммаРозн,
		ДБФ.Поля.Добавить("Ndoc","N", 15 , 0  );  //	ПереоценкаБухгалтерия.Ссылка.Номер КАК Номер,
	    ДБФ.Поля.Добавить("DOCDATE", "D" ,   ,);                 //	ПереоценкаБухгалтерия.Ссылка.Дата КАК Дата,
	    ДБФ.Поля.Добавить("SkdCode", "N" , 10  , 0  );                 //	ПереоценкаБухгалтерия.Ссылка.Склад.Код КАК СкладКод
		ДБФ.Поля.Добавить("CRC","N",15,2	);       // Итоговая сумма документа для контроля
		
	ИначеЕсли Тип="ВозвратОтПокупателя" ТОгда
		ДБФ.Поля.Добавить("DOCDATE", "D" ,   ,);  // ВозвратОтПокупателяТовар.Ссылка.Дата,
	    ДБФ.Поля.Добавить("Ndoc","N", 15 , 0  );   //  	ВозвратОтПокупателяТовар.Ссылка.Номер,
	    ДБФ.Поля.Добавить("SkdCode", "N" , 10  , 0  );   //  	ВозвратОтПокупателяТовар.Ссылка.Склад.Код,
	    ДБФ.Поля.Добавить("NDS", "N" , 6  ,2);   //  	ВозвратОтПокупателяТовар.СтавкаНДС.Ставка,
	    ДБФ.Поля.Добавить("SUMZ", "N" ,  15 ,2);   //  	СУММА(ВозвратОтПокупателяТовар.СуммаЗакуп) КАК СуммаЗакуп,
	    ДБФ.Поля.Добавить("SummR", "N" ,15   ,2   );   //  	СУММА(ВозвратОтПокупателяТовар.СуммаРозн) КАК СуммаРозн,
	    ДБФ.Поля.Добавить("SUMSK", "N" ,  15 ,2);   //  	СУММА(ВозвратОтПокупателяТовар.СуммаСкидки) КАК СуммаСкидки
		
	ИначеЕсли Тип="МелкооптоваяОтгрузка" тогда
		ДБФ.Поля.Добавить("NDOC", "N" , 15 , 2 );
		ДБФ.Поля.Добавить("DOCDATE", "D" ,   ,   );
		ДБФ.Поля.Добавить("SKDCODE", "N" , 15 , 2 );
		ДБФ.Поля.Добавить("INN", "S" , 20 ,);
		ДБФ.Поля.Добавить("KPP", "S" , 20 , );
		ДБФ.Поля.Добавить("NDS", "N" , 15 , 2 );
		ДБФ.Поля.Добавить("SUMZ", "N" , 15 , 2 );
		ДБФ.Поля.Добавить("SUMR", "N" , 15 , 2 );
		ДБФ.Поля.Добавить("NDSZ", "N" , 15 , 2 );
		ДБФ.Поля.Добавить("NDSR", "N" , 15 , 2 );
		
		
	КонецЕсли; 
КонецПроцедуры	//ЗадатьСтруктуруДБФ
//==========================================================GtG====











//==========================================================GtG====
Функция Выгрузка_ПоступлениеТовара ()  
	//----------------------------------
	//Назначение:
	//  Выгрузка поступлений товара в файл
	//  
	//  
	//  
	//----------------------------------
	Рез=Истина;
	
	Склады= СписокОтмеченныхСкладов ();
	
	ЕСли Склады.Количество()=0 ТОгда
		Сообщить("Не отмечено ни одного склада. Выгрузки не будет.");
		Возврат Ложь;
	КонецЕсли;
	
	
	ТХТ="ВЫБРАТЬ
	    |	ПоступлениеТовараТовар.Ссылка.Поставщик.ИНН КАК ИНН,
	    |	ПоступлениеТовараТовар.Ссылка.Поставщик.КПП КАК КПП,
	    |	ПоступлениеТовараТовар.Ссылка.Склад.Код КАК СкладКод,
	    |	СУММА(ПоступлениеТовараТовар.НДСЗакуп) КАК НДСЗакуп,
	    |	СУММА(ПоступлениеТовараТовар.НДСРозн) КАК НДСРозн,
	    |	СУММА(ПоступлениеТовараТовар.СуммаЗакуп) КАК СуммаЗакуп,
	    |	СУММА(ПоступлениеТовараТовар.СуммаРозн) КАК СуммаРозн,
	    |	ПоступлениеТовараТовар.СтавкаНДС.Ставка КАК СтавкаНДС,
	    |	ПоступлениеТовараТовар.Ссылка.Номер КАК ДокНомер,
	    |	ПоступлениеТовараТовар.Ссылка.ВхДатаНакл КАК ВхНаклДата,
	    |	ПоступлениеТовараТовар.Ссылка.ВхДатаСФ,
	    |	ПоступлениеТовараТовар.Ссылка.ВхНомерНакл,
	    |	ПоступлениеТовараТовар.Ссылка.ВхНомерСФ,
	    |	СУММА(ПоступлениеТовараТовар.БойБрак * ПоступлениеТовараТовар.ЦенаЗакуп) КАК БойБракЗакуп,
	    |	СУММА(ПоступлениеТовараТовар.Недовоз * ПоступлениеТовараТовар.ЦенаЗакуп) КАК НедовозЗакуп,
	    |	СУММА(ПоступлениеТовараТовар.БойБрак * ПоступлениеТовараТовар.ЦенаРозн) КАК БойБракРозн,
	    |	СУММА(ПоступлениеТовараТовар.Недовоз * ПоступлениеТовараТовар.ЦенаРозн) КАК НедовозРозн,
	    |	ПоступлениеТовараТовар.Ссылка.Дата КАК ДатаДок,
	    |	ПоступлениеТовараТовар.Ссылка.ОтсрочкаПлатежа КАК Отсрочка,
	    |	CRC.СуммаCRC
	    |ИЗ
	    |	Документ.ПоступлениеТовара.Товар КАК ПоступлениеТовараТовар
	    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	    |			СУММА(Док.СуммаЗакуп) КАК СуммаCRC,
	    |			Док.Ссылка КАК Ссылка
	    |		ИЗ
	    |			Документ.ПоступлениеТовара.Товар КАК Док
	    |		ГДЕ
	    |			Док.Ссылка.Проведен = ИСТИНА
	    |			И Док.Ссылка.Склад.Ссылка В(&Склады)
	    |			И Док.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	    |		
	    |		СГРУППИРОВАТЬ ПО
	    |			Док.Ссылка) КАК CRC
	    |		ПО ПоступлениеТовараТовар.Ссылка = CRC.Ссылка
	    |ГДЕ
	    |	ПоступлениеТовараТовар.Ссылка.Проведен = ИСТИНА
	    |	И ПоступлениеТовараТовар.Ссылка.Склад.Ссылка В(&Склады)
	    |	И ПоступлениеТовараТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ПоступлениеТовараТовар.Ссылка.Поставщик.ИНН,
	    |	ПоступлениеТовараТовар.Ссылка.Поставщик.КПП,
	    |	ПоступлениеТовараТовар.Ссылка.Склад.Код,
	    |	ПоступлениеТовараТовар.СтавкаНДС.Ставка,
	    |	ПоступлениеТовараТовар.Ссылка.Номер,
	    |	ПоступлениеТовараТовар.Ссылка.ВхДатаНакл,
	    |	ПоступлениеТовараТовар.Ссылка.ВхДатаСФ,
	    |	ПоступлениеТовараТовар.Ссылка.ВхНомерНакл,
	    |	ПоступлениеТовараТовар.Ссылка.ВхНомерСФ,
	    |	ПоступлениеТовараТовар.Ссылка.Дата,
	    |	ПоступлениеТовараТовар.Ссылка.ОтсрочкаПлатежа,
	    |	CRC.СуммаCRC
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	ДатаДок,
	    |	ДокНомер";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("Склады",Склады);
	Запрос.УстановитьПараметр("Дата1",НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2",КонецДня(КонПериода));
	
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	
	
	
	
	
	ДБФ= Новый XBase;
	
	
	ЗадатьСтруктуруДБФ(ДБФ,"Приход");
	
	ДБФ.СоздатьФайл(ПапкаВыгрузки+"\Income.DBF");
	
	ЭлементыФормы.Индикатор1.Значение=0;
	ЭлементыФормы.Индикатор1.МаксимальноеЗначение=ТЗ.Количество();
	Для каждого Стр из ТЗ Цикл
		ДБФ.Добавить();
		ЭлементыФормы.Индикатор1.Значение=ЭлементыФормы.Индикатор1.Значение+1; 		 
		ДБФ.SKDCode = Стр.СкладКод;//	Склад куда пришел товар
		
		ДБФ.NDOC = Стр.ДокНомер;  //	НОМЕР ДОК БАЗЫ	
		ДБФ.DOCDATE = Стр.ДатаДок;      //	ДАТА ДОК	
		
		ДБФ.NDOCP =  Стр.ВхНомерНакл;    //	НОМЕР НАКЛ ПОСТАВЩИКА	
		ДБФ.DOCDATEP = Стр.ВхНаклДата;     //	ДАТА ДОК	
		
		ДБФ.INN  = Стр.ИНН;     //	ИНН ПОСТАВЩИКА	
		ДБФ.KPP  = Стр.КПП;   //	КПП ПОСТАВЩИКА	
		
		ДБФ.SUMZwN = Стр.СуммаЗакуп;     //	СУММА ЗАКУП СуммаЗАкупСНДС	
		ДБФ.SUMZN  = Стр.НДСЗакуп;    //	СУММА ЗАКУП Закупочного НДС	
		
		ДБФ.SUMRwN = Стр.СуммаРозн;     //Сумма РОЗНИЧНАЯ	
		ДБФ.SUMRN  = СТР.НДСРозн;    //Сумма РОЗНИЧНого НДС	
		
		ДБФ.NDS   = Стр.СтавкаНДС;   //	СТАВКА НДС	
		
		ДБФ.FDATE =  Стр.ВхДатаСФ;  //	ДАТА СФ	
		ДБФ.FNOM  = Стр.ВхНомерСФ;   //	НОМЕР СФ	
		
		ДБФ.SR_BB = Стр.БойБракРозн;     //Сумма РОЗНИЧНАЯ бой брак	
		ДБФ.SZ_BB = Стр.БойБракЗакуп;     //Сумма Закупочная бой Брак
		
		ДБФ.SR_NDV = Стр.НедовозЗакуп;     //Сумма РОЗНИЧНАЯ недовоз
		ДБФ.SZ_NDV = Стр.НедовозЗакуп;     //Сумма Закупочная недовоз
		
		ДБФ.OtsrPlat=стр.Отсрочка; // отсрочка платежа по документу
		
		ДБФ.CRC=Стр.СуммаCRC;
		
		
		ДБФ.Записать(); 
		
	КонецЦикла;	
	
	
	ДБФ.ЗакрытьФайл();
	
	
	
	Возврат Рез;	
	
КонецФункции	//Выгрузка_ПоступлениеТовара
//==========================================================GtG====


Функция Выгрузка_Переоценка ()  
	//----------------------------------
	//Назначение:
	//  Выгрузка переоценки товара в файл
	//  
	//  
	//  
	//----------------------------------
	Рез=Истина;
	
	Склады= СписокОтмеченныхСкладов ();
	
	ЕСли Склады.Количество()=0 ТОгда
		Сообщить("Не отмечено ни одного склада. Выгрузки не будет.");
		Возврат Ложь;
	КонецЕсли;
	
	
	ТХТ="ВЫБРАТЬ
	    |	ПереоценкаБухгалтерия.СтавкаНДС.Ставка КАК СтавкаНДССтавка,
	    |	СУММА(ПереоценкаБухгалтерия.СтараяСуммаРозн) КАК СтараяСуммаРозн,
	    |	СУММА(ПереоценкаБухгалтерия.НоваяСуммаРозн) КАК НоваяСуммаРозн,
	    |	СУММА(ПереоценкаБухгалтерия.СтарыйРознНДС) КАК СтарыйРознНДС,
	    |	СУММА(ПереоценкаБухгалтерия.НовыйРознНДС) КАК НовыйРознНДС,
	    |	ПереоценкаБухгалтерия.Ссылка.Номер КАК Номер,
	    |	ПереоценкаБухгалтерия.Ссылка.Дата КАК Дата,
	    |	ПереоценкаБухгалтерия.Ссылка.Склад.Код КАК СкладКод,
	    |	СУММА(ПереоценкаБухгалтерия1.НоваяСуммаРозн) - СУММА(ПереоценкаБухгалтерия1.СтараяСуммаРозн) КАК CRC_Дэльта
	    |ИЗ
	    |	Документ.Переоценка.Бухгалтерия КАК ПереоценкаБухгалтерия
	    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Переоценка.Бухгалтерия КАК ПереоценкаБухгалтерия1
	    |		ПО ПереоценкаБухгалтерия.Ссылка = ПереоценкаБухгалтерия1.Ссылка
	    |ГДЕ
	    |	ПереоценкаБухгалтерия.Ссылка.Проведен = ИСТИНА
	    |	И ПереоценкаБухгалтерия.Ссылка.Склад В(&Склады)
	    |	И ПереоценкаБухгалтерия.Ссылка.Дата МЕЖДУ &Дата1 И &дата2
	    |	И ПереоценкаБухгалтерия.НоваяСуммаРозн <> 0
	    |	И ПереоценкаБухгалтерия.СтараяСуммаРозн <> 0
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ПереоценкаБухгалтерия.Ссылка.Склад.Код,
	    |	ПереоценкаБухгалтерия.Ссылка.Дата,
	    |	ПереоценкаБухгалтерия.Ссылка.Номер,
	    |	ПереоценкаБухгалтерия.СтавкаНДС.Ставка
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	Дата,
	    |	Номер,
	    |	СкладКод";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("Склады",Склады);
	Запрос.УстановитьПараметр("Дата1",НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2",КонецДня(КонПериода));
	
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	
	
	
	
	
	ДБФ= Новый XBase;
	
	
	ЗадатьСтруктуруДБФ(ДБФ,"Переоценка");
	
	ДБФ.СоздатьФайл(ПапкаВыгрузки+"\Pereocen.DBF");
	
	ЭлементыФормы.Индикатор1.Значение=0;
	ЭлементыФормы.Индикатор1.МаксимальноеЗначение=ТЗ.Количество();
	Для каждого Стр из ТЗ Цикл
		ДБФ.Добавить();
		ЭлементыФормы.Индикатор1.Значение=ЭлементыФормы.Индикатор1.Значение+1; 		 
		
			    
		
		ДБФ.Ndoc= Стр.Номер;
	    ДБФ.DOCDATE= Стр.Дата;
	    ДБФ.SkdCode= Стр.СкладКод;            

		ДБФ.NDS= Стр.СтавкаНДССтавка;
	    ДБФ.SUMOldR= Стр.СтараяСуммаРозн;
	    ДБФ.SUMNewR= Стр.НоваяСуммаРозн;
		ДБФ.CRC=Стр.CRC_Дэльта;
	    		
		ДБФ.Записать(); 
		
	КонецЦикла;	
	
	
	ДБФ.ЗакрытьФайл();
	
	
	
	Возврат Рез;	
	
КонецФункции	//Выгрузка_Переоценка
//==========================================================GtG====







//==========================================================GtG====
Функция Выгрузка_ПеремещениеТовара ()  
	//----------------------------------
	//Назначение:
	//  Выгружаем перемещение товара по указанным складам
	//  Условие по складу отправителю
	//----------------------------------
	
	ТХТ="ВЫБРАТЬ
	    |	ПеремещениеТовараТовар.Ссылка.Номер КАК Номер,
	    |	ПеремещениеТовараТовар.Ссылка.Дата,
	    |	ПеремещениеТовараТовар.Ссылка.Склад.Код КАК ОтпрКод,
	    |	ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Код КАК ПолучательКод,
	    |	ПеремещениеТовараТовар.СтавкаНДС.Ставка КАК СтНДС,
	    |	СУММА(ПеремещениеТовараТовар.СуммаЗакуп) КАК СуммаЗакуп,
	    |	СУММА(ПеремещениеТовараТовар.СуммаРозн) КАК СуммаРозн,
	    |	СУММА(ПеремещениеТовараТовар.СуммаРознПол) КАК СуммаРознПол,
	    |	СУММА(ПеремещениеТовараТовар.НДСЗакуп) КАК НДСЗакуп,
	    |	СУММА(ПеремещениеТовараТовар.НДСРозн) КАК НДСРозн,
	    |	СУММА(ПеремещениеТовараТовар.НДСРознПол) КАК НДСРознПол
	    |ИЗ
	    |	Документ.ПеремещениеТовара.Товар КАК ПеремещениеТовараТовар
	    |ГДЕ
	    |	(ПеремещениеТовараТовар.Ссылка.Склад.Ссылка В (&Склады)
	    |			ИЛИ ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Ссылка В (&Склады))
	    |	И ПеремещениеТовараТовар.Ссылка.Проведен = ИСТИНА
	    |	И ПеремещениеТовараТовар.Ссылка.Статус <> &СтатусИзменениеКМХ
	    |	И ПеремещениеТовараТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	    |	И ПеремещениеТовараТовар.Ссылка.Склад.Код <> 207
	    |	И ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Код <> 207
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ПеремещениеТовараТовар.Ссылка.Номер,
	    |	ПеремещениеТовараТовар.Ссылка.Дата,
	    |	ПеремещениеТовараТовар.Ссылка.Склад.Код,
	    |	ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Код,
	    |	ПеремещениеТовараТовар.СтавкаНДС.Ставка
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	Номер";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("Склады",СписокОтмеченныхСкладов ());
	Запрос.УстановитьПараметр("СтатусИзменениеКМХ",Перечисления.СтатусПеремещения.ИзменениеМестаХранения);
	Запрос.УстановитьПараметр("Дата1",НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2",КонецДня(КонПериода));
	
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	
	ДБФ= Новый XBase;
	
	ЗадатьСтруктуруДБФ (ДБФ,"Перемещение");
	
	ДБФ.СоздатьФайл(ПапкаВыгрузки+"\Perem.DBF");
	ЭлементыФормы.Индикатор1.Значение=0;
	ЭлементыФормы.Индикатор1.МаксимальноеЗначение=ТЗ.Количество();
	
	Для каждого Стр из ТЗ Цикл
		ЭлементыФормы.Индикатор1.Значение=ЭлементыФормы.Индикатор1.Значение+1;
		
		ДБФ.Добавить();
		
		
		
		ДБФ.Ndoc=	Стр.Номер;
		ДБФ.DocDate=	Стр.Дата;
		ДБФ.OtprSkd=	Стр.ОтпрКод;
		ДБФ.PolSkd=Стр.ПолучательКод;
		ДБФ.NDS=	Стр.СтНДС;
		ДБФ.SumZ=	Стр.СуммаЗакуп;
		ДБФ.SumROtp=Стр.СуммаРозн;
		ДБФ.SumRPol=Стр.СуммаРознПол;
		ДБФ.NDSZ=Стр.НДСЗакуп;
		ДБФ.NDSROtp=Стр.НДСРозн;
		ДБФ.NDSRPol=Стр.НДСРознПол;
		
		ДБФ.Записать();
	КонецЦикла;	 
	
	ДБФ.ЗакрытьФайл();
	Возврат 0;
КонецФункции //Выгрузка_ПеремещениеТовара
//==========================================================GtG====

//==========================================================GtG====
Функция Выгрузка_СписокСкладов ()  
	//----------------------------------
	//Назначение:
	//  Выгружает список складов для бухгалтерии
	//  
	//  
	//  Синхронизация по коду
	//----------------------------------
	ТХТ="ВЫБРАТЬ
	|	МестаХранения.Код,
	|	МестаХранения.Наименование,
	|	МестаХранения.ТипНалогообложения
	|ИЗ
	|	Справочник.МестаХранения КАК МестаХранения
	|ГДЕ
	|	МестаХранения.ПометкаУдаления = ЛОЖЬ";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	
	ТЗ=ЗАпрос.Выполнить().Выгрузить();
	
	ДБФ= Новый XBase;
	
	ЗадатьСтруктуруДБФ(ДБФ,"СписокСкладов");
	
	ДБФ.СоздатьФайл(ПапкаВыгрузки+"\Stores.DBF");
	
	Для каждого Стр из ТЗ Цикл
		ДБФ.Добавить();
		
		ДБФ.CODE=Стр.Код;
		ДБФ.Name=Стр.Наименование;
		ДБФ.NOT=Стр.ТипНалогообложения;
		
		ДБФ.Записать();
	КонецЦикла;	
	
	ДБФ.ЗакрытьФайл();
	
	Возврат 0;	
	
КонецФункции	//Выгрузка_СписокСкладов
//==========================================================GtG====


//==========================================================GtG====
Функция Выгрузка_ВозвратТовараПоставщику ()  
	//----------------------------------
	//Назначение:
	//  Возвраты поставщикам
	//  синхронизация поставщиков по ИНН+КПП
	//  
	//  ВОЗВРАТОМ оформляем только бракованный и битый товар, хороший через обратную реализацию!
	//----------------------------------
	// Тип возврата поставщику  брак обнаружен: 0-в процессе приемки, 1- в процессе реализации

	ТХТ="ВЫБРАТЬ
	    |	ВозвратТовараПоставщикуТовар.Ссылка.Номер КАК Номер,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.Дата,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.Склад.Код КАК СкладКод,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.СпособВозврата,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.ИНН КАК ИНН,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.КПП КАК КПП,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.ДокОснование.ВхНомерНакл КАК ОснНомер,
	    |	СУММА(ВозвратТовараПоставщикуТовар.НДСЗакуп) КАК НДСЗакуп,
	    |	СУММА(ВозвратТовараПоставщикуТовар.НДСРозн) КАК НДСРозн,
	    |	ВозвратТовараПоставщикуТовар.СтавкаНДС.Ставка КАК СтНДС,
	    |	СУММА(ВозвратТовараПоставщикуТовар.СуммаЗакуп) КАК СуммаЗакуп,
	    |	СУММА(ВозвратТовараПоставщикуТовар.СуммаРозн) КАК СуммаРозн,
	    |	ВозвратТовараПоставщикуТовар.НомДокПост КАК НДП
	    |ИЗ
	    |	Документ.ВозвратТовараПоставщику.Товар КАК ВозвратТовараПоставщикуТовар
	    |ГДЕ
	    |	ВозвратТовараПоставщикуТовар.Ссылка.Проведен = ИСТИНА
	    |	И ВозвратТовараПоставщикуТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	    |	И ВозвратТовараПоставщикуТовар.Ссылка.Склад В(&Склады)
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ВозвратТовараПоставщикуТовар.СтавкаНДС.Ставка,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.ИНН,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.КПП,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.ДокОснование.ВхНомерНакл,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.Дата,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.СпособВозврата,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.Склад.Код,
	    |	ВозвратТовараПоставщикуТовар.Ссылка.Номер,
	    |	ВозвратТовараПоставщикуТовар.НомДокПост
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	Номер";
		
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Склады",СписокОтмеченныхСкладов ());
		Запрос.УстановитьПараметр("Дата1",НачалоДня(НачПериода));
		Запрос.УстановитьПараметр("Дата2",КонецДня(КонПериода));
		
		ТЗ= Запрос.Выполнить().Выгрузить();
		
		
		ДБФ= Новый XBase;
		
		ЗадатьСтруктуруДБФ(Дбф,"ВозвратПост");
		
		ДБФ.СоздатьФайл(ПапкаВыгрузки+"\Ret2Post.DBF");
		
		ЭлементыФормы.Индикатор1.Значение=0;
		ЭлементыФормы.Индикатор1.МаксимальноеЗначение=ТЗ.Количество();
		
		Для каждого Стр из ТЗ Цикл
			
			ЭлементыФормы.Индикатор1.Значение=ЭлементыФормы.Индикатор1.Значение+1;
			
			Дбф.Добавить();
			
			Попытка
				Если стр.СпособВозврата= Перечисления.ВидыВозвратаПоставщику.ВПроцессеРеализации ТОгда
					СВ=1;
				ИначеЕсли стр.СпособВозврата= Перечисления.ВидыВозвратаПоставщику.ПриПриемке ТОгда 	
					СВ=0;
				Иначе	
					СВ=1; // по умолчанию
				КонецЕсли;	
			ИСключение
				СВ=1; // по умолчанию (до внесения изменений в конфу)
			КонецПопытки;
				
			
			ДБФ.Ndoc=	стр.Номер;
			ДБФ.DocDate=	стр.Дата;
			ДБФ.SkdCode=	стр.СкладКод;
			ДБФ.RetType=	СВ;
			ДБФ.INN=	стр.ИНН;
			ДБФ.KPP =	стр.КПП;
			ДБФ.OsnNum=	стр.ОснНомер;
			ДБФ.NDSZ=	стр.НДСЗакуп;
			ДБФ.NDSR=	стр.НДСРозн;
			ДБФ.NDS=	стр.СтНДС;
			ДБФ.SummZ=	стр.СуммаЗакуп;
			ДБФ.SummR =	стр.СуммаРозн;
			ДБФ.NDP =	стр.НДП;

			

			
			ДБФ.Записать();
			
		КонецЦикла;	
		
		Дбф.ЗакрытьФайл();
		
	Возврат 0;	
	
КонецФункции	//Выгрузка_ВозвратТовараПоставщику
//==========================================================GtG====


//==========================================================GtG====
Функция ВыгрузкаСертификатов ()  
	//----------------------------------
	//Назначение:
	//  Выгружает данные по сертификатам в файл
	//  
	//  
	//  
	//----------------------------------
	 //-------------- ЗАПРОС GTG --------------------------НАЧАЛО
	 //Назначение: Получить данные по сертификатам
	 //
	 ТХТ="ВЫБРАТЬ
	     |	РеализацияККМСертификаты.Ссылка.Номер как НомерДок,
	     |	РеализацияККМСертификаты.Ссылка.Дата как ДатаДок,
	     |	РеализацияККМСертификаты.НомерСертификата КАК НомерСерт,
	     |	РеализацияККМСертификаты.Номинал как Номинал,
	     |	ВЫБОР
	     |		КОГДА РеализацияККМСертификаты.ОперацияССертификатом = &Продажа
	     |			ТОГДА 0
	     |		ИНАЧЕ 1
	     |	КОНЕЦ КАК ОперацияССертификатом
	     |ИЗ
	     |	Документ.РеализацияККМ.Сертификаты КАК РеализацияККМСертификаты
	     |ГДЕ
	     |	РеализацияККМСертификаты.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	     |	И РеализацияККМСертификаты.Ссылка.Проведен = Истина";
	 
	 Запрос=Новый Запрос;
	 Запрос.Текст=ТХТ;
	 Запрос.УстановитьПараметр("Продажа",Перечисления.ВидыОперацийССертификатами.Продажа);
	 Запрос.УстановитьПараметр("Дата1",НачалоДня(НачПериода));
	 Запрос.УстановитьПараметр("Дата2",КонецДня(КонПериода));
	 
	 ТЗ=Запрос.Выполнить().Выгрузить();
	 
	 ДБФ= Новый Xbase;
	 ЗадатьСтруктуруДБФ (ДБФ,"Сертификаты");
	 ДБФ.СоздатьФайл(ПапкаВыгрузки+"\SERTIF.DBF");
	 Для каждого Стр из ТЗ Цикл
		 ДБФ.Добавить();
		 ДБФ.Ndoc   = Стр.НомерДок;
		 ДБФ.DOCDATE=Стр.ДатаДок;
		 ДБФ.SERTNUM=Стр.НомерСерт;
		 ДБФ.NOMINAL=Стр.Номинал;
		 ДБФ.OPERTYPE=Стр.ОперацияССертификатом;		 
		 ДБФ.Записать();
	 КонецЦикла;	
	 
	 ДБФ.ЗакрытьФайл();
	 
	 Возврат 0;	
КонецФункции	//ВыгрузкаСертификатов
//==========================================================GtG====




//==========================================================GtG====
Функция Выгрузка_РеализацияККМ ()  
	//----------------------------------
	//Назначение:
	//  Выгрузка выурчки 
	//  По ТЧ бух документа РеализацияККМ
	//  потом дополнительно формируется еще один файлик с данными по сертификатам
	//  
	//----------------------------------
	
	ТХТ="ВЫБРАТЬ
	    |	РеализацияККМБухгалтерия.Ссылка.Склад.Код КАК Склад,
	    |	РеализацияККМБухгалтерия.Касса.ЗаводскойНомер КАК Касса,
	    |	РеализацияККМБухгалтерия.ЗетОчет КАК ЗетОчет,
	    |	РеализацияККМБухгалтерия.СтавкаНДС.Ставка КАК СтНДС,
	    |	РеализацияККМБухгалтерия.ТипОплаты КАК ТипОплаты,
	    |	РеализацияККМБухгалтерия.СуммаБезСкидки КАК СуммаБезСк,
	    |	РеализацияККМБухгалтерия.СуммаСоСкидкой КАК СуммаСоСк,
	    |	РеализацияККМБухгалтерия.СуммаСкидки КАК СуммаСк,
	    |	РеализацияККМБухгалтерия.СуммаНДСБезСкидки КАК СуммаНДСБезСк,
	    |	РеализацияККМБухгалтерия.СуммаНДДСоСкидкой КАК СуммаНДДСоСк,
	    |	РеализацияККМБухгалтерия.ЗакупочнаяСНДС КАК ЗакупяСНДС,
	    |	РеализацияККМБухгалтерия.НДСЗакуп,
	    |	РеализацияККМБухгалтерия.Ссылка.Дата КАК Дата,
	    |	РеализацияККМБухгалтерия.Ссылка.Номер КАК НомерДок,
	    |	ВЫБОР
	    |		КОГДА РеализацияККМБухгалтерия.Ссылка.Склад.ТипНалогообложения = &НДС
	    |			ТОГДА 1
	    |		ИНАЧЕ 2
	    |	КОНЕЦ КАК ТипНОСклада
	    |ИЗ
	    |	Документ.РеализацияККМ.Бухгалтерия КАК РеализацияККМБухгалтерия
	    |ГДЕ
	    |	РеализацияККМБухгалтерия.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	    |	И РеализацияККМБухгалтерия.Ссылка.Проведен = ИСТИНА
	    |	И РеализацияККМБухгалтерия.Ссылка.Склад В(&Склады)
	    |	И РеализацияККМБухгалтерия.Ссылка.Затычка = ЛОЖЬ
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	РеализацияККМБухгалтерия.ТипОплаты,
	    |	РеализацияККМБухгалтерия.Ссылка.Дата,
	    |	РеализацияККМБухгалтерия.Касса.ЗаводскойНомер,
	    |	РеализацияККМБухгалтерия.Ссылка.Склад.Код,
	    |	РеализацияККМБухгалтерия.ЗетОчет,
	    |	РеализацияККМБухгалтерия.СтавкаНДС.Ставка,
	    |	РеализацияККМБухгалтерия.СуммаБезСкидки,
	    |	РеализацияККМБухгалтерия.СуммаСоСкидкой,
	    |	РеализацияККМБухгалтерия.СуммаСкидки,
	    |	РеализацияККМБухгалтерия.СуммаНДСБезСкидки,
	    |	РеализацияККМБухгалтерия.СуммаНДДСоСкидкой,
	    |	РеализацияККМБухгалтерия.ЗакупочнаяСНДС,
	    |	РеализацияККМБухгалтерия.НДСЗакуп,
	    |	РеализацияККМБухгалтерия.Ссылка.Номер,
	    |	ВЫБОР
	    |		КОГДА РеализацияККМБухгалтерия.Ссылка.Склад.ТипНалогообложения = &НДС
	    |			ТОГДА 1
	    |		ИНАЧЕ 2
	    |	КОНЕЦ
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	Дата,
	    |	Склад,
	    |	НомерДок,
	    |	Касса,
	    |	ЗетОчет,
	    |	СтНДС,
	    |	ТипОплаты";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Склады",СписокОтмеченныхСкладов());
		Запрос.УстановитьПараметр("Дата1",НачалоДня(НачПериода));
		Запрос.УстановитьПараметр("Дата2",КонецДня(КонПериода));
		Запрос.УстановитьПараметр("НДС",Перечисления.ТипыНалогообложения.НДС);

		
		
		ТЗ=Запрос.Выполнить().Выгрузить();
		
		
		ДБФ= Новый XBase;
		
		ЗадатьСтруктуруДБФ(ДБФ,"Выручка");
		
		ДБФ.СоздатьФайл(ПапкаВыгрузки+"\Sales.DBF");
		
		
		ЭлементыФормы.Индикатор1.Значение=0;
		ЭлементыФормы .Индикатор1.МаксимальноеЗначение=Тз.Количество();
		
		Для каждого Стр из Тз Цикл
			
			ЭлементыФормы.Индикатор1.Значение=ЭлементыФормы.Индикатор1.Значение+1;
			
			ДБФ.Добавить();
			
			ДБФ.SkdCode =	СТР.Склад;
			ДБФ.KKM =	СТР.Касса;
			ДБФ.Znum  =	СТР.ЗетОчет;
			ДБФ.NDS   =	СТР.СтНДС;
			ДБФ.PAYTYPE=	СТР.ТипОплаты;
			ДБФ.SUMBSK  =	СТР.СуммаБезСк;
			ДБФ.SUMWSK  =	СТР.СуммаСоСк;
			ДБФ.SUMSK  =	СТР.СуммаСк;
			ДБФ.SUMNDSBSK =	СТР.СуммаНДСБезСк;
			ДБФ.SUMNDSWSK  =СТР.СуммаНДДСоСк;
			ДБФ.SUMZ =	СТР.ЗакупяСНДС;
			ДБФ.NDSZ =	СТР.НДСЗакуп;
			ДБФ.DOCDATE=	СТР.Дата ;
            ДБФ.Ndoc=	СТР.НомерДок ;
			ДБФ.SKDTXT=Стр.ТипНОСклада;

			дБФ.Записать();
			
			
		КонецЦикла;	 
		
		ДБФ.ЗакрытьФайл();
		
		Х=ВыгрузкаСертификатов (); // доп инфа по сертификатам
	
	
	Возврат 0;	
	
КонецФункции	//Выгрузка_РеализацияККМ
//==========================================================GtG====

//==========================================================GtG====
Функция Выгрузка_МелкооптоваяОтгрузка ()  
	//----------------------------------
	//Назначение:
	//  Выгрузка выурчки 
	//  По ТЧ бух документа РеализацияОптом
	//  
	//  
	//----------------------------------
	
	ТХТ="ВЫБРАТЬ
	    |	РеализацияОптомТовар.Ссылка.Номер КАК Номер,
	    |	НАЧАЛОПЕРИОДА(РеализацияОптомТовар.Ссылка.Дата, ДЕНЬ) КАК Дата,
	    |	РеализацияОптомТовар.Ссылка.Склад.Код КАК Склад,
	    |	РеализацияОптомТовар.Ссылка.Покупатель.ИНН КАК ИНН,
	    |	РеализацияОптомТовар.Ссылка.Покупатель.КПП КАК КПП,
	    |	РеализацияОптомТовар.СтавкаНДС.Ставка КАК СтавкаНДС,
	    |	СУММА(РеализацияОптомТовар.СуммаЗакуп) КАК СуммаЗакуп,
	    |	СУММА(РеализацияОптомТовар.СуммаРозн) КАК СуммаРозн,
	    |	СУММА(РеализацияОптомТовар.НДСЗакуп) КАК НДСЗакуп,
	    |	СУММА(РеализацияОптомТовар.НДСРозн) КАК НДСРозн,
	    |	РеализацияОптомТовар.Ссылка.Ссылка КАК Документ
	    |ИЗ
	    |	Документ.РеализацияОптом.Товар КАК РеализацияОптомТовар
	    |ГДЕ
	    |	РеализацияОптомТовар.Ссылка.Проведен = ИСТИНА
	    |	И РеализацияОптомТовар.Ссылка.Склад В(&Склады)
	    |	И РеализацияОптомТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	РеализацияОптомТовар.Ссылка.Номер,
	    |	НАЧАЛОПЕРИОДА(РеализацияОптомТовар.Ссылка.Дата, ДЕНЬ),
	    |	РеализацияОптомТовар.Ссылка.Склад.Код,
	    |	РеализацияОптомТовар.Ссылка.Покупатель.ИНН,
	    |	РеализацияОптомТовар.Ссылка.Покупатель.КПП,
	    |	РеализацияОптомТовар.Ссылка.Ссылка,
	    |	РеализацияОптомТовар.СтавкаНДС.Ставка
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	Документ,
	    |	Дата";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Склады",СписокОтмеченныхСкладов());
		Запрос.УстановитьПараметр("Дата1",НачалоДня(НачПериода));
		Запрос.УстановитьПараметр("Дата2",КонецДня(КонПериода));
		
		ТЗ=Запрос.Выполнить().Выгрузить();
		
		
		ДБФ= Новый XBase;
		
		ЗадатьСтруктуруДБФ(ДБФ,"МелкооптоваяОтгрузка");
		
		ДБФ.СоздатьФайл(ПапкаВыгрузки+"\MOPT.DBF");
		
		
		ЭлементыФормы.Индикатор1.Значение=0;
		ЭлементыФормы .Индикатор1.МаксимальноеЗначение=Тз.Количество();
		
		Для каждого Стр из Тз Цикл
			
			ЭлементыФормы.Индикатор1.Значение=ЭлементыФормы.Индикатор1.Значение+1;
			
			ДБФ.Добавить();
			
			ДБФ.NDOC= СТР.Номер       ;
			ДБФ.DOCDATE= СТР. Дата      ;
			ДБФ.SKDCODE= СТР.Склад       ;
			ДБФ.INN= СТР.ИНН       ;
			ДБФ.KPP= СТР.КПП       ;
			ДБФ.NDS= СТР.СтавкаНДС       ;
			ДБФ.SUMZ= СТР.СуммаЗакуп       ;
			ДБФ.SUMR= СТР.СуммаРозн       ;
			ДБФ.NDSZ= СТР.НДСЗакуп       ;
			ДБФ.NDSR= СТР.НДСРозн       ;
			
			дБФ.Записать();
			
			
		КонецЦикла;	 
		
		ДБФ.ЗакрытьФайл();
	
	
	Возврат 0;	
	
КонецФункции	//Выгрузка_МелкооптоваяОтгрузка
//==========================================================GtG====



//==========================================================GtG====
Функция Выгрузка_ВозвратОтПокупателя ()  
	//----------------------------------
	//Назначение:
	//  Выгрузка ВозвратОтПокупателя 
	//----------------------------------
	
	ТХТ="ВЫБРАТЬ
	    |	ВозвратОтПокупателяТовар.Ссылка.Дата как Дата,
	    |	ВозвратОтПокупателяТовар.Ссылка.Номер как Номер,
	    |	ВозвратОтПокупателяТовар.Ссылка.Склад.Код как Склад,
	    |	ВозвратОтПокупателяТовар.СтавкаНДС.Ставка как СтавкаНДС,
	    |	СУММА(ВозвратОтПокупателяТовар.СуммаЗакуп) КАК СуммаЗакуп,
	    |	СУММА(ВозвратОтПокупателяТовар.СуммаРозн) КАК СуммаРозн,
	    |	СУММА(ВозвратОтПокупателяТовар.СуммаСкидки) КАК СуммаСкидки
	    |ИЗ
	    |	Документ.ВозвратОтПокупателя.Товар КАК ВозвратОтПокупателяТовар
	    |ГДЕ
	    |	ВозвратОтПокупателяТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	    |	И ВозвратОтПокупателяТовар.Ссылка.Склад В(&Склады)
	    |	И ВозвратОтПокупателяТовар.Ссылка.Проведен = ИСТИНА
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ВозвратОтПокупателяТовар.Ссылка.Дата,
	    |	ВозвратОтПокупателяТовар.Ссылка.Номер,
        |	ВозвратОтПокупателяТовар.Ссылка.Склад.Код,
	    |	ВозвратОтПокупателяТовар.СтавкаНДС.Ставка";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Склады",СписокОтмеченныхСкладов());
		Запрос.УстановитьПараметр("Дата1",НачалоДня(НачПериода));
		Запрос.УстановитьПараметр("Дата2",КонецДня(КонПериода));
		
		ТЗ=Запрос.Выполнить().Выгрузить();
		
		
		ДБФ= Новый XBase;
		
		ЗадатьСтруктуруДБФ(ДБФ,"ВозвратОтПокупателя");
		
		ДБФ.СоздатьФайл(ПапкаВыгрузки+"\RetFrPok.DBF");
		
		
		ЭлементыФормы.Индикатор1.Значение=0;
		ЭлементыФормы .Индикатор1.МаксимальноеЗначение=Тз.Количество();
		
		Для каждого Стр из Тз Цикл
			
			ЭлементыФормы.Индикатор1.Значение=ЭлементыФормы.Индикатор1.Значение+1;
			
			ДБФ.Добавить();
			
			ДБФ.DOCDATE=Стр.Дата;  // ВозвратОтПокупателяТовар.Ссылка.Дата,
			ДБФ.Ndoc=Стр.Номер;   //  	ВозвратОтПокупателяТовар.Ссылка.Номер,
			ДБФ.SkdCode=Стр.Склад;   //  	ВозвратОтПокупателяТовар.Ссылка.Склад.Код,
			ДБФ.NDS=Стр.СтавкаНДС;   //  	ВозвратОтПокупателяТовар.СтавкаНДС.Ставка,
			ДБФ.SUMZ=Стр.СуммаЗакуп;   //  	СУММА(ВозвратОтПокупателяТовар.СуммаЗакуп) КАК СуммаЗакуп,
			ДБФ.SummR=Стр.СуммаРозн;   //  	СУММА(ВозвратОтПокупателяТовар.СуммаРозн) КАК СуммаРозн,
			ДБФ.SUMSK=Стр.СуммаСкидки;   //  	СУММА(ВозвратОтПокупателяТовар.СуммаСкидки) КАК СуммаСкидки
			


			дБФ.Записать();
			
			
		КонецЦикла;	 
		
		ДБФ.ЗакрытьФайл();
	
	
	Возврат 0;	
	
КонецФункции	//Выгрузка_РеализацияККМ
//==========================================================GtG====



Процедура КнопкаВыполнитьНажатие(Кнопка)
	ПапкаВыгрузки="\\Z130\base\ОБМЕН СКЛАД-БУХ"; // по кнопке в папку
	  ЗапускВыгрузки();
КонецПроцедуры




Процедура ЗапускВыгрузки()
	
	Если ОМ3_ЭтоПустаяДата(НачПериода) Или ОМ3_ЭтоПустаяДата(КонПериода)  Тогда  
		Предупреждение("Неправильный диапазон дат!");
		Возврат;
	КонецЕсли; 
	
	Если СписокОтмеченныхСкладов().Количество()=0 Тогда
		Предупреждение("Невыбрано ни одного склада!");
		Возврат;
	КонецЕсли; 
	
	Если ПустаяСтрока(ПапкаВыгрузки) ТОгда
		Предупреждение("На закладке настройки не указана папка выгрузки!");
		Возврат;
	КонецЕсли; 	
		
	
	
	
	Для каждого Стр из Операции Цикл
		
		Если Стр.Пометка=Ложь ТОгда
			Продолжить;
		КонецЕсли;
		
		Попытка
			РезВыгр=Вычислить("Выгрузка_"+Стр.Значение+"()"); // Запускаем процедуру выгрузки
		ИСключение
			
			Сообщить("Выгрузка "+Стр.Представление+" - ошибка!");
			
			Если РежимОтладки=Истина ТОгда
				Сообщить(ОписаниеОшибки());
			КонецЕсли; 	
		КонецПопытки;
		
	КонецЦикла;	
	
	Предупреждение("Готово!",20);
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель2ГалкиВсе(Кнопка)
	Для каждого Аптека из Аптеки Цикл
		
		Аптека.Пометка=Истина;
		
	КонецЦикла;	
КонецПроцедуры

Процедура КоманднаяПанель2ГалокНет(Кнопка)
	Для каждого Аптека из Аптеки Цикл
		Аптека.Пометка=Ложь;
		
	КонецЦикла;	
КонецПроцедуры

Процедура КоманднаяПанель2ВывернутьГалкиНаизнанку(Кнопка)
	Для каждого Аптека из Аптеки Цикл
		Аптека.Пометка = Не Аптека.Пометка;
	КонецЦикла;	
КонецПроцедуры


Процедура КоманднаяПанель3ГалкиВсе(Кнопка)
	Для каждого Операциа из Операции Цикл
		
		Операциа.Пометка=Истина;
		
	КонецЦикла;	
КонецПроцедуры

Процедура КоманднаяПанель3ГалокНет(Кнопка)
	Для каждого Операциа из Операции Цикл
		Операциа.Пометка=Ложь;
		
	КонецЦикла;	
КонецПроцедуры

Процедура КоманднаяПанель3ВывернутьГалкиНаизнанку(Кнопка)
	Для каждого Операциа из Операции Цикл
		Операциа.Пометка = Не Операциа.Пометка;
	КонецЦикла;	
КонецПроцедуры


//==========================================================GtG====
Процедура ВыборКаталогаСохраненияРезультатов (Поле,ФормаЗАголовок)  
	//----------------------------------
	//Назначение:
	//  Стандартная процедура выбора папки куда сохранять выгрузку
	//  
	//  
	//  
	//----------------------------------
	
	//--------------------------------------------------------------------Начало ВФ----GtG---
	ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДВФ.ПолноеИмяФайла = "";
	ДВФ.МножественныйВыбор = Ложь;
	ДВФ.Заголовок = ФормаЗАголовок;
	Если ДВФ.Выбрать() Тогда
		Поле=ДВФ.Каталог;
	Иначе
		Возврат;
	КонецЕсли; 
	//--------------------------------------------------------------------Конец ВФ----GtG---
	
	
	
	
КонецПроцедуры	//ВыборКаталогаСохраненияРезультатов
//==========================================================GtG====




Процедура ПапкаВыгрузкиПриходаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыборКаталогаСохраненияРезультатов (ПапкаВыгрузки,"Сохранять в...");
	
КонецПроцедуры


//==========================================================GtG====
Процедура Расписание ()  
	//----------------------------------
	//Назначение:
	//  
	//  
	//  
	//  
	//----------------------------------
	
	 //------------------<Расписание>-------------------GtG----10.09.2008
	ТекДАта=ТекущаяДата();
	Ч=Час(ТекДата);
	С=Секунда(ТекДата);
	
	ДатаСрабатывания= НачалоДня(ТекДата)+25*60*60; // 01:00 следующего дня
	
	
	Аптеки.ЗаполнитьПометки(Истина);
	Операции.ЗаполнитьПометки(Истина);


	ЭлементыФормы.Лог.Очистить();
	
	ПапкаВыгрузки="\\Z130\base\ОБМЕН СКЛАД-БУХ\РОБОТ";  // робот в папку робота
	
	
	ДобавкаСекундКТекущемуВремени=ДатаСрабатывания-ТекДАта;
	ЭлементыФормы.Лог.ДобавитьСтроку("Старт через "+ ДобавкаСекундКТекущемуВремени+" секунд");
	ЭтаФорма.ПодключитьОбработчикОжидания("ОбработкаТаймера",ДобавкаСекундКТекущемуВремени); // 1 раз в 6 часов обновлять список файлов
	//--------------------------------------------------------GtG----КОНЕЦ--10.09.2008


	
	
	
	
КонецПроцедуры	//Расписание
//==========================================================GtG====






//==========================================================GtG====
Процедура ОбработкаТаймера ()  Экспорт
	//----------------------------------
	//Назначение:
	//  Запуск выгрузки автоматом
	//  
	//  
	//  
	//----------------------------------
	
	ЭтаФорма.ОтключитьОбработчикОжидания("ОбработкаТаймера");
	
	НачПериода=НачалоДня(ТекущаяДата()-15*24*60*60);//15 дней назад	
	КонПериода=КонецДня(ТекущаяДата()-1*24*60*60);  // конец вчера
	
	ЭлементыФормы.Лог.ДобавитьСтроку("Запуск выгрузки "+ТекущаяДата());
	ЗапускВыгрузки();
	ЭлементыФормы.Лог.ДобавитьСтроку("Закончилась выгрузка "+ТекущаяДата());

	
	
	
	
	 Расписание (); // обратно включит обормотчик ожидания
КонецПроцедуры	//ОбработкаТаймера
//==========================================================GtG====


 










ТХТ="ВЫБРАТЬ
    |	МестаХранения.Ссылка
    |ИЗ
    |	Справочник.МестаХранения КАК МестаХранения
    |ГДЕ
    |	МестаХранения.Код <> 207
    |
    |УПОРЯДОЧИТЬ ПО
    |	МестаХранения.Наименование";

Запрос=Новый Запрос;
Запрос.Текст=ТХТ;
Аптеки.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));	

//==================<ЗАполним список операций (типдокумента, текстовое представление)>===================GtG====25.01.2008
Операции.Добавить("ПоступлениеТовара","Поступление товара");
Операции.Добавить("ПеремещениеТовара","Перемещение товара");
Операции.Добавить("РеализацияККМ","Реализация через ККМ");
Операции.Добавить("ВозвратТовараПоставщику","Возврат товара поставщику");
Операции.Добавить("Переоценка","Переоценка товара на аптеках");
Операции.Добавить("ВозвратОтПокупателя","Возврат от покупателя");
Операции.Добавить("МелкооптоваяОтгрузка","Мелкооптовая отгрузка (по розн. ценам)");









//Операции.Добавить("СписокСкладов","Список складов");


Операции.ЗаполнитьПометки(Истина);
Аптеки.ЗаполнитьПометки(Истина);

ПапкаВыгрузки="\\Z130\base\ОБМЕН СКЛАД-БУХ";

Расписание ()  ;





