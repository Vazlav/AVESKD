Перем ДокИзФормы Экспорт;
Перем АвтозапускРасценкиИзФормы Экспорт;

Перем ТЗКосяков;
Перем ИспользоватьЦеныКонкурентов;
Перем ДокОбъект Экспорт;
Перем ТЗМатрицаОгруглений Экспорт;
Перем ЭтоГорздрав;

//==================<КУЧЕРЯВОЕ ЦЕНООБРАЗОВАНИЕ>===================GtG====22.11.2007
//расчет цен ведется на самую мелкую единицу измерения
//чтобы процент наценки не превышал максимальный лимит:
//	округление по верхнему пределу в меньшюу сторону
//	округление по нижнему лимиту в большую сторону
//тогда цена всегда будет в допустимо мдиапазоне
//и для укрупненных единиц измерени явсегда будет делиться нацело, без длинны ххвостов
//	Для товаров цена которых меньше константы минимальная цена округления округляе мцену до 1-й копейки
//		если цена больше константы - округляем до 5 или 10 копеек ,
//			что указано в константе метод округления розн. цены
// после асрчета цены (на 1) она умножается на коэффициент единицы из документа
//
// алгоритмы , условия их применения и необходимые для расечта параметры описываются в справочнике АлгоритмыЦенообразованияРегионов
// подчиненном справочнику Регионы
//
// Цена рассчитывается на единицу измерения с коэффициентом =1, при этом цена более крупной еит должна без дробей делиться на коэффициент.
// Если в документе использовалась ЕИТ с К<>1 цо единичную цену умножаем на К

Перем КоличествоОшибокРАсценки;

Перем ДанныеТекПартии; // для поиска спецЦены по строке документа. 


//==========================================================GtG====
Процедура АвтозапускРасценкиТовара ()  
	//----------------------------------
	//Назначение:
	//  
	//  
	//  
	//  
	//----------------------------------
	ЭтаФорма.ОтключитьОбработчикОжидания("АвтозапускРасценкиТовара");
	ОсновныеДействияФормыРасценить("");
	КоманднаяПанель1СохранитьЦены("");
	
	КоманднаяПанель1Закрыть("");

КонецПроцедуры	//АвтозапускРасценкиТовара
//==========================================================GtG====


Процедура ПриОткрытии()
	// Подставляем регион из склада или из константы
	// регион используется для расчета предельной наценки по ЖНВЛС / СВЛС
	// Запуск расценки Только из формы прихода товара(пока что)
	//------------------------------------------------------------------------
	
 	
	
	Документ=ЭтаФорма.ВладелецФормы.Ссылка;
	УстановитьрозничныеЦеныВДокументе=Истина;
	ЭлементыФормы.ТП.ФиксацияСлева=2;
	ЭлементыФормы.Индикатор.Видимость=Ложь;
	
	ЗаписыватьЦеныВРегистрЦен=Истина;
	
	ТипЗнчДокумента = ТипЗнч(Документ);
	
	Если ТипЗнчДокумента = Тип("ДокументСсылка.УстановкаРозничныхЦен") или ТипЗнчДокумента = Тип("ДокументСсылка.ПереоценкаПоКачеству") ТОгда
		УстановитьрозничныеЦеныВДокументе=Истина;
		РасцениватьВсеСтрокиДокумента=Истина;
		ЗаписыватьЦеныВРегистрЦен=Ложь;
		ПроверятьЗакупкуИРозницу = Ложь;
	КонецЕсли;
	

	
	ЭлементыФормы.ТП.Колонки.ЦенаОтправителя.Видимость = Ложь;	
	Если ТипЗнчДокумента = Тип("ДокументСсылка.УЗ_Перемещение") ТОгда
		
		ЭлементыФормы.ТП.Колонки.ЦенаОтправителя.Видимость = Истина;
		
		
		Если Документ.СкладПолучатель.ТипСклада=Перечисления.ТипыМХ.Опт ТОгда
			
			ПРедупреждение("Расценку товара на оптовом складе делают документом ПЕРЕРАСЦЕНКА ТОВАРА НА СКЛАДЕ!");
			ЭтаФорма.Закрыть();
			Возврат;
			
		Иначе
			
			ЭлементыФормы.ЗаписыватьЦеныВРегистрЦен.Доступность=Истина;
			ЭлементыФормы.УстановитьрозничныеЦеныВДокументе.Доступность=Истина;
			
			ЗаписыватьЦеныВРегистрЦен=Истина;
			УстановитьрозничныеЦеныВДокументе=Истина;
			
			РегионСклада=Документ.СкладПолучатель.Регион;
			Склад=Документ.СкладПолучатель;
			
			КоманднаяПанель2неВыбратьВсеРег("");
			Для каждого Стр из ВыбРег Цикл
				Если Стр.Значение=РегионСклада ТОгда
					Стр.Пометка=Истина;
				КонецЕсли;	
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если  ИспользоватьЦеныКонкурентов = Истина Тогда
		ЭлементыФормы.ТП.Колонки.МинимальнаяЦена.Видимость=Истина;
		//ЭлементыФормы.ТП.Колонки.СредневзвешеннаяЦена.Видимость=Истина;
		ЭлементыФормы.ТП.Колонки.Конкурент.Видимость=Истина;
	Иначе
		ЭлементыФормы.ТП.Колонки.МинимальнаяЦена.Видимость=Ложь;
		//ЭлементыФормы.ТП.Колонки.СредневзвешеннаяЦена.Видимость=Ложь;
		ЭлементыФормы.ТП.Колонки.Конкурент.Видимость=Ложь;
	КонецЕсли;	
	
	
	//==================<Регионы по авторасценке>===================GtG====21.11.2008

		// только для поступления товара
		Если ТипЗнчДокумента = Тип("ДокументСсылка.УЗ_Перемещение") ТОгда
			РегионСклада=Документ.СкладПолучатель.Регион;
			Склад=Документ.СкладПолучатель;
		ИНаче
			РегионСклада=Документ.Склад.Регион;
			Склад=Документ.Склад;
		КОнецЕсли;
		
		
		Если Склад.ТипСклада=Перечисления.ТипыМХ.Розн  ТОгда  // только по региону аптеки
			
			УстановитьрозничныеЦеныВДокументе=Истина;// по розничным складам цену пицем в документ
			
			КоманднаяПанель2неВыбратьВсеРег("");
			Для каждого Стр из ВыбРег Цикл
				Если Стр.Значение=РегионСклада ТОгда
					Стр.Пометка=Истина;
				КонецЕсли;	
			КонецЦикла;	
		Иначе
			КоманднаяПанель2ВыбратьВсеРЕг(""); // по всем регионам
		КонецЕсли;
		
		
		Если Склад.Бренд = Справочники.БрендыАптечныхСетей.НайтиПоКоду(1) Тогда
			ЭтоГорздрав = Истина;
		Иначе
			ЭтоГорздрав = Ложь;
		КонецЕсли;
		
		ВыводитьНеРасцененные=Истина; // что расценится то и выведем
		

	//================================================GtG====КОНЕЦ==21.11.2008
	
	
	
КонецПроцедуры

 
Функция ПолучитьТаблицуЦенКонкурентов()
	
	ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Получаем таблицу цен конкурентов...";

	
	ТХТ = "ВЫБРАТЬ
	      |	Конкуренты.Наименование КАК ИмяКонкурента,
	      |	Конкуренты.Вес,
	      |	ЦеныКонкурентов.Цена,
	      |	ВыборкаТовары.Товар,
	      |	ВыборкаТовары.КодТовара,
	      |	Конкуренты.Код КАК КодКонкурента
	      |ПОМЕСТИТЬ ВремВыборка
	      |ИЗ
	      |	РегистрСведений.ЦеныКонкурентов КАК ЦеныКонкурентов
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	      |			товары.Товар КАК Товар,
	      |			товары.Товар.Код КАК КодТовара
	      |		ИЗ
	      |			Документ.ПоступлениеТовара.Товар КАК товары
	      |		ГДЕ
	      |			товары.Ссылка = &Документ) КАК ВыборкаТовары
	      |		ПО (ВыборкаТовары.КодТовара = ЦеныКонкурентов.КодТовараСправочной)
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонкурентыЕГК КАК Конкуренты
	      |		ПО ЦеныКонкурентов.КодКонкурента = Конкуренты.Код
	      |			И (Конкуренты.Вес > 0)
	      |			И (Конкуренты.ЗагружатьДанные = ИСТИНА)
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	МАКСИМУМ(ВремВыборка.ИмяКонкурента) КАК ИмяКонкурента,
	      |	ВремВыборка.КодТовара,
	      |	выборка2.МинЦена
	      |ПОМЕСТИТЬ ВыборкаМинЦен
	      |ИЗ
	      |	ВремВыборка КАК ВремВыборка
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	      |			МИНИМУМ(ВремВыборка.Цена) КАК МинЦена,
	      |			ВремВыборка.КодТовара КАК КодТовара
	      |		ИЗ
	      |			ВремВыборка КАК ВремВыборка
	      |		ГДЕ
	      |			ВремВыборка.Вес > 0
	      |		
	      |		СГРУППИРОВАТЬ ПО
	      |			ВремВыборка.КодТовара) КАК выборка2
	      |		ПО ВремВыборка.КодТовара = выборка2.КодТовара
	      |			И ВремВыборка.Цена = выборка2.МинЦена
	      |ГДЕ
	      |	ВремВыборка.Вес > 0
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ВремВыборка.КодТовара,
	      |	выборка2.МинЦена
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ЕСТЬNULL(СУММА(ВремВыборка.Цена * ВремВыборка.Вес) / СУММА(ВремВыборка.Вес), 0) КАК СВЦена,
	      |	ВремВыборка.Товар,
	      |	ВремВыборка.КодТовара,
	      |	ВыборкаМинЦен.ИмяКонкурента,
	      |	ВыборкаМинЦен.МинЦена
	      |ИЗ
	      |	ВремВыборка КАК ВремВыборка
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыборкаМинЦен КАК ВыборкаМинЦен
	      |		ПО (ВыборкаМинЦен.КодТовара = ВремВыборка.КодТовара)
	      |ГДЕ
	      |	ВремВыборка.Вес > 0
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ВремВыборка.Товар,
	      |	ВремВыборка.КодТовара,
	      |	ВыборкаМинЦен.ИмяКонкурента,
	      |	ВыборкаМинЦен.МинЦена
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ ВремВыборка
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ ВыборкаМинЦен";
		  
	Запрос  = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Документ",Документ);
	ТЗЦенКонкурентов = Запрос.Выполнить().Выгрузить();
	Для каждого стр из ТЗЦенКонкурентов Цикл
		Если стр.СВЦена > 0 Тогда
			Если стр.СВЦена > 0 и стр.СВЦена <= 10	Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До10коп, Перечисления.МетодыОкругления.Математически);
			ИначеЕсли стр.СВЦена > 10 и стр.СВЦена <= 50 Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До50коп, Перечисления.МетодыОкругления.Математически);
			ИначеЕсли стр.СВЦена > 50 Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.ДоРуб, Перечисления.МетодыОкругления.Математически);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	Возврат ТЗЦенКонкурентов;
	
КонецФункции

Процедура ПодтянутьЦеныОтправителя(Док)
	
	Запрос = Новый Запрос;	
	Если Док.ФирмаОтправитель = Док.ФирмаПолучатель Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	УЗ_ПеремещениеТовар.КодПартии КАК ПартияКод,
		               |	ЕСТЬNULL(РЦП.Цена, ЕСТЬNULL(РЦ.Цена, 0)) КАК Цена
		               |ИЗ
		               |	Документ.УЗ_Перемещение.Товар КАК УЗ_ПеремещениеТовар
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦены КАК РЦ
		               |		ПО УЗ_ПеремещениеТовар.КодТовара = РЦ.ТоварКод
		               |			И (РЦ.АптекаКод = &КодАптекиОтправителя)
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦеныПоПартиям КАК РЦП
		               |		ПО УЗ_ПеремещениеТовар.КодПартии = РЦП.ПартияКод
		               |			И (РЦП.АптекаКод = &КодАптекиОтправителя)
		               |ГДЕ
		               |	УЗ_ПеремещениеТовар.Ссылка = &Ссылка";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	УЗ_ПеремещениеТовар.КодТовара КАК ТоварКод,
		               |	УЗ_ПеремещениеТовар.КодПартииПолучателя КАК ПартияКод,
		               |	ЕСТЬNULL(РЦП.Цена, ЕСТЬNULL(РЦ.Цена, 0)) КАК Цена
		               |ИЗ
		               |	Документ.УЗ_Перемещение.Товар КАК УЗ_ПеремещениеТовар
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦены КАК РЦ
		               |		ПО УЗ_ПеремещениеТовар.КодТовара = РЦ.ТоварКод
		               |			И (РЦ.АптекаКод = &КодАптекиОтправителя)
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦеныПоПартиям КАК РЦП
		               |		ПО УЗ_ПеремещениеТовар.КодПартии = РЦП.ПартияКод
		               |			И (РЦП.АптекаКод = &КодАптекиОтправителя)
		               |ГДЕ
		               |	УЗ_ПеремещениеТовар.Ссылка = &Ссылка";
		
	КонецЕсли;
	Запрос.УстановитьПараметр("Ссылка",Док);			   
	Запрос.УстановитьПараметр("КодАптекиОтправителя",Док.СкладОтправитель.Код);
	Запрос.УстановитьПараметр("КодАптекиПолучателя",Док.СкладПолучатель.Код);
	
	    		
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	Если ТП.Колонки.Найти("ЦенаОтправителя") = Неопределено Тогда
		ТП.Колонки.Добавить("ЦенаОтправителя",Новый ОписаниеТипов("Число"),"Цена отправителя",10);	
	КонецЕсли;
	Выборка = Рез.Выбрать();
	Пока Выборка.Следующий() Цикл
		НайденнаяСтрока = ТП.Найти(Выборка.ПартияКод,"КодПартии");
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			НайденнаяСтрока.ЦенаОтправителя = Выборка.Цена;
		КонецЕсли;
	КонецЦикла;
		
	
	
	
КонецПроцедуры

Процедура ПодтянутьДопКолонкиПоТовару(КодВидаФиксЦены)
	
	Запрос = Новый Запрос;	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	АП.Код как КодТовара,
	               |	АП.Маркер,
	               |	ЕСТЬNULL(ФЦ.Цена,0) как ФиксЦена
	               |ИЗ
	               |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
                   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксЦены.СрезПоследних(, ВидФиксЦены = &ВидФиксЦены) КАК ФЦ
                   |		ПО (ФЦ.КодТовара = АП.Код)
	               |ГДЕ
	               |	АП.Код В(&Коды)";
		
	Запрос.УстановитьПараметр("Коды",ТП.ВыгрузитьКолонку("КодТовара"));	
	Запрос.УстановитьПараметр("ВидФиксЦены",КодВидаФиксЦены);
	    		
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	Если ТП.Колонки.Найти("ФиксЦена") = Неопределено Тогда
		ТП.Колонки.Добавить("ФиксЦена",Новый ОписаниеТипов("Число"),"Фикс. цена",10);	
	КонецЕсли;
	Если ТП.Колонки.Найти("Маркер") = Неопределено Тогда
		ТП.Колонки.Добавить("Маркер",Новый ОписаниеТипов("Строка"),"Маркер",20);
	КонецЕсли;	
	Выборка = Рез.Выбрать();
	Пока Выборка.Следующий() Цикл
		НайденнаяСтрока = ТП.Найти(Выборка.КодТовара,"КодТовара");
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			НайденнаяСтрока.ФиксЦена = Выборка.ФиксЦена;
			НайденнаяСтрока.Маркер = Выборка.Маркер;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры


Процедура ОсновныеДействияФормыРасценить(Кнопка) Экспорт
	Перем СокрСтр;
	
	 НачалоРасценки=ТекущаяДата();

	 
	 Если ТипЗнч(Документ)=Тип("ДокументСсылка.УЗ_ПоступлениеТовара") или ТипЗнч(Документ)=Тип("ДокументСсылка.УЗ_ВводОстатков") Тогда
		 Отказ = Ложь;
		 ПриходТовараСервер.УЗ_ПроверитьИОбновитьДанныеПартии(Документ.ПолучитьОбъект(),Отказ);
		 Если Отказ = Истина Тогда
			 Сообщить("Не удалось обновить данные по партиям. Попробуйте запустить расценку через несколько секунд еще раз");	
			 Возврат;
		 КонецЕсли;
	 КонецЕсли;
	 ЭлементыФормы.ХодРасценкиТОвар.Заголовок="";
		 
	ЭтаФорма.Панель.ТекущаяСтраница= ЭтаФорма.Панель.Страницы.Найти("Страница1");
	ЭтаФорма.Обновить();
	
	ЭлементыФормы.ХодРасценкиРегион.Видимость=Истина;
	ЭлементыФормы.ХодРасценкиТОвар.Видимость=Истина;
	ЭлементыФормы.Индикатор.Видимость=Истина;
	
	КоличествоОшибокРАсценки=0;
	
	Если ЭтаФорма.ВладелецФормы= Неопределено Тогда
		 ЭВФ=Документ;
	Иначе
		ЭВФ=ЭтаФорма.ВладелецФормы;//Документ.ПолучитьОбъект(); 
	КонецЕсли;
	
	ДатаДок=ЭВФ.Дата;
	
	//------------------<СКЛАД для использования в алгоритмах завязанных на складе>-------------------GtG----21.11.2008
	Если ТипЗнч(ЭВФ)=Тип("ДокументОбъект.УЗ_Перемещение") 
		или ТипЗнч(ЭВФ)=Тип("ДокументСсылка.УЗ_Перемещение")
		или ТипЗнч(ЭВФ.Ссылка)=Тип("ДокументСсылка.УЗ_Перемещение")
		
		тогда
		СКЛАД=ЭВФ.СкладПолучатель;
	Иначе
		СКЛАД=ЭВФ.Склад;
	КонецЕсли; 
	//------------------------------------------------------------------------------------------------GtG----КОНЕЦ--21.11.2008
	
	//------------------<Сколько регионов?>-------------------GtG----09.01.2008
	ТЗРег= Новый ТаблицаЗначений;
	ТЗРег.Колонки.Добавить("Рег");
	Для каждого Стр из ВыбРег Цикл
		Если Стр.Пометка=Истина Тогда
			СтрРег=ТЗРег.Добавить();
			СтрРег.Рег=Стр.Значение;
		КонецЕсли;	
	КонецЦикла;	
	//--------------------------------------------------------GtG----КОНЕЦ--09.01.2008
	Если ТЗРег.Количество() = 0 Тогда
		Предупреждение("Для аптеки не задан регион ценообразования");
		Возврат;
	КонецЕсли;
	
	ПараметрыРасценки = Новый Структура;
	
	ПараметрыРасценки.Вставить("Авторасценка",Ложь) ;
	ПараметрыРасценки.Вставить("Склад",СКЛАД);
	ПараметрыРасценки.Вставить("Документ",Документ) ;
	ПараметрыРасценки.Вставить("ТипДокумента",ТипЗнч(Документ)) ;
	ПараметрыРасценки.Вставить("ВидДокумента",Документ.Метаданные().Имя) ;
	ПараметрыРасценки.Вставить("Комментировать",Истина);
	ПараметрыРасценки.Вставить("ВыводитьНеРасцененные",Истина);
	ПараметрыРасценки.Вставить("Регион",ТЗРег.Получить(0).Рег);//;Склад.Регион);	
	ПараметрыРасценки.Вставить("МинимальныйПроцентНаценкиКромеТопов",0);
	ПараметрыРасценки.Вставить("ЗаписыватьЦеныВРегистрЦен",Истина);
	ПараметрыРасценки.Вставить("УстановитьрозничныеЦеныВДокументе",Истина);
	ПараметрыРасценки.Вставить("ИспользоватьЦеныКонкурентов",Истина);
	ПараметрыРасценки.Вставить("ПроверятьЗакупкуИРозницу",Истина);
	ПараметрыРасценки.Вставить("УскореннаяРасценка",УскореннаяРасценка);
	ПараметрыРасценки.Вставить("РазрешитьРозничнуюЦенуНижеЗакупочной",РазрешитьРозничнуюЦенуНижеЗакупочной);
	
	Если  ТипЗнч(Документ)=Тип("ДокументСсылка.УЗ_ПоступлениеТовара") Тогда 
		ПараметрыРасценки.Вставить("СвойПоставщик",Документ.Поставщик.ПринадлежитГруппеКомпаний);
		ПараметрыРасценки.Вставить("ИгнорироватьПревышенияЗакупочнойЦены",Документ.Поставщик.ИгнорироватьПревышенияЗакупочнойЦены);
	КонецЕсли;


	СтруктураРезультата = Расценка.УЗ_Расценить(ПараметрыРасценки);
	//Сообщить(ТекущаяДата() - НачДата);
	ЭлементыФормы.ТП.Значение = СтруктураРезультата.ТП;
	ЭлементыФормы.ДеревоОшибок.Значение = СтруктураРезультата.ДеревоОшибок;
	ЭлементыФормы.Таб.Очистить();
	ЭлементыФормы.Таб.Вывести(СтруктураРезультата.ТаблицаКомментариев);

	ЭлементыФормы.Таб.Показать();
	КоличествоОшибокРАсценки = СтруктураРезультата.КоличествоОшибокРасценки;
	ТЗКосяков = СтруктураРезультата.ТЗКосяков;
	КонецРасценки=ТекущаяДата();
	
	ВремяВыполнения=КонецРасценки-НачалоРасценки;
	
	ВВМин=Цел(ВремяВыполнения/60);
	ВВСек=ВремяВыполнения%60;
	
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.УЗ_Перемещение") Тогда
		ПодтянутьЦеныОтправителя(ЭВФ.Ссылка);	
	КонецЕсли;
	
	ПодтянутьДопКолонкиПоТовару(Склад.ВидФиксЦены.Код);
	
	ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Готово! "+Формат(ВВМин,"ЧЦ=2; ЧН=00; ЧВН=")+":"+Формат(ВВсек,"ЧЦ=2; ЧН=00; ЧВН=");
	
КонецПроцедуры


Процедура КоманднаяПанель1СохранитьЦены(Кнопка)
	
	Если ЭтаФорма.ВладелецФормы= Неопределено Тогда
		ЭФВО=ДокОбъект;	
	Иначе
		ЭФВО=ЭтаФорма.ВладелецФормы;
	КонецЕсли;
	
	Если ЭФВО=Неопределено Тогда
		ЭФВО=Документ.ПолучитьОбъект();
	КонецЕсли;	
	
	ТипЗнчДокумента = ТипЗнч(Документ);
	
	ЕСли УстановитьрозничныеЦеныВДокументе=Истина Тогда //пихаем их в документ
		Если  ЭФВО.Проведен=Истина Тогда
			Если НЕ РольДоступна("Супер_Администратор") Тогда
				Пароль = "";
				Если ВвестиСтроку(Пароль,"В проведенный документ цены возможно сохранить по паролю. Введите пароль..") Тогда
					Если НЕ Пароль = "расценить" Тогда
						Предупреждение("Неверный пароль");
						Возврат;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ Документ.Метаданные().ТабличныеЧасти.Товар.Реквизиты.Найти("ПроцентРознНац") = Неопределено Тогда
			ЕстьКолонкаПроцента = Истина;
		Иначе
			ЕстьКолонкаПроцента = Ложь;
		КонецЕсли;
		
		ТОвар=ЭФВО.Товар;
		
		Если ТипЗнчДокумента = Тип("ДокументСсылка.УЗ_Перемещение") Тогда
			ЭтоПеремещение = Истина;
			Если Документ.ВнутреннееПеремещение Тогда
				ЭтоВнутреннееПеремещение = Истина;
			Иначе
				ЭтоВнутреннееПеремещение = Ложь;
			КонецЕсли;
			пер_Регион = ЭФВО.СкладПолучатель.Регион;
		Иначе
			ЭтоПеремещение = Ложь;
			пер_Регион = ЭФВО.Склад.Регион;
		КонецЕсли;
		
		Если ТипЗнчДокумента = Тип("ДокументСсылка.УстановкаРозничныхЦен") или ТипЗнчДокумента = Тип("ДокументСсылка.ПереоценкаПоКачеству") Тогда
			ЭтоУстановкаНовыхЦен = Истина;
		Иначе
			ЭтоУстановкаНовыхЦен = Ложь;
		КонецЕсли;
		
		Для каждого СтрТП из ТП Цикл
			
			Если СтрТП.ЦенаРозн=0 Тогда
				Если Авторасценка=Ложь ТОгда  // при ручной расценке долбим пока все цены не рассчитаются
					ПРедупреждение("У товара "+СтрТП.ТОвар+" для региона "+СтрТП.регион+" не рассчиталась розничная цена!
					|Чтобы цены сохранились - они все должны быть рассчитаны!");
					Возврат;
				Иначе
					Продолжить; // при авторасценке пропускаем строчку нерасцененного товара
				КонецЕсли;	
			КонецЕсли;	

			Если ТипЗнчДокумента<>Тип("ДокументСсылка.ПерерасценкаТоваров") Тогда
				
				Если СтрТП.Регион<>пер_Регион Тогда
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			
			Если Строка(СтрТП.ЦенаРозн)="" Тогда
				//Сообщить("Строка "+СтрТП.НН+"  Нет розничной цены! Товар: "+СтрТП.ТОвар+"   Партия: "+СтрТП.Партия);
				Продолжить;
			КонецЕсли; 	
			
			Если ЭтоПеремещение = Истина Тогда//Если ТипЗнч(Документ) = Тип("ДокументСсылка.УЗ_Перемещение") Тогда
				
				СтрТП.ЭтоИндивидуальнаяЦена = Истина;
				
				Если ЭтоВнутреннееПеремещение Тогда
					СтрП=ТОВар.Найти(СтрТП.КодПартии,"КодПартии");
				Иначе
					СтрП=ТОВар.Найти(СтрТП.КодПартии,"КодПартииПолучателя");
				КонецЕсли;
			Иначе
				СтрП=ТОВар.Найти(СтрТП.КодПартии,"КодПартии");
			КонецЕсли;
			
			Если СтрП= Неопределено Тогда
				Сообщить("В документе не найдена строка с партией "+СтрТП.КодПартии+" пропускаем...");
				Продолжить;
			КонецЕсли; 
			
			Если ЭтоУстановкаНовыхЦен Тогда
				Если СтрТП.ЖНВЛС или СтрТП.ЭтоИндивидуальнаяЦена или СтрП.ЦенаИндивидуальная > 0 или ЭтоПеремещение или  ТипЗнчДокумента = Тип("ДокументСсылка.ПереоценкаПоКачеству") Тогда
					СтрП.ЦенаИндивидуальнаяНовая = СтрТП.ЦенаРозн;
				Иначе
					СтрП.ЦенаОбщаяНовая = СтрТП.ЦенаРозн;
				КонецЕсли;
			Иначе
				Если СтрТП.ТоварРасфасован Тогда
					СтрП.ЦенаРозн=СтрТП.ЦенаРозн/СтрТП.КоэффЕит;	
				Иначе
					СтрП.ЦенаРозн=СтрТП.ЦенаРозн;	
				КонецЕсли;
				СтрП.СуммаРозн=СтрП.ЦенаРозн*СтрП.Количество;
			КонецЕсли;

	
			Если СтрТП.ЦенаЗакуп > 0 и ЕстьКолонкаПроцента Тогда
				СтрП.ПроцентРознНац = Окр((СтрТП.ЦенаРозн/СтрТП.ЦенаЗакуп - 1)*100,2);
			КонецЕсли;
			
			
			
						
			
		КонецЦикла;	
		
	КонецЕсли;
	
	
	Если (ТипЗнч(Документ)=Тип("ДокументСсылка.УЗ_ПоступлениеТовара")) или (ТипЗнч(Документ)=Тип("ДокументСсылка.УЗ_ВводОстатков")) ТОгда
		Для каждого СтрТП из ТП Цикл
			Если СтрТП.ЦенаРозн=0 Тогда
				СтрокаТЗКосяков  = ТЗКосяков.Найти(СтрТП.КодПартии,"КодПартии");
				Если СтрокаТЗКосяков = Неопределено Тогда 
					Косяк=ТЗКосяков.Добавить();
					Косяк.КодПартии=СтрТП.КодПартии;
					Косяк.Товар=СтрТП.Товар;
					Косяк.Косяк="Не рассчиталась розничная цена!";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ОП=ЭФВО.ОшибкиРасценки;
		ОП.Очистить();// при каждой расценке перезаполняется. в идеале - пустая.

		
		ТЗКосяков.Свернуть("КодПартии,Товар,Косяк,ЦенаПоРасценке","");
		
		Для каждого Стр из ТЗКосяков Цикл
			СтрОп=ОП.Добавить();
			СтрОП.Товар 	= Стр.Товар;
			СтрОП.КодПартии 	= Стр.КодПартии;
			СтрОП.ОписаниеОшибки= Стр.Косяк;
			СтрОП.ЦенаПоРасценке= Стр.ЦенаПоРасценке;
		КонецЦикла;
		
		ЭФВО.Статус=Перечисления.СтатусПрихода.Расценен;
		
		Если ТЗКосяков.Количество()>0 ТОгда
			ЭФВО.Статус=Перечисления.СтатусПрихода.ПроблемыСРасценкой;
		КонецЕсли;
		

	ИначеЕсли (ТипЗнч(Документ)=Тип("ДокументСсылка.УЗ_Перемещение")) или ЭтоУстановкаНовыхЦен ТОгда
		ОП=ЭФВО.ОшибкиРасценки;
		ОП.Очистить();// при каждой расценке перезаполняется. в идеале - пустая.
		
		ТЗКосяков.Свернуть("КодПартии,Товар,Косяк,ЦенаПоРасценке","");
		
		
		Для каждого Стр из ТЗКосяков Цикл
			СтрОп=ОП.Добавить();
			СтрОП.Товар 	= Стр.Товар;
			СтрОП.КодПартии 	= Стр.КодПартии;
			СтрОП.ОписаниеОшибки= Стр.Косяк;
			СтрОП.ЦенаПоРасценке= Стр.ЦенаПоРасценке;
		КонецЦикла;
		
		//ЭФВО.Статус=Перечисления.СтатусПеремещения.Расценен;
		
		//Если ТЗКосяков.Количество()>0 ТОгда
		//	ЭФВО.Статус=Перечисления.СтатусПеремещения.ПроблемыСРасценкой;
		//КонецЕсли;
		
		
	КонецЕсли;
	
	Попытка
		НачатьТранзакцию();
		
		Если ЭтоПеремещение Тогда
			Если ТЗКосяков.Количество() > 0 Тогда
				ЭФВО.СтатусРасценки = 3;
			Иначе
				ЭФВО.СтатусРасценки = 1;
			КонецЕсли;
		КонецЕсли;
		
		ЭФВО.Записать(РежимЗаписиДокумента.Запись);
		
		Если ЗаписыватьЦеныВРегистрЦен=Истина ТОгда
			Если (ТипЗнч(Документ)=Тип("ДокументСсылка.УЗ_Перемещение")) Тогда
				ПриходТовараСервер.ОбновитьРозничныеЦеныВРегистреЦенПоАптеке(ЭФВО.СкладПолучатель.Код,ТП,ЭФВО.Ссылка);
			ИначеЕсли (ТипЗнч(Документ)=Тип("ДокументСсылка.УЗ_ПоступлениеТовара")) Тогда 
				Если ЭФВО.Статус = Перечисления.СтатусПрихода.Расценен  Тогда //ENT-1194
					ПриходТовараСервер.ОбновитьРозничныеЦеныВРегистреЦенПоАптеке(ЭФВО.Склад.Код,ТП,ЭФВО.Ссылка);
				КонецЕсли;	
			Иначе
				ПриходТовараСервер.ОбновитьРозничныеЦеныВРегистреЦенПоАптеке(ЭФВО.Склад.Код,ТП,ЭФВО.Ссылка);
			КонецЕсли;
			
		КонецЕсли;	
		
		
		Если АвтоРасценка=Ложь ТОгда
			ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Документ,"Расценка",ПараметрыСеанса.ТекущийСотр,"Ошибок при расценке "+КоличествоОшибокРАсценки+ТЗКосяков.Количество());
		Иначе
			ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Документ,"АвтоРасценка",ПараметрыСеанса.ТекущийСотр,"Ошибок при расценке "+КоличествоОшибокРАсценки+ТЗКосяков.Количество());
		КонецЕсли;
		
		
		ЗафиксироватьТранзакцию();			
	Исключение
		Сообщить("Ошибка расценки: " + ОписаниеОшибки());
		ОтменитьТранзакцию();
	КонецПопытки;

	
    	
КонецПроцедуры

Процедура ДеревоОшибокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если ТипЗнч(ВыбраннаяСтрока.Ошибки)<>Тип("Строка") ТОгда
		ВыбраннаяСтрока.Ошибки.ПолучитьФорму().Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура ПоТОваруНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	МассивТоваров=ЭтаФорма.ВладелецФормы.Товар.ВыгрузитьКолонку("Товар");
	Элемент.СписокВыбора.ЗагрузитьЗначения(МАссивТоваров);
КонецПроцедуры

Процедура ТПЦенаРознПриИзменении(Элемент)
	
	//Пересчет процентов наценки при изменении розничной цены вручную
	
	ТСР= ЭлементыФормы.ТП.ТекущаяСтрока;
	
	СтрТП=ЭлементыФормы.ТП.ТекущаяСтрока;
	
	Партия = Справочники.УЗ_Партии.НайтиПоКоду(СтрТП.КодПартии);
	
	Если СтрТП.КоэффЕит > 1 Тогда
		СтрТП.ЦенаРозн = Окр(СтрТП.ЦенаРозн/СтрТП.КоэффЕит,2)*СтрТП.КоэффЕит;
	КонецЕсли;
	
	Если СтрТП.ЖНВЛС = Истина Тогда	
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.УЗ_Перемещение") Тогда
			Склад = Документ.СкладПолучатель;
		Иначе
			Склад = Документ.Склад;
		КонецЕсли;	
		СубъектРФ = Склад.СубъектРФ;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СубъектыРФОграниченияПоЦенообразованию.ПредельнаяНадбавкаРозн,
		               |	СубъектыРФОграниченияПоЦенообразованию.ПредельнаяНадбавкаПККНРозн
		               |ИЗ
		               |	Справочник.СубъектыРФ.ОграниченияПоЦенообразованию КАК СубъектыРФОграниченияПоЦенообразованию
		               |ГДЕ
		               |	СубъектыРФОграниченияПоЦенообразованию.Ссылка = &СубъектРФ
		               |	И СубъектыРФОграниченияПоЦенообразованию.ЦенаПроизводителяОт < &ЦенаПроизводителя
		               |	И СубъектыРФОграниченияПоЦенообразованию.ЦенаПроизводителяДо >= &ЦенаПроизводителя";
		
		Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
		Запрос.УстановитьПараметр("ЦенаПроизводителя",СтрТП.ЦенаПРБезНДС);
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Предупреждение("У субъекта РФ " + СубъектРФ + " нет соответствия цены производителя и предельной наценки");
			Возврат;
		КонецЕсли;
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		Если СтрТП.Товар.ПККН = Истина Тогда
			ПредельнаяЦена =  (Окр(СтрТП.ЦенаЗакуп/(1+Партия.СтавкаНДСЗакуп/100),2)+ СтрТП.ЦенаПРБезНДС/100*Выборка.ПредельнаяНадбавкаПККНРозн)*(1+Партия.СтавкаНДСРозн/100);
		Иначе
			ПредельнаяЦена =  (Окр(СтрТП.ЦенаЗакуп/(1+Партия.СтавкаНДСЗакуп/100),2)+ СтрТП.ЦенаПРБезНДС/100*Выборка.ПредельнаяНадбавкаРозн)*(1+Партия.СтавкаНДСРозн/100);
		КонецЕсли;
		ПредельнаяЦена = Цел(ПредельнаяЦена*10)/10;
		ПредельнаяЦена = Окр(ПредельнаяЦена/СтрТП.КоэффЕит,2)*СтрТП.КоэффЕит;
		Если СтрТП.ЦенаРозн > ПредельнаяЦена Тогда
			СтрТП.ЦенаРозн = ПредельнаяЦена;		
		КонецЕсли;
		
		Если ЭтоГорздрав и СтрТП.ФиксЦена > 0 Тогда
			СтрТП.ЦенаРозн = Мин(СтрТП.ЦенаРозн,СтрТП.ФиксЦена);
		КонецЕсли;
		
		
	КонецЕсли;	
	
	СтрТП.НаценкаОтЗакупки = (СтрТП.ЦенаРозн/СтрТП.ЦенаЗакуп - 1 )*100;
	
КонецПроцедуры

Процедура КоманднаяПанель1Закрыть(Кнопка)
	ЭтаФорма.Закрыть();
КонецПроцедуры

Процедура КоманднаяПанель2ВыбратьВсеРЕг(Кнопка)
	ВыбРег.ЗаполнитьПометки(Истина);
КонецПроцедуры

Процедура КоманднаяПанель2неВыбратьВсеРег(Кнопка)
	ВыбРег.ЗаполнитьПометки(Ложь);

КонецПроцедуры

Процедура КоманднаяПанель2ОбратитьРЕГ(Кнопка)
	Для каждого Стр из ВыбРег Цикл
		Стр.Пометка=Не Стр.Пометка;
	КонецЦикла;	 
КонецПроцедуры
 
Процедура ТППриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Остаток > 0 Тогда
		ОформлениеСтроки.Ячейки.Товар.ЦветФона = Новый Цвет(104, 240, 90);	
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1кнПоказатьЦеныКонкурентов(Кнопка)
	
	Если Константы.ИспользоватьЦеныКонкурентовПриРасценке.Получить() = Истина Тогда
		ТекСтрока = ЭлементыФормы.ТП.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ  ПустаяСтрока(ТекСтрока.Конкурент) Тогда
			Форма = ПолучитьФорму("Обработка.Расценка_v2.Форма.ВсеЦеныКонкурентов");
			Форма.Код = ТекСтрока.Товар.Код;
			Форма.Открыть();
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура КоманднаяПанель1УстановитьПредЦенуВРасчетную(Кнопка)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = "ru = ""Подтвердите ваше желание на коррекцию расчетной цены?"";"
	+ " en = ""Do you want to continue?""";
	Ответ = Вопрос(НСтр(Текст), Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	
	Для каждого стр из ТП Цикл
		Если стр.ПредыдущаяРознЦена < стр.ЦенаРозн и стр.ЦенаРозн > 0  Тогда
			стр.ЦенаРозн = стр.ПредыдущаяРознЦена;	
			стр.НаценкаОтЗакупки =  ОМ6_НаценкаОтЧегоЛибо(стр.ЦенаЗакуп,стр.ЦенаРозн);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель1кнОткрытьПартию(Кнопка)
	
	Партия = Справочники.УЗ_Партии.НайтиПоКоду(ЭлементыФормы.ТП.ТекущаяСтрока.КодПартии);
	Партия.ПолучитьФорму("ФормаЭлемента").Открыть();
	
КонецПроцедуры

Процедура КоманднаяПанель1кнПоказатьЦеныОтправителя(Кнопка)
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.УЗ_Перемещение") Тогда	
			
	КонецЕсли;
	
КонецПроцедуры


ЭлементыФормы.ХодРасценкиРегион.Видимость=Ложь;
ЭлементыФормы.ХодРасценкиТОвар.Видимость=Ложь;
	
Комментировать=Истина;
ВыводитьНеРасцененные=Истина;

ТХТ="ВЫБРАТЬ
	    |	Регионы.Ссылка как Рег
	    |ИЗ
	    |	Справочник.Регионы КАК Регионы
	    |ГДЕ
	    |	Регионы.ПометкаУдаления = Ложь";
		
Запрос = Новый Запрос;
Запрос.Текст=ТХТ;
	
ВыбРег.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Рег"));

Попытка
	Если ЭтаФорма.ВладелецФормы.Склад.ТипСклада = Перечисления.ТипыМХ.Розн Тогда
		Для каждого Стр из ВыбРег Цикл
			Если Стр.Значение= ЭтаФорма.ВладелецФормы.Склад.Регион ТОгда
				Стр.Пометка=Истина;
			КонецЕсли;
		КонецЦикла;	
	Иначе
		ВыбРег.ЗаполнитьПометки(Истина);
	КонецЕсли;
Исключение
КонецПопытки; 


МинимальныйПроцентНаценкиКромеТопов=0;

ЗаписыватьЦеныВРегистрЦен=Истина;
УстановитьрозничныеЦеныВДокументе=Ложь;
ИспользоватьЦеныКонкурентов = Константы.ИспользоватьЦеныКонкурентовПриРасценке.Получить();
ПроверятьЗакупкуИРозницу = Истина;
УскореннаяРасценка = Истина;
