ПЕРЕМ МО_МенВремТаб Экспорт;
Перем ТоварЗатычка Экспорт;
Перем ЕИТЗатычка Экспорт;
Перем ТНО_ОРН Экспорт; // Тип Налогообложения поступления товаров по умолчанию. ОРН (в смысле НДС)



//---------------<-------------------------------------------------------------------->---------------------------// GtG // 11.02.2013 11:52:14
//---------------<Функции для типизации колонок ДБФ для перегонки во временную таблицу>---------------------------// GtG // 11.02.2013 11:44:45
Функция фТипS(ДлинаСтроки) Экспорт
	Возврат Новый ОписаниеТипов("Строка",новый КвалификаторыСтроки(ДлинаСтроки, ДопустимаяДлина.Переменная) );
КонецФункции

Функция фТипN (Длина,Точность) Экспорт
	Возврат Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(Длина,Точность,ДопустимыйЗнак.Любой));
КонецФункции

Функция фТипD() Экспорт
	Возврат Новый ОписаниеТипов("Дата",Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));
КонецФункции	

Функция ФТипСпр(ВидСправочникаСтрокой) Экспорт
	Возврат Новый ОписаниеТипов( "СправочникСсылка."+ВидСправочникаСтрокой );
КонецФункции


Функция ФТипПеречисление(ВидПеречисленияСтрокой) Экспорт
	
	Возврат Новый ОписаниеТипов( "ПеречислениеСсылка."+ВидПеречисленияСтрокой );
КонецФункции


Процедура  СоздатьНовыхКассиров(ТаблицаНовыхКассиров,Фирма,Лог) 
	
	Если ТаблицаНовыхКассиров.Количество()=0 тогда
		возврат;
	КонецЕсли;
	
	мЗаписьВЛог(Лог,"Создаем записи о новых сотрудниках для мотивации...");
	Для каждого стр из ТаблицаНовыхКассиров Цикл
		
		Спр=Справочники.СотрудникиДляМотивации.СоздатьЭлемент();
		Спр.Владелец=Фирма;
		Спр.Наименование=Стр.NCUSER;
		Спр.ТабНомер= Стр.TNCUSER;
		Спр.Записать();
		
	КонецЦикла;
	
КонецПроцедуры	


Процедура ПереименоватьКассиров(ТаблицаПереименованныхКассиров,Фирма,Лог) Экспорт
    Если ТаблицаПереименованныхКассиров.Количество()=0 тогда
		возврат;
	КонецЕсли;
	
	мЗаписьВЛог(Лог,"Переименовываем записи о сотрудниках для мотивации...");
	Для каждого стр из ТаблицаПереименованныхКассиров Цикл
		
		Спр=Стр.Ссылка.ПолучитьОбъект();
		Спр.Наименование=Стр.NCUSER;
		Спр.Записать();
	КонецЦикла;

КонецПроцедуры


Процедура МиграцияККМ()
	
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МО_МенВремТаб;
	
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	СуммыПоЗетОтчетам_1.Склад,
	             |	СуммыПоЗетОтчетам_1.Касса_ЗаводскойНомер,
	             |	СуммыПоЗетОтчетам_1.Касса
	             |ПОМЕСТИТЬ ККМ_выручки
	             |ИЗ
	             |	СуммыПоЗетОтчетам_1 КАК СуммыПоЗетОтчетам_1
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	хККМ.Склад,
	             |	хККМ.Касса_ЗаводскойНомер,
	             |	хККМ.Касса,
	             |	хККМ.КассаИзСправочника,
	             |	хККМ.Владелец,
	             |	хККМ.СоздатьНовуюКассу,
	             |	хККМ.ПометитьНаУдалениеКассуИзСправочника
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		ККМ_выручки.Склад КАК Склад,
	             |		ККМ_выручки.Касса_ЗаводскойНомер КАК Касса_ЗаводскойНомер,
	             |		ККМ_выручки.Касса КАК Касса,
	             |		Кассы.Ссылка КАК КассаИзСправочника,
	             |		Кассы.Владелец КАК Владелец,
	             |		ВЫБОР
	             |			КОГДА ККМ_выручки.Касса ЕСТЬ NULL 
	             |				ТОГДА ИСТИНА
	             |			ИНАЧЕ ЛОЖЬ
	             |		КОНЕЦ КАК СоздатьНовуюКассу,
	             |		ВЫБОР
	             |			КОГДА Кассы.Владелец <> ККМ_выручки.Склад
	             |				ТОГДА ИСТИНА
	             |			ИНАЧЕ ЛОЖЬ
	             |		КОНЕЦ КАК ПометитьНаУдалениеКассуИзСправочника
	             |	ИЗ
	             |		ККМ_выручки КАК ККМ_выручки
	             |			ЛЕВОЕ СОЕДИНЕНИЕ Кассы_УникальныеЗаводскиеНомера КАК Кассы
	             |			ПО ККМ_выручки.Касса_ЗаводскойНомер = Кассы.ЗаводскойНомер) КАК хККМ
	             |ГДЕ
	             |	(хККМ.СоздатьНовуюКассу = ИСТИНА
	             |			ИЛИ хККМ.ПометитьНаУдалениеКассуИзСправочника = ИСТИНА)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ ККМ_выручки";
				 
	РЕз=Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр Из Рез Цикл 
		
		Если Стр.СоздатьНовуюКассу=Истина ТОгда
			ККМ=Справочники.Кассы.СоздатьЭлемент();
			ККМ.ЗаводскойНомер=СокрЛП(Стр.Касса_ЗаводскойНомер);
			ККМ.Наименование=СокрЛП(Стр.Касса_ЗаводскойНомер);
			ККМ.Владелец=стр.Склад;
			ККМ.УстановитьНовыйКод();
			ККМ.Записать(); // код уже не равен 0 и при записи дает нормальное имя кассы
		КонецЕсли;	
			
		Если Стр.ПометитьНаУдалениеКассуИзСправочника=Истина Тогда
			Стр.КассаИзСправочника.ПолучитьОбъект().УстановитьпометкуУдаления(Истина);
		КонецЕсли;

	КонецЦикла;
КонецПроцедуры	

//---------------<-------------------------------------------------------------------->---------------------------// GtG // 11.02.2013 11:52:14

Процедура мЗаписьВЛог(Лог_ТекстовыйДокумент,Сообщение) Экспорт
	Лог_ТекстовыйДокумент.ВставитьСтроку(1,""+Формат(ТекущаяДата(),"ДФ=HH:mm:ss")+"   "+Сообщение);
Конецпроцедуры	


Процедура ПросмотрРеззапроса(ИмяВТ,Запрос,Склад)
	
	ИмяФайлапроверки="C:\RP\"+ИмяВТ+"_"+Формат(ТекущаяДата(),"ДФ='dd.MM.yyyy __HH_mm_ss'")+"  ("+Склад.Код+").1sTZ";
	
	Сообщить("Проверка ВТ  "+ИмяВТ+"   // "+ТекущаяДата() +"// "+ИмяФайлапроверки);
	Запрос.Текст="Выбрать 	* из "+ИмяВТ;
	РП=Запрос.Выполнить().Выгрузить();
	//Резпроверки=РП.ВыбратьСтроку();
	ЗначениеВФайл(ИмяФайлапроверки,РП);
КонецПроцедуры	


Процедура СообщитьОПроблемеСКолонками(Склад)
	
	
	//------------------<ШАБЛОН ПОСЛАТЬ ПИСЬМО>----------------------GtG----
	
	МПочтец= Обработки.Почтарь;
	Почтец=МПочтец.Создать();
	Почтец.Рассылка.Очистить();
	Почтец.Автоотправка=ИСТИНА;
	Почтец.Рассылка.Добавить(СокрЛП("E.Zhigulskiy@id-soft.ru"));
	
	Почтец.Тема="ВЫРУЧКА БЕЗ КОЛОНОК кассиров. "+Склад;
	Почтец.ТекстПисьма="ВЫРУЧКА БЕЗ КОЛОНОК кассиров. "+Склад;
	
	Ф=Почтец.ПолучитьФорму("Форма", , Новый УникальныйИдентификатор);
	Ф.Открыть();
	
	Почтец=Неопределено;
	
	//--------------------------------------------------------GtG----КОНЕЦ--
	
Конецпроцедуры	


Процедура ЗаписатьЛогВФайл(Лог)
	Если ПисатьЛогвФайл=Истина Тогда
		ИмяЛогФайла=""+Константы.КаталогФТП.Получить()+"OUT\kkm_backup\kkm.log";
		ЛогФайл=Новый ТекстовыйДокумент;
		
		Если НайтиФайлы(ИмяЛогФайла).Количество()<>0 Тогда
			ЛогФайл.Прочитать(ИмяЛогФайла);
		КонецЕсли;	
		
		ЛогФайл.ДобавитьСтроку("======================================== "+ТекущаяДата()+" / "+ИмяКомпьютера()+" / "+ИмяПользователя()+" ========================================");
		
		ЛогФайл.ДобавитьСтроку(Лог.ПолучитьТекст());
		
		ЛогФайл.Записать(ИмяЛогФайла);
	КонецЕсли;	
Конецпроцедуры	


Процедура УстановитьЗаголовок_ПоИмениБД()
	#Если Клиент Тогда
		
		
		
		
	
		
	#КонецЕсли
	
Конецпроцедуры	
	



Процедура ЗагрузитьВыручкуЧерезВременныеТаблицы(ОткрытыйДБФ,Склад,Индикатор,Лог,ИмяФайлаЗИП="") Экспорт
	//ОткрытыйДБФ -- ДБФфайл, Xbase открытый методом открытьфайл
	//Склад -- место хранения, по которому грузится выручка
	//Лог -- Текстовый Документ
	//Индикатор -- Либо индикатор на форме либо структура с полями Значение и МаксимальноеЗначение (для вызова из регламентного задания)
	Лог.Очистить();
	
	//ПараметрыСеанса.Беспредел=Ложь; // на всякий случай;
	
	//УдалитьФайлы("C:\RP","*.*"); // тестовые файлы
	
	мЗаписьВЛог(Лог,"Загружаем "+Склад+"    Код: "+Склад.Код);
	
	 мЗаписьВЛог(Лог,"Получаем данные из DBF...");
	 
	 Фирма=Склад.Фирма;
	 
	 
	//---------------<Новая структура ДБФа>---------------------------// GtG // 11.02.2013 10:31:56
	ТЗ= Новый ТаблицаЗначений; // для загрузки в нее дбф файл
	ТЗ.Колонки.Добавить("PNUM",фТипS(10));                  //  C
	ТЗ.Колонки.Добавить("SNUM",фТипN(11,0));                  //  N
	ТЗ.Колонки.Добавить("ZNUM",фТипN(11,0));                  //  N
	ТЗ.Колонки.Добавить("PT",фТипN(11,0));                  //  N
	ТЗ.Колонки.Добавить("DCCODE",фТипS(25));                  //  C
	ТЗ.Колонки.Добавить("PSK",фТипN(15,2));                  //  N
	ТЗ.Колонки.Добавить("NDOC",фТипS(20));                  //  C
	ТЗ.Колонки.Добавить("DTDOC",фТипS(14));                  //  C
	ТЗ.Колонки.Добавить("STATE",фТипN(11,0));                  //  N
	ТЗ.Колонки.Добавить("CODEPART",фТипS(15));                  //  C
	ТЗ.Колонки.Добавить("Ч_CODEPART",фТипN(13,0));                  //  N

	ТЗ.Колонки.Добавить("CODEEIT",фТипN(11,0));                  //  N
	ТЗ.Колонки.Добавить("QNT",фТипN(15,2));                  //  N
	ТЗ.Колонки.Добавить("PNDS",фТипN(15,2));                  //  N
	ТЗ.Колонки.Добавить("COSTR",фТипN(15,2));                  //  N
	ТЗ.Колонки.Добавить("COSTRSK",фТипN(15,2));                  //  N
	ТЗ.Колонки.Добавить("SUMSK",фТипN(15,2));                  //  N
	ТЗ.Колонки.Добавить("SKCLEAR",фТипN(15,2));                  //  N // чистая скидка
	ТЗ.Колонки.Добавить("CERTIF",фТипN(15,2));                  //  N  // сумма зачтенная по сертификату
	ТЗ.Колонки.Добавить("ZDATE",фТипD(),,0);                  //  D     Дата Z-отчета
	ТЗ.Колонки.Добавить("ZTIME",фТипS(11));                  //  C   Время Z-отчета
	ТЗ.Колонки.Добавить("EKLZ",фТипN(11,0));                  //  N   признак окончания действия эклз 1- когда близка 
	ТЗ.Колонки.Добавить("ZSALE0",фТипN(15,2));                  //  N продано нал
	ТЗ.Колонки.Добавить("ZSALE3",фТипN(15,2));                  //  N продано бн
	ТЗ.Колонки.Добавить("ZRET0",фТипN(15,2));                  //  N  возврат нал
	ТЗ.Колонки.Добавить("ZRET3",фТипN(15,2));                  //  N  возврат бн
	ТЗ.Колонки.Добавить("ZSUM",фТипN(15,2));                  //  N   итого выручка всего (возврат? скидка?)
	ТЗ.Колонки.Добавить("ZZERO",фТипN(15,2));                  //  N  необнуляемый итог на (конец смены?)
	ТЗ.Колонки.Добавить("VDEPOT",фТипS(15));                  //  C версия модуля зав
	ТЗ.Колонки.Добавить("VCASH",фТипS(15));                  //  C  версия кассового модуля
	ТЗ.Колонки.Добавить("IDCUSER",фТипN(11,0));                  //  N ид кассира
	ТЗ.Колонки.Добавить("NCUSER",фТипS(50));                  //  C  фио кассира
	ТЗ.Колонки.Добавить("TNCUSER",фТипS(10));                  //  C таб.номер кассира
	
	//------------------<Расчетные колонки>-------------------GtG----14.01.2008
	ТЗ.Колонки.Добавить("ЧистаяДАта",фТипD()); 
	ТЗ.Колонки.Добавить("РознСумма",фТипN(15,2)); 
	ТЗ.Колонки.Добавить("КЕит",фТипN(15,2)); 
	ТЗ.Колонки.Добавить("РознНдс",фТипN(15,2)); 
	
	
	ТЗ.Колонки.Добавить("ЗакупСумма",фТипN(15,2)); 
	
	ТЗ.Колонки.Добавить("ЗакупНДС",фТипN(15,2));
	
	ТЗ.Колонки.Добавить("ПартияСС",ФТипСпр("Партии") );
	ТЗ.Колонки.Добавить("ТоварСС",ФТипСпр("АССОРТИМЕНТНЫЙ_ПЛАН"));
	
	
	ТЗ.Колонки.Добавить("ДатаВремяЧека",фТипD()); //DTDOC-> Дату
	
	ТЗ.Колонки.Добавить("ТипТовара",фТипN(10,0)); // 1-Товар, 2-Услуга (числом), 3- продажа сертификата, 4 - Зачет сертификата
	ТЗ.Колонки.Добавить("ВидПТ",ФТипПеречисление("ВидыПоступленияТоваров")); // вид поступления товара (покупка/комиссия/бонусы/подарки) из партиии  
	ТЗ.Колонки.Добавить("СуммаСоСкидкой",фТипN(15,2));
	//---------------<Конец новой структуры ДБФа>---------------------------// GtG // 11.02.2013 10:31:59

	КоличествоЗаписей = ОткрытыйДБФ.КоличествоЗаписей();
	//Индикатор.Значение=0;
	//Индикатор.МаксимальноеЗначение=КоличествоЗаписей;
	
	//Дрыг=Индикатор.МаксимальноеЗначение%10;
	
	Если КоличествоЗаписей = 0 ТОгда
		// Это пустой Файл
		ЗаписатьЛогВФайл(Лог);
		Возврат;
	КонецЕсли;	
	
	//---------------<Перегоняем во времнную таблицу>---------------------------// GtG // 11.02.2013 12:36:29 
	
	Если  ОткрытыйДБФ.Поля.Найти("IDCUSER")=Неопределено Тогда
		СтарыйФормат=Истина;
	Иначе
		СтарыйФормат=Ложь;
	КонецЕсли;	

	ПустаяПартия = Справочники.Партии.ПустаяСсылка() ;
	ПустойТовар = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
	
	ТребуетсяСообщитьОПроблемеСКолонками=Ложь;
	
	Для Ы=1 По ОткрытыйДБФ.КоличествоЗаписей() Цикл
		ОткрытыйДБФ.Перейти(Ы);
		
				
		Стр=ТЗ.Добавить();
		
		Стр.PNUM=СокрЛП(ОткрытыйДБФ.PNUM);  // заводской номер ккм     //фТипS(10));       //C
		Стр.SNUM=ОткрытыйДБФ.SNUM;  //номер смены
		Стр.ZNUM=ОткрытыйДБФ.ZNUM;  // номер з-отчета
		Стр.PT=ОткрытыйДБФ.PT;      // тип оплаты  1 - нал, 
									//             3 - безнал,
									//             11- продажа сертификата нал , 
									//             13- продажа сертификата, 
									//             5 - Зачет сертифика+наличные, 
									//             6 - зачет серт+кредитка
									//             4 - Данные о зачтенном сертификате
									
		Стр.DCCODE=СокрЛП(ОткрытыйДБФ.DCCODE);// номер ДискКарты 
		Стр.PSK=ОткрытыйДБФ.PSK;    // процент скидки
		Стр.NDOC=ОткрытыйДБФ.NDOC;   //номер чека
		Стр.DTDOC=Дата(ОткрытыйДБФ.DTDOC);   //дата чека
		Стр.STATE=ОткрытыйДБФ.STATE;       //фТипN(11,0));       //N
		Стр.CODEEIT=ОткрытыйДБФ.CODEEIT;    // код еит   >0 - это товар , <0- это код услуги - 100000, чтобы получить код услуги нужно прибавить 100 000
		Стр.QNT=ОткрытыйДБФ.QNT;       //количество
		Стр.PNDS=ОткрытыйДБФ.PNDS;       //ставка ндс
		Стр.COSTR=ОткрытыйДБФ.COSTR;       //ЦЕНА РОЗНИЧНАЯ
		Стр.COSTRSK=ОткрытыйДБФ.COSTRSK;       //ЦЕНА РОЗНИЧНАЯ СО СКИДКОЙ
		Стр.SUMSK=ОткрытыйДБФ.SUMSK;       //сумма скидки
		Стр.SKCLEAR=ОткрытыйДБФ.SKCLEAR;       // чистая скидка
		Стр.CERTIF=ОткрытыйДБФ.CERTIF;       //сумма зачтенная по сертификату
		Стр.ZDATE=ОткрытыйДБФ.ZDATE;       //Дата Z-отчета
		Стр.ZTIME=ОткрытыйДБФ.ZTIME;       //Время Z-отчета
		Стр.EKLZ=ОткрытыйДБФ.EKLZ;       //признак окончания действия эклз 1- когда близка 
		Стр.ZSALE0=ОткрытыйДБФ.ZSALE0;       //продано нал
		Стр.ZSALE3=ОткрытыйДБФ.ZSALE3;       //продано бн
		Стр.ZRET0=ОткрытыйДБФ.ZRET0;       //возврат нал
		Стр.ZRET3=ОткрытыйДБФ.ZRET3;       //возврат бн
		Стр.ZSUM=ОткрытыйДБФ.ZSUM;       //итого выручка всего (возврат? скидка?)
		Стр.ZZERO=ОткрытыйДБФ.ZZERO;       //необнуляемый итог на (конец смены?)
		Стр.VDEPOT=ОткрытыйДБФ.VDEPOT;       //версия модуля зав
		Стр.VCASH=ОткрытыйДБФ.VCASH;       //Cверсия кассового модуля
		//---------------<персональные продажи>---------------------------// GtG // 18.02.2013 20:47:06 
				
		ЕСли СтарыйФормат=Ложь Тогда
			Если ОткрытыйДБФ.IDCUSER<>-1 ТОгда
				Если  СокрЛП(ОткрытыйДБФ.TNCUSER)<>"" ТОгда
					Стр.IDCUSER=ОткрытыйДБФ.IDCUSER;       //ид кассира
					Стр.NCUSER=ОткрытыйДБФ.NCUSER;       //фио кассира
					Стр.TNCUSER=ОткрытыйДБФ.TNCUSER;       //табномер кассира
				Иначе
					Стр.IDCUSER=0;       //ид кассира
					Стр.NCUSER="Кассир";       //фио кассира
					Стр.TNCUSER="кассир";       //табномер кассира
				КонецЕсли;
				
			Иначе // это выручки в новом формате но без данных о кассирах либо пустыми табельными номерами
				Стр.IDCUSER=0;       //ид кассира
				Стр.NCUSER="Кассир";       //фио кассира
				Стр.TNCUSER="кассир";       //табномер кассира
				
			КонецЕсли;
		Иначе
			Стр.IDCUSER=0;       //ид кассира
			Стр.NCUSER="Кассир";       //фио кассира
			Стр.TNCUSER="кассир";       //табномер кассира
			ТребуетсяСообщитьОПроблемеСКолонками=Истина;
			
			
		КонецЕсли;
		//---------------<>---------------------------// GtG // 18.02.2013 20:47:10
		
		Стр.ЧистаяДАта=Дата(ОткрытыйДБФ.DTDOC); //фТипD()); 
		Стр.РознСумма=ОткрытыйДБФ.COSTR*число(ОткрытыйДБФ.QNT);// как Цена*Колво 
		Стр.КЕит=0;       //фТипN(15,2)); 
		Стр.РознНдс=0;       //фТипN(15,2)); 
		Стр.ЗакупСумма=0;       //фТипN(15,2)); 
		Стр.ЗакупНДС=0;       //фТипN(15,2)); 
		Стр.ПартияСС=ПустаяПартия; //Справочники.Партии.ПустаяСсылка();       //ФТипСпр("Партии") );
		Стр.ТоварСС=ПустойТовар; //Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();       //ФТипСпр("АССОРТИМЕНТНЫЙ_ПЛАН"));
		Стр.ДатаВремяЧека=Дата(ОткрытыйДБФ.DTDOC);       //фТипD()); //DTDOC-> Дату
		
		
		//---------------<Тип товара и код партии>---------------------------// GtG // 11.02.2013 16:12:43
		КодПартии= Врег(СокрЛП(ОткрытыйДБФ.CODEPART));
		
		Стр.ч_CODEPART=число(КодПартии);// Для поиска в переоценках по новым партиям аптеки (они там число)
		
		
		//Делаем подмена на случай , если на кассе выбрали не тот тип оплаты ( надо было нал или безнал, а выбрали "нал+сертификат" или "безнал+сертификат")
		Если Стр.PT = 5 и Стр.CERTIF = 0 Тогда
			Стр.PT = 1;
		КонецЕсли;
			
		Если Стр.PT = 6  и Стр.CERTIF = 0 Тогда
			Стр.PT = 3;
		КонецЕсли;			
		//Конец подмена неправильного выбора типа оплаты
		
		
		
		Если Лев(КодПартии,4)="2112" и СтрДлина(КодПартии) = 13 Тогда
			Стр.ТипТовара=2;//Услуга
			//ЗаписьВЛог("   "+"Обнаружена реализация услуги в старом формате"+КодПартии);
			// 1234567890123
			//  12345678 
			КодПартии="2121"+Сред(КодПартии,5,8);//212112345678   --12 символов
			КодПартии=ВычислитьКонтрольнуюСумму(КодПартии);
			//ЗаписьВЛог("   "+"Конвертируем в новый формат ---> "+КодПартии);
		КонецЕсли;
		
		 
		Если Лев(КодПартии,4)="2121" и СтрДлина(КодПартии) = 13 Тогда
			Стр.ТипТовара=2;//Услуга
			//ЗаписьВЛог("   "+"Обнаружена реализация услуги "+КодПартии);	
		ИначеЕсли Стр.PT=11 или	Стр.PT=13 Тогда
			Стр.ТипТовара=3 // Продажа сертификата
		ИначеЕсли Стр.PT=5 или	Стр.PT=6 Тогда
			Стр.ТипТовара=4 // Зачет сертификата
		ИначеЕсли Стр.PT=4  тогда
			Стр.ТипТовара=41 // Данные о Зачтенном сертификате
	
		Иначе	
			Стр.ТипТовара=1;// товар
		КонецЕсли;
		
		КПДо=КодПартии;
		
		КодПартии=СтрЗаменить(КодПартии,"ХХ",""); //русские ХХ
		КодПартии=СтрЗаменить(КодПартии,"XX",""); //english XX
		
		Стр.CODEPART=КодПартии;  // код партии

		//---------------<>---------------------------// GtG // 11.02.2013 16:12:46
		
		
		
		
		
		
		
		
		
		
		//Стр.ТипТовара=0;       //фТипN(10,0)); // 1-Товар, 2-Услуга (числом)
		Стр.ВидПТ=Перечисления.ВидыПоступленияТоваров.ПустаяСсылка(); //ФТипПеречисление("ВидыПоступленияТоваров"));
		Стр.СуммаСоСкидкой= ОткрытыйДБФ.COSTR*число(ОткрытыйДБФ.QNT)-ОткрытыйДБФ.SumSK; // Сумма со скидкой 
		
		
		//Если Ы%Дрыг=0 Тогда
		//	Индикатор.Значение=Ы;
		//КонецЕсли;	
		
	КонецЦикла;
	
	
	Если ТребуетсяСообщитьОПроблемеСКолонками=Истина ТОгда
		СообщитьОПроблемеСКолонками(Склад);
	КонецЕсли;
	
	
	
	
	Индикатор.Значение=Ы;  //100%
    
	//---------------<загоняем данные во временную таблицу>---------------------------// GtG // 11.02.2013 14:01:26
	мЗаписьВЛог(Лог,"Переносим данные из DBF во временную таблицу...");    
	ТЗ.Свернуть("PNUM,SNUM,ZNUM,PT,DCCODE,PSK,NDOC,DTDOC,STATE,CODEPART,ч_CODEPART,CODEEIT,PNDS,COSTR,COSTRSK,SKCLEAR,ZDATE,ZTIME,
					|EKLZ,ZSALE0,ZSALE3,ZRET0,ZRET3,ZSUM,ZZERO,VDEPOT, VCASH,IDCUSER,NCUSER,TNCUSER,ЧистаяДАта,КЕит,ПартияСС,ТоварСС,ДатаВремяЧека,ТипТовара,ВидПТ" 
					, "СуммаСоСкидкой,QNT,  SUMSK, CERTIF,РознСумма,РознНдс,ЗакупСумма,ЗакупНДС");

	Запрос=Новый Запрос();
	Запрос.МенеджерВременныхТаблиц=МО_МенВремТаб;
	Запрос.Текст="ВЫБРАТЬ
	             |	ТЗ.PNUM,
	             |	ТЗ.SNUM,
	             |	ТЗ.ZNUM,
	             |	ТЗ.PT,
	             |	ТЗ.DCCODE,
	             |	ТЗ.PSK,
	             |	ТЗ.NDOC,
	             |	ТЗ.DTDOC,
	             |	ТЗ.STATE,
	             |	ТЗ.CODEPART,
	             |	ТЗ.ч_CODEPART,
	             |	ТЗ.CODEEIT,
	             |	ТЗ.QNT,
	             |	ТЗ.PNDS КАК PNDS,
	             |	ТЗ.COSTR,
	             |	ТЗ.COSTRSK,
	             |	ТЗ.SUMSK,
	             |	ТЗ.SKCLEAR,
	             |	ТЗ.CERTIF,
	             |	ТЗ.ZDATE,
	             |	ТЗ.ZTIME,
	             |	ТЗ.EKLZ,
	             |	ТЗ.ZSALE0,
	             |	ТЗ.ZSALE3,
	             |	ТЗ.ZRET0,
	             |	ТЗ.ZRET3,
	             |	ТЗ.ZSUM,
	             |	ТЗ.ZZERO,
	             |	ТЗ.VDEPOT,
	             |	ТЗ.VCASH,
	             |	ТЗ.IDCUSER,
	             |	ТЗ.NCUSER,
	             |	ТЗ.TNCUSER,
	             |	ТЗ.ЧистаяДАта,
	             |	ТЗ.РознСумма,
	             |	ТЗ.КЕит,
	             |	ТЗ.РознНдс,
	             |	ТЗ.ЗакупСумма,
	             |	ТЗ.ЗакупНДС,
	             |	ТЗ.ПартияСС,
	             |	ТЗ.ТоварСС,
	             |	ТЗ.ДатаВремяЧека,
	             |	ТЗ.ТипТовара,
	             |	ТЗ.ВидПТ КАК ВидПТ,
	             |	ТЗ.СуммаСоСкидкой
	             |ПОМЕСТИТЬ DBF_00
	             |ИЗ
	             |	&ТЗ КАК ТЗ
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	НАЧАЛОПЕРИОДА(DBF_00.ДатаВремяЧека, ДЕНЬ) КАК ДатаСмены,
	             |	СУММА(DBF_00.РознСумма) КАК РознСумма
	             |ПОМЕСТИТЬ ДатыСмен
	             |ИЗ
	             |	DBF_00 КАК DBF_00
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	НАЧАЛОПЕРИОДА(DBF_00.ДатаВремяЧека, ДЕНЬ)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	НАЧАЛОПЕРИОДА(ДатыСмен.ДатаСмены, ДЕНЬ) КАК Датасмены
	             |ПОМЕСТИТЬ ДатыСменСводная
	             |ИЗ
	             |	ДатыСмен КАК ДатыСмен
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияККМ КАК РеализацияККМ
	             |		ПО (ДатыСмен.ДатаСмены = НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ))
	             |			И (РеализацияККМ.Склад = &Склад)
	             |			И (РеализацияККМ.Проведен = ИСТИНА)
	             |			И (РеализацияККМ.Затычка = ЛОЖЬ)
	             |ГДЕ
	             |	ЕСТЬNULL(РеализацияККМ.Сумма, 0) <> ДатыСмен.РознСумма
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТЗ.PNUM,
	             |	ТЗ.SNUM,
	             |	ТЗ.ZNUM,
	             |	ТЗ.PT,
	             |	ТЗ.DCCODE,
	             |	ТЗ.PSK,
	             |	ТЗ.NDOC,
	             |	ТЗ.DTDOC,
	             |	ТЗ.STATE,
	             |	ТЗ.CODEPART,
	             |	ТЗ.ч_CODEPART,
	             |	ТЗ.CODEEIT,
	             |	ТЗ.QNT,
	             |	ТЗ.PNDS КАК PNDS,
	             |	ТЗ.COSTR,
	             |	ТЗ.COSTRSK,
	             |	ТЗ.SUMSK,
	             |	ТЗ.SKCLEAR,
	             |	ТЗ.CERTIF,
	             |	ТЗ.ZDATE,
	             |	ТЗ.ZTIME,
	             |	ТЗ.EKLZ,
	             |	ТЗ.ZSALE0,
	             |	ТЗ.ZSALE3,
	             |	ТЗ.ZRET0,
	             |	ТЗ.ZRET3,
	             |	ТЗ.ZSUM,
	             |	ТЗ.ZZERO,
	             |	ТЗ.VDEPOT,
	             |	ТЗ.VCASH,
	             |	ТЗ.IDCUSER,
	             |	ТЗ.NCUSER,
	             |	ТЗ.TNCUSER,
	             |	ТЗ.ЧистаяДАта,
	             |	ТЗ.РознСумма,
	             |	ТЗ.КЕит,
	             |	ТЗ.РознНдс,
	             |	ТЗ.ЗакупСумма,
	             |	ТЗ.ЗакупНДС,
	             |	ТЗ.ПартияСС,
	             |	ТЗ.ТоварСС,
	             |	ТЗ.ДатаВремяЧека,
	             |	ТЗ.ТипТовара,                            
	             |	ТЗ.ВидПТ КАК ВидПТ,
	             |	ТЗ.СуммаСоСкидкой
	             |ПОМЕСТИТЬ DBF_0
	             |ИЗ
	             |	DBF_00 КАК ТЗ
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыСменСводная КАК ДатыСменСводная
	             |		ПО (ДатыСменСводная.Датасмены = НАЧАЛОПЕРИОДА(ТЗ.ДатаВремяЧека, ДЕНЬ))
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ ДатыСменСводная
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ DBF_00";
				 
		Запрос.УстановитьПараметр("ТЗ",ТЗ);
		Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("НеопознанныйТовар",ТоварЗатычка); 
	Запрос.УстановитьПараметр("ЕИТЗатычка",ЕИТЗатычка);
		 
		Запрос.Выполнить();
		
	//Запрос.Текст = "ВЫБРАТЬ  * ИЗ ДатыСменСводная ; УНИЧТОЖИТЬ ДатыСменСводная";
	//Рез = Запрос.Выполнить().Выгрузить();		
	//Рез.ВыбратьСтроку();
	//Проверим на пустую таблицу
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ DBF_0";
	Рез = Запрос.Выполнить();	
	Если Рез.Пустой() Тогда
		мЗаписьВЛог(Лог,"в файле оказались ранее загруженные данные...");  
		ЗаписатьЛогВФайл(Лог);
		Возврат;
	КонецЕсли;
		
		Если ТолькоЗакрытыеСмены=Истина Тогда
			
			Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НАЧАЛОПЕРИОДА(Dbf_0.ДатаВремяЧека, ДЕНЬ) КАК Дата
			|ПОМЕСТИТЬ НезакрытыеСмены
			|ИЗ
			|	DBF_0 КАК Dbf_0
			|ГДЕ
			|	Dbf_0.ZNUM = 0";
			Запрос.Выполнить();
			
			Запрос.Текст="ВЫБРАТЬ
			             |	DBF_0.PNUM,
			             |	DBF_0.SNUM,
			             |	DBF_0.ZNUM,
			             |	DBF_0.PT,
			             |	DBF_0.DCCODE,
			             |	DBF_0.PSK,
			             |	DBF_0.NDOC,
			             |	DBF_0.DTDOC,
			             |	DBF_0.STATE,
			             |	DBF_0.CODEPART,
			             |	DBF_0.ч_CODEPART,
			             |	DBF_0.CODEEIT,
			             |	DBF_0.QNT,
			             |	DBF_0.PNDS,
			             |	DBF_0.COSTR,
			             |	DBF_0.COSTRSK,
			             |	DBF_0.SUMSK,
			             |	DBF_0.SKCLEAR,
			             |	DBF_0.CERTIF,
			             |	DBF_0.ZDATE,
			             |	DBF_0.ZTIME,
			             |	DBF_0.EKLZ,
			             |	DBF_0.ZSALE0,
			             |	DBF_0.ZSALE3,
			             |	DBF_0.ZRET0,
			             |	DBF_0.ZRET3,
			             |	DBF_0.ZSUM,
			             |	DBF_0.ZZERO,
			             |	DBF_0.VDEPOT,
			             |	DBF_0.VCASH,
			             |	DBF_0.IDCUSER,
			             |	DBF_0.NCUSER,
			             |	DBF_0.TNCUSER,
			             |	DBF_0.ЧистаяДАта,
			             |	DBF_0.РознСумма,
			             |	DBF_0.КЕит,
			             |	DBF_0.РознНдс,
			             |	DBF_0.ЗакупСумма,
			             |	DBF_0.ЗакупНДС,
			             |	DBF_0.ПартияСС,
			             |	DBF_0.ТоварСС,
			             |	DBF_0.ДатаВремяЧека,
			             |	DBF_0.ТипТовара,
			             |	DBF_0.ВидПТ,
			             |	DBF_0.СуммаСоСкидкой
			             |ПОМЕСТИТЬ DBF_0_1
			             |ИЗ
			             |	DBF_0 КАК DBF_0
			             |		ЛЕВОЕ СОЕДИНЕНИЕ НезакрытыеСмены КАК НезакрытыеСмены
			             |		ПО (НАЧАЛОПЕРИОДА(DBF_0.ДатаВремяЧека, ДЕНЬ) = НезакрытыеСмены.Дата)
			             |ГДЕ
			             |	НезакрытыеСмены.Дата ЕСТЬ NULL 
			             |;
			             |Уничтожить DBF_0;
						 |Select * into DBF_0 from DBF_0_1 ИНДЕКСИРОВАТЬ ПО CODEEIT,CODEPART;
						 |
						 |Уничтожить DBF_0_1;
			             |////////////////////////////////////////////////////////////////////////////////
			             |" ;
			
			Запрос.Выполнить();
			
			//---------------<Проверяем пустую выборку>---------------------------// GtG // 22.03.2013 19:42:11
			Запрос.Текст="ВЫБРАТЬ
			             |	КОЛИЧЕСТВО(*) КАК КолвоЗаписей
			             |ИЗ
			             |	DBF_0 КАК DBF_0";
						 
			 Если Запрос.Выполнить().Выгрузить().Получить(0).КолвоЗаписей=0 Тогда
				 мЗаписьВЛог(Лог,"Нет закрытых смен. Грузить нечего...");  
				 ЗаписатьЛогВФайл(Лог);
				 Возврат;
			 КонецЕсли;	
			
			
		КонецЕсли;
		
		
		
		
		
		
 
		Запрос.Текст="ВЫБРАТЬ
	             |	DBF_0.PNUM,
	             |	DBF_0.SNUM,
	             |	DBF_0.ZNUM,
	             |	DBF_0.PT,
	             |	DBF_0.DCCODE,
	             |	DBF_0.PSK,
	             |	DBF_0.NDOC,
	             |	DBF_0.DTDOC,
	             |	DBF_0.STATE,
	             |	DBF_0.CODEPART,
	             |	DBF_0.ч_CODEPART,
	             |	DBF_0.CODEEIT,
	             |	DBF_0.QNT,
	             |	СтавкиНДС.Ссылка КАК PNDS,
	             |	DBF_0.COSTR,
	             |	DBF_0.COSTRSK,
	             |	DBF_0.SUMSK,
	             |	DBF_0.SKCLEAR,
	             |	DBF_0.CERTIF,
	             |	DBF_0.ZDATE,
	             |	DBF_0.ZTIME,
	             |	DBF_0.EKLZ,
	             |	DBF_0.ZSALE0,
	             |	DBF_0.ZSALE3,
	             |	DBF_0.ZRET0,
	             |	DBF_0.ZRET3,
	             |	DBF_0.ZSUM,
	             |	DBF_0.ZZERO,
	             |	DBF_0.VDEPOT,
	             |	DBF_0.VCASH,
	             |	DBF_0.IDCUSER,
	             |	DBF_0.NCUSER,
	             |	DBF_0.TNCUSER,
	             |	DBF_0.ЧистаяДАта,
	             |	DBF_0.РознСумма,
	             |	DBF_0.КЕит,
	             |	DBF_0.РознНдс,
	             |	DBF_0.ЗакупСумма,
	             |	DBF_0.ЗакупНДС,
	             |	Партии.Ссылка КАК ПартияСС,
	             |	DBF_0.ТоварСС,
	             |	DBF_0.ДатаВремяЧека,
	             |	DBF_0.ТипТовара,
	             |	Партии.ВидПоступленияТовара КАК ВидПТ,
	             |	DBF_0.СуммаСоСкидкой,
	             |	ВЫБОР
	             |		КОГДА DBF_0.ТипТовара = 2
	             |			ТОГДА (DBF_0.CODEEIT + 100000)*(-1)
	             |		ИНАЧЕ 0
	             |	КОНЕЦ КАК КодУслуги
	             |ПОМЕСТИТЬ DBF_1
	             |ИЗ
	             |	DBF_0 КАК DBF_0
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партии КАК Партии
	             |		ПО DBF_0.CODEPART = Партии.Наименование
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	             |		ПО DBF_0.PNDS = СтавкиНДС.Ставка
				 |ИНДЕКСИРОВАТЬ ПО CODEEIT
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ DBF_0
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	DBF_1.PNUM,
	             |	DBF_1.SNUM,
	             |	DBF_1.ZNUM,
	             |	DBF_1.PT,
	             |	DBF_1.DCCODE,
	             |	DBF_1.PSK,
	             |	DBF_1.NDOC,
	             |	DBF_1.DTDOC,
	             |	DBF_1.STATE,
	             |	DBF_1.CODEPART,
	             |	DBF_1.ч_CODEPART,
	             |	DBF_1.CODEEIT,
	             |	DBF_1.QNT,
	             |	DBF_1.PNDS,
	             |	DBF_1.COSTR,
	             |	DBF_1.COSTRSK,
	             |	DBF_1.SUMSK,
	             |	DBF_1.SKCLEAR,
	             |	DBF_1.CERTIF,
	             |	DBF_1.ZDATE,
	             |	DBF_1.ZTIME,
	             |	DBF_1.EKLZ,
	             |	DBF_1.ZSALE0,
	             |	DBF_1.ZSALE3,
	             |	DBF_1.ZRET0,
	             |	DBF_1.ZRET3,
	             |	DBF_1.ZSUM,
	             |	DBF_1.ZZERO,
	             |	DBF_1.VDEPOT,
	             |	DBF_1.VCASH,
	             |	DBF_1.IDCUSER,
	             |	DBF_1.NCUSER,
	             |	DBF_1.TNCUSER,
	             |	DBF_1.ЧистаяДАта,
	             |	DBF_1.РознСумма,
	             |	DBF_1.РознНдс,
	             |	DBF_1.ЗакупСумма,
	             |	DBF_1.ЗакупНДС,
	             |	DBF_1.ПартияСС,
	             |	ЕСТЬNULL(ЕИТ.Владелец, &НеопознанныйТовар) КАК ТоварСС,
	             |	ЕСТЬNULL(ЕИТ.Ссылка, &ЕИТЗатычка) КАК ЕИТ,
	             |	ЕСТЬNULL(ЕИТ.К, 1) КАК КЕит,
	             |	DBF_1.ДатаВремяЧека,
	             |	DBF_1.ТипТовара,
	             |	DBF_1.ВидПТ КАК ВидПТ,
	             |	DBF_1.СуммаСоСкидкой,
	             |	Услуги.Ссылка КАК УслугаСС,
	             |	DBF_1.КодУслуги
	             |ПОМЕСТИТЬ DBF
	             |ИЗ
	             |	DBF_1 КАК DBF_1
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕИТ КАК ЕИТ
	             |		ПО DBF_1.CODEEIT = ЕИТ.Код
	             |			И (DBF_1.ТипТовара = 1)
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Услуги КАК Услуги
	             |		ПО (DBF_1.ТипТовара = 2)
	             |			И DBF_1.КодУслуги = Услуги.Код
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ DBF_1";
		
	Запрос.Выполнить(); // загнали дбф во временную ТЗ
	
	//ПросмотрРеззапроса("DBF",Запрос);
	
	//---------------<Импортируем из ДБФ новых сотрудничков>---------------------------// GtG // 11.03.2013 14:48:18
	// По идее справочник хорошо бы драть из файлов, которые кадры генерят для отправки в аптеки,
	// Но в них все сотрудники, в том числе и те, которые за кассой могут и не стоять в принципе, а лишних нам не надо...
	
	Запрос.Текст="ВЫБРАТЬ
	             |	КассирыИзДБФ.NCUSER,
	             |	КассирыИзДБФ.TNCUSER 
	             |ИЗ
	             |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |		DBF.NCUSER КАК NCUSER,
	             |		DBF.TNCUSER КАК TNCUSER
	             |	ИЗ
	             |		DBF КАК DBF) КАК КассирыИзДБФ
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиДляМотивации КАК СотрудникиДляМотивации
	             |		ПО КассирыИзДБФ.TNCUSER = СотрудникиДляМотивации.ТабНомер И СотрудникиДляМотивации.Владелец = &Фирма
	             |ГДЕ
	             |	СотрудникиДляМотивации.Ссылка ЕСТЬ NULL 
	             |	";
				 
	Запрос.УстановитьПараметр("Фирма",Фирма);
		 
	ТаблицаНовыхКассиров=Запрос.Выполнить().Выгрузить();
	
	СоздатьНовыхКассиров(ТаблицаНовыхКассиров,Фирма,Лог);
	
	//---------------<<Бывают случаи, когда ФИО меняется по табельному номеру>---------------------------// GtG // 11.04.2013 17:30:52
	Запрос.Текст="ВЫБРАТЬ
	             |	КассирыИзДБФ.NCUSER,
	             |	КассирыИзДБФ.TNCUSER,
	             |	СотрудникиДляМотивации.Наименование,
	             |	СотрудникиДляМотивации.Ссылка
	             |ИЗ
	             |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |		DBF.NCUSER КАК NCUSER,
	             |		DBF.TNCUSER КАК TNCUSER
	             |	ИЗ
	             |		DBF КАК DBF) КАК КассирыИзДБФ
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиДляМотивации КАК СотрудникиДляМотивации
	             |		ПО КассирыИзДБФ.TNCUSER = СотрудникиДляМотивации.ТабНомер
	             |			И (СотрудникиДляМотивации.Владелец = &Фирма)
	             |ГДЕ
	             |	СотрудникиДляМотивации.Наименование <> КассирыИзДБФ.NCUSER";
				 
	Запрос.УстановитьПараметр("Фирма",Фирма);
		 
	ТаблицаПереименованныхКассиров=Запрос.Выполнить().Выгрузить();
	
	ПереименоватьКассиров(ТаблицаПереименованныхКассиров,Фирма,Лог);
    //---------------<>---------------------------// GtG // 11.04.2013 17:31:03
	
	
	
	
	
	//---------------<Проверяем присутствие в ДБФ  недостающих партий>---------------------------// GtG // 11.02.2013 16:31:40
	мЗаписьВЛог(Лог,"Проверяем присутствие в DBF  недостающих партий...");

	Запрос.УстановитьПараметр("Склад",Склад);
	
	
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	DBF.CODEPART,
				 |	DBF.ч_CODEPART,
	             |	DBF.ТоварСС,
	           //  |	DBF.ЕИТ,
	             |	DBF.PNDS
	             |ПОМЕСТИТЬ ЛевыеПартии
	             |ИЗ
	             |	DBF КАК DBF
	             |ГДЕ
	             |	DBF.ПартияСС ЕСТЬ NULL  и DBF.ТипТовара=1
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЛевыеПартии.CODEPART) КАК КЛП
	             |ИЗ
	             |	ЛевыеПартии КАК ЛевыеПартии";
	
	ПроверкаНаЛевыеПартии=Запрос.Выполнить().Выгрузить();
	Если ПроверкаНаЛевыеПартии.Количество()<>0 Тогда
		КЛП =ПроверкаНаЛевыеПартии.Получить(0).КЛП;
		Если КЛП<>0 Тогда
			мЗаписьВЛог(Лог,"Имеется "+КЛП+" левых партий. Попытаемся найти их в переоценках товара...");
			
			Запрос.Текст="ВЫБРАТЬ
			             |	ЛевыеПартии.CODEPART,
			             |	ЛевыеПартии.ч_CODEPART,
			             |	ЛевыеПартии.ТоварСС КАК ТоварСС,
			             |	ПереоценкаТовар.НоваяПартия КАК НоваяПартия_1С,
			             |	ЛевыеПартии.PNDS КАК PNDS
			             |ПОМЕСТИТЬ ПравыеПартии
			             |ИЗ
			             |	ЛевыеПартии КАК ЛевыеПартии
			             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Переоценка.Товар КАК ПереоценкаТовар
			             |		ПО ЛевыеПартии.ч_CODEPART = ПереоценкаТовар.НоваяПартияАптеки
			             |			И (ПереоценкаТовар.Ссылка.Склад = &Склад)
			             |			И ЛевыеПартии.ТоварСС = ПереоценкаТовар.Товар
			             |
			             |ИНДЕКСИРОВАТЬ ПО
			             |	НоваяПартия_1С,
			             |	ТоварСС,
			             |	PNDS
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	ПравыеПартии.ТоварСС,
			             |	ПравыеПартии.CODEPART,
			             |	ПравыеПартии.PNDS,
			             |	Партии.Ссылка КАК ПартияЗатычка
			             |ПОМЕСТИТЬ Затычки
			             |ИЗ
			             |	ПравыеПартии КАК ПравыеПартии
			             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партии КАК Партии
			             |		ПО ПравыеПартии.ТоварСС = Партии.Владелец
			             |			И (Партии.Наименование = ""-НЕИЗВЕСТНАЯ-"")
			             |			И ПравыеПартии.PNDS = Партии.СтавкаНДС
			             |ГДЕ
			             |	ПравыеПартии.НоваяПартия_1С ЕСТЬ NULL 
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	Затычки.ТоварСС,
			             |	Затычки.CODEPART,
			             |	Затычки.PNDS,
			             |	Затычки.ПартияЗатычка
			             |ИЗ
			             |	Затычки КАК Затычки
			             |ГДЕ
			             |	Затычки.ПартияЗатычка ЕСТЬ NULL ";
				 
			СовсемЛевыеПартии=Запрос.Выполнить().Выгрузить(); // появились в результате того что пероценку сделали в аптеке, но не выгрузили в офис
			
			Если СовсемЛевыеПартии.Количество()<>0 Тогда 
				мЗаписьВЛог(Лог,"Имеется "+СовсемЛевыеПартии.Количество()+" проданных партий по невыгруженным из аптеки в офис  переоценкам " );
				
				//---------------<Тут совсем левые партии>---------------------------// GtG // 11.02.2013 18:55:57
				// нет партии затычки, не нашлось новой партии в переоценках, хоть товар известен и ставка ндс- уже радует
				
				// создаем партии- затычки
				ПараметрыСеанса.Беспредел=Истина; // отключает генерацию штрихкода перед записью партии
				Для Каждого Стр Из СовсемЛевыеПартии Цикл
					ПРТ=Справочники.Партии.СоздатьЭлемент();
					ПРТ.Владелец=Стр.ТоварСС;
					ПРТ.Наименование="-НЕИЗВЕСТНАЯ-";
					ПРТ.СтавкаНДС=Стр.PNDS;
					ПРТ.СтавкаНДСРеализации=Стр.PNDS;
					ПРТ.ВидПоступленияТовара=Перечисления.ВидыПоступленияТоваров.Покупка; // скорее всего это она
					ПРТ.УстановитьНовыйКод();
					ПРТ.Записать();
				КонецЦикла;	
				ПараметрыСеанса.Беспредел=Ложь; // включает обратно генерацию штрихкода перед записью партии

				//---------------<После создания затычек нужно их воткнуть во временную таблицу>---------------------------// GtG // 11.02.2013 19:28:06
				// перевыберем затычки из базы с учетом вновь созданных
				Запрос.Текст="УНИЧТОЖИТЬ Затычки
				             |;
				             |
				             |////////////////////////////////////////////////////////////////////////////////
				             |ВЫБРАТЬ
				             |	ПравыеПартии.ТоварСС КАК ТоварСС,
				             |	ПравыеПартии.CODEPART КАК CODEPART,
				             |	ПравыеПартии.PNDS КАК PNDS,
				             |	Партии.Ссылка КАК ПартияЗатычка
				             |ПОМЕСТИТЬ Затычки
				             |ИЗ
				             |	ПравыеПартии КАК ПравыеПартии
				             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партии КАК Партии
				             |		ПО ПравыеПартии.ТоварСС = Партии.Владелец
				             |			И (Партии.Наименование = ""-НЕИЗВЕСТНАЯ-"")
				             |			И ПравыеПартии.PNDS = Партии.СтавкаНДС
				             |ГДЕ
				             |	ПравыеПартии.НоваяПартия_1С ЕСТЬ NULL 
				             |
				             |ИНДЕКСИРОВАТЬ ПО
				             |	ТоварСС,
				             |	CODEPART,
				             |	PNDS"; 
							 
				Запрос.Выполнить();	
				
				//Запрос.Текст="Выбрать * из Затычки";  Запрос.Выполнить().Выгрузить().ВыбратьСтроку(); // проверка
				
				//---------------<Теперь соберем сводную таблицу для замены/подстановки партий>---------------------------// GtG // 11.02.2013 19:33:37
				// Т.к. юнион не работает собираем в 2 захода. по правым партиям и по затычкам.	 
								
				
									
								
			КонецЕсли;
			мЗаписьВЛог(Лог,"Собираем исходную таблицу для загрузки данных...");
			//---------------<1) Цепляем партии -НЕИЗВЕСТНАЯ->---------------------------// GtG // 11.02.2013 20:26:49
				Запрос.Текст="ВЫБРАТЬ
				             |	DBF.PNUM,
				             |	DBF.SNUM,
				             |	DBF.ZNUM,
				             |	DBF.PT,
				             |	DBF.DCCODE,
				             |	DBF.PSK,
				             |	DBF.NDOC,
				             |	DBF.DTDOC,
				             |	DBF.STATE,
				             |	DBF.CODEPART,
							 |	DBF.ч_CODEPART,
				             |	DBF.CODEEIT,
				             |	DBF.QNT,
				             |	DBF.PNDS,
				             |	DBF.COSTR,
				             |	DBF.COSTRSK,
				             |	DBF.SUMSK,
				             |	DBF.SKCLEAR,
				             |	DBF.CERTIF,
				             |	DBF.ZDATE,
				             |	DBF.ZTIME,
				             |	DBF.EKLZ,
				             |	DBF.ZSALE0,
				             |	DBF.ZSALE3,
				             |	DBF.ZRET0,
				             |	DBF.ZRET3,
				             |	DBF.ZSUM,
				             |	DBF.ZZERO,
				             |	DBF.VDEPOT,
				             |	DBF.VCASH,
				             |	DBF.IDCUSER,
				             |	DBF.NCUSER,
				             |	DBF.TNCUSER,
				             |	DBF.ЧистаяДАта,
				             |	DBF.РознСумма,
				             |	DBF.РознНдс,
				             |	DBF.ЗакупСумма,
				             |	DBF.ЗакупНДС,
				             |	ЕСТЬNULL(DBF.ПартияСС, Затычки.ПартияЗатычка) КАК ПартияСС,
				             |	DBF.ТоварСС,
				             |	DBF.ЕИТ,
				             |	DBF.КЕит,
				             |	DBF.ДатаВремяЧека,
				             |	DBF.ТипТовара,
				             |	ЕСТЬNULL(DBF.ВидПТ, Затычки.ПартияЗатычка.ВидПоступленияТовара) КАК ВидПТ,
				             |	DBF.СуммаСоСкидкой,
							 |  DBF.УслугаСС
				             |ПОМЕСТИТЬ DBF_3
				             |ИЗ
				             |	DBF КАК DBF
				             |		ЛЕВОЕ СОЕДИНЕНИЕ Затычки КАК Затычки
				             |		ПО DBF.CODEPART = Затычки.CODEPART
				             |			И DBF.ТоварСС = Затычки.ТоварСС
				             |			И DBF.PNDS = Затычки.PNDS и DBF.ТипТовара=1";
				    Запрос.Выполнить();

			
			
			//---------------<2) Цепляем партии из переоценок>---------------------------// GtG // 11.02.2013 20:26:33

			
			
			
			Запрос.Текст="УНИЧТОЖИТЬ DBF
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |ВЫБРАТЬ
			             |	DBF.PNUM,
			             |	DBF.SNUM,
			             |	DBF.ZNUM,
			             |	DBF.PT,
			             |	DBF.DCCODE,
			             |	DBF.PSK,
			             |	DBF.NDOC,
			             |	DBF.DTDOC,
			             |	DBF.STATE,
			             |	DBF.CODEPART,
			             |	DBF.ч_CODEPART,
			             |	DBF.CODEEIT,
			             |	DBF.QNT,
			             |	DBF.PNDS,
			             |	DBF.COSTR,
			             |	DBF.COSTRSK,
			             |	DBF.SUMSK,
			             |	DBF.SKCLEAR,
			             |	DBF.CERTIF,
			             |	DBF.ZDATE,
			             |	DBF.ZTIME,
			             |	DBF.EKLZ,
			             |	DBF.ZSALE0,
			             |	DBF.ZSALE3,
			             |	DBF.ZRET0,
			             |	DBF.ZRET3,
			             |	DBF.ZSUM,
			             |	DBF.ZZERO,
			             |	DBF.VDEPOT,
			             |	DBF.VCASH,
			             |	DBF.IDCUSER,
			             |	DBF.NCUSER,
			             |	DBF.TNCUSER,
			             |	DBF.ЧистаяДАта,
			             |	DBF.РознСумма,
			             |	DBF.РознНдс,
			             |	DBF.ЗакупСумма,
			             |	DBF.ЗакупНДС,
			             |	ЕСТЬNULL(DBF.ПартияСС, ПартииИзПереоценок.НоваяПартия_1С) КАК ПартияСС,
			             |	DBF.ТоварСС КАК ТоварСС,
			             |	DBF.ЕИТ,
			             |	DBF.КЕит,
			             |	DBF.ДатаВремяЧека,
			             |	DBF.ТипТовара,
			             |	ЕСТЬNULL(DBF.ВидПТ, ПартииИзПереоценок.нп_ВидПоступленияТовара) КАК ВидПТ,
			             |	DBF.СуммаСоСкидкой,
			             |	DBF.УслугаСС
			             |ПОМЕСТИТЬ DBF
			             |ИЗ
			             |	DBF_3 КАК DBF
			             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			             |			ПравыеПартии.ТоварСС КАК ТоварСС,
			             |			ПравыеПартии.CODEPART КАК CODEPART,
			             |			ПравыеПартии.PNDS КАК PNDS,
			             |			ПравыеПартии.НоваяПартия_1С.ВидПоступленияТовара КАК нп_ВидПоступленияТовара,
			             |			ПравыеПартии.НоваяПартия_1С КАК НоваяПартия_1С
			             |		ИЗ
			             |			ПравыеПартии КАК ПравыеПартии
			             |		ГДЕ
			             |			ПравыеПартии.НоваяПартия_1С ЕСТЬ НЕ NULL ) КАК ПартииИзПереоценок
			             |		ПО DBF.CODEPART = ПартииИзПереоценок.CODEPART
			             |			И DBF.ТоварСС = ПартииИзПереоценок.ТоварСС
			             |			И DBF.PNDS = ПартииИзПереоценок.PNDS
			             |
			             |ИНДЕКСИРОВАТЬ ПО
			             |	ТоварСС,
			             |	ПартияСС
			             |;
			             |
			             |////////////////////////////////////////////////////////////////////////////////
			             |УНИЧТОЖИТЬ DBF_3";
									
			   Запрос.Выполнить();
			 

						
		КонецЕсли;
	КонецЕсли;	
	//---------------<На выходе получим временную таблицу DBF , с партиями-затычками и/или подцепленными через переоценку новыми партиями>---------------------------// GtG // 11.02.2013 20:27:16
	Запрос.Текст="ВЫБРАТЬ
	             |	МИНИМУМ(dbf.ЧистаяДАта) КАК начДата,
	             |	МАКСИМУМ(dbf.ЧистаяДАта) КАК конДата
	             |ИЗ
	             |	dbf КАК dbf";
	Рез = Запрос.Выполнить();			 
	Выборка = Рез.Выбрать();
	Выборка.Следующий();
	НачДата = НачалоДня(Выборка.НачДата);
	КонДата = КонецДня(Выборка.КонДата);
	
	
	
	//---------------<Для вычисления правильной закупки нужно удалить ранее загруженные реализации по загружаемым датам>---------------------------// GtG // 15.02.2013 16:10:40 
	// Проблема в том, чтобы определить какие даты мы будем перевыгружать, а какие нет.
	// Проверим 1) на сходимость суммы розничной между файлом и реализациями ККМ  ,  если все нормально то д.б. равны
	// 			2) на затычки в реализациях ккм                                   ,        - // -       д.б. ложь
	//          3) на наличие в реализациях ккм партий -Неопределенная-           ,        - // -       д.б. все партии определенные
	// Если хоть по одному из этих признаков проходит - реализация ккм должна быть удалена до расчета остатков
	мЗаписьВЛог(Лог,"Удаляем ранее загруженные реализации ККМ...");
	
	
	Запрос.Текст="ВЫБРАТЬ
	             |	НАЧАЛОПЕРИОДА(dbf.ДатаВремяЧека, ДЕНЬ) КАК ДАТА_СМЕНЫ,
	             |	СУММА(dbf.РознСумма) КАК РознСумма
	             |ПОМЕСТИТЬ ДатыСуммы_изФайла
	             |ИЗ
	             |	dbf КАК dbf
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	НАЧАЛОПЕРИОДА(dbf.ДатаВремяЧека, ДЕНЬ)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	РеализацияККМ.Ссылка КАК РеализацияККМ,
	             |	НАЧАЛОПЕРИОДА(РеализацияККМ.Ссылка.Дата, ДЕНЬ) КАК Дата_РеализацииККМ,
	             |	РеализацияККМ.Затычка КАК Затычка,
	             |	РеализацияККМ.Сумма
	             |ПОМЕСТИТЬ Документы
	             |ИЗ
	             |	Документ.РеализацияККМ КАК РеализацияККМ
	             |ГДЕ
	             |	РеализацияККМ.Дата МЕЖДУ &НачДата И &КонДата
	             |	И РеализацияККМ.Проведен = ИСТИНА
	             |	И РеализацияККМ.Склад = &Склад
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ДатыСуммы_изФайла.ДАТА_СМЕНЫ,
	             |	ДатыСуммы_изФайла.РознСумма,
	             |	Документы.РеализацияККМ,
	             |	Документы.Дата_РеализацииККМ,
	             |	ЕСТЬNULL(Документы.Затычка, ЛОЖЬ) КАК Затычка,
	             |	ЕСТЬNULL(Документы.Сумма, 0) КАК Сумма_РеализацииККМ,
	             |	ВЫБОР
	             |		КОГДА ДатыСуммы_изФайла.ДАТА_СМЕНЫ <= ЕСТЬNULL(ТО.ДатаЗакрытия, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	             |				И &Беспредел = ЛОЖЬ
	             |				И ТО.ОтменаЗапрета = ЛОЖЬ
	             |			ТОГДА ЛОЖЬ
	             |		КОГДА ЕСТЬNULL(Документы.Затычка, ЛОЖЬ) = ИСТИНА
	             |				И &Беспредел = ИСТИНА
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ВЫБОР
	             |				КОГДА Документы.РеализацияККМ.Ссылка ЕСТЬ NULL 
	             |					ТОГДА ЛОЖЬ
	             |				ИНАЧЕ ВЫБОР
	             |						КОГДА ДатыСуммы_изФайла.РознСумма <> ЕСТЬNULL(Документы.Сумма, 0)
	             |								ИЛИ ЕСТЬNULL(Документы.Затычка, ЛОЖЬ) = ИСТИНА
	             |							ТОГДА ИСТИНА
	             |						ИНАЧЕ ЛОЖЬ
	             |					КОНЕЦ
	             |			КОНЕЦ
	             |	КОНЕЦ КАК ТребуетсяУдалитьРеализациюККМ,
	             |	ВЫБОР
	             |		КОГДА ДатыСуммы_изФайла.ДАТА_СМЕНЫ <= ЕСТЬNULL(ТО.ДатаЗакрытия, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	             |				И &Беспредел = ЛОЖЬ
	             |				И ТО.ОтменаЗапрета = ЛОЖЬ
	             |			ТОГДА ЛОЖЬ
	             |		КОГДА ЕСТЬNULL(Документы.Затычка, ЛОЖЬ) = ИСТИНА
	             |				И &Беспредел = ИСТИНА
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ВЫБОР
	             |				КОГДА Документы.РеализацияККМ.Ссылка ЕСТЬ NULL 
	             |					ТОГДА ИСТИНА
	             |				ИНАЧЕ ВЫБОР
	             |						КОГДА ДатыСуммы_изФайла.РознСумма <> Документы.Сумма
	             |								ИЛИ Документы.Затычка = ИСТИНА
	             |							ТОГДА ИСТИНА
	             |						ИНАЧЕ ЛОЖЬ
	             |					КОНЕЦ
	             |			КОНЕЦ
	             |	КОНЕЦ КАК ЗагрузитьИзФайла
	             |ПОМЕСТИТЬ УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты
	             |ИЗ
	             |	ДатыСуммы_изФайла КАК ДатыСуммы_изФайла
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документы КАК Документы
	             |		ПО ДатыСуммы_изФайла.ДАТА_СМЕНЫ = Документы.Дата_РеализацииККМ
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОтчеты КАК ТО
	             |		ПО (ТО.Аптека = &Склад)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ Документы
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ ДатыСуммы_изФайла
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.ДАТА_СМЕНЫ,
	             |	УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.РознСумма,
	             |	УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.РеализацияККМ,
	             |	УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.Дата_РеализацииККМ,
	             |	УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.Затычка,
	             |	УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.Сумма_РеализацииККМ,
	             |	УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.ТребуетсяУдалитьРеализациюККМ,
	             |	УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.ЗагрузитьИзФайла
	             |ИЗ
	             |	УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты КАК УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты,
	             |	Константа.ДатаЗапретаРедактирования КАК ДатаЗапретаРедактирования
	             |ГДЕ
	             |	УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.ДАТА_СМЕНЫ > ДатаЗапретаРедактирования.Значение";
				 
		Запрос.УстановитьПараметр("НачДата",НачДата);
		Запрос.УстановитьПараметр("КонДата",КонДата);
		Запрос.УстановитьПараметр("Беспредел",ПараметрыСеанса.Беспредел);
	 ТЗУдаляемыхРеализацийККМ=Запрос.Выполнить().Выгрузить();
	 
	// ТЗУдаляемыхРеализацийККМ.ВыбратьСтроку(); // проверка
	//ПросмотрРеззапроса("УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты",Запрос,Склад);
	// ПросмотрРеззапроса("Документы",Запрос);

	 
	 КоличествоЗагружаемыхДат=0;


	 Для каждого стр из ТЗУдаляемыхРеализацийККМ Цикл
		 
		 Если Стр.ТребуетсяУдалитьРеализациюККМ=Истина Тогда
			 мЗаписьВЛог(Лог,"Удалена старая реализация ККМ "+Стр.РеализацияККМ);
			 Стр.РеализацияККМ.ПолучитьОбъект().Удалить();
		 КонецЕСли;
		 
		 если стр.ЗагрузитьИзФайла=истина тогда
			КоличествоЗагружаемыхДат=КоличествоЗагружаемыхДат+1;
		конецесли;	
		 
	КонецЦикла;
	
	Если  КоличествоЗагружаемыхДат=0 тогда
		мЗаписьВЛог(Лог,"Данных для загрузки нет. Все уже загружено ранее.");
		ЗаписатьЛогВФайл(Лог);
		возврат;
	КонецЕсли;	
	
	Запрос.Текст="ВЫБРАТЬ
	             |	*
	             |ПОМЕСТИТЬ ВРЕМТЗ
	             |ИЗ
	             |	DBF КАК DBF
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты КАК ЗагДаты
	             |		ПО (НАЧАЛОПЕРИОДА(DBF.ДатаВремяЧека, ДЕНЬ) = ЗагДаты.ДАТА_СМЕНЫ)
	             |			И (ЗагДаты.ЗагрузитьИзФайла = ИСТИНА)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ DBF
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	*
	             |ПОМЕСТИТЬ DBF
	             |ИЗ
	             |	ВРЕМТЗ КАК ВРЕМТЗ
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ ВРЕМТЗ";
	
	Запрос.Выполнить();	
	
	
	
	// считавщиеся ранее проданными товары становятся доступны для расчета остатков и закупки.
	
	
	//---------------<Теперь цепляем остатки по партиям на момент времени загрузки>---------------------------// GtG // 11.02.2013 21:18:59
	мЗаписьВЛог(Лог,"Рассчитываем остатки..");
	
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	ЕСТЬNULL(ПартииЖНВЛСОстатки.Партия, DBF.ПартияСС) КАК Партия,
	             |	ЕСТЬNULL(ПартииЖНВЛСОстатки.КолвоОстаток, 0) КАК Количество,
	             |	ЕСТЬNULL(ПартииЖНВЛСОстатки.СуммаЗакупСНДСОстаток, 0) КАК СуммаЗакуп,
	             |	ЕСТЬNULL(ПартииЖНВЛСОстатки.СуммаНДСЗакупОстаток, 0) КАК НДСЗакуп,
	             |	ЕСТЬNULL(ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток, 0) КАК СуммаРозн,
	             |	ЕСТЬNULL(ПартииЖНВЛСОстатки.СуммаРознНДСОстаток, 0) КАК НДСРозн
	             |ПОМЕСТИТЬ ОстаткиПартий
	             |ИЗ
	             |	DBF КАК DBF
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииЖНВЛС.Остатки(, Склад = &Склад) КАК ПартииЖНВЛСОстатки
	             |		ПО DBF.ПартияСС = ПартииЖНВЛСОстатки.Партия
	             |ГДЕ
	             |	ПартииЖНВЛСОстатки.Партия.Наименование <> ""-НЕИЗВЕСТНАЯ-""
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	Партия
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	DBF.PNUM,
	             |	DBF.SNUM,
	             |	DBF.ZNUM,
	             |	DBF.PT,
	             |	DBF.DCCODE,
	             |	DBF.PSK,
	             |	DBF.NDOC,
	             |	DBF.DTDOC,
	             |	DBF.STATE,
	             |	DBF.CODEPART,
	             |	DBF.Ч_CODEPART,
	             |	DBF.CODEEIT,
	             |	DBF.QNT,
	             |	DBF.PNDS,
	             |	DBF.COSTR,
	             |	DBF.COSTRSK,
	             |	DBF.SUMSK,
	             |	DBF.SKCLEAR,
	             |	DBF.CERTIF,
	             |	DBF.ZDATE,
	             |	DBF.ZTIME,
	             |	DBF.EKLZ,
	             |	DBF.ZSALE0,
	             |	DBF.ZSALE3,
	             |	DBF.ZRET0,
	             |	DBF.ZRET3,
	             |	DBF.ZSUM,
	             |	DBF.ZZERO,
	             |	DBF.VDEPOT,
	             |	DBF.VCASH,
	             |	DBF.IDCUSER,
	             |	DBF.NCUSER,
	             |	DBF.TNCUSER,
	             |	DBF.ЧистаяДАта,
	             |	DBF.РознСумма,
	             |	DBF.РознНдс,
	             |	DBF.ЗакупСумма,
	             |	DBF.ЗакупНДС,
	             |	DBF.ПартияСС,
	             |	DBF.ТоварСС,
	             |	DBF.УслугаСС,
	             |	DBF.ЕИТ,
	             |	DBF.КЕит,
	             |	DBF.ДатаВремяЧека,
	             |	DBF.ТипТовара,
	             |	DBF.ВидПТ,
	             |	DBF.СуммаСоСкидкой,
	             |	ЕСТЬNULL(ОстаткиПартий.Количество, 0) КАК Ост_Количество,
	             |	ЕСТЬNULL(ОстаткиПартий.СуммаЗакуп, 0) КАК Ост_СуммаЗакуп,
	             |	ЕСТЬNULL(ОстаткиПартий.НДСЗакуп, 0) КАК Ост_НДСЗакуп,
	             |	ЕСТЬNULL(ОстаткиПартий.СуммаРозн, 0) КАК Ост_СуммаРозн,
	             |	ЕСТЬNULL(ОстаткиПартий.НДСРозн, 0) КАК Ост_НДСРозн,
	             |	DBF.PNDS.Ставка КАК PNDSСтавка
	             |ПОМЕСТИТЬ ПродажиСОстатками
	             |ИЗ
	             |	DBF КАК DBF
	             |		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПартий КАК ОстаткиПартий
	             |		ПО DBF.ПартияСС = ОстаткиПартий.Партия
	             |";
	Запрос.Выполнить();
	
	мЗаписьВЛог(Лог,"Рассчитываем закупку и НДС..");
	//---------------<В цикле рассчитываем закупку и прочие данные для корректного закрытия регистра остатков>---------------------------// GtG // 19.03.2013 19:38:37
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	ПродажиСОстатками.ПартияСС,
	             |	ПродажиСОстатками.Ост_Количество,
				 |  0 КАК СписаноКолво,
	             |	ПродажиСОстатками.Ост_СуммаЗакуп,
	             |	0 КАК СписаноЗакупки,
	             |	ПродажиСОстатками.Ост_НДСЗакуп,
	             |	0 КАК СписаноНДСЗакупки,
	             |	ПродажиСОстатками.Ост_СуммаРозн,
	             |	ПродажиСОстатками.Ост_НДСРозн,
	             |	0 КАК СписаноНДСРозн
	             |ИЗ
	             |	ПродажиСОстатками КАК ПродажиСОстатками
	             |ГДЕ
	             |	ПродажиСОстатками.PT <> 4
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ПродажиСОстатками.PNUM,
	             |	ПродажиСОстатками.SNUM,
	             |	ПродажиСОстатками.ПартияСС КАК ПартияСС,
	             |	ПродажиСОстатками.PNDSСтавка,
	             |	ПродажиСОстатками.КЕит,
	             |	ПродажиСОстатками.NDOC КАК NDOC,
	             |	ПродажиСОстатками.ДатаВремяЧека КАК ДатаВремяЧека,
				 |	ПродажиСОстатками.DTDOC,				 
	             |	ПродажиСОстатками.QNT,
	             |	ПродажиСОстатками.РознСумма,
	             |	0 КАК РознНДС,
	             |	0 КАК ЗакупСумма,
	             |	0 КАК ЗакупНДС
	             |ИЗ
	             |	ПродажиСОстатками КАК ПродажиСОстатками
	             |ГДЕ
	             |	ПродажиСОстатками.PT <> 4
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ПартияСС,
	             |	ДатаВремяЧека,
	             |	NDOC";
				 

				 
	МассивПродаж=Запрос.ВыполнитьПакет();			 
	
	ТабОстатков=МассивПродаж.Получить(0).Выгрузить();
	ТабПродаж=МассивПродаж.Получить(1).Выгрузить();
	
	//П = Справочники.Партии.НайтиПоНаименованию("2400074625396");
	//ЛогРасчета=Новый ТекстовыйДокумент();
	//ЛогРасчета.ДобавитьСтроку("=================== "+ ТекущаяДата()+"   "+Склад+" ================================");
		
	ДЛя Каждого СтрПродаж Из ТабПродаж Цикл
		СтрОстатков=ТабОстатков.Найти(СтрПродаж.ПартияСС,"ПартияСС");
		
		//ЛогРасчета.ДобавитьСтроку("--- "+СтрПродаж.ПартияСС+" ----"+СтрПродаж.PNUM+"  "+СтрПродаж.NDOC+"  "+СтрПродаж.ДатаВремяЧека+"----------------------------------------------------------------------------");
		//ЛогРасчета.ДобавитьСтроку("Данные для расчета: Ост колво="+СтрОстатков.Ост_Количество+"   Ост. НДС розн="+СтрОстатков.Ост_НДСРозн+"   Ост СуммаЗакуп="+СтрОстатков.Ост_СуммаЗакуп+"   Ост НДСЗакуп="+СтрОстатков.Ост_НДСЗакуп);
		//ЛогРасчета.ДобавитьСтроку("                    Продано="+СтрПродаж.QNT+" коэффициент ="+СтрПродаж.КЕит);
		//ЛогРасчета.ДобавитьСтроку("");
		
		
		Если СтрОстатков.Ост_Количество<>0 тогда // Расчет имеет смысл
			
			
			
			ПроданоШтук=СтрПродаж.QNT * СтрПродаж.КЕит;
			
			Если СтрОстатков.Ост_Количество-СтрОстатков.СписаноКолво >ПроданоШтук ТОгда
				ЭтоПоследняяШтука=ЛОжь;
			Иначе	
			     ЭтоПоследняяШтука=Истина;
			КонецЕСли;	 
			СтрОстатков.СписаноКолво=СтрОстатков.СписаноКолво+ПроданоШтук;
			
			
			//ЛогРасчета.ДобавитьСтроку("Розн. НДС:");
			//---------------<РознНДС>---------------------------// GtG // 19.03.2013 20:08:53
			ЕдНДСРозн=СтрОстатков.Ост_НДСРозн/СтрОстатков.Ост_Количество; // значение на 1 ед. остатка
			//ЛогРасчета.ДобавитьСтроку("		НДС на 1 ЕД= "+ЕдНДСРозн);
			
			ПроданоНДСРозн=Окр(ЕдНДСРозн*СтрПродаж.QNT * СтрПродаж.КЕит,2);//сумма по проданному количеству
			//ЛогРасчета.ДобавитьСтроку("		ПроданоНДСРозн= "+ПроданоНДСРозн);
			
			СвободныйОстаток=СтрОстатков.Ост_НДСРозн-СтрОстатков.СписаноНДСРозн;
			//ЛогРасчета.ДобавитьСтроку("		Свободный остаток="+СвободныйОстаток);
			
			Если ПроданоНДСРозн>=СвободныйОстаток или ЭтоПоследняяШтука=Истина Тогда
				СтрПродаж.РознНДС=СвободныйОстаток;
				СтрОстатков.СписаноНДСРозн=СтрОстатков.Ост_НДСРозн;  //в ноль
			Иначе
				СтрПродаж.РознНДС=ПроданоНДСРозн;
				СтрОстатков.СписаноНДСРозн=СтрОстатков.СписаноНДСРозн+ПроданоНДСРозн;
			КонецЕсли;
			//ЛогРасчета.ДобавитьСтроку("		В документ розн НДС="+СтрПродаж.РознНДС);
			
			//---------------<ЗакупСумма>---------------------------// GtG // 19.03.2013 20:08:43
			
			//ЛогРасчета.ДобавитьСтроку("Закупочная сумма:");
			
			ЕдЗакупСумма=СтрОстатков.Ост_СуммаЗакуп/СтрОстатков.Ост_Количество; // значение на 1 ед. остатка
			//ЛогРасчета.ДобавитьСтроку("		Закупка на 1 ЕД= "+ЕдЗакупСумма);
			
			ПроданоЗакупСумма=Окр(ЕдЗакупСумма*СтрПродаж.QNT * СтрПродаж.КЕит,2);//сумма по проданному количеству
			//ЛогРасчета.ДобавитьСтроку("		ПроданоЗакупСумма= "+ПроданоЗакупСумма);
			
			СвободныйОстаток=СтрОстатков.Ост_СуммаЗакуп-СтрОстатков.СписаноЗакупки;
			//ЛогРасчета.ДобавитьСтроку("		Свободный остаток="+СвободныйОстаток);
			
			Если ПроданоЗакупСумма>=СвободныйОстаток или ЭтоПоследняяШтука=Истина Тогда
				СтрПродаж.ЗакупСумма=СвободныйОстаток;
				СтрОстатков.СписаноЗакупки=СтрОстатков.Ост_СуммаЗакуп;
			Иначе
				СтрПродаж.ЗакупСумма=ПроданоЗакупСумма;
				СтрОстатков.СписаноЗакупки=СтрОстатков.СписаноЗакупки+ПроданоЗакупСумма;
			КонецЕсли;
			//ЛогРасчета.ДобавитьСтроку("		В документ ЗакупСумма="+СтрПродаж.ЗакупСумма);
			
			
			//---------------<ЗакупНДС>---------------------------// GtG // 19.03.2013 20:11:01
			//ЛогРасчета.ДобавитьСтроку("Закуп. НДС:");
			
			ЕдНДСЗакуп=СтрОстатков.Ост_НДСЗакуп/СтрОстатков.Ост_Количество; // значение на 1 ед. остатка
			//ЛогРасчета.ДобавитьСтроку("		НДС на 1 ЕД= "+ЕдНДСЗакуп);
			
			ПроданоНДСЗакуп=Окр(ЕдНДСЗакуп*СтрПродаж.QNT * СтрПродаж.КЕит,2);//сумма по проданному количеству
			//ЛогРасчета.ДобавитьСтроку("		ПроданоНДСЗакуп= "+ПроданоНДСЗакуп);
			
			СвободныйОстаток=СтрОстатков.Ост_НДСЗакуп-СтрОстатков.СписаноНДСЗакупки;
			//ЛогРасчета.ДобавитьСтроку("		Свободный остаток="+СвободныйОстаток);
			
			Если ПроданоНДСЗакуп>=СвободныйОстаток  или ЭтоПоследняяШтука=Истина  Тогда
				СтрПродаж.ЗакупНДС=СвободныйОстаток;
				СтрОстатков.СписаноНДСЗакупки=СтрОстатков.Ост_НДСЗакуп;
			Иначе
				СтрПродаж.ЗакупНДС=ПроданоНДСЗакуп;
				СтрОстатков.СписаноНДСЗакупки=СтрОстатков.СписаноНДСЗакупки+ПроданоНДСЗакуп;
			КонецЕсли;
			
			//ЛогРасчета.ДобавитьСтроку("		В документ розн НДС="+СтрПродаж.ЗакупНДС);
		Иначе // нулевое колво - мифические данные, считаем от розничной обратным счетом
			//ЛогРасчета.ДобавитьСтроку("		АААААААААААААА!!!!! Нет остатка по количество!!!!!!!");
			
			СтрПродаж.РознНДС=Окр(СтрПродаж.РознСумма/(100+СтрПродаж.PNDSСтавка)*СтрПродаж.PNDSСтавка,2);
			//ЛогРасчета.ДобавитьСтроку("		В документ розн НДС="+СтрПродаж.РознНДС);
			СтрПродаж.ЗакупСумма=СтрПродаж.РознСумма*0.8;
			//ЛогРасчета.ДобавитьСтроку("		В документ ЗакупСумма="+СтрПродаж.ЗакупСумма);
			СтрПродаж.ЗакупНДС=Окр(СтрПродаж.ЗакупСумма/(100+СтрПродаж.PNDSСтавка)*СтрПродаж.PNDSСтавка,2);
			//ЛогРасчета.ДобавитьСтроку("		В документ розн НДС="+СтрПродаж.ЗакупНДС);
			
			
			
		КонецЕсли;
		
		
	КонецЦикла;	
	//ЛогРасчета.Записать(Константы.КаталогФТП.Получить()+"\OUT\Лог расчета реализации.txt");

	
	
	мЗаписьВЛог(Лог,"Возвращаем  закупку и НДС в поток расчета..");
	Запрос.Текст="ВЫБРАТЬ
	             |	ТабПродаж.PNUM,
	             |	ТабПродаж.SNUM,
	             |	ТабПродаж.ПартияСС КАК ПартияСС,
	             |	ТабПродаж.PNDSСтавка,
	             |	ТабПродаж.КЕит,
	             |	ТабПродаж.NDOC КАК NDOC,
	             |	ТабПродаж.DTDOC КАК DTDOC,
	             |	ТабПродаж.QNT,
	             |	ТабПродаж.РознСумма,
	             |	ТабПродаж.РознНДС,
	             |	ТабПродаж.ЗакупСумма,
	             |	ТабПродаж.ЗакупНДС
	             |ПОМЕСТИТЬ Продажи
	             |ИЗ
	             |	&ТабПродаж КАК ТабПродаж";
    Запрос.УстановитьПараметр("ТабПродаж",ТабПродаж);//возвращаем на сервер обработанные данные
	Запрос.Выполнить();
	
	Запрос.Текст="ВЫБРАТЬ
	                |	ПроСОст_1.PNUM КАК PNUM,
	                |	ПроСОст_1.SNUM,
	                |	ПроСОст_1.ZNUM КАК ZNUM,
	                |	ПроСОст_1.PT,
	                |	ПроСОст_1.DCCODE КАК DCCODE,
	                |	ПроСОст_1.PSK,
	                |	ПроСОст_1.NDOC,
	                |	ПроСОст_1.DTDOC,
	                |	ПроСОст_1.STATE,
	                |	ПроСОст_1.CODEPART,
	                |	ПроСОст_1.Ч_CODEPART,
	                |	ПроСОст_1.CODEEIT,
	                |	ПроСОст_1.QNT,
	                |	ПроСОст_1.PNDS,
	                |	ПроСОст_1.COSTR,
	                |	ПроСОст_1.COSTRSK,
	                |	ПроСОст_1.SUMSK,
	                |	ПроСОст_1.SKCLEAR,
	                |	ПроСОст_1.CERTIF,
	                |	ПроСОст_1.ZDATE,
	                |	ПроСОст_1.ZTIME,
	                |	ПроСОст_1.EKLZ,
	                |	ПроСОст_1.ZSALE0,
	                |	ПроСОст_1.ZSALE3,
	                |	ПроСОст_1.ZRET0,
	                |	ПроСОст_1.ZRET3,
	                |	ПроСОст_1.ZSUM,
	                |	ПроСОст_1.ZZERO,
	                |	ПроСОст_1.VDEPOT,
	                |	ПроСОст_1.VCASH,
	                |	ПроСОст_1.IDCUSER,
	                |	ПроСОст_1.NCUSER,
	                |	ПроСОст_1.TNCUSER,
	                |	ПроСОст_1.ЧистаяДАта,
	                |	ПроСОст_1.РознСумма,
	                |	Продажи.РознНДС,
	                |	Продажи.ЗакупСумма,
	                |	Продажи.ЗакупНДС КАК ЗакупНДС,
	                |	ПроСОст_1.ПартияСС КАК ПартияСС,
	                |	ПроСОст_1.ТоварСС КАК ТоварСС,
	                |	ПроСОст_1.УслугаСС,
	                |	ПроСОст_1.ЕИТ,
	                |	ПроСОст_1.КЕит,
	                |	ПроСОст_1.ДатаВремяЧека,
	                |	ПроСОст_1.ТипТовара КАК ТипТовара,
	                |	ПроСОст_1.ВидПТ,
	                |	ПроСОст_1.СуммаСоСкидкой,
	                |	ПроСОст_1.Ост_Количество,
	                |	ПроСОст_1.Ост_СуммаЗакуп,
	                |	ПроСОст_1.Ост_НДСЗакуп,
	                |	ПроСОст_1.Ост_СуммаРозн,
	                |	ПроСОст_1.Ост_НДСРозн,
	                |	ПроСОст_1.PNDSСтавка,
	                |	НАЧАЛОПЕРИОДА(ПроСОст_1.ДатаВремяЧека, ДЕНЬ) КАК ДАТА_СМЕНЫ
	                |ПОМЕСТИТЬ Выручка_0
	                |ИЗ
	                |	ПродажиСОстатками КАК ПроСОст_1
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Продажи КАК Продажи
	                |		ПО ПроСОст_1.ПартияСС = Продажи.ПартияСС
	                |			И ПроСОст_1.PNDSСтавка = Продажи.PNDSСтавка
	                |			И ПроСОст_1.NDOC = Продажи.NDOC
	                |			И ПроСОст_1.DTDOC = Продажи.DTDOC
	                |			И ПроСОст_1.PNUM = Продажи.PNUM
	                |			И ПроСОст_1.SNUM = Продажи.SNUM
					|//----------------------------------------------------
					|           и ПроСОст_1.КЕит=Продажи.КЕит
					|//----------------------------------------------------
	                |
	                |ИНДЕКСИРОВАТЬ ПО
	                |	ДАТА_СМЕНЫ,
	                |	ПартияСС,
	                |	ТоварСС,
	                |	PNUM,
	                |	DCCODE,
	                |	ТипТовара
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |УНИЧТОЖИТЬ Продажи
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |УНИЧТОЖИТЬ ПродажиСОстатками
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |УНИЧТОЖИТЬ ОстаткиПартий
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |";


	 Запрос.Выполнить();// выгребаем остатки по партиям проданным в аптеке, неизвестные данные зануляем
	 
	 мЗаписьВЛог(Лог,"Получаем доп. информацию о партиях для комиссионного товара..");
	  //---------------<Для продажи комиссионного товара нужны данные по партиям>---------------------------// GtG // 18.03.2013 17:58:42
	 Запрос.Текст="ВЫБРАТЬ
	              |	СписокПартий.ПартияСС,
	              |	ВЫРАЗИТЬ(Партии.ДокументПоступления КАК Документ.ПоступлениеТовара) КАК ДокументПоступления,
	              |	Партии.Поставщик
	              |ПОМЕСТИТЬ ДокументыПоступленияПоПартиям
	              |ИЗ
	              |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |		Выручка_0.ПартияСС КАК ПартияСС
	              |	ИЗ
	              |		Выручка_0 КАК Выручка_0) КАК СписокПартий
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Партии КАК Партии
	              |		ПО СписокПартий.ПартияСС = Партии.Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Выручка_0.PNUM,
	              |	Выручка_0.SNUM,
	              |	Выручка_0.ZNUM,
	              |	Выручка_0.PT,
	              |	Выручка_0.DCCODE,
	              |	Выручка_0.PSK,
	              |	Выручка_0.NDOC,
	              |	Выручка_0.DTDOC,
	              |	Выручка_0.STATE,
	              |	Выручка_0.CODEPART,
	              |	Выручка_0.Ч_CODEPART,
	              |	Выручка_0.CODEEIT,
	              |	Выручка_0.QNT,
	              |	Выручка_0.PNDS,
	              |	Выручка_0.COSTR,
	              |	Выручка_0.COSTRSK,
	              |	Выручка_0.SUMSK,
	              |	Выручка_0.SKCLEAR,
	              |	Выручка_0.CERTIF,
	              |	Выручка_0.ZDATE,
	              |	Выручка_0.ZTIME,
	              |	Выручка_0.EKLZ,
	              |	Выручка_0.ZSALE0,
	              |	Выручка_0.ZSALE3,
	              |	Выручка_0.ZRET0,
	              |	Выручка_0.ZRET3,
	              |	Выручка_0.ZSUM,
	              |	Выручка_0.ZZERO,
	              |	Выручка_0.VDEPOT,
	              |	Выручка_0.VCASH,
	              |	Выручка_0.IDCUSER,
	              |	Выручка_0.NCUSER,
	              |	Выручка_0.TNCUSER,
	              |	Выручка_0.ЧистаяДАта,
	              |	Выручка_0.РознСумма,
	              |	Выручка_0.РознНДС,
	              |	Выручка_0.ЗакупСумма,
	              |	Выручка_0.ЗакупНДС,
	              |	Выручка_0.ПартияСС,
	              |	Выручка_0.ТоварСС,
	              |	Выручка_0.УслугаСС,
	              |	Выручка_0.ЕИТ,
	              |	Выручка_0.КЕит,
	              |	Выручка_0.ДатаВремяЧека,
	              |	Выручка_0.ТипТовара,
	              |	Выручка_0.ВидПТ,
	              |	Выручка_0.СуммаСоСкидкой,
	              |	Выручка_0.Ост_Количество,
	              |	Выручка_0.Ост_СуммаЗакуп,
	              |	Выручка_0.Ост_НДСЗакуп,
	              |	Выручка_0.Ост_СуммаРозн,
	              |	Выручка_0.Ост_НДСРозн,
	              |	Выручка_0.PNDSСтавка,
	              |	Выручка_0.ДАТА_СМЕНЫ,
	              |	ВЫБОР
	              |		КОГДА Выручка_0.ВидПТ = &Комиссия
	              |			ТОГДА ДокументыПоступленияПоПартиям.ДокументПоступления.ВхНомерНакл
	              |		ИНАЧЕ NULL
	              |	КОНЕЦ КАК ВхНомерНакл,
	              |	ВЫБОР
	              |		КОГДА Выручка_0.ВидПТ = &Комиссия
	              |			ТОГДА ДокументыПоступленияПоПартиям.ДокументПоступления.ВхДатаНакл
	              |		ИНАЧЕ NULL
	              |	КОНЕЦ КАК ВхДатаНакл,
	              |	ВЫБОР
	              |		КОГДА Выручка_0.ВидПТ = &Комиссия
	              |			ТОГДА ДокументыПоступленияПоПартиям.Поставщик
	              |		ИНАЧЕ NULL
	              |	КОНЕЦ КАК Поставщик
	              |ПОМЕСТИТЬ Выручка
	              |ИЗ
	              |	Выручка_0 КАК Выручка_0
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПоступленияПоПартиям КАК ДокументыПоступленияПоПартиям
	              |		ПО Выручка_0.ПартияСС = ДокументыПоступленияПоПартиям.ПартияСС
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ ДокументыПоступленияПоПартиям
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ Выручка_0";
	 Запрос.УстановитьПараметр("Комиссия",Перечисления.ВидыПоступленияТоваров.Комиссия);
	 Запрос.Выполнить();
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 //---------------<>---------------------------// GtG // 18.03.2013 18:43:05

				 
	 
	 
	 //---------------<Раздербаниваем основную таблицу на соответствующие Таб. Частям  Документа>---------------------------// GtG // 12.02.2013 14:18:48
	 
	 мЗаписьВЛог(Лог,"Формируем данные для заполнения табличных частей документов...");

	 
	 Запрос.УстановитьПараметр("ПустаяСсылка", Документы.РеализацияККМ.ПустаяСсылка());
	 
	 Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 10000000
	              |	Выручка.ТипТовара,
	              |	Выручка.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	              |	Выручка.ТоварСС КАК Товар,
	              |	Выручка.ЕИТ КАК ЕИТ,
	              |	Выручка.КЕит КАК К,
	              |	Выручка.PNDS КАК СтавкаНДС,
	              |	Выручка.ПартияСС КАК Партия,
	              |	СУММА(Выручка.QNT) КАК Количество,
	              |	СУММА(Выручка.РознСумма) КАК Сумма,
	              |	СУММА(Выручка.РознНДС) КАК СуммаНДС,
	              |	СУММА(Выручка.ЗакупСумма) КАК СуммаЗакуп,
	              |	СУММА(Выручка.ЗакупНДС) КАК НДСЗакуп
	              |ПОМЕСТИТЬ тчТовар
	              |ИЗ
	              |	Выручка КАК Выручка
	              |ГДЕ
	              |	Выручка.ТипТовара = 1
	              |	И (Выручка.PT = 1
	              |			ИЛИ Выручка.PT = 3
	              |			ИЛИ Выручка.PT = 5
	              |			ИЛИ Выручка.PT = 6)
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	Выручка.PNDS,
	              |	Выручка.ПартияСС,
	              |	Выручка.ТоварСС,
	              |	Выручка.ЕИТ,
	              |	Выручка.КЕит,
	              |	Выручка.ДАТА_СМЕНЫ,
	              |	Выручка.ТипТовара
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	ДАТА_СМЕНЫ";
				  
	Запрос.Выполнить();			  
				  
	Запрос.Текст="ВЫБРАТЬ
	             |	Выручка.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	             |	Выручка.DCCODE КАК Карта,
	             |	СУММА(Выручка.QNT) КАК Количество,
	             |	СУММА(Выручка.SUMSK) КАК СуммаСкидки,
	             |	Выручка.ПартияСС КАК Партия,
	             |	Выручка.ТоварСС КАК Товар,
	             |	Выручка.ЕИТ КАК Еит,
	             |	Выручка.КЕит КАК К,
	             |	Выручка.ТипТовара,
	             |	СУММА(Выручка.СуммаСоСкидкой) КАК СуммаСоСкидкой
	             |ПОМЕСТИТЬ Дисконт
	             |ИЗ
	             |	Выручка КАК Выручка
	             |ГДЕ
	             |	Выручка.DCCODE <> """"
	             |	И Выручка.ТипТовара = 1
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	Выручка.DCCODE,
	             |	Выручка.ТипТовара,
	             |	Выручка.ДАТА_СМЕНЫ,
	             |	Выручка.КЕит,
	             |	Выручка.ЕИТ,
	             |	Выручка.ТоварСС,
	             |	Выручка.ПартияСС
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	ДАТА_СМЕНЫ";
	Запрос.Выполнить();
	
	 //   		  
	 
	 //ПросмотрРеззапроса("Выручка",Запрос);//ХХХХ
	 
		 
	 
	 
	 
	 // !!!  в качестве номера ЗетОчет используем номер смены SNUM. Это не совсем верно, но зато удобно для разбора полетов с аптеками.
	 Запрос.Текст="ВЫБРАТЬ
	              |	Выручка.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	              |	Выручка.PNUM КАК Касса,
	              |	Выручка.SNUM КАК ЗетОчет,
	              |	ВЫБОР
	              |		КОГДА Выручка.PT = 1
	              |				ИЛИ Выручка.PT = 5
	              |			ТОГДА &Наличными
	              |		КОГДА Выручка.PT = 3
	              |				ИЛИ Выручка.PT = 6
	              |			ТОГДА &Кредиткой
	              |	КОНЕЦ КАК ТипОплаты,
	              |	Выручка.PNDS КАК СтавкаНДС,
	              |	СУММА(Выручка.SUMSK) КАК СуммаСкидки,
	              |	СУММА(Выручка.РознСумма) КАК СуммаБезСкидки,
	              |	СУММА(Выручка.РознНДС) КАК СуммаНДСБезСкидки,
	              |	СУММА(Выручка.ЗакупСумма) КАК ЗакупочнаяСНДС,
	              |	СУММА(Выручка.ЗакупНДС) КАК НДСЗакуп,
	              |	Выручка.ВидПТ КАК ВидПоступленияТовара,
	              |	СУММА(Выручка.СуммаСоСкидкой) КАК СуммаСоСкидкой,
	              |	СУММА(ВЫРАЗИТЬ(Выручка.СуммаСоСкидкой / (100 + Выручка.PNDSСтавка) * Выручка.PNDSСтавка КАК ЧИСЛО(15, 2))) КАК СуммаНДДСоСкидкой,
	              |	ЕСТЬNULL(Выручка.ПартияСС.ТипНалогообложенияПоступленияТоваров.ссылка, &ТНО_ОРН) КАК ТипНалогообложенияПТ,
	              |	Выручка.ВхНомерНакл,
	              |	Выручка.ВхДатаНакл,
	              |	Выручка.Поставщик
	              |ПОМЕСТИТЬ Бухгалтерия_0
	              |ИЗ
	              |	Выручка КАК Выручка
	              |ГДЕ
	              |	Выручка.ТипТовара = 1
	              |	И Выручка.PT <> 11
	              |	И Выручка.PT <> 13
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	Выручка.ДАТА_СМЕНЫ,
	              |	Выручка.PNUM,
	              |	Выручка.sNUM,
	              |	Выручка.PNDS,
	              |	Выручка.ВидПТ,
	              |	Выручка.ВхНомерНакл,
	              |	Выручка.ВхДатаНакл,
	              |	Выручка.Поставщик,
	              |	ВЫБОР
	              |		КОГДА Выручка.PT = 1
	              |				ИЛИ Выручка.PT = 5
	              |			ТОГДА &Наличными
	              |		КОГДА Выручка.PT = 3
	              |				ИЛИ Выручка.PT = 6
	              |			ТОГДА &Кредиткой
	              |	КОНЕЦ,
	              |	ЕСТЬNULL(Выручка.ПартияСС.ТипНалогообложенияПоступленияТоваров.ссылка, &ТНО_ОРН)
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	ДАТА_СМЕНЫ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Кассы.Владелец,
	              |	Кассы.ЗаводскойНомер,
	              |	МИНИМУМ(Кассы.Код) КАК Код
	              |ПОМЕСТИТЬ КассыПоСкладу_минКоды
	              |ИЗ
	              |	Справочник.Кассы КАК Кассы
	              |ГДЕ
	              |	Кассы.Владелец = &Склад
	              |	И Кассы.ПометкаУдаления = ЛОЖЬ
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	Кассы.Владелец,
	              |	Кассы.ЗаводскойНомер
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Кассы.Ссылка,
	              |	Кассы.ВерсияДанных,
	              |	Кассы.ПометкаУдаления,
	              |	Кассы.Предопределенный,
	              |	Кассы.Владелец,
	              |	Кассы.Код,
	              |	Кассы.Наименование,
	              |	Кассы.ЗаводскойНомер,
	              |	Кассы.Модель,
	              |	Кассы.ДатаАктивизацииЭКЛЗ,
	              |	Кассы.ЦТО
	              |ПОМЕСТИТЬ Кассы_УникальныеЗаводскиеНомера
	              |ИЗ
	              |	Справочник.Кассы КАК Кассы
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КассыПоСкладу_минКоды КАК КассыПоСкладу_минКоды
	              |		ПО Кассы.Владелец = КассыПоСкладу_минКоды.Владелец
	              |			И Кассы.ЗаводскойНомер = КассыПоСкладу_минКоды.ЗаводскойНомер
	              |			И Кассы.Код = КассыПоСкладу_минКоды.Код
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Бухгалтерия_0.ДАТА_СМЕНЫ,
	              |	Кассы.Ссылка КАК Касса,
	              |	Бухгалтерия_0.ЗетОчет,
	              |	Бухгалтерия_0.ТипОплаты,
	              |	Бухгалтерия_0.СтавкаНДС,
	              |	Бухгалтерия_0.СуммаСкидки,
	              |	Бухгалтерия_0.СуммаБезСкидки,
	              |	Бухгалтерия_0.СуммаНДСБезСкидки,
	              |	Бухгалтерия_0.ЗакупочнаяСНДС,
	              |	Бухгалтерия_0.НДСЗакуп,
	              |	Бухгалтерия_0.ВидПоступленияТовара,
	              |	Бухгалтерия_0.СуммаСоСкидкой,
	              |	Бухгалтерия_0.СуммаНДДСоСкидкой,
	              |	Бухгалтерия_0.ТипНалогообложенияПТ,
	              |	Бухгалтерия_0.ВхНомерНакл КАК ВхНомерНакл,
	              |	Бухгалтерия_0.ВхДатаНакл КАК ВхДатаНакл,
	              |	Бухгалтерия_0.Поставщик КАК Поставщик
	              |ПОМЕСТИТЬ Бухгалтерия
	              |ИЗ
	              |	Бухгалтерия_0 КАК Бухгалтерия_0
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Кассы_УникальныеЗаводскиеНомера КАК Кассы
	              |		ПО Бухгалтерия_0.Касса = Кассы.ЗаводскойНомер
	              |			И (Кассы.Владелец = &Склад)
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ Бухгалтерия_0"  ;
	Запрос.УстановитьПараметр("Наличными",Перечисления.ТипыОплаты.Наличными);
	Запрос.УстановитьПараметр("Кредиткой",Перечисления.ТипыОплаты.Кредиткой);
	Запрос.УстановитьПараметр("ТНО_ОРН",ТНО_ОРН);
	Запрос.Выполнить(); 
	
	//---------------<Данные для сертификатов>---------------------------// GtG // 12.03.2013 19:40:29
	 	 //
	 Запрос.Текст="ВЫБРАТЬ
	              |	Выручка.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	              |	ВЫБОР
	              |		КОГДА Выручка.PT = 11
	              |			ТОГДА &ПродажаСертификата_нал
	              |		КОГДА Выручка.PT = 13
	              |			ТОГДА &ПродажаСертификата_Безнал
	              |		ИНАЧЕ NULL
	              |	КОНЕЦ КАК ОперацияССертификатом,
	              |	ВЫБОР
	              |		КОГДА Выручка.PT = 11
	              |			ТОГДА &Наличными
	              |		КОГДА Выручка.PT = 13
	              |			ТОГДА &Кредиткой
	              |		ИНАЧЕ NULL
	              |	КОНЕЦ КАК ТипОплаты,
	              |	Кассы.Ссылка КАК Касса,
	              |	Выручка.sNUM КАК ЗетОчет,
	              |	Выручка.CODEPART КАК НомерСертификата,
	              |	0 КАК СуммаВнереализационныхДоходов,
	              |	Выручка.PNDS КАК СтавкаНДС,
	              |	Выручка.COSTR КАК Номинал,
	              |	СУММА(Выручка.COSTR) КАК Сумма
	              |ПОМЕСТИТЬ Сертификаты_продажа
	              |ИЗ
	              |	Выручка КАК Выручка
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Кассы_УникальныеЗаводскиеНомера КАК Кассы
	              |		ПО Выручка.PNUM = Кассы.ЗаводскойНомер
	              |			И (Кассы.Владелец = &Склад)
	              |ГДЕ
	              |	Выручка.ТипТовара = 3
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	Выручка.ДАТА_СМЕНЫ,
	              |	ВЫБОР
	              |		КОГДА Выручка.PT = 11
	              |			ТОГДА &ПродажаСертификата_нал
	              |		КОГДА Выручка.PT = 13
	              |			ТОГДА &ПродажаСертификата_Безнал
	              |		ИНАЧЕ NULL
	              |	КОНЕЦ,
	              |	ВЫБОР
	              |		КОГДА Выручка.PT = 11
	              |			ТОГДА &Наличными
	              |		КОГДА Выручка.PT = 13
	              |			ТОГДА &Кредиткой
	              |		ИНАЧЕ NULL
	              |	КОНЕЦ,
	              |	Кассы.Ссылка,
	              |	Выручка.sNUM,
	              |	Выручка.CODEPART,
	              |	Выручка.PNDS,
	              |	Выручка.COSTR" ;
		Запрос.УстановитьПараметр("ПродажаСертификата_Нал",Перечисления.ВидыОперацийССертификатами.ПродажаЗаНал);			  
		Запрос.УстановитьПараметр("ПродажаСертификата_БезНал",Перечисления.ВидыОперацийССертификатами.ПродажаЗаБезнал);
		Запрос.УстановитьПараметр("ЗачетСертификата",Перечисления.ВидыОперацийССертификатами.Зачет);
	 Запрос.Выполнить();
	 //---------------<Данные по Зачету сертификатов>---------------------------// GtG // 15.03.2013 15:46:06
	 // отдельным запросом, потом объединим вместе с продажей при добавлении в документ
	 Запрос.Текст="ВЫБРАТЬ
	              |	Выручка.ДАТА_СМЕНЫ,
	              |	Выручка.PNUM,
	              |	Выручка.SNUM,
	              |	Выручка.ZNUM,
	              |	Выручка.PNDS,
	              |	Выручка.PNDSСтавка,
	              |	Выручка.NDOC,
	              |	Выручка.PT КАК ТипОплаты,
	              |	СУММА(Выручка.CERTIF) КАК РознСумма_поставке
	              |ПОМЕСТИТЬ Товар_ПоСтавке
	              |ИЗ
	              |	Выручка КАК Выручка
	              |ГДЕ
	              |	(Выручка.PT = 5
	              |			ИЛИ Выручка.PT = 6)
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	Выручка.PNUM,
	              |	Выручка.SNUM,
	              |	Выручка.ZNUM,
	              |	Выручка.ДАТА_СМЕНЫ,
	              |	Выручка.NDOC,
	              |	Выручка.PNDS,
	              |	Выручка.PT,
	              |	Выручка.PNDSСтавка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Товар_ПоСтавке.ДАТА_СМЕНЫ,
	              |	Товар_ПоСтавке.PNUM,
	              |	Товар_ПоСтавке.SNUM,
	              |	Товар_ПоСтавке.ZNUM,
	              |	Товар_ПоСтавке.NDOC,
	              |	Товар_ПоСтавке.ТипОплаты,
	              |	СУММА(Товар_ПоСтавке.РознСумма_поставке) КАК РознСумма_ПоВсемСтавкам
	              |ПОМЕСТИТЬ Товар_ПоВсемСтавкамНДС
	              |ИЗ
	              |	Товар_ПоСтавке КАК Товар_ПоСтавке
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	Товар_ПоСтавке.ДАТА_СМЕНЫ,
	              |	Товар_ПоСтавке.PNUM,
	              |	Товар_ПоСтавке.SNUM,
	              |	Товар_ПоСтавке.ZNUM,
	              |	Товар_ПоСтавке.ТипОплаты,
	              |	Товар_ПоСтавке.NDOC
	              |;";
		Запрос.Выполнить();		  
				  
	              
	    Запрос.Текст="ВЫБРАТЬ
	              |	Товар_ПоСтавке.ДАТА_СМЕНЫ,
	              |	Товар_ПоСтавке.PNUM,
	              |	Товар_ПоСтавке.SNUM,
	              |	Товар_ПоСтавке.ZNUM,
	              |	Товар_ПоСтавке.PNDS,
	              |	Товар_ПоСтавке.PNDSСтавка,
	              |	Товар_ПоСтавке.NDOC,
	              |	Товар_ПоСтавке.РознСумма_поставке / Товар_ПоВсемСтавкамНДС.РознСумма_ПоВсемСтавкам КАК ВесовойКоэффСтавкиНДС
	              |ПОМЕСТИТЬ Веса
	              |ИЗ
	              |	Товар_ПоСтавке КАК Товар_ПоСтавке
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Товар_ПоВсемСтавкамНДС КАК Товар_ПоВсемСтавкамНДС
	              |		ПО Товар_ПоСтавке.ДАТА_СМЕНЫ = Товар_ПоВсемСтавкамНДС.ДАТА_СМЕНЫ
	              |			И Товар_ПоСтавке.PNUM = Товар_ПоВсемСтавкамНДС.PNUM
	              |			И Товар_ПоСтавке.SNUM = Товар_ПоВсемСтавкамНДС.SNUM
	              |			И Товар_ПоСтавке.ZNUM = Товар_ПоВсемСтавкамНДС.ZNUM
	              |			И Товар_ПоСтавке.NDOC = Товар_ПоВсемСтавкамНДС.NDOC
	              |;";
		Запрос.Выполнить();
		
	     Запрос.Текст="ВЫБРАТЬ
	              |	Выручка.ДАТА_СМЕНЫ,
	              |	Выручка.PNUM,
	              |	Выручка.SNUM,
	              |	Выручка.ZNUM,
	              |	Выручка.NDOC,
	              |	Выручка.CODEPART,
	              |	Выручка.COSTR КАК Номинал,
	              |	Веса.PNDS,
	              |	Веса.PNDSСтавка,
	              |	Выручка.COSTR * Веса.ВесовойКоэффСтавкиНДС КАК НомНаСтавкуНДС
	              |ПОМЕСТИТЬ НоминалНаСтавкуНДС
	              |ИЗ
	              |	Выручка КАК Выручка
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Веса КАК Веса
	              |		ПО Выручка.PNUM = Веса.PNUM
	              |			И Выручка.ДАТА_СМЕНЫ = Веса.ДАТА_СМЕНЫ
	              |			И Выручка.PNUM = Веса.PNUM
	              |			И Выручка.SNUM = Веса.SNUM
	              |			И Выручка.ZNUM = Веса.ZNUM
	              |			И Выручка.NDOC = Веса.NDOC
	              |ГДЕ
	              |	Выручка.PT = 4
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НоминалНаСтавкуНДС.ДАТА_СМЕНЫ,
	              |	НоминалНаСтавкуНДС.PNUM,
	              |	НоминалНаСтавкуНДС.SNUM,
	              |	НоминалНаСтавкуНДС.ZNUM,
	              |	НоминалНаСтавкуНДС.NDOC,
	              |	НоминалНаСтавкуНДС.PNDS,
	              |	НоминалНаСтавкуНДС.PNDSСтавка,
	              |	СУММА(НоминалНаСтавкуНДС.НомНаСтавкуНДС) КАК НомНаСтавкуНДС
	              |ПОМЕСТИТЬ СуммаНоминаловПоСтавке
	              |ИЗ
	              |	НоминалНаСтавкуНДС КАК НоминалНаСтавкуНДС
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	НоминалНаСтавкуНДС.ДАТА_СМЕНЫ,
	              |	НоминалНаСтавкуНДС.PNUM,
	              |	НоминалНаСтавкуНДС.SNUM,
	              |	НоминалНаСтавкуНДС.ZNUM,
	              |	НоминалНаСтавкуНДС.NDOC,
	              |	НоминалНаСтавкуНДС.PNDS,
	              |	НоминалНаСтавкуНДС.PNDSСтавка
	              |;";
		Запрос.Выполнить();		  
				  
	              
	    Запрос.Текст=" ВЫБРАТЬ
	              |	НоминалНаСтавкуНДС.ДАТА_СМЕНЫ,
	              |	НоминалНаСтавкуНДС.PNUM,
	              |	НоминалНаСтавкуНДС.SNUM,
	              |	НоминалНаСтавкуНДС.ZNUM,
	              |	НоминалНаСтавкуНДС.NDOC,
	              |	НоминалНаСтавкуНДС.CODEPART,
	              |	НоминалНаСтавкуНДС.Номинал,
	              |	НоминалНаСтавкуНДС.PNDS,
	              |	НоминалНаСтавкуНДС.PNDSСтавка,
	              |	Товар_ПоСтавке.ТипОплаты,
	              |	ВЫРАЗИТЬ(Товар_ПоСтавке.РознСумма_поставке / СуммаНоминаловПоСтавке.НомНаСтавкуНДС * НоминалНаСтавкуНДС.НомНаСтавкуНДС КАК ЧИСЛО(15, 2)) КАК ЗачетПоСтавке,
	              |	ВЫРАЗИТЬ(НоминалНаСтавкуНДС.НомНаСтавкуНДС - Товар_ПоСтавке.РознСумма_поставке / СуммаНоминаловПоСтавке.НомНаСтавкуНДС * НоминалНаСтавкуНДС.НомНаСтавкуНДС КАК ЧИСЛО(15, 2)) КАК СуммаВнереализационныхДоходов
	              |ПОМЕСТИТЬ ТаблицаЗачетаСертификатов
	              |ИЗ
	              |	НоминалНаСтавкуНДС КАК НоминалНаСтавкуНДС
	              |		ЛЕВОЕ СОЕДИНЕНИЕ СуммаНоминаловПоСтавке КАК СуммаНоминаловПоСтавке
	              |		ПО НоминалНаСтавкуНДС.ДАТА_СМЕНЫ = СуммаНоминаловПоСтавке.ДАТА_СМЕНЫ
	              |			И НоминалНаСтавкуНДС.PNUM = СуммаНоминаловПоСтавке.PNUM
	              |			И НоминалНаСтавкуНДС.SNUM = СуммаНоминаловПоСтавке.SNUM
	              |			И НоминалНаСтавкуНДС.ZNUM = СуммаНоминаловПоСтавке.ZNUM
	              |			И НоминалНаСтавкуНДС.NDOC = СуммаНоминаловПоСтавке.NDOC
	              |			И НоминалНаСтавкуНДС.PNDSСтавка = СуммаНоминаловПоСтавке.PNDSСтавка
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Товар_ПоСтавке КАК Товар_ПоСтавке
	              |		ПО НоминалНаСтавкуНДС.ДАТА_СМЕНЫ = Товар_ПоСтавке.ДАТА_СМЕНЫ
	              |			И НоминалНаСтавкуНДС.PNUM = Товар_ПоСтавке.PNUM
	              |			И НоминалНаСтавкуНДС.SNUM = Товар_ПоСтавке.SNUM
	              |			И НоминалНаСтавкуНДС.ZNUM = Товар_ПоСтавке.ZNUM
	              |			И НоминалНаСтавкуНДС.NDOC = Товар_ПоСтавке.NDOC
	              |			И НоминалНаСтавкуНДС.PNDSСтавка = Товар_ПоСтавке.PNDSСтавка
	              |;";
		Запрос.Выполнить();
		
	    Запрос.Текст="ВЫБРАТЬ
	              |	ТаблицаЗачетаСертификатов.CODEPART КАК НомерСертификата,
	              |	ТаблицаЗачетаСертификатов.Номинал КАК Номинал,
	              |	&ЗачетСертификата КАК ОперацияССертификатом,
	              |	СУММА(ТаблицаЗачетаСертификатов.ЗачетПоСтавке) КАК Сумма,
	              |	ТаблицаЗачетаСертификатов.PNDS КАК СтавкаНДС,
	              |	СУММА(ВЫБОР
	              |			КОГДА ТаблицаЗачетаСертификатов.СуммаВнереализационныхДоходов < 0
	              |				ТОГДА 0
	              |			ИНАЧЕ ТаблицаЗачетаСертификатов.СуммаВнереализационныхДоходов
	              |		КОНЕЦ) КАК СуммаВнереализационныхДоходов,
	              |	ВЫБОР
	              |		КОГДА ТаблицаЗачетаСертификатов.ТипОплаты = 5
	              |			ТОГДА &Наличными
	              |		КОГДА ТаблицаЗачетаСертификатов.ТипОплаты = 6
	              |			ТОГДА &Кредиткой
	              |	КОНЕЦ КАК ТипОплаты,
	              |	Кассы.Ссылка КАК Касса,
	              |	ТаблицаЗачетаСертификатов.SNUM КАК ЗетОчет,
	              |	ТаблицаЗачетаСертификатов.ДАТА_СМЕНЫ
	              |ПОМЕСТИТЬ ЗачетСертификатов
	              |ИЗ
	              |	ТаблицаЗачетаСертификатов КАК ТаблицаЗачетаСертификатов
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Кассы_УникальныеЗаводскиеНомера КАК Кассы
	              |		ПО ТаблицаЗачетаСертификатов.PNUM = Кассы.ЗаводскойНомер
	              |			И (Кассы.Владелец = &Склад)
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ТаблицаЗачетаСертификатов.ДАТА_СМЕНЫ,
	              |	Кассы.Ссылка,
	              |	ТаблицаЗачетаСертификатов.SNUM,
	              |	ТаблицаЗачетаСертификатов.CODEPART,
	              |	ТаблицаЗачетаСертификатов.Номинал,
	              |	ТаблицаЗачетаСертификатов.PNDS,
	              |	ВЫБОР
	              |		КОГДА ТаблицаЗачетаСертификатов.ТипОплаты = 5
	              |			ТОГДА &Наличными
	              |		КОГДА ТаблицаЗачетаСертификатов.ТипОплаты = 6
	              |			ТОГДА &Кредиткой
	              |	КОНЕЦ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ Товар_ПоСтавке
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ Товар_ПоВсемСтавкамНДС
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ Веса
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ НоминалНаСтавкуНДС
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ ТаблицаЗачетаСертификатов
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ СуммаНоминаловПоСтавке";
	 Запрос.Выполнить();
	 
	 // Собираем в одну таблицу данные по продаже и зачету сертификатов
	 
	 Запрос.Текст="ВЫБРАТЬ
	              |	ДанныеПоСертификатам.НомерСертификата,
	              |	ДанныеПоСертификатам.Номинал,
	              |	ДанныеПоСертификатам.ОперацияССертификатом,
	              |	ДанныеПоСертификатам.Сумма,
	              |	ДанныеПоСертификатам.СтавкаНДС,
	              |	ДанныеПоСертификатам.СуммаВнереализационныхДоходов,
	              |	ДанныеПоСертификатам.ТипОплаты,
	              |	ДанныеПоСертификатам.Касса,
	              |	ДанныеПоСертификатам.ЗетОчет,
	              |	ДанныеПоСертификатам.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ
	              |ПОМЕСТИТЬ Сертификаты
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ЗачетСертификатов.НомерСертификата КАК НомерСертификата,
	              |		ЗачетСертификатов.Номинал КАК Номинал,
	              |		ЗачетСертификатов.ОперацияССертификатом КАК ОперацияССертификатом,
	              |		ЗачетСертификатов.Сумма КАК Сумма,
	              |		ЗачетСертификатов.СтавкаНДС КАК СтавкаНДС,
	              |		ЗачетСертификатов.СуммаВнереализационныхДоходов КАК СуммаВнереализационныхДоходов,
	              |		ЗачетСертификатов.ТипОплаты КАК ТипОплаты,
	              |		ЗачетСертификатов.Касса КАК Касса,
	              |		ЗачетСертификатов.ЗетОчет КАК ЗетОчет,
	              |		ЗачетСертификатов.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ
	              |	ИЗ
	              |		ЗачетСертификатов КАК ЗачетСертификатов
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		Сертификаты_продажа.НомерСертификата,
	              |		Сертификаты_продажа.Номинал,
	              |		Сертификаты_продажа.ОперацияССертификатом,
	              |		Сертификаты_продажа.Сумма,
	              |		Сертификаты_продажа.СтавкаНДС,
	              |		Сертификаты_продажа.СуммаВнереализационныхДоходов,
	              |		Сертификаты_продажа.ТипОплаты,
	              |		Сертификаты_продажа.Касса,
	              |		Сертификаты_продажа.ЗетОчет,
	              |		Сертификаты_продажа.ДАТА_СМЕНЫ
	              |	ИЗ
	              |		Сертификаты_продажа КАК Сертификаты_продажа) КАК ДанныеПоСертификатам
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	ДАТА_СМЕНЫ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ ЗачетСертификатов
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ Сертификаты_продажа";
	 
	   Запрос.Выполнить();
	   
	   //ПросмотрРеззапроса("Сертификаты",Запрос);
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 //---------------<Данные для Зет-Отчетов>---------------------------// GtG // 12.03.2013 19:40:45
	 //!!!  в качестве номера ЗетОчет используем номер смены SNUM. Это не совсем верно, но зато удобно для разбора полетов с аптеками.
	 Запрос.текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	Выручка.ДАТА_СМЕНЫ,
	              |	Выручка.PNUM КАК Касса,
	              |	Выручка.SNUM КАК ЗетОчет,
	              |	Выручка.EKLZ КАК ПризнакОкончанияЭКЛЗ,
	              |	Выручка.ZSALE0 КАК СуммаПоЗетОтчетуНал,
	              |	Выручка.ZSALE3 КАК СуммаПоЗетОтчетуБезНал,
	              |	Выручка.ZRET0 КАК ВозвратыПоЗетОтчетуНал,
	              |	Выручка.ZRET3 КАК ВозвратыПоЗетОтчетуБезНал,
	              |	Выручка.ZSUM КАК ИтогоПоЗетОтчету,
	              |	Выручка.ZZERO КАК НеобнуляемыйИтог
	              |ПОМЕСТИТЬ СуммыПоЗетОтчетам_0
	              |ИЗ
	              |	Выручка КАК Выручка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	СуммыПоЗетОтчетам_0.ДАТА_СМЕНЫ,
	              |	СуммыПоЗетОтчетам_0.Касса КАК Касса_ЗаводскойНомер,
	              |	СуммыПоЗетОтчетам_0.ЗетОчет,
	              |	СуммыПоЗетОтчетам_0.ПризнакОкончанияЭКЛЗ,
	              |	СуммыПоЗетОтчетам_0.СуммаПоЗетОтчетуНал,
	              |	СуммыПоЗетОтчетам_0.СуммаПоЗетОтчетуБезНал,
	              |	СуммыПоЗетОтчетам_0.ВозвратыПоЗетОтчетуНал,
	              |	СуммыПоЗетОтчетам_0.ВозвратыПоЗетОтчетуБезНал,
	              |	СуммыПоЗетОтчетам_0.ИтогоПоЗетОтчету,
	              |	СуммыПоЗетОтчетам_0.НеобнуляемыйИтог,
	              |	Кассы.Ссылка КАК Касса,
	              |	&Склад
	              |ПОМЕСТИТЬ СуммыПоЗетОтчетам_1
	              |ИЗ
	              |	СуммыПоЗетОтчетам_0 КАК СуммыПоЗетОтчетам_0
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Кассы_УникальныеЗаводскиеНомера КАК Кассы
	              |		ПО СуммыПоЗетОтчетам_0.Касса = Кассы.ЗаводскойНомер
	              |			И (Кассы.Владелец = &Склад)
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ СуммыПоЗетОтчетам_0" ;
	 Запрос.Выполнить();
	 
	 
	 мЗаписьВЛог(Лог,"Передвигаем кассы по аптекам...");
	 МиграцияККМ();
	 
	 Запрос.Текст="ВЫБРАТЬ
	              |	Бухгалтерия.ДАТА_СМЕНЫ,
	              |	Бухгалтерия.Касса,
	              |	Бухгалтерия.ЗетОчет,
	              |	СУММА(Бухгалтерия.СуммаСоСкидкой) КАК СуммаСоСкидкой
	              |ПОМЕСТИТЬ BUH_SUMM_ZREP
	              |ИЗ
	              |	Бухгалтерия КАК Бухгалтерия
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	Бухгалтерия.ДАТА_СМЕНЫ,
	              |	Бухгалтерия.Касса,
	              |	Бухгалтерия.ЗетОчет
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	СуммыПоЗетОтчетам_1.ДАТА_СМЕНЫ,
	              |	СуммыПоЗетОтчетам_1.Касса_ЗаводскойНомер,
	              |	СуммыПоЗетОтчетам_1.ЗетОчет,
	              |	СуммыПоЗетОтчетам_1.ПризнакОкончанияЭКЛЗ,
	              |	СуммыПоЗетОтчетам_1.СуммаПоЗетОтчетуНал,
	              |	СуммыПоЗетОтчетам_1.СуммаПоЗетОтчетуБезНал,
	              |	СуммыПоЗетОтчетам_1.ВозвратыПоЗетОтчетуНал,
	              |	СуммыПоЗетОтчетам_1.ВозвратыПоЗетОтчетуБезНал,
	              |	СуммыПоЗетОтчетам_1.ИтогоПоЗетОтчету,
	              |	СуммыПоЗетОтчетам_1.НеобнуляемыйИтог,
	              |	Кассы.Ссылка КАК Касса,
	              |	СуммыПоЗетОтчетам_1.Склад
	              |ПОМЕСТИТЬ СуммыПоЗетОтчетам_2
	              |ИЗ
	              |	СуммыПоЗетОтчетам_1 КАК СуммыПоЗетОтчетам_1
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Кассы_УникальныеЗаводскиеНомера КАК Кассы
	              |		ПО СуммыПоЗетОтчетам_1.Касса_ЗаводскойНомер = Кассы.ЗаводскойНомер
	              |			И (Кассы.Владелец = СуммыПоЗетОтчетам_1.Склад)
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ СуммыПоЗетОтчетам_1
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	СуммыПоЗетОтчетам_2.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	              |	СуммыПоЗетОтчетам_2.Касса_ЗаводскойНомер,
	              |	СуммыПоЗетОтчетам_2.ЗетОчет,
	              |	СуммыПоЗетОтчетам_2.ПризнакОкончанияЭКЛЗ,
	              |	СуммыПоЗетОтчетам_2.СуммаПоЗетОтчетуНал,
	              |	СуммыПоЗетОтчетам_2.СуммаПоЗетОтчетуБезНал,
	              |	СуммыПоЗетОтчетам_2.ВозвратыПоЗетОтчетуНал,
	              |	СуммыПоЗетОтчетам_2.ВозвратыПоЗетОтчетуБезНал,
	              |	СуммыПоЗетОтчетам_2.ИтогоПоЗетОтчету,
	              |	СуммыПоЗетОтчетам_2.НеобнуляемыйИтог,
	              |	СуммыПоЗетОтчетам_2.Касса,
	              |	СуммыПоЗетОтчетам_2.Склад,
	              |	BUH_SUMM_ZREP.СуммаСоСкидкой КАК СуммаПоБазе
	              |ПОМЕСТИТЬ СуммыПоЗетОтчетам
	              |ИЗ
	              |	СуммыПоЗетОтчетам_2 КАК СуммыПоЗетОтчетам_2
	              |		ЛЕВОЕ СОЕДИНЕНИЕ BUH_SUMM_ZREP КАК BUH_SUMM_ZREP
	              |		ПО СуммыПоЗетОтчетам_2.ДАТА_СМЕНЫ = BUH_SUMM_ZREP.ДАТА_СМЕНЫ
	              |			И СуммыПоЗетОтчетам_2.Касса = BUH_SUMM_ZREP.Касса
	              |			И СуммыПоЗетОтчетам_2.ЗетОчет = BUH_SUMM_ZREP.ЗетОчет
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	ДАТА_СМЕНЫ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ СуммыПоЗетОтчетам_2
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ BUH_SUMM_ZREP
	              |;
	              |";
	 Запрос.Выполнить();
	 
	 //
	 //"ВЫБРАТЬ
	 //|	РеализацияККМПрограммыЛояльности.Ссылка,
	 //|	РеализацияККМПрограммыЛояльности.НомерСтроки,
	 //|	РеализацияККМПрограммыЛояльности.Товар,
	 //|	РеализацияККМПрограммыЛояльности.НомерКарты,
	 //|	РеализацияККМПрограммыЛояльности.НомерККМ,
	 //|	РеализацияККМПрограммыЛояльности.НомерСмены,
	 //|	РеализацияККМПрограммыЛояльности.НомерЧека,
	 //|	РеализацияККМПрограммыЛояльности.БарКодТовара,
	 //|	РеализацияККМПрограммыЛояльности.Количество,
	 //|	РеализацияККМПрограммыЛояльности.СуммаСоСкидкой,
	 //|	РеализацияККМПрограммыЛояльности.СуммаСкидки,
	 //|	РеализацияККМПрограммыЛояльности.СуммаНДС,
	 //|	РеализацияККМПрограммыЛояльности.СуммаНДССкидки,
	 //|	РеализацияККМПрограммыЛояльности.Контрагент,
	 //|	РеализацияККМПрограммыЛояльности.Поставщик
	 //|ИЗ
	 //|	Документ.РеализацияККМ.ПрограммыЛояльности КАК РеализацияККМПрограммыЛояльности
	 //|ГДЕ
	 //|	РеализацияККМПрограммыЛояльности.Ссылка = &ПустаяСсылка"
	 //
	 
	 
	 //---------------<Услуги>---------------------------// GtG // 06.03.2013 18:30:46
	Запрос.Текст= "ВЫБРАТЬ
	              |	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСАвансамиПоУслугам.Реализация) КАК ВидОперации,
	              |	Выручка.УслугаСС КАК Услуга,
	              |	Выручка.РознСумма КАК Сумма,
	              |	Выручка.SNUM КАК ЗетОчет,
	              |	Выручка.PNDS КАК СтавкаНДС,
	              |	Выручка.РознНДС КАК СуммаНДС,
	              |	Выручка.PT КАК ТипОплаты,
	              |	Выручка.ДАТА_СМЕНЫ КАК ДатаЗаказа,
	              |	Выручка.PNUM КАК Касса,
	              |	Выручка.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ
	              |ПОМЕСТИТЬ АвансыПоУслугам
	              |ИЗ
	              |	Выручка КАК Выручка
	              |ГДЕ
	              |	Выручка.ТипТовара = 2
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	ДАТА_СМЕНЫ";
	 Запрос.Выполнить();
	 
	 
	 //ПросмотрРеззапроса("АвансыПоУслугам",Запрос);
	 
	 
	 //---------------<Персональные продажи товар>---------------------------// GtG // 06.03.2013 18:31:29
	Запрос.Текст= "ВЫБРАТЬ
	              |	Выручка.ДАТА_СМЕНЫ,
	              |	СУММА(Выручка.QNT) КАК Количество,
	              |	СУММА(Выручка.SUMSK) КАК СуммаСкидки,
	              |	Выручка.TNCUSER КАК Сотрудник,
	              |	СУММА(Выручка.ЗакупСумма) КАК СуммаЗакуп,
	              |	Выручка.ТоварСС КАК Товар,
	              |	Выручка.ЕИТ,
	              |	Выручка.КЕит КАК Коэффициент,
	              |	СУММА(Выручка.СуммаСоСкидкой) КАК СуммаРознФакт
	              |ПОМЕСТИТЬ ПерПроТов
	              |ИЗ
	              |	Выручка КАК Выручка
	              |ГДЕ
	              |	Выручка.ТипТовара = 1
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	Выручка.ДАТА_СМЕНЫ,
	              |	Выручка.КЕит,
	              |	Выручка.TNCUSER,
	              |	Выручка.ТоварСС,
	              |	Выручка.ЕИТ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ПерПроТов.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	              |	ПерПроТов.Количество,
	              |	ПерПроТов.СуммаСкидки,
	              |	СотрудникиДляМотивации.Ссылка КАК Сотрудник,
	              |	ПерПроТов.СуммаЗакуп,
	              |	ПерПроТов.Товар,
	              |	ПерПроТов.ЕИТ,
	              |	ПерПроТов.Коэффициент,
	              |	ПерПроТов.СуммаРознФакт
	              |ПОМЕСТИТЬ ПерсональныеПродажиТовар
	              |ИЗ
	              |	ПерПроТов КАК ПерПроТов
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиДляМотивации КАК СотрудникиДляМотивации
	              |		ПО ПерПроТов.Сотрудник = СотрудникиДляМотивации.ТабНомер
	              |			И (СотрудникиДляМотивации.Владелец = &Фирма)
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	ДАТА_СМЕНЫ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ ПерПроТов"  ;
	 
	 Запрос.Выполнить();
	 //
	 Запрос.Текст="ВЫБРАТЬ
	              |	Выручка.ДАТА_СМЕНЫ,
	              |	Выручка.PNUM КАК НомерККМ,
	              |	Выручка.sNUM КАК Номер_ZОтчета,
	              |	Выручка.TNCUSER КАК Сотрудник,
	              |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Выручка.NDOC) КАК КоличествоЧековNDOC,
	              |	МИНИМУМ(Выручка.ЧистаяДАта) КАК НачалоСмены,
	              |	МАКСИМУМ(Выручка.ЧистаяДАта) КАК КонецСмены,
	              |	СУММА(Выручка.SUMSK) КАК СуммаСкидки,
	              |	СУММА(Выручка.ЗакупСумма) КАК СуммаЗакуп,
	              |	СУММА(Выручка.СуммаСоСкидкой) КАК СуммаРознФакт
	              |ПОМЕСТИТЬ ПерПроКонт_1
	              |ИЗ
	              |	Выручка КАК Выручка
	              |ГДЕ
	              |	Выручка.ТипТовара = 1
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	Выручка.ДАТА_СМЕНЫ,
	              |	Выручка.TNCUSER,
	              |	Выручка.PNUM,
	              |	Выручка.sNUM
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ПерПроКонт_1.ДАТА_СМЕНЫ,
	              |	ПерПроКонт_1.Сотрудник,
	              |	СУММА(ПерПроКонт_1.КоличествоЧековNDOC) КАК КоличествоЧековNDOC,
	              |	МИНИМУМ(ПерПроКонт_1.НачалоСмены) КАК НачалоСмены,
	              |	МАКСИМУМ(ПерПроКонт_1.КонецСмены) КАК КонецСмены,
	              |	СУММА(ПерПроКонт_1.СуммаСкидки) КАК СуммаСкидки,
	              |	СУММА(ПерПроКонт_1.СуммаЗакуп) КАК СуммаЗакуп,
	              |	СУММА(ПерПроКонт_1.СуммаРознФакт) КАК СуммаРознФакт
	              |ПОМЕСТИТЬ ПерПроКонт_2
	              |ИЗ
	              |	ПерПроКонт_1 КАК ПерПроКонт_1
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ПерПроКонт_1.ДАТА_СМЕНЫ,
	              |	ПерПроКонт_1.Сотрудник
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ ПерПроКонт_1
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ПерПроКонт_2.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	              |	СотрудникиДляМотивации.Ссылка КАК Сотрудник,
	              |	ПерПроКонт_2.КоличествоЧековNDOC КАК КоличествоЧеков,
	              |	ПерПроКонт_2.НачалоСмены,
	              |	ПерПроКонт_2.КонецСмены,
	              |	ПерПроКонт_2.СуммаСкидки,
	              |	ПерПроКонт_2.СуммаЗакуп,
	              |	ПерПроКонт_2.СуммаРознФакт
	              |ПОМЕСТИТЬ ППКонтроль
	              |ИЗ
	              |	ПерПроКонт_2 КАК ПерПроКонт_2
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиДляМотивации КАК СотрудникиДляМотивации
	              |		ПО ПерПроКонт_2.Сотрудник = СотрудникиДляМотивации.ТабНомер
	              |			И (СотрудникиДляМотивации.Владелец = &Фирма)
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	ДАТА_СМЕНЫ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ ПерПроКонт_2
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ППКонтроль.ДАТА_СМЕНЫ,
	              |	ППКонтроль.Сотрудник,
	              |	СУММА(ППКонтроль.КоличествоЧеков) КАК КоличествоЧеков,
	              |	МАКСИМУМ(ППКонтроль.НачалоСмены) КАК НачалоСмены,
	              |	МИНИМУМ(ППКонтроль.КонецСмены) КАК КонецСмены,
	              |	СУММА(ППКонтроль.СуммаСкидки) КАК СуммаСкидки,
	              |	СУММА(ППКонтроль.СуммаЗакуп) КАК СуммаЗакуп,
	              |	СУММА(ППКонтроль.СуммаРознФакт) КАК СуммаРознФакт
	              |ПОМЕСТИТЬ ПерсональныеПродажиКонтроль
	              |ИЗ
	              |	ППКонтроль КАК ППКонтроль
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ППКонтроль.ДАТА_СМЕНЫ,
	              |	ППКонтроль.Сотрудник
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ ППКонтроль"  ;
	 
	 Запрос.Выполнить();
	 
	 //---------------<КолвоЧековПоДатам для вычисления ссп>---------------------------// GtG // 14.02.2013 15:37:55
	 Запрос.Текст="ВЫБРАТЬ
	              |	базаКолваЧеков.ДАТА_СМЕНЫ,
	              |	СУММА(базаКолваЧеков.КолвоЧеков) КАК КолвоЧеков
	              |ПОМЕСТИТЬ КолвоЧековПоДатам
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		Выручка.PNUM КАК касса,
	              |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Выручка.NDOC) КАК КолвоЧеков,
	              |		Выручка.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ
	              |	ИЗ
	              |		Выручка КАК Выручка
	              |	
	              |	СГРУППИРОВАТЬ ПО
	              |		Выручка.ДАТА_СМЕНЫ,
	              |		Выручка.PNUM) КАК базаКолваЧеков
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	базаКолваЧеков.ДАТА_СМЕНЫ";
	Запрос.Выполнить();	
	
	//---------------<Состояние затычки нового документа>---------------------------// GtG // 14.02.2013 15:46:29
	Запрос.Текст="ВЫБРАТЬ
	             |	БазаДляРасчетаСостоянияЗатычкиНовДок.ДАТА_СМЕНЫ,
	             |	ВЫБОР
	             |		КОГДА БазаДляРасчетаСостоянияЗатычкиНовДок.хЗатычка = 0
	             |			ТОГДА ЛОЖЬ
	             |		ИНАЧЕ ИСТИНА
	             |	КОНЕЦ КАК Затычка
	             |ПОМЕСТИТЬ СостояниеЗатычкиНовогоДокумента
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		базаЗатычкиНового.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	             |		СУММА(базаЗатычкиНового.хЗатычка) КАК хЗатычка
	             |	ИЗ
	             |		(ВЫБРАТЬ
	             |			Выручка.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	             |			ВЫБОР
	             |				КОГДА Выручка.ZNUM = 0
	             |					ТОГДА 1
	             |				КОГДА Выручка.ПартияСС.Наименование = ""-НЕИЗВЕСТНАЯ-""
	             |					ТОГДА 1
	             |				ИНАЧЕ 0
	             |			КОНЕЦ КАК хЗатычка
	             |		ИЗ
	             |			Выручка КАК Выручка
	             |		
	             |		ОБЪЕДИНИТЬ
	             |		
	             |		ВЫБРАТЬ
	             |			СуммыПоЗетОтчетам.ДАТА_СМЕНЫ,
	             |			ВЫБОР
	             |				КОГДА СуммыПоЗетОтчетам.ИтогоПоЗетОтчету = 0
	             |					ТОГДА 1
	             |				КОГДА СуммыПоЗетОтчетам.ИтогоПоЗетОтчету - СуммыПоЗетОтчетам.ВозвратыПоЗетОтчетуНал - СуммыПоЗетОтчетам.ВозвратыПоЗетОтчетуБезНал <> СуммыПоЗетОтчетам.СуммаПоБазе
	             |					ТОГДА 1
	             |				ИНАЧЕ 0
	             |			КОНЕЦ
	             |		ИЗ
	             |			СуммыПоЗетОтчетам КАК СуммыПоЗетОтчетам) КАК базаЗатычкиНового
	             |	
	             |	СГРУППИРОВАТЬ ПО
	             |		базаЗатычкиНового.ДАТА_СМЕНЫ) КАК БазаДляРасчетаСостоянияЗатычкиНовДок"; 
				 
	Запрос.Выполнить();
	
	
				  //  |	СуммыПоЗетОтчетам.СуммаПоЗетОтчетуНал,
				  //|	СуммыПоЗетОтчетам.СуммаПоЗетОтчетуБезНал,
				  //|	СуммыПоЗетОтчетам.НеобнуляемыйИтог,
				  //|	СуммыПоЗетОтчетам.СуммаПоБазе,
				  //|	СуммыПоЗетОтчетам.ВозвратыПоЗетОтчетуНал,
				  //|	СуммыПоЗетОтчетам.ВозвратыПоЗетОтчетуБезНал

	
		//---------------<Теперь определяемся с тем, какие даты грузим>---------------------------// GtG // 14.02.2013 12:01:23
	
	
	
	Запрос.Текст="ВЫБРАТЬ
	             |	БазаКолваЧеков.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	             |	СУММА(БазаКолваЧеков.NDOC) КАК КолвоЧеков
	             |ПОМЕСТИТЬ РасчетКоличестваЧековПоСменам
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		Выручка.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	             |		Выручка.PNUM КАК PNUM,
	             |		Выручка.sNUM КАК ZNUM,
	             |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Выручка.NDOC) КАК NDOC
	             |	ИЗ
	             |		Выручка КАК Выручка
	             |	
	             |	СГРУППИРОВАТЬ ПО
	             |		Выручка.ДАТА_СМЕНЫ,
	             |		Выручка.PNUM,
	             |		Выручка.sNUM) КАК БазаКолваЧеков
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	БазаКолваЧеков.ДАТА_СМЕНЫ
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	ДАТА_СМЕНЫ
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000000000
	             |	БДЗ.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	             |	БДЗ.ЗагрузитьДату,
	             |	БДЗ.КолвоЧеков,
	             |	СостояниеЗатычкиНовогоДокумента.Затычка
	             |ПОМЕСТИТЬ ДатыДляЗагрузки
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.ДАТА_СМЕНЫ КАК ДАТА_СМЕНЫ,
	             |		УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.ЗагрузитьИзФайла КАК ЗагрузитьДату,
	             |		РасчетКоличестваЧековПоСменам.КолвоЧеков КАК КолвоЧеков
	             |	ИЗ
	             |		УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты КАК УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты
	             |			ЛЕВОЕ СОЕДИНЕНИЕ РасчетКоличестваЧековПоСменам КАК РасчетКоличестваЧековПоСменам
	             |			ПО УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты.ДАТА_СМЕНЫ = РасчетКоличестваЧековПоСменам.ДАТА_СМЕНЫ) КАК БДЗ
	             |		ЛЕВОЕ СОЕДИНЕНИЕ СостояниеЗатычкиНовогоДокумента КАК СостояниеЗатычкиНовогоДокумента
	             |		ПО БДЗ.ДАТА_СМЕНЫ = СостояниеЗатычкиНовогоДокумента.ДАТА_СМЕНЫ
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ДАТА_СМЕНЫ
	             |
	             |";

	
	
	
	Запрос.Выполнить();			 
	// во временной таблице ДатыДляЗагрузки сидят все даты из файла и признак грузить эту дату или нет
	
		
	
	
	//---------------<Данные по версиям Аптечного и кассового модулей>---------------------------// GtG // 18.02.2013 12:02:59 
	мЗаписьВЛог(Лог,"Получаем данные по версиям Аптечного и кассового модулей...");

	Запрос.Текст="ВЫБРАТЬ
	             |	МАКСИМУМ(Выручка.VDEPOT) КАК VDEPOT,
	             |	МАКСИМУМ(Выручка.VCASH) КАК VCASH,
	             |	&Склад
	             |ИЗ
	             |	Выручка КАК Выручка";
	ТабВерсий=Запрос.Выполнить().Выгрузить();	
	
	Для Каждого Стр из ТабВерсий Цикл

		Если Склад.ВерсияАМ<>Стр.VDEPOT или  Склад.ВерсияКМ<>Стр.VCASH Тогда
			мЗаписьВЛог(Лог,"Изменилась версия АМ или КМ...");
			обСклад=Стр.Склад.ПолучитьОбъект();
			обСклад.ВерсияАМ=Стр.VDEPOT;
			обСклад.ВерсияКМ=Стр.VCASH;
			обСклад.Записать();
		КонецЕсли;
	КонецЦикла;	
	
    //---------------<Создаем Реализации ККМ>---------------------------// GtG // 14.02.2013 13:03:43
	мЗаписьВЛог(Лог,"Создаем новые документы Реализация ККМ...");

	Запрос.Текст="ВЫБРАТЬ
	             |	ДатыДляЗагрузки.ДАТА_СМЕНЫ,
	             |	ДатыДляЗагрузки.ЗагрузитьДату,
	             |	ДатыДляЗагрузки.КолвоЧеков,
	             |	ДатыДляЗагрузки.Затычка
	             |ИЗ
	             |	ДатыДляЗагрузки КАК ДатыДляЗагрузки
	             |		";
				 
	СписокЗагружаемыхДат=Запрос.Выполнить().Выгрузить();

	Для Каждого СтрТекДата из СписокЗагружаемыхДат Цикл
		ТекДата=СтрТекДата.ДАТА_СМЕНЫ;
		
		Если СтрТекДата.ЗагрузитьДату=Ложь Тогда
			мЗаписьВЛог(Лог,"Пропускаем загрузку "+ТекДата+"...");

			Продолжить;
		КонецЕсли;	
		
		
		//---------------<Создаем новую выручку>---------------------------// GtG // 14.02.2013 14:19:22
		
		Док=Документы.РеализацияККМ.СоздатьДокумент();
		Док.Дата=КонецДня(ТекДата);
		Док.Затычка=  СтрТекДата.Затычка;
		Док.Фирма= Склад.Фирма;
		Док.Склад= Склад;
		Док.Проверен=  Ложь;
		Док.КоличествоЧеков=СтрТекДата.КолвоЧеков;
		Док.ИсправленВручную= Ложь;
		
		//---------------<Заполняем табличные части>---------------------------// GtG // 14.02.2013 13:27:36
		Запрос.УстановитьПараметр("Тек_ДАТА_СМЕНЫ",НачалоДня(ТекДата));
		
		Запрос.Текст="Выбрать * из тчТовар где ДАТА_СМЕНЫ=&Тек_ДАТА_СМЕНЫ order by тчТовар.Товар.Наименование"; 
		Док.Товар.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Запрос.Текст="Выбрать * из Бухгалтерия где ДАТА_СМЕНЫ=&Тек_ДАТА_СМЕНЫ";
		Док.Бухгалтерия.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Запрос.Текст="Выбрать * из Дисконт где ДАТА_СМЕНЫ=&Тек_ДАТА_СМЕНЫ";
		Док.Дисконт.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Запрос.Текст="Выбрать * из СуммыПоЗетОтчетам где ДАТА_СМЕНЫ=&Тек_ДАТА_СМЕНЫ";
		Док.СуммыПоЗетОтчетам.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Запрос.Текст="Выбрать * из ПерсональныеПродажиТовар где ДАТА_СМЕНЫ=&Тек_ДАТА_СМЕНЫ";
		Док.ПерсональныеПродажиТовар.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Запрос.Текст="Выбрать * из ПерсональныеПродажиКонтроль где ДАТА_СМЕНЫ=&Тек_ДАТА_СМЕНЫ";
		Док.ПерсональныеПродажиКонтроль.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Запрос.Текст="Выбрать * из АвансыПоУслугам где ДАТА_СМЕНЫ=&Тек_ДАТА_СМЕНЫ";
		Док.АвансыПоУслугам.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Запрос.Текст="Выбрать * из Сертификаты где ДАТА_СМЕНЫ=&Тек_ДАТА_СМЕНЫ";
		Док.Сертификаты.Загрузить(Запрос.Выполнить().Выгрузить());

		 
		//---------------<Дозаполняем>---------------------------// GtG // 14.02.2013 18:13:54
		
		
		
		Док.СуммаСоСкидкой=Док.Бухгалтерия.Итог("СуммаСоСкидкой");
		Док.ССП=Док.СуммаСоСкидкой/Док.КоличествоЧеков;
		Док.Сумма=Док.Бухгалтерия.Итог("СуммаБезСкидки");
		
		СтрИзм=Док.Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="#V5#"+ ИмяФайлаЗИП;
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.Загрузка;
		
		СтрИзм=Док.Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="Загружен. Загрузчик Вер.5.х";
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.Загрузка;
		
		
		
		
		
		
		Если Док.Дата<=Константы.ДатаЗапретаРедактирования.Получить() Тогда
			мЗаписьВЛог(Лог,"Попытка создать Реализацию ККМ ранее даты запрета редактирования. Запрещено!");
			продолжить;
		КонецЕсли;
		
		
		
		Х=0; Успешно=Ложь;
		Пока  Успешно=Ложь И Х<3  Цикл
			Х=Х+1;
			Попытка
				Док.Записать(РежимЗаписиДокумента.Проведение);
				Успешно=Истина;
			Исключение
				мЗаписьВЛог(Лог,""+ОписаниеОшибки());
				Если Док.Модифицированность()=Истина Тогда
					Док.Записать(РежимЗаписиДокумента.Запись);
				КонецЕсли;
				Успешно=Ложь;
				ОбщегоНазначения.Задержка(5); // из общего модуля ОбщегоНазначения (оргазм путем Самопинга)
			КонецПопытки;
			
		КонецЦикла;
		
				
		
		мЗаписьВЛог(Лог,"Создан "+Док);
		
		
	
	КонецЦикла;	
	
	
	//---------------<Уничтожаем временные таблицы>---------------------------// GtG // 14.02.2013 16:03:33
	Запрос.Текст="УНИЧТОЖИТЬ ЛевыеПартии; 
	             |УНИЧТОЖИТЬ Сертификаты;
	             |УНИЧТОЖИТЬ АвансыПоУслугам;
	             |УНИЧТОЖИТЬ РасчетКоличестваЧековПоСменам;
	             |УНИЧТОЖИТЬ Выручка;
	             |УНИЧТОЖИТЬ тчТовар;
	             |УНИЧТОЖИТЬ Дисконт;
	             |УНИЧТОЖИТЬ Бухгалтерия;
	             |УНИЧТОЖИТЬ СуммыПоЗетОтчетам;
	             |УНИЧТОЖИТЬ ПерсональныеПродажиТовар;
	             |УНИЧТОЖИТЬ ПерсональныеПродажиКонтроль;
				 |УНИЧТОЖИТЬ КолвоЧековПоДатам;
	             |УНИЧТОЖИТЬ СостояниеЗатычкиНовогоДокумента;
	             |УНИЧТОЖИТЬ УдаляемыеРеализацииККМ_и_ЗагружаемыеДаты;
	             |УНИЧТОЖИТЬ ДатыДляЗагрузки";
	Запрос.Выполнить();	
	
	ЗаписатьЛогВФайл(Лог);
		
		
				
КонецПроцедуры


Процедура мЗапускЗагрузкиВыручки(ИндФайлы,ИндФайл,Лог) Экспорт
	
	//----------------------------------
	//Назначение:
	//  Обновляет список файлов
	//
	// ИндФайлы - Либо элементыФормы.Индикатор, либо структура с полями Значение и МаксимальноеЗначение
	// Лог      - Текстовый документ
	
	//----------------------------------
	Лог.Очистить();
	
	мЗаписьВЛог(Лог,""+"   Обновляем список файлов...."+ТекущаяДата());
	
	
	Путь=Константы.КаталогФТП.Получить();
	
	Путь=Путь+"\Out";
	
	Если ЗагружатьПоВыбранномуСкладу.Пустая()=Истина Тогда
		МаскаПоискаФайлов="kkm*.zip";
	Иначе
		МаскаПоискаФайлов="kkm"+Формат(ЗагружатьПоВыбранномуСкладу.Код,"ЧГ=0")+"_*.zip";
	КонецЕсли;
	
	Файлы=НайтиФайлы(Путь,МаскаПоискаФайлов); //массив файлов
	
	оСписокФайлов.Очистить();
	
	
	ТЗФайлов=Новый ТаблицаЗначений;  
	ТЗФайлов.Колонки.Добавить("КодАптеки",фТипN (10,0));
	ТЗФайлов.Колонки.Добавить("ПолноеИмя",фТипS(500));
	ТЗФайлов.Колонки.Добавить("Имя",фТипS(250));
	ТЗФайлов.Колонки.Добавить("АвтоВыгрузка",Новый ОписаниеТипов("Булево"));
	ТЗФайлов.Колонки.Добавить("НачДата",фТипD());
	ТЗФайлов.Колонки.Добавить("КонДата",фТипD());
	ТЗФайлов.Колонки.Добавить("МаксДата",фТипD());
	ТЗФайлов.Колонки.Добавить("ДнейВыручки",фТипN (10,0));
	ТЗФайлов.Колонки.Добавить("Представление",фТипS(500));
	ТЗФайлов.Колонки.Добавить("Интервал",фТипN (15,0));
	ТЗФайлов.Колонки.Добавить("ДатаСоздания",фТипD());

	
	
	
	
	
	Для каждого Файло из Файлы Цикл
		//оСписокФайлов.Добавить(Файло.ПолноеИмя,Файло.Имя);
		СтрТЗФ=ТЗФайлов.Добавить();
		СтрТЗФ.ПолноеИмя= Файло.ПолноеИмя;
		СтрТЗФ.Имя=Файло.Имя;
		Если  СтрЧислоВхождений(СтрТЗФ.Имя,"_")=2 Тогда
			//Это имя файла типа  kkm5_04.07.2012_22.09.11 что значит автоматически выгруженный
			СтрТЗФ.АвтоВыгрузка=Истина;
		Иначе
			//Это имя файла типа  kkm5_04.07.2012 что значит выгруженный вручную
			СтрТЗФ.АвтоВыгрузка=Ложь;
		КонецЕсли;
		
		
		//---------------<Выделим код аптеки из имени файла>---------------------------// GtG // 18.02.2013 16:14:49
		ПозПервого_=Найти(Файло.Имя,"_");
		СтрТЗФ.КодАптеки=СтрЗаменить(Лев(Файло.Имя,ПозПервого_-1),"kkm","");
		
	КонецЦикла;	
	
	//==================[Отстортируем файлы по свежести данных]===================GtG====21.05.2008
	//------------------ Индикатор --------------------------------------------------------------------------GtG---
	ИндФайлы.Значение=0;
	ИндФайлы.МаксимальноеЗначение=Файлы.Количество();
	//------------------ Индикатор КОНЕЦ---------------------------------------------------------------------GtG---
	
	Для каждого ОбрФ из ТЗФайлов Цикл
		ИндФайлы.Значение=ИндФайлы.Значение+1;
		
		ТЗДатФайла=новый ТаблицаЗначений;
		ТЗДатФайла.Колонки.Добавить("День");
		
		
		
		//==================[Смитрим, что внутри файлов]===================GtG====21.05.2008
		//ЭлементыФормы.ТекФайл.Заголовок=ОбрФ.Представление; // только имя файла
		ПИФ=ОбрФ.ПолноеИмя; // полное имя файла
		
		Файлец=Новый Файл(ПИФ);
		ДатаСоздания=Файлец.ПолучитьВремяИзменения();
		
		//==================<Распакуем>===================GtG====14.01.2008
		ДБФФайл=ОМ17_РаспаковатьФайлВоВременныйКаталогИПереименоватьЕго(ПИФ,"xKKM_tmp.DBF");
				
		//==================<Считываем ДБФ в таблицу значений>===================GtG====14.01.2008
		ДБФ= Новый  XBase;
		
		
		//==================<Сразу Отсеиваем пустые файлы>===================GtG====18.01.2008
		
		Попытка // битые файлы могут быть
			ДБФ.ОткрытьФайл(ДБФФайл);
			
			
			Если ДБФ.КоличествоЗаписей()=0 Тогда
				мЗаписьВЛог(Лог,"Файл пустой, пропускаем");
				
				ОбрФ.Представление= "00000000000000#"+ОбрФ.Представление;
				
				Попытка
					ДБФ.ЗакрытьФайл();
				Исключение
				КонецПопытки;
				
				
				Продолжить;
			КонецЕсли; 	
			
		ИСключение //(Битый файл) запросить у аптеки новую выгрузку файла
			мЗаписьВЛог(Лог,"Подозрение на битый файл.");
			ОбрФ.Представление= "00000000000000#"+ОбрФ.Представление;
			
			Попытка
				ДБФ.ЗакрытьФайл();
			Исключение
			КонецПопытки;
			
			Продолжить;
		КонецПопытки; 	
		
		
		МАксДАта=ДАта("00010101");
		минДата=Дата("20991231235959"); //31-12-2099 23:59:59
		
		ДЛя Ы=1 по ДБФ.КоличествоЗаписей() Цикл
			ДБФ.Перейти(Ы);
			ТекДата=ДАта(ДБФ.DTDoc);
			
			ТЗДатФайла.Добавить().День= началодня(ТекДата);
			
			//последний чек
			Если ТекДата>МАксДАта Тогда
				МАксДАта=ТекДата;
			КонецЕсли;
			
			//первый чек файла
			Если минДата>ТекДата Тогда
				 минДата=ТекДата;
			 КонецЕсли;	
			 
		 КонецЦикла;
		 
		 ТЗДатФайла.Свернуть("День",);
		 
		
	
		
		 Попытка
			 ДБФ.ЗакрытьФайл();
		 Исключение
		 КонецПопытки;
		 
		 ОбрФ.ДнейВыручки=ТЗДатФайла.Количество();
		 ОбрФ.НачДата=минДата;
		 ОбрФ.КонДата=МАксДАта;
		 ОбрФ.МаксДата=МаксДата;
		 ОбрФ.ДнейВыручки=ТЗДатФайла.Количество();
		 ОбрФ.Интервал=МАксДАта-минДата;
		 ОбрФ.ДатаСоздания=ДатаСоздания;
		 
		 ОбрФ.Представление= ""+Формат(МАксДАта,"ДФ=yyyyMMddHHmmss")+"#"+ОбрФ.Представление;
	 КонецЦикла;
	 
	 
	 
	 
	 Запрос=Новый Запрос("ВЫБРАТЬ
	                     |	Файлы.КодАптеки,
	                     |	Файлы.ПолноеИмя,
	                     |	Файлы.Имя,
	                     |	Файлы.АвтоВыгрузка,
	                     |	Файлы.НачДата,
	                     |	Файлы.КонДата,
	                     |	Файлы.МаксДата,
	                     |	Файлы.ДнейВыручки,
	                     |	Файлы.Представление,
	                     |	Файлы.Интервал,
	                     |	Файлы.ДатаСоздания
	                     |ПОМЕСТИТЬ Ф
	                     |ИЗ
	                     |	&Файлы КАК Файлы
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	Ф.КодАптеки,
	                     |	Ф.ПолноеИмя,
	                     |	Ф.Имя,
	                     |	Ф.АвтоВыгрузка,
	                     |	Ф.НачДата,
	                     |	Ф.КонДата,
	                     |	Ф.МаксДата,
	                     |	Ф.ДнейВыручки,
	                     |	Ф.Представление,
	                     |	Ф.Интервал,
	                     |	НАЧАЛОПЕРИОДА(Ф.НачДата, ДЕНЬ) КАК НачДата_,
	                     |	КОНЕЦПЕРИОДА(Ф.КонДата, ДЕНЬ) КАК КонДата_,
	                     |	Ф.ДатаСоздания
	                     |ПОМЕСТИТЬ НесколькоДат
	                     |ИЗ
	                     |	Ф КАК Ф
	                     |ГДЕ
	                     |	Ф.ДнейВыручки > 1
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                     |	НесколькоДат.КодАптеки,
	                     |	НесколькоДат.НачДата_,
	                     |	НесколькоДат.КонДата_
	                     |ПОМЕСТИТЬ НескДат_УникальныеПериоды
	                     |ИЗ
	                     |	НесколькоДат КАК НесколькоДат
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	НескДат_УникальныеПериоды.КодАптеки,
	                     |	НескДат_УникальныеПериоды.НачДата_,
	                     |	НескДат_УникальныеПериоды.КонДата_,
	                     |	МАКСИМУМ(НесколькоДат.Интервал) КАК МаксИнтервал
	                     |ПОМЕСТИТЬ НескДатМаксИнтервалы
	                     |ИЗ
	                     |	НескДат_УникальныеПериоды КАК НескДат_УникальныеПериоды
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ НесколькоДат КАК НесколькоДат
	                     |		ПО НескДат_УникальныеПериоды.КодАптеки = НесколькоДат.КодАптеки
	                     |			И НескДат_УникальныеПериоды.НачДата_ = НесколькоДат.НачДата_
	                     |			И НескДат_УникальныеПериоды.КонДата_ = НесколькоДат.КонДата_
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	НескДат_УникальныеПериоды.КодАптеки,
	                     |	НескДат_УникальныеПериоды.НачДата_,
	                     |	НескДат_УникальныеПериоды.КонДата_
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	НескДатМаксИнтервалы.КодАптеки,
	                     |	НескДатМаксИнтервалы.НачДата_,
	                     |	НескДатМаксИнтервалы.КонДата_,
	                     |	НескДатМаксИнтервалы.МаксИнтервал,
	                     |	МАКСИМУМ(НесколькоДат.ДатаСоздания) КАК ДатаСоздания
	                     |ПОМЕСТИТЬ НескДат_Уникальность
	                     |ИЗ
	                     |	НескДатМаксИнтервалы КАК НескДатМаксИнтервалы
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ НесколькоДат КАК НесколькоДат
	                     |		ПО НескДатМаксИнтервалы.КодАптеки = НесколькоДат.КодАптеки
	                     |			И НескДатМаксИнтервалы.НачДата_ = НесколькоДат.НачДата_
	                     |			И НескДатМаксИнтервалы.КонДата_ = НесколькоДат.КонДата_
	                     |			И НескДатМаксИнтервалы.МаксИнтервал = НесколькоДат.Интервал
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	НескДатМаксИнтервалы.КодАптеки,
	                     |	НескДатМаксИнтервалы.НачДата_,
	                     |	НескДатМаксИнтервалы.КонДата_,
	                     |	НескДатМаксИнтервалы.МаксИнтервал
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ ПЕРВЫЕ 10000000
	                     |	НесколькоДат.КодАптеки КАК КодАптеки,
	                     |	НесколькоДат.ПолноеИмя,
	                     |	НесколькоДат.Имя,
	                     |	НесколькоДат.АвтоВыгрузка,
	                     |	НесколькоДат.НачДата КАК НачДата,
	                     |	НесколькоДат.КонДата,
	                     |	НесколькоДат.МаксДата,
	                     |	НесколькоДат.ДнейВыручки,
	                     |	НесколькоДат.Представление,
	                     |	НесколькоДат.Интервал,
	                     |	НесколькоДат.НачДата_,
	                     |	НесколькоДат.КонДата_
	                     |ПОМЕСТИТЬ ПакетыДат
	                     |ИЗ
	                     |	НескДат_Уникальность КАК НескДат_Уникальность
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ НесколькоДат КАК НесколькоДат
	                     |		ПО (НесколькоДат.КодАптеки = НескДат_Уникальность.КодАптеки)
	                     |			И (НесколькоДат.НачДата_ = НескДат_Уникальность.НачДата_)
	                     |			И (НесколькоДат.КонДата_ = НескДат_Уникальность.КонДата_)
	                     |			И (НесколькоДат.Интервал = НескДат_Уникальность.МаксИнтервал)
	                     |			И НескДат_Уникальность.ДатаСоздания = НесколькоДат.ДатаСоздания
	                     |
	                     |УПОРЯДОЧИТЬ ПО
	                     |	КодАптеки,
	                     |	НачДата
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	Ф.КодАптеки,
	                     |	Ф.ПолноеИмя,
	                     |	Ф.Имя,
	                     |	Ф.АвтоВыгрузка,
	                     |	Ф.НачДата,
	                     |	Ф.КонДата,
	                     |	Ф.МаксДата,
	                     |	Ф.ДнейВыручки,
	                     |	Ф.Представление,
	                     |	Ф.Интервал,
	                     |	Ф.ДатаСоздания
	                     |ПОМЕСТИТЬ ПоОдномуДню
	                     |ИЗ
	                     |	Ф КАК Ф
	                     |ГДЕ
	                     |	Ф.ДнейВыручки = 1
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ПоОдномуДню.КодАптеки,
	                     |	ПоОдномуДню.НачДата,
	                     |	МАКСИМУМ(ПоОдномуДню.Интервал) КАК Интервал
	                     |ПОМЕСТИТЬ МаксИнтервалыПо1Дню
	                     |ИЗ
	                     |	ПоОдномуДню КАК ПоОдномуДню
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	ПоОдномуДню.КодАптеки,
	                     |	ПоОдномуДню.НачДата
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ПоОдномуДню.КодАптеки,
	                     |	ПоОдномуДню.НачДата,
	                     |	ПоОдномуДню.КонДата,
	                     |	ПоОдномуДню.Интервал,
	                     |	МАКСИМУМ(ПоОдномуДню.ДатаСоздания) КАК ДатаСоздания
	                     |ПОМЕСТИТЬ ПоОдному_МаксИнтервалИДатаИзменения
	                     |ИЗ
	                     |	МаксИнтервалыПо1Дню КАК МаксИнтервалыПо1Дню
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ ПоОдномуДню КАК ПоОдномуДню
	                     |		ПО МаксИнтервалыПо1Дню.КодАптеки = ПоОдномуДню.КодАптеки
	                     |			И МаксИнтервалыПо1Дню.НачДата = ПоОдномуДню.НачДата
	                     |			И МаксИнтервалыПо1Дню.Интервал = ПоОдномуДню.Интервал
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	ПоОдномуДню.КодАптеки,
	                     |	ПоОдномуДню.НачДата,
	                     |	ПоОдномуДню.КонДата,
	                     |	ПоОдномуДню.Интервал
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ПоОдномуДню.КодАптеки,
	                     |	ПоОдномуДню.ПолноеИмя,
	                     |	ПоОдномуДню.Имя,
	                     |	ПоОдномуДню.АвтоВыгрузка,
	                     |	ПоОдномуДню.НачДата,
	                     |	ПоОдномуДню.КонДата,
	                     |	ПоОдномуДню.МаксДата,
	                     |	ПоОдномуДню.ДнейВыручки,
	                     |	ПоОдномуДню.Представление,
	                     |	ПоОдномуДню.Интервал,
	                     |	ПоОдномуДню.ДатаСоздания
	                     |ПОМЕСТИТЬ ОдиночныеДаты
	                     |ИЗ
	                     |	ПоОдному_МаксИнтервалИДатаИзменения КАК ПоОдному_МаксИнтервалИДатаИзменения
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ ПоОдномуДню КАК ПоОдномуДню
	                     |		ПО ПоОдному_МаксИнтервалИДатаИзменения.КодАптеки = ПоОдномуДню.КодАптеки
	                     |			И ПоОдному_МаксИнтервалИДатаИзменения.НачДата = ПоОдномуДню.НачДата
	                     |			И ПоОдному_МаксИнтервалИДатаИзменения.КонДата = ПоОдномуДню.КонДата
	                     |			И ПоОдному_МаксИнтервалИДатаИзменения.Интервал = ПоОдномуДню.Интервал
	                     |			И ПоОдному_МаксИнтервалИДатаИзменения.ДатаСоздания = ПоОдномуДню.ДатаСоздания
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |УНИЧТОЖИТЬ НесколькоДат
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |УНИЧТОЖИТЬ НескДат_УникальныеПериоды
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |УНИЧТОЖИТЬ НескДатМаксИнтервалы
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |УНИЧТОЖИТЬ ПоОдномуДню
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |УНИЧТОЖИТЬ МаксИнтервалыПо1Дню
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |УНИЧТОЖИТЬ ПоОдному_МаксИнтервалИДатаИзменения
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |УНИЧТОЖИТЬ НескДат_Уникальность
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	Ф.ПолноеИмя
	                     |ИЗ
	                     |	Ф КАК Ф
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ ПакетыДат КАК ПакетыДат
	                     |		ПО Ф.ПолноеИмя = ПакетыДат.ПолноеИмя
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ ОдиночныеДаты КАК ОдиночныеДаты
	                     |		ПО Ф.ПолноеИмя = ОдиночныеДаты.ПолноеИмя
	                     |ГДЕ
	                     |	ОдиночныеДаты.ПолноеИмя ЕСТЬ NULL 
	                     |	И ПакетыДат.ПолноеИмя ЕСТЬ NULL 
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |УНИЧТОЖИТЬ Ф
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ПакетыДат.КодАптеки,
	                     |	ПакетыДат.ПолноеИмя,
	                     |	ПакетыДат.Имя,
	                     |	ПакетыДат.АвтоВыгрузка,
	                     |	ПакетыДат.НачДата,
	                     |	ПакетыДат.КонДата,
	                     |	ПакетыДат.МаксДата,
	                     |	ПакетыДат.ДнейВыручки,
	                     |	ПакетыДат.Представление,
	                     |	ПакетыДат.Интервал,
	                     |	ПакетыДат.НачДата_,
	                     |	ПакетыДат.КонДата_,
	                     |	МестаХранения.Ссылка КАК Аптека
	                     |ИЗ
	                     |	ПакетыДат КАК ПакетыДат
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
	                     |		ПО ПакетыДат.КодАптеки = МестаХранения.Код
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ОдиночныеДаты.КодАптеки,
	                     |	ОдиночныеДаты.ПолноеИмя,
	                     |	ОдиночныеДаты.Имя,
	                     |	ОдиночныеДаты.АвтоВыгрузка,
	                     |	ОдиночныеДаты.НачДата,
	                     |	ОдиночныеДаты.КонДата,
	                     |	ОдиночныеДаты.МаксДата,
	                     |	ОдиночныеДаты.ДнейВыручки,
	                     |	ОдиночныеДаты.Представление,
	                     |	ОдиночныеДаты.Интервал,
	                     |	ОдиночныеДаты.ДатаСоздания,
	                     |	МестаХранения.Ссылка КАК Аптека
	                     |ИЗ
	                     |	ОдиночныеДаты КАК ОдиночныеДаты
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
	                     |		ПО ОдиночныеДаты.КодАптеки = МестаХранения.Код");
						 
						 
	//	ЗначениеВФайл("C:\TZF.1sTZ",ТЗФайлов);				 
						 
	  Запрос.УстановитьПараметр("файлы",ТЗФайлов);
	  
	 Рез=Запрос.ВыполнитьПакет();
	 
		УдаляемыеФайлы=Рез.Получить(17).Выгрузить();
	 ПакетыВыручки =Рез.Получить(19).Выгрузить();
	 ВыручкиЗа1День=Рез.Получить(20).Выгрузить();   
	 
	 
	 // Все файлы, что не вошли в пакеты - удаляем
	 
	 Для каждого стр из УдаляемыеФайлы цикл
		 УдалитьФайлы(сокрлп(стр.ПолноеИмя));
	 КонецЦикла;
	 
	// Далее, загружаем сначала однодневки, потом пакеты выручек
	мЗагрузитьВыручку(ВыручкиЗа1День,ИндФайлы,ИндФайл,Лог);
   ПереместитьФайлыВБэкап(ВыручкиЗа1День);
    
	мЗагрузитьВыручку(ПакетыВыручки,ИндФайлы,ИндФайл,Лог); 
	ПереместитьФайлыВБэкап(ПакетыВыручки);


Конецпроцедуры	

Процедура ПереместитьФайлыВБэкап(СписокФайлов) Экспорт
	Путь=Константы.КаталогФТП.Получить();
	Путь=Путь+"\Out";
	ПутьБэкапа=Путь+"\kkm_BackUp";
	Ф= Новый Файл(ПутьБэкапа);
	Если Ф.Существует()=Ложь ТОгда
		СоздатьКаталог(ПутьБэкапа);
	КонецЕсли;
	
	Для Каждого Стр Из СписокФайлов Цикл
		ПутьБэкапаАпт=ПутьБэкапа+"\"+Формат(Стр.КодАптеки,"ЧГ=");
		Ф= Новый Файл(ПутьБэкапаАпт);
		Если Ф.Существует()=Ложь ТОгда
			СоздатьКаталог(ПутьБэкапаАпт);
		КонецЕсли;
		
		
		
		
		ПереместитьФайл(Стр.ПолноеИмя,ПутьБэкапаАпт+"\"+Стр.Имя);
	КонецЦикла;
	
	
КонецПроцедуры




Процедура мЗагрузитьВыручку(СписокФайлов,ИндФайлы,ИндФайл,Лог) Экспорт
	//---------------<Используется для регламентного задания и запуска вручную>---------------------------// GtG // 18.02.2013 13:38:11
	ИндФайлы.Значение=0;
	ИндФайлы.МаксимальноеЗначение=СписокФайлов.Количество();
	Для каждого ОбрФ из СписокФайлов цикл
		
		#Если Клиент ТОгда
			ОбработкаПрерыванияПользователя();
		#КонецЕсли	
		
		ИндФайлы.Значение=ИндФайлы.Значение+1;
		
		
		//Попытка 
		//	МО_МенВремТаб.Закрыть(); // чистим, ибо мало ли чего на входе
		//Исключение
		//	//МО_МенВремТаб уже закрыт
		//КонецПопытки;	
		
		МО_МенВремТаб=Новый МенеджерВременныхТаблиц; // Переменная из модуля объекта. Используем для хранения данных 
		// выколупанных из ДБФа для последующей их обработки запросами
		
		
		КосякОднозначно=Ложь; // если возникает проблема с партиями товаров, 
		// то подгружаем документ как затычку и закупочную цену товара берем приблизительно розница-40%
		ТФ= Новый ТекстовыйДокумент;
		
		
	//	ЭлементыФормы.ТекОперация.Заголовок="Извлекаем из архива";
		
	//	ЗаписьВЛог("-----------------------------------------------------");
		
		
		Аптека=ОбрФ.Аптека;
		
	//	ЭлементыФормы.ТекФайл.Заголовок=ОбрФ.Представление; // только имя файла
		ПИФ=СокрЛП(ОбрФ.ПолноеИмя); // полное имя файла
		
		//==================<Распакуем>===================GtG====14.01.2008
		ДБФФайл=ОМ17_РаспаковатьФайлВоВременныйКаталогИПереименоватьЕго(ПИФ,"KKM_tmp.DBF");
		МЗаписьВЛог(Лог,""+ПИФ+" "+Аптека);
		
		//УстановитьЗаголовокСистемы("ВЫРУЧКА "+ОбрФ.Представление);
		
		//==================<Считываем ДБФ в таблицу значений>===================GtG====14.01.2008
		ДБФ= Новый  XBase;
		
		
		//==================<Сразу Отсеиваем пустые файлы>===================GtG====18.01.2008
		
		Попытка // битые файлы могут быть
			ДБФ.ОткрытьФайл(ДБФФайл);
			
			Если ДБФ.КоличествоЗаписей()=0 Тогда
				//ЗаписьВЛог("Файл пустой, пропускаем");
				УдалитьФайлы(ПИФ);
				Возврат;
			КонецЕсли; 	
			
		ИСключение //(Битый файл) запросить у аптеки новую выгрузку файла
			//ЗаписьВЛог("Подозрение на битый файл. Отправляем в проблемные.");
			ПроблемныйПИФ=СтрЗаменить(ВРег(Пиф),"KKM","K_K_M(битый)");
			
			Попытка
				ПереместитьФайл(ПИФ,ПроблемныйПИФ);
			Исключение
				//Сообщить("Не удалось переместить "+ Пиф);
			КонецПопытки;
			
			//ЗаписьВЛог(ПроблемныйПИФ);
			Возврат;
		КонецПопытки; 	
		
		
		//---------------<ОписанияТипов для типизирования ТЗ ДБФ-а>---------------------------// GtG // 11.02.2013 10:48:37 
		
			
		ЗагрузитьВыручкуЧерезВременныеТаблицы(ДБФ,Аптека,ИндФайл,Лог,ПИФ);
		
		ДБФ.ЗакрытьФайл();
		
		Попытка 
			МО_МенВремТаб.Закрыть(); // чистим, ибо мало ли чего на входе
		Исключение
			//МО_МенВремТаб уже закрыт
		КонецПопытки;		
		
	КонецЦикла;
	
	
	
	
Конецпроцедуры





ТоварЗатычка=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоНаименованию("--- НЕИЗВЕСТНЫЙ ТОВАР. ПЕРЕОЦЕНКА ---");
ЕИТЗатычка=ТоварЗатычка.ЕдиницаПоУмолчанию;
Если ЕИТЗатычка.Пустая() Тогда
	ОбЕИТЗатычка=Справочники.ЕИТ.СоздатьЭлемент();
	ОбЕИТЗатычка.Владелец=ТоварЗатычка;
	ОбЕИТЗатычка.ЕдИзм=Справочники.ЕдИзм.НайтиПоНаименованию("шт");
	ОбЕИТЗатычка.К=1;
	ОбЕИТЗатычка.КолвоВУпаковке=1;
	ОбЕИТЗатычка.Наименование="Шт";
	ОбЕИТЗатычка.НаименованиеТовара="Штука неизвестного товара";
	ОбЕИТЗатычка.УстановитьНовыйКод();
	
	Префикс=Константы.Первые2СимволаВШКНеЖНВЛС.Получить();
	ОбЕИТЗатычка.ШтрихкодВн=ОМ1_ШК_СПрефиксом(Префикс,ОбЕИТЗатычка.Код);
	ОбЕИТЗатычка.Записать();
	
	ОбТовар=ТоварЗатычка.ПолучитьОбъект();
	ОбТовар.ЕдиницаПоУмолчанию=ОбЕИТЗатычка.Ссылка;
	ОбТовар.ЕдиницаОтгрузки=ОбЕИТЗатычка.Ссылка;
	ОбТовар.ЕдиницаМин=ОбЕИТЗатычка.Ссылка;
	ОбТовар.Записать();
	
	ЕИТЗатычка=ОбЕИТЗатычка.Ссылка;
КонецЕсли;


ТНО_ОРН=Перечисления.ТипыНалогообложения.НДС;
