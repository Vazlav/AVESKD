Перем Каталог,КаталогПоУмолчанию;
Перем ДБФ;




//============================================================================ GtG ===
Функция БульКонвертер(Числом) 
	// Назначение:
	// Делает из числа булево
	//--------------------------------------------------------------------------------
	Если Число(Числом)=1 Тогда
		ВОЗВРАТ Истина; 
	Иначе
		ВОЗВРАТ Ложь;
	КонецЕсли; 
КонецФункции
//============================================================================ GtG ===


Функция ПоискПоСпр(Реквизит,ЗначСтр)
	Спр=Справочники[Реквизит.Метаданные().Имя];
	Рез=Спр.НайтиПоНаименованию(СокрЛп(ЗначСтр),Истина);
	Возврат Рез; // либо что-то либо пустая ссылка
КонецФункции	

                
//============================================================================ GtG ===
Функция СтатусКонвертер  (ПАРАМ) 
	
	ПАР=Врег(сокрЛП(пАРАМ));
	
	Если (Пар="А") или (Пар="A") Тогда
		Возврат Перечисления.Статусы.A;
	ИначеЕсли 	(Пар="W") Тогда
		
		Возврат Перечисления.Статусы.W;
		
	ИначеЕсли (Пар="R")Тогда
		Возврат Перечисления.Статусы.R;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции
//============================================================================ GtG ===

//============================================================================ GtG ===
Функция ГруппыАПКонвертер  (Парам) 
	Прм=СокрЛП(Врег(Парам));
	Для Ы=0 По Перечисления.ГруппыАП.Количество()-1 Цикл
		Зн= Перечисления.ГруппыАП.Получить(Ы);
		Если ПРМ=СокрЛП(ЗН) Тогда
			Возврат Зн;
		Иначе
			Возврат "";
		КонецЕсли; 	
	КонецЦикла; 
	Возврат "";
КонецФункции
//============================================================================ GtG ===
Процедура ДатаНачПриИзменении(Элемент)
	
	//НастройкаПериода.УстановитьПериод(ВыбДатаНач, КонецДня(ВыбДатаКон), Истина);
	
	
КонецПроцедуры

// Процедура - обработчик изменения даты конца периода
//
Процедура ДатаКонПриИзменении(Элемент)
	
	//НастройкаПериода.УстановитьПериод(ВыбДатаНач, КонецДня(ВыбДатаКон), Истина);
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ВыбДатаНач, ?(ВыбДатаКон='0001-01-01', ВыбДатаКон, КонецДня(ВыбДатаКон)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	ВыбДатаНач = НастройкаПериода.ПолучитьДатуНачала();
	ВыбДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
КонецПроцедуры

Процедура ВыбскладНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

//==========================================================GtG====
Процедура ПроверкаВозможностиВыгрузкиДокументов ()  
	//-------------------------------------------------------------------------------
	//Назначение:
	//  Проверяет документы на косяки в кодах А2005
	//  И на чужие ЕИТы в документах
	//  Если косяк обнаруживается - снимается пометка выгрузки в списке документов
	//-------------------------------------------------------------------------------
	
	Для каждого Стр Из СписокДокументов Цикл
		ОбработкаПрерыванияПользователя(); 
		Если Стр.Пометка=Ложь ТОгда
			Продолжить;
		КонецЕсли;	
		ЭлементыФормы.ЛогПоле.ДобавитьСтроку("Проверка "+Стр.Значение);
		
		
		ДокОК=Истина;
		
		Док=Стр.Значение;
		
		// ЗАТЫЧКА Док=Документы.ПеремещениеТовара.ПустаяСсылка();
		
		Для Каждого СТ из Док.Товар Цикл
			ОбработкаПрерыванияПользователя(); 
			//сообщить(СТ.Товар);
			ЕСли СТ.ЕИТ.Владелец<>СТ.Товар Тогда
				ЭлементыФормы.ЛогПоле.ДобавитьСтроку("Стр. "+СТ.НомерСтроки+" "+СТ.Товар+" >> Единица от другого товара!");
				ДокОК=Ложь;
			КонецЕсли;
			
			
			Если СтрДлина(СокрЛП(СТ.ЕИТ.НаименованиеТовара))=0 Тогда
				ЭлементыФормы.ЛогПоле.ДобавитьСтроку("Стр. "+СТ.НомерСтроки+" "+СТ.Товар+" >> Единица без наименования товара!");
				ДокОК=Ложь;
			КонецЕсли; 	
			
			
			
		КонецЦикла;		
		
		Если ДокОК=Истина ТОгда
			ЭлементыФормы.ЛогПоле.ДобавитьСтроку("    ОК можно выгружать!");
		Иначе	
			ЭлементыФормы.ЛогПоле.ДобавитьСтроку("    ОШИБКИ!!! ЭТОТ ДОКУМЕНТ Выгружать нельзя!");
			СТР.Пометка=Ложь;
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры	//ПроверкаВозможностиВыгрузкиДокументов
//==========================================================GtG====

Функция Архивация(Файл)
	//Проверяем на наличие файла (на всяк случай ), потом геть его в архив, а dbf удаляем
	ВремФайл = Новый Файл(Файл);
	Если ВремФайл.Существует() Тогда
		ИмяАрхива = ВремФайл.Путь + "" + ВремФайл.ИмяБезРасширения + ".zip";
		ФайлАрхива = Новый ЗаписьZipФайла(ИмяАрхива, , , МетодСжатияZIP.Сжатие, УровеньСжатияZIP.Максимальный); 
		ФайлАрхива.Добавить(Файл, РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно); 
		ФайлАрхива.Записать();
		УдалитьФайлы(Файл);
		ЭлементыФормы.ЛогПоле.ДобавитьСтроку(ИмяАрхива);
	КонецЕсли;
	Возврат Новый Файл(ИмяАрхива);
КонецФункции

Процедура СформироватьСтруктуруДБФ(ТЗ)
			
			//============================< Генерим структуру DBF по ТЗ >================================GtG===
			Для Каждого Кол из ТЗ.Колонки Цикл
				//----------------------------------------------------------------------
				// Номер документа, дата и код аптеки нам в теле DBF не нужны, посему пропускаем их
				Если (Кол.Имя = "NDOC") или (Кол.Имя = "DateDoc") или (Кол.Имя = "PODRCD") Тогда
					Продолжить;
				КонецЕсли;
				//--------------------------------------------------------Virus----КОНЕЦ--28.11.2007
				
				Если Кол.ТипЗначения.СодержитТип(Тип("Дата")) ТОгда
					Т="D";
					Д=0;
					Тч=0;
				ИначеЕсли Кол.ТипЗначения.СодержитТип(Тип("Число")) Тогда	
					Т="N";
					Д=15;
					Тч=2;
				ИначеЕсли Кол.ТипЗначения.СодержитТип(Тип("Строка")) Тогда	
					Т="S";
					Д=150;
					Тч=0;
				Иначе
					Сообщить("хрен знает какой тип");
				КонецЕсли;
				
				Если (Кол.Имя = "EAN13") или (Кол.Имя = "ExtParty") Тогда
					Т="S";
					Д=13;
					Тч=0;
				ИначеЕсли (Кол.Имя = "NameOKEI") или (Кол.Имя = "NDefOKEI") Тогда
					Т="S";
					Д=10;
					Тч=0;
				ИначеЕсли (Кол.Имя = "INN") Тогда
					Т="S";
					Д=12;
					Тч=0;
				ИначеЕсли (Кол.Имя = "KPP") Тогда
					Т="S";
					Д=9;
					Тч=0;
				ИначеЕсли (Кол.Имя = "NZAKSTR") Тогда
					Т="S";
					Д=20;
					Тч=0;					
				КонецЕсли;
				
				ДБФ.поля.Добавить(Кол.Имя,Т,Д,Тч);
			КонецЦикла;
	
		КонецПроцедуры
		
Процедура ПроверитьСуществованиеКаталога(ИмяКаталога) Экспорт
    КаталогНаДиске = Новый Файл(ИмяКаталога);
    Если КаталогНаДиске.Существует()=Ложь Тогда
		СоздатьКаталог(ИмяКаталога);
    КонецЕсли;
КонецПроцедуры
		

Процедура ВыгрузитьВА2005()
	
	
	
	ЭлементыФормы.тотал.МаксимальноеЗначение=СписокДокументов.Количество();
	
	
	
	ЭлементыФормы.тотал.Значение=0;
	
	
	
	ДЛя Каждого ЗнСп из СписокДокументов Цикл // по документам
		
		ЭлементыФормы.тотал.Значение=ЭлементыФормы.тотал.Значение+1;
		
		ЭлементыФормы.Надпись4.Заголовок=ЗнСп.Значение;
		
		ОбработкаПрерыванияПользователя(); 
		Если ЗнСп.Пометка=Ложь ТОгда
			Продолжить;
		КонецЕсли;
		
		Если Поступления = Истина Тогда
			Если ЗнСп.Значение.Склад.Делфи = Истина Тогда
				Продолжить;
			КонецЕсли;
		Иначе
			Если ЗнСп.Значение.СкладПолучатель.Делфи = Истина Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ВыбДокумСписок= Новый  Массив;
		
		ВыбДокумСписок.Добавить(ЗнСп.Значение);
		
		
		ДБФ= Новый  Xbase();
		
		ДБФ.Кодировка = КодировкаXBase.OEM;
		
		Попытка
			
			
			
			Запрос = Новый Запрос;
			Если Поступления = Истина Тогда
				Запрос.Текст = "ВЫБРАТЬ
				|	ПоступлениеТовараТовар.Ссылка.ВхНомерНакл КАК NDOC,
				|	ПоступлениеТовараТовар.Ссылка.Дата КАК DATEDOC,
				|	ПоступлениеТовараТовар.Ссылка.Склад.КодА2005 КАК PODRCD,
				|	ПоступлениеТовараТовар.ЕИТ.КодА2005 КАК CODE_A05,
				|	ПоступлениеТовараТовар.ЕИТ.Код КАК CODEPST,
				|	ПоступлениеТовараТовар.Товар.Код КАК GSAPCode,
				|	ПоступлениеТовараТовар.Партия.Наименование КАК EAN13,
				|	ПоступлениеТовараТовар.Партия.Наименование КАК ExtParty,
				|	ПоступлениеТовараТовар.Товар.Наименование КАК LongNAME,
				|	ПоступлениеТовараТовар.ЕИТ.НаименованиеТовара КАК NAME,
				|	ВЫБОР
				|		КОГДА ПоступлениеТовараТовар.Товар.ЖНВЛС = ИСТИНА
				|			ТОГДА 1
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК GNVLS,
				|	ВЫБОР
				|		КОГДА ПоступлениеТовараТовар.Товар.СВЛС = ИСТИНА
				|			ТОГДА 1
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК SVLS,
				|	ПоступлениеТовараТовар.Товар.Страна КАК CNTR,
				|	Sum(ПоступлениеТовараТовар.КоличествоФакт) КАК QNT,
				|	ПоступлениеТовараТовар.Товар.КолвоВУпаковке КАК QNTPACK,
				|	ПоступлениеТовараТовар.Коэфф КАК KOEFF,					   
				|	ПоступлениеТовараТовар.Партия.ЦенаПроизводителяБезНДС КАК PRICE1,
				|	0 КАК REGPRC,
				|	ПоступлениеТовараТовар.ЦенаЗакуп - ПоступлениеТовараТовар.НДСЗакуп / ПоступлениеТовараТовар.КоличествоФакт КАК PRICE2,
				|	ПоступлениеТовараТовар.ЦенаРозн КАК PRICER,
				|	ПоступлениеТовараТовар.СтавкаНДС.Ставка КАК NDS,
				|	ПоступлениеТовараТовар.Серия.Наименование КАК SER,
				|	ПоступлениеТовараТовар.Серия.ДатаВыпуска КАК DATEMADE,
				|	ПоступлениеТовараТовар.Серия.СрокГодности КАК GDATE,
				|	ПоступлениеТовараТовар.Серия.Сертификат.Наименование КАК SERTIF,
				|	ПоступлениеТовараТовар.Серия.Сертификат.ДатаВыдачи КАК SERTGIVE,
				|	ПоступлениеТовараТовар.Серия.Сертификат.СрокДействия КАК SERTDATE,
				|	ПоступлениеТовараТовар.Серия.Сертификат.ОрганСертификации.Наименование КАК SERTORG,
				|	ПоступлениеТовараТовар.Партия.НомерГТД.Наименование КАК NUMGTD,
				|	ПоступлениеТовараТовар.Серия.Производитель.Наименование КАК FIRM,
				|	ПоступлениеТовараТовар.Партия.НомерГТД.Страна.Наименование КАК CNTRMADE
				|ИЗ
				|	Документ.ПоступлениеТовара.Товар КАК ПоступлениеТовараТовар
				|ГДЕ
				|	ПоступлениеТовараТовар.Ссылка В(&ВыбДокумСписок)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПоступлениеТовараТовар.ЕИТ.Ссылка,
				|	ПоступлениеТовараТовар.Ссылка.Дата,
				|	ПоступлениеТовараТовар.Партия.Наименование,
				//|	ПоступлениеТовараТовар.КоличествоФакт,
				|	ПоступлениеТовараТовар.Коэфф,
				|	ПоступлениеТовараТовар.ЦенаРозн,
				|	ПоступлениеТовараТовар.СтавкаНДС.Ставка,
				|	ПоступлениеТовараТовар.Ссылка.ВхНомерНакл,
				|	ПоступлениеТовараТовар.Ссылка.Склад.Код,
				|	ПоступлениеТовараТовар.Серия.Наименование,
				|	ПоступлениеТовараТовар.Серия.ДатаВыпуска,
				|	ПоступлениеТовараТовар.Серия.СрокГодности,
				|	ПоступлениеТовараТовар.Серия.Сертификат.Наименование,
				|	ПоступлениеТовараТовар.Серия.Сертификат.ДатаВыдачи,
				|	ПоступлениеТовараТовар.Серия.Сертификат.СрокДействия,
				|	ПоступлениеТовараТовар.Серия.Сертификат.ОрганСертификации.Наименование,
				|	ПоступлениеТовараТовар.Партия.НомерГТД.Наименование,
				|	ПоступлениеТовараТовар.Ссылка.Склад.Ссылка,
				|	ПоступлениеТовараТовар.Ссылка.Склад.КодА2005,
				|	ПоступлениеТовараТовар.Серия.Производитель.Наименование,
				|	ПоступлениеТовараТовар.Партия.ЦенаПроизводителяБезНДС,
				|	ПоступлениеТовараТовар.ЕИТ.КодА2005,
				|	ПоступлениеТовараТовар.Товар.Наименование,
				|	ПоступлениеТовараТовар.Товар.Код,
				|	ПоступлениеТовараТовар.ЕИТ.НаименованиеТовара,
				|	ПоступлениеТовараТовар.ЕИТ.Код,
				|	ПоступлениеТовараТовар.Партия.НомерГТД.Страна.Наименование,
				//|	ПеремещениеТовараТовар.Партия.ЦенаГосрегистрации,
				|	ПоступлениеТовараТовар.Товар.КолвоВУпаковке,
				|	ПоступлениеТовараТовар.Товар.Страна,
				|	ВЫБОР
				|		КОГДА ПоступлениеТовараТовар.Товар.ЖНВЛС = ИСТИНА
				|			ТОГДА 1
				|		ИНАЧЕ 0
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА ПоступлениеТовараТовар.Товар.СВЛС = ИСТИНА
				|			ТОГДА 1
				|		ИНАЧЕ 0
				|	КОНЕЦ,
				|	ПоступлениеТовараТовар.ЦенаЗакуп - ПоступлениеТовараТовар.НДСЗакуп / ПоступлениеТовараТовар.КоличествоФакт
				|УПОРЯДОЧИТЬ ПО
				|	DATEDOC,
				|	NDOC";
		ИНаче				
				Запрос.Текст = "ВЫБРАТЬ
				|	ПеремещениеТовараТовар.Ссылка.Номер КАК NDOC,
				|	ПеремещениеТовараТовар.Ссылка.Дата КАК DATEDOC,
				|	ПеремещениеТовараТовар.Ссылка.СкладПолучатель.КодА2005 КАК PODRCD,
				|	ПеремещениеТовараТовар.ЕИТ.КодА2005 КАК CODE_A05,
				|	ПеремещениеТовараТовар.ЕИТ.Код КАК CODEPST,
				|	ПеремещениеТовараТовар.Товар.Код КАК GSAPCode,
				|	ПеремещениеТовараТовар.Партия.Наименование КАК EAN13,
				|	ПеремещениеТовараТовар.Партия.Наименование КАК ExtParty,
				|	ПеремещениеТовараТовар.Товар.Наименование КАК LongNAME,
				|	ПеремещениеТовараТовар.ЕИТ.НаименованиеТовара КАК NAME,
				|	ВЫБОР
				|		КОГДА ПеремещениеТовараТовар.Товар.ЖНВЛС = ИСТИНА
				|			ТОГДА 1
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК GNVLS,
				|	ВЫБОР
				|		КОГДА ПеремещениеТовараТовар.Товар.СВЛС = ИСТИНА
				|			ТОГДА 1
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК SVLS,
				|	ПеремещениеТовараТовар.Товар.Страна КАК CNTR,
				|	Sum(ПеремещениеТовараТовар.КоличествоФакт) КАК QNT,
				|	ПеремещениеТовараТовар.Товар.КолвоВУпаковке КАК QNTPACK,
				|	ПеремещениеТовараТовар.Коэфф КАК KOEFF,					   
				|	ПеремещениеТовараТовар.Партия.ЦенаПроизводителяБезНДС КАК PRICE1,
				|	0 КАК REGPRC,
				|	ПеремещениеТовараТовар.ЦенаЗакуп - ПеремещениеТовараТовар.НДСЗакуп / ПеремещениеТовараТовар.КоличествоФакт КАК PRICE2,
				|	ПеремещениеТовараТовар.ЦенаРознПол КАК PRICER,
				|	ПеремещениеТовараТовар.СтавкаНДС.Ставка КАК NDS,
				|	ПеремещениеТовараТовар.Серия.Наименование КАК SER,
				|	ПеремещениеТовараТовар.Серия.ДатаВыпуска КАК DATEMADE,
				|	ПеремещениеТовараТовар.Серия.СрокГодности КАК GDATE,
				|	ПеремещениеТовараТовар.Серия.Сертификат.Наименование КАК SERTIF,
				|	ПеремещениеТовараТовар.Серия.Сертификат.ДатаВыдачи КАК SERTGIVE,
				|	ПеремещениеТовараТовар.Серия.Сертификат.СрокДействия КАК SERTDATE,
				|	ПеремещениеТовараТовар.Серия.Сертификат.ОрганСертификации.Наименование КАК SERTORG,
				|	ПеремещениеТовараТовар.Партия.НомерГТД.Наименование КАК NUMGTD,
				|	ПеремещениеТовараТовар.Баркод.Производитель.Наименование КАК FIRM,
				|	ПеремещениеТовараТовар.Партия.НомерГТД.Страна.Наименование КАК CNTRMADE
				|ИЗ
				|	Документ.ПеремещениеТовара.Товар КАК ПеремещениеТовараТовар
				|ГДЕ
				|	ПеремещениеТовараТовар.Ссылка В(&ВыбДокумСписок)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПеремещениеТовараТовар.ЕИТ.Ссылка,
				|	ПеремещениеТовараТовар.Ссылка.Дата,
				|	ПеремещениеТовараТовар.Партия.Наименование,
				//|	ПеремещениеТовараТовар.КоличествоФакт,
				|	ПеремещениеТовараТовар.Коэфф,
				|	ПеремещениеТовараТовар.ЦенаРознПол,
				|	ПеремещениеТовараТовар.СтавкаНДС.Ставка,
				|	ПеремещениеТовараТовар.Ссылка.Номер,
				|	ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Код,
				|	ПеремещениеТовараТовар.Серия.Наименование,
				|	ПеремещениеТовараТовар.Серия.ДатаВыпуска,
				|	ПеремещениеТовараТовар.Серия.СрокГодности,
				|	ПеремещениеТовараТовар.Серия.Сертификат.Наименование,
				|	ПеремещениеТовараТовар.Серия.Сертификат.ДатаВыдачи,
				|	ПеремещениеТовараТовар.Серия.Сертификат.СрокДействия,
				|	ПеремещениеТовараТовар.Серия.Сертификат.ОрганСертификации.Наименование,
				|	ПеремещениеТовараТовар.Партия.НомерГТД.Наименование,
				|	ПеремещениеТовараТовар.Ссылка.Склад.Ссылка,
				|	ПеремещениеТовараТовар.Ссылка.СкладПолучатель.КодА2005,
				|	ПеремещениеТовараТовар.Баркод.Производитель.Наименование,
				|	ПеремещениеТовараТовар.Партия.ЦенаПроизводителяБезНДС,
				|	ПеремещениеТовараТовар.ЕИТ.КодА2005,
				|	ПеремещениеТовараТовар.Товар.Наименование,
				|	ПеремещениеТовараТовар.Товар.Код,
				|	ПеремещениеТовараТовар.ЕИТ.НаименованиеТовара,
				|	ПеремещениеТовараТовар.ЕИТ.Код,
				|	ПеремещениеТовараТовар.Партия.НомерГТД.Страна.Наименование,
				//|	ПеремещениеТовараТовар.Партия.ЦенаГосрегистрации,
				|	ПеремещениеТовараТовар.Товар.КолвоВУпаковке,
				|	ПеремещениеТовараТовар.Товар.Страна,
				|	ВЫБОР
				|		КОГДА ПеремещениеТовараТовар.Товар.ЖНВЛС = ИСТИНА
				|			ТОГДА 1
				|		ИНАЧЕ 0
				|	КОНЕЦ,
				|	ВЫБОР
				|		КОГДА ПеремещениеТовараТовар.Товар.СВЛС = ИСТИНА
				|			ТОГДА 1
				|		ИНАЧЕ 0
				|	КОНЕЦ,
				|	ПеремещениеТовараТовар.ЦенаЗакуп - ПеремещениеТовараТовар.НДСЗакуп / ПеремещениеТовараТовар.КоличествоФакт
				|УПОРЯДОЧИТЬ ПО
				|	DATEDOC,
				|	NDOC";
			КонецЕсли;	
			//----------------------------< берем список документов с формы в качестве фильтра запроса  >--------------------------------GtG---
			//ВыбДокумСписок= Новый  Массив;
			
			//ДЛя Каждого ЗнСп из СписокДокументов Цикл
			//	Если ЗнСп.Пометка=Ложь ТОгда
			//		Продолжить;
			//	КонецЕсли;
			//	ВыбДокумСписок.Добавить(ЗнСп.Значение);
			//КонецЦикла;
			
			Если  ВыбДокумСписок.Количество()=0 Тогда
				ЭлементыФормы.ЛогПоле.ДобавитьСтроку("Ничего не отмечено. Выгрузка не произошла!");
				продолжить;
			КонецЕсли;	
			
			
			
			Запрос.УстановитьПараметр("ВыбДокумСписок",ВыбДокумСписок);
			//----------------------------<  >--------------------------------GtG---
			Рез=Запрос.Выполнить();
			
			ТЗ=Рез.Выгрузить();
			
			
			//============================< Генерим структуру DBF по ТЗ >================================GtG===
			Для Каждого Кол из ТЗ.Колонки Цикл
				Если Кол.ТипЗначения.СодержитТип(Тип("Дата")) ТОгда
					Т="D";
					Д=0;
					Тч=0;
				ИначеЕсли Кол.ТипЗначения.СодержитТип(Тип("Число")) Тогда	
					Т="N";
					Д=15;
					Тч=2;
				ИначеЕсли Кол.ТипЗначения.СодержитТип(Тип("Строка")) Тогда	
					Т="S";
					Д=150;
					Тч=0;
				КонецЕсли;
				
				ДБФ.поля.Добавить(Кол.Имя,Т,Д,Тч);
			КонецЦикла;
			
			
			//Дата=Формат(ТекущаяДата(),"ДФ=MMddyy");
			
			
			Если СокрЛП(Каталог)="" Тогда
				Каталог=КаталогПоУмолчанию;
			КонецЕсли;	
			Если Поступления = Истина Тогда
				ПризнакПрихода = "iP-"; 
			Иначе
				ПризнакПрихода = "i8-"; 
			КонецЕсли;
			
			ПроверитьСуществованиеКаталога(""+Каталог+""+ СокрЛП(ВыбСклад.КодА2005)+"\In");
			ФайлВыгрузки=""+Каталог+""+ СокрЛП(ВыбСклад.КодА2005) + "\In\"+ ПризнакПрихода +""+Формат(ВыбДокумСписок.Получить(0).номер,"ЧЦ=5; ЧВН=; ЧГ=0")+".dbf";
			
			//Сообщить(ФайлВыгрузки);
			
			
			ДБФ.СоздатьФайл(ФайлВыгрузки);
			
			
			//============================< Выгружаем ТЗ в ДБФ >================================GtG===
			ЭлементыФормы.Пр.МаксимальноеЗначение=ТЗ.Количество();
			ЭлементыФормы.Пр.Значение=0;
			
			
			
			
			Для Каждого Стр из ТЗ Цикл
				
				ЭлементыФормы.Пр.Значение=ЭлементыФормы.Пр.Значение+1;
				
				ДБФ.Добавить();
				Инд=0;
				Для Каждого Зн из стр Цикл
					Значение=Зн;
					состояние(Значение);
					ДБф.УстановитьЗначениеПоля(Инд,Значение);
					Инд=Инд+1;
				КонецЦикла;
				Дбф.Записать();
				
			КонецЦикла;
			
			ДБФ.ЗакрытьФайл();
			
			
		Исключение
			Сообщить(ОписаниеОшибки());
			ВОЗВРАТ ;
		КонецПопытки;
		
		
		//----- отметим что документ выгружен -----------------
		// выгруженные документы не редактируются никогда
			
			ДЛя Каждого ЗнСп из СписокДокументов Цикл
				Если ЗнСп.Пометка=Ложь ТОгда
					Продолжить;
				КонецЕсли;
				ДокОб=ЗнСп.Значение.ПолучитьОбъект();
				ДокОб.Статус=Перечисления.СтатусПеремещения.ВыгруженНаАптеку;
				СтрИзм=ДокОб.Изменения.Добавить();
				СтрИзм.Сотрудник    = ПараметрыСеанса.ТекущийСотр;
				СтрИзм.Дата   = ТекущаяДата();
				СтрИзм.ТипИзм   = Перечисления.ДействияНадДокументами.Выгрузка;
				СтрИзм.КомментарийИзменения = "Выгружен в файл";
				докОб.Записать(РежимЗаписиДокумента.Запись);
				
			КонецЦикла;	

		
			ЭлементыФормы.ЛогПоле.ДобавитьСтроку(ФайлВыгрузки);
			
			//возврат;// затычка
			
			//------ доделать на досуге отправка по почте------------------------------
			
			Если СтрДлина(СокрЛП(ВыбСклад.Мэйл))>0 Тогда
				Предупреждение("Отправляем  письмо с файлом электронных накладных на аптеку. "+ВыбСклад.Мэйл,2);
				Тема="Накладные перемещения со склада, выгружено "+ТекущаяДата()+" "+ПараметрыСеанса.ТекущийСотр;
				
				ТекстПисьма="";
				Для Каждого Стр Из СписокДокументов Цикл
					Если Стр.Пометка=Истина ТОгда
						ТекстПисьма=ТекстПисьма+Стр.Представление+Символы.ПС;
					КонецЕсли;
				КонецЦикла;
				
				ОМ14_ОтправитьПисьмоСФайлом(ВыбСклад.Мэйл,Тема,ТекстПисьма,ФайлВыгрузки);
				ЭлементыФормы.ЛогПоле.ДобавитьСтроку("ГОТОВО! Файл отправлен по адресу "+ВыбСклад.Мэйл);
				
			КонецЕсли;
		
	КонецЦикла; // по документам
	
	ЭлементыФормы.ЛогПоле.ДобавитьСтроку("Выгрузка завершена");
	
	
КонецПроцедуры

Процедура ВыгрузитьВДелфи()
	//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	// --------------------------Доделать выгрузку на ФТП ----------------------------
	КаталогФТП = Константы.КаталогФТП.Получить();
	ВременныйКаталог = КаталогВременныхФайлов();
	
	//Если Для_Бухгалтерии=Ложь ТОгда
	//	ПроверкаВозможностиВыгрузкиДокументов(); // если невозможно выгрузить снимет галку
	//КонецЕсли;
	
	ЭлементыФормы.тотал.МаксимальноеЗначение=СписокДокументов.Количество();
	
	
	
	ЭлементыФормы.тотал.Значение=0;
	
	
	
	ДЛя Каждого ЗнСп из СписокДокументов Цикл // по документам
		
		ЭлементыФормы.тотал.Значение=ЭлементыФормы.тотал.Значение+1;
		
		ЭлементыФормы.Надпись4.Заголовок=ЗнСп.Значение;
		
		ОбработкаПрерыванияПользователя(); 
		Если ЗнСп.Пометка=Ложь ТОгда
			Продолжить;
		КонецЕсли;
		
		Если Поступления = Истина Тогда
			Если ЗнСп.Значение.Склад.Делфи = Ложь Тогда
				Продолжить;
			КонецЕсли;
		Иначе
			Если ЗнСп.Значение.СкладПолучатель.Делфи = Ложь Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		
		ВыбДокумСписок= Новый  Массив;
		
		ВыбДокумСписок.Добавить(ЗнСп.Значение);
		
		
		ДБФ= Новый  Xbase;
		
		ДБФ.Кодировка = КодировкаXBase.ANSI;
		
		Попытка
			
			Запрос = Новый Запрос;
			
				//------------------<ВАЖНО>-------------------Virus----28.11.2007
				// в запросе первые три поля (NDOC, DateDoc, PODRCD) НЕ ТРОГАТЬ !!!!!!!!!!!
				// нам они нужны только для разделения 
				// одной ТЗ на количество файлов , которое будет соответствовать кол-ву документов в ТЗ.
				Если Поступления = Истина Тогда
					Запрос.Текст = "ВЫБРАТЬ
					|	ПоступлениеТовараТовар.Ссылка.Номер КАК NDOC,
					|	ПоступлениеТовараТовар.Ссылка.Дата КАК DateDoc,
					|	ПоступлениеТовараТовар.Ссылка.Склад.Код КАК PODRCD,
					|	ПоступлениеТовараТовар.Ссылка.Поставщик.Код КАК IDPOST,
					|	ПоступлениеТовараТовар.Ссылка.Поставщик.ПолнНаименование КАК NMPOST,
					|	ПоступлениеТовараТовар.Ссылка.Поставщик.ИНН КАК INN,
					|	ПоступлениеТовараТовар.Ссылка.Поставщик.КПП КАК KPP,
					|	ПоступлениеТовараТовар.Ссылка.Поставщик.Адрес КАК ADDRESS,
					|	ПоступлениеТовараТовар.Ссылка.ВхНомерНакл КАК NDPOST,
					|	ПоступлениеТовараТовар.Ссылка.ВхДатаНакл КАК DDPOST,
					|	ПоступлениеТовараТовар.Ссылка.Склад.Код КАК PODRAPCD,
					|	ПоступлениеТовараТовар.Ссылка.Склад.Наименование КАК PODRAPNAME,
					|	ПоступлениеТовараТовар.Ссылка.НомерЗаявкиАптеки КАК NumZak,
					//|	ПоступлениеТовараТовар.Партия.Наименование КАК EAN13,
					|	ВЫБОР КОГДА ПоступлениеТовараТовар.Партия.БарКод.Наименование ЕСТЬ NULL ТОГДА
					|		ПоступлениеТовараТовар.Партия.Наименование
					|	ИНАЧЕ
					|		ПоступлениеТовараТовар.Партия.БарКод.Наименование КОНЕЦ КАК EAN13,
					|	ПоступлениеТовараТовар.Партия.Наименование КАК ExtParty,					
					|	ПоступлениеТовараТовар.ЕИТ.Код КАК CodeEIT,
					|	ПоступлениеТовараТовар.Коэфф КАК Koeff,					   
					|	ПоступлениеТовараТовар.Товар.ЕдиницаМин.К КАК KoefDefEIT,					
					|	ПоступлениеТовараТовар.Товар.ЕдиницаМин.Код КАК CodeDefEIT,
					|	ПоступлениеТовараТовар.Серия.Производитель.Код КАК CodeIzg,
					|	ПоступлениеТовараТовар.Серия.СрокГодности КАК GDate,				
					|	ПоступлениеТовараТовар.КоличествоФакт КАК Qnt,
					|	ПоступлениеТовараТовар.Партия.ЦенаПроизводителяБезНДС  КАК Price_Izg,
					|	ПоступлениеТовараТовар.ЦенаЗакуп КАК PricePost,
					|	ПоступлениеТовараТовар.СуммаЗакуп КАК SumPost,
					|	ПоступлениеТовараТовар.ЦенаРозн КАК PriceR,
					|	ПоступлениеТовараТовар.СтавкаНДС.Ставка КАК Nds,				
					|	ПоступлениеТовараТовар.Серия.Наименование КАК Ser,
					|	ПоступлениеТовараТовар.ЕИТ.ЕдИзм.Код КАК OKEI,
					|	ПоступлениеТовараТовар.ЕИТ.ЕдИзм.Наименование КАК NameOKEI,
					|	ПоступлениеТовараТовар.Товар.ЕдиницаМин.ЕдИзм.Код КАК CodDefOKEI,
					|	ПоступлениеТовараТовар.Товар.ЕдиницаМин.ЕдИзм.Наименование КАК NDefOKEI,
					|	ПоступлениеТовараТовар.Товар.ГруппаФТГ.Код КАК CodeFTG,
					|	ПоступлениеТовараТовар.Товар.ГруппаФТГ.Наименование КАК NameFTG,
					|	ПоступлениеТовараТовар.ЕИТ.НаименованиеТовара КАК NameGood,
					|	ПоступлениеТовараТовар.Товар.ЕдиницаМин.НаименованиеТовара КАК NGoodEIT,
					|	ПоступлениеТовараТовар.Серия.Производитель.Наименование КАК NameIzg,
					|	ПоступлениеТовараТовар.Партия.НомерГТД.Наименование КАК GTD,
					|	ПоступлениеТовараТовар.Партия.НомерГТД.Страна.Наименование КАК Country,
					|	0 как NZAKSTR,
					|	ПоступлениеТовараТовар.БойБрак как QNTB
					|ИЗ
					|	Документ.ПоступлениеТовара.Товар КАК ПоступлениеТовараТовар
					|ГДЕ
					|	ПоступлениеТовараТовар.Ссылка В(&ВыбДокумСписок)
					|
					|УПОРЯДОЧИТЬ ПО
					|	DATEDOC,
					|	NDOC";
				ИНаче
					Запрос.Текст = "ВЫБРАТЬ
					|	ПеремещениеТовараТовар.Ссылка.Номер КАК NDOC,
					|	ПеремещениеТовараТовар.Ссылка.Дата КАК DateDoc,
					|	ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Код КАК PODRCD,
					|	ПеремещениеТовараТовар.Ссылка.Склад.Код КАК PODRAPCD,
					|	ПеремещениеТовараТовар.Ссылка.Склад.Наименование КАК PODRAPNAME,
					|	ПеремещениеТовараТовар.Ссылка.НомерЗаявкиАптеки КАК NumZak,
					//|	ПеремещениеТовараТовар.Партия.Наименование КАК EAN13,
					|	ВЫБОР КОГДА ПеремещениеТовараТовар.Партия.БарКод.Наименование ЕСТЬ NULL ТОГДА
					|		ПеремещениеТовараТовар.Партия.Наименование
					|	ИНАЧЕ
					|		ПеремещениеТовараТовар.Партия.БарКод.Наименование КОНЕЦ КАК EAN13,					
					|	ПеремещениеТовараТовар.Партия.Наименование КАК ExtParty,
					|	ПеремещениеТовараТовар.ЕИТ.Код КАК CodeEIT,
					|	ПеремещениеТовараТовар.Коэфф КАК Koeff,					   
					|	ПеремещениеТовараТовар.Товар.ЕдиницаМин.К КАК KoefDefEIT,
					|	ПеремещениеТовараТовар.Товар.ЕдиницаМин.Код КАК CodeDefEIT,
					|	ПеремещениеТовараТовар.Баркод.Производитель.Код КАК CodeIzg,
					|	ПеремещениеТовараТовар.Серия.СрокГодности КАК GDate,				
					|	ПеремещениеТовараТовар.КоличествоФакт КАК Qnt,
					|	ПеремещениеТовараТовар.Партия.ЦенаПроизводителяБезНДС  КАК Price_Izg,
					|	ПеремещениеТовараТовар.ЦенаЗакуп КАК PricePost,
					|	ПеремещениеТовараТовар.ЦенаРознПол КАК PriceR,
					|	ПеремещениеТовараТовар.СтавкаНДС.Ставка КАК Nds,				
					|	ПеремещениеТовараТовар.Серия.Наименование КАК Ser,
					|	ПеремещениеТовараТовар.ЕИТ.ЕдИзм.Код КАК OKEI,
					|	ПеремещениеТовараТовар.ЕИТ.ЕдИзм.Наименование КАК NameOKEI,
					|	ПеремещениеТовараТовар.Товар.ЕдиницаМин.ЕдИзм.Код КАК CodDefOKEI,
					|	ПеремещениеТовараТовар.Товар.ЕдиницаМин.ЕдИзм.Наименование КАК NDefOKEI,
					|	ПеремещениеТовараТовар.Товар.ГруппаФТГ.Код КАК CodeFTG,
					|	ПеремещениеТовараТовар.Товар.ГруппаФТГ.Наименование КАК NameFTG,
					|	ПеремещениеТовараТовар.ЕИТ.НаименованиеТовара КАК NameGood,
					|	ПеремещениеТовараТовар.Товар.ЕдиницаМин.НаименованиеТовара КАК NGoodEIT,
					|	ПеремещениеТовараТовар.Баркод.Производитель.Наименование КАК NameIzg,
					|	ПеремещениеТовараТовар.Партия.НомерГТД.Наименование КАК GTD,
					|	ПеремещениеТовараТовар.Партия.НомерГТД.Страна.Наименование КАК Country
					|ИЗ
					|	Документ.ПеремещениеТовара.Товар КАК ПеремещениеТовараТовар
					|ГДЕ
					|	ПеремещениеТовараТовар.Ссылка В(&ВыбДокумСписок)
					|
					|УПОРЯДОЧИТЬ ПО
					|	DATEDOC,
					|	NDOC";
				КонецЕсли;

			//----------------------------< берем список документов с формы в качестве фильтра запроса  >--------------------------------GtG---
		
			Если  ВыбДокумСписок.Количество()=0 Тогда
				ЭлементыФормы.ЛогПоле.ДобавитьСтроку("Ничего не отмечено. Выгрузка не произошла!");
				продолжить;
			КонецЕсли;	
			
			Запрос.УстановитьПараметр("ВыбДокумСписок",ВыбДокумСписок);
			//----------------------------<  >--------------------------------GtG---
			Рез=Запрос.Выполнить();
			
			ТЗ=Рез.Выгрузить();
			
			//Если СокрЛП(Каталог)="" Тогда
			//	Каталог=КаталогПоУмолчанию;
			//КонецЕсли;	
			//--------------------------------------------------------------------Virus====28.11.2007
			//Один раз формируем структуру DBF, а потом просто
			//будем ее использовать несколько раз
			СформироватьСтруктуруДБФ(ТЗ);
			//--------------------------------------------------------Virus----КОНЕЦ--28.11.2007

			ФайлВыгрузки=ВременныйКаталог + "temp.dbf";
			
			
			
			//============================< Выгружаем ТЗ в ДБФ >================================GtG===
			ЭлементыФормы.Пр.МаксимальноеЗначение=ТЗ.Количество();
			ЭлементыФормы.Пр.Значение=0;
			
			ВремНомДок = "";
			ВремИмяФайла = "";
			НормальноеИмяФайла = "";
			КонечныйКаталогФайла = "";
			Для Каждого Стр из ТЗ Цикл  //Пробегаем по ТЗ ...дальше будем бегать по полям в текущ. строке
				
				//------------------<Правильный изврат>-------------------Virus----28.11.2007
				// сделано для того, чтобы одну структуру DBF использовать несколько раз
				// для множества файлов
				// на каждый документ создаем файлик DBF
				// анализируется: Если получаем следующий номер документа, тогда
				//  - Закрываем файл, с которым работали
				//  - Переименовываем его в нужный нам вид ( имя файла было из 8 символов )
				//  - Формируем имя нового файла и создаем его физически ( структура осталась прежней )
				//--------------------------------------------------------Virus------28.11.2007
				
				Если ВремНомДок <> Стр.NDOC Тогда
					Если ТипЗнч(ЗнСп.Значение.Ссылка) = Тип("ДокументСсылка.ПоступлениеТовара") Тогда
						Префикс = "pst";
					Иначе
						Если ЗнСп.Значение.ВидОперации = Перечисления.ВидыОпераций.МежскладскаяПередача Тогда
							Префикс =  "trs";
						Иначе
							Префикс =  "prh";
						КонецЕсли;
					КонецЕсли;
					ВремНомДок = Стр.NDOC;
					Если ДБФ.Открыта() = Истина Тогда
						ДБФ.ЗакрытьФайл(); // закрываем файл, т.к. прошлись уже по всему доку
						ПереместитьФайл(ВремИмяФайла,НормальноеИмяФайла); // переименовываем в норм. вид
						Архив = Архивация(НормальноеИмяФайла);
						КопироватьФайл(Архив.ПолноеИмя,КонечныйКаталогФайла + "" +Архив.Имя);
					КонецЕсли;
					КонечныйКаталогФайла = КаталогФТП + "apt_" + ?(СтрДлина(Стр.PODRCD)=1,"0"+Стр.PODRCD,Стр.PODRCD) + "\In\";
					ПроверитьСуществованиеКаталога(КонечныйКаталогФайла);
					НормальноеИмяФайла = ВременныйКаталог + "" + Префикс +"" + СокрЛП(Стр.PODRCD) + "_" + СокрЛП(Формат(ВремНомДок,"ЧГ=0")) + "_" + СокрЛП(Лев(Стр.DateDoc,10)) +".dbf";
					ВремИмяФайла =ВременныйКаталог + "temp.dbf"; 
					//ДБФ.Кодировка = КодировкаXBase.ANSI;
					ДБФ.СоздатьФайл(ВремИмяФайла); // Создаем новый для обработки следующего документа
				КонецЕсли;
				//----------------------<Конец правильного изврата>--------------------Virus----КОНЕЦ--28.11.2007
				
				ЭлементыФормы.Пр.Значение=ЭлементыФормы.Пр.Значение+1;
				
				ДБФ.Добавить();
				Инд=0;
				//------------------<ВАЖНО>-------------------Virus----28.11.2007
				// Обход начинаем с третьей колонки, т.к. нам они нужны только для разделения 
				// одной ТЗ на количество файлов , которое будет соответствовать кол-ву документов в ТЗ.
				// ВЫВОД: в запросе первые три поля НЕ ТРОГАТЬ !!!!!!!!!!!
				Партия = "";
				КоэффПоУмолчанию = 1;
				КодЕИТПоУмолчанию = 0;
				ТоварПоУмолчанию = "";
				Подменять = 0;
				Для к=3 По ТЗ.Колонки.Количество() - 1 Цикл  //пробегаем по значениям полей в строке
					Имя = ТЗ.Колонки.Получить(к);
					Если Имя.Имя = "ExtParty" Тогда
						Партия = стр.Получить(к); 
					КонецЕсли;
					
					Значение = стр.Получить(к);
					//Если (Имя.Имя = "KoefDefEIT") и (Значение <> 1) Тогда
					//	Подменять = 1;	
					//КонецЕсли;
					//
					//Если Подменять = 1 Тогда
					//	Если Имя.Имя = "KoefDefEIT" Тогда
					//		
					//		ТХТ = "ВЫБРАТЬ ПЕРВЫЕ 1
					//			  |	ЕИТ.Код КАК Код,
					//			  |	ЕИТ.К КАК К,
					//			  |	ЕИТ.НаименованиеТовара КАК НаименованиеТовара,
					//			  |	ЕИТ.ЕдИзм.Код как КодЕдИзм,
					//			  |	ЕИТ.ЕдИзм.Наименование как ИмяЕдИзм
					//			  |ИЗ
					//			  |	Справочник.ЕИТ КАК ЕИТ
					//			  |ГДЕ
					//			  |	ЕИТ.Владелец = &ТоварСсылка
					//			  |
					//			  |УПОРЯДОЧИТЬ ПО
					//			  |	К ВОЗР,
					//			  |	Код УБЫВ";	
					//		Запрос = Новый Запрос;
					//		Запрос.Текст = ТХТ;
					//		СпрПартия = Справочники.Партии.НайтиПоНаименованию(Партия);
					//		Запрос.УстановитьПараметр("ТоварСсылка",СпрПартия.Владелец);
					//		Рез = Запрос.Выполнить().Выгрузить();
					//		КоэффПоУмолчанию = Рез.Получить(0).К;
					//		КодЕИТПоУмолчанию = Рез.Получить(0).Код;
					//		ТоварПоУмолчанию = Рез.Получить(0).НаименованиеТовара;
					//		КодЕдИзм = Рез.Получить(0).КодЕдИзм;
					//		ИмяЕдИзм = Рез.Получить(0).ИмяЕдИзм;
					//		Значение = КоэффПоУмолчанию;
					//	ИначеЕсли Имя.Имя = "CodeDefEIT" Тогда
					//		Значение = КодЕИТПоУмолчанию;
					//	ИначеЕсли Имя.Имя = "CodDefOKEI" Тогда
					//		Значение = КодЕдИзм;
					//	ИначеЕсли Имя.Имя = "NDefOKEI" Тогда
					//		Значение = ИмяЕдИзм;
					//	ИначеЕсли Имя.Имя = "NGoodEIT" Тогда
					//		Значение = ТоварПоУмолчанию;
					//	КонецЕсли;
					//КонецЕсли;
					
					Если Имя.Имя = "IDPOST" Тогда
						Значение = Формат(100000 + Значение,"ЧГ=0");
					КонецЕсли;					

					состояние(Значение);
					ДБф.УстановитьЗначениеПоля(Инд,Значение);
					Инд=Инд+1;
				КонецЦикла;
				//ДБФ.Кодировка = КодировкаXBase.ANSI;
				Дбф.Записать();
				
			КонецЦикла;
			
			Если ДБФ.Открыта()  = Истина Тогда
				ДБФ.ЗакрытьФайл();
			КонецЕсли;
			//ПереместитьФайл(ВремИмяФайла,НормальноеИмяФайла);  // Переименуем в нормальный вид
			//Архивация(НормальноеИмяФайла);                     // Заархивируем файлик
			ПереместитьФайл(ВремИмяФайла,НормальноеИмяФайла); // переименовываем в норм. вид
			Архив = Архивация(НормальноеИмяФайла);
			КопироватьФайл(Архив.ПолноеИмя,КонечныйКаталогФайла + "" +Архив.Имя);
			
		Исключение
			Сообщить(ОписаниеОшибки());
			ВОЗВРАТ ;
		КонецПопытки;
		
		
		//----- отметим что документ выгружен -----------------
		// выгруженные документы не редактируются никогда
		
			
			ДЛя Каждого ЗнСп из СписокДокументов Цикл
				Если ЗнСп.Пометка=Ложь ТОгда
					Продолжить;
				КонецЕсли;
				ДокОб=ЗнСп.Значение.ПолучитьОбъект();
				Если Поступления=Истина Тогда
					ДокОб.Статус=Перечисления.СтатусПрихода.ВыгруженНаАптеку;
				Иначе
					ДокОб.Статус=Перечисления.СтатусПеремещения.ВыгруженНаАптеку;
				КонецЕсли;
				СтрИзм=ДокОб.Изменения.Добавить();
				СтрИзм.Сотрудник    = ПараметрыСеанса.ТекущийСотр;
				СтрИзм.Дата   = ТекущаяДата();
				СтрИзм.ТипИзм   = Перечисления.ДействияНадДокументами.Выгрузка;
				СтрИзм.КомментарийИзменения = "Выгружен в файл";
				докОб.Записать(РежимЗаписиДокумента.Запись);
				
			КонецЦикла;	
 
		
		
		//возврат;// затычка
		
		//------ доделать на досуге отправка по почте------------------------------
		//Если Для_бухгалтерии=Ложь ТОгда // отправка по почте если для аптек
		//	
		//	Если СтрДлина(СокрЛП(ВыбСклад.Мэйл))>0 Тогда
		//		Предупреждение("Отправляем  письмо с файлом электронных накладных на аптеку. "+ВыбСклад.Мэйл,2);
		//		Тема="Накладные перемещения со склада, выгружено "+ТекущаяДата()+" "+ПараметрыСеанса.ТекущийСотр;
		//		
		//		ТекстПисьма="";
		//		Для Каждого Стр Из СписокДокументов Цикл
		//			Если Стр.Пометка=Истина ТОгда
		//				ТекстПисьма=ТекстПисьма+Стр.Представление+Символы.ПС;
		//			КонецЕсли;
		//		КонецЦикла;
		//		
		//		ОМ14_ОтправитьПисьмоСФайлом(ВыбСклад.Мэйл,Тема,ТекстПисьма,ФайлВыгрузки);
		//		ЭлементыФормы.ЛогПоле.ДобавитьСтроку("ГОТОВО! Файл отправлен по адресу "+ВыбСклад.Мэйл);
		//		
		//	КонецЕсли;
		//КонецЕсли; 
		
	КонецЦикла; // по документам
	
	ЭлементыФормы.ЛогПоле.ДобавитьСтроку("Выгрузка завершена");
	
КонецПроцедуры

Процедура ВыгрузитьВводОстатков()
	
	КаталогПоУмолчанию="\\Z170\Astor_ph2\Mail\";

	//Если Для_Бухгалтерии=Ложь ТОгда
	//	ПроверкаВозможностиВыгрузкиДокументов(); // если невозможно выгрузить снимет галку
	//КонецЕсли;
	
	ЭлементыФормы.тотал.МаксимальноеЗначение=СписокДокументов.Количество();
	
	
	
	ЭлементыФормы.тотал.Значение=0;
	
	
	
	ДЛя Каждого ЗнСп из СписокДокументов Цикл // по документам
		
		ЭлементыФормы.тотал.Значение=ЭлементыФормы.тотал.Значение+1;
		
		ЭлементыФормы.Надпись4.Заголовок=ЗнСп.Значение;
		
		ОбработкаПрерыванияПользователя(); 
		Если ЗнСп.Пометка=Ложь ТОгда
			Продолжить;
		КонецЕсли;
		
		ВыбДокумСписок= Новый  Массив;
		
		ВыбДокумСписок.Добавить(ЗнСп.Значение);
		
		
		ДБФ= Новый  Xbase;
		
		ДБФ.Кодировка = КодировкаXBase.ANSI;
		
		Попытка
			
			Запрос = Новый Запрос;
			
				//------------------<ВАЖНО>-------------------Virus----28.11.2007
				// в запросе первые три поля (NDOC, DateDoc, PODRCD) НЕ ТРОГАТЬ !!!!!!!!!!!
				// нам они нужны только для разделения 
				// одной ТЗ на количество файлов , которое будет соответствовать кол-ву документов в ТЗ.
				Запрос.Текст = "ВЫБРАТЬ
				|	ПеремещениеТовараТовар.Ссылка.Номер КАК NDOC,
				|	ПеремещениеТовараТовар.Ссылка.Дата КАК DateDoc,
				|	ПеремещениеТовараТовар.Ссылка.Склад.Код КАК PODRCD,
				|	0 КАК NumZak,
				|	ПеремещениеТовараТовар.ЕИТ.Код КАК CodeEIT,
				|	ПеремещениеТовараТовар.ЕИТ.Код КАК CodeDefEIT,
				|	ПеремещениеТовараТовар.Баркод.Производитель.Код КАК CodeIzg,
				|	ПеремещениеТовараТовар.Серия.СрокГодности КАК GDate,				
				|	ПеремещениеТовараТовар.КоличествоФакт КАК Qnt,
				|	ПеремещениеТовараТовар.Партия.ЦенаПроизводителяБезНДС  КАК Price_Izg,
				|	ПеремещениеТовараТовар.ЦенаЗакуп КАК PricePost,
				|	ПеремещениеТовараТовар.ЦенаРозн КАК PriceR,
				|	ПеремещениеТовараТовар.СтавкаНДС.Ставка КАК Nds,				
				|	ПеремещениеТовараТовар.Серия.Наименование КАК Ser,
				|	ВЫБОР
				|		КОГДА ПеремещениеТовараТовар.Баркод.Ссылка ЕСТЬ NULL 
				|			ТОГДА ПеремещениеТовараТовар.ЕИТ.ШтрихкодВн
				|		ИНАЧЕ ПеремещениеТовараТовар.Баркод.Наименование
				|	КОНЕЦ КАК EAN13,
				|	ПеремещениеТовараТовар.Партия.Наименование КАК ExtParty,
				|	ПеремещениеТовараТовар.ЕИТ.ЕдИзм.Код КАК OKEI,
				|	ПеремещениеТовараТовар.ЕИТ.ЕдИзм.Наименование КАК NameOKEI,
				|	ПеремещениеТовараТовар.ЕИТ.ЕдИзм.Код КАК CodDefOKEI,
				|	ПеремещениеТовараТовар.ЕИТ.ЕдИзм.Наименование КАК NDefOKEI,
				|	ПеремещениеТовараТовар.Товар.ГруппаФТГ.Код КАК CodeFTG,
				|	ПеремещениеТовараТовар.Товар.ГруппаФТГ.Наименование КАК NameFTG,
				|	ПеремещениеТовараТовар.ЕИТ.НаименованиеТовара КАК NameGood,
				|	ПеремещениеТовараТовар.ЕИТ.НаименованиеТовара КАК NGoodEIT,
				|	ПеремещениеТовараТовар.Коэфф КАК Koeff,					   
				|	ПеремещениеТовараТовар.ЕИТ.К КАК KoefDefEIT,
				|	ПеремещениеТовараТовар.Баркод.Производитель.Наименование КАК NameIzg,
				|	ПеремещениеТовараТовар.Партия.НомерГТД.Наименование КАК GTD,
				|	ПеремещениеТовараТовар.Партия.НомерГТД.Страна.Наименование КАК Country 
				|ИЗ
				|	Документ.ВводОстатков.Товар КАК ПеремещениеТовараТовар
				|ГДЕ
				|	ПеремещениеТовараТовар.Ссылка В(&ВыбДокумСписок)
				|
				|УПОРЯДОЧИТЬ ПО
				|	DATEDOC,
				|	NDOC";
			//----------------------------< берем список документов с формы в качестве фильтра запроса  >--------------------------------GtG---
		
			Если  ВыбДокумСписок.Количество()=0 Тогда
				ЭлементыФормы.ЛогПоле.ДобавитьСтроку("Ничего не отмечено. Выгрузка не произошла!");
				продолжить;
			КонецЕсли;	
			
			Запрос.УстановитьПараметр("ВыбДокумСписок",ВыбДокумСписок);
			//----------------------------<  >--------------------------------GtG---
			Рез=Запрос.Выполнить();
			
			ТЗ=Рез.Выгрузить();
			
			Если СокрЛП(Каталог)="" Тогда
				Каталог=КаталогПоУмолчанию;
			КонецЕсли;	
			//--------------------------------------------------------------------Virus====28.11.2007
			//Один раз формируем структуру DBF, а потом просто
			//будем ее использовать несколько раз
			СформироватьСтруктуруДБФ(ТЗ);
			//--------------------------------------------------------Virus----КОНЕЦ--28.11.2007

			ФайлВыгрузки=КаталогПоУмолчанию + "temp.dbf";
			
			
			
			//============================< Выгружаем ТЗ в ДБФ >================================GtG===
			ЭлементыФормы.Пр.МаксимальноеЗначение=ТЗ.Количество();
			ЭлементыФормы.Пр.Значение=0;
			
			ВремНомДок = "";
			ВремИмяФайла = "";
			НормальноеИмяФайла = "";
			Для Каждого Стр из ТЗ Цикл  //Пробегаем по ТЗ ...дальше будем бегать по полям в текущ. строке
				
				//------------------<Правильный изврат>-------------------Virus----28.11.2007
				// сделано для того, чтобы одну структуру DBF использовать несколько раз
				// для множества файлов
				// на каждый документ создаем файлик DBF
				// анализируется: Если получаем следующий номер документа, тогда
				//  - Закрываем файл, с которым работали
				//  - Переименовываем его в нужный нам вид ( имя файла было из 8 символов )
				//  - Формируем имя нового файла и создаем его физически ( структура осталась прежней )
				//--------------------------------------------------------Virus------28.11.2007
				
				Если ВремНомДок <> Стр.NDOC Тогда
					ВремНомДок = Стр.NDOC;
					Если ДБФ.Открыта() = Истина Тогда
						ДБФ.ЗакрытьФайл(); // закрываем файл, т.к. прошлись уже по всему доку
						ПереместитьФайл(ВремИмяФайла,НормальноеИмяФайла); // переименовываем в норм. вид
						Архивация(НормальноеИмяФайла);
					КонецЕсли;
					НормальноеИмяФайла = КаталогПоУмолчанию + "rst" + СокрЛП(Стр.PODRCD) + "_" + СокрЛП(Формат(ВремНомДок,"ЧГ=0")) + "_" + СокрЛП(Лев(Стр.DateDoc,10)) +".dbf";
					ВремИмяФайла =КаталогПоУмолчанию + "temp.dbf"; 
					//ДБФ.Кодировка = КодировкаXBase.ANSI;
					ДБФ.СоздатьФайл(ВремИмяФайла); // Создаем новый для обработки следующего документа
				КонецЕсли;
				//----------------------<Конец правильного изврата>--------------------Virus----КОНЕЦ--28.11.2007
				
				ЭлементыФормы.Пр.Значение=ЭлементыФормы.Пр.Значение+1;
				
				ДБФ.Добавить();
				Инд=0;
				//------------------<ВАЖНО>-------------------Virus----28.11.2007
				// Обход начинаем с третьей колонки, т.к. нам они нужны только для разделения 
				// одной ТЗ на количество файлов , которое будет соответствовать кол-ву документов в ТЗ.
				// ВЫВОД: в запросе первые три поля НЕ ТРОГАТЬ !!!!!!!!!!!
				Партия = "";
				КоэффПоУмолчанию = 1;
				КодЕИТПоУмолчанию = 0;
				ТоварПоУмолчанию = "";
				Подменять = 0;
				Для к=3 По ТЗ.Колонки.Количество() - 1 Цикл  //пробегаем по значениям полей в строке
					Имя = ТЗ.Колонки.Получить(к);
					Если Имя.Имя = "ExtParty" Тогда
						Партия = стр.Получить(к); 
					КонецЕсли;
					
					Значение = стр.Получить(к);
					Если (Имя.Имя = "KoefDefEIT") и (Значение <> 1) Тогда
						Подменять = 1;	
					КонецЕсли;
					
					Если Подменять = 1 Тогда
						Если Имя.Имя = "KoefDefEIT" Тогда
							
							ТХТ = "ВЫБРАТЬ ПЕРВЫЕ 1
							      |	ЕИТ.Код КАК Код,
							      |	ЕИТ.К КАК К,
							      |	ЕИТ.НаименованиеТовара КАК НаименованиеТовара,
							      |	ЕИТ.ЕдИзм.Код как КодЕдИзм,
							      |	ЕИТ.ЕдИзм.Наименование как ИмяЕдИзм
							      |ИЗ
							      |	Справочник.ЕИТ КАК ЕИТ
							      |ГДЕ
							      |	ЕИТ.Владелец = &ТоварСсылка
							      |
							      |УПОРЯДОЧИТЬ ПО
							      |	К ВОЗР,
								  | Код УБЫВ
							      |	";	
							Запрос = Новый Запрос;
							Запрос.Текст = ТХТ;
							СпрПартия = Справочники.Партии.НайтиПоНаименованию(Партия);
							Запрос.УстановитьПараметр("ТоварСсылка",СпрПартия.Владелец);
							Рез = Запрос.Выполнить().Выгрузить();
							КоэффПоУмолчанию = Рез.Получить(0).К;
							КодЕИТПоУмолчанию = Рез.Получить(0).Код;
							ТоварПоУмолчанию = Рез.Получить(0).НаименованиеТовара;
							КодЕдИзм = Рез.Получить(0).КодЕдИзм;
							ИмяЕдИзм = Рез.Получить(0).ИмяЕдИзм;
							Значение = КоэффПоУмолчанию;
						ИначеЕсли Имя.Имя = "CodeDefEIT" Тогда
							Значение = КодЕИТПоУмолчанию;
						ИначеЕсли Имя.Имя = "CodDefOKEI" Тогда
							Значение = КодЕдИзм;
						ИначеЕсли Имя.Имя = "NDefOKEI" Тогда
							Значение = ИмяЕдИзм;
						ИначеЕсли Имя.Имя = "NGoodEIT" Тогда
							Значение = ТоварПоУмолчанию;
						КонецЕсли;
					 КонецЕсли;
					
					состояние(Значение);

					ДБф.УстановитьЗначениеПоля(Инд,Значение);
					Инд=Инд+1;
				КонецЦикла;
				//ДБФ.Кодировка = КодировкаXBase.ANSI;
				Дбф.Записать();
				
			КонецЦикла;
			
			Если ДБФ.Открыта()  = Истина Тогда
				ДБФ.ЗакрытьФайл();
			КонецЕсли;
			ПереместитьФайл(ВремИмяФайла,НормальноеИмяФайла);  // Переименуем в нормальный вид
			Архивация(НормальноеИмяФайла);                     // Заархивируем файлик
		Исключение
			Сообщить(ОписаниеОшибки());
			ВОЗВРАТ ;
		КонецПопытки;
		
		
		//----- отметим что документ выгружен -----------------
		// выгруженные документы не редактируются никогда
		
		
		ДЛя Каждого ЗнСп из СписокДокументов Цикл
			Если ЗнСп.Пометка=Ложь ТОгда
				Продолжить;
			КонецЕсли;
			ДокОб=ЗнСп.Значение.ПолучитьОбъект();
			//ДокОб.Статус=Перечисления.СтатусПеремещения.ВыгруженНаАптеку;
			СтрИзм=ДокОб.Изменения.Добавить();
			СтрИзм.Сотрудник    = ПараметрыСеанса.ТекущийСотр;
			СтрИзм.Дата   = ТекущаяДата();
			СтрИзм.ТипИзм   = Перечисления.ДействияНадДокументами.Выгрузка;
			СтрИзм.КомментарийИзменения = "Выгружен в файл";
			докОб.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЦикла;	
		
		
		//возврат;// затычка
		
		//------ доделать на досуге отправка по почте------------------------------
		
		Если СтрДлина(СокрЛП(ВыбСклад.Мэйл))>0 Тогда
			Предупреждение("Отправляем  письмо с файлом электронных накладных на аптеку. "+ВыбСклад.Мэйл,2);
			Тема="Накладные перемещения со склада, выгружено "+ТекущаяДата()+" "+ПараметрыСеанса.ТекущийСотр;
			
			ТекстПисьма="";
			Для Каждого Стр Из СписокДокументов Цикл
				Если Стр.Пометка=Истина ТОгда
					ТекстПисьма=ТекстПисьма+Стр.Представление+Символы.ПС;
				КонецЕсли;
			КонецЦикла;
			
			ОМ14_ОтправитьПисьмоСФайлом(ВыбСклад.Мэйл,Тема,ТекстПисьма,ФайлВыгрузки);
			ЭлементыФормы.ЛогПоле.ДобавитьСтроку("ГОТОВО! Файл отправлен по адресу "+ВыбСклад.Мэйл);
			
		КонецЕсли;
		
	КонецЦикла; // по документам
	
	ЭлементыФормы.ЛогПоле.ДобавитьСтроку("Выгрузка завершена");
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	ПроверкаВозможностиВыгрузкиДокументов();
	
	Если ВводОстатков = Истина Тогда
		ВыгрузитьВводОстатков();
		Возврат;
	КонецЕсли;
	
	ВыгрузитьВА2005();
	ВыгрузитьВДелфи();
	
КонецПроцедуры

Процедура ФайлНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	
	ВФ=Новый ДиалогВыбораФайла (РежимДиалогаВыбораФайла.Открытие);
	Вф.МножественныйВыбор=Ложь;
	ВФ.Фильтр="Файлы *.dbf|*.dbf";
	
	
	
	Если ВФ.Выбрать()=Истина тогда
		Файл=ВФ.ПолноеИмяФайла;
	КонецЕсли;  
	
КонецПроцедуры

Процедура ПолучитьСписок();
	

	Если ВыбСклад.Пустая() Тогда 
		эТАфОРМА.ТекущийЭлемент	=ЭтаФорма.ЭлементыФормы.ВыбСклад;
		Предупреждение("Выберите склад-получатель");
		Возврат;
	КонецЕсли;	

	
	Если РежимДобавления = Ложь Тогда
		СписокДокументов.Очистить();
	КонецЕсли;
	
	Ст=Статус;
	//Перечисления.СтатусПеремещения.ЗагруженСоздан;
	
	ЭлементыФормы.пр.Значение=0;
	//ЭлементыФормы.тотал.МаксимальноеЗначение=34;
	//ЭлементыФормы.тотал.Значение=0;
	ДействиеНадДокументом=Перечисления.ДействияНадДокументами.Выгрузка;
	// Запрос1 - выбираем все перемещения по складу, статусу, входящих в период
	// ПеремещениеТовара.Дата >= &ВыбДатаНач - !!Стремно
	Запрос1 = Новый Запрос;
	
	ВыбДатаНачГр=НачалоДня(ВыбДатаНач);
	//Гр= Новый Граница(ВыбДатаНач,ВидГраницы.Включая);
	ВыбДатаКонГр=КонецДня(ВыбДатаКон+1);
	//Гр= Новый Граница(ВыбДатаКон,ВидГраницы.Включая);
	
	Запрос1.УстановитьПараметр("ВыбДатаНач",  ВыбДатаНачГр);
	Запрос1.УстановитьПараметр("ВыбДатаКон",  ВыбДатаКонГр);
	
	
	Запрос1.УстановитьПараметр("Ст",  Статус);
	Запрос1.УстановитьПараметр("ВыбСклад",  ВыбСклад);
	Запрос1.Текст =
	"ВЫБРАТЬ
	|	ПеремещениеТовара.Ссылка КАК Ссылка,
	|	ПеремещениеТовара.ПометкаУдаления КАК ПометкаУдаления,
	|	ПеремещениеТовара.Номер КАК Номер,
	|	ПеремещениеТовара.Дата КАК Дата,
	|	ПеремещениеТовара.Проведен КАК Проведен,
	|	ПеремещениеТовара.Склад КАК Склад,
	|	ПеремещениеТовара.СкладПолучатель КАК СкладПолучатель,
	|	ПеремещениеТовара.Фирма КАК Фирма,
	|	ПеремещениеТовара.СуммаДок КАК СуммаДок,
	|	ПеремещениеТовара.СуммаДокРозн КАК СуммаДокРозн,
	|	ПеремещениеТовара.Статус КАК Статус,
	|	ПеремещениеТовара.Создан КАК Создан,
	|	ПеремещениеТовара.МоментВремени,
	|	ПеремещениеТовара.СуммаДокРознПол  Как ПоказатьРознСумму
	|ИЗ
	|	Документ.ПеремещениеТовара КАК ПеремещениеТовара
	|ГДЕ
	|	ПеремещениеТовара.Дата between &ВыбДатаНач and &ВыбДатаКон
	|	И ПеремещениеТовара.Статус = &Ст
	|	И ПеремещениеТовара.СкладПолучатель = &ВыбСклад";
	
	
	Если ВводОстатков=Истина Тогда
		Запрос1.Текст =
		"ВЫБРАТЬ
		|	ВводОстатков.Ссылка КАК Ссылка,
		|	ВводОстатков.ПометкаУдаления КАК ПометкаУдаления,
		|	ВводОстатков.Номер КАК Номер,
		|	ВводОстатков.Дата КАК Дата,
		|	ВводОстатков.Проведен КАК Проведен,
		|	ВводОстатков.Склад КАК Склад,
		|	ВводОстатков.Склад КАК СкладПолучатель,
		|	ВводОстатков.Фирма КАК Фирма,
		|	ВводОстатков.СуммаДок КАК СуммаДок,
		|	ВводОстатков.СуммаДокРозн КАК СуммаДокРозн,
		|	ВводОстатков.Статус КАК Статус,
		|	ВводОстатков.МоментВремени,
		|	ВводОстатков.СуммаДок  Как ПоказатьРознСумму
		|ИЗ
		|	Документ.ВводОстатков КАК ВводОстатков
		|ГДЕ
		|	ВводОстатков.Дата between &ВыбДатаНач and &ВыбДатаКон
		|   And 
		|   ВводОстатков.Проведен = TRUE
		|	И ВводОстатков.Склад = &ВыбСклад";

	КонецЕсли; 
	
	Если Поступления=Истина Тогда
		Запрос1.Текст =
		"ВЫБРАТЬ
		|	ПоступлениеТовара.Ссылка КАК Ссылка,
		|	ПоступлениеТовара.ПометкаУдаления КАК ПометкаУдаления,
		|	ПоступлениеТовара.Номер КАК Номер,
		|	ПоступлениеТовара.Дата КАК Дата,
		|	ПоступлениеТовара.ВхНомерНакл КАК НомерПоставщика,
		|	ПоступлениеТовара.Проведен КАК Проведен,
		|	ПоступлениеТовара.Склад КАК Склад,
		|	ПоступлениеТовара.Склад КАК СкладПолучатель,
		|	ПоступлениеТовара.Фирма КАК Фирма,
		|	ПоступлениеТовара.СуммаДок КАК СуммаДок,
		|	ПоступлениеТовара.СуммаДокРозн КАК СуммаДокРозн,
		|	ПоступлениеТовара.Поставщик КАК Поставщик,
		|	ПоступлениеТовара.Статус КАК Статус,
		|	ПоступлениеТовара.МоментВремени,
		|	ПоступлениеТовара.СуммаДок  Как ПоказатьРознСумму
		|ИЗ
		|	Документ.ПоступлениеТовара КАК ПоступлениеТовара
		|ГДЕ
		|	ПоступлениеТовара.Дата between &ВыбДатаНач and &ВыбДатаКон
		|   And 
		|   ПоступлениеТовара.Проведен = TRUE
		//|	И ПоступлениеТовара.Статус = &Ст
		|	И ПоступлениеТовара.Склад = &ВыбСклад";

	КонецЕсли; 
	
	
	Рез1=Запрос1.Выполнить().Выбрать();
	ЭлементыФормы.Пр.МаксимальноеЗначение=Рез1.Количество();
	Пока Рез1.Следующий() Цикл
		Рез1Ссылка=Рез1.Ссылка;
		ЭлементыФормы.пр.Значение=ЭлементыФормы.пр.Значение+1;
		// Запрос2 - выбираем по текущему документу в табличной части Изменения, был ли этот документ ранее выгружен хоть раз, выводим дату выгрузки в список документов
		Запрос2 = Новый Запрос;
		Запрос2.УстановитьПараметр("Рез1Ссылка",  Рез1Ссылка.Ссылка);
		Запрос2.УстановитьПараметр("ДействиеНадДокументом",  ДействиеНадДокументом);
		Если ВводОстатков=Ложь Тогда
			Запрос2.Текст =
			"ВЫБРАТЬ 
			|	ПеремещениеТовараИзменения.Ссылка,
			|	ПеремещениеТовараИзменения.НомерСтроки,
			|	ПеремещениеТовараИзменения.Сотрудник,
			|	ПеремещениеТовараИзменения.Дата,
			|	ПеремещениеТовараИзменения.ТипИзм КАК ТипИзм,
			|	ПеремещениеТовараИзменения.КомментарийИзменения,
			|	ПеремещениеТовараИзменения.Ссылка.Ссылка 
			|ИЗ
			|	Документ.ПеремещениеТовара.Изменения КАК ПеремещениеТовараИзменения
			|ГДЕ ПеремещениеТовараИзменения.Ссылка=&Рез1Ссылка
			| И ПеремещениеТовараИзменения.ТипИзм=&ДействиеНадДокументом" ;
		Иначе
			Запрос2.Текст =
			"ВЫБРАТЬ 
			|	ВводОстатковИзменения.Ссылка,
			|	ВводОстатковИзменения.НомерСтроки,
			|	ВводОстатковИзменения.Сотрудник,
			|	ВводОстатковИзменения.Дата,
			|	ВводОстатковИзменения.ТипИзм КАК ТипИзм,
			|	ВводОстатковИзменения.КомментарийИзменения,
			|	ВводОстатковИзменения.Ссылка.Ссылка 
			|ИЗ
			|	Документ.ВводОстатков.Изменения КАК ВводОстатковИзменения
			|ГДЕ ВводОстатковИзменения.Ссылка=&Рез1Ссылка
			| И ВводОстатковИзменения.ТипИзм=&ДействиеНадДокументом" ;
			
		КонецЕсли;
		Рез2=Запрос2.выполнить().Выбрать();
		Рез2.Следующий();
		Если Поступления = Истина Тогда
			НомерПост = Рез1.НомерПоставщика;
			Поставщик = Рез1.Поставщик;
		Иначе
			НомерПост = "";
			Поставщик = "";
		КонецЕсли;
		Если Рез2.ТипИзм=Перечисления.ДействияНадДокументами.Выгрузка Тогда
			ССД = СписокДокументов.Добавить(Рез1.Ссылка,""+Строка(Рез1.Ссылка)+" Документ "+Рез2.ТипИзм+"  "+Рез2.Дата+"   Розн. сумма: "+Рез1.ПоказатьРознСумму  + "   " + Рез1.Статус + "	" + Поставщик + " № " + НомерПост, Ложь);
		Иначе
			ССД = СписокДокументов.Добавить(Рез1.Ссылка,""+Строка(Рез1.Ссылка)+Рез2.ТипИзм+"   Розн. сумма: "+Рез1.ПоказатьРознСумму   + "   " + Рез1.Статус  + "	" + Поставщик + " № " + НомерПост, Истина );
		КонецЕсли;
		

		
	КонецЦикла;
	
	//ЭлементыФормы.тотал.Значение=ЭлементыФормы.тотал.Значение+1;
	
КонецПроцедуры	

Процедура ВыделитьВсеПриИзменении()
	СнятьВыделение=Ложь;
	ИзменитьВыделение=Ложь;
	Для Каждого ЭлементСписка Из СписокДокументов Цикл 
		Если ЭлементСписка.Пометка = Ложь Тогда
			ЭлементСписка.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СнятьВыделениеПриИзменении(Элемент)
	ВыделитьВсе=Ложь;
	ИзменитьВыделение=Ложь;
	Для Каждого ЭлементСписка Из СписокДокументов Цикл 
		Если ЭлементСписка.Пометка = Истина  Тогда
			ЭлементСписка.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ИзменитьВыделениеПриИзменении(Элемент)
	СнятьВыделение=Ложь;
	ВыделитьВсе=Ложь;
	Для Каждого ЭлементСписка Из СписокДокументов Цикл 
		ЭлементСписка.Пометка = НЕ ЭлементСписка.Пометка;	 
	КонецЦикла;
КонецПроцедуры

Процедура ФайлОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры


Процедура ПриОткрытии()
	// типа начальные значения
	
	ВыбДатаНач=НачалоГода(ТекущаяДата());
	ВыбДатаКон=ТекущаяДата();
КонецПроцедуры

Процедура ВыбСкладОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Каталог=ВыбранноеЗначение.КаталогОбмена; // без \ на конце
	ЭлементыФормы.Надпись4.Заголовок="Выгрузка в папку: "+Каталог;
	ЭлементыФормы.Надпись5.Заголовок=ВыбранноеЗначение.Мэйл;
	
	
	
	
КонецПроцедуры

Процедура ОчиститьЛогНажатие(Элемент)
	ЭлементыФормы.ЛогПоле.Очистить();
КонецПроцедуры

Процедура ОсновныеДействияФормыПроверить(Кнопка)
	// Вставить содержимое обработчика.
	ПроверкаВозможностиВыгрузкиДокументов();  
КонецПроцедуры

Процедура Для_бухгалтерииПриИзменении(Элемент)
	// Вставить содержимое обработчика.

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Предупреждение("Обработка по выгрузке накладных временно отключена",5);
    Отказ = Истина;
	
КонецПроцедуры


Статус=Перечисления.СтатусПеремещения.Перемещен;


КаталогПоУмолчанию=КаталогВременныхФайлов();//--"\\Z170\Astor_ph2\Mail\";
Аптека2005 = Истина;