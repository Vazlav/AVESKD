
Процедура РассылкаИтоговПоВыручке() Экспорт
	
	ВыполняемаяПроцедура = ОМ_ТСО.ИнициализироватьВыполняемуюПроцедуру(6);
	Если ВыполняемаяПроцедура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	ТекДата = ТекущаяДата();
	
	Если Час(ТекДата) > 11 Тогда
		ВидПоказателей = "Предварительные";
		АдресаРассылки = ПолучитьАдресаРассылки(6);		
		ДатаНачала = НачалоДня(ТекДата);
	Иначе  
		ВидПоказателей = "Итоговые";
		АдресаРассылки = ПолучитьАдресаРассылки(5);
		ДатаНачала = НачалоДня(ТекДата)-24*60*60;
	КонецЕсли;
	
	Для Вариант = 1 По 2 Цикл
		
		ТекстЗапроса =		
		"ВЫБРАТЬ
		|	СУММА(ОТЧ_ОтчетПоВыручкеОбороты.СуммаВыручкиОборот) КАК СуммаВыручки,
		|	СУММА(ОТЧ_ОтчетПоВыручкеОбороты.КолвоЧековОборот) КАК КолвоЧеков,
		|	СУММА(ВЫБОР
		|			КОГДА МестаХраненияСПБ.Ссылка ЕСТЬ NULL
		|				ТОГДА 0
		|			ИНАЧЕ ОТЧ_ОтчетПоВыручкеОбороты.СуммаВыручкиОборот
		|		КОНЕЦ) КАК СуммаВыручки_СПБ,
		|	СУММА(ВЫБОР
		|			КОГДА МестаХраненияСПБ.Ссылка ЕСТЬ NULL
		|				ТОГДА 0
		|			ИНАЧЕ ОТЧ_ОтчетПоВыручкеОбороты.КолвоЧековОборот
		|		КОНЕЦ) КАК КолвоЧеков_СПБ
		|ПОМЕСТИТЬ втИтоги1
		|ИЗ
		|	РегистрНакопления.ОТЧ_ОтчетПоВыручке.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			,
		|			&Вариант = 1
		|					И ФирмаКод <> 181
		|				ИЛИ &Вариант = 2
		|					И ФирмаКод = 181) КАК ОТЧ_ОтчетПоВыручкеОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХраненияСПБ
		|		ПО ОТЧ_ОтчетПоВыручкеОбороты.СкладКод = МестаХраненияСПБ.Код
		|			И (МестаХраненияСПБ.СубъектРФ В (&СубъектыСПБ))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реализации.СкладКод КАК СкладКод,
		|	ВЫБОР
		|		КОГДА ТоварыСТМСрезПоследних.ТипСТМ ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК СТМ,
		|	СУММА(Реализации.СуммаЗакупБезНДС) КАК СуммаПродажЗакупБезНДС,
		|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(РЦП.Цена, ЕСТЬNULL(РЦ.Цена, 0)) * Реализации.Количество / УЗ_Партии.К / (1 + УЗ_Партии.СтавкаНДСРозн / 100) КАК ЧИСЛО(12, 2))) КАК СуммаПродажРознБезНДС,
		|	СУММА(ВЫБОР
		|			КОГДА ВходящиеЦеныПоставщика.ЦенаЗакупБезНДС ЕСТЬ NULL
		|				ТОГДА Реализации.СуммаЗакупБезНДС
		|			ИНАЧЕ ВЫРАЗИТЬ(ВходящиеЦеныПоставщика.ЦенаЗакупБезНДС * Реализации.Количество / УЗ_Партии.К КАК ЧИСЛО(15, 2))
		|		КОНЕЦ) КАК СуммаПродажЗакупВходящаяБезНДС,
		|	СУММА(ВЫРАЗИТЬ(Реализации.СуммаЗакупБезНДС * (1 + Реализации.СтавкаНДСЗакуп / 100) КАК ЧИСЛО(15, 2))) КАК СуммаПродажЗакупСНДС,
		|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(РЦП.Цена, ЕСТЬNULL(РЦ.Цена, 0)) * Реализации.Количество / УЗ_Партии.К КАК ЧИСЛО(12, 2))) КАК СуммаПродажРознСНДС,
		|	СУММА(ВЫБОР
		|			КОГДА ВходящиеЦеныПоставщика.ЦенаЗакупБезНДС ЕСТЬ NULL
		|				ТОГДА ВЫРАЗИТЬ(Реализации.СуммаЗакупБезНДС * (1 + Реализации.СтавкаНДСЗакуп / 100) КАК ЧИСЛО(15, 2))
		|			ИНАЧЕ ВЫРАЗИТЬ(ВходящиеЦеныПоставщика.ЦенаЗакупБезНДС * (1 + ВходящиеЦеныПоставщика.СтавкаНДС / 100) * Реализации.Количество / УЗ_Партии.К КАК ЧИСЛО(15, 2))
		|		КОНЕЦ) КАК СуммаПродажЗакупВходящаяСНДС
		|ПОМЕСТИТЬ втИтоги2
		|ИЗ
		|	РегистрНакопления.УЗ_ПродажиСменККМ КАК Реализации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
		|		ПО Реализации.ПартияКод = УЗ_Партии.Код
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВходящиеЦеныПоставщика КАК ВходящиеЦеныПоставщика
		|		ПО Реализации.ПартияКод = ВходящиеЦеныПоставщика.ПартияКод
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
		|		ПО Реализации.ТоварКод = ТоварыСТМСрезПоследних.Товар.Код
		|			И (ТоварыСТМСрезПоследних.ТипСТМ В (&ТипыСТМ))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦены КАК РЦ
		|		ПО Реализации.СкладКод = РЦ.АптекаКод
		|			И Реализации.ТоварКод = РЦ.ТоварКод
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦеныПоПартиям КАК РЦП
		|		ПО Реализации.СкладКод = РЦП.АптекаКод
		|			И Реализации.ПартияКод = РЦП.ПартияКод
		|ГДЕ
		|	Реализации.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Реализации.Активность
		|	И (&Вариант = 1
		|				И Реализации.ФирмаКод <> 181
		|			ИЛИ &Вариант = 2
		|				И Реализации.ФирмаКод = 181)
		|
		|СГРУППИРОВАТЬ ПО
		|	Реализации.СкладКод,
		|	ВЫБОР
		|		КОГДА ТоварыСТМСрезПоследних.ТипСТМ ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Реализации.СкладКод,
		|	ВЫБОР
		|		КОГДА ТоварыСТМСрезПоследних.ТипСТМ ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	СУММА(ВЫРАЗИТЬ(Реализации.СуммаЗакупСНДС / (1 + УЗ_Партии.СтавкаНДСЗакуп / 100) КАК ЧИСЛО(15, 2))),
		|	СУММА(ВЫРАЗИТЬ(Реализации.СуммаРозн / (1 + УЗ_Партии.СтавкаНДСРозн / 100) КАК ЧИСЛО(12, 2))),
		|	СУММА(ВЫБОР
		|			КОГДА ВходящиеЦеныПоставщика.ЦенаЗакупБезНДС ЕСТЬ NULL
		|				ТОГДА ВЫРАЗИТЬ(Реализации.СуммаЗакупСНДС / (1 + УЗ_Партии.СтавкаНДСЗакуп / 100) КАК ЧИСЛО(15, 2))
		|			ИНАЧЕ ВЫРАЗИТЬ(ВходящиеЦеныПоставщика.ЦенаЗакупБезНДС * Реализации.Количество / УЗ_Партии.К КАК ЧИСЛО(15, 2))
		|		КОНЕЦ),
		|	СУММА(Реализации.СуммаЗакупСНДС),
		|	СУММА(Реализации.СуммаРозн),
		|	СУММА(ВЫБОР
		|			КОГДА ВходящиеЦеныПоставщика.ЦенаЗакупБезНДС ЕСТЬ NULL
		|				ТОГДА Реализации.СуммаЗакупСНДС
		|			ИНАЧЕ ВЫРАЗИТЬ(ВходящиеЦеныПоставщика.ЦенаЗакупБезНДС * (1 + ВходящиеЦеныПоставщика.СтавкаНДС / 100) * Реализации.Количество / УЗ_Партии.К КАК ЧИСЛО(15, 2))
		|		КОНЕЦ)
		|ИЗ
		|	РегистрНакопления.УЗ_РеализацииККМ КАК Реализации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
		|		ПО Реализации.ПартияКод = УЗ_Партии.Код
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВходящиеЦеныПоставщика КАК ВходящиеЦеныПоставщика
		|		ПО Реализации.ПартияКод = ВходящиеЦеныПоставщика.ПартияКод
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
		|		ПО Реализации.ТоварКод = ТоварыСТМСрезПоследних.Товар.Код
		|			И (ТоварыСТМСрезПоследних.ТипСТМ В (&ТипыСТМ))
		|ГДЕ
		|	Реализации.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Реализации.Активность
		|	И (&Вариант = 1
		|				И Реализации.ФирмаКод <> 181
		|			ИЛИ &Вариант = 2
		|				И Реализации.ФирмаКод = 181)
		|
		|СГРУППИРОВАТЬ ПО
		|	Реализации.СкладКод,
		|	ВЫБОР
		|		КОГДА ТоварыСТМСрезПоследних.ТипСТМ ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА МестаХранения.СубъектРФ В (&СубъектыСПБ)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК СПБ,
		|	СУММА(ВЫБОР
		|			КОГДА МестаХранения.ТипНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.УСН)
		|				ТОГДА втИтоги2.СуммаПродажЗакупСНДС
		|			ИНАЧЕ втИтоги2.СуммаПродажЗакупБезНДС
		|		КОНЕЦ) КАК СуммаПродажЗакупБезНДС,
		|	СУММА(ВЫБОР
		|			КОГДА МестаХранения.ТипНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.УСН)
		|				ТОГДА втИтоги2.СуммаПродажРознСНДС
		|			ИНАЧЕ втИтоги2.СуммаПродажРознБезНДС
		|		КОНЕЦ) КАК СуммаПродажРознБезНДС,
		|	СУММА(ВЫБОР
		|			КОГДА втИтоги2.СТМ = ЛОЖЬ
		|				ТОГДА 0
		|			КОГДА МестаХранения.ТипНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.УСН)
		|				ТОГДА втИтоги2.СуммаПродажРознСНДС
		|			ИНАЧЕ втИтоги2.СуммаПродажРознБезНДС
		|		КОНЕЦ) КАК СуммаПродажРознБезНДС_СТМ,
		|	СУММА(ВЫБОР
		|			КОГДА МестаХранения.ТипНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.УСН)
		|				ТОГДА втИтоги2.СуммаПродажЗакупВходящаяСНДС
		|			ИНАЧЕ втИтоги2.СуммаПродажЗакупВходящаяБезНДС
		|		КОНЕЦ) КАК СуммаПродажЗакупВходящаяБезНДС
		|ПОМЕСТИТЬ втИтоги3
		|ИЗ
		|	втИтоги2 КАК втИтоги2
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
		|		ПО втИтоги2.СкладКод = МестаХранения.Код
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА МестаХранения.СубъектРФ В (&СубъектыСПБ)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(втИтоги3.СуммаПродажЗакупБезНДС) КАК СуммаПродажЗакупБезНДС,
		|	СУММА(втИтоги3.СуммаПродажРознБезНДС_СТМ) КАК СуммаПродажРознБезНДС_СТМ,
		|	СУММА(втИтоги3.СуммаПродажРознБезНДС) КАК СуммаПродажРознБезНДС,
		|	СУММА(втИтоги3.СуммаПродажЗакупВходящаяБезНДС) КАК СуммаПродажЗакупВходящаяБезНДС,
		|	СУММА(ВЫБОР
		|			КОГДА втИтоги3.СПБ
		|				ТОГДА втИтоги3.СуммаПродажЗакупБезНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПродажЗакупБезНДС_СПБ,
		|	СУММА(ВЫБОР
		|			КОГДА втИтоги3.СПБ
		|				ТОГДА втИтоги3.СуммаПродажРознБезНДС_СТМ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПродажРознБезНДС_СТМ_СПБ,
		|	СУММА(ВЫБОР
		|			КОГДА втИтоги3.СПБ
		|				ТОГДА втИтоги3.СуммаПродажРознБезНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПродажРознБезНДС_СПБ,
		|	СУММА(ВЫБОР
		|			КОГДА втИтоги3.СПБ
		|				ТОГДА втИтоги3.СуммаПродажЗакупВходящаяБезНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПродажЗакупВходящаяБезНДС_СПБ
		|ПОМЕСТИТЬ втИтоги4
		|ИЗ
		|	втИтоги3 КАК втИтоги3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ втИтоги2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ втИтоги3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИтоги1.СуммаВыручки КАК СуммаВыручки,
		|	втИтоги1.КолвоЧеков КАК КолвоЧеков,
		|	ВЫБОР
		|		КОГДА втИтоги1.КолвоЧеков = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(втИтоги1.СуммаВыручки / втИтоги1.КолвоЧеков КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК СуммаСреднегоЧека,
		|	ВЫБОР
		|		КОГДА втИтоги4.СуммаПродажЗакупБезНДС = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((втИтоги4.СуммаПродажРознБезНДС - втИтоги4.СуммаПродажЗакупБезНДС) / втИтоги4.СуммаПродажЗакупБезНДС * 100 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК ПроцентРозничнойНаценки,
		|	ВЫБОР
		|		КОГДА втИтоги4.СуммаПродажЗакупВходящаяБезНДС = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((втИтоги4.СуммаПродажРознБезНДС - втИтоги4.СуммаПродажЗакупВходящаяБезНДС) / втИтоги4.СуммаПродажЗакупВходящаяБезНДС * 100 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК ПроцентСквознойНаценки,
		|	ВЫБОР
		|		КОГДА втИтоги4.СуммаПродажРознБезНДС = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(втИтоги4.СуммаПродажРознБезНДС_СТМ / втИтоги4.СуммаПродажРознБезНДС * 100 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК ПроцентПродажСТМ,
		|	втИтоги1.СуммаВыручки_СПБ КАК СуммаВыручки_СПБ,
		|	втИтоги1.КолвоЧеков_СПБ КАК КолвоЧеков_СПБ,
		|	ВЫБОР
		|		КОГДА втИтоги1.КолвоЧеков_СПБ = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(втИтоги1.СуммаВыручки_СПБ / втИтоги1.КолвоЧеков_СПБ КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК СуммаСреднегоЧека_СПБ,
		|	ВЫБОР
		|		КОГДА втИтоги4.СуммаПродажЗакупБезНДС_СПБ = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((втИтоги4.СуммаПродажРознБезНДС_СПБ - втИтоги4.СуммаПродажЗакупБезНДС_СПБ) / втИтоги4.СуммаПродажЗакупБезНДС_СПБ * 100 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК ПроцентРозничнойНаценки_СПБ,
		|	ВЫБОР
		|		КОГДА втИтоги4.СуммаПродажЗакупВходящаяБезНДС_СПБ = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((втИтоги4.СуммаПродажРознБезНДС_СПБ - втИтоги4.СуммаПродажЗакупВходящаяБезНДС_СПБ) / втИтоги4.СуммаПродажЗакупВходящаяБезНДС_СПБ * 100 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК ПроцентСквознойНаценки_СПБ,
		|	ВЫБОР
		|		КОГДА втИтоги4.СуммаПродажРознБезНДС_СПБ = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(втИтоги4.СуммаПродажРознБезНДС_СТМ_СПБ / втИтоги4.СуммаПродажРознБезНДС_СПБ * 100 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК ПроцентПродажСТМ_СПБ,
		|	втИтоги1.СуммаВыручки - втИтоги1.СуммаВыручки_СПБ КАК СуммаВыручки_неСПБ,
		|	втИтоги1.КолвоЧеков - втИтоги1.КолвоЧеков_СПБ КАК КолвоЧеков_неСПБ,
		|	ВЫБОР
		|		КОГДА втИтоги1.КолвоЧеков - втИтоги1.КолвоЧеков_СПБ = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((втИтоги1.СуммаВыручки - втИтоги1.СуммаВыручки_СПБ) / (втИтоги1.КолвоЧеков - втИтоги1.КолвоЧеков_СПБ) КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК СуммаСреднегоЧека_неСПБ,
		|	ВЫБОР
		|		КОГДА втИтоги4.СуммаПродажЗакупБезНДС - втИтоги4.СуммаПродажЗакупБезНДС_СПБ = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((втИтоги4.СуммаПродажРознБезНДС - втИтоги4.СуммаПродажРознБезНДС_СПБ - (втИтоги4.СуммаПродажЗакупБезНДС - втИтоги4.СуммаПродажЗакупБезНДС_СПБ)) / (втИтоги4.СуммаПродажЗакупБезНДС - втИтоги4.СуммаПродажЗакупБезНДС_СПБ) * 100 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК ПроцентРозничнойНаценки_неСПБ,
		|	ВЫБОР
		|		КОГДА втИтоги4.СуммаПродажЗакупВходящаяБезНДС - втИтоги4.СуммаПродажЗакупВходящаяБезНДС_СПБ = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((втИтоги4.СуммаПродажРознБезНДС - втИтоги4.СуммаПродажРознБезНДС_СПБ - (втИтоги4.СуммаПродажЗакупВходящаяБезНДС - втИтоги4.СуммаПродажЗакупВходящаяБезНДС_СПБ)) / (втИтоги4.СуммаПродажЗакупВходящаяБезНДС - втИтоги4.СуммаПродажЗакупВходящаяБезНДС_СПБ) * 100 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК ПроцентСквознойНаценки_неСПБ,
		|	ВЫБОР
		|		КОГДА втИтоги4.СуммаПродажРознБезНДС - втИтоги4.СуммаПродажРознБезНДС_СПБ = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((втИтоги4.СуммаПродажРознБезНДС_СТМ - втИтоги4.СуммаПродажРознБезНДС_СТМ_СПБ) / (втИтоги4.СуммаПродажРознБезНДС - втИтоги4.СуммаПродажРознБезНДС_СПБ) * 100 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК ПроцентПродажСТМ_неСПБ
		|ИЗ
		|	втИтоги4 КАК втИтоги4,
		|	втИтоги1 КАК втИтоги1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ втИтоги1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ втИтоги4";
		
		ТипыСТМ = Новый Массив;
		ТипыСТМ.Добавить(Перечисления.ТипыСТМ.СТМ);
		ТипыСТМ.Добавить(Перечисления.ТипыСТМ.УсловныйСТМ);		
		
		СубъектыСПБ = Новый Массив;
		СубъектыСПБ.Добавить(Справочники.СубъектыРФ.НайтиПоКоду(32));
		СубъектыСПБ.Добавить(Справочники.СубъектыРФ.НайтиПоКоду(14));
		Если Вариант = 2 Тогда
			СубъектыСПБ.Добавить(Справочники.СубъектыРФ.НайтиПоКоду(18));
			СубъектыСПБ.Добавить(Справочники.СубъектыРФ.НайтиПоКоду(50));
			СубъектыСПБ.Добавить(Справочники.СубъектыРФ.НайтиПоКоду(45));
			СубъектыСПБ.Добавить(Справочники.СубъектыРФ.НайтиПоКоду(44)); 			
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ДатаНачала",		ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания",	КонецДня(ДатаНачала));
		Запрос.УстановитьПараметр("ТипыСТМ",		ТипыСТМ);
		Запрос.УстановитьПараметр("СубъектыСПБ",	СубъектыСПБ);
		Запрос.УстановитьПараметр("Вариант",		Вариант);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			ОМ_ТСО.ЗаписьВЛог(ВыполняемаяПроцедура.Лог, "Пустой результат запроса", -1);
			Возврат;
		КонецЕсли;
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ТекстПисьма = "<B>" + ВидПоказателей + " показатели выручки по сети аптек за " + Формат(ДатаНачала, "ДФ=dd.MM.yyyy") + ":</B><BR />"
		+ "Общая сумма выручки: " + Выборка.СуммаВыручки + " р.;<BR />"	
		+ "Сумма среднего чека: " + Выборка.СуммаСреднегоЧека + " р.;<BR />"
		+ "Количество чеков: " + Выборка.КолвоЧеков + " шт.;<BR />"
		
		+ "Наценка розничного звена с учетом скидок без НДС: " + Выборка.ПроцентРозничнойНаценки + "%;<BR />"
		+ "Итоговая сквозная наценка с учетом скидок без НДС: " + Выборка.ПроцентСквознойНаценки + "%;<BR />"
		
		+ "Текущий объем продаж товаров СТМ, УСТМ в общем товарообороте, в долевом соотношении: " + Выборка.ПроцентПродажСТМ + "%<BR /><BR />"
		
		
		+ "<B>" + ВидПоказателей + " показатели выручки по аптекам " + ?(Вариант=1,"СПБ и ЛО","регионов СПБ") + " за " + Формат(ДатаНачала, "ДФ=dd.MM.yyyy") + ":</B><BR />"
		+ "Общая сумма выручки: " + Выборка.СуммаВыручки_СПБ + " р.;<BR />"	
		+ "Сумма среднего чека: " + Выборка.СуммаСреднегоЧека_СПБ + " р.;<BR />"
		+ "Количество чеков: " + Выборка.КолвоЧеков_СПБ + " шт.;<BR />"
		
		+ "Наценка розничного звена с учетом скидок без НДС: " + Выборка.ПроцентРозничнойНаценки_СПБ + "%;<BR />"
		+ "Итоговая сквозная наценка с учетом скидок без НДС: " + Выборка.ПроцентСквознойНаценки_СПБ + "%;<BR />"
		
		+ "Текущий объем продаж товаров СТМ, УСТМ в общем товарообороте, в долевом соотношении: " + Выборка.ПроцентПродажСТМ_СПБ + "%";
		
		Если Вариант = 2 Тогда
			ТекстПисьма = ТекстПисьма
			+ "<BR /><BR /><B>" + ВидПоказателей + " показатели выручки по аптекам остальных регионов (не СПБ) за " + Формат(ДатаНачала, "ДФ=dd.MM.yyyy") + ":</B><BR />"
			+ "Общая сумма выручки: " + Выборка.СуммаВыручки_неСПБ + " р.;<BR />"	
			+ "Сумма среднего чека: " + Выборка.СуммаСреднегоЧека_неСПБ + " р.;<BR />"
			+ "Количество чеков: " + Выборка.КолвоЧеков_неСПБ + " шт.;<BR />"
			
			+ "Наценка розничного звена с учетом скидок без НДС: " + Выборка.ПроцентРозничнойНаценки_неСПБ + "%;<BR />"
			+ "Итоговая сквозная наценка с учетом скидок без НДС: " + Выборка.ПроцентСквознойНаценки_неСПБ + "%;<BR />"
			
			+ "Текущий объем продаж товаров СТМ, УСТМ в общем товарообороте, в долевом соотношении: " + Выборка.ПроцентПродажСТМ_неСПБ + "%";
			
		КонецЕсли;
		
		ТемаПисьма = ВидПоказателей + " показатели выручки" + ?(Вариант=2, " (Фармакор)", "");
		
		Если Вариант = 2 Тогда
			АдресаРассылки = ПолучитьАдресаРассылки(24);
		КонецЕсли;
		
		ОМ_ТСО.ОтправитьПисьмо(АдресаРассылки, ТемаПисьма, "", ТекстПисьма);
		
	КонецЦикла;
	    	
	
	ОМ_ТСО.ЗаписьВЛог(ВыполняемаяПроцедура.Лог, "Рассылка выполнена", 1);
	
КонецПроцедуры

Процедура РассылкаОтчетаПоКонцернам() Экспорт
	
	// {23.05.2016 #0088}
	
	Регламент = ОМ_ТСО.ИнициализироватьРегламентноеЗадание("Рассылки_ОтчетПоКонцернам"); 
	Если Регламент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, "", , Истина);
	
	
	//***
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ОтчетПоКонцернам");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ОбластьШапка.Параметры.ДатаФормирования = Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy");
	
	ТабДок.Вывести(ОбластьШапка);
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиОптовыхСкладов.Концерн КАК Концерн,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОстаткиОптовыхСкладов.КодТовараСклада) КАК КолвоПозиций,
	|	СУММА(ОстаткиОптовыхСкладов.Количество) КАК КолвоУпаковок,
	|	СУММА(ОстаткиОптовыхСкладов.Количество * ОстаткиОптовыхСкладов.ЦенаБезНДС) КАК Сумма
	|ИЗ
	|	РегистрСведений.ОстаткиОптовыхСкладов КАК ОстаткиОптовыхСкладов
	|ГДЕ
	|	ОстаткиОптовыхСкладов.Концерн <> """"
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиОптовыхСкладов.Концерн
	|
	|УПОРЯДОЧИТЬ ПО
	|	Концерн";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	      	
	Пока Выборка.Следующий() Цикл		
		ОбластьСтрока.Параметры.Заполнить(Выборка);		
		
		ТабДок.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	ПутьКФайлу = КаталогВременныхФайлов() + "Остатки товара GDP по концернам.xls";
	
	ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLS);
	  	
	
	//***
	
	ТемаПисьма = "Остатки товара GDP по концернам";
	
	ТекстПисьма = "Добрый день.<BR />" 		
	+ "Во вложении отчет по остаткам товара склада GDP в разрезе наименований концернов.";
	
	Получатели = Регламент.АдресаДляРассылки; 		
	
	Вложения = Новый Массив;
	Вложения.Добавить(ПутьКФайлу);
	
	ОМ_ТСО.ОтправитьПисьмо(Получатели, ТемаПисьма, "", ТекстПисьма, Вложения);
	
	
	ОМ_ТСО.ЗавершитьРегламентноеЗадание(Регламент);
	
КонецПроцедуры

Процедура РассылкаРеестраНакладныхGDPДляСантенс() Экспорт
	
	Регламент = ОМ_ТСО.ИнициализироватьРегламентноеЗадание("Рассылки_РеестрНакладныхGDPДляСантенс"); 
	Если Регламент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, "", , Истина);
	
	
	//***
	
	Период = КонецДня(ТекущаяДата()-24*60*60);
	
	Каталог = "\\id-vm-1\ftp_data\Post\gdp\reports\";
	ИмяФайла = "shipped_inv_" + Формат(Период, "ДФ=ddMMyy") + ".dbf";
	ПолноеИмяФайла = ОМ_ТСО.ПолучитьИмяФайлаНаФТП(Каталог + ИмяФайла);
	ПолноеИмяФайла2 = КаталогВременныхФайлов() + "sh" + Формат(ТекущаяДата(), "ДФ=HHmmss") + ".dbf";
	КопироватьФайл(ПолноеИмяФайла, ПолноеИмяФайла2);
	
	ДБФ = Новый XBase;	
	ДБФ.ОткрытьФайл(ПолноеИмяФайла2);	
	
	МассивНомеров = Новый Массив();
	
	Для й=1 По ДБФ.КоличествоЗаписей() Цикл	
		
		ДБФ.Перейти(й);
		
		ТекНомер = ДБФ.NUM_NAK; //ПолучитьЗначениеПоля(0);
		
		Если ЗначениеЗаполнено(ТекНомер) Тогда
			МассивНомеров.Добавить(ТекНомер);
		КонецЕсли;
		
	КонецЦикла;
	
	ДБФ.ЗакрытьФайл();
	
	
	//----------//
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ЭлектронныйСчетФактура.ДокументОснование КАК Документ.УЗ_ПоступлениеТовара) КАК ДокПост,
	|	ЭлектронныйСчетФактура.Ссылка КАК ДокЭСФ,
	|	ВЫБОР
	|		КОГДА ЭлектронныйСчетФактура.СтатусДокумента = ЗНАЧЕНИЕ(Перечисление.ЭСФ_СтатусДокумента.Вх_ДокументооборотЗавершен)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НакладнаяАкцептована,
	|	ЭлектронныйСчетФактура.ДатаРегистрации
	|ПОМЕСТИТЬ втЭСФ
	|ИЗ
	|	Документ.ЭлектронныйСчетФактура КАК ЭлектронныйСчетФактура
	|ГДЕ
	|	ЭлектронныйСчетФактура.ВхДатаСФ >= &ДатаНачала
	|	И ЭлектронныйСчетФактура.Поставщик = &Поставщик
	|	И ЭлектронныйСчетФактура.ДокументОснование ССЫЛКА Документ.УЗ_ПоступлениеТовара
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокПост
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТовара.ВхНомерНакл КАК НомерНакладной,
	|	ПоступлениеТовара.ВхДатаНакл КАК ДатаНакладной,
	|	ПоступлениеТовара.СуммаДок КАК СуммаНакладной,
	|	ПоступлениеТовара.Склад.Наименование КАК Склад,
	|	ПоступлениеТовара.Склад.Код КАК КодСклада,
	|	ЕСТЬNULL(втЭСФ.ДатаРегистрации, ДАТАВРЕМЯ(1, 1, 1)) КАК НакладнаяВыгруженаНаТензор,
	|	ПоступлениеТовара.Дата КАК НакладнаяВыгрузиласьКлиенту,
	|	ПоступлениеТовара.ДатаФактПоступления КАК ДатаПоступленияНаСклад,
	|	ЕСТЬNULL(втЭСФ.НакладнаяАкцептована, ЛОЖЬ) КАК НакладнаяАкцептована,
	|	ВЫБОР
	|		КОГДА ПоступлениеТовара.ВхНомерНакл В (&НомераНакладных)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НакладнаяИзСписка
	|ИЗ
	|	Документ.УЗ_ПоступлениеТовара КАК ПоступлениеТовара
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЭСФ КАК втЭСФ
	|		ПО ПоступлениеТовара.Ссылка = втЭСФ.ДокПост
	|ГДЕ
	|	ПоступлениеТовара.ВхДатаНакл >= &ДатаНачала
	|	И ПоступлениеТовара.Поставщик = &Поставщик
	|	И ПоступлениеТовара.Проведен
	|	И ПоступлениеТовара.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусПрихода.ВыгруженНаАптеку))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭлектронныйСчетФактура.ВхНомерСФ,
	|	ЭлектронныйСчетФактура.ВхДатаСФ,
	|	ЭлектронныйСчетФактура.Сумма,
	|	"""",
	|	0,
	|	ЭлектронныйСчетФактура.ДатаРегистрации,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ВЫБОР
	|		КОГДА ЭлектронныйСчетФактура.СтатусДокумента = ЗНАЧЕНИЕ(Перечисление.ЭСФ_СтатусДокумента.Вх_ДокументооборотЗавершен)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЭлектронныйСчетФактура.ВхНомерСФ В (&НомераНакладных)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.ЭлектронныйСчетФактура КАК ЭлектронныйСчетФактура
	|ГДЕ
	|	ЭлектронныйСчетФактура.ВхДатаСФ >= &ДатаНачала
	|	И ЭлектронныйСчетФактура.Поставщик = &Поставщик
	|	И ЭлектронныйСчетФактура.ДокументОснование = НЕОПРЕДЕЛЕНО
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаНакладной,
	|	НомерНакладной
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втЭСФ";
	
	Запрос.УстановитьПараметр("ДатаНачала",			ДобавитьМесяц(ТекущаяДата(), -1));  
	Запрос.УстановитьПараметр("Поставщик",			Справочники.Поставщики.НайтиПоКоду(3055));
	Запрос.УстановитьПараметр("НомераНакладных",	МассивНомеров);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать(); 	

	
	// Формируем файл для вложения		
	Каталог = КаталогВременныхФайлов();
	ПутьКФайлу = Каталог + "Реестр накладных GDP для Сантенс.xls";
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("РеестрНакладныхGDPДляСантенс");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ОбластьШапка.Параметры.ДатаФормирования = Формат(ТекущаяДата(), "ДЛФ=DD");
	
	ТабДок.Вывести(ОбластьШапка);
	
	ч = 1;  	
	Пока Выборка.Следующий() Цикл	
		
		Если Выборка.НакладнаяВыгруженаНаТензор = Дата(1,1,1) 
			Или Выборка.НакладнаяВыгрузиласьКлиенту = Дата(1,1,1)
			Или Выборка.ДатаПоступленияНаСклад = Дата(1,1,1)
			Или Выборка.НакладнаяАкцептована = Ложь
			Или Выборка.НакладнаяИзСписка = Истина Тогда
			
			Если Выборка.НакладнаяВыгрузиласьКлиенту > Период И Выборка.НакладнаяИзСписка = Ложь Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(Выборка);	
			ОбластьСтрока.Параметры.НомерСтроки = ч;
			ТабДок.Вывести(ОбластьСтрока);
			
			ч = ч+1;
			
		КонецЕсли;
		
	КонецЦикла;

	ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLS);
	
	ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, "Строк: " + ч);
	
	
	//Отправляем письмо
	ТемаПисьма = "Реестр накладных GDP для Сантенс";
	
	ТекстПисьма = "Добрый день.<BR />" 		
	+ "Просим ознакомиться с вложенным реестром накладных, полученных программой 1С АВЕ от GDP за вчерашний день, " 
	+ "а так же статус по приёмке товара аптеками. В данном реестре так же содержаться проблемные накладные предыдущих поставок:<BR />" 
	+ "- накладные, выгруженные поставщиком ранее, но не дошедшие до 1С;<BR />" 
	+ "- накладные, не получившие подтверждения от аптеки о факте приёмки товара.";
	
	Получатели = Регламент.АдресаДляРассылки;
	
	Вложения = Новый Массив;
	Вложения.Добавить(ПутьКФайлу);
	
	ОМ_ТСО.ОтправитьПисьмо(Получатели, ТемаПисьма, "", ТекстПисьма, Вложения);
	
	
	ОМ_ТСО.ЗавершитьРегламентноеЗадание(Регламент);
	
КонецПроцедуры

Процедура РассылкаПланаПоступленияТовараНаСклад() Экспорт
	
	Регламент = ОМ_ТСО.ИнициализироватьРегламентноеЗадание("Рассылки_ПланПоступленияТовараНаСклад"); 
	Если Регламент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, "", , Истина);
	
	
	//***
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПроизводителюТовар.Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказПроизводителюТовар.Товар) КАК КолвоПозиций,
	|	СУММА(ЗаказПроизводителюТовар.Количество) КАК КолвоУпаковок,
	|	СУММА(ЗаказПроизводителюТовар.Сумма) КАК СуммаЗаказа
	|ПОМЕСТИТЬ втЗаказ
	|ИЗ
	|	Документ.ЗаказПроизводителю.Товар КАК ЗаказПроизводителюТовар
	|ГДЕ
	|	ЗаказПроизводителюТовар.Ссылка.Дата > &ДатаНачала
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПроизводителюТовар.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЗаказ.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(втЗаказ.Ссылка.Производитель) КАК Поставщик,
	|	втЗаказ.Ссылка.Номер КАК НомерЗаказа,
	|	втЗаказ.Ссылка.Дата КАК ДатаЗаказа,
	|	втЗаказ.Ссылка.Согласован КАК Согласован,
	|	втЗаказ.Ссылка.ДатаПоставки КАК ДатаПоставки,
	|	втЗаказ.КолвоПозиций,
	|	втЗаказ.КолвоУпаковок,
	|	втЗаказ.СуммаЗаказа
	|ИЗ
	|	втЗаказ КАК втЗаказ";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата() - 24*60*60));  
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
		
	
	// Формируем файл для вложения		
	Каталог = КаталогВременныхФайлов();
	ПутьКФайлу = Каталог + "План поступлений товара на склад.xls";
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ПланПоступленийТовараНаСклад");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ОбластьШапка.Параметры.ДатаФормирования = Формат(ТекущаяДата(), "ДЛФ=DD");
	
	ТабДок.Вывести(ОбластьШапка);
	
	ч = 1;  	
	Пока Выборка.Следующий() Цикл		      			
		ОбластьСтрока.Параметры.Заполнить(Выборка);	
		ОбластьСтрока.Параметры.НомерСтроки = ч;
		ТабДок.Вывести(ОбластьСтрока);
		
		ч = ч+1;
		
	КонецЦикла;

	ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLS);
		
	
	//Отправляем письмо
	ТемаПисьма = "План поступлений товара на склад";
	
	ТекстПисьма = "Добрый день.<BR />" 		
	+ "Просим ознакомиться с актуализированным на текущий момент планом поступлений товара от поставщиков, " 
	+ "по соответствующим заявкам оптового отдела закупок GDP";
	
	//Получатели = Регламент.АдресаДляРассылки;   //!!!
	Получатели = Новый Массив;
	Получатели.Добавить("isanina.i.l@366.ru");
	Получатели.Добавить("michurova.l.b@366.ru");
	Получатели.Добавить("yakimova.i.v@366.ru");
	Получатели.Добавить("Olga.Fenko@366.ru");
	Получатели.Добавить("khvorov.v.v@366.ru");
	Получатели.Добавить("dubel.e.a@366.ru");
	Получатели.Добавить("voytovskaya.e.a@366.ru");
	Получатели.Добавить("iskandarova.a.s@366.ru");
	Получатели.Добавить("Olesya.Makarova1@366.ru");
	Получатели.Добавить("savinova.a.g@366.ru");
	Получатели.Добавить("tolstykh.v.a@366.ru");
	Получатели.Добавить("antropova.y.m@366.ru");
	Получатели.Добавить("melnikova.m.v@366.ru");
	Получатели.Добавить("kuznetsova.o.v@366.ru");
	Получатели.Добавить("deryabina.y.a@366.ru");
	Получатели.Добавить("terenteva.v.a@366.ru");
	Получатели.Добавить("klodt.a.g@366.ru");
	Получатели.Добавить("tekhneryadov.s.o@366.ru");
	                  	
	Вложения = Новый Массив;
	Вложения.Добавить(ПутьКФайлу);
	
	ОМ_ТСО.ОтправитьПисьмо(Получатели, ТемаПисьма, "", ТекстПисьма, Вложения);
	
	
	ОМ_ТСО.ЗавершитьРегламентноеЗадание(Регламент);

КонецПроцедуры

Процедура РассылкаСпискаНевыгруженныхЗаказов() Экспорт
	
	Регламент = ОМ_ТСО.ИнициализироватьРегламентноеЗадание("Рассылки_СписокНевыгруженныхЗаказов"); 
	Если Регламент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, "", , Истина);
	

	//***
	
	ДатаНачала = НачалоДня(ТекущаяДата());
	ДатаОкончания = КонецДня(ДатаНачала);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(Заказ.Ссылка) КАК Док
	|ИЗ
	|	Документ.Заказ КАК Заказ
	|ГДЕ
	|	Заказ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Заказ.Проведен
	|	И Заказ.СтатусВСистемеЭДО = &СтатусВСистемеЭДО
	|	И Заказ.Поставщик = &Поставщик";
	
	Запрос.УстановитьПараметр("ДатаНачала",			ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",		ДатаОкончания);
	Запрос.УстановитьПараметр("СтатусВСистемеЭДО",	Перечисления.СтатусыВСистемеЭДО.ОжидаетВыгрузки);
	Запрос.УстановитьПараметр("Поставщик",			Справочники.Поставщики.НайтиПоКоду(312));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, "Нет данных для обработки");
		ОМ_ТСО.ЗавершитьРегламентноеЗадание(Регламент);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ТекстПисьма = "";	
	Пока Выборка.Следующий() Цикл 
		ТекстПисьма = ТекстПисьма + Выборка.Док + Символы.ПС;	
	КонецЦикла;
	        	
	Получатели = Регламент.АдресаДляРассылки;	
	ТемаПисьма = "Список невыгруженных в систему ЭДО заказов";
	
	ОМ_ТСО.ОтправитьПисьмо(Получатели, ТемаПисьма, "", ТекстПисьма);
	
	ОМ_ТСО.ЗавершитьРегламентноеЗадание(Регламент);
	
КонецПроцедуры

Процедура РассылкаМониторингаРежимовРаботыАптек() Экспорт
	
	Регламент = ОМ_ТСО.ИнициализироватьРегламентноеЗадание("Рассылки_МониторингРежимовРаботыАптек"); 
	Если Регламент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, "", , Истина);
	

	//***
	
	ДатаНачала = НачалоДня(ТекущаяДата()) - 24*60*60;
	ДатаОкончания = КонецДня(ДатаНачала);
	Дельта = 60; //сек
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УЗ_СменаККМ.СкладКод,
	|	МИНИМУМ(ДОБАВИТЬКДАТЕ(УЗ_СменаККМ.ДатаОткрытия, ДЕНЬ, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), &ДатаНачала, ДЕНЬ) * -1)) КАК ВремяОткрытия,
	|	МАКСИМУМ(ДОБАВИТЬКДАТЕ(УЗ_СменаККМ.ДатаЗакрытия, ДЕНЬ, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), &ДатаНачала, ДЕНЬ) * -1)) КАК ВремяЗакрытия
	|ПОМЕСТИТЬ втСмены
	|ИЗ
	|	Документ.УЗ_СменаККМ КАК УЗ_СменаККМ
	|ГДЕ
	|	УЗ_СменаККМ.ДатаОткрытия МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	УЗ_СменаККМ.СкладКод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестаХранения.Наименование КАК Аптека,
	|	МестаХранения.Код КАК КодАптеки,
	|	ЕСТЬNULL(Управляющие.ФИО, """") КАК УправляющийАптекой,
	|	ЕСТЬNULL(ДиректораБЕ.ФИО, """") КАК ДиректорБизнесЕдиницы,
	|	&ДатаНачала КАК ДатаСмены,
	|	РежимыРаботыАптекСостав.Ссылка.Наименование КАК РежимРаботыАптеки,
	|	РежимыРаботыАптекСостав.ВремяНачала КАК ВремяОткрытияПлан,
	|	РежимыРаботыАптекСостав.ВремяОкончания КАК ВремяЗакрытияПлан,
	|	втСмены.ВремяОткрытия КАК ВремяОткрытияФакт,
	|	втСмены.ВремяЗакрытия КАК ВремяЗакрытияФакт,
	|	РАЗНОСТЬДАТ(РежимыРаботыАптекСостав.ВремяНачала, втСмены.ВремяОткрытия, СЕКУНДА) КАК ОтклонениеОтВремениОткрытия,
	|	ВЫБОР
	|		КОГДА втСмены.ВремяЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА 0
	|		ИНАЧЕ РАЗНОСТЬДАТ(втСмены.ВремяЗакрытия, РежимыРаботыАптекСостав.ВремяОкончания, СЕКУНДА)
	|	КОНЕЦ КАК ОтклонениеОтВремениЗакрытия
	|ИЗ
	|	Справочник.МестаХранения КАК МестаХранения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РежимыРаботыАптек.Состав КАК РежимыРаботыАптекСостав
	|		ПО МестаХранения.РежимРаботы = РежимыРаботыАптекСостав.Ссылка
	|			И (РежимыРаботыАптекСостав.ДеньНедели = &ДеньНедели)
	|			И (РежимыРаботыАптекСостав.Выходной = ЛОЖЬ)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСмены КАК втСмены
	|		ПО МестаХранения.Код = втСмены.СкладКод
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения.Заведующие КАК Управляющие
	|		ПО МестаХранения.Ссылка = Управляющие.Ссылка
	|			И (Управляющие.Должность = ЗНАЧЕНИЕ(Перечисление.ДолжностиРуководителейАптек.УправляющийАптекой))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения.Заведующие КАК ДиректораБЕ
	|		ПО МестаХранения.Ссылка = ДиректораБЕ.Ссылка
	|			И (ДиректораБЕ.Должность = ЗНАЧЕНИЕ(Перечисление.ДолжностиРуководителейАптек.ДиректорБизнесЕдиницы))
	|ГДЕ
	|	РежимыРаботыАптекСостав.Ссылка.Код <> ""000000001""
	|	И (РАЗНОСТЬДАТ(РежимыРаботыАптекСостав.ВремяНачала, втСмены.ВремяОткрытия, СЕКУНДА) >= &Дельта
	|			ИЛИ ВЫБОР
	|				КОГДА втСмены.ВремяЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА 0
	|				ИНАЧЕ РАЗНОСТЬДАТ(втСмены.ВремяЗакрытия, РежимыРаботыАптекСостав.ВремяОкончания, СЕКУНДА)
	|			КОНЕЦ >= &Дельта)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Аптека";
	
	Запрос.УстановитьПараметр("ДатаНачала",		ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",	ДатаОкончания);
	Запрос.УстановитьПараметр("ДеньНедели",		ДеньНедели(ДатаНачала));
	Запрос.УстановитьПараметр("Дельта",			Дельта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, "Нет данных для обработки");
		ОМ_ТСО.ЗавершитьРегламентноеЗадание(Регламент);
		Возврат;
	КонецЕсли;
	   
	
	// Формируем файл для вложения
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("МониторингРежимовРаботыАптек");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ОбластьШапка.Параметры.ПериодОтчета = Формат(ДатаНачала, "ДФ=dd.MM.yyyy");
	
	ТабДок.Вывести(ОбластьШапка);
	
	
	Выборка = РезультатЗапроса.Выбрать();	
	ч = 1;
	
	Пока Выборка.Следующий() Цикл		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ОбластьСтрока.Параметры.НомерСтроки = ч;

		ОтклонениеОтВремениОткрытия = Выборка.ОтклонениеОтВремениОткрытия;
		Если ОтклонениеОтВремениОткрытия < Дельта Тогда
			ОбластьСтрока.Параметры.ОтклонениеОтВремениОткрытия = 0;
		Иначе
			ОтклонениеОтВремениОткрытияМин = Цел(ОтклонениеОтВремениОткрытия/60);
			ОбластьСтрока.Параметры.ОтклонениеОтВремениОткрытия = ОтклонениеОтВремениОткрытияМин;
			ОбластьСтрока.Параметры.ВремяОткрытияФакт = Выборка.ВремяОткрытияПлан + ОтклонениеОтВремениОткрытияМин*60;
		КонецЕсли;
		
		ОтклонениеОтВремениЗакрытия = Выборка.ОтклонениеОтВремениЗакрытия; 
		Если ОтклонениеОтВремениЗакрытия < Дельта Тогда
			ОбластьСтрока.Параметры.ОтклонениеОтВремениЗакрытия = 0;
		Иначе
			ОтклонениеОтВремениЗакрытияМин = Цел(ОтклонениеОтВремениЗакрытия/60);
			ОбластьСтрока.Параметры.ОтклонениеОтВремениЗакрытия = ОтклонениеОтВремениЗакрытияМин;
			ОбластьСтрока.Параметры.ВремяЗакрытияФакт = Выборка.ВремяЗакрытияПлан - ОтклонениеОтВремениЗакрытияМин*60;
		КонецЕсли; 			
		
		ТабДок.Вывести(ОбластьСтрока);
		
		ч = ч + 1;
		
	КонецЦикла;
	
	ПутьКФайлу = КаталогВременныхФайлов() + "Мониторинг режимов работы аптек.xls";
	ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLS);			
	
	
	// Отправляем письмо		
	Получатели = Новый Массив;	
	Получатели.Добавить("danilov.i.b@366.ru");
	Получатели.Добавить("shaymardanova.k.a@366.ru");
	Получатели.Добавить("DirectorsBU@366.ru");
	Получатели.Добавить("DirectorsBUregions@366.ru");
	Получатели.Добавить("shakaya.d.k@366.ru");
	Получатели.Добавить("chelombitko.e.v@366.ru");
	Получатели.Добавить("vladimirova.m.a2@366.ru");	
	Получатели.Добавить("krasivova.e.a@366.ru"); //Красивова Елена Анатольевна
	Получатели.Добавить("burakova.m.s@366.ru"); //Буракова Мария Сергеевна
	Получатели.Добавить("sekerin.r.a@366.ru"); //Секерин Роман Александрович
	Получатели.Добавить("vissarionova.yu.a@366.ru"); //Виссарионова Юлия Александровна
	Получатели.Добавить("guseva.l.a@366.ru"); //Гусева Людмила Арнольдовна
	Получатели.Добавить("dzhenkova.m.a@366.ru"); //Дженкова Марина Александровна
	Получатели.Добавить("tatarenkova.n.v@366.ru"); //Татаренкова Наталья Владимировна
	Получатели.Добавить("koroleva.g.v@apt.366.ru"); //Королева Галина Валентиновна
	Получатели.Добавить("gummatova.f.b@366.ru"); //Гумматова Фарида Билал кызы
	Получатели.Добавить("parshina.t.v@366.ru"); //Паршина Татьяна Владимировна
	Получатели.Добавить("halilova.g.f@366.ru"); //Халилова Гузель Фиалитовна
	Получатели.Добавить("sorochinskaya.yu.v@apt.366.ru"); //Сорочинская Юлия Валериевна
	Получатели.Добавить("myasoedova.o.yu@366.ru"); //Мясоедова Ольга Юрьевна
	Получатели.Добавить("kalacheva.s.a@366.ru"); //Калачева Светлана Анатольевна
	Получатели.Добавить("makarova.m.v@366.ru"); //Макарова Марина Викторовна
	Получатели.Добавить("markushina.a.n@366.ru"); //Маркушина Анна Николаевна
	Получатели.Добавить("shipova.n.v@366.ru"); //Шипова Наталья Викторовна
	Получатели.Добавить("nosova.e.l@366.ru"); //Носова Елена Леонидовна
	Получатели.Добавить("chernova.e.v@366.ru"); //Чернова Елена Вадимовна
	Получатели.Добавить("yakovleva.e.n@366.ru"); //Яковлева Елена Николаевна
	Получатели.Добавить("dzhidzhavadze.i.m@366.ru"); //Джиджавадзе Ирина Михайловна
	Получатели.Добавить("govoruhina.o.a@366.ru"); //Говорухина Оксана Андреевна
	Получатели.Добавить("terechova.l.a@366.ru"); //Терехова Людмила Анатольевна
	Получатели.Добавить("zolotova.t.s@366.ru"); //Золотова Татьяна Станиславовна
	Получатели.Добавить("migacheva.n.s@366.ru"); //Мигачева Наталья Сергеевна
	Получатели.Добавить("rolko.d.v@366.ru"); //Ролько Дмитрий Вячеславович
	Получатели.Добавить("mikunova.e.p@366.ru"); //Микунова Елена Петровна
	Получатели.Добавить("tsaryuk.s.n@366.ru"); //Царюк Светлана Николаевна
	Получатели.Добавить("gorlo.o.v@366.ru"); //Горло Ольга Владимировна
	Получатели.Добавить("shakaya.d.k@366.ru"); //Шакая Диана Константиновна
	Получатели.Добавить("danilov.i.b@366.ru"); //Данилов Игорь Борисович
	Получатели.Добавить("chelombitko.e.v@366.ru"); //Челомбитько Екатерина Вячеславовна
	Получатели.Добавить("bakuradze.k.d@366.ru");
	Получатели.Добавить("brodezkiy.a.a@366.ru");
	Получатели.Добавить("dzhidzhavadze.i.m@366.ru");
	Получатели.Добавить("govoruhina.o.a@366.ru");
	Получатели.Добавить("aslanyan.a.a@366.ru");
	//Получатели.Добавить("");
	//Получатели.Добавить("");
	//Получатели.Добавить("");
	//Получатели.Добавить("");
	//Получатели.Добавить("");
	//Получатели.Добавить("");
	Получатели.Добавить("tekhneryadov.s.o@366.ru"); 
	                 	
	ТемаПисьма = "Мониторинг режимов работы аптек";	
	ТекстПисьма = 
	"Ответственный: департамент операционной деятельности<BR />"
	"Катерина Шаймарданова, 8 (495) 797-86-86 доб. 1581, shaymardanova.k.a@366.ru";
	
	Вложения = Новый Массив;
	Вложения.Добавить(ПутьКФайлу);
	
	ОМ_ТСО.ОтправитьПисьмо(Получатели, ТемаПисьма, "", ТекстПисьма, Вложения);
	
	
	ОМ_ТСО.ЗавершитьРегламентноеЗадание(Регламент);
	
КонецПроцедуры

Процедура КонтрольНеоприходованныхНакладных() Экспорт
	
	Регламент = ОМ_ТСО.ИнициализироватьРегламентноеЗадание("Рассылки_КонтрольНеоприходованныхНакладных"); 
	Если Регламент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, "", , Истина);
	

	//***
	
	ТекДата = ТекущаяДата();
	Если День(ТекДата) = 1 Тогда
		ДатаНачала = Дата(2016,9,1);
	Иначе
		ДатаНачала = НачалоДня(ТекДата - 7*24*60*60);
	КонецЕсли;
	
	Вложения = Новый Массив;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачала",			ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания",		КонецДня(ТекДата - 24*60*60));
	СтруктураПараметров.Вставить("СубъектЛО",			Справочники.СубъектыРФ.НайтиПоКоду(14));
	СтруктураПараметров.Вставить("СубъектМ",			Справочники.СубъектыРФ.НайтиПоКоду(31));
	СтруктураПараметров.Вставить("СубъектМО",			Справочники.СубъектыРФ.НайтиПоКоду(16));
	СтруктураПараметров.Вставить("СубъектСПб",			Справочники.СубъектыРФ.НайтиПоКоду(32));
	СтруктураПараметров.Вставить("КруглосуточныйРежим",	Справочники.РежимыРаботыАптек.НайтиПоКоду("000000001"));
	
	// 1	
	СхемаКомпановки = ПолучитьМакет("КонтрольНеоприходованныхНакладных_Детально");
	ФайлОтчета = СформироватьИСохранитьОтчет(СхемаКомпановки, СтруктураПараметров);
	Вложения.Добавить(ФайлОтчета);
	
	// 2	
	СхемаКомпановки = ПолучитьМакет("КонтрольНеоприходованныхНакладных_Поаптечно");
	ФайлОтчета = СформироватьИСохранитьОтчет(СхемаКомпановки, СтруктураПараметров);
	Вложения.Добавить(ФайлОтчета);
	
	// 3	
	СхемаКомпановки = ПолучитьМакет("КонтрольНеоприходованныхНакладных_ИтогиРазвернуто");
	ФайлОтчета = СформироватьИСохранитьОтчет(СхемаКомпановки, СтруктураПараметров);
	Вложения.Добавить(ФайлОтчета);
	
	// 3	
	СхемаКомпановки = ПолучитьМакет("КонтрольНеоприходованныхНакладных_ИтогиСвернуто");
	ФайлОтчета = СформироватьИСохранитьОтчет(СхемаКомпановки, СтруктураПараметров);
	Вложения.Добавить(ФайлОтчета);	
	
	
	// Отправляем письмо		
	ТемаПисьма = "Контроль неоприходованных накладных";	
	ТекстПисьма = "";	
	                                                 
	Получатели = Новый Массив;
	Получатели.Добавить("fogels.h@366.ru");
	Получатели.Добавить("daymentseva.l.v@366.ru");
	Получатели.Добавить("labuzov.i.a@366.ru");
	Получатели.Добавить("korsunskaya.o.v@366.ru");
	Получатели.Добавить("danilov.i.b@366.ru");
	Получатели.Добавить("yudintsev.a.a@366.ru");
	Получатели.Добавить("shaymardanova.k.a@366.ru");
	Получатели.Добавить("vissarionova.yu.a@366.ru");
	Получатели.Добавить("DirectorsBUregions@366.ru");
	Получатели.Добавить("DirectorsBU@366.ru");
	Получатели.Добавить("chelombitko.e.v@366.ru");
	Получатели.Добавить("vladimirova.m.a2@366.ru");
	Получатели.Добавить("dzhidzhavadze.i.m@366.ru");
	Получатели.Добавить("govoruhina.o.a@366.ru");
	Получатели.Добавить("aslanyan.a.a@366.ru");
	//Получатели.Добавить("");
	//Получатели.Добавить("");
	//Получатели.Добавить("");
	//Получатели.Добавить("");
	//Получатели.Добавить("");
	//Получатели.Добавить("");
	Получатели.Добавить("tekhneryadov.s.o@366.ru");  
	
	ОМ_ТСО.ОтправитьПисьмо(Получатели, ТемаПисьма, "", ТекстПисьма, Вложения);
	
	
	ОМ_ТСО.ЗавершитьРегламентноеЗадание(Регламент);
	
КонецПроцедуры

Процедура КонтрольНеоприходованныхНакладныхДляДБЕ() Экспорт
	
	Регламент = ОМ_ТСО.ИнициализироватьРегламентноеЗадание("Рассылки_КонтрольНеоприходованныхНакладных_ДБЕ"); 
	Если Регламент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, "", , Истина);
	

	//***
	
	Статус = Перечисления.СтатусПрихода.Черновик;
	
	СтатусыВАптеке = Новый Массив;
	СтатусыВАптеке.Добавить(Перечисления.СтатусДокАптеки.Проведен);
	СтатусыВАптеке.Добавить(Перечисления.СтатусДокАптеки.Аннулирован);
	
	ТекДата = ТекущаяДата();
	Если День(ТекДата) = 1 Тогда
		ДатаНачала = Дата(2016,9,1);
	Иначе
		ДатаНачала = НачалоДня(ТекДата - 7*24*60*60);
	КонецЕсли;
	
	ДатаОкончания = КонецДня(ТекДата-24*60*60);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДиректораБЕ.ФИО КАК ДиректорБЕ,
	|	ДиректораБЕ.АдресЭлектроннойПочты КАК ДиректорБЕ_Почта,
	|	УправляющиеАП.ФИО КАК УправляющийАптекой,
	|	УЗ_ПоступлениеТовара.Склад.Наименование КАК АдресАптеки,
	|	УЗ_ПоступлениеТовара.Склад.СтатусАптеки КАК СтатусАптеки,
	|	ВЫБОР
	|		КОГДА УЗ_ПоступлениеТовара.Склад.РежимРаботы = &КруглосуточныйРежим
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КруглосуточнаяАптека,
	|	УЗ_ПоступлениеТовара.ВхНомерНакл КАК НомерНакладной,
	|	УЗ_ПоступлениеТовара.ВхДатаНакл КАК ДатаНакладной,
	|	УЗ_ПоступлениеТовара.СуммаДок КАК СуммаЗакуп,
	|	ЕСТЬNULL(Поставщики.Наименование + "" (кросс-докинг)"", УЗ_ПоступлениеТовара.Поставщик.Наименование) КАК Поставщик,
	|	1 КАК КоличествоНакладных
	|ИЗ
	|	Документ.УЗ_ПоступлениеТовара КАК УЗ_ПоступлениеТовара
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения.Заведующие КАК УправляющиеАП
	|		ПО УЗ_ПоступлениеТовара.Склад = УправляющиеАП.Ссылка
	|			И (УправляющиеАП.Должность = ЗНАЧЕНИЕ(Перечисление.ДолжностиРуководителейАптек.УправляющийАптекой))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения.Заведующие КАК ДиректораБЕ
	|		ПО УЗ_ПоступлениеТовара.Склад = ДиректораБЕ.Ссылка
	|			И (ДиректораБЕ.Должность = ЗНАЧЕНИЕ(Перечисление.ДолжностиРуководителейАптек.ДиректорБизнесЕдиницы))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦепочкиПоКроссДокингу КАК ЦепочкиПоКроссДокингу
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Поставщики КАК Поставщики
	|			ПО ЦепочкиПоКроссДокингу.ПоставщикКод = Поставщики.Код
	|		ПО УЗ_ПоступлениеТовара.Ссылка = ЦепочкиПоКроссДокингу.Накладная
	|ГДЕ
	|	УЗ_ПоступлениеТовара.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И УЗ_ПоступлениеТовара.Проведен
	|	И УЗ_ПоступлениеТовара.Статус <> &Статус
	|	И НЕ УЗ_ПоступлениеТовара.СтатусДокАптеки В (&СтатусыВАптеке)
	|	И НЕ УЗ_ПоступлениеТовара.Комментарий ПОДОБНО ""#Принудительно установлена дата завоза#%""
	|
	|УПОРЯДОЧИТЬ ПО
	|	АдресАптеки,
	|	ДатаНакладной
	|ИТОГИ
	|	МАКСИМУМ(ДиректорБЕ_Почта),
	|	СУММА(СуммаЗакуп),
	|	СУММА(КоличествоНакладных)
	|ПО
	|	ДиректорБЕ";
	
	Запрос.УстановитьПараметр("ДатаНачала",				ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",			ДатаОкончания);
	Запрос.УстановитьПараметр("Статус",					Статус);
	Запрос.УстановитьПараметр("СтатусыВАптеке",			СтатусыВАптеке);
	Запрос.УстановитьПараметр("КруглосуточныйРежим",	Справочники.РежимыРаботыАптек.НайтиПоКоду("000000001"));
	
	РезультатЗапроса = Запрос.Выполнить();	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДБЕ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДБЕ.Следующий() Цикл
		
		
		// Шапка
		ТабДок = Новый ТабличныйДокумент;
		
		Макет = ПолучитьМакет("КонтрольНеоприходованныхНакладных_ДБЕ");
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");	
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		ОбластьШапка.Параметры.ДатаНачала = Формат(ДатаНачала, "ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.ДатаОкончания = Формат(ДатаОкончания, "ДФ=dd.MM.yyyy");
		
		ТабДок.Вывести(ОбластьШапка);
		
		
		// Табличная часть
		Выборка = ВыборкаДБЕ.Выбрать();	
		
		ч = 1;	
		Пока Выборка.Следующий() Цикл		
			ОбластьСтрока.Параметры.Заполнить(Выборка);
			ОбластьСтрока.Параметры.НомерСтроки = ч;
			ОбластьСтрока.Параметры.Дата = ТекДата;
			
			ТабДок.Вывести(ОбластьСтрока);
			
			ч = ч + 1;
			
		КонецЦикла;
		
		ПутьКФайлу = КаталогВременныхФайлов() + "Реестр неоприходованных накладных.xls";
		ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLS);			
		
		
		// Отправляем письмо		
		ТемаПисьма = "Неоприходованные накладные";	
		ТекстПисьма = "Добрый день.<BR />"
		+ "Вам необходимо ознакомиться с наличием просроченных неоприходованных накладных по всем Вашим аптекам (во вложении).<BR />"
		+ "Итого " + Формат(ВыборкаДБЕ.КоличествоНакладных, "ЧДЦ=; ЧГ=0") + " накладных на общую сумму " 
		+ Формат(ВыборкаДБЕ.СуммаЗакуп, "ЧДЦ=2; ЧРД=.; ЧН=") + " р. не оприходовано более пяти суток.<BR />"
		+ "Вам необходимо обеспечить своевременное оприходование товара в аптеках!";
		
		Получатели = Новый Массив;
		Получатели.Добавить(ВыборкаДБЕ.ДиректорБЕ_Почта);
		Получатели.Добавить("shaymardanova.k.a@366.ru");
		
		Вложения = Новый Массив;
		Вложения.Добавить(ПутьКФайлу);
		
		Попытка
			ОМ_ТСО.ОтправитьПисьмо(Получатели, ТемаПисьма, "", ТекстПисьма, Вложения);
		Исключение
			ТекстОшибки = "Ошибка отправки письма: " + ОписаниеОшибки();
			ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, ТекстОшибки, Истина);
		КонецПопытки;

	КонецЦикла;
	
	ОМ_ТСО.ЗавершитьРегламентноеЗадание(Регламент);
	
КонецПроцедуры

Процедура КонтрольБлокировкиСТМ() Экспорт
	
	Регламент = ОМ_ТСО.ИнициализироватьРегламентноеЗадание("Рассылки_КонтрольБлокировкиСТМ"); 
	Если Регламент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОМ_ТСО.ЗаписьВЛогРегламентногоЗадания(Регламент, "", , Истина);
	

	//***  	
	
	// Формируем файлы вложения
	Вложения = Новый Массив;
	
	СтруктураПараметров = Новый Структура;
	     	
	СхемаКомпановки = ПолучитьМакет("ОтчетПоПродажамСверхзапасов");
	ФайлОтчета = СформироватьИСохранитьОтчет(СхемаКомпановки, СтруктураПараметров);
	Вложения.Добавить(ФайлОтчета);
	
	СхемаКомпановки = ПолучитьМакет("ОтчетПоБлокировкеСТМ");
	ФайлОтчета = СформироватьИСохранитьОтчет(СхемаКомпановки, СтруктураПараметров);
	Вложения.Добавить(ФайлОтчета);
	
	
	// Отправляем письмо		
	ТемаПисьма = "Отчеты по блокировке СТМ и продажам сверхзапасов";	
	ТекстПисьма = "";	
	Получатели = Регламент.АдресаДляРассылки;
	
	ОМ_ТСО.ОтправитьПисьмо(Получатели, ТемаПисьма, "", ТекстПисьма, Вложения);
	
	
	ОМ_ТСО.ЗавершитьРегламентноеЗадание(Регламент);
	
КонецПроцедуры

Процедура РассылкаДефектурыЗаНеделюПоНеактивномуАП() Экспорт
	
	
	
КонецПроцедуры

/////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ

Функция СформироватьИСохранитьОтчет(СхемаКомпановки, СтруктураПараметров)
	
	НастройкиКомпановки = СхемаКомпановки.НастройкиПоУмолчанию;
	
	      	
	// Заполняем параметры отчета
	Параметры = СхемаКомпановки.Параметры;
	
	Для Каждого ТекСтр Из СтруктураПараметров Цикл
		ТекПараметр = Параметры.Найти(ТекСтр.Ключ);
		Если ТекПараметр <> Неопределено Тогда
			ТекПараметр.Значение = ТекСтр.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	
	// Заполняем параметры отчета (доступные)
	Параметры = НастройкиКомпановки.ПараметрыДанных.Элементы;
	
	Для Каждого ТекСтр Из СтруктураПараметров Цикл
		ТекПараметр = Параметры.Найти(ТекСтр.Ключ);
		Если ТекПараметр <> Неопределено Тогда
			ТекПараметр.Использование = Истина;
			ТекПараметр.Значение = ТекСтр.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	
	// Формируем отчет
	ТабДок = Новый ТабличныйДокумент;
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;		
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; 		
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпановки, НастройкиКомпановки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);			
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабДок);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	
	// Сохраняем отчет
	ИмяФайла = НастройкиКомпановки.ПараметрыВывода.Элементы[11].Значение; //заголовок
	
	ПутьКФайлу = КаталогВременныхФайлов() + ИмяФайла + ".XLSX";
	ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLSX);
	
	Возврат ПутьКФайлу;

КонецФункции

Функция ПолучитьАдресаРассылки(КодРассылки)
	
	АдресаРассылки = Новый Массив;
	
	Рассылка = Справочники.Рассылки.НайтиПоКоду(КодРассылки);
	Если Не Рассылка.Пустая() Тогда
		Для Каждого ТекПолучатель Из Рассылка.Получатели Цикл
			Если ТекПолучатель.Активность Тогда
				АдресаРассылки.Добавить(ТекПолучатель.Адрес);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат АдресаРассылки;
	
КонецФункции
