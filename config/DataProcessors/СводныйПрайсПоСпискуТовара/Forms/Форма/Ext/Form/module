Функция ПолучитьКодСчетчикаДозаказов()
	
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Попытка
			Блокировка = Новый БлокировкаДанных;
			БлокировкаМатрицы = Блокировка.Добавить("РегистрСведений.Счетчики");
			БлокировкаМатрицы.УстановитьЗначение("Счетчик","Дозаказ");
			БлокировкаМатрицы.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();	

			МЗ = РегистрыСведений.Счетчики.СоздатьМенеджерЗаписи();
			МЗ.Счетчик = "Дозаказ";
			МЗ.Прочитать();
			Если МЗ.Выбран() Тогда
				МЗ.Значение = МЗ.Значение + 1;	
			Иначе
				МЗ.Счетчик = "Дозаказ";
				МЗ.Значение = 1;
			КонецЕсли;
			МЗ.Записать();
			ЗафиксироватьТранзакцию();
			Возврат МЗ.Значение;
		Исключение
			ОтменитьТранзакцию();
			Возврат -1;
		КонецПопытки;
		
	
	
КонецФункции
	
Процедура ДобавитьСтрокуВЛог(ВеткаЛога,ТекстЛога,Отказ)
	
	СтрокаЛога = ВеткаЛога.Строки.Добавить();
	СтрокаЛога.Информация = ТекстЛога;
	СтрокаЛога.Отказ = Отказ;
		
КонецПроцедуры

Функция ПроверитьНаличиеКодаАптеки(Поставщик)
	
    ТХТ = "ВЫБРАТЬ
          |	КонтрактыИАптеки.КодАптекиВнешн
          |ИЗ
          |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
          |ГДЕ
          |	КонтрактыИАптеки.Аптека = &Аптека
          |	И КонтрактыИАптеки.Владелец.Владелец = &Поставщик
          |	И КонтрактыИАптеки.Активность = Истина
          |	И КонтрактыИАптеки.Владелец.Активность = Истина";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Аптека",Аптека);
	Запрос.УстановитьПараметр("Поставщик",Поставщик);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;	
	
КонецФункции

Процедура СоздатьДокументЗаказа(стр,НомерИЗ,ЭтоКатрен = Ложь)
	
	ВсеОК = Ложь;
	
	Корень = Лог.Строки.Добавить();
	Корень.Информация = ""+стр.Поставщик;
	Корень.Отказ = Ложь;
	
	Док=Документы.Заказ.СоздатьДокумент();
	Док.Дата = ТекущаяДата();
	Док.Склад = Аптека;
	Док.Поставщик = стр.Поставщик;
	Док.НомерЗаявкиАптеки = НомерИЗ;
	Док.ТипЗаказа = Перечисления.ТипЗаявки.ИнтернетЗаказ;
	Док.Статус = Перечисления.СтатусЗаказаПоставщику.Создан;
	Док.Комментарий = "создан на основании : " + ИнтернетЗаказ;
	Док.ПризнакЭДО = стр.НаличиеЭДО;
	Если  стр.НаличиеЭДО = Истина Тогда
		Док.СтатусВСистемеЭДО = Перечисления.СтатусыВСистемеЭДО.ОжидаетВыгрузки;
	Иначе
		Док.СтатусВСистемеЭДО = Перечисления.СтатусыВСистемеЭДО.НеТребуетВыгрузки;
	КонецЕсли;

	Отбор = Новый Структура;
	Отбор.Вставить("Поставщик",стр.Поставщик);
	Док.Товар.Загрузить(Заказ.Выгрузить(Отбор));
	Док.СуммаДок = Док.Товар.Итог("Сумма");
	
	
	Изменения = Док.Изменения.Добавить();
	Изменения.Дата = ТекущаяДата();
	Изменения.ТипИзм = Перечисления.ДействияНадДокументами.ВводНового;
	Изменения.Сотрудник = ПараметрыСеанса.ТекущийСотр;
	Изменения.КомментарийИзменения = "Создан из интернет заказа";
	
	Записан = ОбщегоНазначения.ЗаписьОбъекта(Док,3,3,РежимЗаписиДокумента.Запись);
	
	Если Записан Тогда
		ДобавитьСтрокуВЛог(Корень,"заказ записан",Ложь);
		Если АвтоматическаяВыгрузкаЗаказов Тогда //Выгружаем заказ
			
			ЕстьКодАптеки = ПроверитьНаличиеКодаАптеки(стр.Поставщик);
			Если ЕстьКодАптеки Тогда
				Попытка
					Если ЭтоКатрен Тогда
						Выгрузили = Док.ВыгрузитьИнтернетЗаказВКатрен();
					Иначе
						Выгрузили = Док.ВыгрузитьПоставщику();
					КонецЕсли;
				Исключение
					Выгрузили = Ложь;
				КонецПопытки;
				
				Если Выгрузили Тогда
					ВсеОК = Истина;
					ДобавитьСтрокуВЛог(Корень,"заказ выгружен",Ложь);
					Проведен = ОбщегоНазначения.ЗаписьОбъекта(Док,3,3,РежимЗаписиДокумента.Проведение);	
					Если Проведен Тогда
						ДобавитьСтрокуВЛог(Корень,"заказ проведен",Ложь);
					Иначе
						ДобавитьСтрокуВЛог(Корень,"заказ не проведен",Истина);
					КонецЕсли;
				Иначе
					ДобавитьСтрокуВЛог(Корень,"заказ не выгружен",Истина);
                    ДобавитьСтрокуВЛог(Корень,"заказ не проведен",Истина);
				КонецЕсли;
			Иначе
				ДобавитьСтрокуВЛог(Корень,"заказ не выгружен : нет кода аптеки в справочнике <Контракты и аптеки>, либо контракт неактивен",Истина);
				ДобавитьСтрокуВЛог(Корень,"заказ не проведен",Истина);
			КонецЕсли;
		Иначе
			ДобавитьСтрокуВЛог(Корень,"заказ не выгружен: автовыгрузка отключена",Истина);
			ДобавитьСтрокуВЛог(Корень,"заказ не проведен",Истина);
		КонецЕсли;
	Иначе
		ДобавитьСтрокуВЛог(Корень,"заказ не записан",Истина);
		ДобавитьСтрокуВЛог(Корень,"заказ не выгружен",Истина);
        ДобавитьСтрокуВЛог(Корень,"заказ не проведен",Истина);
	КонецЕсли;
	
	Если ВсеОК = Истина Тогда
		СтрокиЗаказа = Заказ.НайтиСтроки(Отбор);
		Для каждого СтрокаЗаказа из СтрокиЗаказа Цикл
			СтрокаЗаказа.Заказан = Истина;	
		КонецЦикла;
	КонецЕсли;
		
	
КонецПроцедуры

Процедура СоздатьОтложенныйЗаказ(стр,ИнтернетЗаказ)
	
	ВсеОК = Истина;
	
	Корень = Лог.Строки.Добавить();
	Корень.Информация = ""+стр.Поставщик;
	Корень.Отказ = Ложь;	
	
	ДобавитьСтрокуВЛог(Корень,"создание отложенного заказа",Ложь);		
	
	Отбор = Новый Структура;
	Отбор.Вставить("Поставщик",стр.Поставщик);
	СтрокиЗаказа = Заказ.НайтиСтроки(Отбор);
	Для каждого Поз из СтрокиЗаказа Цикл
		КодСчетчика = ПолучитьКодСчетчикаДозаказов();
		
		Запись = РегистрыСведений.Дозаказы.СоздатьМенеджерЗаписи();
		Запись.КодПозиции = КодСчетчика;
		Запись.Аптека = Аптека;
		Запись.Поставщик = стр.Поставщик;
		Запись.ДатаСоздания = ТекущаяДата();
		Запись.Пользователь = ПараметрыСеанса.ТекущийСотр;
		Запись.Документ = ИнтернетЗаказ;
		Запись.Товар	= Поз.Товар;
		Запись.КодТовараПоставщика = Поз.КодТовараПоставщика;
		Запись.НаименованиеТовараПоставщика = Поз.НаименованиеТовараПоставщика;
		Запись.Количество = Поз.Количество;
		Запись.Цена = Поз.Цена;
		Запись.ЦенаРозн = Поз.ЦенаРозн;
		Попытка
			Запись.Записать();
			Поз.Отложен = Истина;
			ДобавитьСтрокуВЛог(Корень,"отложен : " + Поз.Товар ,Ложь);		
		Исключение
			ВсеОК = Ложь;
			ДобавитьСтрокуВЛог(Корень,"ошибка записи строки : " + Поз.Товар ,Истина);		
		КонецПопытки;
		
	КонецЦикла;


	Если ВсеОК = Истина Тогда
		ДобавитьСтрокуВЛог(Корень,"создан отложенный заказ",Ложь);	
		СтрокиЗаказа = Заказ.НайтиСтроки(Отбор);
		Для каждого СтрокаЗаказа из СтрокиЗаказа Цикл
			СтрокаЗаказа.Заказан = Истина;	
		КонецЦикла;
	Иначе
		ДобавитьСтрокуВЛог(Корень,"В процессе обработки были ошибки",Истина);	
	КонецЕсли;
	
	
КонецПроцедуры

Процедура СоздатьДокументыЗаказа(СоздаватьДоказазПринудительно)
	
	Если Заказ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НомерИЗ = ""+Формат(ИнтернетЗаказ.Номер,"ЧГ=0");
	ТЗПост = Заказ.Выгрузить(,"Поставщик,НаличиеЭДО,Сумма,СуммаМинимальногоЗаказа");
	ТЗПост.Свернуть("Поставщик,НаличиеЭДО,СуммаМинимальногоЗаказа","Сумма");
	
	Для каждого стр из ТЗПост Цикл
		
		СоздатьЗаказ = Ложь;
		
		Если НЕ СоздаватьДоказазПринудительно Тогда
			Если стр.Поставщик.Код = 12 Тогда // это катрен
				СоздатьЗаказ = Истина;
				ЭтоКатрен = Истина;
			Иначе
				ЭтоКатрен = Ложь;
				Если стр.СуммаМинимальногоЗаказа <= стр.Сумма Тогда
					СоздатьЗаказ = Истина;	
				ИначеЕсли  Константы.ВторойПериодЗаказа.Получить()  < Дата("00010101" + Формат(ТекущаяДата(),"ДФ=ЧЧммсс")) Тогда
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ
					|	Заказ.Ссылка
					|ИЗ
					|	Документ.Заказ КАК Заказ
					|ГДЕ
					|	Заказ.Дата >= &Дата
					|	И Заказ.Склад = &Склад
					|	И Заказ.Поставщик = &Поставщик						   
					|	И Заказ.Проведен = Истина
					|	И Заказ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусЗаказаПоставщику.ВыгруженПоставщику)";
					Запрос.УстановитьПараметр("Дата",НачалоДня(ТекущаяДата()));
					Запрос.УстановитьПараметр("Поставщик",стр.Поставщик);
					Запрос.УстановитьПараметр("Склад",Аптека);
					Рез = Запрос.Выполнить();
					Если НЕ Рез.Пустой() Тогда
						СоздатьЗаказ = Истина;
					КонецЕсли;
					Рез = Неопределено;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если СоздатьЗаказ Тогда
			СоздатьДокументЗаказа(стр,НомерИЗ,ЭтоКатрен);
		Иначе
			СоздатьОтложенныйЗаказ(стр,ИнтернетЗаказ);
		КонецЕсли;
		
	КонецЦикла;
	
	ДокОбъект = ЭтаФорма.ВладелецФормы.ДокументОбъект;

	//Проверим есть ли готовые заказанные позиции. Если есть, то изменим статус строки на "Заказан"
	Отбор = Новый Структура;
	Отбор.Вставить("Заказан",Истина);
	ТЗЗаказа = Заказ.Выгрузить(Отбор);
	Если ТЗЗаказа.Количество() > 0 Тогда
		ДокОбъект.ЗаказПоставщику.Загрузить(ТЗЗаказа);
		
		ТЧДокумента = ДокОбъект.Товар;
		Для каждого стр из ТЗЗаказа Цикл
			Нашли=ТЧДокумента.Найти(стр.Товар,"Товар");	
			Если НЕ Нашли = Неопределено Тогда
				Нашли.СтатусСтроки = Перечисления.ИА_СтатусСтрокиЗаказа.Заказан;	
			КонецЕсли;
		КонецЦикла;
		
		Для н=1 по 3 Цикл
			Попытка
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(2);
			КонецПопытки;
		КонецЦикла;
		
	КонецЕсли;
	
	
	//Проверим есть ли отложенные позиции. Если есть, то изменим статус строки на отложенный
	Отбор = Новый Структура;
	Отбор.Вставить("Отложен",Истина);
	ТЗЗаказа = Заказ.Выгрузить(Отбор);
	Если ТЗЗаказа.Количество() > 0 Тогда
		Для каждого стр из ТЗЗаказа Цикл
			ТЧДокумента = ДокОбъект.Товар;
			Нашли=ТЧДокумента.Найти(стр.Товар,"Товар");	
			Если НЕ Нашли = Неопределено Тогда
				Нашли.СтатусСтроки = Перечисления.ИА_СтатусСтрокиЗаказа.ОтложенЗаказ;	
			КонецЕсли;
		КонецЦикла;
		Для н=1 по 3 Цикл
			Попытка
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(2);
			КонецПопытки;
		КонецЦикла;			
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура ОбновитьИтоги()
	
	Итоги = Заказ.Выгрузить(,"поставщик,НаличиеЭДО,СуммаМинимальногоЗаказа,Сумма");
	Итоги.Свернуть("Поставщик,НаличиеЭДО,СуммаМинимальногоЗаказа","Сумма");
	Итоги.Сортировать("Поставщик");
	
	
КонецПроцедуры

Функция НайтиПозициюВТоваре(ТекСтрока)
	
	Если ТекСтрока.Родитель = неопределено Тогда
		ТекТовар = ТекСтрока.ДанныеСтроки;
	Иначе
		ТекТовар = ТекСтрока.Родитель.ДанныеСтроки;
	КонецЕсли;
	
	НайденнаяСтрока = Товар.Найти(ТекТовар,"Товар");
	Возврат НайденнаяСтрока;
	
КонецФункции

Процедура ЗаполнитьДанныеПоЗаказу(ВыбраннаяСтрока)
	
	
	Количество = ВыбраннаяСтрока.КоличествоИзЛК;
    ВыбраннаяСтрока.Заказать = Количество;	
	
	НайденнаяСтрока = Товар.Найти(ВыбраннаяСтрока.Товар,"Товар");
	НайденнаяСтрока.Заказать = Количество;
	НайденнаяСтрока.ЦенаРозн = ВыбраннаяСтрока.ЦенаРозн;
	
	


	 
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Товар", ВыбраннаяСтрока.Товар);
	ПараметрыОтбора.Вставить("Поставщик", ВыбраннаяСтрока.Поставщик);
	НайденныеСтроки = Заказ.НайтиСтроки(ПараметрыОтбора); 
	 
	Если НайденныеСтроки.Количество() = 0 Тогда 
		Если Количество > 0 Тогда
			стр = Заказ.Добавить();
			ЗаполнитьЗначенияСвойств(стр,ВыбраннаяСтрока);
			стр.Товар = ВыбраннаяСтрока.Товар;
			стр.НаименованиеТовараПоставщика = ВыбраннаяСтрока.наименование;
			стр.Поставщик = ВыбраннаяСтрока.Поставщик;
			стр.СрокГодности = ВыбраннаяСтрока.СрокГодности;
			стр.Количество = Количество;
			стр.Сумма = стр.Цена*Количество;	
			стр.СуммаМинимальногоЗаказа = стр.СуммаМинимальногоЗаказа;
		КонецЕсли;
	Иначе
		Если Количество = 0 Тогда
			Заказ.Удалить(НайденныеСтроки[0]);
		Иначе
			НайденныеСтроки[0].Количество =  Количество;
			НайденныеСтроки[0].Сумма = НайденныеСтроки[0].Цена*Количество;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьИтоги();
	
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Создать заказы поставщикам?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Лог;
	СоздатьДокументыЗаказа(Ложь);
	
	
КонецПроцедуры

Процедура КоманднаяПанель1КнСформироватьПрайсСтарая(Кнопка)
	
	
	Если Аптека.РаботаЧерезКонвертер Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбслуживаемыеАптеки.Владелец.Код366 КАК КодПоставщика
		|ИЗ
		|	Справочник.ОбслуживаемыеАптеки КАК ОбслуживаемыеАптеки
		|ГДЕ
		|	ОбслуживаемыеАптеки.Аптека = &Аптека
		|	И ОбслуживаемыеАптеки.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА";
		
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Сообщить("У Аптеки нет привязки к поставщикам!",СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		МассивПоставщиков = Новый Массив;
		Выборка = Рез.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивПоставщиков.Добавить(Выборка.КодПоставщика);
		КонецЦикла;
		
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КаталогПрайсЛистов366.КодПрайсЛиста
		|ИЗ
		|	РегистрСведений.КаталогПрайсЛистов366 КАК КаталогПрайсЛистов366
		|ГДЕ
		|	КаталогПрайсЛистов366.КодПоставщика в (&МассивПоставщиков)
		|	И КаталогПрайсЛистов366.КодФирмы = &КодФирмы366";
		
		Запрос.УстановитьПараметр("МассивПоставщиков",МассивПоставщиков);
		Запрос.УстановитьПараметр("КодФирмы366",Аптека.Фирма.Код366);
		
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Сообщить("Нет прайлистов для этой аптеки",СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		МассивПрайсов = Новый Массив;
		Выборка = Рез.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивПрайсов.Добавить(Выборка.КодПрайсЛиста);
		КонецЦикла;
		
		ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ОбслуживаемыеАптеки.Владелец КАК Поставщик,
		               |	ОбслуживаемыеАптеки.Владелец.Код366 КАК КодПоставщика
		               |ПОМЕСТИТЬ ТЗПоставщиков
		               |ИЗ
		               |	Справочник.ОбслуживаемыеАптеки КАК ОбслуживаемыеАптеки
		               |ГДЕ
		               |	ОбслуживаемыеАптеки.Аптека = &Аптека
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ПрайсЛисты366.КодИндивидуальный КАК КодТовараПоставщика,
		               |	ПрайсЛисты366.Наименование КАК НаименованиеТовараПоставщика,
		               |	АССОРТИМЕНТНЫЙ_ПЛАН.Наименование КАК Наименование,
		               |	АССОРТИМЕНТНЫЙ_ПЛАН.ЖНВЛС КАК Ж,
		               |	ПрайсЛисты366.Цена КАК Цена,
		               |	ПрайсЛисты366.Остаток КАК Количество,
		               |	ТЗПоставщиков.Поставщик,
		               |	ПрайсЛисты366.СрокГодности КАК СрокГодности,
		               |	АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка КАК Товар,
		               |	1 КАК Кратность,
		               |	ЛОЖЬ КАК Блокировка,
		               |	"""" КАК Производитель,
		               |	ИнтернетЗаказТовар.ЦенаСоСкидкой КАК ЦенаРозн
		               |ИЗ
		               |	РегистрСведений.ПрайсЛисты366 КАК ПрайсЛисты366
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Связки366 КАК Связки366
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
		               |			ПО Связки366.КодАП = АССОРТИМЕНТНЫЙ_ПЛАН.Код
		               |		ПО ПрайсЛисты366.КодИндивидуальный = Связки366.КодИндивидуальный
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов366 КАК КаталогПрайсЛистов366
		               |		ПО (КаталогПрайсЛистов366.КодПрайсЛиста = ПрайсЛисты366.КодПрайсЛиста)
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗПоставщиков КАК ТЗПоставщиков
		               |		ПО (ТЗПоставщиков.КодПоставщика = КаталогПрайсЛистов366.КодПоставщика)
		               |			И (КаталогПрайсЛистов366.КодФирмы = &КодФирмы366)
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнтернетЗаказ.Товар КАК ИнтернетЗаказТовар
		               |		ПО (ИнтернетЗаказТовар.Ссылка = &Документ)
		               |			И (Связки366.КодАП = ИнтернетЗаказТовар.Товар.Код)
		               |ГДЕ
		               |	ПрайсЛисты366.КодПрайсЛиста В(&КодыПрайсов)
		               |	
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Наименование,
		               |	Цена
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ТЗПоставщиков";
		
		
		
	Иначе
		
		ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Поставщики.Ссылка КАК Поставщик,
		|	Выборка.Владелец
		|ПОМЕСТИТЬ ТЗПоставщиков
		|ИЗ
		|	Справочник.Поставщики КАК Поставщики
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОбслуживаемыеАптеки.Владелец КАК Владелец
		|		ИЗ
		|			Справочник.ОбслуживаемыеАптеки КАК ОбслуживаемыеАптеки
		|		ГДЕ
		|			ОбслуживаемыеАптеки.Аптека = &Аптека
		|			И ИСТИНА = ИСТИНА) КАК Выборка
		|		ПО (Выборка.Владелец = Поставщики.Ссылка)
		|ГДЕ
		|	Поставщики.ОсуществляетПрямыеПоставки = ИСТИНА
		|	И ВЫБОР
		|			КОГДА ИСТИНА = ИСТИНА
		|				ТОГДА Выборка.Владелец
		|			ИНАЧЕ Поставщики.Ссылка
		|		КОНЕЦ = Поставщики.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Прайсы.Код КАК КодТовараПоставщика,
		|	Прайсы.Товар КАК НаименованиеТовараПоставщика,
		|	Связки.ТоварФирмы.Наименование КАК Наименование,
		|	Прайсы.Количество,
		|	Прайсы.Цена КАК Цена,
		|	Прайсы.Производитель,
		|	Прайсы.Поставщик,
		|	Связки.ТоварФирмы.ЖНВЛС КАК Ж,
		|	Связки.ТоварФирмы КАК Товар,
		|	Прайсы.СрокГодности,
		|	ВЫБОР
		|		КОГДА Прайсы.Кратность = 0
		|			ТОГДА 1
		|		ИНАЧЕ Прайсы.Кратность
		|	КОНЕЦ КАК Кратность,
		|	ЕСТЬNULL(Связки.Блокировка, ЛОЖЬ) КАК Блокировка,
		|	ИнтернетЗаказТовар.ЦенаСоСкидкой как ЦенаРозн
		|ИЗ
		|	Справочник.СвязкиТовараСПоставщиком КАК Связки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Прайсы КАК Прайсы
		|		ПО (Прайсы.Поставщик = Связки.Поставщик)
		|			И (Прайсы.Код = Связки.КодТовараПоставщика)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗПоставщиков КАК ТЗПоставщиков
		|		ПО (ТЗПоставщиков.Поставщик = Связки.Поставщик)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнтернетЗаказ.Товар КАК ИнтернетЗаказТовар
		|		ПО ИнтернетЗаказТовар.Ссылка = &Документ  и Связки.ТоварФирмы = ИнтернетЗаказТовар.Товар
		|ГДЕ
		|	Связки.ТоварФирмы В(&СписокТоваров)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование,
		|	Цена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТЗПоставщиков";
	КонецЕсли;	  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Аптека",Аптека);
	Запрос.УстановитьПараметр("КодФирмы366",Аптека.Фирма.Код366);
	Запрос.УстановитьПараметр("Документ",ИнтернетЗаказ);
	Запрос.УстановитьПараметр("КодыПрайсов",МассивПрайсов);
	Запрос.УстановитьПараметр("СписокТоваров",Товар.ВыгрузитьКолонку("Товар"));
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	
	КоличествоСтрок = 0;
	СтарыйТовар = "";
	Для каждого стр из ТЗ Цикл
		
		Если СтарыйТовар <> стр.Товар Тогда
			СтрокаПрайса = СводныйПрайс.Строки.Добавить();
			СтрокаПрайса.Наименование = стр.Наименование;
			//ЗаполнитьЗначенияСвойств(СтрокаПрайса,стр);
			СтрокаПрайса.ДанныеСтроки = стр.Товар;
			СтарыйТовар = стр.Товар;
			КоличествоСтрок = КоличествоСтрок + 1;
		КонецЕсли;
		
		СтрокаТовара = СтрокаПрайса.Строки.Добавить();
		СтрокаТовара.Наименование = стр.НаименованиеТовараПоставщика;
		СтрокаТовара.Количество = Стр.Количество;
		СтрокаТовара.Цена = Стр.Цена;
		СтрокаТовара.ЦенаРозн = Стр.ЦенаРозн;
		СтрокаТовара.Поставщик = Стр.Поставщик;
		СтрокаТовара.Производитель = Стр.Производитель;
		СтрокаТовара.Поставщик = Стр.Поставщик;
		СтрокаТовара.ДанныеСтроки = Стр.Поставщик;
		СтрокаТовара.КодТовараПоставщика = Стр.КодТовараПоставщика;
		СтрокаТовара.СрокГодности = Стр.СрокГодности;

		
	КонецЦикла;
	
	Если КоличествоСтрок <= 2 Тогда
		ЭлементыФормы.СводныйПрайс.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;	
	Иначе
		ЭлементыФормы.СводныйПрайс.НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать;	
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель1КнСформироватьПрайс(Кнопка)
	
		ТХТ = "ВЫБРАТЬ
		      |	КаталогПрайсЛистов.Настройка.Владелец КАК Поставщик,
		      |	КаталогПрайсЛистов.Настройка КАК Настройка,
			  |	КаталогПрайсЛистов.Настройка.НаличиеЭДО КАК НаличиеЭДО,
		      |	КаталогПрайсЛистов.КодПрайсЛиста,
		      |	ВЫБОР
		      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика = 0
		      |			ТОГДА 1
		      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика
		      |	КОНЕЦ КАК БазовыйКоэфф,
		      |	ВЫБОР
		      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентПриведенияЦены = 0
		      |			ТОГДА 1
		      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентПриведенияЦены
		      |	КОНЕЦ КАК КоэффПриведения,
		      |	КонтрактыИНастройки.НастройкаОбмена.СуммаМинимальногоЗаказа КАК СуммаМинимальногоЗаказа
		      |ПОМЕСТИТЬ Параметры
		      |ИЗ
		      |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
		      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
		      |			ПО КонтрактыИНастройки.НастройкаОбмена = КаталогПрайсЛистов.Настройка
		      |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
		      |ГДЕ
		      |	КонтрактыИАптеки.Активность = ИСТИНА
		      |	И КонтрактыИАптеки.Аптека = &Аптека
		      |	И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
		      |	И КонтрактыИАптеки.Владелец.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	Прайсы.Код КАК КодТовараПоставщика,
		      |	Прайсы.Товар КАК НаименованиеТовараПоставщика,
		      |	Связки.ТоварФирмы.Наименование КАК Наименование,
		      |	Прайсы.Количество КАК Количество,
		      |	ВЫРАЗИТЬ(Прайсы.Цена * Параметры.БазовыйКоэфф КАК ЧИСЛО(12, 2)) КАК Цена,
		      |	Прайсы.Производитель,
		      |	Параметры.Поставщик КАК Поставщик,
		      |	Прайсы.СрокГодности КАК СрокГодности,
		      |	ЕСТЬNULL(Связки.Блокировка, ЛОЖЬ) КАК Блокировка,
		      |	Связки.ТоварФирмы.ЖНВЛС КАК Ж,
		      |	Связки.ТоварФирмы КАК Товар,
		      |	ВЫБОР
		      |		КОГДА Прайсы.Кратность = 0
		      |			ТОГДА 1
		      |		ИНАЧЕ Прайсы.Кратность
		      |	КОНЕЦ КАК Кратность,
		      |	ИнтернетЗаказТовар.ЦенаСоСкидкой КАК ЦенаРозн,
		      |	Параметры.СуммаМинимальногоЗаказа, Параметры.НаличиеЭДО
		      |ПОМЕСТИТЬ ВТСводныйПрайс
		      |ИЗ
		      |	РегистрСведений.ПрайсЛисты КАК Прайсы
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Параметры КАК Параметры
		      |		ПО Прайсы.КодПрайсЛиста = Параметры.КодПрайсЛиста
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
		      |		ПО Прайсы.ПоставщикСвязки = Связки.Поставщик
		      |			И Прайсы.Код = Связки.КодТовараПоставщика
		      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнтернетЗаказ.Товар КАК ИнтернетЗаказТовар
		      |		ПО (ИнтернетЗаказТовар.Ссылка = &Документ)
		      |			И (Связки.ТоварФирмы = ИнтернетЗаказТовар.Товар)
		      |ГДЕ
		      |	Связки.ТоварФирмы В(&СписокТоваров)
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	ВТСводныйПрайс.КодТовараПоставщика,
		      |	ВТСводныйПрайс.НаименованиеТовараПоставщика,
		      |	ВТСводныйПрайс.Наименование,
		      |	ВТСводныйПрайс.Количество,
		      |	ВТСводныйПрайс.Цена,
		      |	ВТСводныйПрайс.Производитель,
		      |	ВТСводныйПрайс.Поставщик,
		      |	ВТСводныйПрайс.СрокГодности,
		      |	ВТСводныйПрайс.Блокировка,
		      |	ВТСводныйПрайс.Ж,
		      |	ВТСводныйПрайс.Товар,
		      |	ВТСводныйПрайс.Кратность,
		      |	ВЫБОР
		      |		КОГДА ЗаказИзЛК.ЦенаРозн ЕСТЬ NULL
		      |				ИЛИ ЗаказИзЛК.ЦенаРозн = 0
		      |			ТОГДА ВТСводныйПрайс.ЦенаРозн
		      |		ИНАЧЕ ЗаказИзЛК.ЦенаРозн
		      |	КОНЕЦ КАК ЦенаРозн,
		      |	ВТСводныйПрайс.СуммаМинимальногоЗаказа,
		      |	ЗаказИзЛК.Количество КАК КоличествоИзЛК,
		      |	ЕСТЬNULL(ЗаказИзЛК.Количество, 0) КАК Заказать,
		      |	ВЫБОР
		      |		КОГДА ЗаказИзЛК.ЦенаРозн ЕСТЬ NULL
		      |			ТОГДА ЛОЖЬ
		      |		ИНАЧЕ ИСТИНА
		      |	КОНЕЦ КАК ПривязкаИЗЛК,
			  |	ВТСводныйПрайс.НаличиеЭДО
		      |ИЗ
		      |	ВТСводныйПрайс КАК ВТСводныйПрайс
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнтернетЗаказ.ЗаказИзЛК КАК ЗаказИзЛК
		      |		ПО (ЗаказИзЛК.Ссылка = &Документ)
		      |			И ВТСводныйПрайс.Поставщик = ЗаказИзЛК.Поставщик
		      |			И ВТСводныйПрайс.КодТовараПоставщика = ЗаказИзЛК.КодТовараПоставщика
		      |			И ВТСводныйПрайс.Товар = ЗаказИзЛК.Товар
			  |ГДЕ ВТСводныйПрайс.Количество > 0
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	ВТСводныйПрайс.Наименование,
		      |	ВТСводныйПрайс.Цена
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ВТСводныйПрайс
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ Параметры";	
		

	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Аптека",Аптека);
	Запрос.УстановитьПараметр("Документ",ИнтернетЗаказ);
	Запрос.УстановитьПараметр("СписокТоваров",Товар.ВыгрузитьКолонку("Товар"));
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	
	КоличествоСтрок = 0;
	СтарыйТовар = "";
	Для каждого стр из ТЗ Цикл
		
		Если СтарыйТовар <> стр.Товар Тогда
			СтрокаПрайса = СводныйПрайс.Строки.Добавить();
			СтрокаПрайса.Наименование = стр.Наименование;
			//ЗаполнитьЗначенияСвойств(СтрокаПрайса,стр);
			СтрокаПрайса.ДанныеСтроки = стр.Товар;
			СтрокаПрайса.Заказать = Стр.Заказать;
			СтарыйТовар = стр.Товар;
			КоличествоСтрок = КоличествоСтрок + 1;
		КонецЕсли;
		
		СтрокаТовара = СтрокаПрайса.Строки.Добавить();
		СтрокаТовара.Наименование = стр.НаименованиеТовараПоставщика;
		СтрокаТовара.Количество = Стр.Количество;
		СтрокаТовара.Цена = Стр.Цена;
		СтрокаТовара.Заказать = Стр.Заказать;
		Если стр.Заказать > 0 Тогда
			СтрокаТовара.Родитель.Заказать = стр.Заказать;
		КонецЕсли;

		СтрокаТовара.ЦенаРозн = Стр.ЦенаРозн;
		СтрокаТовара.Поставщик = Стр.Поставщик;
		СтрокаТовара.Производитель = Стр.Производитель;
		СтрокаТовара.Поставщик = Стр.Поставщик;
		СтрокаТовара.ДанныеСтроки = Стр.Поставщик;
		СтрокаТовара.КодТовараПоставщика = Стр.КодТовараПоставщика;
		СтрокаТовара.СрокГодности = Стр.СрокГодности;
		СтрокаТовара.СуммаМинимальногоЗаказа = Стр.СуммаМинимальногоЗаказа;
		СтрокаТовара.ПривязкаИЗЛК = стр.ПривязкаИЗЛК;
		СтрокаТовара.НаличиеЭДО = стр.НаличиеЭДО;
		

		Если стр.ПривязкаИзЛК = Истина Тогда
			ЗаполнитьДанныеПоЗаказу(стр);
		КонецЕсли;
		
	КонецЦикла;
	
	Если КоличествоСтрок <= 2 Тогда
		ЭлементыФормы.СводныйПрайс.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;	
	Иначе
		ЭлементыФормы.СводныйПрайс.НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать;	
	КонецЕсли;
	
	
	
	
	
	
КонецПроцедуры


Процедура СводныйПрайсПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Родитель = неопределено Тогда
		ОформлениеСтроки.Ячейки.Наименование.УстановитьКартинку(БиблиотекаКартинок.Ассортимент);
	Иначе
		ОформлениеСтроки.Ячейки.Наименование.УстановитьКартинку(БиблиотекаКартинок.Поставщики);
	КонецЕсли;
	
	Если ДанныеСтроки.Заказать > 0 Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(0,255,127);
	КонецЕсли;
	
	Если ДанныеСтроки.ПривязкаИЗЛК = Истина Тогда
		ОформлениеСтроки.Ячейки.Наименование.ЦветФона = Новый Цвет(255,182,193);
	КонецЕсли;
	
	
КонецПроцедуры

Процедура СводныйПрайсВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока.Родитель = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Количество = ВыбраннаяСтрока.Заказать;
	Если ВвестиЧисло(Количество, "Введите количество заказа", 10, 2) Тогда
         ВыбраннаяСтрока.Заказать = Количество;
	КонецЕсли; 
	 
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Товар", ВыбраннаяСтрока.Родитель.ДанныеСтроки);
	ПараметрыОтбора.Вставить("Поставщик", ВыбраннаяСтрока.ДанныеСтроки);
	НайденныеСтроки = Заказ.НайтиСтроки(ПараметрыОтбора); 
	 
	Если НайденныеСтроки.Количество() = 0 Тогда 
		Если Количество > 0 Тогда
			стр = Заказ.Добавить();
			ЗаполнитьЗначенияСвойств(стр,ВыбраннаяСтрока);
			стр.Товар = ВыбраннаяСтрока.Родитель.ДанныеСтроки;
			стр.НаименованиеТовараПоставщика = ВыбраннаяСтрока.наименование;
			стр.Поставщик = ВыбраннаяСтрока.ДанныеСтроки;
			стр.СрокГодности = ВыбраннаяСтрока.СрокГодности;
			стр.Количество = Количество;
			стр.Сумма = стр.Цена*Количество;	
			стр.СуммаМинимальногоЗаказа = стр.СуммаМинимальногоЗаказа;
		КонецЕсли;
	Иначе
		Если Количество = 0 Тогда
			Заказ.Удалить(НайденныеСтроки[0]);
		Иначе
			НайденныеСтроки[0].Количество =  Количество;
			НайденныеСтроки[0].Сумма = НайденныеСтроки[0].Цена*Количество;
		КонецЕсли;
	КонецЕсли;
	
	ВыбраннаяСтрока.Родитель.Заказать = Количество;
	
	НайденнаяСтрока = НайтиПозициюВТоваре(ВыбраннаяСтрока);
	НайденнаяСтрока.Заказать = Количество;
	
	ОбновитьИтоги();
	

	
КонецПроцедуры

Процедура ЛогПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Отказ = Истина Тогда
		ОформлениеСтроки.ЦветТекста = Новый Цвет(255,0,0);	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Док = ЭтаФорма.ВладелецФормы.ДокументОбъект;
	Товар.Загрузить(Док.Товар.Выгрузить());
	Товар.Сортировать("Товар");
	КоманднаяПанель1КнСформироватьПрайс("");
	
КонецПроцедуры

Процедура ТоварПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Заказать > 0 Тогда
		Если ДанныеСтроки.Количество = ДанныеСтроки.Заказать Тогда
			ОформлениеСтроки.ЦветФона = Новый Цвет(0,255,127);
		Иначе
			ОформлениеСтроки.ЦветФона = Новый Цвет(255,215,0);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель2Свернуть(Кнопка)
	
	Для Каждого СтрокаДерева Из СводныйПрайс.Строки Цикл
		ЭлементыФормы.СводныйПрайс.Свернуть(СтрокаДерева);
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель2Развернуть(Кнопка)
	
	Для Каждого СтрокаДерева Из СводныйПрайс.Строки Цикл
		ЭлементыФормы.СводныйПрайс.Развернуть(СтрокаДерева);
	КонецЦикла	
	
	
КонецПроцедуры

Процедура СводныйПрайсПриАктивизацииСтроки(Элемент)
	
	НайденнаяСтрока = НайтиПозициюВТоваре(Элемент.ТекущаяСтрока);
	
	ЭлементыФормы.Товар.ТекущаяСтрока = НайденнаяСтрока;
	
	
КонецПроцедуры

Процедура ИтогиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если Итоги.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеСтроки.СуммаМинимальногоЗаказа > ДанныеСтроки.Сумма Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,200,200);	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыкнСоздатьДозаказы(Кнопка)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Создать дозаказы ?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Лог;
	СоздатьДокументыЗаказа(Истина);
	
	
КонецПроцедуры
