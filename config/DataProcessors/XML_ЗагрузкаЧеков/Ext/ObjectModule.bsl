Процедура ЗаписьВЛогЗагрузкиЧеков(ОбСменаСсылка,Ошибка)
	//---------------<Пишем описание последней ошибки по смене в лог загрузки>---------------------------// GtG // 18.12.2015 21:03:16
	МЗ=РегистрыСведений.Лог_УЗ_ЗагрузкаЧеков_Ошибки.СоздатьМенеджерЗаписи();
	МЗ.УЗ_СменаККМ=ОбСменаСсылка;
	МЗ.Прочитать();
	МЗ.УЗ_СменаККМ=ОбСменаСсылка;
	МЗ.Ошибка=Ошибка;
	Мз.Записать();	
	
КонецПроцедуры	


Процедура УдалитьЗаписьРегистраПоИД(ИД)
	//МЗ=РегистрыСведений.АптекаОфисЧеки.СоздатьМенеджерЗаписи();
	//МЗ.ИД=ИД;
	//МЗ.Прочитать();
	//МЗ.Удалить();
	
	НЗ= РегистрыСведений.АптекаОфисЧеки.СоздатьНаборЗаписей();
	НЗ.Отбор.ИД.Установить(ИД,Истина);
	НЗ.Записать();
	
	
КонецПроцедуры	


Функция ПроверитьСменуНаКорректностьПоДаннымХДР(ОбСмена,ХМЛСтрока)
	//---------------<Разбор ХДР и проверка смены на полноту загруженных данных>---------------------------// GtG // 18.12.2015 16:15:55
	СменаКорректна=ЛОжь;
	
		
	ЧХМЛ=Новый ЧтениеXML;
	ЧХМЛ.УстановитьСтроку(ХМЛСтрока);
	
	КонецШапки=Ложь;
	
	Пока ЧХМЛ.Прочитать() Цикл
		
		Если КонецШапки=Истина Тогда 
			Прервать;  // берем  данные только из блока <hdr>
		КонецЕсли; 	
		
		
		Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента И ЧХМЛ.Имя="hdr" ТОгда
			Пока ЧХМЛ.Прочитать() Цикл
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="guid" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ОбСмена.GuidСмены=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;
				
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="eklz_overflow" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ОбСмена.ПереполнениеЭКЛЗ =?(ЧХМЛ.Значение=1,Истина,ложь);
					КонецЕсли;
				КонецЕсли;
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="ecr_bzero" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ОбСмена.НеобнуляемыйОстатокНаНачало=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="ecr_ezero" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ОбСмена.НеобнуляемыйОстатокНаКонец=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;

				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="count_sale" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ОбСмена.КолвоЧековПродажи=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;

				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="count_return" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ОбСмена.КолвоЧековВозвратов=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;

				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_sale_cash" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ОбСмена.СуммаНаличными=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;

					Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_sale_cashless" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ОбСмена.СуммаПоКартам=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_return_cash" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ОбСмена.ВозвратНаличными=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_return_cashless" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ОбСмена.ВозвратПоКартам=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;
					
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="hdr" Тогда
					КонецШапки=Истина;
					Прервать;
				КонецЕсли;
				
				
			КонецЦикла;
		КонецЕсли;	
	КонецЦикла;	

	ОбСмена.СуммаВыручки =  ОбСмена.СуммаНаличными+ ОбСмена.СуммаПоКартам- ОбСмена.ВозвратНаличными -ОбСмена.ВозвратПоКартам;
	
	Если ОбСмена.СуммаВыручки=0 ТОгда
		Возврат Ложь; // тут проверять нечего. продаж по этой смене нет.
	КонецЕсли;	
	
	
	ОбСмена.Авансы_Получено=ОбСмена.Авансы_ПолучениеИВозврат.Итог("Сумма")-ОбСмена.Авансы_ПолучениеИВозврат.Итог("СуммаВозврат");
	ОбСмена.Авансы_Зачтено=ОбСмена.Авансы_Зачет.Итог("Сумма");
	ОбСмена.Сертификаты_Зачтено=ОбСмена.Сертификаты_Зачет.Итог("Сумма");

	//---------------<Определим корректность смены по суммам>---------------------------// GtG // 28.12.2015 17:50:30
	СходитсяПоСумме=Ложь;
	Если (ОбСмена.ПродажиТовара.Итог("СуммаРозн")+
		 ОбСмена.Авансы_ПолучениеИВозврат.Итог("Сумма")-ОбСмена.Авансы_ПолучениеИВозврат.Итог("СуммаВозврат")+
		 ОбСмена.Услуги.Итог("СуммаРозн")
		)
		=  
		(ОбСмена.СуммаНаличными+ОбСмена.СуммаПоКартам - 
		ОбСмена.ВозвратНаличными -ОбСмена.ВозвратПоКартам) Тогда
	
	    ОбСмена.Комментарий="Сумма ОК.";
		
		СходитсяПоСумме=Истина;
	
	КонецЕсли;
	
	//---------------<Корректность По Количеству Чеков>---------------------------// GtG // 28.12.2015 18:52:54 
	СходитсяПоКоличествуЧеков=Ложь;
	
	ТЗТ=ОбСмена.ПродажиТовара.Выгрузить(,"Количество,GuidЧека");
	ТЗТ.Колонки.Добавить("КЧ");
	
	Для Каждого Стр Из ТЗТ Цикл
		Если Стр.Количество<0 Тогда
			Стр.Количество=-1;
		Иначе
			Стр.Количество=1;
		КонецЕсли;	
		Стр.КЧ=1;
	КонецЦикла; 
	
	Для Каждого Стр Из ОбСмена.Авансы_ПолучениеИВозврат  Цикл
		
		СтрТЗТ=ТЗТ.Добавить();
		
		СтрТЗТ.GuidЧека=Стр.GuidЧека;
		СтрТЗТ.КЧ=1;
		
		Если Стр.Сумма>0 Тогда
			СтрТЗТ.Количество=1;
		Иначе
			СтрТЗТ.Количество=-1;	
		КонецЕсли;	
		
		
	КонецЦикла;	
	
	
	
	ТЗТ.Свернуть("Количество,GuidЧека,КЧ");//уникальные
	ТЗТ.Свернуть("Количество","КЧ"); // продажа/возврат , количество чеков
	
	ТЗТПродаж=0;
	ТЗТВозврат=0;
	
	Для Каждого Стр Из ТЗТ Цикл
		Если Стр.Количество>0 ТОгда
			ТЗТПРодаж=Стр.КЧ;
		Иначе
			ТЗТВозврат=Стр.КЧ;
		КонецЕсли;
	КонецЦикла;
		
	Если  ОбСмена.КолвоЧековПродажи=ТЗТПродаж И ОбСмена.КолвоЧековВозвратов=ТЗТВозврат ТОгда
		СходитсяПоКоличествуЧеков=Истина;
		ОбСмена.Комментарий=ОбСмена.Комментарий+" Кол-во чеков ОК.";
	КонецЕсли;
	
	//---------------<Сводная проверка корректности по сумме и количеству чеков>---------------------------// GtG // 28.12.2015 19:34:38
	
	Если СходитсяПоСумме и СходитсяПоКоличествуЧеков Тогда
		ОбСмена.Корректная = Истина;
		СменаКорректна=Истина;
	КонецЕсли;	
	
	Возврат СменаКорректна;// если истина то запись удалится из регистра обмена.
КонецФункции


Функция Добавить_ECR_PREPAY_GETиRET(ОбСмена,ХМЛСтрока,Get1Ret2)    // "ecr.cheque* - Получение аванса"
	Успешно=Ложь;
	
	ЧХМЛ=Новый ЧтениеXML;
	ЧХМЛ.УстановитьСтроку(ХМЛСтрока);
	
	Пока ЧХМЛ.Прочитать() Цикл
		Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента И ЧХМЛ.Имя="hdr" ТОгда
			Пока ЧХМЛ.Прочитать() Цикл
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="guid" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						GuidЧека=ЧХМЛ.Значение;
						
						Если ОбСмена.Авансы_ПолучениеИВозврат.Найти(GuidЧека,"GuidЧека")<> Неопределено ТОгда
							// Эти данные уже были загружены ранее
							Успешно=Истина;
							Возврат Успешно; // и далее оно удалится из регистра по общей методе.
						Конецесли;	
						
						// Это новые данные. Пишем в документ.
					
						Стр=Обсмена.Авансы_ПолучениеИВозврат.Добавить();
						Стр.GuidЧека = GuidЧека ;
						
					КонецЕсли;
				КонецЕсли;
				
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_order_personal" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						Стр.ИДАванса=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="login_key" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						Стр.СотрудникКод=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_payment_type" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						Стр.ТипОплаты=ЧХМЛ.Значение;
					КонецЕсли;
				КонецЕсли;
				
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_pay" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						
						Если Get1Ret2=1 Тогда
							Стр.Сумма=ЧХМЛ.Значение;  // получен аванс
							Стр.СуммаВозврат=0;
						Иначе  //Get1Ret2=2
							Стр.Сумма=0;
							Стр.СуммаВозврат=ЧХМЛ.Значение; // возвращен аванс
						КонецЕсли;
						
						Успешно=Истина;
						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Успешно;
КонецФункции


Функция Добавить_ECR_RETURN(ОбСмена,ХМЛСтрока)
	
		
	
	Успешно=Ложь;
	
	GuidЧека="";
	ТекСотрудникКод=""; // код кассира пробившего исходный чек
	ДатаВремяЧека="";
	НомерЧека="";
	
	ТипОплатыВозврата=0;
	
	ЧХМЛ=Новый ЧтениеXML;
	ЧХМЛ.УстановитьСтроку(ХМЛСтрока);
	
	Пока ЧХМЛ.Прочитать() Цикл
		Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента И ЧХМЛ.Имя="hdr" ТОгда
			Пока ЧХМЛ.Прочитать() Цикл
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="guid" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						GuidЧека=ЧХМЛ.Значение;
						
						Если ОбСмена.ПродажиТовара.Найти(GuidЧека,"GuidЧека")<> Неопределено ТОгда
							// Эти данные уже были загружены ранее
							Успешно=Истина;
							Возврат Успешно; // и далее оно удалится из регистра по общей методе.
						Конецесли;	
						
						// Это новые данные. Пишем в документ.
						
						// Строки документа создаем при обработке блока строк 
						
						
						
						
						
												
					КонецЕсли;
					//---------------<кассир кому зачесть возврат, может быть не тем, кто за кассой сейчас >---------------------------// GtG // 19.12.2015 11:49:22 
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="login_key" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ТекСотрудникКод=ЧХМЛ.Значение;
					КонецЕсли;	
					
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="parent_login_key" Тогда  // это кассир пробивший исходный чек
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ТекСотрудникКод=ЧХМЛ.Значение;
					КонецЕсли;
					
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_payment_type" Тогда  
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ТипОплатыВозврата=ЧХМЛ.Значение;
					КонецЕсли;
					
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="tclose" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ДатаВремяЧека=Дата(ЧХМЛ.Значение);
					КонецЕсли;		
					
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="ndoc" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						НомерЧека=ЧХМЛ.Значение;
					КонецЕсли;
					
					
					
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="hdr" Тогда  // это конец шапки	
					
					СтрРекв=ОбСмена.РеквизитыЧеков.Добавить(); 
					СтрРекв.GuidЧека=GuidЧека;
					СтрРекв.ДатаВремяЧека=ДатаВремяЧека;
					СтрРекв.НомерЧека=НомерЧека;
					СтрРекв.СотрудникКод=ТекСотрудникКод;

					
					 Прервать; // Закончили обрабатывать шапку , нужно выйти в верхний цикл.
				КонецЕсли;
			КонецЦикла;
			
			//---------------<Блок Строк>---------------------------// GtG // 18.12.2015 22:02:09	
		ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента И ЧХМЛ.Имя="str" ТОгда
			
			МассивДобавленныхСтрок=Новый Массив;
			
			
			Пока ЧХМЛ.Прочитать() Цикл // Содержимое str
				
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="str" Тогда
					Прервать; // Закончили обрабатывать Блок строк чека , нужно выйти в верхний цикл.
				КонецЕсли;

				
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="row" Тогда
					//---------------<Пошла строка>---------------------------// GtG // 18.12.2015 22:05:45
					СтрТовар=Обсмена.ПродажиТовара.Добавить();
					СтрТовар.GuidЧека =GuidЧека;
					СтрТовар.СотрудникКод =ТекСотрудникКод;
					СтрТовар.ТипОплаты=ТипОплатыВозврата;
					
					МассивДобавленныхСтрок.Добавить(СтрТовар);
					
					Пока ЧХМЛ.Прочитать() Цикл //реквизиты row
						
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="row" Тогда
							Прервать;
						КонецЕсли;	
						

						
						
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="guid_gpart" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.КодПартии=Число(ЧХМЛ.Значение);
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="qnt" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.Количество=-ЧХМЛ.Значение;
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="p_vat_rtl" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.СтавкаНДСРозн=ЧХМЛ.Значение;
							КонецЕсли;	
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_rtl_w_vat" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.СуммаРозничнаяБезСкидки=-ЧХМЛ.Значение; // Сумма розн без скидки
							КонецЕсли;		
							
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_pay" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.СуммаРозн=-ЧХМЛ.Значение;     // розничная фактическая, с учетом предоставленной скидки
							КонецЕсли;		
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_pay_vat" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.НДСРозн=-ЧХМЛ.Значение;      // НДС розничный фактический, с учетом предоставленной скидки
							КонецЕсли;		
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_discount" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.СуммаСкидки=-ЧХМЛ.Значение;
							КонецЕсли;			
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_pur_wo_vat" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.СуммаЗакупБезНДС=-ЧХМЛ.Значение;
							КонецЕсли;	
							//---------------<Сумма по персональным продажам>---------------------------// GtG // 21.12.2015 17:06:36							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="mss_total_bonus" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.ОбщийБонус=-ЧХМЛ.Значение;
							КонецЕсли;	
							
							// для записи в перс продажи данных пока недостаточно.
							// пишем в персоналку когда будем дополнять недостающие данные.							
						КонецЕсли;
						
					КонецЦикла;	//реквизиты row
				
				КонецЕсли;
				
			КонецЦикла;	 // Содержимое str

		КонецЕсли;
	КонецЦикла;
	//---------------<Подгребаем недостающие данные запросом>---------------------------// GtG // 18.12.2015 22:25:57 
	Запрос=Новый Запрос;
		
	// Для внутренней комиссии код контрагента берем из партии из поля  ПоставщикКомитентВнутренний ,
	// для внешней комиссии код контрагента берем из поля поставщик
	
	Запрос.Текст="ВЫБРАТЬ
	             |	УЗ_Партии.Код КАК Код,
	             |	УЗ_Партии.СтавкаНДСЗакуп,
	             |	УЗ_Партии.КодТовара,
	             |	УЗ_Партии.ВидПоступления,
	             |	ВЫБОР
	             |		КОГДА УЗ_Партии.ВидПоступления = 1
	             |				И УЗ_Партии.ПоставщикКомитентВнутренний = 0
	             |			ТОГДА УЗ_Партии.Поставщик
	             |		ИНАЧЕ УЗ_Партии.ПоставщикКомитентВнутренний
	             |	КОНЕЦ КАК Поставщик
	             |ИЗ
	             |	Справочник.УЗ_Партии КАК УЗ_Партии
	             |ГДЕ
	             |	УЗ_Партии.Код В(&КодПартии)";

				 
	 МКодПартии=Новый Массив;
	 Для Каждого ДобСтрока Из МассивДобавленныхСтрок Цикл
		 МКодПартии.Добавить(ДобСтрока.КодПартии);
	 КонецЦикла;
				 
	Запрос.УстановитьПараметр("КодПартии",МКодПартии);
	ТЗПараметровПартий=Запрос.Выполнить().Выгрузить();			 
		
	//---------------<Заполняем недостающие данные>---------------------------// GtG // 19.12.2015 11:36:10	
	Для Каждого Стр Из МассивДобавленныхСтрок Цикл
		СтрПартии=ТЗПараметровПартий.Найти(Стр.КодПартии,"Код");
		Если СтрПартии<>Неопределено Тогда
			Стр.КодТовара=СтрПартии.КодТовара;
			Стр.ВидПоступленияПорядок=СтрПартии.ВидПоступления;
			Стр.СтавкаНДСЗакуп=СтрПартии.СтавкаНДСЗакуп ;
			Стр.Поставщик=СтрПартии.Поставщик;
		КонецЕсли;
		
		
		//---------------<Пишем в дисконт, если в возврате упомянуто.>---------------------------// GtG // 19.12.2015 12:02:11
		// Ан нет, не пишем. ибо при возврате данных подробных о дисконте нет. информация о картах утрачивается.
		
	КонецЦикла;	
	
	//---------------<пишем в персоналку. в 1 таблицу.>---------------------------// GtG // 19.12.2015 12:01:24
	// От персоналки осталась одна таблица итогов. По товару - данные в таблице продажи товара.
	СтрокиЧекаИзТовара=ОбСмена.ПродажиТовара.Выгрузить(Новый Структура("GuidЧека",GuidЧека));
	СтрокиЧекаИзТовара.Колонки.Добавить( "СуммаЗакупСНДС");
	СтрокиЧекаИзТовара.Колонки.Добавить( "КоличествоНаименованийВЧеке");
	СтрокиЧекаИзТовара.Колонки.Добавить( "КоличествоЧеков");

	
	Для Каждого Стр Из СтрокиЧекаИзТовара Цикл
		Стр.СуммаЗакупСНДС =Стр.СуммаЗакупБезНДС+ Стр.СуммаЗакупБезНДС/100*Стр.СтавкаНДСРозн;  // СуммаЗакупСНДС
		Стр.КоличествоНаименованийВЧеке=0;     
		Стр.КоличествоЧеков=-1;
	КонецЦикла;	
	
	СтрокиЧекаИзТовара.Свернуть("GuidЧека,СотрудникКод,КодТовара,КоличествоНаименованийВЧеке,КоличествоЧеков",
	                            "СуммаРозн,СуммаСкидки,СуммаЗакупСНДС,ОбщийБонус,СуммаЗачетаАвансаИСерт");
								
	Для Каждого Стр Из СтрокиЧекаИзТовара Цикл
		Стр.КоличествоНаименованийВЧеке=-1;     
	КонецЦикла;	
	
    СтрокиЧекаИзТовара.Свернуть("GuidЧека,СотрудникКод,КоличествоЧеков" ,
	                            "КоличествоНаименованийВЧеке,СуммаРозн,СуммаСкидки,СуммаЗакупСНДС,ОбщийБонус,СуммаЗачетаАвансаИСерт");  // ==> 1 строка

	// пишем в мотивация итоги 1 строку
	Для Каждого Стр из СтрокиЧекаИзТовара Цикл
		СтрМотИт=ОбСмена.Мотивация_Итоги.Добавить();
		ЗаполнитьЗначенияСвойств(СтрМотИт,Стр);
		СтрМотИт.СуммаРозн=Стр.СуммаРозн+Стр.СуммаЗачетаАвансаИСерт;
	КонецЦикла;	
									
		
	
	Успешно=истина;
	Возврат Успешно;
КонецФункции

Функция Добавить_ECR_SALE(ОбСмена,ХМЛСтрока,МассивКПЛ)
	Успешно=Ложь;    

	GuidЧека="";
	ТекСотрудникКод=""; // код кассира пробившего чек
	
	НомерЧека=""; 	  // для программ лояльности
	ДатаВремяЧека=""; // для программ лояльности
	
	ТипОплатыЧека=0;  // 0-"Наличные"   3-"Банковская карта"

	
	ЧХМЛ=Новый ЧтениеXML;
	ЧХМЛ.УстановитьСтроку(ХМЛСтрока);
	
	МассивДобавленныхСтрок=Новый Массив;
    МассивСтрокПЛ=Новый Массив;
	
	
	Пока ЧХМЛ.Прочитать() Цикл
		Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента И ЧХМЛ.Имя="hdr" ТОгда
			Пока ЧХМЛ.Прочитать() Цикл
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="guid" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						GuidЧека=ЧХМЛ.Значение;
						
						Если ОбСмена.ПродажиТовара.Найти(GuidЧека,"GuidЧека")<> Неопределено ТОгда
							// Эти данные уже были загружены ранее
							Успешно=Истина;
							Возврат Успешно; // и далее оно удалится из регистра по общей методе.
						Конецесли;
						
												
						// Это новые данные. Пишем в документ.
						
						// Строки документа создаем при обработке блока строк 
					КонецЕсли;
					
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="ndoc" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						НомерЧека=ЧХМЛ.Значение;
					КонецЕсли;		
					
					
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="tclose" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ДатаВремяЧека=Дата(ЧХМЛ.Значение);
					КонецЕсли;		
					
					//---------------<кассир кому зачесть продажу >---------------------------// GtG // 19.12.2015 11:49:22 
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="login_key" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ТекСотрудникКод=ЧХМЛ.Значение;
					КонецЕсли;
					
					
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_payment_type" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ТипОплатыЧека=ЧХМЛ.Значение;
					КонецЕсли;	
					
					
					
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="hdr" Тогда  // это конец шапки	
					
					  СтрРекв=ОбСмена.РеквизитыЧеков.Добавить(); 
					  СтрРекв.GuidЧека=GuidЧека;
					  СтрРекв.ДатаВремяЧека=ДатаВремяЧека;
					  СтрРекв.НомерЧека=НомерЧека;
					  СтрРекв.СотрудникКод=ТекСотрудникКод;
					  
					  
					
					 Прервать; // Закончили обрабатывать шапку , нужно выйти в верхний цикл.
				КонецЕсли;
			КонецЦикла;
			
		//---------------<Блок Строк>---------------------------// GtG // 18.12.2015 22:02:09	
		ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента И ЧХМЛ.Имя="str" ТОгда  // Блок строк чека
			
						
			Пока ЧХМЛ.Прочитать() Цикл // Содержимое str
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="str" Тогда
					Прервать; // Закончили обрабатывать Блок строк чека , нужно выйти в верхний цикл.
				КонецЕсли;
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="row" Тогда
					//---------------<Пошла строка>---------------------------// GtG // 18.12.2015 22:05:45
					СтрТовар=Обсмена.ПродажиТовара.Добавить();
					СтрТовар.GuidЧека =GuidЧека;
					СтрТовар.СотрудникКод =ТекСотрудникКод;
					СтрТовар.ТипОплаты=  ТипОплатыЧека;
					
					МассивДобавленныхСтрок.Добавить(СтрТовар);
					
					Пока ЧХМЛ.Прочитать() Цикл //реквизиты row
						
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="row" Тогда
							Прервать;
						КонецЕсли;	
						
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="guid_gpart" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.КодПартии=Число(ЧХМЛ.Значение);
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="qnt" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.Количество=ЧХМЛ.Значение;
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="p_vat_rtl" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.СтавкаНДСРозн=ЧХМЛ.Значение;
							КонецЕсли;	
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_rtl_w_vat" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.СуммаРозничнаяБезСкидки=ЧХМЛ.Значение; // Сумма розн без скидки
							КонецЕсли;			
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_prepay_credit" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.СуммаЗачетаАвансаИСерт=ЧХМЛ.Значение; // Сумма Зачета аванса. Какбэ за деньги, но они получены ранее и пробиты в другой день. а сегодня скидка какбэ на эту сумму и розничная деньгами меньше на сумму зачтенного аванса.
							КонецЕсли;	
							
							
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_pay" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.СуммаРозн=ЧХМЛ.Значение; // Сумма розн с учетом скидки
							КонецЕсли;		
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_pay_vat" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.НДСРозн=ЧХМЛ.Значение;  // ндс с учетом скидки
							КонецЕсли;		
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_discount" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.СуммаСкидки=ЧХМЛ.Значение;
							КонецЕсли;			
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_pur_wo_vat" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.СуммаЗакупБезНДС=ЧХМЛ.Значение;
							КонецЕсли;	
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_dc_type" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.КодТипаДК=ЧХМЛ.Значение;
							КонецЕсли;		
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_promo_hdr" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.ИДРА=ЧХМЛ.Значение; // номер документа РА_РекламнаяАкция
							КонецЕсли;		
							//---------------<Сумма по персональным продажам>---------------------------// GtG // 21.12.2015 17:06:36							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="mss_total_bonus" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрТовар.ОбщийБонус=ЧХМЛ.Значение;
							КонецЕсли;	
							
							// для записи в перс продажи данных пока недостаточно.
							// пишем в персоналку когда будем дополнять недостающие данные.							
							
						КонецЕсли;
						
					КонецЦикла;	//реквизиты row
					
									
					
					
				КонецЕсли;
				
			КонецЦикла;	 // Содержимое str

		ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента И ЧХМЛ.Имя="service" ТОгда  // Блок строк Услуг
			
			// Услуги как правило пустые
			
			ПустойБлок=0;
			
			Пока ЧХМЛ.Прочитать() Цикл // Содержимое str
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="service" Тогда
					Прервать; // Закончили обрабатывать Блок строк чека , нужно выйти в верхний цикл.
				КонецЕсли;
				
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="row" Тогда
					
					//---------------<Пошла строка>---------------------------// GtG // 18.12.2015 22:05:45
					СтрУслуг=Обсмена.Услуги.Добавить();
					СтрУслуг.GuidЧека =GuidЧека;
					СтрУслуг.СотрудникКод =ТекСотрудникКод;
					СтрУслуг.ТипОплаты=  ТипОплатыЧека;
										
					Пока ЧХМЛ.Прочитать() Цикл //реквизиты row
						
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="row" Тогда
							Прервать;
						КонецЕсли;	
						// .... реквизиты row .....
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_service" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрУслуг.КодУслуги=ЧХМЛ.Значение;
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="qnt" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрУслуг.Количество=ЧХМЛ.Значение;
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_pay" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрУслуг.СуммаРозн=ЧХМЛ.Значение;
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_pay_vat" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрУслуг.НДСРозн=ЧХМЛ.Значение;
								СтрУслуг.СтавкаНДСРозн=18; // всегда
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;	
				Конецесли;	
			КонецЦикла;
			
			
						
			
		ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента И ЧХМЛ.Имя="discount_card" ТОгда  // Блок строк Дисконтные карты
			// ДК может не быть
			
						
			
			
			Пока ЧХМЛ.Прочитать() Цикл // Содержимое str
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="discount_card" Тогда
					Прервать; // Закончили обрабатывать Блок строк дисконта чека , нужно выйти в верхний цикл.
				КонецЕсли;
				
				
				//---------------<Для выгрузки в малину используются такие данные:>---------------------------// GtG // 23.12.2015 16:40:53 
				//ОбъектXML.ЗаписатьНачалоЭлемента("trn");
				//ЗаписатьАтрибут(ОбъектXML, "trnID"		, Формат(Док.Дата, "ДФ=yy") + Формат(Док.Номер, "ЧЦ=8; ЧВН=; ЧГ=0") + Сред(ТекКатегория, 4));
				//ЗаписатьАтрибут(ОбъектXML, "dateTime"	, Формат(ПолучитьЗначениеРеквизитаПоСсылке(Док, "Дата"), "ДФ='yyyy-MM-dd HH:mm:ss'; ДП='0001-01-01 00:00:00'"), Ложь);
				//ЗаписатьАтрибут(ОбъектXML, "cardID"		, ТекКатегория); //ТекКатегория	= СтрокаСписка.Значение.Категория;-- короче номер карты малины
				//ЗаписатьАтрибут(ОбъектXML, "locID"		, КодДляФайла); //КодДляФайла = Док.Склад.Код * 100 + Док.Склад.Бренд.Код;
				//ЗаписатьАтрибут(ОбъектXML, "sum"		, ОбщаяСумма);  //ОбщаяСумма		= Формат(Окр(ТаблицаДокументов.Итог("СуммаСоСкидкой"), 2), "ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
				//ЗаписатьАтрибут(ОбъектXML, "VipCard"	, "False");  // всегда ложь
				//ЗаписатьАтрибут(ОбъектXML, "SKUID"		, СтрокаТЧ.Товар.Код);
				//ЗаписатьАтрибут(ОбъектXML, "qty"		, СтрокаТЧ.Количество);
				//ЗаписатьАтрибут(ОбъектXML, "price"		, ?(СтрокаТЧ.Количество = 0, СтрокаТЧ.СуммаСоСкидкой, СтрокаТЧ.СуммаСоСкидкой / СтрокаТЧ.Количество));
				//ЗаписатьАтрибут(ОбъектXML, "lineCost"	, СтрокаТЧ.СуммаСоСкидкой);

				
				//----------------------------------------------------------------------------------------------------------------------------
								
				
				
				
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="row" Тогда
					//---------------<Пошла строка>---------------------------// GtG // 18.12.2015 22:05:45
					ТекНомерДК="";
					
										
					Пока ЧХМЛ.Прочитать() Цикл //реквизиты row
						
						
						
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="row" Тогда
							Прервать;
						КонецЕсли;	
						
						// .... реквизиты row ..... 
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="barcode" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								ТекНомерДК=ЧХМЛ.Значение; // тут запомним, а когда дойдем до типа впишем в товар
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_dc_type" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								
								ЧисловойКодтипаДК=Число(ЧХМЛ.Значение);
								
								
								Если ЧисловойКодтипаДК<>0 Тогда
									// Найдем все строки товара этого чека где указан этот тип дк и впишем туда номер дк
									ОтборСтрокПоДК=Новый Структура;
									ОтборСтрокПоДК.Вставить("GuidЧека",GuidЧека);
									ОтборСтрокПоДК.Вставить("КодТипаДК",ЧисловойКодтипаДК);
									
									СтрокиСКартой= ОбСмена.ПродажиТовара.НайтиСтроки(ОтборСтрокПоДК);	
									
									Если СтрокиСКартой.Количество()<>0   Тогда
										Для Каждого Стр Из СтрокиСКартой Цикл
											Стр.НомерДК=ТекНомерДК; // вписали номер дк по строкам чека
										КонецЦикла;
									КонецЕсли;
									
									//---------------<Программы лояльности.>---------------------------// GtG // 23.12.2015 18:00:32
									// По каждой программе лояльности пишем полный состав чека
									Если МассивКПЛ.Найти(ЧисловойКодтипаДК)<>Неопределено ТОгда
										// эта дк из программ лояльности. 
										ОтборСтрокПоЧекуПоПЛ=Новый Структура;
										ОтборСтрокПоЧекуПоПЛ.Вставить("GuidЧека",GuidЧека);
										
										СтрокиЧекаПоПЛ= ОбСмена.ПродажиТовара.НайтиСтроки(ОтборСтрокПоЧекуПоПЛ); // заполнено все, кроме кода товара
										
										Для Каждого СтрТовараЧекаДляПЛ Из СтрокиЧекаПоПЛ Цикл // ОбСмена.ПродажиТовара Цикл
											
											
											
											СтрПЛ=ОбСмена.ПрограммыЛояльности.Добавить();
											ЗаполнитьЗначенияСвойств(СтрПЛ,СтрТовараЧекаДляПЛ);
																						СтрПЛ.НомерЧека=НомерЧека;
											СтрПЛ.ДатаВремяЧека=ДатаВремяЧека;
											СтрПЛ.КодТипаДК=ЧисловойКодтипаДК;
											СтрПЛ.НомерДК=ТекНомерДК;
											
											
											СуммаСоСкидкойПоСтроке=СтрТовараЧекаДляПЛ.СуммаРозн+СтрТовараЧекаДляПЛ.СуммаЗачетаАвансаИСерт;
											
											
											СтрПЛ.СуммаРознСоСкидкой=СуммаСоСкидкойПоСтроке;
											Если СтрПЛ.Количество = 0 тогда  
												СтрПЛ.ЦенаРознСоСкидкой= СуммаСоСкидкойПоСтроке;
											Иначе
												СтрПЛ.ЦенаРознСоСкидкой= СуммаСоСкидкойПоСтроке / СтрПЛ.Количество;
											КонецЕсли; 
											
											
											
											МассивСтрокПЛ.Добавить(СтрПЛ);
											
										КонецЦикла;	
										
									КонецЕсли; // эта дк из программ лояльности.
									
									
									
								КонецЕсли;	
								
									
								
							КонецЕсли;
							
						КонецЕсли;

					КонецЦикла;	
				КонецЕсли; 	
			КонецЦикла;

			
			
		ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента И ЧХМЛ.Имя="prepay_credit" ТОгда  // Блок строк Зачет авансов	
			// Зачета авансов может не быть
			Пока ЧХМЛ.Прочитать() Цикл // Содержимое str
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="prepay_credit" Тогда
					Прервать; // Закончили обрабатывать Блок строк авансов чека , нужно выйти в верхний цикл.
				КонецЕсли;
				
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="row" Тогда
					//---------------<Пошла строка>---------------------------// GtG // 18.12.2015 22:05:45
					СтрЗачетАвансов=Обсмена.Авансы_Зачет.Добавить();
					СтрЗачетАвансов.GuidЧека =GuidЧека;
					СтрЗачетАвансов.СотрудникКод =ТекСотрудникКод;

										
					Пока ЧХМЛ.Прочитать() Цикл //реквизиты row
						
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="row" Тогда
							Прервать;
						КонецЕсли;	
						
						// .... реквизиты row ..... 
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="guid_gpart" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								// обработать значение ...
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_prepay" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрЗачетАвансов.ИДАванса=ЧХМЛ.Значение;
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_doc_type_prepay" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								// обработать значение ...
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_credit" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрЗачетАвансов.Сумма=ЧХМЛ.Значение;								
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="p_vat_rtl" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрЗачетАвансов.СтавкаНДСРозн=ЧХМЛ.Значение;
							КонецЕсли;
							
						КонецЕсли;


					КонецЦикла;	
				КонецЕсли;	
			КонецЦикла;


			
			
		ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента И ЧХМЛ.Имя="gift_certificate_credit" ТОгда  // Блок строк Зачет сертификатов	
			// сертификатов может не быть
			Пока ЧХМЛ.Прочитать() Цикл // Содержимое str
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="gift_certificate_credit" Тогда
					Прервать; // Закончили обрабатывать Блок строк сертификатов чека , нужно выйти в верхний цикл.
				КонецЕсли;
				
				
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="row" Тогда
					//---------------<Пошла строка>---------------------------// GtG // 18.12.2015 22:05:45
					СтрЗачетСертификатов=Обсмена.Сертификаты_Зачет.Добавить();
					СтрЗачетСертификатов.GuidЧека =GuidЧека;
					СтрЗачетСертификатов.СотрудникКод =ТекСотрудникКод;

										
					Пока ЧХМЛ.Прочитать() Цикл //реквизиты row
						
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="row" Тогда
							
							ОтборДляПоискаЗакупки=Новый Структура();
							ОтборДляПоискаЗакупки.Вставить("GuidЧека",GuidЧека);
							ОтборДляПоискаЗакупки.Вставить("КодПартии",СтрЗачетСертификатов.КодПартии);
							
							МассивСтрокиПартии=ОбСмена.ПродажиТовара.НайтиСтроки(ОтборДляПоискаЗакупки); // 1 строка
							
							Для каждого СтрокаПартии Из МассивСтрокиПартии Цикл
								
								Если СтрокаПартии.СуммаЗакупБезНДС >= СтрЗачетСертификатов.Сумма Тогда
									СтрЗачетСертификатов.СуммаЗакупБезНДС=СтрЗачетСертификатов.Сумма; // Закупка без ндс товара проданного по сертификату превышает или равна сумме по сертификату.
								Иначе
									СтрЗачетСертификатов.СуммаЗакупБезНДС= СтрокаПартии.СуммаЗакупБезНДС; //закупка без НДС меньше суммы зачета по сертификату, значит полностью закрываем закупочную сумму 
								КонецЕсли;	
								
							КонецЦикла;	
							
							Прервать;
						КонецЕсли;	
						
						// .... реквизиты row ..... 
						
						Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="guid_gpart" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								// обработать значение ...
								СтрЗачетСертификатов.КодПартии=ЧХМЛ.Значение;
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_prepay" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрЗачетСертификатов.ИДСертификата=ЧХМЛ.Значение;
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="id_doc_type_prepay" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								// обработать значение ...
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_credit" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрЗачетСертификатов.Сумма=ЧХМЛ.Значение;
							КонецЕсли;
							
						ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="p_vat_rtl" Тогда
							ЧХМЛ.Прочитать();
							Если ЧХМЛ.ИмеетЗначение Тогда
								СтрЗачетСертификатов.СтавкаНДСРозн=ЧХМЛ.Значение;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;	
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;  

	КонецЦикла;
	//---------------<Подгребаем недостающие данные запросом>---------------------------// GtG // 18.12.2015 22:25:57 
	Запрос=Новый Запрос;
	
	// Для внутренней комиссии код контрагента берем из партии из поля  ПоставщикКомитентВнутренний ,
	// для внешней комиссии код контрагента берем из поля поставщик
	
	Запрос.Текст="ВЫБРАТЬ
	             |	УЗ_Партии.Код КАК Код,
	             |	УЗ_Партии.СтавкаНДСЗакуп,
	             |	УЗ_Партии.КодТовара,
	             |	УЗ_Партии.ВидПоступления,
	             |	ВЫБОР
	             |		КОГДА УЗ_Партии.ВидПоступления = 1
	             |				И УЗ_Партии.ПоставщикКомитентВнутренний = 0
	             |			ТОГДА УЗ_Партии.Поставщик
	             |		ИНАЧЕ УЗ_Партии.ПоставщикКомитентВнутренний
	             |	КОНЕЦ КАК Поставщик
	             |ИЗ
	             |	Справочник.УЗ_Партии КАК УЗ_Партии
	             |ГДЕ
	             |	УЗ_Партии.Код В(&КодПартии)";
				 
	 МКодПартии=Новый Массив;
	 Для Каждого ДобСтрока Из МассивДобавленныхСтрок Цикл
		 МКодПартии.Добавить(ДобСтрока.КодПартии);
	 КонецЦикла;
				 
	Запрос.УстановитьПараметр("КодПартии",МКодПартии);
	ТЗПараметровПартий=Запрос.Выполнить().Выгрузить();			 
		
	//---------------<Заполняем недостающие данные>---------------------------// GtG // 19.12.2015 11:36:10	
	Для Каждого Стр Из МассивДобавленныхСтрок Цикл
		СтрПартии=ТЗПараметровПартий.Найти(Стр.КодПартии,"Код");
		Если СтрПартии<>Неопределено Тогда
			Стр.КодТовара=СтрПартии.КодТовара;  // при загрузке  известно только код партии
			Стр.ВидПоступленияПорядок=СтрПартии.ВидПоступления;
			Стр.СтавкаНДСЗакуп=СтрПартии.СтавкаНДСЗакуп ;
			Стр.Поставщик=СтрПартии.Поставщик;   // для комиссионного товара
		КонецЕсли;
		//---------------<Пишем в дисконт, если в возврате упомянуто.>---------------------------// GtG // 19.12.2015 12:02:11
		// Ан нет, не пишем. ибо при возврате данных подробных о дисконте нет. информация о картах утрачивается.
	КонецЦикла;	
	
	
	Для Каждого Стр Из МассивСтрокПЛ Цикл
		СтрПартии=ТЗПараметровПартий.Найти(Стр.КодПартии,"Код");
		Если СтрПартии<>Неопределено Тогда
			Стр.КодТовара=СтрПартии.КодТовара; // при загрузке  известно только код партии
		КонецЕсли;
		//---------------<Пишем в дисконт, если в возврате упомянуто.>---------------------------// GtG // 19.12.2015 12:02:11
		// Ан нет, не пишем. ибо при возврате данных подробных о дисконте нет. информация о картах утрачивается.
	КонецЦикла;	

	
	
	
	//---------------<пишем в персоналку. в 1 таблицу.>---------------------------// GtG // 19.12.2015 12:01:24
	// От персоналки осталась одна таблица итогов. По товару - данные в таблице продажи товара.
	СтрокиЧекаИзТовара=ОбСмена.ПродажиТовара.Выгрузить(Новый Структура("GuidЧека",GuidЧека));
	СтрокиЧекаИзТовара.Колонки.Добавить( "СуммаЗакупСНДС");
	СтрокиЧекаИзТовара.Колонки.Добавить( "КоличествоНаименованийВЧеке");
	СтрокиЧекаИзТовара.Колонки.Добавить( "КоличествоЧеков");

	
	Для Каждого Стр Из СтрокиЧекаИзТовара Цикл
		Стр.СуммаЗакупСНДС =Стр.СуммаЗакупБезНДС+ Стр.СуммаЗакупБезНДС/100*Стр.СтавкаНДСРозн;  // СуммаЗакупСНДС
		Стр.КоличествоНаименованийВЧеке=0;     
		Стр.КоличествоЧеков=1;
	КонецЦикла;	
	
	СтрокиЧекаИзТовара.Свернуть("GuidЧека,СотрудникКод,КодТовара,КоличествоНаименованийВЧеке,КоличествоЧеков",
	                            "СуммаРозн,СуммаСкидки,СуммаЗакупСНДС,ОбщийБонус,СуммаЗачетаАвансаИСерт");
								
	Для Каждого Стр Из СтрокиЧекаИзТовара Цикл
		Стр.КоличествоНаименованийВЧеке=1;     
	КонецЦикла;	
	
    СтрокиЧекаИзТовара.Свернуть("GuidЧека,СотрудникКод,КоличествоЧеков" ,
	                            "КоличествоНаименованийВЧеке,СуммаРозн,СуммаСкидки,СуммаЗакупСНДС,ОбщийБонус,СуммаЗачетаАвансаИСерт");  // ==> 1 строка

	// пишем в мотивация итоги 1 строку
	Для Каждого Стр из СтрокиЧекаИзТовара Цикл
		СтрМотИт=ОбСмена.Мотивация_Итоги.Добавить();
		ЗаполнитьЗначенияСвойств(СтрМотИт,Стр);
		СтрМотИт.СуммаРозн=Стр.СуммаРозн+Стр.СуммаЗачетаАвансаИСерт;
	КонецЦикла;	
									
		
	
	Успешно=истина;
	Возврат Успешно;

КонецФункции



Функция Добавить_ECR_CHEQUE_CANCELED(ОбСмена,ХМЛСтрока)
	
	Успешно=Ложь;
	
	GuidЧека="";
	ТекСотрудникКод=""; // код кассира пробившего исходный чек
	СуммаРозн=0;
	
	ЧХМЛ=Новый ЧтениеXML;
	ЧХМЛ.УстановитьСтроку(ХМЛСтрока);
	
	Пока ЧХМЛ.Прочитать() Цикл
		Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента И ЧХМЛ.Имя="hdr" ТОгда
			Пока ЧХМЛ.Прочитать() Цикл
				Если ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="guid" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						GuidЧека=ЧХМЛ.Значение;
						
						Если ОбСмена.ОтмененныеЧеки.Найти(GuidЧека,"GuidЧека")<> Неопределено ТОгда
							// Эти данные уже были загружены ранее
							Успешно=Истина;
							Возврат Успешно; // и далее оно удалится из регистра по общей методе.
						Конецесли;	
						
						// Это новые данные. Пишем в документ.
						
						// Строки документа создаем при обработке блока строк 
						
						
					КонецЕсли;
					//---------------<кассир кому зачесть возврат, может быть не тем, кто за кассой сейчас >---------------------------// GtG // 19.12.2015 11:49:22 
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="login_key" Тогда
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						ТекСотрудникКод=ЧХМЛ.Значение;
					КонецЕсли;	
					
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.НачалоЭлемента и ЧХМЛ.Имя="sum_rtl_w_vat" Тогда  // это кассир пробивший исходный чек
					ЧХМЛ.Прочитать();
					Если ЧХМЛ.ИмеетЗначение Тогда
						СуммаРозн=ЧХМЛ.Значение;
					КонецЕсли;
					
				ИначеЕсли ЧХМЛ.ТипУзла=ТипУзлаXML.КонецЭлемента и ЧХМЛ.Имя="hdr" Тогда  // это конец шапки
					
					Стр=ОбСмена.ОтмененныеЧеки.Добавить();
					Стр.GuidЧека  =  GuidЧека;
					Стр.СотрудникКод = ТекСотрудникКод;
					Стр.СуммаРозн    = СуммаРозн;
					
					Успешно=Истина;
					
					Возврат Успешно; // Закончили обрабатывать шапку , нужно выйти в верхний цикл.
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции


Процедура СоздатьРККМ(ОбСмена,СозданаВручную) Экспорт
	
	//---------------<Если РККМ по смене с таким GUIDом существует - нужно сначала удалить такую РККМ а потом заново её создать.>---------------------------// GtG // 29.12.2015 22:13:27
	
	Запрос=Новый Запрос();
	Запрос.Текст="ВЫБРАТЬ
	             |	УЗ_РеализацияККМ.Ссылка
	             |ИЗ
	             |	Документ.УЗ_РеализацияККМ КАК УЗ_РеализацияККМ
	             |ГДЕ
	             |	УЗ_РеализацияККМ.GuidСмены = &GuidСмены
	             |	И УЗ_РеализацияККМ.Дата МЕЖДУ &Дата1 И &Дата2";
	Запрос.УстановитьПараметр("GuidСмены",ОбСмена.GuidСмены);
	Запрос.УстановитьПараметр("Дата1",НачалоДня(ОбСмена.Дата));
	Запрос.УстановитьПараметр("Дата2",КонецДня(ОбСмена.Дата));
	
	Рез=Запрос.Выполнить();
	Если Рез.Пустой()=Ложь Тогда
		Выб=Рез.Выбрать();
		Выб.Следующий();
		Выб.Ссылка.ПолучитьОбъект().Удалить();
	Конецесли;
	
	//---------------<Создаем новый РККМ>---------------------------// GtG // 29.12.2015 23:13:30
	
	Док=Документы.УЗ_РеализацияККМ.СоздатьДокумент();
	Док.СозданаВручную=СозданаВручную;
	ЗаполнитьЗначенияСвойств(Док,ОбСмена,,"Номер");
	
	БазаПоТовару=ОбСмена.ПродажиТовара.Выгрузить();
	БазаПоТовару.Колонки.Добавить("ПолнаяФактрозница",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2,ДопустимыйЗнак.Любой)));
	
	Для Каждого Стр Из БазаПоТовару Цикл
		Стр.ПолнаяФактрозница=Стр.СуммаРозн + Стр.СуммаЗачетаАвансаИСерт;
	КонецЦикла;
	
	
	Док.ПродажиТовара.Загрузить(БазаПоТовару);
	Док.ПродажиТовара.Свернуть("КодПартии,КодТовара,ВидПоступленияПорядок,СтавкаНДСЗакуп,СтавкаНДСРозн,Поставщик","Количество,СуммаЗакупБезНДС,СуммаРозн,НДСРозн,СуммаСкидки,СуммаЗачетаАвансаИСерт,СуммаРозничнаяБезСкидки");
	
	ОтборСтрокполногоВозврата=Новый Структура("Количество,СуммаЗакупБезНДС,СуммаРозн",0,0,0);
	МассивСтрокполногоВозврата=Док.ПродажиТовара.НайтиСтроки(ОтборСтрокполногоВозврата);
	Для Каждого СПВ из МассивСтрокполногоВозврата Цикл
		Док.ПродажиТовара.Удалить(СПВ);
	КонецЦикла;
		
	
	
	БазаПоТовару1=БазаПоТовару.Скопировать();
	БазаПоТовару1.Колонки.СуммаРозн.Имя="неТО";
	БазаПоТовару1.Колонки.ПолнаяФактрозница.Имя="СуммаРозн";
	БазаПоТовару1.Свернуть("КодПартии,КодТовара,СтавкаНДСРозн,КодТипаДК,НомерДК,ИДРА","Количество,СуммаЗакупБезНДС,СуммаРозн,СуммаСкидки");
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ТЗ.КодПартии,
	             |	ТЗ.КодТовара,
	             |	ТЗ.СтавкаНДСРозн,
	             |	ТЗ.КодТипаДК,
	             |	ТЗ.НомерДК,
	             |	ТЗ.ИДРА,
	             |	ТЗ.Количество,
	             |	ТЗ.СуммаЗакупБезНДС,
	             |	ТЗ.СуммаРозн,
	             |	ТЗ.СуммаСкидки
	             |ПОМЕСТИТЬ ТЗ
	             |ИЗ
	             |	&tz КАК ТЗ
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТЗ.КодПартии,
	             |	ТЗ.КодТовара,
	             |	ТЗ.СтавкаНДСРозн,
	             |	ТЗ.КодТипаДК,
	             |	ТЗ.НомерДК,
	             |	ТЗ.ИДРА,
	             |	ТЗ.Количество,
	             |	ТЗ.СуммаЗакупБезНДС,
	             |	ТЗ.СуммаРозн,
	             |	ТЗ.СуммаСкидки
	             |ИЗ
	             |	ТЗ КАК ТЗ
	             |ГДЕ
	             |	ТЗ.СуммаСкидки <> 0
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |УНИЧТОЖИТЬ ТЗ";
	Запрос.УстановитьПараметр("tz",БазаПоТовару1);
	
	
	
	Док.Дисконт.Загрузить(Запрос.Выполнить().Выгрузить());
	
	
	Док.МотивацияТовар.Загрузить(БазаПоТовару);
	Док.МотивацияТовар.Свернуть("СотрудникКод,КодТовара,СтавкаНДСРозн","Количество,СуммаЗакупБезНДС,СуммаРозн,СуммаЗачетаАвансаИСерт,СуммаСкидки,ОбщийБонус");
	
	Док.Мотивация_Итоги.Загрузить(ОбСмена.Мотивация_Итоги.Выгрузить());
	Док.Мотивация_Итоги.Свернуть("СотрудникКод,","СуммаРозн,СуммаСкидки,СуммаЗакупСНДС,ОбщийБонус,КоличествоЧеков,КоличествоНаименованийВЧеке");
	
	Док.Авансы_ПолучениеИВозврат.Загрузить(ОбСмена.Авансы_ПолучениеИВозврат.Выгрузить());
	Док.Авансы_ПолучениеИВозврат.Свернуть("СотрудникКод,ИДАванса,ТипОплаты","Сумма,СуммаВозврат");
	
	Док.Авансы_Зачет.Загрузить(ОбСмена.Авансы_Зачет.Выгрузить());
	Док.Авансы_Зачет.Свернуть("СотрудникКод,ИДАванса,СтавкаНДСРозн","Сумма");
	
	Док.Сертификаты_Зачет.Загрузить(ОбСмена.Сертификаты_Зачет.Выгрузить());
	Док.Сертификаты_Зачет.Свернуть("СотрудникКод,ИДСертификата,СтавкаНДСРозн","Сумма,СуммаЗакупБезНДС");
	
	Док.Услуги.Загрузить(ОбСмена.Услуги.Выгрузить());
	Док.Услуги.Свернуть("КодУслуги,СтавкаНДСРозн,ТипОплаты","Количество,СуммаРозн,НДСРозн");
	
	Док.ПрограммыЛояльности.Загрузить(ОбСмена.ПрограммыЛояльности.Выгрузить()); // не сворачиваем
	Док.ПрограммыЛояльности.Свернуть("КодТипаДК,GuidЧека,НомерЧека,ДатаВремяЧека,НомерДК,КодТовара" , "Количество,СуммаРознСоСкидкой");
	для Каждого СтрПЛ Из Док.ПрограммыЛояльности Цикл
		Если СтрПЛ.Количество = 0 тогда  
			СтрПЛ.ЦенаРознСоСкидкой= СтрПЛ.СуммаРознСоСкидкой;
		Иначе
			СтрПЛ.ЦенаРознСоСкидкой= СтрПЛ.СуммаРознСоСкидкой / СтрПЛ.Количество;
		КонецЕсли; 
	КонецЦикла;
	
	
	Док.ОтмененныеЧеки.Загрузить(ОбСмена.ОтмененныеЧеки.Выгрузить()); // не сворачиваем
	
	//---------------<Заполнение отчета комиссионера о продажах>---------------------------// GtG // 30.12.2015 14:29:23
	
	ОтборКомиссионныеПродажи=Новый Структура("ВидПоступленияПорядок",1);
	КомПрод= Док.ПродажиТовара.Выгрузить(ОтборКомиссионныеПродажи);
	
	Если КомПрод.Количество()<>0 Тогда // имеет смысл мучать базу запросом
		Запрос.Текст="ВЫБРАТЬ
		             |	ТЗ.Поставщик КАК Комитент,
		             |	ТЗ.СтавкаНДСРозн КАК СтавкаНДСРозн,
		             |	ТЗ.СуммаЗакупБезНДС КАК СуммаЗакупБезНДС,
		             |	ТЗ.СуммаРозн КАК СуммаРозн
		             |ПОМЕСТИТЬ tmpSales
		             |ИЗ
		             |	&ТзПродажиТовара КАК ТЗ
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	база.Комитент,
		             |	база.СтавкаНДСРозн,
		             |	база.СуммаЗакупБезНДС,
		             |	база.СуммаРозн,
		             |	Фирмы.Код КАК КомитентОрганизация
		             |ИЗ
		             |	(ВЫБРАТЬ
		             |		ТЗ.Комитент КАК Комитент,
		             |		ТЗ.СтавкаНДСРозн КАК СтавкаНДСРозн,
		             |		СУММА(ТЗ.СуммаЗакупБезНДС) КАК СуммаЗакупБезНДС,
		             |		СУММА(ТЗ.СуммаРозн) КАК СуммаРозн
		             |	ИЗ
		             |		tmpSales КАК ТЗ
		             |	
		             |	СГРУППИРОВАТЬ ПО
		             |		ТЗ.Комитент,
		             |		ТЗ.СтавкаНДСРозн) КАК база
		             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Фирмы КАК Фирмы
		             |		ПО база.Комитент = Фирмы.ФирмаКакПоставщик.Код
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |УНИЧТОЖИТЬ tmpSales";
		Запрос.УстановитьПараметр("ТзПродажиТовара",КомПрод);
		
		Док.ОтчетКомиссионераОПродажах.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли; 
	
	//---------------<Заполнение таблицы для бухгалтерии>---------------------------// GtG // 30.12.2015 14:29:38
	// Данные для загрузки выручки по организации, продавшей товар 
	
	//---------------<Про Товар>---------------------------// GtG // 30.12.2015 21:38:12
	ТЗТовар=Док.ПродажиТовара.Выгрузить();
	
	Для Каждого Стр Из ТЗТовар Цикл
		Если Стр.ВидПоступленияПорядок<>1 Тогда  // продажи некомиссионного товара не привязываем к контрагенту комиссионеру.
			Стр.Поставщик ="";
		КонецЕсли;
	КонецЦикла;	
	
	ТЗТовар.Свернуть("ВидПоступленияПорядок,СтавкаНДСРозн,ТипОплаты,Поставщик,ВидПоступленияПорядок","СуммаЗакупБезНДС,СуммаРозн,НДСРозн");
	
	ТЗТовар.Колонки.Найти("Поставщик").Имя="Комитент";
	
	Для Каждого СтрТовар Из ТЗТовар Цикл
		БухСтр=Док.ДляБухгалтерии.Добавить();
		ЗаполнитьЗначенияСвойств(БухСтр,СтрТовар);
	КонецЦикла;	
	
	//---------------<Про услуги>---------------------------// GtG // 30.12.2015 21:38:27
	
	ТЗУслуги=Док.Услуги.Выгрузить();
	
	ТЗУслуги.Свернуть("СтавкаНДСРозн,ТипОплаты","СуммаРозн,НДСРозн");
	ТЗУслуги.Колонки.Найти("СуммаРозн").Имя="СуммаРознУслуги";
	ТЗУслуги.Колонки.Найти("НДСРозн").Имя="НДСРознУслуги";
	
	Для Каждого СтрУслуги Из ТЗУслуги Цикл
		 БухСтр=Док.ДляБухгалтерии.Добавить();
		 ЗаполнитьЗначенияСвойств(БухСтр,СтрТовар);
	КонецЦикла;	
	
	//---------------<Про авансы>---------------------------// GtG // 30.12.2015 21:38:36
	ТЗАвансовПолВозвр=Док.Авансы_ПолучениеИВозврат.Выгрузить();
	ТЗАвансовПолВозвр.Свернуть("ТипОплаты","Сумма,СуммаВозврат");
	
	ТЗАвансовПолВозвр.Колонки.Найти("Сумма").Имя="СуммаАвансовПолученная";
	ТЗАвансовПолВозвр.Колонки.Найти("СуммаВозврат").Имя="СуммаАвансовВозврат";

	
	Для Каждого СтрАВПВ Из ТЗАвансовПолВозвр Цикл
		БухСтр=Док.ДляБухгалтерии.Добавить();
		ЗаполнитьЗначенияСвойств(БухСтр,СтрАВПВ);
		БухСтр.СтавкаНДСРозн=18;
	КонецЦикла;	
	
	ТЗАвансовЗачет=Док.Авансы_Зачет.Выгрузить();
	ТЗАвансовЗачет.Свернуть("СтавкаНДСРозн","Сумма");
	ТЗАвансовЗачет.Колонки.Найти("Сумма").Имя="СуммаАвансаЗачтенная";
	
	Для Каждого СтрАВЗ Из ТЗАвансовЗачет Цикл
		БухСтр=Док.ДляБухгалтерии.Добавить();
		ЗаполнитьЗначенияСвойств(БухСтр,СтрАВЗ);
	КонецЦикла;	
	
	//---------------<Про сертификаты>---------------------------// GtG // 30.12.2015 21:38:45
	ТЗЗачСерт=док.Сертификаты_Зачет.Выгрузить();
	ТЗЗачСерт.Свернуть("СтавкаНДСРозн","СуммаЗакупБезНДС,Сумма");
	
	ТЗЗачСерт.Колонки.Найти("Сумма").Имя="СуммаЗачетаСертификатов";
	ТЗЗачСерт.Колонки.Найти("СуммаЗакупБезНДС").Имя="СуммаЗакупБезНДСПоСертификатам";
	
	Для Каждого СтрЗачСерт Из ТЗЗачСерт Цикл
		БухСтр=Док.ДляБухгалтерии.Добавить();
		ЗаполнитьЗначенияСвойств(БухСтр,СтрЗачСерт);
	КонецЦикла;	
	
	Док.Записать(РежимЗаписиДокумента.Проведение);
	
	ОбСмена.ВАрхив=Истина;
	ОбСмена.Записать(РежимЗаписиДокумента.ОтменаПроведения);;
	
	
КонецПроцедуры	






Функция Загрузка(НачКодАптеки=0,КонКодАптеки=0) Экспорт
	Если НачКодАптеки=0 или КонКодАптеки=0 Тогда
		Возврат "Не задан вменяемый диапазон кодов аптек (указано : с "+НачКодАптеки+" по "+КонКодАптеки+")";
	КонецЕсли;
	
	Если НачКодАптеки>КонКодАптеки Тогда
		Возврат "Задан невменяемый диапазон кодов аптек (указано : с "+НачКодАптеки+" по "+КонКодАптеки+")";
	КонецЕсли;
	
	КоличествоОбработанныхОбъектов=0;
	
	
	МЗВД=Новый Массив; //МассивЗагружаемыхВидовДокументов
	МЗВД.Добавить("ECR_PREPAY_GET"); // "ecr.cheque* - Получение аванса"
	МЗВД.Добавить("ECR_PREPAY_RET"); // "ecr.cheque* - Возврат аванса"
	МЗВД.Добавить("ECR_RETURN"); // "ecr.cheque* - Возврат продажи"
	МЗВД.Добавить("ECR_SALE"); // "ecr.cheque* - Продажа"
	МЗВД.Добавить("ECR_SESSION"); // "ecr.session_hdr* - Смена ККМ"
	МЗВД.Добавить("ECR_CHEQUE_CANCELED");
	
	МУдВД=Новый Массив(); //МассивУдаляемыхВидовДокументов
	МУдВД.Добавить("ECR_TECH"); // "ecr.cheque* - Технологический"
	МУдВД.Добавить("ECR_X_REPORT"); // "ecr.cheque* - X-отчет"
	МУдВД.Добавить("ECR_Z_REPORT"); // "ecr.cheque* - Z-отчет"
	МУдВД.Добавить("ECR_INCOME"); //"ecr.cheque* - Внесение"
	МУдВД.Добавить("ECR_OUTCOME"); // "ecr.cheque* - Выплата"
    МУдВД.Добавить("ECR_SCN_REPORT"); // "ecr.cheque* - Очтет по секциям"
	
	Запрос=новый Запрос();
	
	МенВремТаб=Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц=МенВремТаб;
	
	
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 123456789
	             |	АптекаОфисЧеки.ИД,
	             |	АптекаОфисЧеки.КодАптеки,
	             |	АптекаОфисЧеки.ВидДокумента,
	             |	АптекаОфисЧеки.НомерККМ,
	             |	АптекаОфисЧеки.НомерСмены,
	             |	АптекаОфисЧеки.ДатаДокумента,
	             |	АптекаОфисЧеки.НомерДокумента,
	             |	АптекаОфисЧеки.НомерЧека,
	             |	АптекаОфисЧеки.ИдентификаторДокумента,
	             |	АптекаОфисЧеки.Проведен,
	             |	АптекаОфисЧеки.Удален,
	             |	АптекаОфисЧеки.Статус,
	             |	АптекаОфисЧеки.ВерсияФормата,
	             |	АптекаОфисЧеки.МД5Хэш,
	             |	АптекаОфисЧеки.ХМЛСтрока,
	             |	УЗ_СменаККМ.Ссылка КАК УЗ_СменаККМСсылка
	             |ПОМЕСТИТЬ ЗагружаемыеДанные
	             |ИЗ
	             |	РегистрСведений.АптекаОфисЧеки КАК АптекаОфисЧеки
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЗ_СменаККМ КАК УЗ_СменаККМ
	             |		ПО АптекаОфисЧеки.КодАптеки = УЗ_СменаККМ.СкладКод
	             |			И АптекаОфисЧеки.НомерККМ = УЗ_СменаККМ.НомерККМ
	             |			И АптекаОфисЧеки.НомерСмены = УЗ_СменаККМ.НомерСмены
	             |			И (НАЧАЛОПЕРИОДА(АптекаОфисЧеки.ДатаДокумента, ДЕНЬ) = НАЧАЛОПЕРИОДА(УЗ_СменаККМ.ДатаСмены, ДЕНЬ))
	             |ГДЕ
	             |	АптекаОфисЧеки.КодАптеки МЕЖДУ &НачКодАптеки И &КонКодАптеки
	             |	И АптекаОфисЧеки.ВидДокумента В(&ЗагружаемыеВидыДокументов)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	ЗагружаемыеДанные.КодАптеки КАК СкладКод,
	             |	ЗагружаемыеДанные.НомерККМ,
	             |	ЗагружаемыеДанные.НомерСмены,
	             |	НАЧАЛОПЕРИОДА(ЗагружаемыеДанные.ДатаДокумента, ДЕНЬ) КАК ДатаСмены,
	             |	МестаХранения.Фирма.Код как ФирмаКод
	             |ИЗ
	             |	ЗагружаемыеДанные КАК ЗагружаемыеДанные
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
	             |		ПО ЗагружаемыеДанные.КодАптеки = МестаХранения.Код
	             |ГДЕ
	             |	ЗагружаемыеДанные.УЗ_СменаККМСсылка ЕСТЬ NULL 
	             |	//И ЗагружаемыеДанные.ВидДокумента <> ""ECR_SESSION""
				 |";
	
	Запрос.УстановитьПараметр("НачКодАптеки",НачКодАптеки);
	Запрос.УстановитьПараметр("КонКодАптеки",КонКодАптеки);
	Запрос.УстановитьПараметр("ЗагружаемыеВидыДокументов",МЗВД);
	
	
	РезПоискаНесуществующихСмен=Запрос.Выполнить();
	
	Если РезПоискаНесуществующихСмен.Пустой()=Ложь ТОгда
		// Требуется создать смены
		Выб=РезПоискаНесуществующихСмен.Выбрать();
		Пока Выб.Следующий() Цикл
			Смена=Документы.УЗ_СменаККМ.СоздатьДокумент();
			Смена.Дата=Выб.ДатаСмены;
			ЗаполнитьЗначенияСвойств(Смена,Выб);
			Смена.Записать(РежимзАписидОкумента.Запись); // создаем впервые упомянутые смены
		КонецЦикла;	
	КонецЕсли;	
	
	//---------------<Второй заход - выгребаем уже из временной таблицы ЗагружаемыеДанные >---------------------------// GtG // 18.12.2015 15:58:37
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ЗагружаемыеДанные.ИД,
	             |	ЗагружаемыеДанные.КодАптеки,
	             |	ЗагружаемыеДанные.ВидДокумента,
	             |	ЗагружаемыеДанные.НомерККМ,
	             |	ЗагружаемыеДанные.НомерСмены,
	             |	ЗагружаемыеДанные.ДатаДокумента,
	             |	ЗагружаемыеДанные.НомерДокумента,
	             |	ЗагружаемыеДанные.НомерЧека,
	             |	ЗагружаемыеДанные.ИдентификаторДокумента,
	             |	ЗагружаемыеДанные.Проведен,
	             |	ЗагружаемыеДанные.Удален,
	             |	ЗагружаемыеДанные.Статус,
	             |	ЗагружаемыеДанные.ВерсияФормата,
	             |	ЗагружаемыеДанные.МД5Хэш,
	             |	ЗагружаемыеДанные.ХМЛСтрока,
	             |	УЗ_СменаККМ.Ссылка КАК СсылкаСмена
	             |ИЗ
	             |	ЗагружаемыеДанные КАК ЗагружаемыеДанные
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЗ_СменаККМ КАК УЗ_СменаККМ
	             |		ПО ЗагружаемыеДанные.КодАптеки = УЗ_СменаККМ.СкладКод
	             |			И ЗагружаемыеДанные.НомерККМ = УЗ_СменаККМ.НомерККМ
	             |			И ЗагружаемыеДанные.НомерСмены = УЗ_СменаККМ.НомерСмены
	             |			И (НАЧАЛОПЕРИОДА(ЗагружаемыеДанные.ДатаДокумента, ДЕНЬ) = УЗ_СменаККМ.ДатаСмены)
	             |ИТОГИ ПО
	             |	Ссылка";
	
	Рез=Запрос.Выполнить();
	
	Если Рез.Пустой() ТОгда
		Возврат "Нечего загружать";
	КонецЕсли;	
	
	
	
	//---------------<Для загрузки чеков нуженн массив кодов программ лояльности из справочника типы дисконтных карт>---------------------------// GtG // 23.12.2015 17:27:03
	Запрос.Текст="ВЫБРАТЬ
	             |	ТипыДисконтныхКарт.Код как КодТДК_ПрограммыЛояльности
	             |ИЗ
	             |	Справочник.ТипыДисконтныхКарт КАК ТипыДисконтныхКарт
	             |ГДЕ
	             |	ТипыДисконтныхКарт.ПрограммаЛояльности = ИСТИНА";
	
	РезПЛ=Запрос.Выполнить().Выгрузить();
	МассивКПЛ=РезПЛ.ВыгрузитьКолонку("КодТДК_ПрограммыЛояльности");
	//---------------<----------------------------------------------------------------------------------------------->---------------------------// GtG // 23.12.2015 17:28:46
	
	
	
	
		
	ВыбПоСмене=Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыбПоСмене.Следующий() Цикл
		
		Если ВыбПоСмене.СсылкаСмена = NULL Тогда
			Продолжить;
		КонецЕсли;	
		
		ОбСмена=ВыбПоСмене.СсылкаСмена.Получитьобъект();
		ВыбПоЧеку=ВыбПоСмене.Выбрать();
		ХДР="";
		
		МасИдНаУдаление=Новый Массив; // Массив с идентификаторами успешно обработанных строк регистра.
		// Косим после удачной обработки пачки данных после записи очередной смены
		
		
		
		Пока ВыбПоЧеку.Следующий() Цикл
			Если ВыбПоЧеку.ВидДокумента="ECR_SESSION" ТОгда
				// Отложим на потом, сначала чеки, шмеки , чебуреки...
				Если  ВыбПоЧеку.Статус=1 Тогда
					МасИдНаУдаление.Добавить(ВыбПоЧеку.ИД);
				Иначе	
					ХДР=ВыбПоЧеку.ХМЛСтрока;
					ИДХДР=ВыбПоЧеку.ИД;
				КонецЕсли;
			КонецЕсли;
			
			Успешно=Ложь;
			
			//---------------<Обрабатываем в зависимости от вида документа>---------------------------// GtG // 18.12.2015 20:54:58
			Если ВыбПоЧеку.ВидДокумента="ECR_PREPAY_GET" ТОгда   // "ecr.cheque* - Получение аванса"
				Успешно=Добавить_ECR_PREPAY_GETиRET(ОбСмена,ВыбПоЧеку.ХМЛСтрока,1);
			ИначеЕсли ВыбПоЧеку.ВидДокумента="ECR_PREPAY_RET" ТОгда  // "ecr.cheque* - Возврат аванса"
				Успешно=Добавить_ECR_PREPAY_GETиRET(ОбСмена,ВыбПоЧеку.ХМЛСтрока,2);
			ИначеЕсли ВыбПоЧеку.ВидДокумента="ECR_RETURN" ТОгда  // "ecr.cheque* - Возврат продажи"
				Успешно=Добавить_ECR_RETURN(ОбСмена,ВыбПоЧеку.ХМЛСтрока);
			ИначеЕсли ВыбПоЧеку.ВидДокумента="ECR_SALE" ТОгда     // "ecr.cheque* - Продажа"
				Успешно=Добавить_ECR_SALE(ОбСмена,ВыбПоЧеку.ХМЛСтрока,МассивКПЛ);
			ИначеЕсли ВыбПоЧеку.ВидДокумента="ECR_CHEQUE_CANCELED" ТОгда     // "Отмененные чеки"
				Успешно=Добавить_ECR_CHEQUE_CANCELED(ОбСмена,ВыбПоЧеку.ХМЛСтрока);
			КонецЕсли;
			
			//---------------<добавим в список успешно обработанных, потом их удалим>---------------------------// GtG // 18.12.2015 20:55:22
			Если Успешно тогда
				МасИдНаУдаление.Добавить(ВыбПоЧеку.ИД);
			КонецЕсли;	
			
		КонецЦикла;
		
		//---------------<Пересчет суммы выручки по имеющимся данным>---------------------------// GtG // 02.01.2016 21:59:42
		// пока смена не закрыта из ХДРки ниего путного извлечь нельзя.
		// посчитаем по тем данным, которые попали в смену из загруженных документов.
		ОбСмена.СуммаВыручки= ОбСмена.ПродажиТовара.Итог("СуммаРозн")+  
					ОбСмена.Авансы_ПолучениеИВозврат.Итог("Сумма")-ОбСмена.Авансы_ПолучениеИВозврат.Итог("СуммаВозврат")+
					Обсмена.Услуги.Итог("СуммаРозн");
					
					
		
		//---------------<>---------------------------// GtG // 02.01.2016 21:59:44
		
		
		
		
		СменаКорректна=Ложь;
		
		Если ПустаяСтрока(ХДР)=Ложь Тогда
			СменаКорректна=ПроверитьСменуНаКорректностьПоДаннымХДР(ОбСмена,ХДР);
		КонецЕсли;	
		
		Попытка
			ОбСмена.Записать(РежимЗаписиДокумента.Проведение);  // записываем смену 1 раз и только тут.
		Исключение
			МасИдНаУдаление.Очистить();   // нишмогла записать смену. и все изменения в ней сделанные. На следующем заходе попробуем еще раз. когда-нибудь...
			ИДХДР=Неопределено;           // не удаляем ХДР, иначе не с чем   будет сравнивать
										  // Ахтунг! Объект остается полученным и незаписанным. Такая ситуация может вызвать утечку памяти.
			ЗаписьВЛогЗагрузкиЧеков(ОбСмена.Ссылка,ОписаниеОшибки());
		КонецПопытки;
		
		
		Если  СменаКорректна ТОгда 
			
			СоздатьРККМ(ОбСмена,Ложь);
			
			
			
			Если СменаКорректна и ИДХДР <> Неопределено Тогда
				УдалитьЗаписьРегистраПоИД(ИДХДР);   // смена загружена и корректна.   
				КоличествоОбработанныхОбъектов=КоличествоОбработанныхОбъектов+1;
			КонецЕсли;	
			// ХДРки могут зависнуть в случае если в смене был косяк.
			// Однако, при создании РККМ эти ХДРки по дефективным сменам будут удалены.
			// Создание дефективных РККМ по дефективным сменам после 01:00:00 следующего дня.
			
		КонецЕсли; 
		
		Для Каждого ИД Из МасИдНаУдаление Цикл
			УдалитьЗаписьРегистраПоИД(ИД); // эти данные обработаны и уже не нужны.
			КоличествоОбработанныхОбъектов=КоличествоОбработанныхОбъектов+1;
		КонецЦикла;	
		
	КонецЦикла;	
	
	
	//---------------<Удаляем без обработки удаляемые виды документов>---------------------------// GtG // 18.12.2015 21:10:17
	Запрос.Текст="ВЫБРАТЬ
	             |	АптекаОфисЧеки.ИД
	             |ИЗ
	             |	РегистрСведений.АптекаОфисЧеки КАК АптекаОфисЧеки
	             |ГДЕ
	             |	АптекаОфисЧеки.ВидДокумента В(&МУдВД)";
	Запрос.УстановитьПараметр("МУдВД",МУдВД);			 
				 
	Рез=Запрос.Выполнить();
	УдБО=0;
	Если Рез.Пустой()=Ложь Тогда
		Выб=Рез.Выбрать();
		Пока Выб.Следующий() Цикл
			УдалитьЗаписьРегистраПоИД(Выб.ИД);
			УдБО=УдБО+1;
		КонецЦикла;
	Конецесли;	
				 
	
	Возврат "ОК. "+ТекущаяДата()+" Успешно обработано "+КоличествоОбработанныхОбъектов+" объектов. Удалено без обработки "+УдБО+" ненужных объектов.";
	
КонецФункции	
	
	
	