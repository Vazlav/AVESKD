Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Построитель.Выполнить();
	ТЗ = Построитель.Результат.Выгрузить();
	Булево = Новый ОписаниеТипов("Булево");
	ТЗ.Колонки.Вставить(0,"Пометка",Булево,"Пометка",1);
	
	ЭлементыФормы.ТЗ.СоздатьКолонки();
	Пометка = ЭлементыФормы.ТЗ.Колонки["Пометка"];
	Пометка.Данные="";
	Пометка.ДанныеФлажка="Пометка";
	Пометка.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;

	
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Построитель.Отбор.Добавить("Дата");
	Построитель.Отбор["Дата"].Использование = Истина;
	Построитель.Отбор["Дата"].ЗначениеС = НачалоДня(ТекущаяДата());
	Построитель.Отбор["Дата"].ЗначениеПо = КонецДня(ТекущаяДата());
	Построитель.Отбор["Дата"].ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;
	
	ПостроительУдаленных.Отбор.Добавить("Дата");
	ПостроительУдаленных.Отбор["Дата"].Использование = Истина;
	ПостроительУдаленных.Отбор["Дата"].ЗначениеС = НачалоДня(ТекущаяДата());
	ПостроительУдаленных.Отбор["Дата"].ЗначениеПо = КонецДня(ТекущаяДата());
	ПостроительУдаленных.Отбор["Дата"].ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;
	
	ПостроительНеудовлетворенных.Отбор.Добавить("Период");
	ПостроительНеудовлетворенных.Отбор["Период"].Использование = Истина;
	ПостроительНеудовлетворенных.Отбор["Период"].ЗначениеС = НачалоДня(ТекущаяДата());
	ПостроительНеудовлетворенных.Отбор["Период"].ЗначениеПо = КонецДня(ТекущаяДата());
	ПостроительНеудовлетворенных.Отбор["Период"].ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;
	
	

КонецПроцедуры

Процедура ТЗПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Пометка = Истина Тогда
		ОформлениеСтроки.ЦветФона=Новый Цвет(255,155,240);
	КонецЕсли;

	
КонецПроцедуры

Процедура ОсновныеДействияФормыСоздатьЗаявкуНаСклад(Кнопка)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Создать документы на СКЛАД?",Режим,0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура();
	Отбор.Вставить("Пометка",Ложь);
	
	ТЗВрем = ТЗ.Скопировать();
		
	СтрокиДляУдаления = ТЗВрем.НайтиСтроки(Отбор);
	
	//Если СтрокиДляУдаления.Количество()=0 тогда
	//	Возврат;
	//КонецЕсли; 
	Если СтрокиДляУдаления.Количество()> 0 тогда
		Для Ы=0 по СтрокиДляУдаления.Количество()-1 Цикл
			ТЗВрем.Удалить(СтрокиДляУдаления.Получить(Ы));
		КонецЦикла;
	КонецЕсли;
	ТЗВрем.Сортировать("Склад,Товар");
	
	//Отгрузим только то, что есть на остатках склада
	МассивТовара = ТЗВрем.ВыгрузитьКолонку("Товар");
	ТХТ = "ВЫБРАТЬ
	      |	ПартииЖНВЛСОстатки.Товар КАК Товар,
	      |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	      |		&ТекДата,
	      |		Товар В (&МассивТовара)
	      |		    И Склад = &Склад) КАК ПартииЖНВЛСОстатки
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	Товар.Наименование";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("МассивТовара",МассивТовара);
	Запрос.УстановитьПараметр("Склад",Константы.ОсновнойСклад.Получить());
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 Тогда
		Предупреждение("Нет остатка по данным товарам");
		Возврат;
	КонецЕсли;	
	
	Вхождение = 1;	
	НомерЗаказа = 0;
	Склад = Справочники.МестаХранения.ПустаяСсылка();
	Док = Документы.ПеремещениеТовара.СоздатьДокумент();
	Для каждого стр из ТЗВрем Цикл
		
		Если стр.Склад <> Склад Тогда
			
			Если Вхождение <> 1 Тогда
				Если Док.Товар.Количество() > 0 Тогда
					//Запишем только если есть строки в ТЧ
					СтрИзм=Док.Изменения.Добавить();
					СтрИзм.Дата=ТекущаяДата();
					СтрИзм.КомментарийИзменения="#АВТО#Создан из ОТКАЗОВ заказа поставщику № "+НомерЗаказа;
					СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
					СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
					Док.Записать(РежимЗаписиДокумента.Запись);
					//Создаем следующий документ
					Док = Документы.ПеремещениеТовара.СоздатьДокумент();	
				КонецЕсли;
				
			КонецЕсли;
			//Заполняем шапку документа
			Склад = стр.Склад;
			НомерЗаказа = стр.Документ.Номер;
			Док.Склад=Константы.ОсновнойСклад.Получить();
			Док.СкладПолучатель=Склад;
			Док.Фирма=Константы.ОсновнаяФирма.Получить();
			Док.Статус=Перечисления.СтатусПеремещения.ЗагруженСоздан;
			Док.Создан=ТекущаяДата();
			Док.Дата=ТекущаяДата();
			Док.Комментарий="#АВТО#Создан из ОТКАЗОВ заказа поставщику № "+НомерЗаказа;
			Док.НомерЗаявкиАптеки = стр.НомерЗаявкиАптеки;
			Док.ВидОперации = Перечисления.ВидыОпераций.ПеремещениеТМЦ;
		
			Вхождение = 0;
		КонецЕсли;
		Нашли = Рез.Найти(стр.Товар,"Товар");
		Если Нашли = Неопределено Тогда
			Продолжить;
		КонецЕсли;		
		стрТовар = Док.Товар.Добавить();
		стрТовар.Товар = стр.Товар;
		стрТовар.Количество = стр.Количество;
		стрТовар.КоличествоФакт = стр.Количество;
		стрТовар.ЕИТ = стр.Товар.ЕдиницаОтгрузки;
		стрТовар.Коэфф = стрТовар.ЕИТ.К;
		//Отметим, что строку отработали
		стр.Пометка = Ложь;
			
	КонецЦикла;
	
	Если Док.Товар.Количество() > 0 Тогда
		//Запишем только если есть строки в ТЧ
		СтрИзм=Док.Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="#АВТО#Создан из ОТКАЗОВ заказа поставщику № "+НомерЗаказа;
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
		Док.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	//Удалим отработанное из Регистра отказов
	Для каждого х из ТЗВрем Цикл
		Если х.Пометка = Ложь Тогда
			НаборЗаписей = РегистрыСведений.Отказы.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.Документ.Установить(х.Документ); 
			НаборЗаписей.Отбор.Товар.Установить(х.Товар); 
			НаборЗаписей.Отбор.ПричинаОтказа.Установить(х.ПричинаОтказа);
			НаборЗаписей.Записать();	
			
			Отбор.Очистить();
			Отбор.Вставить("Документ",х.Документ);
			Отбор.Вставить("Товар",х.Товар);
			Отбор.Вставить("ПричинаОтказа",х.ПричинаОтказа);
			СтрокиДляУдаления = ТЗ.НайтиСтроки(Отбор);
			
			Если СтрокиДляУдаления.Количество()=0 тогда
				Продолжить;;
			КонецЕсли; 
			
			Для Ы=0 по СтрокиДляУдаления.Количество()-1 Цикл
				ТЗ.Удалить(СтрокиДляУдаления.Получить(Ы));
			КонецЦикла;
			
			
		КонецЕсли;
	КонецЦикла;
	

	
КонецПроцедуры

Процедура ОсновныеДействияФормыОстаток(Кнопка)
	
	ТХТ = "ВЫБРАТЬ
	      |	ПартииЖНВЛСОстатки.Товар.Наименование КАК Товар,
	      |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	      |		&ТекДата,
	      |		Товар = &Товар
	      |		    И Склад = &Склад) КАК ПартииЖНВЛСОстатки
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	Товар.Наименование";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("Товар",ЭлементыФормы.ТЗ.ТекущаяСтрока.Товар);
	Запрос.УстановитьПараметр("Склад",Константы.ОсновнойСклад.Получить());
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 Тогда
		Предупреждение("Нет остатка по данным товарам");
		Возврат;
	КонецЕсли;
	
	Предупреждение("Остаток = " + Рез.Получить(0).Остаток);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСоздатьЗаказПоставщику(Кнопка)
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Создать документы ПОСТАВЩИКУ?",Режим,0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	
	Отбор = Новый Структура();
	Отбор.Вставить("Пометка",Ложь);
	
	ТЗВрем = ТЗ.Скопировать();
		
	СтрокиДляУдаления = ТЗВрем.НайтиСтроки(Отбор);
	
	//Если СтрокиДляУдаления.Количество()=0 тогда
	//	Возврат;
	//КонецЕсли; 
	Если СтрокиДляУдаления.Количество()> 0 тогда
		Для Ы=0 по СтрокиДляУдаления.Количество()-1 Цикл
			ТЗВрем.Удалить(СтрокиДляУдаления.Получить(Ы));
		КонецЦикла;
	КонецЕсли;
	Если ТЗВрем.Количество() = 0 Тогда 
		Предупреждение("Нет ни одной отмеченной строки");
		Возврат;
	КонецЕсли;
	
	ТЗВрем.Сортировать("Склад,Поставщик,Товар");
	
	
	Вхождение = 1;	
	НомерЗаказа = 0;
	Склад = Справочники.МестаХранения.ПустаяСсылка();
	Поставщик = Справочники.Поставщики.ПустаяСсылка();
	Док = Документы.Заказ.СоздатьДокумент();
	Для каждого стр из ТЗВрем Цикл
		
		Если (стр.Склад <> Склад) или (стр.Поставщик <> Поставщик) Тогда
			
			Если Вхождение <> 1 Тогда
				Если Док.Товар.Количество() > 0 Тогда
					//Запишем только если есть строки в ТЧ
					СтрИзм=Док.Изменения.Добавить();
					СтрИзм.Дата=ТекущаяДата();
					СтрИзм.КомментарийИзменения="#Создан из обработки ОТКАЗОВ № зак "+НомерЗаказа;
					СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
					СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
					Для н=1 По 5 Цикл
						Попытка
							Док.Записать(РежимЗаписиДокумента.Запись);
							Прервать;
						Исключение
							Предупреждение("Ожидание блокировки. Ждем 1 сек.",1);
						КонецПопытки;
					КонецЦикла;
					// Выгрузим поставщику , если надо
					Нашли = Справочники.КодыАптек.НайтиПоРеквизиту("Аптека",Док.Склад,,Док.Поставщик);
					Если Нашли <> Справочники.КодыАптек.ПустаяСсылка() Тогда
						Если Док.Поставщик.АвтоматическаяВыгрузкаЗаказов = Истина Тогда
							Если Док.ВыгрузитьПоставщику() = Истина Тогда
								Провели = Ложь;
								Для н=1 По 5 Цикл
									Попытка
										Док.Записать(РежимЗаписиДокумента.Проведение);
										Провели = Истина;
										Прервать;
									Исключение
										Предупреждение("Ожидание блокировки. Ждем 1 сек.",1);
									КонецПопытки;
								КонецЦикла;
								Если Провели = Ложь Тогда
									Сообщить("заказ №" + Док.Номер + " выгрузился поставщику, но не провелся. Проведите его вручную");	
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;						
					КонецЕсли;
					
					//Создаем следующий документ
					Док = Документы.Заказ.СоздатьДокумент();	
				КонецЕсли;
				
			КонецЕсли;
			//Заполняем шапку документа
			Склад = стр.Склад;
			Поставщик = стр.Поставщик;
			НомерЗаказа = стр.Документ.Номер;
			Док.Склад=Склад;
			Док.Поставщик=Поставщик;
			Док.Статус=Перечисления.СтатусЗаказаПоставщику.Создан;
			Док.Дата=ТекущаяДата();
			Док.Комментарий="#Создан из обработки ОТКАЗОВ № зак "+НомерЗаказа;
			Док.НомерЗаявкиАптеки = стр.НомерЗаявкиАптеки;
					
			Вхождение = 0;
		КонецЕсли;
		
		стрТовар = Док.Товар.Добавить();
		стрТовар.Товар = стр.Товар;
		стрТовар.Количество = стр.Количество;
		стрТовар.Цена = стр.Цена;
		стрТовар.КодТовараПоставщика = стр.КодТовараПоставщика;
		стрТовар.НаименованиеТовараПоставщика= стр.НаименованиеТовараПоставщика;
		стрТовар.Сумма = стр.Цена*стр.Количество;
		стрТовар.НомерЗаявкиАптеки = стр.НомерЗаявкиАптеки;
		//Отметим, что строку отработали
		стр.Пометка = Ложь;
			
	КонецЦикла;
	
	Если Док.Товар.Количество() > 0 Тогда
		//Запишем только если есть строки в ТЧ
		СтрИзм=Док.Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="#Создан из обработки ОТКАЗОВ № зак "+НомерЗаказа;
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
		Для н=1 По 5 Цикл
			Попытка
				Док.Записать(РежимЗаписиДокумента.Запись);
				Прервать;
			Исключение
				Предупреждение("Ожидание блокировки. Ждем 1 сек.",1);
			КонецПопытки;
		КонецЦикла;
		// Выгрузим поставщику , если надо
		Нашли = Справочники.КодыАптек.НайтиПоРеквизиту("Аптека",Док.Склад,,Док.Поставщик);
		Если Нашли <> Справочники.КодыАптек.ПустаяСсылка() Тогда
			Если Док.Поставщик.АвтоматическаяВыгрузкаЗаказов = Истина Тогда
				Если Док.ВыгрузитьПоставщику() = Истина Тогда
					Провели = Ложь;
					Для н=1 По 5 Цикл
						Попытка
							Док.Записать(РежимЗаписиДокумента.Проведение);
							Провели = Истина;
							Прервать;
						Исключение
							Предупреждение("Ожидание блокировки. Ждем 1 сек.",1);
						КонецПопытки;
					КонецЦикла;
					Если Провели = Ложь Тогда
						Сообщить("заказ №" + Док.Номер + " выгрузился поставщику, но не провелся. Проведите его вручную");	
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;						
		КонецЕсли;
		
	КонецЕсли;
	
	//Удалим отработанное из Регистра отказов
	Для каждого х из ТЗВрем Цикл
		Если х.Пометка = Ложь Тогда
			НаборЗаписей = РегистрыСведений.Отказы.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.Документ.Установить(х.Документ); 
			НаборЗаписей.Отбор.Товар.Установить(х.Товар); 
			НаборЗаписей.Отбор.ПричинаОтказа.Установить(х.ПричинаОтказа);
			НаборЗаписей.Записать();	
			
			Отбор.Очистить();
			Отбор.Вставить("Документ",х.Документ);
			Отбор.Вставить("Товар",х.Товар);
			Отбор.Вставить("ПричинаОтказа",х.ПричинаОтказа);
			СтрокиДляУдаления = ТЗ.НайтиСтроки(Отбор);
			
			Если СтрокиДляУдаления.Количество()=0 тогда
				Продолжить;;
			КонецЕсли; 
			
			Для Ы=0 по СтрокиДляУдаления.Количество()-1 Цикл
				ТЗ.Удалить(СтрокиДляУдаления.Получить(Ы));
			КонецЦикла;
			
			
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура КоманднаяПанель1УстановитьПометки(Кнопка)
	Для каждого стр из ТЗ Цикл
		//Если стр.ПричинаОтказа = "Не распределен" Тогда
			стр.Пометка = Истина;
		//КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель1СнятьПометки(Кнопка)
	Для каждого стр из ТЗ Цикл
		стр.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель1ОстатокПоПометке(Кнопка)
	
	Если ТЗ.Количество() = 0 Тогда
		Предупреждение("Нет строк - нет и остатков!");
		Возврат;
	КонецЕсли;
	
	МассивТовара = Новый Массив;
	
	Отбор = Новый Структура();
	Отбор.Вставить("Пометка",Истина);
	
	Массив = ТЗ.НайтиСтроки(Отбор);
	Для каждого стр из Массив Цикл 
		МассивТовара.Добавить(стр.Товар);	
	КонецЦикла;
	
	
	ТХТ = "ВЫБРАТЬ
	      |	ПартииЖНВЛСОстатки.Товар.Наименование КАК Товар,
	      |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	      |		&ТекДата,
	      |		Товар В (&МассивТовара)
	      |		    И Склад = &Склад) КАК ПартииЖНВЛСОстатки
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	Товар.Наименование";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("МассивТовара",МассивТовара);
	Запрос.УстановитьПараметр("Склад",Константы.ОсновнойСклад.Получить());
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 Тогда
		Предупреждение("Нет остатка по данным товарам");
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Панель.Страницы.Остатки.Видимость = Истина;
	ЭлементыФормы.ОстаткиТовара.Значение = Рез;
	ЭлементыФормы.ОстаткиТовара.СоздатьКолонки();
	ЭлементыФормы.ОстаткиТовара.Колонки["Товар"].Ширина = 60;	
	ЭлементыФормы.ОстаткиТовара.Колонки["Остаток"].Ширина = 10;
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ОстаткиТовара;

КонецПроцедуры

Процедура КоманднаяПанель3Сформировать(Кнопка)
	
	ПостроительУдаленных.Выполнить();
	ТЗУдаленных = ПостроительУдаленных.Результат.Выгрузить();
	Булево = Новый ОписаниеТипов("Булево");
	ТЗУдаленных.Колонки.Вставить(0,"Пометка",Булево,"Пометка",1);
	
	ЭлементыФормы.ТЗУдаленных.СоздатьКолонки();
	Пометка = ЭлементыФормы.ТЗУдаленных.Колонки["Пометка"];
	Пометка.Данные="";
	Пометка.ДанныеФлажка="Пометка";
	Пометка.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
	
КонецПроцедуры

Процедура КоманднаяПанель4УстановитьПометки(Кнопка)
	
	Для каждого стр из ТЗУдаленных Цикл
		стр.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель4СнятьПометки(Кнопка)
	
	Для каждого стр из ТЗУдаленных Цикл
		стр.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьСтрокиДокумента(МассивСтрок,Док)

	Если МассивСтрок.Количество()=0 тогда
		Возврат;
	КонецЕсли; 
	
	Для Ы=0 по МассивСтрок.Количество()-1 Цикл
		Док.Товар.Удалить(МассивСтрок.Получить(Ы));
	КонецЦикла;

		
КонецПроцедуры

Процедура КоманднаяПанель5СоздатьЗаявкуНаСклад(Кнопка)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Создать документы на СКЛАД?",Режим,0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура();
	Отбор.Вставить("Пометка",Ложь);
	
	ТЗВрем = ТЗУдаленных.Скопировать();
		
	СтрокиДляУдаления = ТЗВрем.НайтиСтроки(Отбор);
	
	Если СтрокиДляУдаления.Количество()> 0 тогда
		Для Ы=0 по СтрокиДляУдаления.Количество()-1 Цикл
			ТЗВрем.Удалить(СтрокиДляУдаления.Получить(Ы));
		КонецЦикла;
	КонецЕсли; 
	
	
	ТЗВрем.Сортировать("Склад,Товар");
	
	//Отгрузим только то, что есть на остатках склада
	МассивТовара = ТЗВрем.ВыгрузитьКолонку("Товар");
	ТХТ = "ВЫБРАТЬ
	      |	ПартииЖНВЛСОстатки.Товар КАК Товар,
	      |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	      |		&ТекДата,
	      |		Товар В (&МассивТовара)
	      |		    И Склад = &Склад) КАК ПартииЖНВЛСОстатки
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	Товар.Наименование";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("МассивТовара",МассивТовара);
	Запрос.УстановитьПараметр("Склад",Константы.ОсновнойСклад.Получить());
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 Тогда
		Предупреждение("Нет остатка по данным товарам");
		Возврат;
	КонецЕсли;	
	
	Вхождение = 1;	
	НомерЗаказа = 0;
	Склад = Справочники.МестаХранения.ПустаяСсылка();
	Док = Документы.ПеремещениеТовара.СоздатьДокумент();
	Для каждого стр из ТЗВрем Цикл
		
		Если стр.Склад <> Склад Тогда
			
			Если Вхождение <> 1 Тогда
				Если Док.Товар.Количество() > 0 Тогда
					//Запишем только если есть строки в ТЧ
					СтрИзм=Док.Изменения.Добавить();
					СтрИзм.Дата=ТекущаяДата();
					СтрИзм.КомментарийИзменения="#АВТО#Создан из удаленных строк заказа поставщику № "+НомерЗаказа;
					СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
					СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
					Док.Записать(РежимЗаписиДокумента.Запись);
					//Создаем следующий документ
					Док = Документы.ПеремещениеТовара.СоздатьДокумент();	
				КонецЕсли;
				
			КонецЕсли;
			//Заполняем шапку документа
			Склад = стр.Склад;
			НомерЗаказа = стр.Документ.Номер;
			Док.Склад=Константы.ОсновнойСклад.Получить();
			Док.СкладПолучатель=Склад;
			Док.Фирма=Константы.ОсновнаяФирма.Получить();
			Док.Статус=Перечисления.СтатусПеремещения.ЗагруженСоздан;
			Док.Создан=ТекущаяДата();
			Док.Дата=ТекущаяДата();
			Док.Комментарий="#АВТО#Создан из удаленных строк заказа поставщику № "+НомерЗаказа;
			Док.НомерЗаявкиАптеки = стр.НомерЗаявкиАптеки;
			Док.ВидОперации = Перечисления.ВидыОпераций.ПеремещениеТМЦ;
		
			Вхождение = 0;
		КонецЕсли;
		Нашли = Рез.Найти(стр.Товар,"Товар");
		Если Нашли = Неопределено Тогда
			Продолжить;
		КонецЕсли;		
		стрТовар = Док.Товар.Добавить();
		стрТовар.Товар = стр.Товар;
		стрТовар.Количество = стр.Количество;
		стрТовар.КоличествоФакт = стр.Количество;
		стрТовар.ЕИТ = стр.Товар.ЕдиницаОтгрузки;
		стрТовар.Коэфф = стрТовар.ЕИТ.К;
		//Отметим, что строку отработали
		стр.Пометка = Ложь;
			
	КонецЦикла;
	
	Если Док.Товар.Количество() > 0 Тогда
		//Запишем только если есть строки в ТЧ
		СтрИзм=Док.Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="#АВТО#Создан из удаленных заказов поставщику № "+НомерЗаказа;
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
		Док.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	
	
	//Удалим отработанное из Регистра отказов
	ТЗВрем.Сортировать("Документ");
	ВремДок = "";
	Вхождение = Истина;
	МассивДляУдаления = новый массив;
	Для каждого х из ТЗВрем Цикл
		Если х.Пометка = Ложь Тогда
			ДокО = х.Документ.ПолучитьОбъект();
			Если ВремДок <> ДокО Тогда
				Если Вхождение = Ложь Тогда
					Если МассивДляУдаления.Количество() > 0 Тогда
						УдалитьСтрокиДокумента(МассивДляУдаления,ВремДок);
						ВремДок.Записать(РежимЗаписиДокумента.Запись);	
					КонецЕсли;
				КонецЕсли;
				Вхождение = Ложь;
				ВремДок = ДокО;
				МассивДляУдаления.Очистить();
			КонецЕсли;
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Товар", х.Товар);
			НайденныеСтроки = ВремДок.Товар.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() > 0 Тогда
				Для каждого стр из НайденныеСтроки Цикл
					МассивДляУдаления.Добавить(стр);
				КонецЦикла;
			КонецЕсли;
		Конецесли;
	КонецЦикла;				
	
	Если МассивДляУдаления.Количество() > 0 Тогда
			УдалитьСтрокиДокумента(МассивДляУдаления,ВремДок);
			ВремДок.Записать(РежимЗаписиДокумента.Запись);	
	КонецЕсли;
		
	КоманднаяПанель3Сформировать("");
			
	//		Отбор.Очистить();
	//		Отбор.Вставить("Документ",х.Документ);
	//		Отбор.Вставить("Товар",х.Товар);
	//		Отбор.Вставить("ПричинаОтказа",х.ПричинаОтказа);
	//		СтрокиДляУдаления = ТЗ.НайтиСтроки(Отбор);
	//		
	//		Если СтрокиДляУдаления.Количество()=0 тогда
	//			Продолжить;
	//		КонецЕсли; 
	//		
	//		Для Ы=0 по СтрокиДляУдаления.Количество()-1 Цикл
	//			ТЗ.Удалить(СтрокиДляУдаления.Получить(Ы));
	//		КонецЦикла;
	//		
	//		
	//	КонецЕсли;
	//КонецЦикла;

КонецПроцедуры

Процедура КоманднаяПанель4ОстатокПоПометке(Кнопка)
	
	Если ТЗУдаленных.Количество() = 0 Тогда
		Предупреждение("Нет строк - нет и остатков!");
		Возврат;
	КонецЕсли;
	
	МассивТовара = Новый Массив;
	
	Отбор = Новый Структура();
	Отбор.Вставить("Пометка",Истина);
	
	Массив = ТЗУдаленных.НайтиСтроки(Отбор);
	Для каждого стр из Массив Цикл 
		МассивТовара.Добавить(стр.Товар);	
	КонецЦикла;
	
	
	ТХТ = "ВЫБРАТЬ
	      |	ПартииЖНВЛСОстатки.Товар.Наименование КАК Товар,
	      |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	      |		&ТекДата,
	      |		Товар В (&МассивТовара)
	      |		    И Склад = &Склад) КАК ПартииЖНВЛСОстатки
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	Товар.Наименование";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("МассивТовара",МассивТовара);
	Запрос.УстановитьПараметр("Склад",Константы.ОсновнойСклад.Получить());
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 Тогда
		Предупреждение("Нет остатка по данным товарам");
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Панель.Страницы.Остатки.Видимость = Истина;
	ЭлементыФормы.ОстаткиТовара.Значение = Рез;
	ЭлементыФормы.ОстаткиТовара.СоздатьКолонки();
	ЭлементыФормы.ОстаткиТовара.Колонки["Товар"].Ширина = 60;	
	ЭлементыФормы.ОстаткиТовара.Колонки["Остаток"].Ширина = 10;
	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ОстаткиТовара;
КонецПроцедуры

Процедура КоманднаяПанель4ОстатокПоОднойПозиции(Кнопка)
	
	ТХТ = "ВЫБРАТЬ
	      |	ПартииЖНВЛСОстатки.Товар.Наименование КАК Товар,
	      |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
	      |		&ТекДата,
	      |		Товар = &Товар
	      |		    И Склад = &Склад) КАК ПартииЖНВЛСОстатки
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	Товар.Наименование";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("Товар",ЭлементыФормы.ТЗУдаленных.ТекущаяСтрока.Товар);
	Запрос.УстановитьПараметр("Склад",Константы.ОсновнойСклад.Получить());
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 Тогда
		Предупреждение("Нет остатка по данным товарам");
		Возврат;
	КонецЕсли;
	
	Предупреждение("Остаток = " + Рез.Получить(0).Остаток);

КонецПроцедуры

Процедура КоманднаяПанель6Сформировать(Кнопка)
	ПостроительНеудовлетворенных.Выполнить();
	Неудовлетворенка = ПостроительНеудовлетворенных.Результат.Выгрузить();
	Булево = Новый ОписаниеТипов("Булево");
	Неудовлетворенка.Колонки.Вставить(0,"Пометка",Булево,"Пометка",1);
	
	ЭлементыФормы.Неудовлетворенка.СоздатьКолонки();
	Пометка = ЭлементыФормы.Неудовлетворенка.Колонки["Пометка"];
	Пометка.Данные="";
	Пометка.ДанныеФлажка="Пометка";
	Пометка.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;

КонецПроцедуры

Процедура ОсновныеДействияФормыСоздатьОбщийЗаказ(Кнопка)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Создать общий заказ?",Режим,0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	
	Отбор = Новый Структура();
	Отбор.Вставить("Пометка",Ложь);
	
	ТЗВрем = ТЗ.Скопировать();
		
	СтрокиДляУдаления = ТЗВрем.НайтиСтроки(Отбор);
	
	//Если СтрокиДляУдаления.Количество()=0 тогда
	//	Возврат;
	//КонецЕсли; 
	Если СтрокиДляУдаления.Количество()> 0 тогда
		Для Ы=0 по СтрокиДляУдаления.Количество()-1 Цикл
			ТЗВрем.Удалить(СтрокиДляУдаления.Получить(Ы));
		КонецЦикла;
	КонецЕсли;
	Если ТЗВрем.Количество() = 0 Тогда 
		Предупреждение("Нет ни одной отмеченной строки");
		Возврат;
	КонецЕсли;
	
	ТЗВрем.Сортировать("Склад,Товар");
	
	
	Вхождение = 1;	
	НомерЗаказа = 0;
	Склад = Справочники.МестаХранения.ПустаяСсылка();
	//Поставщик = Справочники.Поставщики.ПустаяСсылка();
	Док = Документы.ЗаявкаНаТовар.СоздатьДокумент();
	Для каждого стр из ТЗВрем Цикл
		
		Если (стр.Склад <> Склад) Тогда
			
			Если Вхождение <> 1 Тогда
				Если Док.Товар.Количество() > 0 Тогда
					//Запишем только если есть строки в ТЧ
					СтрИзм=Док.Изменения.Добавить();
					СтрИзм.Дата=ТекущаяДата();
					СтрИзм.КомментарийИзменения="#Создан общий заказ из обработки ОТКАЗОВ № зак "+НомерЗаказа;
					СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
					СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
					Док.Записать(РежимЗаписиДокумента.Запись);
					//Создаем следующий документ
					Док = Документы.ЗаявкаНаТовар.СоздатьДокумент();	
				КонецЕсли;
				
			КонецЕсли;
			//Заполняем шапку документа
			Склад = стр.Склад;
			НомерЗаказа = стр.Документ.Номер;
			Док.Склад=Склад;
			//Док.Поставщик=Поставщик;
			Док.Статус=Перечисления.СтатусЗаказаПоставщику.Создан;
			Док.Дата=ТекущаяДата();
			Док.Комментарий="#Создан общий заказ из обработки ОТКАЗОВ № зак "+НомерЗаказа;
			Док.НомерЗаявкиАптеки = стр.НомерЗаявкиАптеки;
					
			Вхождение = 0;
		КонецЕсли;
		
		стрТовар = Док.Товар.Добавить();
		стрТовар.Товар = стр.Товар;
		стрТовар.Количество = стр.Количество;
		стрТовар.НомерЗаявкиАптеки = стр.НомерЗаявкиАптеки;
		//Отметим, что строку отработали
		стр.Пометка = Ложь;
			
	КонецЦикла;
	
	Если Док.Товар.Количество() > 0 Тогда
		//Запишем только если есть строки в ТЧ
		СтрИзм=Док.Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.КомментарийИзменения="#Создан общий заказ из обработки ОТКАЗОВ № зак "+НомерЗаказа;
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
		Док.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЕсли;
	
	//Удалим отработанное из Регистра отказов
	Для каждого х из ТЗВрем Цикл
		Если х.Пометка = Ложь Тогда
			НаборЗаписей = РегистрыСведений.Отказы.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.Документ.Установить(х.Документ); 
			НаборЗаписей.Отбор.Товар.Установить(х.Товар); 
			НаборЗаписей.Отбор.ПричинаОтказа.Установить(х.ПричинаОтказа);
			НаборЗаписей.Записать();	
			
			Отбор.Очистить();
			Отбор.Вставить("Документ",х.Документ);
			Отбор.Вставить("Товар",х.Товар);
			Отбор.Вставить("ПричинаОтказа",х.ПричинаОтказа);
			СтрокиДляУдаления = ТЗ.НайтиСтроки(Отбор);
			
			Если СтрокиДляУдаления.Количество()=0 тогда
				Продолжить;;
			КонецЕсли; 
			
			Для Ы=0 по СтрокиДляУдаления.Количество()-1 Цикл
				ТЗ.Удалить(СтрокиДляУдаления.Получить(Ы));
			КонецЦикла;
			
			
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ЗаписатьОбъект(Объект, Знач КоличествоПопыток=3, Знач Пауза=1)
	Для Ц=1 По КоличествоПопыток-1 Цикл 
		Попытка 
			Объект.Записать(); 
			Возврат;
		Исключение
			Предупреждение("Ожидание снятия блокировки...",Пауза);
		КонецПопытки;
	КонецЦикла;
	Объект.Записать();
КонецПроцедуры

Процедура ОсновныеДействияФормыкн_ПерезаказатьВыбранные(Кнопка)
	// Фильтр
	Фильтр = Новый Структура;
	Фильтр.Вставить("Пометка",Истина);
	ТЗ_Фильтр = ТЗ.Скопировать(Фильтр);
	ТЗ_СтрокиДляУдаления = ТЗ.НайтиСтроки(Фильтр);
	Фильтр.Очистить();;
	
	Если ТЗ_Фильтр.Количество()=0 Тогда
		Возврат; // Пометки не установлены
	КонецЕсли;
	
	// Регистр Отказы
	ТЗ_Рег1 = ТЗ_Фильтр.Скопировать(,"Документ,Товар,Количество,Цена,КодТовараПоставщика,НомерЗаявкиАптеки");
	ТЗ_Рег1.Свернуть("Документ,Товар,Количество,Цена,КодТовараПоставщика,НомерЗаявкиАптеки","");
	
	НаборЗаписей1 = РегистрыСведений.Отказы.СоздатьНаборЗаписей();
	
	// Регистр ПерезаказОтказов
	пл_ТекущаяДата = ТекущаяДата();
	ТЗ_Рег2 = ТЗ_Фильтр.Скопировать(,"Поставщик,Склад,Товар,Количество");
	ТЗ_Рег2.Свернуть("Поставщик,Склад,Товар","Количество");
	ТЗ_Рег2.Колонки.Добавить("Дата");
	ТЗ_Рег2.ЗаполнитьЗначения(пл_ТекущаяДата, "Дата");
	
	НаборЗаписей2 = РегистрыСведений.ПерезаказОтказов.СоздатьНаборЗаписей();
	НаборЗаписей2.Отбор.Дата.Установить(пл_ТекущаяДата);
	НаборЗаписей2.Загрузить(ТЗ_Рег2);
	
	// Склады
	ТЗ_Склады = ТЗ_Рег2.Скопировать(,"Склад");
	ТЗ_Склады.Свернуть("Склад","");
	
	// Изменения
	Попытка
		// ...РегистрыСведений.ПерезаказОтказов
		ЗаписатьОбъект(НаборЗаписей2);
		
		// ...Документы ЗаявкаНаТовар
		Для Каждого стр Из ТЗ_Склады Цикл
			Фильтр.Вставить("Склад", стр.Склад);
			ТЗ_Док = ТЗ_Фильтр.Скопировать(Фильтр, "Товар,Количество");
			ТЗ_Док.Свернуть("Товар","Количество");
			Док = Документы.ЗаявкаНаТовар.СоздатьДокумент();
			// ...Шапка
			Док.Дата = ТекущаяДата();
			Док.Склад = стр.Склад;
			Док.Статус = Перечисления.СтатусЗаказаПоставщику.Создан;
			Док.ТипЗаявки = Перечисления.ТипЗаявки.ПерезаказОтказов;
			// ...Тело
			Для Каждого поз Из ТЗ_Док Цикл
				НС = Док.Товар.Добавить();
				НС.Товар 			= поз.Товар;
				НС.Количество = поз.Количество;
			КонецЦикла;
			
			ЗаписатьОбъект(Док);
			ОМ21_ЗаказыПоставщикам.ОМ21_СоздатьЗаказыПоставщикам(Док);
		КонецЦикла;
		
		// ...РегистрыСведений.Отказы
		Для Каждого стр Из ТЗ_Рег1 Цикл
			НаборЗаписей1.Очистить();
			НаборЗаписей1.Отбор.Документ.Установить(стр.Документ);
			НаборЗаписей1.Отбор.Товар.Установить(стр.Товар);
			НаборЗаписей1.Отбор.КодТовараПоставщика.Установить(стр.КодТовараПоставщика);
			ЗаписатьОбъект(НаборЗаписей1);
		КонецЦикла;
		
		// Удаляем строки из ТЗ
		Для Каждого стр Из ТЗ_СтрокиДляУдаления Цикл 
			ТЗ.Удалить(стр);
		КонецЦикла;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

ТХТ = "ВЫБРАТЬ
      |	Отказы.Документ,
      |	Отказы.Товар,
      |	Отказы.Количество,
      |	Отказы.Цена,
      |	Отказы.НомерЗаявкиАптеки,
      |	Отказы.ПричинаОтказа,
      |	Отказы.Поставщик КАК Поставщик,
      |	Отказы.Склад КАК Склад,
      |	Отказы.Дата КАК Дата,
      |	Отказы.КодТовараПоставщика,
      |	Отказы.НаименованиеТовараПоставщика,
      |	ВЫБОР
      |		КОГДА Эксклюзивы.Товар ЕСТЬ NULL 
      |			ТОГДА ЛОЖЬ
      |		ИНАЧЕ ИСТИНА
      |	КОНЕЦ КАК Суперэксклюзив
      |{ВЫБРАТЬ
      |	Отказы.Поставщик.* КАК Поставщик,
      |	Отказы.Склад.* КАК Склад,
      |	Товар.*,
      |	Количество,
      |	Цена,
      |	НомерЗаявкиАптеки,
      |	ПричинаОтказа,
      |	Дата,
      |	Документ.*,
      |	КодТовараПоставщика,
      |	НаименованиеТовараПоставщика}
      |ИЗ
      |	РегистрСведений.ОтказыПоЗаказам КАК Отказы
      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
      |			ЭксклюзивныеПоставщикиНоменклатурыЭксклюзивы.Товар КАК Товар
      |		ИЗ
      |			Справочник.ЭксклюзивныеПоставщикиНоменклатуры.Эксклюзивы КАК ЭксклюзивныеПоставщикиНоменклатурыЭксклюзивы
      |		ГДЕ
      |			ЭксклюзивныеПоставщикиНоменклатурыЭксклюзивы.Ссылка.Включено = ИСТИНА
      |			И ЭксклюзивныеПоставщикиНоменклатурыЭксклюзивы.СуперЭксклюзив = ИСТИНА) КАК Эксклюзивы
      |		ПО (Эксклюзивы.Товар = Отказы.Товар)
      |{ГДЕ
      |	Отказы.Дата КАК Дата,
      |	Отказы.Поставщик.* КАК Поставщик,
      |	Отказы.Склад.* КАК Склад,
      |	Отказы.Товар.* КАК Товар,
      |	Отказы.ПричинаОтказа КАК Причина}
      |{УПОРЯДОЧИТЬ ПО
      |	Отказы.Поставщик.* КАК Поставщик,
      |	Отказы.Склад.* КАК Склад,
      |	Отказы.Товар.* КАК Товар}";
	  
Построитель.Текст = ТХТ;	
 
ТХТУдаленных = "ВЫБРАТЬ
               |	ЗаказТовар.Ссылка.Дата,
               |	ЗаказТовар.Ссылка.НомерЗаявкиАптеки,
               |	ЗаказТовар.Ссылка.Поставщик,
               |	ЗаказТовар.Ссылка.Склад,
               |	ЗаказТовар.Товар,
               |	ЗаказТовар.Количество,
               |	ЗаказТовар.Цена,
               |	ЗаказТовар.КодТовараПоставщика,
               |	ЗаказТовар.НаименованиеТовараПоставщика,
               |	ЗаказТовар.Ссылка как Документ
               |{ВЫБРАТЬ
               |	Дата,
               |	НомерЗаявкиАптеки,
               |	Поставщик.*,
               |	Склад.*,
               |	Товар.*,
               |	Количество,
               |	Цена,
               |	КодТовараПоставщика,
               |	НаименованиеТовараПоставщика,
               |	Ссылка.*}
               |ИЗ
               |	Документ.Заказ.Товар КАК ЗаказТовар
               |ГДЕ
               |	ЗаказТовар.Ссылка.ПометкаУдаления = ИСТИНА
               |	И ЗаказТовар.Ссылка.Поставщик.СуммаМинимальногоЗаказа > ЗаказТовар.Ссылка.СуммаДок
               |{ГДЕ
               |	ЗаказТовар.Ссылка.Дата,
               |	ЗаказТовар.Ссылка.Поставщик.*,
               |	ЗаказТовар.Ссылка.Склад.*,
               |	ЗаказТовар.Товар.*}
               |{УПОРЯДОЧИТЬ ПО
               |	Поставщик.*,
               |	Склад.*,
               |	Товар.*}";
	  
ПостроительУдаленных.Текст = ТХТУдаленных;


ТХТНеудовлетворенка = "ВЫБРАТЬ
                      |	НПАптек.Склад,
                      |	НПАптек.Товар,
                      |	НПАптек.Количество,
                      |	НПАптек.Регистратор,
                      |	НПАптек.Период
                      |{ВЫБРАТЬ
                      |	Склад.*,
                      |	Товар.*,
                      |	Количество,
                      |	Регистратор.*,
                      |	Период}
                      |ИЗ
                      |	РегистрНакопления.НПАптек КАК НПАптек
                      |{ГДЕ
                      |	НПАптек.Период,
                      |	НПАптек.Склад.*,
                      |	НПАптек.Товар.*}";
	  
ПостроительНеудовлетворенных.Текст = ТХТНеудовлетворенка;