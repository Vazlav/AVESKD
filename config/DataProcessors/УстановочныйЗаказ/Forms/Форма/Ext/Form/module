
Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры


//==========================================================GtG====
Процедура ОбновитьОстаткиТОвара(СписокОтобранныхПозиций) 
	Перем МассивПозиций;
	
	//----------------------------------
	//Назначение:
	//  
	//  
	//  
	//  
	//----------------------------------
	 //-------------- ЗАПРОС GTG --------------------------НАЧАЛО
	//Назначение: Остатки по складу
	//
	

	Если ТипЗнч(СписокОтобранныхПозиций)=Тип("СписокЗначений") Тогда
		МассивПозиций=СписокОтобранныхПозиций.ВыгрузитьЗначения();
		
	ИначеЕсли  ТипЗнч(СписокОтобранныхПозиций)=Тип("Массив") Тогда
		
        МассивПозиций= СписокОтобранныхПозиций;
	Иначе	
		
		Возврат;
	КонецЕсли;

	
	ТХТ="ВЫБРАТЬ
	    |	БАЗА.Товар,
	    |	СУММА(БАЗА.ОстатокНаСкладе) КАК ОстатокНаСкладе,
	    |	БАЗА.КодАП
	    |ИЗ
	    |	(ВЫБРАТЬ
	    |		ПартииЖНВЛСОстатки.Товар КАК Товар,
	    |		ПартииЖНВЛСОстатки.КолвоОстаток КАК ОстатокНаСкладе,
	    |		ПартииЖНВЛСОстатки.Товар.Код КАК КодАП
	    |	ИЗ
	    |		РегистрНакопления.ПартииЖНВЛС.Остатки(
	    |			&ТекДата,
	    |			Склад = &Склад
	    |			    И Товар В (&СписокТоваров)) КАК ПартииЖНВЛСОстатки
	    |	
	    |	ОБЪЕДИНИТЬ ВСЕ
	    |	
	    |	ВЫБРАТЬ
	    |		АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка,
	    |		0,
	    |		АССОРТИМЕНТНЫЙ_ПЛАН.Код
	    |	ИЗ
	    |		Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	    |	ГДЕ
	    |		АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка В(&СписокТоваров)) КАК БАЗА
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	БАЗА.Товар,
	    |	БАЗА.КодАП";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	
	
	Запрос.УстановитьПараметр("СписокТоваров",МассивПозиций);
	
	Если Аптека.Пустая()=Истина ТОгда
		Аптека=Константы.ОсновнойСклад.Получить();
	КонецЕсли;	
	
	
	Запрос.УстановитьПараметр("Склад",Аптека);
	
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	Для каждого Стр из ТЗ Цикл
		
		СтрТ=ТОвар.Найти(Стр.Товар,"Товар");
		
		Если СтрТ= Неопределено ТОгда
			СтрТ=Товар.Добавить();
		КонецЕсли;
		
		СтрТ.КодАП=Стр.КодАП;
		СтрТ.Товар=Стр.ТОвар;
		СтрТ.ОстатокНаСкладе=Стр.ОстатокНаСкладе;
	КонецЦикла;	
	
	
	//-------------- ЗАПРОС GTG --------------------------КОНЕЦ

	 

	
	
	
	
КонецПроцедуры	//ОбновитьОстаткиТОвара()
//==========================================================GtG====


 


Процедура КоманднаяПанель1ДобавитьТовар(Кнопка)
	
	СписокОтобранныхПозиций=Новый СписокЗначений;
	
	
	СписокОтобранныхПозиций.Очистить();
	
    Рез=Обработки.ОтборПоФильтру.ПолучитьФорму("Форма",ЭтаФорма, Новый УникальныйИдентификатор ).ОткрытьМодально();
	
	
	Если Рез= Неопределено Тогда
		ПРедупреждение("Ничего не выбрано!");
	КонецЕсли; 	
	
	Попытка
		СписокОтобранныхПозиций=Рез.Скопировать();
	ИСключение
		Возврат;
	КонецПопытки;
	ОбновитьОстаткиТОвара(СписокОтобранныхПозиций);
КонецПроцедуры

Процедура КоманднаяПанель1ОбновитьОстаткиТовара(Кнопка)
	СписокОтобранныхПозиций=ТОвар.ВыгрузитьКолонку("Товар");
    ОбновитьОстаткиТОвара(СписокОтобранныхПозиций); 
КонецПроцедуры

Процедура ФайлНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	
	//--------------------------------------------------------------------Начало ВФ----GtG---
	ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДВФ.ПолноеИмяФайла = "";
	ДВФ.МножественныйВыбор = Ложь;
	ДВФ.Заголовок = "Сохранить в dbf";
	ДВФ.Фильтр="*.dbf|*.dbf";
	Если ДВФ.Выбрать() Тогда
		Файл=ДВФ.ПолноеИмяФайла;
	Иначе
		Возврат;
	КонецЕсли; 
	//--------------------------------------------------------------------Конец ВФ----GtG---
	
КонецПроцедуры

Процедура СохранитьВФайлНажатие(Элемент)
	
	//-------------------------------------------------------------------
	ЭлементыФормы.Инд.Значение=0;
	ЭлементыФормы.Инд.МаксимальноеЗначение=ТОвар.Количество();
	
	
	Если ПустаяСтрока(Файл)=Истина Тогда
		Предупреждение("Не указано имя файла куда сохранить заказ!");
		Возврат;
	КонецЕсли;
	
	ДБФ= Новый XBase;
	ДБФ.поля.Добавить("CMPID","N",10,0);
	ДБФ.поля.Добавить("NAME","S",200,0);
	ДБФ.поля.Добавить("QNT","N",10,0);
	
	ДБФ.СоздатьФайл(Файл);
	
	Для каждого Стр из Товар Цикл
		
		ДБФ.Добавить();
		ДБФ.CMPID=Стр.КодАП;
		ДБФ.NAME=Стр.ТОвар;
		ДБФ.QNT= Стр.КоличествоЗаказа;
		ДБФ.Записать();

		ЭлементыФормы.Инд.Значение=ЭлементыФормы.Инд.Значение+1;
		
	КонецЦикла;	
	
	
	
	ДБФ.ЗакрытьФайл();
	Предупреждение("Готово!");
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Ответ=Вопрос("ЗАКРЫТЬ ЗАКАЗ? 
				|	
				|НЕСОХРАНЕННЫЕ ИЗМЕНЕНИЯ БУДУТ ПОТЕРЯНЫ!!!",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.ДА,"ВНИМАНИЕ!!!");
	Если Ответ=КодВозвратаДиалога.Нет ТОгда
		Отказ=Истина;
	КонецЕсли;	
КонецПроцедуры

Процедура Загрузить_из_файлаНажатие(Элемент)
	
	Если Кодировка=Неопределено Тогда
		Предупреждение("Не указана кодировка файла!");
		Возврат;
	КонецЕсли; 	
	
	
	
	//--------------------------------------------------------------------Начало ВФ----GtG---
	ДВФ=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВФ.ПолноеИмяФайла = "";
	ДВФ.МножественныйВыбор = Ложь;
	ДВФ.Заголовок = "Файл заказа";
	ДВФ.Фильтр="*.DBF|*.DBF";
	Если ДВФ.Выбрать() Тогда
		Файл=ДВФ.ПолноеИмяФайла;
	Иначе
		Возврат;
	КонецЕсли; 
	//--------------------------------------------------------------------Конец ВФ----GtG---
	
	ДБФ= Новый XBase; 
	ДБФ.ОткрытьФайл(Файл);
	
	ДБФ.Кодировка=Кодировка;
	
	
	
	
	//-------------------------------------------------------------------
	ЭлементыФормы.Инд.Значение=0;
	ЭлементыФормы.Инд.МаксимальноеЗначение=ДБФ.КоличествоЗаписей();
	
	
	
	ДЛЯ Ы=1 По ДБФ.КоличествоЗаписей() Цикл 
		
		ДБФ.Перейти(Ы);
		
		Если  ТоварПоНаименованию=1 Тогда
			АП=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоНаименованию(СокрЛП(ДБФ.Name));
		Иначе
			АП=Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(ДБФ.CMPID);
		КонецЕсли;
		
		
		
		
		Стр=ТОвар.Найти(АП,"ТОВАР");
		
		Если Стр= Неопределено ТОгда
			Стр=ТОвар.Добавить();
		КонецЕсли;	
		
		
		 Стр.КодАП=АП.Код;
		 Стр.ТОвар=АП;
		 Стр.КоличествоЗаказа=ДБФ.QNT;
		 
		 ЭлементыФормы.Инд.Значение=ЭлементыФормы.Инд.Значение+1;
		 
	КонецЦикла;	
	
	
	ОбновитьОстаткиТОвара(ТОвар.ВыгрузитьКолонку("ТОВАР"));
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСоздатьЗаявкуНаТовар(Кнопка)
	
	Если ТОвар.Количество()=0 ТОгда
		ПРедупреждение("Таблица товара пуста1 Заказывать нечего.");
		Возврат;
	КонецЕсли;	
	
	
	
	ЭлементыФормы.ИндД.Видимость=Истина;
	
	//-------------------------------------------------------------------
	ЭлементыФормы.ИндД.Значение=0;
	ЭлементыФормы.ИндД.МаксимальноеЗначение=ТОвар.Количество();
	
	
	
	Док= Документы.ЗаявкаНаТовар.СоздатьДокумент();
	Док.Склад=Аптека;
	Док.Дата=ТекущаяДата();
	Док.Комментарий="Установочный заказ. Создал "+ПараметрыСеанса.ТекущийСотр;
	Док.НомерЗаявкиАптеки="";
	Док.Статус=Перечисления.СтатусЗаказаПоставщику.Создан;
	Док.ТипЗаявки=Перечисления.ТипЗаявки.Автоматический;
	
	СтрИзм=Док.Изменения.Добавить();
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.КомментарийИзменения="Создан, через обработку ""Установочный заказ подг. и ред. файлов.""";
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ВводНового;
	
	
	
	Для каждого Стр из Товар Цикл
		ЭлементыФормы.ИндД.Значение=ЭлементыФормы.ИндД.Значение+1;
		
		Если Стр.КоличествоЗаказа=0 ТОгда
			Продолжить;
		КонецЕсли;	
		
		СтрДок=Док.Товар.Добавить();
		СтрДок.Товар=Стр.Товар;
		СтрДок.Количество=Стр.КоличествоЗаказа;
		СтрДок.ЕИТ=Стр.Товар.ЕдиницаОтгрузки;
		
		Если СтрДок.ЕИТ.Пустая()=Истина ТОгда
			СтрДок.ЕИТ=СтрДок.Товар.ЕдиницаПоУмолчанию;
		КонецЕсли;	
		
		Если СтрДок.ЕИТ.Пустая()=Истина ТОгда
			СтрДок.ЕИТ=СтрДок.Товар.ЕдиницаМин;
		КонецЕсли;	
		
		
	КонецЦикла;	
	
	
	Док.Записать(РежимЗаписиДокумента.Запись);
	
	ПРедупреждение("Создана заявка на товар 
					|"+Док,10);
					
	ЭлементыФормы.ИндД.Видимость=Ложь;				
					
КонецПроцедуры

Процедура товарКоличествоЗаказаПриИзменении(Элемент)
		
	//ТекСтр=ЭлементыФормы.товар.ТекущаяСтрока;
	//ИндексСтроки=Товар.Индекс(ТекСтр);
	////Сообщить(ИндексСтроки);
	//
	//
	//Если ИндексСтроки=Товар.Количество()-1 Тогда
	//	Возврат;
	//КонецЕсли;	
	//НоваяТекСтр=Товар.Получить(ИндексСтроки+1);
	//ЭлементыФормы.Товар.ТекущаяСтрока=НоваяТекСтр;


КонецПроцедуры

Процедура товарПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	//ТекСтр=ЭлементыФормы.товар.ТекущаяСтрока;
	//ИндексСтроки=Товар.Индекс(ТекСтр);
	//Сообщить(ИндексСтроки);
	//
	//
	//Если ИндексСтроки=Товар.Количество()-1 Тогда
	//	Возврат;
	//КонецЕсли;	
	//НоваяТекСтр=Товар.Получить(ИндексСтроки+1);
	//ЭлементыФормы.Товар.ТекущаяСтрока=НоваяТекСтр;
	//
	//Товар.Получить(ИндексСтроки+1);
	//
	//
	//ЭтаФорма.Обновить();
	//
	
	

КонецПроцедуры

Процедура КоманднаяПанель1ПрикинутьЗакупку(Кнопка)
	
	
	ТЗ=товар.Скопировать();
	
	ТЗ.Свернуть("Товар","КоличествоЗаказа");
	
	//-------------------- Запрос by GtG -----------------------
	// Назначение: Последние цены по товару
	//----------------------------------------------------------
	ТХТ="ВЫБРАТЬ
	    |	ТЗ.ТОвар,
	    |	ТЗ.КоличествоЗаказа
	    |ПОМЕСТИТЬ ТЗ1
	    |ИЗ
	    |	&ТЗ КАК ТЗ
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	КОНЕЦПЕРИОДА(ПартииЖНВЛСОбороты.Период, ДЕНЬ) КАК ДатаЗакупки,
	    |	ПартииЖНВЛСОбороты.Товар,
	    |	ВЫРАЗИТЬ(ПартииЖНВЛСОбороты.СуммаЗакупСНДСПриход / ПартииЖНВЛСОбороты.КолвоПриход * ПартииЖНВЛСОбороты.Товар.ЕдиницаПоУмолчанию.К КАК ЧИСЛО(15, 2)) КАК ЦенаЗакуп
	    |ПОМЕСТИТЬ ДанныеОЗакупке
	    |ИЗ
	    |	РегистрНакопления.ПартииЖНВЛС.Обороты(&НачДата, &ТекДата, Регистратор, Склад.Регион В (&РегионыМосквы)) КАК ПартииЖНВЛСОбороты
	    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗ1 КАК ТЗ1
	    |		ПО ПартииЖНВЛСОбороты.Товар = ТЗ1.ТОвар
	    |ГДЕ
	    |	ПартииЖНВЛСОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТовара
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ДанныеОЗакупке.Товар,
	    |	МАКСИМУМ(ДанныеОЗакупке.ДатаЗакупки) КАК ДатаЗакупки
	    |ПОМЕСТИТЬ ДатыПоследнихЗакупок
	    |ИЗ
	    |	ДанныеОЗакупке КАК ДанныеОЗакупке
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ДанныеОЗакупке.Товар
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ДанныеОЗакупке.Товар,
	    |	ДанныеОЗакупке.ДатаЗакупки,
	    |	МИНИМУМ(ДанныеОЗакупке.ЦенаЗакуп) КАК ЦенаЗакуп
	    |ПОМЕСТИТЬ ЦеныДатыПоследнихЗакупок
	    |ИЗ
	    |	ДанныеОЗакупке КАК ДанныеОЗакупке
	    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыПоследнихЗакупок КАК ДатыПоследнихЗакупок
	    |		ПО ДанныеОЗакупке.Товар = ДатыПоследнихЗакупок.Товар
	    |			И ДанныеОЗакупке.ДатаЗакупки = ДатыПоследнихЗакупок.ДатаЗакупки
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ДанныеОЗакупке.Товар,
	    |	ДанныеОЗакупке.ДатаЗакупки
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ТЗ1.ТОвар,
	    |	ТЗ1.КоличествоЗаказа,
	    |	ЕСТЬNULL(ЦеныДатыПоследнихЗакупок.ДатаЗакупки, ""в Москве не закупался"") КАК ДатаПоследней,
	    |	ЕСТЬNULL(ЦеныДатыПоследнихЗакупок.ЦенаЗакуп, 0) КАК ПоследняяЦена,
	    |	ТЗ1.КоличествоЗаказа * ЕСТЬNULL(ЦеныДатыПоследнихЗакупок.ЦенаЗакуп, 0) КАК СуммаПоПоследнейЦене,
	    |	ТЗ1.ТОвар КАК ТОвар1,
	    |	ЦеныДатыПоследнихЗакупок.Товар.ТипДляЦО как ТипДляцо
	    |ИЗ
	    |	ТЗ1 КАК ТЗ1
	    |		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныДатыПоследнихЗакупок КАК ЦеныДатыПоследнихЗакупок
	    |		ПО ТЗ1.ТОвар = ЦеныДатыПоследнихЗакупок.Товар
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ТЗ1
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ДанныеОЗакупке
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ДатыПоследнихЗакупок
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ЦеныДатыПоследнихЗакупок";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("НачДата",ТекущаяДата()-60*60*24*ДнейПросмотра);
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("ТЗ",ТЗ);
	
	РегионыМосквы=Новый Массив;
	РегионыМосквы.Добавить(Справочники.Регионы.НайтиПоНаименованию("Москва"));
	РегионыМосквы.Добавить(Справочники.Регионы.НайтиПоНаименованию("Москва ЛЮКС"));
	РегионыМосквы.Добавить(Справочники.Регионы.НайтиПоНаименованию("Москва ЦЕНТР"));
    Запрос.УстановитьПараметр("РегионыМосквы",РегионыМосквы);

	РезТЗ=Запрос.Выполнить().Выгрузить();
	
	Для каждого  стр  из товар   Цикл
	
		  РезСтр=РезТЗ.Найти(Стр.Товар,"Товар");
		  
		  Если РезСтр<>Неопределено Тогда
			  Стр.ЗакупЦена=РезСтр.ПоследняяЦена;
			  Стр.ЗакупСумма=РезСтр.СуммаПоПоследнейЦене;
		      Стр.ДатаПоследнейЗакупки=РезСтр.ДатаПоследней;
			  Стр.ПФ_ЛС=РезСтр.ТипДляцо;
		  КонецЕсли; 
		  
		  
	
	КонецЦикла; 
	
	
	//----------------------------------------------------------
	СоотношениеПФЛС=Товар.Скопировать();
	СоотношениеПФЛС.Свернуть("ПФ_ЛС","ЗакупСумма");
	
	СоотношениеПФЛС.Колонки.Добавить("Процент");
	
	СуммаЗаказа=СоотношениеПФЛС.Итог("ЗакупСумма");
	
	Для каждого  Стр Из СоотношениеПФЛС Цикл
		 Стр.Процент=Формат(Стр.ЗакупСумма*100/СуммаЗаказа,"ЧЦ=15; ЧДЦ=1");
	КонецЦикла; 
	
	
	ЭлементыФормы.ТабСоотношениеПФЛС.Значение=СоотношениеПФЛС;
	ЭлементыФормы.ТабСоотношениеПФЛС.СоздатьКолонки();
	
	//УдСтр=СоотношениеПФЛС.Найти(Неопределено,"ПФ_ЛС");
	//СоотношениеПФЛС.Удалить(УдСтр);
	
	
	
	
КонецПроцедуры

Процедура КоманднаяПанель1УстановитьКолвоЗаказаНаВыделенныеСтроки(Кнопка)
	
	
	
	Сколько=1;
	Пока ВВестиЧисло(Сколько,"Сколько?",10,0)=ложь Цикл
		
	КонецЦикла;	
	
	Для каждого Стр  Из ЭлементыФормы.товар.ВыделенныеСтроки Цикл
	
		 Стр.КоличествоЗаказа=Сколько;
	
	КонецЦикла; 
	
	
	
	
	
КонецПроцедуры

Процедура ФайлЭксельНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	
	//--------------------------------------------------------------------Начало ВФ----GtG---
	XLS=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	XLS.ПолноеИмяФайла = "";
	XLS.МножественныйВыбор = Ложь;
	XLS.Заголовок = "Выберите файл формата Excel";
	XLS.Фильтр="*.xls|*.xls";
	Если XLS.Выбрать() Тогда
		ФайлЭксель=XLS.ПолноеИмяФайла;
	Иначе
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьТоварВМатрицуАптеки (ТЗАП_ГТТ,Товар,Аптека,КуМин,КуМакс,ГруппаАП) 
		//----------------------------------
		//Назначение:
		//  Добавляет товар в матрицу аптеки
		//  ПРи этом, если в ап ГТТ аптеки нет записи, 
		//  то добавляет элемент АПГТТ в  АПГТТ той группы, к которой принадлежит аптека
		//----------------------------------
		
		//------------------<Найдем, есть ли товар в АПГТТ аптеки>-------------------GtG----27.11.2007
		НайденнаяСтрока = ТЗАП_ГТТ.Найти(Товар.Код,"КодТовара");
		Если НайденнаяСтрока = Неопределено Тогда
		    Если  Аптека.ГруппаТТ=Справочники.ГруппыТТ.ПустаяСсылка() Тогда
				Сообщить("Аптека "+Аптека+" не назначена Группа ТТ! АП группы ТТ не существует! в матрицу добавить невозможно. Нужно задать группу ТТ аптеки");
				Возврат;
			КонецЕсли; 	
			
			// Добавляем новую запись в ап гтт
			АПГТТ=Справочники.АП_ГТТ.СоздатьЭлемент();
			АПГТТ.Владелец=Аптека.ГруппаТТ;
			АПГТТ.Код=Товар.Код; // код из ап. 
			АПГТТ.Товар=ТОвар;
			АПГТТ.ЕИТ=ТОвар.ЕдиницаПоУмолчанию;
			Попытка
				АПГТТ.Записать();
			Исключение
				Сообщить("не смогли записать в АПГТТ код:" + Товар.Код + " Аптека.ГруппаТТ =  " + Аптека.ГруппаТТ );
				Возврат;
			КонецПопытки;
			
			ВладелецМАтрицы=АПГТТ.Ссылка;
		Иначе
			// ТОвар есть в АПГТТ
			ВладелецМАтрицы=НайденнаяСтрока.ВладелецМатрицы;
			
			//Сообщить("Добавлен товар "+Товар+" в АП ГТТ "+Аптека.ГруппаТТ+" нужно задать параметры товара в АПГТТ");
		КонецЕсли; 
		
		// теперь товар точно есть в апгтт
		
		//------------------<Добавляем товар в матрицу аптеки>-------------------GtG----27.11.2007			
		МАтрица=Справочники.Матрица.СоздатьЭлемент();
		МАтрица.Аптека=Аптека;
		МАтрица.Владелец=ВладелецМАтрицы; // элемент АПГТТ
		Если (КуМин = 0 ) или (КуМин = Неопределено) Тогда Иначе МАтрица.КуМин = КуМин КонецЕсли;
		Если (КуМакс = 0 ) или (КуМакс = Неопределено) Тогда Иначе МАтрица.КуМакс = КуМакс КонецЕсли;
		Если ГруппаАП = "" Тогда Иначе Матрица.ГруппаАПИтог = ГруппаАП КонецЕсли;
		Попытка
			Матрица.Записать();
		Исключение
			Сообщить("Не удалось записать в матрицу код: " + Товар.Код + " - " + Товар );
		КонецПопытки;
		
		
		
КонецПроцедуры	//ДобавитьТоварВМатрицуАптеки


Процедура ОбновитьМатрицуАПНажатие(Элемент)
	
	Если Аптека = Справочники.МестаХранения.ПустаяСсылка() Тогда
		Предупреждение("Не выбрана аптека для загрузки");
		Возврат;
	КонецЕсли;
	
	ТХТ="ВЫБРАТЬ
	|	АП_ГТТ.Ссылка  как ВладелецМатрицы,
	|	АП_ГТТ.Товар.Код как КодТовара
	|ИЗ
	|	Справочник.АП_ГТТ КАК АП_ГТТ
	|ГДЕ
	|	АП_ГТТ.Владелец.Ссылка = &ГТТ
	|	";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("ГТТ",Аптека.ГруппаТТ);
	ТЗАП_ГТТ = Запрос.Выполнить().Выгрузить();
	
	ТекстЗапроса="ВЫБРАТЬ
	             |	Выборка.Ссылка КАК МатрицаСсылка,
	             |	Выборка.Владелец.Товар.Код КАК КодТовара,
	             |	Выборка.КуМин КАК Кумин,
	             |	Выборка.КуМакс КАК Кумакс,
	             |	Выборка.ГруппаАПИтог КАК ГруппаАП
	             |ИЗ
	             |	Справочник.Матрица КАК Выборка
	             |ГДЕ
	             |	Выборка.Аптека = &Аптека";
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Аптека",Аптека);
	Запрос.Текст=ТекстЗапроса;
	ТЗВрем = Запрос.Выполнить().Выгрузить();
	
	
	
	Excel = Новый COMОбъект("Excel.Application");
	Попытка
		Excel.WorkBooks.Open(СокрЛП(ФайлЭксель), 0);
	Исключение
		Сообщить("Файл: " + ФайлЭксель + " либо уже открыт, либо поврежден! Пропускаем его... ");	
		Возврат;
	КонецПопытки;
	
	Sell_itr = 2;
	КолСтрок = 0;	
	
	Пока Строка(Excel.ActiveSheet.Cells(Sell_itr,1).Value) <> "" Цикл
		Sell_itr = Sell_itr + 1;
		КолСтрок = КолСтрок + 1;
	КонецЦикла;	
	
	Sell_itr = 2;
	ЭлементыФормы.ИндД.МаксимальноеЗначение = КолСтрок;
	ЭлементыФормы.ИндД.Значение = 0;
	
	АППустаяСсылка = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
	Ошибок = 0;
	ОшибокПриЗаписи = 0;
	Номер = 0;
	//НачатьТранзакцию();
	
	Пока Строка(Excel.ActiveSheet.Cells(Sell_itr,1).Value) <> "" Цикл
		Номер = Номер + 1;
		Состояние("" + Номер + " из " + КолСтрок);
		//Если Номер % 100 = 0 Тогда
		//	ЗафиксироватьТранзакцию();
		//	Предупреждение("Ждем секунду...",1);
		//	НачатьТранзакцию();
		//КонецЕсли;
		ОбработкаПрерыванияПользователя();
		Попытка
			КодТовара		= Число(Excel.ActiveSheet.Cells(Sell_itr,1).Value);	
		Исключение
			Сообщить("Ошибка 1 в строке: "+Строка(Sell_itr));
			Ошибок = Ошибок + 1;
			КодТовара = 0;
		КонецПопытки;
		Попытка
			Кумин			= Число(Excel.ActiveSheet.Cells(Sell_itr,4).Value);	
			Кумакс			= Число(Excel.ActiveSheet.Cells(Sell_itr,5).Value);	
		Исключение
			Сообщить("Ошибка 2 в строке: "+Строка(Sell_itr) + " не могу преобразовать в число Кумин или Кумакс");
			Ошибок = Ошибок + 1;
			Кумин = 0;
			Кумакс = 0;
		КонецПопытки;
		
        ГруппаАП		= СокрЛП(Excel.ActiveSheet.Cells(Sell_itr,6).Value);
		//ЭлементыФормы.ИндД.Значение = ЭлементыФормы.ИндД.Значение + 1;
		ТоварОбъект = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		
		Если ТоварОбъект = АППустаяСсылка Тогда
			Sell_itr = Sell_itr + 1;
			Продолжить;
		КонецЕсли;
		Записать = Ложь;
		НайденнаяСтрока = ТЗВрем.Найти(КодТовара,"КодТовара");
		Если НайденнаяСтрока <> Неопределено Тогда
			МатрицаОбъект = НайденнаяСтрока.МатрицаСсылка.ПолучитьОбъект();
			Если ГруппаАП <> "" Тогда
				Если ГруппаАП <> НайденнаяСтрока.ГруппаАП Тогда
					МатрицаОбъект.ГруппаАПИтог = ГруппаАП;
					Записать = Истина;
				КОнецЕсли;
			КонецЕсли;
			Если Кумин = 0 или Кумакс = 0 Тогда
			Иначе
				Если (Кумин <> НайденнаяСтрока.Кумин) или (Кумакс <> НайденнаяСтрока.Кумакс) Тогда
					МатрицаОбъект.Кумин = Кумин;
					МатрицаОбъект.Кумакс = Кумакс;
					Записать = Истина;
				КонецЕсли;					
			КонецЕсли;
			Если Записать = Истина Тогда
				Попытка
					МатрицаОбъект.Записать();		
				Исключение
					Сообщить("Не удалось записать объек. Код товара: " + КодТовара);
					ОшибокПриЗаписи = ОшибокПриЗаписи + 1;
				КонецПопытки;
			КонецЕсли;
			Sell_itr = Sell_itr + 1;
			//Сообщить("есть такой уже");
			Продолжить;
		//Иначе
			
		КонецЕсли;
		ДобавитьТоварВМатрицуАптеки (ТЗАП_ГТТ,ТоварОбъект,Аптека,Кумин,Кумакс,ГруппаАП);
		
		
		Sell_itr = Sell_itr + 1;
		
	КонецЦикла;	
	//ЗафиксироватьТранзакцию();
	Excel.Quit();
    Сообщить("Ошибок : " + Ошибок + " ошибок при записи: " + ОшибокПриЗаписи);
	Сообщить("Последняя строка XLS: "+Строка(Sell_itr-1));
КонецПроцедуры

Процедура ЗагрузитьУстановочныйЗаказНажатие(Элемент)
	
	
	Если ПустаяСтрока(СокрЛП(ФайлЭксель)) = Истина Тогда
		Предупреждение("Не выбран файл для загрузки");
		Возврат;
	КонецЕсли;
	
	Excel = Новый COMОбъект("Excel.Application");
	Попытка
		Excel.WorkBooks.Open(СокрЛП(ФайлЭксель), 0);
	Исключение
		Сообщить("Файл: " + ФайлЭксель + " либо уже открыт, либо поврежден! Пропускаем его... ");	
		Возврат;
	КонецПопытки;
	
	Sell_itr = 2;
	КолСтрок = 0;	
	
	Пока Строка(Excel.ActiveSheet.Cells(Sell_itr,1).Value) <> "" Цикл
		Sell_itr = Sell_itr + 1;
		КолСтрок = КолСтрок + 1;
	КонецЦикла;	
	
	Sell_itr = 2;
	ЭлементыФормы.ИндД.МаксимальноеЗначение = КолСтрок;
	ЭлементыФормы.ИндД.Значение = 0;
	
	АППустаяСсылка = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПустаяСсылка();
	
	Пока Строка(Excel.ActiveSheet.Cells(Sell_itr,1).Value) <> "" Цикл

		ОбработкаПрерыванияПользователя();
		Попытка
			КодТовара		= Число(Excel.ActiveSheet.Cells(Sell_itr,1).Value);
		Исключение
			КодТовара = 0;
		КонецПопытки;
		Попытка
			Количество		= Число(Excel.ActiveSheet.Cells(Sell_itr,3).Value);	
		Исключение
			Количество = 0;
		КонецПопытки;
		
		ЭлементыФормы.ИндД.Значение = ЭлементыФормы.ИндД.Значение + 1;
		АП = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(КодТовара);
		
		Если (АП = АППустаяСсылка) или (Количество = 0) Тогда
			Sell_itr = Sell_itr + 1;
			Продолжить;
		КонецЕсли;

		Стр=ТОвар.Найти(АП,"ТОВАР");
		
		Если Стр= Неопределено ТОгда
			Стр=ТОвар.Добавить();
		КонецЕсли;	
		
		
		 Стр.КодАП=АП.Код;
		 Стр.ТОвар=АП;
		 Стр.КоличествоЗаказа=Количество;
		 Sell_itr = Sell_itr + 1;
	КонецЦикла;	
	Excel.Quit();

	
	ОбновитьОстаткиТОвара(ТОвар.ВыгрузитьКолонку("ТОВАР"));

КонецПроцедуры

Процедура ОсновныеДействияФормыЗагрузитьПозицииВМатрицуИЗТЗ(Кнопка)
	
	
	Если Аптека = Справочники.МестаХранения.ПустаяСсылка() Тогда
		Предупреждение("Не выбрана аптека для загрузки");
		Возврат;
	КонецЕсли;
	
	н=0;
	КолВо = ТОвар.Количество();
	Для каждого стр из Товар Цикл
		ОбработкаПрерыванияПользователя();

		КуМин = Цел(стр.КоличествоЗаказа/2);
		КуМин = ?(Кумин = 0,1,Кумин);
		
		//ДобавитьТоварВМатрицуАптеки (ТЗАП_ГТТ,стр.Товар,Аптека,Кумин,стр.КоличествоЗаказа,"");	
		
		
		МЗ = РегистрыСведений.Матрица.СоздатьМенеджерЗаписи(); //СоздатьНаборЗаписей(); 
		МЗ.Аптека = Аптека; 
		МЗ.Товар = стр.Товар; 
		
		МЗ.Прочитать(); 
		Если МЗ.Выбран() Тогда   // Если такая позиция есть в матрице, тогда по условиям проходим и если надо , то изменяем данные
			
			// --------------------------------------------
			МЗ.ГруппаАПИтог = стр.Товар.ГруппаАП;
			МЗ.КуМакс = стр.КоличествоЗаказа;
			Мз.КуМин = КуМин;
			МЗ.ДатаВнесенияВМатрицу = ТекущаяДата();
			МЗ.КтоВнесВМатрицу = ПараметрыСеанса.ТекущийСотр;
			МЗ.Записать();
		Иначе
			МЗ.Аптека = Аптека;
			МЗ.Товар = стр.Товар;
			МЗ.ГруппаАПИтог = стр.Товар.ГруппаАП;
			МЗ.КуМакс = стр.КоличествоЗаказа;
			Мз.КуМин = КуМин;
			МЗ.ДатаВнесенияВМатрицу = ТекущаяДата();
			МЗ.КтоВнесВМатрицу = ПараметрыСеанса.ТекущийСотр;						
			МЗ.Записать();
		КонецЕсли;
		н=н+1;
		Если н%100 = 0 Тогда
			Состояние("Обработано: " + н + " из " + КолВо);	
		КонецЕсли;		
		
	КонецЦикла;
	
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОбновлениеГруппыАПВМатрице(Кнопка)
	
	Если Аптека = Справочники.МестаХранения.ПустаяСсылка() Тогда
		Предупреждение("Не выбрана аптека для загрузки");
		Возврат;
	КонецЕсли;
	
	
	ТХТ = "ВЫБРАТЬ
	      |	Матрица.Ссылка,
	      |	Матрица.Владелец.Товар.ГруппаАП КАК ГруппаАП,
	      |	Матрица.КуМин
	      |ИЗ
	      |	Справочник.Матрица КАК Матрица
	      |ГДЕ
	      |	Матрица.Аптека = &Аптека";
		  
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("аптека",Аптека);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	КолСтрок = ТЗ.Количество();
	н=0;
	НачатьТранзакцию();
	ДЛя каждого стр из ТЗ Цикл
		н=н+1;
		Если н%200 = 0 Тогда
			Состояние("Обновлено: " + н + " из " + КолСтрок);
			ЗафиксироватьТранзакцию();
			НачатьТранзакцию();
		КонецЕсли;
		//Если  стр.КуМин = 0 Тогда
		//	Объект = стр.Ссылка.ПолучитьОбъект();
		//	Объект.КуМин = 1;
		//	Объект.Записать();

		//КонецЕсли;
		Объект = стр.Ссылка.ПолучитьОбъект();
		Объект.ГруппаАПИтог = стр.ГруппаАП;
		Объект.Записать();
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
	
	
КонецПроцедуры

Процедура ЗагрузитьУстановочныйЗаказ1Нажатие(Элемент)
	
	Для каждого текстр из Заявка.Товар Цикл
		  стр = товар.Добавить();
		  Стр.КодАП=текстр.Товар.Код;
		 Стр.ТОвар=текстр.Товар;
		 Стр.КоличествоЗаказа=текстр.Количество;	
	КонецЦикла;
	
	
КонецПроцедуры


ТоварПоНаименованию=2;
ДнейПросмотра=100;

ЭлементыФормы.Кодировка.СписокВыбора.Добавить(КодировкаXBase.ANSI);
ЭлементыФормы.Кодировка.СписокВыбора.Добавить(КодировкаXBase.OEM);
