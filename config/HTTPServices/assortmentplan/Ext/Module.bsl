
Функция ПолучитьМатрицуПоАптеке(Запрос)
	тОтвет = "Ок";
	
	КодАптеки = Запрос.ПараметрыURL.Получить("apt_code");
	Активный = СокрЛП(Запрос.ПараметрыЗапроса.Получить("active"));
	ПоискПоМНН = СокрЛП(Запрос.ПараметрыЗапроса.Получить("mnnpoisk"));
	ЕстьВМатрице = СокрЛП(Запрос.ПараметрыЗапроса.Получить("inmatrix"));
	
	Если Активный = "1" Тогда
		УсловиеАктивный = "И АП.УчаствуетВАП = Истина";
	ИначеЕсли Активный = "0" Тогда
		УсловиеАктивный = "И АП.УчаствуетВАП = Ложь";	
	Иначе
		УсловиеАктивный = "";
	КонецЕсли;
	
	Если ПоискПоМНН = "1" Тогда
		УсловиеПоиск = "И АП.МНН.Наименование Подобно &ФильтрНаименование";
	Иначе
		УсловиеПоиск = "И АП.Наименование Подобно &ФильтрНаименование";
	КонецЕсли;
	
	Если ЕстьВМатрице = "1" Тогда
		УсловиеМатрица = " И Матрица.Товар ЕСТЬ not null ";
		
	ИначеЕсли ЕстьВМатрице = "0" Тогда
		УсловиеМатрица = " И Матрица.Товар ЕСТЬ null";
	Иначе
		УсловиеМатрица = "";
	КонецЕсли;
		
	Попытка 
		КодАптекиЧисло = Число(КодАптеки);
	Исключение
		КодАптекиЧисло = 0;
	КонецПопытки;
	Если КодАптекиЧисло = 0 Тогда
		тОтвет = "Не задан код аптеки";
	Иначе
		НайденаяАптека = Справочники.МестаХранения.НайтиПоКоду(КодАптекиЧисло);
	КонецЕсли;
	
	ФильтрНаименование = СокрЛП(Запрос.ПараметрыURL.Получить("f_name"));
	
	Если СтрДлина(ФильтрНаименование) < 5 Тогда
		тОшибка = "Задайте фильтр по наименвоанию не менее 5 букв";
		тОтвет = ?(тОтвет = "Ок", тОшибка, тОтвет+"; "+тОшибка);
	КонецЕсли;
	
	Если НайденаяАптека = Справочники.МестаХранения.ПустаяСсылка() Тогда
		тОшибка = "Не найдена аптека по коду: "+КодАптекиЧисло;
		тОтвет = ?(тОтвет = "Ок", тОшибка, тОтвет+"; "+тОшибка);
	КонецЕсли;	
		
	Если тОтвет = "Ок" Тогда	
		
		ЗапросМатрица = Новый Запрос;
		
		ЗапросМатрица.Текст = "ВЫБРАТЬ
		|		АП.Код КАК КодТовара,
		|		АП.Ссылка КАК Товар,
		|		АП.УчаствуетВАП КАК Активный,
		|		АП.МНН КАК МНН,
		|		АП.Категория КАК Категория
		|	ПОМЕСТИТЬ ВыборкаТоваров
		|	ИЗ
		|		Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
		|	ГДЕ
		|		АП.ПометкаУдаления = ЛОЖЬ
		|		"+УсловиеПоиск+"
		|		"+УсловиеАктивный+"
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	ВЫБРАТЬ 
		|		ВыборкаТоваров.КодТовара КАК Код1С,
		|		ВыборкаТоваров.Товар.Наименование КАК Наименование,
		|		ВыборкаТоваров.Активный КАК Активный,
		|		ВыборкаТоваров.Товар.Производитель.Представление КАК Производитель,
		|		ВыборкаТоваров.Товар.ТипТовара.Представление КАК ТипТовара,
		|		ЕСТЬNULL(Матрица.ГруппаАПИтог, """") КАК ГруппаАП,
		|		ВЫБОР
		|			КОГДА Матрица.Товар ЕСТЬ null
		|				ТОГДА Ложь
		|			ИНАЧЕ Истина
		|		КОНЕЦ КАК ЕстьВМатрице,
		|		ВыборкаТоваров.Товар.УТК.Представление КАК УТК,
		|		ВыборкаТоваров.МНН.Представление КАК МНН,
		|		ВыборкаТоваров.Категория.Представление КАК Категория,
		|		ВЫБОР
		|			КОГДА Неликвиды.КодТовара ЕСТЬ NULL 
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК Неликвид
		|	ИЗ
		|		ВыборкаТоваров КАК ВыборкаТоваров
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Матрица КАК Матрица
		|			ПО ВыборкаТоваров.Товар = Матрица.Товар
		|				И (Матрица.Аптека = &Аптека)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Неликвиды КАК Неликвиды
		|			ПО (Неликвиды.Аптека = &Аптека)
		|				И (Неликвиды.КодТовара = ВыборкаТоваров.КодТовара)
		|	Где	
		|		1=1
		|		"+УсловиеМатрица+"
		|";
		ЗапросМатрица.УстановитьПараметр("Аптека",НайденаяАптека);
		ЗапросМатрица.УстановитьПараметр("ФильтрНаименование","%"+ФильтрНаименование+"%");
		Рез = ЗапросМатрица.Выполнить();
		Если Рез.Пустой() Тогда
			тОтвет = "Нет данных по Код Аптеки: """+КодАптекиЧисло+""" Фильтр: """+ФильтрНаименование+"""";
		Иначе 
			Выборка = Рез.Выбрать();
			ЗаписьJSON		= Новый ЗаписьJSON;
		    ЗаписьJSON.УстановитьСтроку();
			МассивМатрица = Новый Массив;
			Пока Выборка.Следующий() Цикл
				МассивМатрица.Добавить(Новый Структура("Код1С,Наименование,Активный,Производитель,ТипТовара,ГруппаАП,ЕстьВМатрице,УТК,МНН,Категория,Неликвид",
				Выборка.Код1С,
				Выборка.Наименование,
				Выборка.Активный,
				Строка(Выборка.Производитель),
				Строка(Выборка.ТипТовара),
				Выборка.ГруппаАП,
				Выборка.ЕстьВМатрице,
				Строка(Выборка.УТК),
				Строка(Выборка.МНН),
				Строка(Выборка.Категория),
				Выборка.Неликвид
				));
			КонецЦикла;
			Попытка
				ЗаписатьJSON(ЗаписьJSON, МассивМатрица);
				СтрокаДляОтвета = ЗаписьJSON.Закрыть();
			Исключение
				тОтвет = "Ошибка: "+ОписаниеОшибки();
			КонецПопытки;
			
		КонецЕсли;
	КонецЕсли;	
			
	Ответ = Новый HTTPСервисОтвет(200);
	
	ТекстОтвета = "{""error"":"""+СокрЛП(тОтвет)+"""}";
	
	Если тОтвет = "Ок" Тогда
		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	Иначе	
		Ответ.УстановитьТелоИзСтроки(ТекстОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	КонецЕсли;	
	
	ЗаголовокHTTP = Новый Соответствие();  
	ЗаголовокHTTP.Вставить("Content-type", "application/json;charset=utf-8");

	Ответ.Заголовки = ЗаголовокHTTP;
	
	Возврат Ответ;
	
КонецФункции
