
Функция ПолучитьСтруктуруДатРасчетов(пер_КодАптеки)
	
	СтруктураВозврата = Новый Структура("ДатаРасчета", '00010101');
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АвтозаказОптДатыРасчетаСкоростей.КодАптеки,
	|	АвтозаказОптДатыРасчетаСкоростей.ДатаРасчета
	|ИЗ
	|	РегистрСведений.АвтозаказОптДатыРасчетаСкоростей КАК АвтозаказОптДатыРасчетаСкоростей
	|ГДЕ
	|	АвтозаказОптДатыРасчетаСкоростей.КодАптеки = &КодАптеки";
	
	Запрос.УстановитьПараметр("КодАптеки", пер_КодАптеки);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СтруктураВозврата;
	Иначе
		Возврат РезультатЗапроса.Выгрузить()[0];
	КонецЕсли;	
	
КонецФункции

Функция ПолучитьТаблицуАптек(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МХ.Ссылка КАК Аптека,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ)) КАК КоличествоВыручек,
	               |	РеализацияККМ.СкладКод,
	               |	ЕСТЬNULL(ПерелицензированныеАптеки.СтараяАптека.Код,0) как СтарыйКодАптеки,
	               |	ПерелицензированныеАптеки.СтараяАптека
	               |ИЗ
	               |	Документ.УЗ_РеализацияККМ КАК РеализацияККМ
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МХ
	               |		ПО (МХ.Код = РеализацияККМ.СкладКод)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПерелицензированныеАптеки КАК ПерелицензированныеАптеки
	               |		ПО РеализацияККМ.СкладКод = ПерелицензированныеАптеки.НоваяАптека.Код
	               |ГДЕ
	               |	НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &НачПериода И &КонПериода
	               |	И РеализацияККМ.Проведен = ИСТИНА
	               |	И МХ.НаПрямыхПоставках
	               |	И МХ.ПометкаУдаления = ЛОЖЬ
	               |	И МХ.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МХ.Ссылка,
	               |	РеализацияККМ.СкладКод,
	               |	ПерелицензированныеАптеки.СтараяАптека.Код,
	               |	ПерелицензированныеАптеки.СтараяАптека
	               |
	               |ИМЕЮЩИЕ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ)) > 10";
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(ПараметрыРасчета.НачПериода));				   
	Запрос.УстановитьПараметр("КонПериода",КонецДня(ПараметрыРасчета.КонПериода));	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ЗафиксироватьАктивностьРасчета(Аптека)
	
	МЗ = РегистрыСведений.АвтозаказОптТекущийРасчет.СоздатьМенеджерЗаписи();
	МЗ.Аптека = Аптека;
	МЗ.ДатаНачалаРасчета = ТекущаяДата();
	Попытка
		МЗ.Записать(Ложь);
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Функция УдалитьАктивностьРасчета(Аптека)
	
	МЗ = РегистрыСведений.АвтозаказОптТекущийРасчет.СоздатьМенеджерЗаписи();
	МЗ.Аптека = Аптека;
	МЗ.Прочитать();
	Если МЗ.Выбран() Тогда
		МЗ.Удалить();
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ЗафиксироватьДатуРасчета(КодАптеки)
	
	МЗ = РегистрыСведений.АвтозаказОптДатыРасчетаСкоростей.СоздатьМенеджерЗаписи();
	МЗ.КодАптеки = КодАптеки;
	МЗ.ДатаРасчета = ТекущаяДата();
	МЗ.Записать();
	
КонецПроцедуры

Процедура РассчитатьПотребность() Экспорт

	НачПериода =   НачалоДня(ТекущаяДата())-1 - 24*60*60*89;
	КонПериода =   НачалоДня(ТекущаяДата())-1;
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("НачПериода",НачПериода);
	ПараметрыРасчета.Вставить("КонПериода",КонПериода);
	
	ДниПродаж = Новый ТаблицаЗначений;
	ДниПродаж.Колонки.Добавить("КодТовара",Новый ОписаниеТипов("Число"));
	ДниПродаж.Колонки.Добавить("ДнейПродаж",Новый ОписаниеТипов("Число"));
	
	ТаблицаАптек = ПолучитьТаблицуАптек(ПараметрыРасчета);
	пер_НачалоДня = НачалоДня(ТекущаяДата());
	Для каждого стр из ТаблицаАптек Цикл
		
		//ОбработкаПрерыванияПользователя();
		
		ДатыРасчетов = ПолучитьСтруктуруДатРасчетов(стр.СкладКод);
		Если НачалоДня(ДатыРасчетов.ДатаРасчета) = пер_НачалоДня Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗафиксироватьАктивностьРасчета(стр.Аптека) = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		ВыбАптека = стр.Аптека;
		КодАптеки = стр.СкладКод;
		СписокКодовАптек = Новый СписокЗначений;
		СписокКодовАптек.Добавить(стр.СкладКод);
		СписокАптек = Новый СписокЗначений;
		СписокАптек.Добавить(ВыбАптека);		
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СкладКод",стр.СкладКод);
		Запрос.УстановитьПараметр("СкладСсылка",ВыбАптека);
		Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачПериода));				   
		Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));				   

		
		Если стр.СтарыйКодАптеки > 0 Тогда
			//Запрос.Текст = "ВЫБРАТЬ
			//|	ОстаткиОбороты.ТоварКод как КодТовара,
			//|	ОстаткиОбороты.Период,
			//|	ОстаткиОбороты.КоличествоНачальныйОстаток КАК Остаток,
			//|	ОстаткиОбороты.КоличествоОборот как Оборот
			//|ИЗ
			//|	РегистрНакопления.УЗ_Партии.ОстаткиИОбороты(&НачПериода, &КонПериода, День, , СкладКод в (&СписокКодовАптек)) КАК ОстаткиОбороты";
			Запрос.Текст = "ВЫБРАТЬ
			               |	ОстаткиОбороты.ПартияКод КАК ПартияКод,
			               |	СУММА(ОстаткиОбороты.КоличествоОборот) КАК Оборот
			               |ПОМЕСТИТЬ Партии
			               |ИЗ
			               |	РегистрНакопления.УЗ_Партии.ОстаткиИОбороты(&НачПериода, &КонПериода, , , СкладКод в (&СписокКодовАптек)) КАК ОстаткиОбороты
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ОстаткиОбороты.ПартияКод
			               |
			               |ИНДЕКСИРОВАТЬ ПО
			               |	ОстаткиОбороты.ПартияКод
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	Партии.ПартияКод КАК ПартияКод
			               |ПОМЕСТИТЬ ИнтернетПартии
			               |ИЗ
			               |	Партии КАК Партии
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
			               |		ПО Партии.ПартияКод = УЗ_Партии.Код
			               |ГДЕ
			               |	УЗ_Партии.ТипПартии = ""I""
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ОстаткиОбороты.ТоварКод КАК КодТовара,
			               |	ОстаткиОбороты.Период КАК Период,
			               |	ОстаткиОбороты.КоличествоНачальныйОстаток КАК Остаток,
			               |	ОстаткиОбороты.КоличествоОборот КАК Оборот
			               |ИЗ
			               |	РегистрНакопления.УЗ_Партии.ОстаткиИОбороты(
			               |			&НачПериода,
			               |			&КонПериода,
			               |			День,
			               |			,
			               |			 СкладКод в (&СписокКодовАптек)
			               |				И НЕ ПартияКод В
			               |						(ВЫБРАТЬ
			               |							интернетПартии.ПартияКод
			               |						ИЗ
			               |							интернетПартии)) КАК ОстаткиОбороты
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ Партии
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ ИнтернетПартии";			
			

			СписокКодовАптек.Добавить(стр.СтарыйКодАптеки);
			СписокАптек.Добавить(стр.СтараяАптека);
			Запрос.УстановитьПараметр("СписокКодовАптек",СписокКодовАптек);
			Запрос.УстановитьПараметр("СписокАптек",СписокАптек);

			
		Иначе
			// Меняем на замороченный текст ниже, чтобы исключить интернет партии. Просто заджойнить таблицу партий к виртуальной не получится , так как 1С-ка некорректно вернет данные
			//Запрос.Текст = "ВЫБРАТЬ
			//|	ОстаткиОбороты.ТоварКод как КодТовара,
			//|	ОстаткиОбороты.Период,
			//|	ОстаткиОбороты.КоличествоНачальныйОстаток КАК Остаток,
			//|	ОстаткиОбороты.КоличествоОборот как Оборот
			//|ИЗ
			//|	РегистрНакопления.УЗ_Партии.ОстаткиИОбороты(&НачПериода, &КонПериода, День, , СкладКод = &СкладКод) КАК ОстаткиОбороты";
			
			
			Запрос.Текст = "ВЫБРАТЬ
			               |	ОстаткиОбороты.ПартияКод КАК ПартияКод,
			               |	СУММА(ОстаткиОбороты.КоличествоОборот) КАК Оборот
			               |ПОМЕСТИТЬ Партии
			               |ИЗ
			               |	РегистрНакопления.УЗ_Партии.ОстаткиИОбороты(&НачПериода, &КонПериода, , , СкладКод = &СкладКод) КАК ОстаткиОбороты
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ОстаткиОбороты.ПартияКод
			               |
			               |ИНДЕКСИРОВАТЬ ПО
			               |	ОстаткиОбороты.ПартияКод
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	Партии.ПартияКод КАК ПартияКод
			               |ПОМЕСТИТЬ ИнтернетПартии
			               |ИЗ
			               |	Партии КАК Партии
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
			               |		ПО Партии.ПартияКод = УЗ_Партии.Код
			               |ГДЕ
			               |	УЗ_Партии.ТипПартии = ""I""
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ОстаткиОбороты.ТоварКод КАК КодТовара,
			               |	ОстаткиОбороты.Период КАК Период,
			               |	ОстаткиОбороты.КоличествоНачальныйОстаток КАК Остаток,
			               |	ОстаткиОбороты.КоличествоОборот КАК Оборот
			               |ИЗ
			               |	РегистрНакопления.УЗ_Партии.ОстаткиИОбороты(
			               |			&НачПериода,
			               |			&КонПериода,
			               |			День,
			               |			,
			               |			СкладКод = &СкладКод
			               |				И НЕ ПартияКод В
			               |						(ВЫБРАТЬ
			               |							интернетПартии.ПартияКод
			               |						ИЗ
			               |							интернетПартии)) КАК ОстаткиОбороты
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ Партии
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ ИнтернетПартии";
			
						
		КонецЕсли;
		
		ДниПродаж.Очистить();
		
		
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			УдалитьАктивностьРасчета(стр.Аптека);
			Продолжить;
		КонецЕсли;
		
		//ТЧ.Загрузить(Рез.Выгрузить());
		Выборка = Рез.Выбрать();
		
		
		СтарыйКод = 0;
		ПредыдущаяДата = Дата(1,1,1);
		ДнейПродаж = 0;
		Пока Выборка.Следующий() Цикл
			
			Если СтарыйКод <> Выборка.КодТовара и СтарыйКод <> 0 Тогда
				НоваяСтрока = ДниПродаж.Добавить();
				НоваяСтрока.КодТовара = СтарыйКод;
				НоваяСтрока.ДнейПродаж = ДнейПродаж + 1;
				
				СтарыйКод = Выборка.КодТовара;
				ДнейПродаж = 0;
				ПредыдущаяДата = Дата(1,1,1);
			КонецЕсли;
			
			
			ОстатокНаКонец = Выборка.Остаток + Выборка.Оборот;
			
			Если НЕ (ПредыдущаяДата = Дата(1,1,1) или Выборка.Остаток = 0) Тогда
				РазницаДат = (Выборка.Период - ПредыдущаяДата)/(24*60*60) ;
				Если ОстатокНаКонец = 0 Тогда
					РазницаДат = РазницаДат ;   //-1
				КонецЕсли;
				
				ДнейПродаж = ДнейПродаж + РазницаДат;
				
			КонецЕсли;
			
			//Если (ПредыдущаяДата = Дата(1,1,1) и Выборка.Остаток = 0) Тогда
			//	ДнейПродаж = ДнейПродаж + 1;	
			//КонецЕсли;
			
			//Если Выборка.Период = КонПериода Тогда
			//	ДнейПродаж = ДнейПродаж + 1;	
			//КонецЕсли;
			
			Если ОстатокНаКонец > 0 Тогда
				ПредыдущаяДата = Выборка.Период;	
			КонецЕсли;
			
			СтарыйКод = Выборка.КодТовара;		
			
		КонецЦикла;
		
		//ТЧДниПродаж.Загрузить(ДниПродаж);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	Т.КодТовара КАК КодТовара,
		               |	Т.ДнейПродаж КАК ДнейПродаж
		               |ПОМЕСТИТЬ ДниПродаж
		               |ИЗ
		               |	&Таб КАК Т
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Т.КодТовара
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Матрица.Товар.Код КАК КодТовара,
		               |	Матрица.КуМин КАК КуМин,
		               |	Матрица.КуМакс КАК КуМакс,
		               |	Матрица.ГруппаАПИтог КАК ГруппаABC
		               |ПОМЕСТИТЬ ВтМатрица
		               |ИЗ
		               |	РегистрСведений.Матрица КАК Матрица
		               |ГДЕ
		               |	Матрица.Аптека = &СкладСсылка
		               |	И НЕ Матрица.ГруппаАПИтог = ""I""
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	КодТовара
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВтМатрица.КодТовара КАК КодТовара,
		               |	ВтМатрица.КуМин КАК КуМин,
		               |	ВтМатрица.КуМакс КАК КуМакс,
		               |	ВтМатрица.ГруппаABC КАК ГруппаABC
		               |ПОМЕСТИТЬ ВтМатрица_НетПродаж
		               |ИЗ
		               |	ВтМатрица КАК ВтМатрица
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ДниПродаж КАК ДниПродаж
		               |		ПО ВтМатрица.КодТовара = ДниПродаж.КодТовара
		               |ГДЕ
		               |	ДниПродаж.ДнейПродаж ЕСТЬ NULL
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	УЗ_ПартииОстатки.ТоварКод КАК ТоварКод,
		               |	СУММА(ВЫРАЗИТЬ(УЗ_ПартииОстатки.КоличествоОстаток / УЗ_Партии.К КАК ЧИСЛО(12, 0))) КАК Остаток
		               |ПОМЕСТИТЬ ВтОстатки
		               |ИЗ
		               |	РегистрНакопления.УЗ_Партии.Остатки(, СкладКод = &СкладКод) КАК УЗ_ПартииОстатки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
		               |		ПО УЗ_ПартииОстатки.ПартияКод = УЗ_Партии.Код
		               |ГДЕ
		               |	НЕ УЗ_Партии.ТипПартии = ""I""
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	УЗ_ПартииОстатки.ТоварКод
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	УЗ_ПартииОстатки.ТоварКод
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЗаказПоставщикуОстатки.Товар.Код КАК КодТовара,
		               |	ЗаказПоставщикуОстатки.КоличествоОстаток КАК ВПути
		               |ПОМЕСТИТЬ ВТПути
		               |ИЗ
		               |	РегистрНакопления.ЗаказПоставщику.Остатки(, Склад = &СкладСсылка) КАК ЗаказПоставщикуОстатки
		               |ГДЕ
		               |	ЗаказПоставщикуОстатки.КоличествоОстаток > 0
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	КодТовара
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТоварНаПриемке.ТоварКод КАК КодТовара,
		               |	СУММА(ТоварНаПриемке.Количество / ТоварНаПриемке.К) КАК ВПриемке
		               |ПОМЕСТИТЬ ВтВПриемке
		               |ИЗ
		               |	РегистрСведений.ТоварНаПриемке КАК ТоварНаПриемке
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
		               |		ПО ТоварНаПриемке.ПартияКод = УЗ_Партии.Код
		               |ГДЕ
		               |	ТоварНаПриемке.СкладКод = &СкладКод
		               |	И НЕ УЗ_Партии.ТипПартии = ""I""
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТоварНаПриемке.ТоварКод
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	КодТовара
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	УЗ_РеализацииККМ.ТоварКод КАК ТоварКод,
		               |	СУММА(УЗ_РеализацииККМ.Количество / УЗ_РеализацииККМ.К) КАК Количество,
		               |	СРЕДНЕЕ(УЗ_РеализацииККМ.СуммаЗакупСНДС / (УЗ_РеализацииККМ.Количество / УЗ_РеализацииККМ.К)) КАК ЦенаЗакупСНДС,
		               |	СУММА(УЗ_РеализацииККМ.СуммаРозн) КАК СуммаРознСНДС
		               |ПОМЕСТИТЬ Продажи
		               |ИЗ
		               |	РегистрНакопления.УЗ_РеализацииККМ КАК УЗ_РеализацииККМ
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
		               |		ПО УЗ_РеализацииККМ.ПартияКод = УЗ_Партии.Код
		               |ГДЕ
		               |	УЗ_РеализацииККМ.Период МЕЖДУ &НачПериода И &КонПериода
		               |	И УЗ_РеализацииККМ.СкладКод В(&СписокКодовАптек)
		               |	И УЗ_РеализацииККМ.К > 0
		               |	И НЕ УЗ_Партии.ТипПартии = ""I""
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	УЗ_РеализацииККМ.ТоварКод
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	УЗ_РеализацииККМ.ТоварКод
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	&СкладКод КАК КодАптеки,
		               |	ДниПродаж.КодТовара КАК КодТовара,
		               |	ВЫБОР
		               |		КОГДА ДниПродаж.ДнейПродаж > 0
		               |			ТОГДА ЕСТЬNULL(Продажи.Количество, 0) / ДниПродаж.ДнейПродаж
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Скорость,
		               |	ДниПродаж.ДнейПродаж КАК ДнейПродаж,
		               |	ЕСТЬNULL(Продажи.Количество, 0) КАК КоличествоПродаж,
		               |	ВтОстатки.Остаток КАК Остаток,
		               |	ВЫРАЗИТЬ(ВТПути.ВПути КАК ЧИСЛО(12, 0)) КАК ВПути,
		               |	ВЫРАЗИТЬ(ВтВПриемке.ВПриемке КАК ЧИСЛО(12, 0)) КАК ВПриемке,
		               |	ВтМатрица.КуМин КАК КуМин,
		               |	ВтМатрица.КуМакс КАК КуМакс,
		               |	ЕСТЬNULL(ВтМатрица.ГруппаABC, """") КАК ГруппаABC,
		               |	ВЫБОР
		               |		КОГДА ВТНеликвиды.КодТовара ЕСТЬ NULL
		               |			ТОГДА ЛОЖЬ
		               |		ИНАЧЕ ИСТИНА
		               |	КОНЕЦ КАК Блок,
		               |	ВЫРАЗИТЬ(Продажи.ЦенаЗакупСНДС КАК ЧИСЛО(15, 2)) КАК ЦенаЗакупСНДС,
		               |	ВЫБОР
		               |		КОГДА Продажи.Количество = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ ВЫРАЗИТЬ(Продажи.СуммаРознСНДС / Продажи.Количество КАК ЧИСЛО(15, 2))
		               |	КОНЕЦ КАК ЦенаРознСНДС
		               |ИЗ
		               |	ДниПродаж КАК ДниПродаж
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Продажи КАК Продажи
		               |		ПО ДниПродаж.КодТовара = Продажи.ТоварКод
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТПути КАК ВТПути
		               |		ПО ДниПродаж.КодТовара = ВТПути.КодТовара
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтВПриемке КАК ВтВПриемке
		               |		ПО ДниПродаж.КодТовара = ВтВПриемке.КодТовара
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстатки КАК ВтОстатки
		               |		ПО ДниПродаж.КодТовара = ВтОстатки.ТоварКод
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтМатрица КАК ВтМатрица
		               |		ПО ДниПродаж.КодТовара = ВтМатрица.КодТовара
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Неликвиды КАК ВТНеликвиды
		               |		ПО ДниПродаж.КодТовара = ВТНеликвиды.КодТовара
		               |			И (ВТНеликвиды.Аптека = &СкладСсылка)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	&СкладКод,
		               |	ВтМатрица_НетПродаж.КодТовара,
		               |	0,
		               |	0,
		               |	0,
		               |	ВтОстатки.Остаток,
		               |	ВЫРАЗИТЬ(ВТПути.ВПути КАК ЧИСЛО(12, 0)),
		               |	ВЫРАЗИТЬ(ВтВПриемке.ВПриемке КАК ЧИСЛО(12, 0)),
		               |	ВтМатрица_НетПродаж.КуМин,
		               |	ВтМатрица_НетПродаж.КуМакс,
		               |	ВтМатрица_НетПродаж.ГруппаABC,
		               |	ВЫБОР
		               |		КОГДА ВТНеликвиды.КодТовара ЕСТЬ NULL
		               |			ТОГДА ЛОЖЬ
		               |		ИНАЧЕ ИСТИНА
		               |	КОНЕЦ,
		               |	0,
		               |	0
		               |ИЗ
		               |	ВтМатрица_НетПродаж КАК ВтМатрица_НетПродаж
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТПути КАК ВТПути
		               |		ПО ВтМатрица_НетПродаж.КодТовара = ВТПути.КодТовара
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтВПриемке КАК ВтВПриемке
		               |		ПО ВтМатрица_НетПродаж.КодТовара = ВтВПриемке.КодТовара
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстатки КАК ВтОстатки
		               |		ПО ВтМатрица_НетПродаж.КодТовара = ВтОстатки.ТоварКод
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Неликвиды КАК ВТНеликвиды
		               |		ПО ВтМатрица_НетПродаж.КодТовара = ВТНеликвиды.КодТовара
		               |			И (ВТНеликвиды.Аптека = &СкладСсылка)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ДниПродаж
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВтОстатки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВТПути
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВТМатрица
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ Продажи
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВтМатрица_НетПродаж";
		
		Запрос.УстановитьПараметр("СписокКодовАптек",СписокКодовАптек);
		Запрос.УстановитьПараметр("СписокАптек",СписокАптек);
		Запрос.УстановитьПараметр("Таб",ДниПродаж);
		
		НЗ = РегистрыСведений.АвтозаказОптСкоростиПродаж.СоздатьНаборЗаписей();
		НЗ.Отбор.КодАптеки.Установить(стр.СкладКод);
		НЗ.Загрузить(Запрос.Выполнить().Выгрузить());
		НЗ.Записать();
		
		ЗафиксироватьДатуРасчета(стр.СкладКод);
		УдалитьАктивностьРасчета(стр.Аптека);
		
	КонецЦикла;
	//Скорости.Загрузить(ТЗСкоростей);
	
КонецПроцедуры

Процедура ВыгрузитьПотребностьОпт() Экспорт
	
	РегламентноеЗадание = Справочники.РегламентныеЗадания.НайтиПоКоду("ВыгрузитьПотребностьОпт");
	
	Параметры = Новый Структура("ОптовыйСклад, ПочтаРассылкиОборачиваемости");
	
	Если НЕ МодульРегламентныхЗаданий.ПолучитьПараметрыРегламентногоЗадания(РегламентноеЗадание, Параметры) Тогда
		МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Отсутствует параметр - ОптовыйСклад. Выполнение задания не может быть продолжено.");
		Возврат;
	КонецЕсли;
		
	ИмяТемпФайла = ПолучитьИмяВременногоФайла("CSV");

	
	Инфо = Новый СистемнаяИнформация;
	Если Инфо.ТипПлатформы = ТипПлатформы.Linux_x86 или 
		Инфо.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда
		КаталогФТП			= "/home/usr1cv8/ftp_net/post/GDPAHR/";
	Иначе
		КаталогФТП			= "\\id-vm-1\ftp_data\Post\GDPAHR\";
	КонецЕсли;
	
	
	//////////////////////////////////////////////
	// Выгрузка списка товаров
	
	ИмяФайла = КаталогФТП + "FullAVEAssortmentList.CSV";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Код КАК КодТовара,
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Наименование КАК Товар,
	|	ПРЕДСТАВЛЕНИЕ(АССОРТИМЕНТНЫЙ_ПЛАН.Производитель) КАК Производитель,
	|	ПРЕДСТАВЛЕНИЕ(АССОРТИМЕНТНЫЙ_ПЛАН.ОбобщеннаяГруппа) КАК ОбобщеннаяГруппа,
	|	ПРЕДСТАВЛЕНИЕ(АССОРТИМЕНТНЫЙ_ПЛАН.Бренд) КАК Бренд
	|ИЗ
	|	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	|ГДЕ
	|	АССОРТИМЕНТНЫЙ_ПЛАН.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТовара";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Текст = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.ANSI);	
	Текст.ЗаписатьСтроку("КодТовара;Товар;Производитель;ОбобщеннаяГруппа;Бренд");
	
	Пока Выборка.Следующий() Цикл		
		МассивПолей = Новый Массив;
		МассивПолей.Добавить(Выборка.КодТовара);
		МассивПолей.Добавить(Выборка.Товар);
		МассивПолей.Добавить(Выборка.Производитель);
		МассивПолей.Добавить(Выборка.ОбобщеннаяГруппа);
		МассивПолей.Добавить(Выборка.Бренд);
		
		ТекСтрока = ОМ_ТСО.ПолучитьСтрокуДляCSV(МассивПолей);
		Текст.ЗаписатьСтроку(ТекСтрока);
		
	КонецЦикла;
	
	Текст.Закрыть();
	
	               
	//////////////////////////////////////////////
	// Выгрузка файла потребности
	
	ФайлДанных		= КаталогФТП + "Needs.CSV";	
	
	Субъекты = Новый СписокЗначений;
	Субъекты.Добавить(Справочники.СубъектыРФ.НайтиПоКоду(14));  //ЛенОбласть
	Субъекты.Добавить(Справочники.СубъектыРФ.НайтиПоКоду(32));  //Питер
	
	Группы = Новый СписокЗначений;
	Группы.Добавить(Справочники.ОбобщенныеГруппы.НайтиПоКоду(10));
	Группы.Добавить(Справочники.ОбобщенныеГруппы.НайтиПоКоду(43));


	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МХ.Код
	|ПОМЕСТИТЬ КодыПитера
	|ИЗ
	|	Справочник.МестаХранения КАК МХ
	|ГДЕ
	|	МХ.СубъектРФ В(&Субъекты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КодыПитера.Код ЕСТЬ NULL 
	|			ТОГДА 77
	|		ИНАЧЕ 78
	|	КОНЕЦ КАК МоскваПитер,
	|	АЗ.КодАптеки,
	|	АЗ.КодТовара,
	|	АЗ.Скорость КАК Скорость,
	|	АЗ.Скорость * 30 - (АЗ.Остаток + АЗ.ВПути) + АЗ.Скорость * (ВЫРАЗИТЬ((АЗ.КуМакс + АЗ.КуМин) / 2 КАК ЧИСЛО(10, 0))) КАК Потребность30,
	|	АЗ.Скорость * 30 * 2 - (АЗ.Остаток + АЗ.ВПути) + АЗ.Скорость * (ВЫРАЗИТЬ((АЗ.КуМакс + АЗ.КуМин) / 2 КАК ЧИСЛО(10, 0))) КАК Потребность60,
	|	АЗ.Скорость * 30 * 3 - (АЗ.Остаток + АЗ.ВПути) + АЗ.Скорость * (ВЫРАЗИТЬ((АЗ.КуМакс + АЗ.КуМин) / 2 КАК ЧИСЛО(10, 0))) КАК Потребность90,
	|	АЗ.КоличествоПродаж КАК КоличествоПродаж,
	|	АЗ.Остаток КАК Остаток,
	|	АЗ.ВПути КАК ВПути,
	|	ВЫБОР
	|		КОГДА АЗ.Остаток = 0
	|				И АЗ.ВПути = 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КолвоАптекОстатокРавноНулю,
	|	ВЫБОР
	|		КОГДА АЗ.Скорость * 30 - (АЗ.Остаток + АЗ.ВПути) + АЗ.Скорость * (ВЫРАЗИТЬ((АЗ.КуМакс + АЗ.КуМин) / 2 КАК ЧИСЛО(10, 0))) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КолвоАптекПрогнозБольшеНуля,
	|	АЗ.ЦенаЗакупСНДС КАК ЦенаЗакупСНДС,
	|	ВЫБОР
	|		КОГДА АЗ.КуМакс = 0
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоличествоАптекСМатрицей,
	|	1 КАК КоличествоАптекВВыборке
	|ПОМЕСТИТЬ Скорости
	|ИЗ
	|	РегистрСведений.АвтозаказОптСкоростиПродаж КАК АЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ КодыПитера КАК КодыПитера
	|		ПО (КодыПитера.Код = АЗ.КодАптеки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Скорости.МоскваПитер,
	|	Скорости.КодТовара,
	|	АП.Наименование КАК Наименование,
	|	СУММА(ВЫБОР
	|			КОГДА Скорости.Потребность30 < 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(Скорости.Потребность30 КАК ЧИСЛО(12, 0))
	|		КОНЕЦ) КАК Потребность30,
	|	СУММА(ВЫБОР
	|			КОГДА Скорости.Потребность60 < 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(Скорости.Потребность60 КАК ЧИСЛО(12, 0))
	|		КОНЕЦ) КАК Потребность60,
	|	СУММА(ВЫБОР
	|			КОГДА Скорости.Потребность90 < 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(Скорости.Потребность90 КАК ЧИСЛО(12, 0))
	|		КОНЕЦ) КАК Потребность90,
	|	СУММА(ВЫРАЗИТЬ(Скорости.Скорость * 30 КАК ЧИСЛО(15, 0))) КАК ПрогнозПродаж30,
	|	СУММА(ВЫРАЗИТЬ(Скорости.Скорость * 60 КАК ЧИСЛО(15, 0))) КАК ПрогнозПродаж60,
	|	СУММА(ВЫРАЗИТЬ(Скорости.Скорость * 90 КАК ЧИСЛО(15, 0))) КАК ПрогнозПродаж90,
	|	СУММА(Скорости.Скорость) КАК Скорость,
	|	СУММА(Скорости.ВПути) КАК ВПути,
	|	СУММА(Скорости.Остаток) КАК Остаток,
	|	СУММА(Скорости.КоличествоПродаж) КАК КоличествоПродаж,
	|	АП.Производитель.Наименование КАК Производитель,
	|	АП.ОбобщеннаяГруппа.Наименование КАК ОбобщеннаяГруппа,
	|	СРЕДНЕЕ(ВЫРАЗИТЬ(Скорости.ЦенаЗакупСНДС КАК ЧИСЛО(15, 2))) КАК ЦенаЗакупБезНДС,
	|	СУММА(Скорости.КолвоАптекОстатокРавноНулю) КАК КолвоАптекОстатокРавноНулю,
	|	СУММА(Скорости.КолвоАптекПрогнозБольшеНуля) КАК КолвоАптекПрогнозБольшеНуля,
	|	СУММА(Скорости.КоличествоАптекСМатрицей) КАК КоличествоАптекСМатрицей,
	|	СУММА(Скорости.КоличествоАптекВВыборке) КАК КоличествоАптекВВыборке
	|ИЗ
	|	Скорости КАК Скорости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	|		ПО Скорости.КодТовара = АП.Код
	|			И (НЕ АП.ОбобщеннаяГруппа В (&Группы))
	|			И (АП.УчаствуетВАП = ИСТИНА)
	//|			И (НЕ АП.Бренд = &Госпитальные)
	//|			И (НЕ ЕСТЬNULL(АП.Поставщик.Наименование, """") В (""Ааша"", ""АВАНГАРД"", ""АВСТРАЛИЙСКАЯ КОСМЕТИКА"", ""АГЕНТСТВО ВЕЧНЫХ ЦЕННОСТЕЙ"", ""Александр де Рус"", ""Алексеева Татьяна Станиславовна ИП"", ""АЛЬБИОН"", ""АЛЬТЕРНАТИВА-ВОЛГА ООО"", ""АЛЬЯЖ-РОСТ ООО"", ""АМАЛЬФИ"", ""АРОМАТИК"", ""Арт Де Смайл"", ""АРТ-СТИЛЬ"", ""АСЭНТУС"", ""АТЛАНТИС"", ""АТМОСФЕРА"", ""А-ФАРМ ООО"", ""БАБОР КОСМЕТИК"", ""БАЛТИКОМ"", ""БЕЛЬФОНТЕЙН"", ""Бельфонтейн Групп"", ""БЕРКАНА"", ""БИЛАЙФ"", ""Биомир"", ""БИОНАВТИКА"", ""БИОТЕКА"", ""БКТ"", ""БОГЕМА"", ""БОНА Компания"", ""БОН-ЭЛЬ ГРУПП"", ""БЬЮТИ БРЭНДС"", ""БЬЮТИ КОНЦЕПТ"", ""Бьюти-шоп"", ""БЬЯРКА"", ""ВАЛЛЕКС М"", ""ВЕРБЕНА-ЛЮКС"", ""ВЕРОНА"", ""ВИАСАЛОН"", ""Вивакс"", ""ВИЛАЙН"", ""ВИНОКОМА"", ""ВИРМА"", ""ВНИИМИ"", ""ВОСТОЧНАЯ МЕДИЦИНА"", ""ГАРАНТИРУЕМ"", ""ГЕОСОФТ"", ""ГЕОФАРМ"", ""Голд 2 О"", ""ГРАН ВИ"", ""ДЕНИС ИНТОРГ"", ""Дентал Бьюти Дистрибьюшен ООО"", ""ДИАДАР"", ""ДИАМАНТ КОСМЕТИК"", ""ДИЗЕЛЬ П+"", ""ДНК"", ""ЕДИНАЯ ЕВРОПА-ЭЛИТ"", ""ИНГЕОКОМ ДИСТРИБЬЮТОРС (РАНЕЕ ФАРМАРАШИА ДИСТРИБЬЮТОРС)"", ""ИНКОС +"", ""Инновационная Медицина"", ""ИНТЕР КОСМЕТИКС+"", ""ИНТЕРСИЛЬВЕРЛАЙН"", ""ИП Диханова Марина Леонидовна"", ""ИП Зубкова Людмила Николаевна"", ""Каприна"", ""КАТРЕН"", ""Кенга Косметикс"", ""Кид Трейд ООО"", ""КИТ МЕД ООО"", ""КРИСТАЛЕ ООО"", ""Ла вия дель кафе ООО"", ""ЛАЙМА-ЛЮКС РУС"", ""ЛАНИКС М"", ""Ланоперл-Рус ООО"", ""ЛИОНЭ БУТЭ"", ""ЛЮКС-КОСМЕТИК"", ""МАК-ДАК"", ""МБГ БЬЮТИ"", ""МЕДИНТОРГ ЗАО"", ""МЕДКОМ-МП"", ""Медтрейд ООО"", ""Медэкс"", ""Медэксфол лаб."", ""МИРАНИ"", ""Монте Косметикс"", ""Монтебьянка ООО"", ""НДК Косметикс ЗАО"", ""НеоЛайн Плюс"", ""НИАСТАР"", ""НИКАМЕД"", ""ОПТИМА БЬЮТИ"", ""ОПТИМУС НАТУРЭ"", ""ОРСЕТТО ГРУПП ООО"", ""ПАНИМПЭКС"", ""ПАРАКОСМЕТИКС"", ""ПАРК БЬЮТИ РУС"", ""Пегас ООО"", ""ПРЕМЬЕР БЬЮТИ лайн"", ""ПРЕМЬЕР БЭЙБИ"", ""ПРОТЕК"", ""Р.И.А. групп"", ""РАДОСТЬ ДЕТСТВА"", ""РАИДО"", ""РИКСОМ-М"", ""РОДНИК ООО"", ""РОКО"", ""РОСПАРФЮМ"", ""РОЯЛ КОСМЕТИКС"", ""РУПРАЙМ"", ""СЕВКО-СИТИ"", ""СЕЛЕКТИВ XXI"", ""СкайсКом ООО"", ""Сокол Компани"", ""СОЛИНГ КОМПАНИ ЗАО"", ""Солинг Компани ООО"", ""СТ Технолоджи"", ""Старлайн"", ""СТАТУС"", ""Статус косметик"", ""СТЕНДЕРС РАША"", ""СТРОЙДОРС"", ""СТЭЛМАС-Д ООО Москва"", ""ТЕРРА ДЕЛЬ СОЛЕ"", ""ТЕТРА"", ""Технопарк БиоНова"", ""ФАН ТРЕЙД ПЛЮС"", ""Фермент Столица ООО"", ""ФЛЭШ-ЛАЙТ"", ""Фрагранс"", ""Центр естественного здоровья"", ""Швебер Ко Лтд"", ""ЭККОФАРМА"", ""ЭКОДОМ"", ""ЭКСПЕРТ СОВЕТ"", ""ЭЛИТНОВА"", ""Эллия Грация"", ""ЭЛЬФАРМА"", ""ЭРМИТАЖ РАША""))
	|
	|СГРУППИРОВАТЬ ПО
	|	Скорости.МоскваПитер,
	|	Скорости.КодТовара,
	|	АП.Наименование,
	|	АП.Производитель.Наименование,
	|	АП.ОбобщеннаяГруппа.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Скорости.МоскваПитер,
	|	Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КодыПитера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Скорости";
	Запрос.УстановитьПараметр("Госпитальные",Справочники.Брэнды.НайтиПоКоду(65528));
	Запрос.УстановитьПараметр("Субъекты",Субъекты);
	Запрос.УстановитьПараметр("Группы",Группы);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Т = Новый ЗаписьТекста(ИмяТемпФайла,КодировкаТекста.ANSI);
	Т.ЗаписатьСтроку("Субъект;КодТовара;Наименование;Потребность30;Потребность60;Потребность90;ПрогнозПродаж30;ПрогнозПродаж60;ПрогнозПродаж90;Скорость;ВПути;Остаток;Продажи;Производитель;ОбобщеннаяГруппа;ЦенаЗакупБезНДС;КолвоАптекОстатокРавноНулю;КолвоАптекПрогнозБольшеНуля;КоличествоАптекСМатрицей;КоличествоАптекВВыборке");	
	Пока Выборка.Следующий() Цикл
		Т.ЗаписатьСтроку(""+Выборка.МоскваПитер
		+ ";"+Формат(Выборка.КодТовара,"ЧГ=0")
		+ ";"+СокрЛП(СтрЗаменить(Выборка.Наименование,";",""))
		+ ";"+ Формат(Выборка.Потребность30,"ЧДЦ=; ЧРД=.; ЧГ=0")
		+ ";"+ Формат(Выборка.Потребность60,"ЧДЦ=; ЧРД=.; ЧГ=0")
		+ ";"+ Формат(Выборка.Потребность90,"ЧДЦ=; ЧРД=.; ЧГ=0")
		+ ";"+ Формат(Выборка.ПрогнозПродаж30,"ЧДЦ=; ЧРД=.; ЧГ=0")
		+ ";"+ Формат(Выборка.ПрогнозПродаж60,"ЧДЦ=; ЧРД=.; ЧГ=0")
		+ ";"+ Формат(Выборка.ПрогнозПродаж90,"ЧДЦ=; ЧРД=.; ЧГ=0")
		+ ";"+ Формат(Выборка.Скорость,"ЧДЦ=3; ЧРД=.; ЧГ=0")
		+ ";"+ Формат(Выборка.ВПути,"ЧДЦ=; ЧРД=.; ЧГ=0")
		+ ";"+ Формат(Выборка.Остаток,"ЧДЦ=; ЧРД=.; ЧГ=0")
		+ ";"+ Формат(Выборка.КоличествоПродаж,"ЧДЦ=; ЧРД=.; ЧГ=0")
		+ ";"+ СокрЛП(СтрЗаменить(Выборка.Производитель,";",""))
		+ ";"+ СокрЛП(СтрЗаменить(Выборка.ОбобщеннаяГруппа,";",""))
		+ ";"+ Формат(Выборка.ЦенаЗакупБезНДС,"ЧДЦ=2; ЧРД=.; ЧГ=0")
		+ ";"+ Формат(Выборка.КолвоАптекОстатокРавноНулю,"ЧГ=0")
		+ ";"+ Формат(Выборка.КолвоАптекПрогнозБольшеНуля,"ЧГ=0")
		+ ";"+ Формат(Выборка.КоличествоАптекСМатрицей,"ЧГ=0")
		+ ";"+ Формат(Выборка.КоличествоАптекВВыборке,"ЧГ=0"));
	КонецЦикла;
	Т.Закрыть();
	Попытка
		ПереместитьФайл(ИмяТемпФайла,ФайлДанных);
		МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Потребность опт выгружена");
	Исключение
		МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Ошибка, ""+ОписаниеОшибки());
	КонецПопытки;
	
	////////////////////////////////////////////////////////////////////////////////////////////////////
	// ВЫГРУЗКА РЕАЛЬНОЙ ПОТРЕБНОСТИ АВТОЗАКАЗА
	ФайлДанных = КаталогФТП + "NeedsByAutoorder.CSV";
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МХ.Код
	|ПОМЕСТИТЬ КодыПитера
	|ИЗ
	|	Справочник.МестаХранения КАК МХ
	|ГДЕ
	|	МХ.СубъектРФ В(&Субъекты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КодыПитера.Код ЕСТЬ NULL 
	|			ТОГДА 77
	|		ИНАЧЕ 78
	|	КОНЕЦ КАК МоскваПитер,
	|	АЗ.КодТовара,
	|	КОЛИЧЕСТВО(АЗ.КодСклада) КАК Грузополучатели,
	|	СУММА(АЗ.Потребность) КАК Потребность
	|ПОМЕСТИТЬ ВТПотребность
	|ИЗ
	|	РегистрСведений.РасчетТоргов КАК АЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ КодыПитера КАК КодыПитера
	|		ПО (КодыПитера.Код = АЗ.КодСклада)
	|ГДЕ
	|	АЗ.ДатаРасчета >= &ДатаРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА КодыПитера.Код ЕСТЬ NULL 
	|			ТОГДА 77
	|		ИНАЧЕ 78
	|	КОНЕЦ,
	|	АЗ.КодТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПотребность.МоскваПитер,
	|	ВТПотребность.КодТовара,
	|	ВТПотребность.Грузополучатели,
	|	ВТПотребность.Потребность,
	|	АП.Наименование
	|ИЗ
	|	ВТПотребность КАК ВТПотребность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	|		ПО ВТПотребность.КодТовара = АП.Код
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТПотребность.МоскваПитер,
	|	АП.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КодыПитера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПотребность";

	Запрос.УстановитьПараметр("Субъекты",Субъекты);
	Запрос.УстановитьПараметр("ДатаРасчета",НачалоДня(ТекущаяДата()));


	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Т = Новый ЗаписьТекста(ИмяТемпФайла,КодировкаТекста.ANSI);
	Т.ЗаписатьСтроку("Субъект;КодТовара;Наименование;Потребность;Грузополучатели");	
	Пока Выборка.Следующий() Цикл
		Т.ЗаписатьСтроку(""+Выборка.МоскваПитер
		+ ";"+Формат(Выборка.КодТовара,"ЧГ=0")
		+ ";"+СокрЛП(СтрЗаменить(Выборка.Наименование,";",""))
		+ ";"+ Формат(Выборка.Потребность,"ЧДЦ=; ЧРД=.; ЧГ=0")
		+ ";"+ Формат(Выборка.Грузополучатели,"ЧДЦ=0; ЧРД=.; ЧГ=0") );
	КонецЦикла;
	Т.Закрыть();
	Попытка
		ПереместитьФайл(ИмяТемпФайла,ФайлДанных);
		МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Потребность автозаказа выгружена");
	Исключение
		МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Ошибка, ""+ОписаниеОшибки());
	КонецПопытки;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПрайсЛисты.Код КАК КодДДП,
	               |	ПрайсЛисты.Товар КАК НаименованиеДДП,
	               |	СУММА(ПрайсЛисты.Количество) КАК Количество,
	               |	Связки.ТоварФирмы.Код КАК КодАВЕ,
	               |	Связки.ТоварФирмы.Наименование КАК НаименованиеАВЕ,
	               |	Связки.ТоварФирмы.Производитель.Код КАК КодПроизводителяАВЕ,
	               |	Связки.ТоварФирмы.Производитель.Наименование КАК ИмяПроизводителяАВЕ,
	               |	ПрайсЛисты.ВхЦенаСНДС * ПрайсЛисты.Количество КАК Сумма,
	               |	ПрайсЛисты.Производитель
	               |ПОМЕСТИТЬ Прайс
	               |ИЗ
	               |	РегистрСведений.ПрайсЛисты КАК ПрайсЛисты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
	               |		ПО ПрайсЛисты.Код = Связки.КодТовараПоставщика
	               |			И (Связки.Поставщик = &Поставщик)
	               |ГДЕ
	               |	ПрайсЛисты.КодПрайсЛиста В
	               |			(ВЫБРАТЬ
	               |				КаталогПрайсЛистов.КодПрайсЛиста
	               |			ИЗ
	               |				РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
	               |			ГДЕ
	               |				КаталогПрайсЛистов.Настройка = &Настройка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПрайсЛисты.Код,
	               |	ПрайсЛисты.Товар,
	               |	Связки.ТоварФирмы.Код,
	               |	Связки.ТоварФирмы.Наименование,
	               |	Связки.ТоварФирмы.Производитель.Код,
	               |	Связки.ТоварФирмы.Производитель.Наименование,
	               |	ПрайсЛисты.ВхЦенаСНДС * ПрайсЛисты.Количество,
	               |	ПрайсЛисты.Производитель
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	КодАВЕ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	АЗ.КодТовара,
	               |	СУММА(АЗ.Скорость * 120 - (АЗ.Остаток + АЗ.ВПути) + АЗ.Скорость * (ВЫРАЗИТЬ((АЗ.КуМакс + АЗ.КуМин) / 2 КАК ЧИСЛО(10, 0)))) КАК Потребность30,
	               |	СУММА(АЗ.Скорость) КАК Скорость,
	               |	СУММА(АЗ.КоличествоПродаж) КАК КоличествоПродаж,
	               |	СУММА(АЗ.Остаток) КАК Остаток,
	               |	СУММА(ВЫБОР
	               |			КОГДА АЗ.Остаток + АЗ.ВПути - (ВЫРАЗИТЬ((АЗ.КуМакс + АЗ.КуМин) / 2 КАК ЧИСЛО(10, 0))) < 0
	               |				ТОГДА 0
	               |			ИНАЧЕ АЗ.Остаток + АЗ.ВПути - (ВЫРАЗИТЬ((АЗ.КуМакс + АЗ.КуМин) / 2 КАК ЧИСЛО(10, 0)))
	               |		КОНЕЦ) КАК ОстатокКорр,
	               |	СУММА(АЗ.ВПути) КАК ВПути
	               |ПОМЕСТИТЬ Скорости
	               |ИЗ
	               |	РегистрСведений.АвтозаказОптСкоростиПродаж КАК АЗ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	АЗ.КодТовара
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	АЗ.КодТовара
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ОстаткиОптовыхСкладов.КодТовараСклада,
	               |	ОстаткиОптовыхСкладов.Концерн
	               |ПОМЕСТИТЬ ВТКонцерны
	               |ИЗ
	               |	РегистрСведений.ОстаткиОптовыхСкладов КАК ОстаткиОптовыхСкладов
	               |ГДЕ
	               |	ОстаткиОптовыхСкладов.ОптовыйСклад = &ОптовыйСклад
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Прайс.КодДДП,
	               |	Прайс.НаименованиеДДП КАК НаименованиеДДП,
	               |	Прайс.Количество КАК ОстатокНаСкладе,
	               |	Прайс.КодАВЕ,
	               |	Прайс.НаименованиеАВЕ,
	               |	Прайс.Производитель,
	               |	Прайс.КодПроизводителяАВЕ,
	               |	Прайс.ИмяПроизводителяАВЕ,
	               |	ВЫРАЗИТЬ(ВЫБОР
	               |			КОГДА ЕСТЬNULL(Скорости.Скорость, 0) > 0
	               |				ТОГДА Прайс.Количество / Скорости.Скорость
	               |			ИНАЧЕ 99999
	               |		КОНЕЦ КАК ЧИСЛО(12, 0)) КАК КоличествоДнейОстатка,
	               |	ВЫРАЗИТЬ(ВЫБОР
	               |			КОГДА ЕСТЬNULL(Скорости.Скорость, 0) > 0
	               |				ТОГДА (Прайс.Количество + Скорости.ОстатокКорр) / Скорости.Скорость
	               |			ИНАЧЕ 99999
	               |		КОНЕЦ КАК ЧИСЛО(12, 0)) КАК КоличествоДнейОстаткаКорр,
	               |	Скорости.Скорость,
	               |	Скорости.КоличествоПродаж КАК КоличествоПродаж90,
	               |	Скорости.Остаток КАК ОстатокАптек,
	               |	Скорости.ОстатокКорр,
	               |	Прайс.Сумма,
	               |	ЕСТЬNULL(ВТКонцерны.Концерн, """") КАК Концерн
	               |ИЗ
	               |	Прайс КАК Прайс
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Скорости КАК Скорости
	               |		ПО Прайс.КодАВЕ = Скорости.КодТовара
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТКонцерны КАК ВТКонцерны
	               |		ПО Прайс.КодДДП = ВТКонцерны.КодТовараСклада
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НаименованиеДДП
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ Прайс
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ Скорости
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТКонцерны";
		Запрос.УстановитьПараметр("Поставщик",Справочники.Поставщики.НайтиПоКоду(582)); //Ориола
		Запрос.УстановитьПараметр("Настройка",Справочники.НастройкиОбмена.НайтиПоКоду(384)); //Джи ди пи
		Запрос.УстановитьПараметр("ОптовыйСклад",Параметры.ОптовыйСклад); 
		
		ТекстПисьма = "";
		ТекстПисьма = ТекстПисьма + "Описание полей вложения : 
		|КодДДП.............- код товара в программе Джи ди пи
		|НаименованиеДДП....- наименование товара в программе Джи ди пи
		|Остаток на складе..- остаток товара на складе Джи ди пи
		|КодАВЕ.............- код товара в программе A.v.e
		|НаименованиеАВЕ....- Наименование товара в программе A.v.e
		|КоличествоДнейОстатка - кол-во дней, по истечению которых остаток будет полностью выбран. Формула : КоличествоДнейОстатка = ОстатокНаСкладе/Скорость	
		|КоличествоДнейОстаткаКорр - скорректированное с учетом остатка аптек кол-во дней, по истечению которых остаток будет полностью выбран. Формула : КоличествоДнейОстаткаКорр = (ОстатокНаСкладе + ОстатокАптек + ОстатокВПути - Мин. запас)/Скорость	
		|Скорость...........- Скорость продаж товара по аптекам с учетом бездефектурных дней	
		|КоличествоПродаж90 - Количество проданного товара за 90 дней
		|ОстатокАптек.......- Текущий остаток товара в аптеках
		|ОстатокКорр........- Текущий скорректированный остаток товара в аптеках. ОстатокКорр = (ОстатокНаСкладе + ОстатокАптек + ОстатокВПути - Мин. запас)	
		|Сумма..............- Денежный остаток товара на складе во входящих ценах Джи ди пи";

		
		Таб = Новый ТабличныйДокумент;
		Мак = ПолучитьОбщийМакет("ОборачиваемостьСкладаОпт");
		
		ФайлДанных = КаталогФТП + "OborotGDP.xls";
		Рез = Запрос.Выполнить();
		Выборка = Рез.Выбрать();
		
		текОбласть = Мак.ПолучитьОбласть("Шапка");
		Таб.Вывести(текОбласть);
	
		н=0;
		Пока Выборка.Следующий() Цикл
			н=н+1;
			текОбласть = Мак.ПолучитьОбласть("Строка");
			текОбласть.Параметры.Заполнить(Выборка);
			текОбласть.Параметры.НомерСтроки = н;
			Таб.Вывести(текОбласть);
		КонецЦикла;
		
		Таб.Записать(ФайлДанных, ТипФайлаТабличногоДокумента.XLSX);
		Мак = Неопределено;
		
		
		МПочтец = Обработки.Почтарь;
		Почтец = МПочтец.Создать();
		Почтец.Рассылка.Очистить();
		Почтец.Автоотправка = Истина;
		
		ПочтаРассылкиОборачиваемости = СтрЗаменить(Параметры.ПочтаРассылкиОборачиваемости,";",Символы.ПС);
		Для н=1 по СтрЧислоСтрок(ПочтаРассылкиОборачиваемости) Цикл
			ТекПочта = СтрПолучитьСтроку(ПочтаРассылкиОборачиваемости,н);
			Если НЕ ПустаяСтрока(ТекПочта) Тогда
				Почтец.Рассылка.Добавить(ТекПочта);
			КонецЕсли;
		КонецЦикла;

		
		//Почтец.Рассылка.Добавить("fogels.h@366.ru");
		//Почтец.Рассылка.Добавить("vasilchenko.a.g@366.ru");

		Почтец.СписокВложений.Добавить(ФайлДанных);
		Почтец.Тема = "Оборачиваемость склада на " + ТекущаяДата();
		Почтец.ТекстПисьма = ТекстПисьма;
		
		Почтец.Функция_Послать();
		
		Почтец = Неопределено;

	
	
КонецПроцедуры
