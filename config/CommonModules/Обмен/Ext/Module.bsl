Функция СоздатьЗаписьВРеестре(Документ,ТипДокумента,Aid = "{0,0}")  Экспорт
	
	
	ДокВРеестре = Справочники.РеестрДокументов.НайтиПоРеквизиту("Объект",Документ);
	Если ДокВРеестре.Пустая() Тогда
		НовыйЭлемент = Справочники.РеестрДокументов.СоздатьЭлемент();
		НовыйЭлемент.Наименование = Aid;
		НовыйЭлемент.Объект = Документ;
		НовыйЭлемент.ТипДокумента = ТипДокумента;
		ЗаписьСоздана = Ложь;
		Для н=0 по 2  Цикл
			Попытка
				НовыйЭлемент.Записать();
				ЗаписьСоздана = Истина;
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(3);
			КонецПопытки;
		КонецЦикла;
		
		Если ЗаписьСоздана Тогда
			Возврат Новый Структура("ТипДокумента,НашАид,ВнешнийАид",ТипДокумента,НовыйЭлемент.Код,Aid); 
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		
	Иначе
		Если (СокрЛП(ДокВРеестре.Наименование) <> СокрЛП(Aid)) и (Aid <> "{0,0}") Тогда
			Объект = ДокВРеестре.ПолучитьОбъект();
			Объект.Наименование = Aid;
			ОбъектЗаписан = Ложь;
			Для н=0 по 5 Цикл
				Попытка
					Объект.Записать();
					ОбъектЗаписан = Истина;
					Прервать;
				Исключение
					ОбщегоНазначения.Задержка(3);
				КонецПопытки;
			КонецЦикла;
			
			Если ОбъектЗаписан = Ложь Тогда
				Возврат Неопределено;
			Иначе
				Возврат Новый Структура("ТипДокумента,НашАид,ВнешнийАид",ДокВРеестре.ТипДокумента,ДокВРеестре.Код,Aid);		
			КонецЕсли;
		Иначе
			Возврат Новый Структура("ТипДокумента,НашАид,ВнешнийАид",ДокВРеестре.ТипДокумента,ДокВРеестре.Код,ДокВРеестре.Наименование);	
		КонецЕсли;
		
		
		
	КонецЕсли;
	
		

		
КонецФункции

Процедура ЗафиксироватьАктивностьРобота(Параметры) Экспорт
	
	Набор = РегистрыСведений.АктивностьРаботыРоботов.СоздатьНаборЗаписей();
	Набор.Отбор.КодРобота.Установить(Параметры.КодРобота);
		
	Набор.Прочитать();
	Если Набор.Количество() = 0 Тогда
		ЗаполнитьЗначенияСвойств(Набор.Добавить(),Параметры);
	Иначе
		Запись = Набор[0];
		Запись.ДатаПоследнейАктивности = Параметры.ДатаПоследнейАктивности;
		Запись.Примечание = Параметры.Примечание;
		Запись.СМСОтправлено = Параметры.СМСОтправлено;
	КонецЕсли;
		
	Набор.Записать();
	
КонецПроцедуры


Функция КорректировкаСпецСимволов(Значение)
	
	//Возврат Значение;
	
   Результат = СтрЗаменить(Значение, "&", "&amp;");
   Результат = СтрЗаменить(Результат, "<", "&lt;");
   Результат = СтрЗаменить(Результат, ">", "&gt;");
   Результат = СтрЗаменить(Результат, """", "&quot;");
   Результат = СтрЗаменить(Результат, "'", "&apos;");
   Результат = СтрЗаменить(Результат, "/", "&#x2F;");	
   Результат = СтрЗаменить(Результат, Символы.ПС, "&#xD;");
   Возврат Результат;
   
КонецФункции

Процедура ЗаписатьЭлементXML(ЗаписьXML, Имя, Значение) 
	
	//ЗаписьXML.ЗаписатьНачалоЭлемента(Имя);
	//ЗаписьXML.ЗаписатьТекст(Значение);
	//ЗаписьXML.ЗаписатьКонецЭлемента();
	Если Значение = "" Тогда
		ЗаписьXML.ДобавитьСтроку("<" + Имя + "/>");
	Иначе
		ЗаписьXML.ДобавитьСтроку("<" + Имя + ">" + Значение + "</" + Имя + ">");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, Имя, Значение) 
	
	//ЗаписьXML.ЗаписатьНачалоЭлемента(Имя);
	//ЗаписьXML.ЗаписатьТекст(Значение);
	//ЗаписьXML.ЗаписатьКонецЭлемента();
	Если Значение = "" Тогда
		ЗаписьXML.ЗаписатьСтроку("<" + Имя + "/>");
	Иначе
		ЗаписьXML.ЗаписатьСтроку("<" + Имя + ">" + Значение + "</" + Имя + ">");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьНачалоЭлемента(ЗаписьXML,Имя)
	
	ЗаписьXML.ДобавитьСтроку("<" + Имя + ">");
	
КонецПроцедуры

Процедура ЗаписатьКонецЭлемента(ЗаписьXML,Имя)
	
	ЗаписьXML.ДобавитьСтроку("</" + Имя + ">");
	
КонецПроцедуры

Процедура ЗаписатьУпаковкуВРегистрОбмена(Аптека = Неопределено,ТипУпаковки,ТекстУпаковки , Номер = "") Экспорт
	
	Если Аптека = Неопределено Тогда
		КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисШВ");
		Если КодСчетчика = -1 Тогда
			КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисШВ");
			Если КодСчетчика = -1 Тогда
				Возврат;	
			КонецЕсли;
		КонецЕсли;
		
		МЗ = РегистрыСведений.ОфисАптекаШироковещание.СоздатьМенеджерЗаписи();
		МЗ.Код = КодСчетчика;
		МЗ.ТипУпаковки = ТипУпаковки;
		МЗ.Приоритет = 1;
		МЗ.ВерсияФормата = 1;
		МЗ.ИмяФайла = ТипУпаковки + "_" + ?(Номер = "","", Номер + "_") + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
		МЗ.ИдентификаторКодировки = 1;
		МЗ.ХМЛСтрока = ТекстУпаковки;
		МЗ.Записать();
		
	Иначе
		
		КодСклада = Аптека.Код;
		КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
		Если КодСчетчика = -1 Тогда
			КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
			Если КодСчетчика = -1 Тогда
				Возврат ;	
			КонецЕсли;
		КонецЕсли;
		
		МЗ = РегистрыСведений.ОфисАптекаЦелевые.СоздатьМенеджерЗаписи();
		МЗ.Код = КодСчетчика;
		МЗ.КодАптеки = Аптека.Код;
		МЗ.ТипУпаковки = ТипУпаковки;
		МЗ.Приоритет = 1;
		МЗ.ВерсияФормата = 1;
		МЗ.ИмяФайла = ТипУпаковки + "_" + СокрЛП(Формат(КодСклада,"ЧГ=0"))  +  "_"  + ?(Номер = "","", Номер + "_") + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
		МЗ.ИдентификаторКодировки = 1;
		МЗ.ХМЛСтрока = ТекстУпаковки;
		МЗ.Записать();			
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ЗаписатьБлокУсловийПрименений(ЗаписьXML,ТЗУсловий,Выборка)
	//
	//               |	Условия.Ссылка.Код КАК КодКарты,
	//               |	Условия.НомерСтроки КАК НомерСтроки,
	//               |	Условия.ОператорОбъединения1,
	//               |	Условия.ОткрывающаяСкобка,
	//               |	Условия.ЛеваяЧасть,
	//               |	Условия.Оператор,
	//               |	Условия.ПраваяЧасть,
	//               |	Условия.ПраваяЧастьХЗ,
	//               |	Условия.ЗакрывающаяСкобка,
	//               |	Условия.ОператорОбъединения2,
	//               |	Условия.ИспользоватьДляПодсказки
	
  //"id_dc_type" INTEGER NOT NULL, 
  //"idx" INTEGER NOT NULL, 
  //"lunion" VARCHAR(5) NOT NULL, 
  //"lbracket" VARCHAR(1) NOT NULL, 
  //"loperand" VARCHAR NOT NULL, 
  //"coperator" VARCHAR(20) NOT NULL, 
  //"roperand" TEXT NOT NULL, 
  //"rbracket" VARCHAR(1) NOT NULL, 
  //"runion" VARCHAR(5) NOT NULL,	
  
//<idx>1</idx>
//<lunion/>
//<lbracket/>
//<loperand>goods.descr</loperand>
//<coperator>LIKE</coperator>
//<roperand>ЛИПРИМАР ТАБЛ.П.О. 20МГ N100</roperand>
//<rbracket/>
//<runion/>  
	
	ЗаписьXML.ДобавитьСтроку("<dc_cancel_condition>");
	
	Пока Выборка.Следующий() Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("КодКарты",Выборка.Код);
		СтрокиУсловий = ТЗУсловий.НайтиСтроки(Отбор);
		Для каждого стр из СтрокиУсловий Цикл
			//================== вычисляем значение для поля roperand ===========================
			ХЗ = стр.ПраваяЧастьХЗ.Получить();
			//Сообщить(ТипЗнч(ХЗ));
			Если ТипЗнч(ХЗ) = Тип("Строка") Тогда
				roperand = стр.ПраваяЧасть;	
			ИначеЕсли ТипЗнч(ХЗ) = Тип("Число") Тогда
				roperand = Формат(стр.ПраваяЧасть,"ЧГ=0; ЧН=0");
			ИначеЕсли ТипЗнч(ХЗ) = Тип("Булево") Тогда
				roperand = Формат(стр.ПраваяЧасть,"БЛ=false; БИ=true");					
			ИначеЕсли ТипЗнч(ХЗ) = Тип("Массив") Тогда	
				
				//Сообщить(""+стр.ЛеваяЧасть.Тип);
				Если стр.ЛеваяЧасть.Тип = "Строка" Тогда
					roperand = "";
					Для каждого стрСЗ из ХЗ Цикл
					     roperand = roperand + " '" + СокрЛП(стрСЗ) + "' ," ;
					 КонецЦикла;
					 roperand = Лев(roperand,СтрДлина(roperand)-1);
				ИначеЕсли стр.ЛеваяЧасть.Тип = "Число" Тогда
					roperand = "";
					Для каждого стрСЗ из ХЗ Цикл
					     roperand = roperand + " " + Формат(стрСЗ,"ЧГ=0; ЧН=0") + "," ;
					 КонецЦикла;
					 roperand = Лев(roperand,СтрДлина(roperand)-1);
				ИначеЕсли Найти(стр.ЛеваяЧасть.Тип,"Справочник") > 0 Тогда
					roperand = "";
					Для каждого стрСЗ из ХЗ Цикл
					     roperand = roperand + " " + Формат(стрСЗ.Код,"ЧГ=0; ЧН=0") + "," ;
					КонецЦикла;	
					roperand = Лев(roperand,СтрДлина(roperand)-1); 
				КонецЕсли;
			ИначеЕсли Найти(стр.ЛеваяЧасть.Тип,"Справочник") > 0 Тогда
				 roperand =  Формат(ХЗ.Код,"ЧГ=0; ЧН=0");
			КонецЕсли;
			
			//================== вычисляем значение для поля loperand ===========================
			loperand = стр.ЛеваяЧасть.ИмяРеквизитаВБазеАптечногоМодуля;
			
			//================== вычисляем значение для поля coperator ===========================
			coperator = Строка(стр.Оператор);
			//Перечисления.ОператорыУсловийПримененияРА.Индекс(Перечисления.ОператорыУсловийПримененияРА.В);
			//           Метаданные.Перечисления[ИмяМДПер].ЗначенияПеречисления.Получить(ИндПер).Имя
			//           Перечисления.ОператорыУсловийПримененияРА.В.Метаданные().ЗначенияПеречисления.Получить(Перечисления.ОператорыУсловийПримененияРА.Индекс(Перечисления.ОператорыУсловийПримененияРА.В)).Имя
			
			ЗаписьXML.ДобавитьСтроку("<row>");
				ЗаписатьЭлементXML(ЗаписьXML, "id_dc_type",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
				ЗаписатьЭлементXML(ЗаписьXML, "idx", 		Формат(стр.НомерСтроки,"ЧГ=0; ЧН=0")); 
				ЗаписьXML.ДобавитьСтроку("<lunion/>");
				ЗаписьXML.ДобавитьСтроку("<lbracket/>");
				ЗаписатьЭлементXML(ЗаписьXML, "loperand",	КорректировкаСпецСимволов(СокрЛП(loperand)));
				ЗаписатьЭлементXML(ЗаписьXML, "coperator",	coperator );				
				ЗаписатьЭлементXML(ЗаписьXML, "roperand",	КорректировкаСпецСимволов(СокрЛП(roperand)));
				ЗаписьXML.ДобавитьСтроку("<rbracket/>");				
				ЗаписьXML.ДобавитьСтроку("<runion/>");
				ЗаписатьЭлементXML(ЗаписьXML, "show_hint",	"0");
			ЗаписьXML.ДобавитьСтроку("</row>");
		КонецЦикла;
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</dc_cancel_condition>"); 
	
	
КонецПроцедуры

Процедура ЗаписатьБлокУсловийПримененийДляАкций(ЗаписьXML,ТЗУсловий,Выборка)
	//
	//              
	//               |	Условия.НомерСтроки КАК НомерСтроки,
	//               |	Условия.ОператорОбъединения1,
	//               |	Условия.ОткрывающаяСкобка,
	//               |	Условия.ЛеваяЧасть,
	//               |	Условия.Оператор,
	//               |	Условия.ПраваяЧасть,
	//               |	Условия.ПраваяЧастьХЗ,
	//               |	Условия.ЗакрывающаяСкобка,
	//               |	Условия.ОператорОбъединения2,
	//               |	Условия.ИспользоватьДляПодсказки
	
  //"id_dc_type" INTEGER NOT NULL, 
  //"idx" INTEGER NOT NULL, 
  //"lunion" VARCHAR(5) NOT NULL, 
  //"lbracket" VARCHAR(1) NOT NULL, 
  //"loperand" VARCHAR NOT NULL, 
  //"coperator" VARCHAR(20) NOT NULL, 
  //"roperand" TEXT NOT NULL, 
  //"rbracket" VARCHAR(1) NOT NULL, 
  //"runion" VARCHAR(5) NOT NULL,	
  
//<idx>1</idx>
//<lunion/>
//<lbracket/>
//<loperand>goods.descr</loperand>
//<coperator>LIKE</coperator>
//<roperand>ЛИПРИМАР ТАБЛ.П.О. 20МГ N100</roperand>
//<rbracket/>
//<runion/>  

	 
	ЗаписьXML.ЗаписатьСтроку("<condition>");
	
	//Пока Выборка.Следующий() Цикл
		
		//Отбор = Новый Структура;
		//Отбор.Вставить("КодКарты",Выборка.Код);
		//СтрокиУсловий = ТЗУсловий.НайтиСтроки(Отбор);
		Для каждого стр из ТЗУсловий Цикл
			//================== вычисляем значение для поля roperand ===========================
			ХЗ = стр.ПраваяЧастьХЗ.Получить();
			//Сообщить(ТипЗнч(ХЗ));
			Если ТипЗнч(ХЗ) = Тип("Строка") Тогда
				roperand = стр.ПраваяЧасть;	
			ИначеЕсли ТипЗнч(ХЗ) = Тип("Число") Тогда
				roperand = Формат(стр.ПраваяЧасть,"ЧГ=0; ЧН=0");
			ИначеЕсли ТипЗнч(ХЗ) = Тип("Булево") Тогда
				roperand = Формат(стр.ПраваяЧасть,"БЛ=false; БИ=true");				
			ИначеЕсли ТипЗнч(ХЗ) = Тип("Массив") Тогда	
				
				//Сообщить(""+стр.ЛеваяЧасть.Тип);
				Если стр.ЛеваяЧасть.Тип = "Строка" Тогда
					roperand = "";
					Для каждого стрСЗ из ХЗ Цикл
					     roperand = roperand + " '" + СокрЛП(стрСЗ) + "' ," ;
					 КонецЦикла;
					 roperand = Лев(roperand,СтрДлина(roperand)-1);
				ИначеЕсли стр.ЛеваяЧасть.Тип = "Число" Тогда
					roperand = "";
					Для каждого стрСЗ из ХЗ Цикл
					     roperand = roperand + " " + Формат(стрСЗ,"ЧГ=0; ЧН=0") + "," ;
					 КонецЦикла;
					 roperand = Лев(roperand,СтрДлина(roperand)-1);
				ИначеЕсли Найти(стр.ЛеваяЧасть.Тип,"Справочник") > 0 Тогда
					roperand = "";
					Для каждого стрСЗ из ХЗ Цикл
					     roperand = roperand + " " + Формат(стрСЗ.Код,"ЧГ=0; ЧН=0") + "," ;
					КонецЦикла;	
					roperand = Лев(roperand,СтрДлина(roperand)-1); 
				КонецЕсли;
			ИначеЕсли Найти(стр.ЛеваяЧасть.Тип,"Справочник") > 0 Тогда
				 roperand =  Формат(ХЗ.Код,"ЧГ=0; ЧН=0");
			КонецЕсли;
			
			//================== вычисляем значение для поля loperand ===========================
			loperand = стр.ЛеваяЧасть.ИмяРеквизитаВБазеНовогоПО;
			
			
			Если Лев(roperand,1) = "%" Тогда
				roperand = Прав(roperand,СтрДлина(roperand)-1);
			КонецЕсли;
			
			Если Прав(roperand,1) = "%" Тогда
				roperand = Лев(roperand,СтрДлина(roperand)-1);
			КонецЕсли;		
			
			//================== вычисляем значение для поля coperator ===========================
			coperator = Строка(стр.Оператор);
			//Перечисления.ОператорыУсловийПримененияРА.Индекс(Перечисления.ОператорыУсловийПримененияРА.В);
			//           Метаданные.Перечисления[ИмяМДПер].ЗначенияПеречисления.Получить(ИндПер).Имя
			//           Перечисления.ОператорыУсловийПримененияРА.В.Метаданные().ЗначенияПеречисления.Получить(Перечисления.ОператорыУсловийПримененияРА.Индекс(Перечисления.ОператорыУсловийПримененияРА.В)).Имя
			Если ЗначениеЗаполнено(стр.ОператорОбъединения1) Тогда
				lunion = стр.ОператорОбъединения1.Метаданные().ЗначенияПеречисления[Перечисления.ОператорыОбъединенияРА.Индекс(стр.ОператорОбъединения1)].Имя;
			Иначе
				lunion = "";
			КонецЕсли;
			
			
			ЗаписьXML.ЗаписатьСтроку("<row>");
				
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "idx", 		Формат(стр.НомерСтроки,"ЧГ=0; ЧН=0")); 
				//ЗаписьXML.ЗаписатьСтроку("<lunion/>");
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "lunion",		КорректировкаСпецСимволов(СокрЛП(lunion)));
				ЗаписьXML.ЗаписатьСтроку("<lbracket/>");
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "loperand",	КорректировкаСпецСимволов(СокрЛП(loperand)));
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "coperator",	coperator );				
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "roperand",	КорректировкаСпецСимволов(СокрЛП(roperand)));
				ЗаписьXML.ЗаписатьСтроку("<rbracket/>");				
				ЗаписьXML.ЗаписатьСтроку("<runion/>");
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "show_hint",	"0");
			ЗаписьXML.ЗаписатьСтроку("</row>");
		КонецЦикла;
	//КонецЦикла;
	ЗаписьXML.ЗаписатьСтроку("</condition>"); 
	
	
КонецПроцедуры

Процедура ЗаписатьБлокИтоговПримененийДляАкций(ЗаписьXML,ТЗУсловий,Выборка)
	//
	//              
	//               |	Условия.НомерСтроки КАК НомерСтроки,
	//               |	Условия.ОператорОбъединения1,
	//               |	Условия.ОткрывающаяСкобка,
	//               |	Условия.ЛеваяЧасть,
	//               |	Условия.Оператор,
	//               |	Условия.ПраваяЧасть,
	//               |	Условия.ПраваяЧастьХЗ,
	//               |	Условия.ЗакрывающаяСкобка,
	//               |	Условия.ОператорОбъединения2,
	//               |	Условия.ИспользоватьДляПодсказки
	
  //"id_dc_type" INTEGER NOT NULL, 
  //"idx" INTEGER NOT NULL, 
  //"lunion" VARCHAR(5) NOT NULL, 
  //"lbracket" VARCHAR(1) NOT NULL, 
  //"loperand" VARCHAR NOT NULL, 
  //"coperator" VARCHAR(20) NOT NULL, 
  //"roperand" TEXT NOT NULL, 
  //"rbracket" VARCHAR(1) NOT NULL, 
  //"runion" VARCHAR(5) NOT NULL,	
  
//<idx>1</idx>
//<lunion/>
//<lbracket/>
//<loperand>goods.descr</loperand>
//<coperator>LIKE</coperator>
//<roperand>ЛИПРИМАР ТАБЛ.П.О. 20МГ N100</roperand>
//<rbracket/>
//<runion/>  
	
	ЗаписьXML.ЗаписатьСтроку("<condition_total>");
	
	//Пока Выборка.Следующий() Цикл
		
		//Отбор = Новый Структура;
		//Отбор.Вставить("КодКарты",Выборка.Код);
		//СтрокиУсловий = ТЗУсловий.НайтиСтроки(Отбор);
		Для каждого стр из ТЗУсловий Цикл
			//================== вычисляем значение для поля roperand ===========================
			ХЗ = стр.ПраваяЧастьХЗ.Получить();
			//Сообщить(ТипЗнч(ХЗ));
			Если ТипЗнч(ХЗ) = Тип("Строка") Тогда
				roperand = стр.ПраваяЧасть;	
			ИначеЕсли ТипЗнч(ХЗ) = Тип("Число") Тогда
				roperand = Формат(стр.ПраваяЧасть,"ЧГ=0; ЧН=0");
			ИначеЕсли ТипЗнч(ХЗ) = Тип("Массив") Тогда	
				
				//Сообщить(""+стр.ЛеваяЧасть.Тип);
				Если стр.ЛеваяЧасть.Тип = "Строка" Тогда
					roperand = "";
					Для каждого стрСЗ из ХЗ Цикл
					     roperand = roperand + " '" + СокрЛП(стрСЗ) + "' ," ;
					 КонецЦикла;
					 roperand = Лев(roperand,СтрДлина(roperand)-1);
				ИначеЕсли стр.ЛеваяЧасть.Тип = "Число" Тогда
					roperand = "";
					Для каждого стрСЗ из ХЗ Цикл
					     roperand = roperand + " " + Формат(стрСЗ,"ЧГ=0; ЧН=0") + "," ;
					 КонецЦикла;
					 roperand = Лев(roperand,СтрДлина(roperand)-1);
				ИначеЕсли Найти(стр.ЛеваяЧасть.Тип,"Справочник") > 0 Тогда
					roperand = "";
					Для каждого стрСЗ из ХЗ Цикл
					     roperand = roperand + " " + Формат(стрСЗ.Код,"ЧГ=0; ЧН=0") + "," ;
					КонецЦикла;	
					roperand = Лев(roperand,СтрДлина(roperand)-1); 
				КонецЕсли;
			ИначеЕсли Найти(стр.ЛеваяЧасть.Тип,"Справочник") > 0 Тогда
				 roperand =  Формат(ХЗ.Код,"ЧГ=0; ЧН=0");
			КонецЕсли;
			
			//================== вычисляем значение для поля loperand ===========================
			loperand = стр.ЛеваяЧасть.ИмяРеквизитаВБазеНовогоПО;
			
			//================== вычисляем значение для поля coperator ===========================
			coperator = Строка(стр.Оператор);
			aggfunc = Строка(стр.АгрегатнаяФункция);
			//Перечисления.ОператорыУсловийПримененияРА.Индекс(Перечисления.ОператорыУсловийПримененияРА.В);
			//           Метаданные.Перечисления[ИмяМДПер].ЗначенияПеречисления.Получить(ИндПер).Имя
			//           Перечисления.ОператорыУсловийПримененияРА.В.Метаданные().ЗначенияПеречисления.Получить(Перечисления.ОператорыУсловийПримененияРА.Индекс(Перечисления.ОператорыУсловийПримененияРА.В)).Имя
			
			ЗаписьXML.ЗаписатьСтроку("<row>");
								
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "idx", 		Формат(стр.НомерСтроки,"ЧГ=0; ЧН=0")); 
				ЗаписьXML.ЗаписатьСтроку("<lunion/>");
				ЗаписьXML.ЗаписатьСтроку("<lbracket/>");
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "aggfunc",	aggfunc );
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "lbracketagg",	"(" );
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "loperand",	КорректировкаСпецСимволов(СокрЛП(loperand)));
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "rbracketagg",	")" );
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "coperator",	coperator );				
				ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "roperand",	КорректировкаСпецСимволов(СокрЛП(roperand)));
				ЗаписьXML.ЗаписатьСтроку("<rbracket/>");				
				ЗаписьXML.ЗаписатьСтроку("<runion/>");
			ЗаписьXML.ЗаписатьСтроку("</row>");
		КонецЦикла;
	//КонецЦикла;
	ЗаписьXML.ЗаписатьСтроку("</condition_total>"); 
	
	
КонецПроцедуры

Процедура ВыгрузитьМестаХраненияВАптеке(Аптека = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МестаХраненияВАптеке.Код,
	               |	МестаХраненияВАптеке.ПометкаУдаления,
	               |	МестаХраненияВАптеке.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник.МестаХраненияВАптеке КАК МестаХраненияВАптеке
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Наименование";
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "STORING_PLACE"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<storing_place>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
				   ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
				   ЗаписатьЭлементXML(ЗаписьXML, "is_deleted", Число(Выборка.ПометкаУдаления)); 
				   ЗаписатьЭлементXML(ЗаписьXML, "descr",		КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</storing_place>"); //конец записи секции  "STORING_PLACE"
	ЗаписьXML.ДобавитьСтроку("</document>"); //конец записи секции  "STORING_PLACE"
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека,"STORING_PLACE", ТекстУпаковки);
	
	
КонецПроцедуры

Процедура ВыгрузитьБанки(Аптека = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
				   
	Запрос.Текст = "ВЫБРАТЬ
	               |	Банки.Банк.Код КАК КодБанка,
	               |	Банки.Банк.Наименование КАК Наименование,
	               |	Банки.Банк.ПометкаУдаления КАК ПометкаУдаления,
	               |	Банки.Банк.КоррСчет КАК КоррСчет,
	               |	СУММА(1) КАК Поле1
	               |ИЗ
	               |	Справочник.БанковскиеСчета КАК Банки
	               |ГДЕ
	               |	НЕ Банки.Банк ЕСТЬ NULL 
	               |	И ЕСТЬNULL(Банки.Банк.КоррСчет, """") <> """"
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Банки.Банк.КоррСчет,
	               |	Банки.Банк.Наименование,
	               |	Банки.Банк.Код,
	               |	Банки.Банк.ПометкаУдаления";
				   
				   
				   
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 
	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "BANK"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<bank>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Число(Выборка.КодБанка),"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "is_deleted", Число(Выборка.ПометкаУдаления)); 
			ЗаписатьЭлементXML(ЗаписьXML, "descr",		КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
			ЗаписатьЭлементXML(ЗаписьXML, "bic",		Лев(СокрЛП(Выборка.КодБанка),9));
			ЗаписатьЭлементXML(ЗаписьXML, "corr_acc",	Лев(СокрЛП(Выборка.КоррСчет),20));
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</bank>"); 
	ЗаписьXML.ДобавитьСтроку("</document>");
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека,"BANK", ТекстУпаковки);
	
КонецПроцедуры

Процедура ВыгрузитьБанковскиеСчета(Аптека = Неопределено) Экспорт
	
		Запрос = Новый Запрос;
				   
	    Запрос.Текст ="ВЫБРАТЬ
	                  |	Счета.Банк.Код КАК КодБанка,
	                  |	Счета.Владелец.Код КАК КодПоставщика,
	                  |	Счета.ПометкаУдаления КАК ПометкаУдаления,
	                  |	Счета.НомерСчета КАК НомерСчета,
	                  |	Счета.Код КАК КодСчета,
	                  |	Счета.Наименование КАК Наименование
	                  |ИЗ
	                  |	Справочник.БанковскиеСчета КАК Счета
	                  |ГДЕ
	                  |	НЕ Счета.Банк ЕСТЬ NULL 
	                  |	И ЕСТЬNULL(Счета.Банк.КоррСчет, """") <> """"";
				   
				   
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "BANK_ACCOUNT"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<bank_account>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Число(Выборка.КодСчета),"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "is_deleted", Число(Выборка.ПометкаУдаления)); 
			ЗаписатьЭлементXML(ЗаписьXML, "id_contragent",	Формат(Выборка.КодПоставщика,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "num",	Лев(СокрЛП(Выборка.НомерСчета),20));
			ЗаписатьЭлементXML(ЗаписьXML, "descr",	КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
			ЗаписатьЭлементXML(ЗаписьXML, "id_bank",	Лев(СокрЛП(Выборка.КодБанка),9));
			ЗаписатьЭлементXML(ЗаписьXML, "id_bank_corr",	"0");
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</bank_account>"); 
	ЗаписьXML.ДобавитьСтроку("</document>");
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека,"BANK_ACCOUNT", ТекстУпаковки);

	
КонецПроцедуры

Процедура ВыгрузитьКонтрагентов(Аптека = Неопределено) Экспорт
	
	
	Запрос = Новый Запрос;
				   
	Запрос.Текст = "ВЫБРАТЬ
	               |	Поставщики.ПометкаУдаления КАК ПометкаУдаления,
	               |	Поставщики.Код КАК Код,
	               |	Поставщики.ПолнНаименование КАК ПолнНаименование,
	               |	Поставщики.Наименование КАК Наименование,
	               |	Поставщики.ИНН КАК ИНН,
	               |	Поставщики.КПП КАК КПП,
	               |	Поставщики.ОГРН КАК ОГРН,
	               |	Поставщики.ОКПО КАК ОКПО,
	               |	Поставщики.Адрес КАК Адрес,
	               |	Поставщики.АдресГрузополучателя КАК АдресГрузополучателя,
	               |	ЕСТЬNULL(Поставщики.ОсновнойСчет.Код, ""0"") КАК КодСчета,
	               |	Поставщики.Мэйл КАК Мэйл,
	               |	Поставщики.СрокПодачиПретензий КАК СрокПодачиПретензий,
	               |	Поставщики.Внутренний КАК Внутренний,
	               |	Поставщики.Телефон КАК Телефон,
				   |	Поставщики.РазрешитьКоррПартийНаОстаткахВАптеках КАК РазрешитьКоррПартийНаОстаткахВАптеках
	               |ИЗ
	               |	Справочник.Поставщики КАК Поставщики
	               |ГДЕ
	               |	Поставщики.ЭтоГруппа = ЛОЖЬ
	               |	И НЕ(Поставщики.Наименование = """"
	               |				ИЛИ Поставщики.ИНН = """")
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Код";
				   
				   
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	
	ЗаписьXML = Новый ЗаписьТекста(ИмяФайла,"windows-1251");
	ЗаписьXML.ЗаписатьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ЗаписатьСтроку("<document>");

	
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "pack_type", "CONTRAGENT"); 
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ЗаписатьСтроку("<contragent>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ЗаписатьСтроку("<row>");
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "is_deleted", Число(Выборка.ПометкаУдаления)); 
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "descr",		КорректировкаСпецСимволов(ЛЕВ(СокрЛП(Выборка.ПолнНаименование),200)));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "sdescr",		КорректировкаСпецСимволов(ЛЕВ(СокрЛП(Выборка.Наименование),150)));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "inn",		Лев(СокрЛП(Выборка.ИНН),12));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "kpp",		Лев(СокрЛП(Выборка.КПП),9));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "ogrn",		Лев(СокрЛП(Выборка.ОГРН),13));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "okpo",		СокрЛП(Лев(Выборка.ОКПО,10)));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "addr_u",		КорректировкаСпецСимволов(ЛЕВ(СокрЛП(Выборка.Адрес),250)));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "addr_f",		КорректировкаСпецСимволов(ЛЕВ(СокрЛП(Выборка.АдресГрузополучателя),250)));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_bank_account",	Формат(Число(СокрЛП(Выборка.КодСчета)),"ЧГ=0; ЧН=0"));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "type_tax",		"1");
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "addr_f",		КорректировкаСпецСимволов(ЛЕВ(СокрЛП(Выборка.Мэйл),100)));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "director",		"");
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "bookkeeper",		"");
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "phone",		КорректировкаСпецСимволов(СокрЛП(Выборка.Телефон)));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "deadline_submission_claims",	Формат(Выборка.СрокПодачиПретензий,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "is_internal", Формат(Число(Выборка.Внутренний),"ЧН=0"));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "series_change", Число(Выборка.РазрешитьКоррПартийНаОстаткахВАптеках)); 
		ЗаписьXML.ЗаписатьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ЗаписатьСтроку("</contragent>"); //конец записи секции  "STORING_PLACE"
	ЗаписьXML.ЗаписатьСтроку("</document>"); //конец записи секции  "STORING_PLACE"
	
	ЗаписьXML.Закрыть();
	ЗаписьXML = Новый ЧтениеТекста(ИмяФайла,"windows-1251");
	ТекстУпаковки = ЗаписьXML.Прочитать();
	ЗаписьXML.Закрыть();
	ЗаписьXML = Неопределено;
	УдалитьФайлы(ИмяФайла);
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека,"CONTRAGENT", ТекстУпаковки);
	
КонецПроцедуры

Процедура ВыгрузитьТипыДисконтныхКарт(Аптека = Неопределено) Экспорт
	
	ТХТ="ВЫБРАТЬ
	    |	ТипыДисконтныхКарт.ПометкаУдаления КАК ПометкаУдаления,
	    |	ТипыДисконтныхКарт.Наименование КАК Наименование,
	    |	ТипыДисконтныхКарт.Префикс КАК Префикс,
	    |	ТипыДисконтныхКарт.НачНомер КАК НачНомер,
	    |	ТипыДисконтныхКарт.КонНомер КАК КонНомер,
	    |	ТипыДисконтныхКарт.ПроцентСкидки КАК ПроцентСкидки,
	    |	ВЫБОР
	    |		КОГДА ТипыДисконтныхКарт.ПрограммаЛояльности = ИСТИНА
	    |			ТОГДА 1
	    |		ИНАЧЕ 0
	    |	КОНЕЦ КАК ТипКарты,
	    |	ВЫРАЗИТЬ(ТипыДисконтныхКарт.Контрагент КАК Справочник.Поставщики).Код КАК КодКонтрагента,
	    |	ТипыДисконтныхКарт.Код КАК Код,
	    |	ТипыДисконтныхКарт.ДлинаКарты КАК ДлинаКарты,
	    |	ТипыДисконтныхКарт.ТекстВЧек КАК ТекстВЧек,
	    |	ТипыДисконтныхКарт.ПорогСрабатыванияПрограммыЛояльности КАК T_LOYALTY,
	    |	ТипыДисконтныхКарт.СпрашиватьКарту КАК СпрашиватьКарту,
	    |	ТипыДисконтныхКарт.НомерГруппыПрограммЛояльности КАК НомерГруппыПрограммЛояльности,
	    |	ТипыДисконтныхКарт.ОплатаБаллами КАК ОплатаБаллами,
	    |	ТипыДисконтныхКарт.СтоимостьБалла КАК POINT_COST,
	    |	ТипыДисконтныхКарт.ТекстПриОплатеБаллами КАК ТекстПриОплатеБаллами,
	    |	ЕСТЬNULL(ТипыДисконтныхКарт.ОбластьДействия.Порядок, 0) КАК ОбластьДействияПорядок,
	    |	ТипыДисконтныхКарт.НеУчаствуетВРасчетеСРН КАК НеУчаствуетВРасчетеСРН,
	    |	ЕСТЬNULL(ТипыДисконтныхКарт.КатегорияТипаКарты.Порядок,0) КАК КатегорияТипаКартыПорядок,
	    |	ЕСТЬNULL(ТипыДисконтныхКарт.ТипПроцессинга.Порядок,0) КАК ТипПроцессингаПорядок
	    |ИЗ
	    |	Справочник.ТипыДисконтныхКарт КАК ТипыДисконтныхКарт
	    |ГДЕ
	    |	НЕ ТипыДисконтныхКарт.ОбластьДействия = ЗНАЧЕНИЕ(Перечисление.ОбластиДействия.ПустаяСсылка)";
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	ТХТ="ВЫБРАТЬ
	    |	ТипыДисконтныхКартСписокАптек.Ссылка.Код КАК КодКарты,
	    |	ТипыДисконтныхКартСписокАптек.Аптека.Код КАК КодАптеки
	    |ИЗ
	    |	Справочник.ТипыДисконтныхКарт.СписокАптек КАК ТипыДисконтныхКартСписокАптек
	    |ГДЕ
	    |	НЕ ТипыДисконтныхКартСписокАптек.Ссылка.ОбластьДействия = ЗНАЧЕНИЕ(Перечисление.ОбластиДействия.ПустаяСсылка)
	    |	И НЕ ТипыДисконтныхКартСписокАптек.Ссылка.ОбластьДействия = ЗНАЧЕНИЕ(Перечисление.ОбластиДействия.ВсеАптеки)";
	
	Запрос.Текст=ТХТ;
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	ВыборкаАптек = Рез.Выбрать();
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Условия.Ссылка.Код КАК КодКарты,
	               |	Условия.НомерСтроки КАК НомерСтроки,
	               |	Условия.ОператорОбъединения1,
	               |	Условия.ОткрывающаяСкобка,
	               |	Условия.ЛеваяЧасть,
	               |	Условия.Оператор,
	               |	Условия.ПраваяЧасть,
	               |	Условия.ПраваяЧастьХЗ,
	               |	Условия.ЗакрывающаяСкобка,
	               |	Условия.ОператорОбъединения2,
	               |	Условия.ИспользоватьДляПодсказки
	               |ИЗ
	               |	Справочник.ТипыДисконтныхКарт.УсловияПримененияПострочно КАК Условия
	               |ГДЕ
	               |	НЕ Условия.Ссылка.ОбластьДействия = ЗНАЧЕНИЕ(Перечисление.ОбластиДействия.ПустаяСсылка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КодКарты,
	               |	НомерСтроки";
				   
	ТЗУсловий = Запрос.Выполнить().Выгрузить();	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "DC_TYPE"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<dc_type>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "is_deleted", Число(Выборка.ПометкаУдаления)); 
			ЗаписатьЭлементXML(ЗаписьXML, "descr",		КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
			ЗаписатьЭлементXML(ЗаписьXML, "subtype",	Формат(Выборка.ТипКарты,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "prefix",		СокрЛП(Выборка.Префикс));
			ЗаписатьЭлементXML(ЗаписьXML, "n_start",	Формат(Выборка.НачНомер,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "n_end",		Формат(Выборка.КонНомер,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "code_length",Формат(Выборка.ДлинаКарты,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "p_discount",Формат(Выборка.ПроцентСкидки,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "is_handsinput","0" );				
			ЗаписатьЭлементXML(ЗаписьXML, "p_loyalty","0" );				
			ЗаписатьЭлементXML(ЗаписьXML, "id_contragent",	Формат(Выборка.КодКонтрагента,"ЧГ=0; ЧН=0") );			
			ЗаписатьЭлементXML(ЗаписьXML, "scope_dep",	Формат(Выборка.ОбластьДействияПорядок,"ЧГ=0; ЧН=0") );	
			ЗаписатьЭлементXML(ЗаписьXML, "reader_type","0" );				
			ЗаписатьЭлементXML(ЗаписьXML, "banner",		КорректировкаСпецСимволов(СокрЛП(Выборка.ТекстВЧек)));
			ЗаписатьЭлементXML(ЗаписьXML, "ask_loyalty", Формат(Число(Выборка.СпрашиватьКарту),"ЧН=0")); 
			ЗаписатьЭлементXML(ЗаписьXML, "id_group", Формат(Выборка.НомерГруппыПрограммЛояльности,"ЧГ=0; ЧН=0")); 
			ЗаписатьЭлементXML(ЗаписьXML, "pss_payment", Формат(Число(Выборка.ОплатаБаллами),"ЧН=0")); 
			ЗаписатьЭлементXML(ЗаписьXML, "pss_banner",		КорректировкаСпецСимволов(СокрЛП(Выборка.ТекстПриОплатеБаллами)));
			ЗаписатьЭлементXML(ЗаписьXML, "asm_exclude", Формат(Число(Выборка.НеУчаствуетВРасчетеСРН),"ЧН=0")); 
			ЗаписатьЭлементXML(ЗаписьXML, "category",	Формат(Выборка.КатегорияТипаКартыПорядок,"ЧГ=0; ЧН=0") );	
			ЗаписатьЭлементXML(ЗаписьXML, "processing_type",	Формат(Выборка.ТипПроцессингаПорядок,"ЧГ=0; ЧН=0") );	
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</dc_type>"); //конец записи секции  "STORING_PLACE"
	
	
	
	ЗаписьXML.ДобавитьСтроку("<dc_type_dep>");
	
	Пока ВыборкаАптек.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");	
		    ЗаписатьЭлементXML(ЗаписьXML, "id_dc_type",	Формат(ВыборкаАптек.КодКарты,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "id_dep",	Формат(ВыборкаАптек.КодАптеки,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</dc_type_dep>"); //конец записи секции  "STORING_PLACE"
		
	Если ТЗУсловий.Количество() > 0 Тогда
		Выборка.Сбросить();
		ЗаписатьБлокУсловийПрименений(ЗаписьXML,ТЗУсловий,Выборка);
	КонецЕсли;
	
	ЗаписатьБлокСвязокКарт(ЗаписьXML);
	
	ЗаписьXML.ДобавитьСтроку("</document>"); //конец записи секции  "STORING_PLACE"

	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека,"DC_TYPE", ТекстУпаковки);

КонецПроцедуры

Процедура ЗаписатьБлокСвязокКарт(ЗаписьXML) 
	

	
	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                 |	СвязкиТиповДисконтныхКарт.РодительскийТип.Код КАК РодительскийКод,
	                 |	СвязкиТиповДисконтныхКарт.ДочернийТип.Код КАК ДочернийКод
	                 |ИЗ
	                 |	РегистрСведений.СвязкиТиповДисконтныхКарт КАК СвязкиТиповДисконтныхКарт
	                 |ГДЕ
	                 |	НЕ(СвязкиТиповДисконтныхКарт.ДочернийТип.Код ЕСТЬ NULL
	                 |				ИЛИ СвязкиТиповДисконтныхКарт.РодительскийТип.Код ЕСТЬ NULL)";
			
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML.ДобавитьСтроку("<dc_type_mapping>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_parent",	Формат(Выборка.РодительскийКод,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "id_child",	Формат(Выборка.ДочернийКод,"ЧГ=0; ЧН=0") );		
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</dc_type_mapping>"); 
	
	
КонецПроцедуры

Процедура ВыгрузитьДокументМотивации(Аптека = Неопределено, Выборка)
	
	
	Док = Выборка.Док;
	
	Если Док.Товар.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ДобавитьСтроку("<document>"); 
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "PRIORITY"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<hdr>");
		ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Выборка.Номер,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXML(ЗаписьXML, "start_dt",	Формат(Выборка.НачалоПериода,"ДФ=dd.MM.yyyy") );				
		ЗаписатьЭлементXML(ЗаписьXML, "end_dt",		Формат(Выборка.КонецПериода,"ДФ=dd.MM.yyyy") );	
		ЗаписатьЭлементXML(ЗаписьXML, "exceptional",	Формат(Число(Выборка.Исключительный),"ЧН=0; ЧГ=0") );
	ЗаписьXML.ДобавитьСтроку("</hdr>");
	ЗаписьXML.ДобавитьСтроку("<str>");
	Для каждого стр из Док.Товар Цикл
		Если стр.Отменена Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(стр.КодТовара,"ЧГ=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "amount",		Формат(стр.КоличествоБаллов,"ЧН=0; ЧГ=0") );
			ЗаписатьЭлементXML(ЗаписьXML, "positioning",Формат(стр.Позиционирование,"ЧН=0; ЧГ=0") );
		ЗаписьXML.ДобавитьСтроку("</row>");
		
		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</str>");
	
	
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	Если Выборка.ДействиеВоВсехАптеках Тогда
		
		ЗаписатьУпаковкуВРегистрОбмена(Аптека, "PRIORITY" , ТекстУпаковки , Формат(Выборка.Номер,"ЧГ=0"));
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ВыгрузитьДокументыМотивации(Аптека = Неопределено, НомерДок=0)  Экспорт
	
	
	 Запрос = Новый Запрос;
	 Если НомерДок = 0 Тогда
		 Запрос.Текст = "ВЫБРАТЬ
		                |	Мотивация.Ссылка КАК Док,
		                |	Мотивация.Номер КАК Номер,
		                |	Мотивация.ДействиеВоВсехАптеках КАК ДействиеВоВсехАптеках,
		                |	Мотивация.НачалоПериода КАК НачалоПериода,
		                |	Мотивация.КонецПериода КАК КонецПериода,
		                |	Мотивация.Исключительный КАК Исключительный
		                |ИЗ
		                |	Документ.Мотивация КАК Мотивация
		                |ГДЕ
		                |	Мотивация.КонецПериода >= &ТекДата
		                |	И Мотивация.Проведен = ИСТИНА
		                |	И Мотивация.Выгружен = ИСТИНА";
	 Иначе
		 Запрос.Текст = "ВЫБРАТЬ
		                |	Мотивация.Ссылка КАК Док,
		                |	Мотивация.Номер КАК Номер,
		                |	Мотивация.ДействиеВоВсехАптеках КАК ДействиеВоВсехАптеках,
		                |	Мотивация.НачалоПериода КАК НачалоПериода,
		                |	Мотивация.КонецПериода КАК КонецПериода,
		                |	Мотивация.Исключительный КАК Исключительный
		                |ИЗ
		                |	Документ.Мотивация КАК Мотивация
		                |ГДЕ
		                |	Мотивация.Номер = &НомерДок
		                |	И Мотивация.Проведен = ИСТИНА
		                |	И Мотивация.Выгружен = ИСТИНА";
		 
	 КонецЕсли;
					
	Запрос.УстановитьПараметр("НомерДок",НомерДок);				
	Запрос.УстановитьПараметр("ТекДата",НачалоДня(ТекущаяДата()));
	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		 ВыгрузитьДокументМотивации(Аптека, Выборка);
	КонецЦикла;
	
	
	
	
КонецПроцедуры

Процедура ВыгрузитьСимптомыИТовар(Аптека = Неопределено) Экспорт
	
//<?xml version="1.0" encoding="WINDOWS-1251"?>
//<document>
//<goods_symptom>
//<row>
//<is_deleted></is_deleted>
//<id_goods></id_goods>
//<id_symptom></id_symptom>
//<descr></descr>
//<grade></grade>
//</row>
//</goods_symptom>
//</document>	
	
	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                 |	СимптомыИТовар.Симптом.Код КАК КодСимптома,
	                 |	СимптомыИТовар.Товар.Код КАК КодТовара,
	                 |	СимптомыИТовар.ПометкаУдаления
	                 |ИЗ
	                 |	Справочник.СимптомыИТовар КАК СимптомыИТовар
	                 |ГДЕ
	                 |	СимптомыИТовар.Симптом.УчаствуетВЗаменах = ИСТИНА";
			
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "GOODS_SYMPTOM"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<goods_symptom>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "is_deleted", Формат(Число(Выборка.ПометкаУдаления),"ЧН=0")); 
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(Выборка.КодТовара,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "id_symptom",	Формат(Выборка.КодСимптома,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "descr",		"");
			ЗаписатьЭлементXML(ЗаписьXML, "grade",		"");
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</goods_symptom>"); //конец записи секции  "STORING_PLACE"
	ЗаписьXML.ДобавитьСтроку("</document>"); //конец записи секции  "STORING_PLACE"
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "GOODS_SYMPTOM" , ТекстУпаковки );

	
КонецПроцедуры

Процедура ВыгрузитьДопродажи(Аптека = Неопределено) Экспорт
	
//<?xml version="1.0" encoding="WINDOWS-1251"?>
//<document>
//<goods_symptom>
//<row>
//<is_deleted></is_deleted>
//<id_goods></id_goods>
//<id_symptom></id_symptom>
//<descr></descr>
//<grade></grade>
//</row>
//</goods_symptom>
//</document>	
	
	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                 |	Допродажи.КодТовара,
	                 |	Допродажи.КодТовараДопродажи,
	                 |	Допродажи.СообщениеДопродажи.Наименование как СообщениеДопродажи
	                 |ИЗ
	                 |	Справочник.Допродажи КАК Допродажи";
			
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	
	ЗаписьXML = Новый ЗаписьТекста(ИмяФайла,"windows-1251");

	ЗаписьXML.ЗаписатьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");


	ЗаписьXML.ЗаписатьСтроку("<document>"); 

	
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "pack_type", "GOODS_ACCOMPANY"); 
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ЗаписатьСтроку("<goods_accompany>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ЗаписатьСтроку("<row>");
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_goods",	Формат(Выборка.КодТовара,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_accompany",	Формат(Выборка.КодТовараДопродажи,"ЧГ=0; ЧН=0") );		
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "cash_hint",		КорректировкаСпецСимволов(СокрЛП(Выборка.СообщениеДопродажи)));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "priority",	"0");
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "qnt",		"0");
		ЗаписьXML.ЗаписатьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ЗаписатьСтроку("</goods_accompany>"); 
	ЗаписьXML.ЗаписатьСтроку("</document>"); 
	
	ЗаписьXML.Закрыть();
	ЗаписьXML = Новый ЧтениеТекста(ИмяФайла,"windows-1251");
	ТекстУпаковки = ЗаписьXML.Прочитать();
	ЗаписьXML.Закрыть();
	ЗаписьXML = Неопределено;
	УдалитьФайлы(ИмяФайла);	
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "GOODS_ACCOMPANY" , ТекстУпаковки );

	
КонецПроцедуры

Процедура ВыгрузитьАтрибутыИнкассации(Аптека = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	АтрибутыИнкассации.Код,
		|	АтрибутыИнкассации.Наименование,
		|	АтрибутыИнкассации.СчетДебета,
		|	ЕСТЬNULL(АтрибутыИнкассации.ИсточникПоступления.Код, """") КАК КодИсточникаПоступления,
		|	ЕСТЬNULL(АтрибутыИнкассации.ИсточникПоступления.Наименование, """") КАК ИсточникПоступления,
		|	АтрибутыИнкассации.PIN,
		|	ЕстьNULL(АтрибутыИнкассации.ИспользованиеPIN.Порядок,0) как ИспользованиеPIN,
		|	АтрибутыИнкассации.ОриентацияОтчета,
		|	ЕСТЬNULL(АтрибутыИнкассации.РассчетныйСчет.Код, ""0"") КАК КодРасчетногоСчета,
		|	ЕСТЬNULL(АтрибутыИнкассации.РассчетныйСчетБанкаВносителя.Код, ""0"") КАК КодРасчетногоСчетаБанкаВносителя,
		|	АтрибутыИнкассации.ПометкаУдаления
		|ИЗ
		|	Справочник.АтрибутыИнкассации КАК АтрибутыИнкассации";				   
			   
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "CASH_COLLECTION_ATTR"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<cash_collection_attr>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
		ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXML(ЗаписьXML, "is_deleted", Число(Выборка.ПометкаУдаления)); 
		ЗаписатьЭлементXML(ЗаписьXML, "descr",		КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
		Попытка
			ЗаписатьЭлементXML(ЗаписьXML, "id_bank_account", Формат(Число(Выборка.КодРасчетногоСчета),"ЧГ=0; ЧН=0"));
		Исключение
		КонецПопытки;
		Попытка
			ЗаписатьЭлементXML(ЗаписьXML, "id_bank_account_depositor", Формат(Число(Выборка.КодРасчетногоСчетаБанкаВносителя),"ЧГ=0; ЧН=0"));
		Исключение
		КонецПопытки;
		
		ЗаписатьЭлементXML(ЗаписьXML, "account_debit",		КорректировкаСпецСимволов(СокрЛП(Выборка.СчетДебета)));
		ЗаписатьЭлементXML(ЗаписьXML, "income_src",		КорректировкаСпецСимволов(СокрЛП(Выборка.ИсточникПоступления)));
		ЗаписатьЭлементXML(ЗаписьXML, "pin",		КорректировкаСпецСимволов(СокрЛП(Выборка.PIN)));
		ЗаписатьЭлементXML(ЗаписьXML, "use_pin", 	Формат(Выборка.ИспользованиеPIN,"ЧН=0")); 
		ЗаписатьЭлементXML(ЗаписьXML, "cash_code", КорректировкаСпецСимволов(СокрЛП(Выборка.КодИсточникаПоступления)));	
		ЗаписатьЭлементXML(ЗаписьXML, "rpt_type",	Выборка.ОриентацияОтчета);
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</cash_collection_attr>");
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "CASH_COLLECTION_ATTR" , ТекстУпаковки );

	
КонецПроцедуры

Процедура ВыгрузитьБрендыАптечныхСетей(Аптека = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	БрендыАптечныхСетей.Код,
	               |	БрендыАптечныхСетей.Наименование,
	               |	БрендыАптечныхСетей.ПроцентМотивации,
	               |	БрендыАптечныхСетей.ПометкаУдаления,
	               |	БрендыАптечныхСетей.ОбработкаСпецНаценки
	               |ИЗ
	               |	Справочник.БрендыАптечныхСетей КАК БрендыАптечныхСетей";
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "BRAND_PHARM_NETWORK"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<brand_pharm_network>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
				   ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
				   ЗаписатьЭлементXML(ЗаписьXML, "is_deleted", Число(Выборка.ПометкаУдаления)); 
				   ЗаписатьЭлементXML(ЗаписьXML, "descr",		КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
				   ЗаписатьЭлементXML(ЗаписьXML, "p_asm", 		Формат(Число(Выборка.ПроцентМотивации),"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ="));
				   ЗаписатьЭлементXML(ЗаписьXML, "process_special_markup", Формат(Число(Выборка.ОбработкаСпецНаценки),"ЧН=0"));
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</brand_pharm_network>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "BRAND_PHARM_NETWORK" , ТекстУпаковки );
	
	
КонецПроцедуры

Процедура ВыгрузитьФирмы(Аптека = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Фирмы.Код КАК Код,
	               |	Фирмы.Наименование КАК Наименование,
	               |	Фирмы.ДлинноеНаименование КАК ДлинноеНаименование,
	               |	Фирмы.ИНН КАК ИНН,
	               |	Фирмы.КПП КАК КПП,
	               |	Фирмы.ОГРН КАК ОГРН,
	               |	Фирмы.ОКПО КАК ОКПО,
	               |	Фирмы.ЮрАдрес КАК ЮрАдрес,
	               |	Фирмы.ФактАдрес КАК ФактАдрес,
	               |	Фирмы.Руководитель.Наименование КАК Руководитель,
	               |	Фирмы.ГлавныйБухгалтер.Наименование КАК Бухгалтер,
	               |	ЕСТЬNULL(Фирмы.ФирмаКакПоставщик.Код, 0) КАК Контрагент,
	               |	Фирмы.ПометкаУдаления КАК ПометкаУдаления
	               |ИЗ
	               |	Справочник.Фирмы КАК Фирмы
	               |ГДЕ
	               |	НЕ Фирмы.Код = 133
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Код";
				   
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "FIRM"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<firm>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "is_deleted", Число(Выборка.ПометкаУдаления)); 
			ЗаписатьЭлементXML(ЗаписьXML, "descr",		КорректировкаСпецСимволов(СокрЛП(Выборка.ДлинноеНаименование)));
			ЗаписатьЭлементXML(ЗаписьXML, "sdescr",		КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
			ЗаписатьЭлементXML(ЗаписьXML, "inn",		Лев(СокрЛП(Выборка.ИНН),12));
			ЗаписатьЭлементXML(ЗаписьXML, "kpp",		СокрЛП(Выборка.КПП));
			ЗаписатьЭлементXML(ЗаписьXML, "ogrn",		Лев(СокрЛП(Выборка.ОГРН),13));
			ЗаписатьЭлементXML(ЗаписьXML, "okpo",		СокрЛП(Лев(Выборка.ОКПО,10)));
			ЗаписатьЭлементXML(ЗаписьXML, "addr_u",		КорректировкаСпецСимволов(СокрЛП(Выборка.ЮрАдрес)));
			ЗаписатьЭлементXML(ЗаписьXML, "addr_f",		КорректировкаСпецСимволов(СокрЛП(Выборка.ФактАдрес)));
			ЗаписатьЭлементXML(ЗаписьXML, "director",		КорректировкаСпецСимволов(Лев(СокрЛП(Выборка.Руководитель),50)));
			ЗаписатьЭлементXML(ЗаписьXML, "bookkeeper",		КорректировкаСпецСимволов(Лев(СокрЛП(Выборка.Бухгалтер),50)));
			ЗаписатьЭлементXML(ЗаписьXML, "id_contragent",	Формат(Выборка.Контрагент,"ЧГ=0; ЧН=0") );			
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</firm>"); //конец записи секции  "STORING_PLACE"
	ЗаписьXML.ДобавитьСтроку("</document>"); //конец записи секции  "STORING_PLACE"
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "FIRM" , ТекстУпаковки );
	
КонецПроцедуры

Процедура ВыгрузитьАптеки(Аптека = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МестаХранения.Код КАК Код,
	               |	МестаХранения.Наименование КАК Наименование,
	               |	МестаХранения.ПометкаУдаления КАК ПометкаУдаления,
	               |	МестаХранения.НомерАптеки КАК НомерАптеки,
	               |	МестаХранения.Фирма.Код КАК КодФирмы,
	               |	МестаХранения.НаименованиеПоКлассификатору КАК КороткоеНаименование,
	               |	МестаХранения.ДатаПерехода КАК ДатаОткрытия,
	               |	МестаХранения.ДатаЗакрытия КАК ДатаЗакрытия,
	               |	ЕСТЬNULL(МестаХранения.ТипСклада.Порядок, 0) КАК ТипСкладаПорядок,
	               |	ЕСТЬNULL(МестаХранения.ТипНалогообложения.Порядок, 0) КАК ТипНОПорядок,
	               |	ЕСТЬNULL(МестаХранения.Бренд.Код, 0) КАК КодБренда,
	               |	ЕСТЬNULL(МестаХранения.Бренд.ПроцентМотивации, 0) КАК ПроцентМотивации,
	               |	МестаХранения.Мэйл КАК Мэйл,
	               |	МестаХранения.РежимРаботы.Наименование КАК РежимРаботы,
	               |	МестаХранения.ТелефонДляСправки КАК ТелефонДляСправки,
	               |	ЕСТЬNULL(МестаХранения.АтрибутИнкассации.Код, 0) КАК КодАтрибутаИнкассации,
	               |	МестаХранения.КодОбъектаВБанке КАК КодОбъектаВБанке,
	               |	ЕСТЬNULL(МестаХранения.СубъектРФ.Код, 0) КАК КодСубъектаРФ,
	               |	ЕСТЬNULL(МестаХранения.ТипИнкассации.Порядок, 0) КАК КодТипаИнкассации,
	               |	ПРЕДСТАВЛЕНИЕ(МестаХранения.ГрафикИнкассацииНовый) КАК ГрафикИнкассации,
	               |	МестаХранения.НомерДляСамоинкассации КАК НомерДляСамоинкассации,
	               |	МестаХранения.МаксОстатокПослеИнкассации КАК МаксОстатокПослеИнкассации,
	               |	МестаХранения.МаксОстатокПослеИнкассации КАК МаксОстатокПослеИнкассации1,
	               |	МестаХранения.КодОбъектаДляРазмена КАК КодОбъектаДляРазмена,
				   |	МестаХранения.НаименованиеДляЧеков КАК НаименованиеДляЧеков
	               |ИЗ
	               |	Справочник.МестаХранения КАК МестаХранения
	               |ГДЕ
	               |	НЕ МестаХранения.СторонаДоговораКомиссии = ЗНАЧЕНИЕ(Перечисление.СтороныДоговораКомиссии.Комитент)
	               |	И МестаХранения.ЭтоГруппа = ЛОЖЬ
	               |	И МестаХранения.Наименование <> """"
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Код";
	Запрос.УстановитьПараметр("ТипНалогообложения",Перечисления.ТипыНалогообложения.УСН);
				   
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	//ТЗПродаж = ПолучитьТзПродаж();
	
	Выборка = Рез.Выбрать();
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	
	ЗаписьXML = Новый ЗаписьТекста(ИмяФайла,"windows-1251");
	ЗаписьXML.ЗаписатьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ЗаписатьСтроку("<document>"); 

	
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "pack_type", "DEP"); 
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ЗаписатьСтроку("<dep>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ЗаписатьСтроку("<row>");
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "is_deleted", Число(Выборка.ПометкаУдаления)); 
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "descr",		КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "sdescr",		КорректировкаСпецСимволов(СокрЛП(Выборка.КороткоеНаименование)));
		Попытка
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "num_dep",		Формат(Выборка.НомерАптеки,"ЧГ=0"));
		Исключение
		КонецПопытки;
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_firm",		Формат(Выборка.КодФирмы,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "date_open", 	Формат(Выборка.ДатаОткрытия,"ДФ=dd.MM.yyyy"));
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "date_close", 	Формат(Выборка.ДатаЗакрытия,"ДФ=dd.MM.yyyy")); 
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "type_dep",	Формат(Выборка.ТипСкладаПорядок,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "type_tax",	Формат(Выборка.ТипНОПорядок,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_brand_pharm_network",	Формат(Выборка.КодБренда,"ЧГ=0; ЧН=0") );			
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_subjects_rf",	Формат(Выборка.КодСубъектаРФ,"ЧГ=0; ЧН=0") );			
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "phone",		КорректировкаСпецСимволов(СокрЛП(Выборка.ТелефонДляСправки)));
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "e_mail",		КорректировкаСпецСимволов(СокрЛП(Выборка.Мэйл)));
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "time_work",		КорректировкаСпецСимволов(СокрЛП(Выборка.РежимРаботы)));
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_cash_collection_attr", Формат(Выборка.КодАтрибутаИнкассации,"ЧГ=0; ЧН=0") );	
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "cash_collection_bank_code",	КорректировкаСпецСимволов(СокрЛП(Выборка.КодОбъектаВБанке)));
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_type_collection",	Формат(Выборка.КодТипаИнкассации,"ЧГ=0; ЧН=0") );    //Число
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "cash_collection_schedule",	КорректировкаСпецСимволов(СокрЛП(Выборка.ГрафикИнкассации))); //Строка
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "code_for_collection",	КорректировкаСпецСимволов(СокрЛП(Выборка.НомерДляСамоинкассации)));  //Строка
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "cash_collection_limit",	Формат(Выборка.МаксОстатокПослеИнкассации,"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0") );	 // Число(15,2)
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "Object_code_for_redemption",	КорректировкаСпецСимволов(СокрЛП(Выборка.КодОбъектаДляРазмена)));   //Строка
		
		
		ПроцентМотивации = 0;
				
		//Если Выборка.КодБренда = 4 Тогда
		//	// "Ave luxury"
		//	НайденнаяСтрока  = ТЗПродаж.Найти(Выборка.Код, "СкладКод");
		//	Если НайденнаяСтрока <> Неопределено Тогда
		//		Если НайденнаяСтрока.Процент <= 70 Тогда
		//			ПроцентМотивации = 3.0;
		//		ИначеЕсли НайденнаяСтрока.Процент > 70  и НайденнаяСтрока.Процент <=90 Тогда
		//			ПроцентМотивации = 2.5;
		//		ИначеЕсли НайденнаяСтрока.Процент > 90 Тогда
		//			ПроцентМотивации = 1.2;
		//		КонецЕсли;
		//	КонецЕсли;
		//Иначе
		ПроцентМотивации = Выборка.ПроцентМотивации;
		//КонецЕсли;
		
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "p_asm",		Формат(ПроцентМотивации,"ЧРД=.; ЧН=0; ЧГ=0") );			
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "cheque_header",	КорректировкаСпецСимволов(СокрЛП(Выборка.НаименованиеДляЧеков)));   //Строка
		
		ЗаписьXML.ЗаписатьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ЗаписатьСтроку("</dep>"); //конец записи секции  "STORING_PLACE"
	ЗаписьXML.ЗаписатьСтроку("</document>"); //конец записи секции  "STORING_PLACE"
	
	ЗаписьXML.Закрыть();
	ЗаписьXML = Новый ЧтениеТекста(ИмяФайла,"windows-1251");
	ТекстУпаковки = ЗаписьXML.Прочитать();
	ЗаписьXML.Закрыть();
	ЗаписьXML = Неопределено;
	УдалитьФайлы(ИмяФайла);	
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "DEP" , ТекстУпаковки );

КонецПроцедуры

Процедура ВыгрузитьУслуги(Аптека = Неопределено) Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ
	                 |	Услуги.Код КАК Код,
	                 |	Услуги.ПометкаУдаления КАК ПометкаУдаления,
	                 |	Услуги.Наименование КАК Наименование,
	                // |	ЕСТЬNULL(Услуги.СтавкаНДС.Ставка, 18) КАК СтавкаНДС,
	                 |	ЕСТЬNULL(ВЫБОР
	                 |			КОГДА Услуги.СтавкаНДС.Код = 3
	                 |					И &Дата < ДАТАВРЕМЯ(2019, 1, 1)
	                 |				ТОГДА 18
	                 |			ИНАЧЕ Услуги.СтавкаНДС.Ставка
	                 |		КОНЕЦ, ВЫБОР
	                 |			КОГДА &Дата < ДАТАВРЕМЯ(2019, 1, 1)
	                 |				ТОГДА 18
	                 |			ИНАЧЕ 20
	                 |		КОНЕЦ) КАК СтавкаНДС,
	                 |	Услуги.Цена КАК Цена,
	                 |	Услуги.ШтрихКод КАК ШтрихКод,
	                 |	Услуги.КатегорияУслуги.Код КАК КодКатегорииУслуги,
	                 |	Услуги.СрокВыполнения КАК СрокВыполнения
	                 |ИЗ
	                 |	Справочник.Услуги КАК Услуги
	                 |
	                 |УПОРЯДОЧИТЬ ПО
	                 |	Код";
			
    Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "SERVICE"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<service>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );		
			ЗаписатьЭлементXML(ЗаписьXML, "is_deleted",	Формат(Выборка.ПометкаУдаления,"БЛ=0; БИ=1") );				
			ЗаписатьЭлементXML(ЗаписьXML, "descr",		КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
			ЗаписатьЭлементXML(ЗаписьXML, "descr_print",КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
			ЗаписатьЭлементXML(ЗаписьXML, "p_vat_rtl",	Формат(Выборка.СтавкаНДС,"ЧН=0; ЧГ=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "cost_rtl_w_vat",	Формат(Выборка.Цена,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0") );		
			ЗаписатьЭлементXML(ЗаписьXML, "barcode",	КорректировкаСпецСимволов(СокрЛП(Выборка.ШтрихКод)));
			ЗаписатьЭлементXML(ЗаписьXML, "id_category_service", Формат(Выборка.КодКатегорииУслуги,"ЧГ=0; ЧН=0") );		
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</service>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "SERVICE" , ТекстУпаковки );

	
КонецПроцедуры

Процедура ВыгрузитьТоварыСНаценкой0(Аптека = Неопределено) Экспорт
	
	НаименованиеНаценки = "наценка 0%";
	СпрМаркеры = Справочники.Маркеры;
	РезультатПоиска = СпрМаркеры.НайтиПоНаименованию(НаименованиеНаценки,Истина);
	Если РезультатПоиска = СпрМаркеры.ПустаяСсылка() или РезультатПоиска = Неопределено Тогда
		Возврат	
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Код
	               |ИЗ
	               |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	               |ГДЕ
	               |	АССОРТИМЕНТНЫЙ_ПЛАН.Маркер = &Маркер";
	Запрос.УстановитьПараметр("Маркер",СпрМаркеры.НайтиПоНаименованию(НаименованиеНаценки,Истина));
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "SPECIAL_MARKUP"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<special_markup>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
				   ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</special_markup>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "SPECIAL_MARKUP" , ТекстУпаковки );
	
	
КонецПроцедуры

Процедура ВыгрузитьМаркетинговыйДокумент(Аптека, Выборка)
	
	
	Док = Выборка.Док;
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ДобавитьСтроку("<document>"); 
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "MARKETING_MARGIN"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<hdr>");
		ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Док.Номер,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXML(ЗаписьXML, "start_dt",	Формат(Док.НачалоПериода,"ДФ=dd.MM.yyyy") );				
		ЗаписатьЭлементXML(ЗаписьXML, "end_dt",		Формат(Док.КонецПериода,"ДФ=dd.MM.yyyy") );				
	ЗаписьXML.ДобавитьСтроку("</hdr>");
	ЗаписьXML.ДобавитьСтроку("<str>");
	Для каждого стр из Док.Товар Цикл
		
		
		
		Если стр.Отменена Тогда
			Продолжить;
		КонецЕсли;
		
		Если стр.ОтменаБУБ Тогда
			СуммаБонуса = стр.СуммаУсловногоБонусаЗаУпаковку;	
		Иначе
			СуммаБонуса = стр.СуммаУсловногоБонусаЗаУпаковку + стр.СуммаБезусловногоБонусаЗаУпаковку;	
		КонецЕсли;	
		
		Если СуммаБонуса = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(стр.КодТовара,"ЧГ=0") );	
			ЗаписатьЭлементXML(ЗаписьXML, "amount",		Формат(СуммаБонуса,"ЧРД=.; ЧН=0; ЧГ=0") );	
		ЗаписьXML.ДобавитьСтроку("</row>");
		
		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</str>");
	
	
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;

	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "MARKETING_MARGIN" , ТекстУпаковки , Формат(Док.Номер,"ЧГ=0"));
	
	
КонецПроцедуры

Процедура ВыгрузитьМаркетинговыеКонтракты(Аптека = Неопределено) Экспорт
	
	 Запрос = Новый Запрос;
		 Запрос.Текст = "ВЫБРАТЬ
		                |	МаркетинговыеКонтракты.Ссылка как Док,
		                |	МаркетинговыеКонтракты.Номер
		                |ИЗ
		                |	Документ.МаркетинговыеКонтракты КАК МаркетинговыеКонтракты
		                |ГДЕ
		                |	МаркетинговыеКонтракты.КонецПериода >= &ТекДата
		                |	И МаркетинговыеКонтракты.Проведен = ИСТИНА
		                //|	И МаркетинговыеКонтракты.Выгружен = ИСТИНА
						//|	И Номер = 8
						|";
					
			
	Запрос.УстановитьПараметр("ТекДата",НачалоДня(ТекущаяДата()));
	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		 ВыгрузитьМаркетинговыйДокумент(Аптека , Выборка);
	КонецЦикла;
	
		
КонецПроцедуры

Процедура ВыгрузитьАктивныйАссортимент(Аптека = Неопределено) Экспорт
	
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	АП.Код КАК КодТовара,
	               |	АП.Наименование КАК Наименование,
	               |	ВЫБОР
	               |		КОГДА АП.СтавкаНДС.Код = 3
	               |				И &Дата < ДАТАВРЕМЯ(2019, 1, 1)
	               |			ТОГДА 18
				   |		КОГДА АП.СтавкаНДС = Значение(Справочник.СтавкиНДС.ПустаяССылка)
				   |			ТОГДА 0 //ENT-1155
	               |		ИНАЧЕ АП.СтавкаНДС.Ставка
	               |	КОНЕЦ КАК СтавкаНДС,
	               |	АП.УчаствуетВАП КАК УчаствуетВАП,
	               |	АП.ГородскаяДефектура КАК ГородскаяДефектура,
	               |	АП.ВременнаяБлокировка КАК ВременнаяБлокировка,
	               |	АП.СнятСПроизводства КАК СнятСПроизводства,
	               |	АП.МаркетПланы КАК МаркетПланы,
				   |	АП.АссортиментРынка КАК АссортиментРынка,//ENT-1155
				   |	АП.ОтпускПоРецепту КАК ОтпускПоРецепту,   //ENT-1270
				   |    ВЫБОР
				   |		КОГДА АП.ТипДляЦО = ЗНАЧЕНИЕ(Перечисление.ТипыДляЦО.Парафармация)
				   |			ТОГДА 1
				   |		ИНАЧЕ 0
				   |	КОНЕЦ КАК ТипДляЦО //ENT-1309 
	               |ИЗ
	               |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	               |ГДЕ
	               |	АП.ПометкаУдаления = ЛОЖЬ
				   |	И АП.ЭтоГруппа = ЛОЖЬ //ENT-1155
				   //ENT-1189 +++
				   //ENT-1155|	И АП.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
				   //ENT-1189 ---
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	АП.Код";
	
	//Запрос.УстановитьПараметр("Подкатегория",Справочники.Подкатегории.НайтиПоКоду(17));
	//Запрос.УстановитьПараметр("Бренд",Справочники.Брэнды.НайтиПоКоду(65528));
	Запрос.УстановитьПараметр("Дата",ТекущаяДата());
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	
	Выборка = Рез.Выбрать();
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	
	ЗаписьXML = Новый ЗаписьТекста(ИмяФайла,"windows-1251");
	ЗаписьXML.ЗаписатьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ЗаписатьСтроку("<document>"); 

	
	
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "pack_type", "ACTIVE_ASSORTMENT"); 
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ЗаписатьСтроку("<active_assortment>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ЗаписатьСтроку("<row>");
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_goods",	Формат(Выборка.КодТовара,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "descr",		КорректировкаСпецСимволов(Выборка.Наименование) );
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "p_vat_rtl",	Формат(Выборка.СтавкаНДС,"ЧГ=0; ЧН=0") );
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "activ",		Формат(Число(Выборка.УчаствуетВАП),"ЧН=0") );
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "city_def",	Формат(Число(Выборка.ГородскаяДефектура),"ЧН=0") );
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "temp_block",	Формат(Число(Выборка.ВременнаяБлокировка),"ЧН=0") );
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "out_production",	Формат(Число(Выборка.СнятСПроизводства),"ЧН=0") );
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "market_plan",	Формат(Число(Выборка.МаркетПланы),"ЧН=0") );
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "assortment_market",	Формат(Число(Выборка.АссортиментРынка),"ЧН=0") );//ENT-1155
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "sell_by_prescription",	Формат(Число(Выборка.ОтпускПоРецепту),"ЧН=0") );//ENT-1270
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "parafarm",	 Формат(Выборка.ТипДляЦО,"ЧГ=0; ЧН=0"));//ENT-1309
		ЗаписьXML.ЗаписатьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ЗаписатьСтроку("</active_assortment>"); 
	ЗаписьXML.ЗаписатьСтроку("</document>"); 
	
	ЗаписьXML.Закрыть();
	ЗаписьXML = Новый ЧтениеТекста(ИмяФайла,"windows-1251");
	ТекстУпаковки = ЗаписьXML.Прочитать();
	ЗаписьXML.Закрыть();
	ЗаписьXML = Неопределено;
	УдалитьФайлы(ИмяФайла);	
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "ACTIVE_ASSORTMENT" , ТекстУпаковки );
	
КонецПроцедуры

Процедура ВыгрузитьСпециальныеЦены_7_5(Аптека)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	МестаХранения.Код,
	|	МестаХранения.Ссылка КАК Аптека
	|ИЗ
	|	Справочник.МестаХранения КАК МестаХранения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
	|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
	|ГДЕ
	|	МестаХранения.ПометкаУдаления = ЛОЖЬ
	|	И СостоянияПодписчиков.Активна = ИСТИНА
	|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
	|	И МестаХранения.Бренд.ПроцентМотивации = 7.5
	| " + ?(Аптека=Неопределено,"", "И МестаХранения.Ссылка = &Аптека") + "
	|";
	
	Запрос.УстановитьПараметр("Аптека",Аптека);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	ВыборкаАптек = Рез.Выбрать();
	Всего = ВыборкаАптек.Количество();
	н=0;
	
	
	
	
	Запрос.Текст =   "ВЫБРАТЬ
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Код как КодТовара
	|ИЗ
	|	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	|ГДЕ
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Код В (148, 182, 185, 1010, 1020, 1021, 1022, 1023, 1025, 1028, 1031, 1111, 1191, 1315, 1316, 1317, 1318, 1513, 1525, 1553, 2015, 2064, 2078, 2082, 2089, 2126, 2300, 2547, 2772, 2817, 2827, 2917, 2918, 2920, 2921, 2923, 2931, 2948, 2955, 2956, 2958, 2969, 2974, 3004, 3028, 3035, 3036, 3203, 3219, 3220, 3221, 3490, 3491, 3501, 3503, 3505, 3506, 3507, 3508, 3509, 3511, 3512, 3515, 3518, 3522, 3523, 3545, 3547, 3548, 3550, 3553, 3556, 3557, 3566, 3574, 3579, 3584, 3586, 3592, 3595, 3597, 3601, 3602, 3616, 3628, 3636, 3644, 3647, 3657, 3660, 3666, 3669, 3672, 3677, 3708, 3727, 3752, 3753, 3793, 3794, 3803, 3814, 3840, 3898, 3899, 3908, 3970, 3971, 3974, 4061, 4062, 4067, 4108, 4110, 4111, 4112, 4167, 4176, 4182, 4197, 4241, 4243, 4248, 4250, 4262, 4269, 4274, 4279, 4299, 4300, 4314, 4341, 4350, 4359, 4543, 4553, 4554, 4605, 4608, 4609, 4617, 4637, 4640, 4676, 4679, 4729, 4750, 4817, 4821, 4827, 4853, 4854, 4943, 4956, 4958, 4962, 4963, 5014, 5040, 5042, 5163, 5316, 5317, 5318, 5339, 5361, 5378, 5411, 5429, 5432, 5487, 5493, 5517, 5539, 5593, 5605, 5606, 5608, 5609, 5613, 5616, 5638, 5639, 5694, 5719, 5835, 5840, 5846, 5879, 5891, 5899, 5943, 5992, 6069, 6134, 6146, 6159, 6177, 6261, 6312, 6319, 6351, 6352, 6353, 6361, 6365, 6367, 6371, 6372, 6375, 6404, 6433, 6438, 6536, 6686, 6687, 6688, 6689, 6691, 7083, 7087, 7280, 7300, 7414, 7921, 7990, 8015, 8136, 8179, 8220, 8221, 8357, 8360, 8477, 8556, 8614, 8640, 8668, 8735, 8738, 8746, 8753, 8759, 8767, 8789, 8860, 9131, 9138, 9139, 9143, 9145, 9149, 9164, 9166, 9167, 9168, 9169, 9170, 9172, 9177, 9178, 9186, 9227, 9232, 9891, 9895, 9899, 10798, 10814, 10821, 11068, 11069, 11070, 11078, 11080, 11994, 12113, 12117, 14325, 14346, 14347, 14348, 14377, 14379, 14386, 14389, 14397, 14398, 14442, 14445, 14478, 14495, 14518, 14538, 14678, 14687, 14761, 14792, 14795, 14826, 14831, 14860, 14973, 15059, 15087, 15233, 15460, 15608, 15631, 15653, 15668, 15669, 15670, 15776, 15778, 15891, 15892, 15894, 15895, 15896, 15921, 15925, 16041, 16161, 16224, 16226, 16227, 16293, 16367, 16374, 16438, 17109, 17169, 17173, 17306, 17517, 17544, 17610, 17641, 17681, 17683, 17685, 17686, 17688, 17718, 17843, 17876, 17879, 17964, 17986, 18179, 18188, 18191, 18197, 18198, 18223, 18292, 18328, 18487, 18524, 19020, 19023, 19024, 19031, 19217, 19304, 19352, 19359, 19366, 19423, 19430, 19473, 19545, 19683, 19715, 19837, 19852, 20014, 20134, 20150, 20244, 20279, 20326, 20327, 20401, 20621, 20636, 20827, 20845, 21023, 21050, 21140, 21337, 21631, 21733, 22035, 22115, 22319, 22381, 22411, 22497, 22643, 22665, 22668, 22794, 23006, 23158, 23278, 23329, 23630, 23658, 23718, 23748, 35020, 35021, 35084, 35087, 35176, 35249, 35259, 35301, 35462, 35464, 35517, 35530, 35552, 35679, 35680, 35686, 35687, 35713, 35858, 35946, 35970, 36040, 36051, 36054, 36157, 36178, 36188, 36229, 36253, 36364, 36365, 36428, 36468, 36564, 36570, 36760, 36800, 37014, 37032, 37144, 37330, 37339, 37517, 37520, 37531, 37533, 37545, 37623, 37624, 37628, 37631, 37632, 37633, 37634, 37635, 37712, 37714, 37716, 37758, 37836, 37853, 37878, 37883, 37889, 37912, 37916, 37917, 38089, 38165, 38189, 38190, 38191, 38231, 38279, 38356, 38424, 38425, 38426, 38587, 38711, 38782, 38907, 39229, 39439, 39444, 39503, 39509, 39605, 39615, 39797, 39800, 40013, 40015, 40021, 40031, 40170, 40216, 40290, 40371, 40426, 40427, 40432, 40494, 40495, 40609, 40610, 40629, 40638, 40647, 40659, 41013, 41022, 41025, 41034, 41036, 41037, 41038, 41206, 41217, 41224, 41228, 41230, 41274, 41277, 41286, 41320, 41371, 41444, 41589, 41590, 41720, 41766, 41768, 41775, 41776, 41777, 41779, 41781, 41782, 41783, 41786, 41788, 41790, 41791, 41792, 41795, 41797, 41805, 41898, 42042, 42144, 42202, 42262, 42325, 42333, 42399, 42582, 42718, 42736, 42889, 42932, 43038, 43069, 43096, 43103, 43122, 43129, 43260, 43264, 43340, 43529, 43573, 43580, 43583, 43584, 43586, 43589, 43590, 43603, 43605, 43796, 43995, 43996, 44000, 44008, 44055, 44073, 44084, 44085, 44086, 44087, 44088, 44090, 44091, 44092, 44109, 44215, 44216, 44347, 44349, 44417, 44465, 44523, 44524, 44527, 44528, 44536, 44541, 44555, 44557, 44560, 44655, 44707, 44712, 44784, 44977, 44988, 45024, 45122, 45151, 45163, 45179, 45180, 45181, 45191, 45215, 45336, 45467, 45807, 45827, 45835, 45977, 46291, 46394, 46397, 46421, 46578, 46605, 46640, 46841, 47618, 47724, 48041, 48056, 48236, 48237, 48362, 48426, 48429, 48502, 48529, 48531, 48735, 49210, 49521, 49716, 50036, 50046, 50524, 50648, 50928, 51011, 51207, 51537, 51556, 51565, 51591, 52080, 52298, 52497, 52720, 52990, 53034, 53105, 53298, 53415, 53426, 53462, 53537, 53622, 53729, 53767, 53872, 54080, 54105, 54110, 54747, 54876, 54877, 55084, 55086, 55320, 55801, 55956, 56015, 56090, 56180, 56214, 56245, 56251, 56257, 56713, 56825, 56836, 56885, 56886, 57033, 57136, 57210, 57257, 57258, 57269, 57307, 57318, 57380, 57397, 57427, 57533, 57901, 58119, 58223, 58288, 58290, 58546, 58815, 58861, 58882, 58889, 59038, 59157, 59168, 59422, 59702, 60029, 60071, 60196, 60559, 60608, 60694, 60755, 60866, 60924, 60941, 60959, 61089, 61165, 61175, 61176, 61187, 61245, 61260, 61279, 61430, 61704, 62059, 62232, 62437, 62438, 62439, 62500, 62781, 62899, 63535, 64147, 64150, 64151, 64258, 64288, 64290, 64342, 64353, 64596, 64598, 64696, 65467, 65565, 65688, 65723, 65853, 66005, 66167, 66508, 66512, 66513, 66514, 66516, 66517, 66520, 66521, 66522, 66523, 66524, 66525, 66526, 66534, 66535, 67014, 67015, 67021, 67144, 67175, 67210, 67258, 67287, 67288, 67309, 67552, 67565, 67573, 67667, 67834, 67885, 67887, 67898, 67901, 67961, 68022, 68036, 68040, 68272, 68367, 68699, 68957, 69039, 69289, 69292, 69293, 69374, 69376, 69469, 69471, 69910, 69925, 70007, 70008, 70009, 70010, 70011, 70012, 70013, 70015, 70016, 70032, 70060, 70333, 70339, 71055, 71123, 71182, 71240, 71247, 71274, 71287, 71288, 71294, 71298, 71340, 71341, 71377, 71391, 71392, 71393, 71554, 71809, 71946, 71947, 71961, 71968, 72039, 72040, 72042, 72137, 73184, 73186, 73190, 73226, 73355, 73361, 73424, 73445, 73545, 73562, 73565, 73591, 73603, 73604, 73606, 73690, 73823, 74110, 74234, 74328, 74329, 74330, 74331, 74332, 74333, 74334, 74593, 74748, 74876, 75033, 75034, 75037, 75041, 75048, 75320, 75401, 75752, 76057, 76130, 76168, 76171, 76358, 76664, 76745, 76784, 76963, 77191, 77343, 77344, 77617, 77628, 77631, 77731, 77828, 78020, 78057, 78096, 78836, 78870, 78871, 78872, 78888, 78889, 78891, 79116, 79134, 79324, 79325, 79412, 79451, 79478, 79624, 80299, 80378, 80379, 80527, 81004, 81193, 81407, 81439, 81450, 81495, 81569, 81735, 81773, 82010, 82016, 82096, 82215, 82313, 82374, 82401, 82495, 82617, 82691, 82813, 82853, 82981, 82988, 83409, 83416, 83417, 83467, 83627, 83730, 83831, 83859, 83860, 83861, 83868, 84044, 84048, 84049, 84061, 84069, 84327, 84328, 84358, 84404, 84441, 84456, 84485, 84654, 84660, 84705, 84791, 84962, 84963, 85052, 85093, 85175, 85299, 85328, 85331, 85332, 85664, 85892, 86225, 86233, 86500, 86513, 86516, 86697, 86702, 86793, 86822, 86823, 86824, 86847, 86883, 86884, 86885, 86886, 86887, 86888, 86889, 86890, 86891, 86892, 86895, 86906, 86953, 86954, 86955, 86956, 86964, 86972, 87032, 87155, 87244, 87286, 87287, 87303, 87309, 87324, 87325, 87426, 87443, 87495, 87496, 87636, 87640, 87646, 87648, 87655, 87656, 87771, 87780, 87994, 88096, 88134, 88255, 88389, 88460, 88654, 88696, 88697, 89153, 89488, 89525, 89611, 89614, 89629, 89705, 90065, 90200, 90452, 90563, 90576, 90577, 90578, 90597, 90847, 90972, 91099, 91139, 91356, 91608, 91617, 91665, 91672, 91841, 91995, 92174, 92215, 92364, 92653, 92726, 93039, 93113, 93391, 93646, 93748, 93996, 94648, 95164, 95432, 95494, 95619, 95715, 95831, 96041, 96050, 96103, 96116, 96117, 96197, 96821, 96943, 96958, 96991, 97026, 97121, 97122, 97262, 97635, 97643, 98304, 98366, 98472, 98619, 98724, 98834, 98941, 100213, 100401, 100402, 100766, 100855, 101069, 102725, 102738, 102747, 102748, 102749, 102750, 103374, 103405, 103407, 103409, 103410, 103414, 103417, 103564, 103956, 103958, 103970, 104074, 104254, 104660, 104662, 104664, 105254, 105910, 106099, 107761, 108489, 109818, 109875, 109889, 110681, 110710, 110718, 111025, 111032, 111144, 111594, 111595, 111596, 111641, 112017, 112035, 112455, 112594, 113361, 113766, 113770, 113996, 114070, 114072, 114073, 114075, 114077, 114082, 114409, 114410, 114412, 114413, 114414, 114475, 114719, 114825, 114909, 114911, 114915, 114973, 114974, 115001, 115033, 115043, 115081, 115172, 115328, 115342, 115353, 115359, 115360, 115361, 115363, 115364, 115365, 116171, 116172, 116187, 116204, 116205, 116206, 116306, 116336, 116341, 116598, 116633, 116653, 116679, 116712, 116713, 116723, 116724, 116930, 116939, 116940, 116941, 116942, 116943, 117153, 117154, 117155, 117156, 117157, 117201, 117221, 117298, 117303, 117334, 117624, 117667, 117838, 117924, 118125, 118127, 118147, 118148, 118150, 118287, 118293, 118331, 118336, 118338, 118339, 118478, 118479, 118600, 118602, 118687, 118688, 118754, 118755, 118756, 118757, 118979, 118995, 119412, 119413, 119414, 119492, 119661, 119838, 120036, 120251, 120252, 120369, 120376, 125452, 125472, 125795, 125796, 125878, 126016, 126089, 126373, 126378, 126451, 126466, 126467, 126491, 126678, 126695, 126696, 126700, 126760, 126774, 126810, 126996, 126997, 126998, 127091, 127094, 127371, 127375, 127488, 127681, 127814, 127815, 127885, 127887, 128038, 128039, 128078, 128079, 128358, 128434, 128482, 128575, 128778, 128779, 128806, 128859, 128913, 128928, 128948, 129116, 129121, 129673, 129788, 129930, 129932, 129942, 130064, 130176, 130596, 133026, 133761, 134855, 136005, 136326, 136327, 136328, 136329, 136657, 136707, 136837, 136890, 137018, 137019, 137069, 137226, 137229, 137256, 137278, 137329, 137332, 137367, 137408, 138612, 138763, 138882, 139014, 139136, 139137, 139164, 139380, 139463, 139484, 139486, 139490, 139517, 140073, 140074, 140153, 140356, 140694, 140695, 140699, 140771, 140772, 140784, 140799, 140802, 140845, 140853, 140950, 140970, 140990, 141078, 141087, 141090, 141108, 141111, 141141, 141170, 141200, 141201, 141202, 141205, 141206, 141215, 141443, 141455, 141459, 141523, 141578, 141601, 141655, 141657, 141658, 141775, 141841, 141843, 141844, 141845, 141846, 141847, 141848, 141849, 141898, 141917, 141918, 141919, 141920, 141921, 142061, 142520, 142529, 142632, 142639, 143160, 143816, 143969, 143970, 143971, 143972, 143973, 143984, 143985, 144036, 144037, 144038, 144040, 144041, 144048, 144064, 144067, 144080, 144081, 144103, 144107, 144110, 144290, 144822, 144823, 144920, 144933, 144992, 145304, 145306, 145606, 146236, 146288, 146467, 146661, 146772, 146819, 146950, 147164, 147172, 147173, 147174, 147215, 147230, 147262, 147300, 147301, 147336, 147343, 147350, 147363, 147376, 147377, 147413, 147418, 147469, 147509, 147546, 147580, 147602, 147604, 147606, 147860, 147861, 148465, 148505, 148713, 149158, 151323, 152965, 152968, 153410, 153721, 154506, 154593, 154595, 154721, 154740, 154765, 154862, 154871, 154872, 154873, 155071, 155142, 155541, 155584, 155588, 155711, 156517, 157019, 157150, 157308, 157481, 157635, 157698, 157777, 160150, 160151, 160637, 160728, 160837, 161018, 161188, 161203, 161205, 161260, 161300, 161304, 161316, 161351, 161507, 161518, 161527, 161571, 161594, 161635, 161644, 161725, 161733, 161744, 161769, 161774, 161915, 161943, 161948, 161985, 161986, 161991, 162011, 162525, 162675, 162681, 162945, 162949, 163032, 163050, 163052, 163054, 163056, 163059, 163060, 163063, 163073, 163104, 163108, 163115, 163116, 163276, 163495, 163496, 163523, 163524, 163625, 163637, 163691, 163728, 163761, 163827, 163835, 163882, 163955, 164291, 164444, 164499, 164500, 164506, 165032, 165153, 165918, 165919, 165920, 165921, 166318, 166319, 166321, 166322, 166323, 166917, 167172, 167175, 167263, 167264, 167360, 167447, 167448, 167449, 167450, 167451, 167506, 167586, 176934, 176935, 176937, 176940, 177209, 177211, 177634, 177635, 177636, 177637, 177638, 177690, 177692, 177693, 177696, 177768, 178159, 178284, 178508, 178509, 178511, 178529, 178530, 178816, 179091, 179096, 179100, 179102, 179103, 179112, 179129, 179164, 179170, 179300, 179302, 179304, 179305, 179306, 179307, 179343, 179347, 179350, 179431, 179432, 179640, 179730, 179732, 179733, 179769, 179868, 180054, 180066, 180290, 180326)";
	
	Запрос.УстановитьПараметр("ТекДата",НачалоДня(ТекущаяДата()));		
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	
	ЗаписьXML.ДобавитьСтроку("<document>"); 
	
	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "SPECIAL_MOTIVATION"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<special_motivation>");
	//id_goods
	//cost_rtl_w_vat_pack
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
		ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(Выборка.КодТовара,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</special_motivation>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	
	Пока ВыборкаАптек.Следующий() Цикл
		
		#Если Клиент Тогда 
			н = н+1;
			Если н%10 = 0 Тогда
				Состояние(""+н+" из " + Всего);
			КонецЕсли;
		#КонецЕсли
		
		ЗаписатьУпаковкуВРегистрОбмена(ВыборкаАптек.Аптека, "SPECIAL_MOTIVATION" , ТекстУпаковки , "7_5" );
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ВыгрузитьСпециальныеЦены_4_5(Аптека)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	МестаХранения.Код,
	|	МестаХранения.Ссылка КАК Аптека
	|ИЗ
	|	Справочник.МестаХранения КАК МестаХранения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
	|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
	|ГДЕ
	|	МестаХранения.ПометкаУдаления = ЛОЖЬ
	|	И СостоянияПодписчиков.Активна = ИСТИНА
	|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
	|	И МестаХранения.Бренд.ПроцентМотивации = 4.5
	| " + ?(Аптека=Неопределено,"", "И МестаХранения.Ссылка = &Аптека") + "					   
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	МестаХранения.Код,
	|	МестаХранения.Ссылка
	|ИЗ
	|	Справочник.МестаХранения КАК МестаХранения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
	|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
	|ГДЕ
	|	МестаХранения.ПометкаУдаления = ЛОЖЬ
	|	И СостоянияПодписчиков.Активна = ИСТИНА
	|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
	|	И МестаХранения.Бренд.ПроцентМотивации = 3
	|	И МестаХранения.Бренд <> &Бренд	
	| " + ?(Аптека=Неопределено,"", "И МестаХранения.Ссылка = &Аптека") + "
	|";
	
	Запрос.УстановитьПараметр("Аптека",Аптека);
	Запрос.УстановитьПараметр("Бренд",Справочники.БрендыАптечныхСетей.НайтиПоКоду(4)); //АВЕ луксури			
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	ВыборкаАптек = Рез.Выбрать();
	Всего = ВыборкаАптек.Количество();
	н=0;
	
	
	
	Запрос.Текст =   "ВЫБРАТЬ
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Код  как КодТовара
	|ИЗ
	|	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	|ГДЕ
	|	АССОРТИМЕНТНЫЙ_ПЛАН.Код В (2015, 4061, 4062, 4067, 4108, 4110, 4111, 4112, 4167, 4176, 4182, 4197, 4241, 4243, 4248, 4250, 4262, 4269, 4274, 4279, 4299, 4300, 4314, 4341, 4350, 4359, 4543, 4605, 4608, 4609, 4617, 4637, 4640, 4676, 4679, 4729, 4750, 4817, 4821, 5411, 5429, 5432, 5487, 5493, 5517, 5539, 5593, 5605, 5606, 5608, 5609, 5613, 5616, 5638, 5639, 5694, 5719, 5835, 5840, 5846, 5879, 5891, 5899, 5943, 5992, 6069, 6134, 6146, 6159, 6177, 6261, 6312, 6319, 6351, 6352, 6353, 6361, 6365, 6367, 6371, 6372, 6375, 6404, 6438, 6536, 6686, 6687, 6688, 6689, 6691, 7083, 7087, 7280, 7300, 7414, 7921, 7990, 8015, 8136, 8179, 8220, 8221, 8357, 14346, 14347, 14348, 14377, 14379, 14386, 14389, 14397, 14398, 14442, 14445, 14478, 14495, 14538, 14678, 14687, 14792, 14795, 14826, 14831, 14860, 15087, 15233, 15631, 19352, 19359, 19430, 19473, 20150, 20279, 20401, 22319, 22411, 22643, 22665, 22668, 22794, 23329, 35087, 35462, 35530, 35858, 35946, 36428, 37339, 37517, 37545, 37836, 37883, 37916, 38089, 38165, 38279, 38907, 39509, 40015, 40371, 40426, 40427, 40432, 40638, 40659, 41217, 41274, 41320, 41371, 42042, 42202, 42262, 42399, 43038, 43069, 43103, 43122, 43340, 43605, 44417, 44655, 44707, 44784, 45827, 45835, 46291, 46394, 46578, 48056, 48236, 48429, 48735, 49521, 50524, 50928, 51011, 51537, 52298, 52497, 53105, 53415, 53426, 53462, 53729, 54105, 54110, 56180, 56245, 57210, 57533, 57901, 58288, 58290, 58861, 60071, 60196, 60694, 60755, 60924, 61245, 62500, 64147, 64150, 64258, 64598, 64696, 67175, 67898, 67961, 68022, 68957, 69376, 69471, 69910, 70032, 70339, 71123, 71240, 71298, 72039, 72137, 73355, 73565, 73690, 74234, 74748, 75033, 75034, 75037, 75041, 76171, 76358, 76963, 77628, 77631, 77731, 77828, 78870, 78871, 78872, 78888, 78889, 78891, 79116, 79134, 79324, 79325, 79412, 79624, 80299, 80378, 80379, 81407, 82813, 83416, 83417, 83467, 83627, 84044, 84048, 84049, 84069, 84358, 84441, 84660, 84705, 84791, 85328, 85331, 85332, 85664, 85892, 86702, 86793, 86822, 86823, 86847, 86953, 86954, 86955, 86956, 86964, 86972, 87309, 87324, 87325, 87495, 87496, 89153, 89611, 90065, 90452, 91665, 91672, 92215, 92653, 93646, 94648, 95619, 95715, 95831, 96041, 96050, 96103, 96943, 96958, 98366, 98472, 98619, 98724, 101069, 102725, 102738, 103564, 105910, 108489, 110718, 111025, 111641, 112594, 115043, 115081, 115172, 115342, 115353, 116171, 116172, 116633, 116723, 116724, 116930, 117838, 118293, 118687, 118688, 118754, 118755, 118756, 118757, 125878, 128038, 128039, 128358, 128575, 128778, 128779, 128806, 128859, 129116, 129121, 129673, 129788, 130596, 137019, 137226, 137408, 138882, 139136, 139137, 139164, 139380, 140153, 140799, 140970, 141775, 141841, 141843, 141844, 141845, 141846, 141847, 141848, 141849, 142061, 142520, 143160, 143984, 143985, 144107, 144110, 146288, 146467, 146661, 146772, 146950, 147262, 148713, 154740, 154862, 155071, 155588, 157698, 157777, 160637, 165032, 165153, 165918, 165919, 165920, 165921, 167586, 176934, 176935, 176937, 176940, 177634, 177635, 177636, 177690, 177692, 177693, 177696, 179343, 179347, 179350, 179431, 179432, 179730, 179769, 179868)";
	
	Запрос.УстановитьПараметр("ТекДата",НачалоДня(ТекущаяДата()));		
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "SPECIAL_MOTIVATION"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<special_motivation>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(Выборка.КодТовара,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</special_motivation>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	
	Пока ВыборкаАптек.Следующий() Цикл
		
		#Если Клиент Тогда 
			н = н+1;
			Если н%10 = 0 Тогда
				Состояние(""+н+" из " + Всего);
			КонецЕсли;
		#КонецЕсли
		
		ЗаписатьУпаковкуВРегистрОбмена(ВыборкаАптек.Аптека, "SPECIAL_MOTIVATION" , ТекстУпаковки , "4_5" );
	КонецЦикла;

	
	
КонецПроцедуры

Процедура ВыгрузитьСпециальныеЦены(Аптека = Неопределено ) Экспорт
	 //Двойная мотивация
	 //ВыгрузитьСпециальныеЦены_4_5(Аптека);
	 //ВыгрузитьСпециальныеЦены_7_5(Аптека);
	
КонецПроцедуры
 
Процедура ВыгрузитьТоварыСТМ_БезПриорити(Аптека = Неопределено) Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ
	                 |	ТоварыСТМСрезПоследних.Товар.Код КАК ТоварКод
	                 |ИЗ
	                 |	РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	                 |ГДЕ
	                 |	ТоварыСТМСрезПоследних.ТипСТМ В (ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.СТМ), ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.УсловныйСТМ))
	                 |
	                 |УПОРЯДОЧИТЬ ПО
	                 |	ТоварКод";
					 
		
			
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "OWN_BRAND_STRICT"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<own_brand_strict>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(Выборка.ТоварКод,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</own_brand_strict>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "OWN_BRAND_STRICT" , ТекстУпаковки );

	
КонецПроцедуры

Процедура ВыгрузитьМатрицы(Аптека = Неопределено)
	
	
	Запрос = Новый Запрос;
	Если Аптека = Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	СостоянияПодписчиков.КодАптеки КАК КодАптеки,
		               |	МестаХранения.Ссылка КАК Аптека
		               |ИЗ
		               |	РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
		               |		ПО СостоянияПодписчиков.КодАптеки = МестаХранения.Код
		               |ГДЕ
		               |	СостоянияПодписчиков.Активна = ИСТИНА
		               |	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	КодАптеки";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	СостоянияПодписчиков.КодАптеки КАК КодАптеки,
		|	МестаХранения.Ссылка как Аптека
		|ИЗ
		|	РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
		|		ПО СостоянияПодписчиков.КодАптеки = МестаХранения.Код
		|ГДЕ
		|	СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ и СостоянияПодписчиков.КодАптеки = &КодАптеки
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодАптеки";	
		Запрос.УстановитьПараметр("КодАптеки",Аптека.Код);
	КонецЕсли;
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаАптек = Рез.Выбрать();
	
	
	Запрос.Текст =   "ВЫБРАТЬ
	                 |	Матрица.Товар.Код КАК КодТовара,
	                 |	Матрица.Товар.Наименование КАК Наименование,
	                 |	ПОДСТРОКА(Матрица.ГруппаАПИтог, 1, 1) КАК ГруппаАП,
	                // |	Матрица.Товар.СтавкаНДС.Ставка КАК СтавкаНДС
			  	     |	ВЫБОР
			  	     |		КОГДА Матрица.Товар.СтавкаНДС.Код = 3
			 	     |				И &Дата < ДАТАВРЕМЯ(2019, 1, 1)
			 	     |			ТОГДА 18
			  	     |		ИНАЧЕ Матрица.Товар.СтавкаНДС.Ставка
			  	     |	КОНЕЦ КАК СтавкаНДС 	
	                 |ИЗ
	                 |	РегистрСведений.Матрица КАК Матрица
	                 |ГДЕ
	                 |	Матрица.Аптека = &Аптека и НЕ Матрица.Товар.Код есть NULL и НЕ Матрица.Товар.СтавкаНДС.Ставка есть NULL";
	
	Пока ВыборкаАптек.Следующий() Цикл				 
		Запрос.УстановитьПараметр("Аптека",ВыборкаАптек.Аптека);			 
		Запрос.УстановитьПараметр("Дата",ТекущаяДата());			 
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		Выборка = Рез.Выбрать();
		
		
		ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	
		ЗаписьXML = Новый ЗаписьТекста(ИмяФайла,"windows-1251");

	
	
		ЗаписьXML.ЗаписатьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

		ЗаписьXML.ЗаписатьСтроку("<document>"); 
		
		
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "pack_type", "STOCK_MATRIX"); 
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "fmt_ver", "1"); 
		
		ЗаписьXML.ЗаписатьСтроку("<stock_matrix>");
		
		Пока Выборка.Следующий() Цикл
			ЗаписьXML.ЗаписатьСтроку("<row>");
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_goods",	Формат(Выборка.КодТовара,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "p_vat_rtl",	Формат(Выборка.СтавкаНДС,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "group_ap",	КорректировкаСпецСимволов(Выборка.ГруппаАП));				
			ЗаписьXML.ЗаписатьСтроку("</row>");		
		КонецЦикла;
		ЗаписьXML.ЗаписатьСтроку("</stock_matrix>"); 
		ЗаписьXML.ЗаписатьСтроку("</document>"); 
		
		ЗаписьXML.Закрыть();
		ОбщегоНазначения.Задержка(2);
		ЗаписьXML = Новый ЧтениеТекста(ИмяФайла,"windows-1251");
		ВесьТекст = ЗаписьXML.Прочитать();
		ЗаписьXML.Закрыть();
		УдалитьФайлы(ИмяФайла);

		
	
		МЗ = РегистрыСведений.ОфисАптекаЦелевые.СоздатьМенеджерЗаписи();
		МЗ.Код = 1;
		МЗ.КодАптеки = ВыборкаАптек.КодАптеки;
		МЗ.ТипУпаковки = "STOCK_MATRIX";
		МЗ.Приоритет = 1;
		МЗ.ВерсияФормата = 1;
		МЗ.ИмяФайла = "STOCK_MATRIX_" + СокрЛП(Формат(ВыборкаАптек.КодАптеки,"ЧГ=0"))  +  "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
		МЗ.ИдентификаторКодировки = 1;
		МЗ.ХМЛСтрока = ВесьТекст;
		МЗ.Записать();			
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ЗаписатьБлокАкционныхКарт(ЗаписьXML,ТЗКарт)
	
//<row>
//<id_dc_type>59</id_dc_type>
//<p_discount>0</p_discount>
//</row>	
	
	ЗаписьXML.ЗаписатьСтроку("<dc>");
	
	Для каждого стр из ТЗКарт Цикл
		ЗаписьXML.ЗаписатьСтроку("<row>");	
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_dc_type",	Формат(стр.КодКарты,"ЧГ=0; ЧН=0") );	
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "p_discount",	Формат(стр.ПроцентСкидки,"ЧГ=0; ЧН=0") );
		ЗаписьXML.ЗаписатьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ЗаписатьСтроку("</dc>"); 

	
КонецПроцедуры

Процедура ВыгрузитьРекламнуюАкцию(Аптека, Док) Экспорт
	
	НомерДокумента = Формат(Док.Номер,"ЧГ=0");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РА_РекламнаяАкция.Ссылка КАК Ссылка,
	               |	РА_РекламнаяАкция.Номер КАК Номер,
	               |	РА_РекламнаяАкция.КодовоеСлово КАК КодовоеСлово,
	               |	РА_РекламнаяАкция.Дата КАК Дата,
	               |	РА_РекламнаяАкция.ДатаНачала КАК ДатаНачала,
	               |	РА_РекламнаяАкция.ДатаОкончания КАК ДатаОкончания,
	               |	ЕСТЬNULL(РА_РекламнаяАкция.ОбластьДействияПоАптекам.Порядок, 0) КАК ОбластьДействияКод,
	               |	РА_РекламнаяАкция.ТипАкции.Порядок КАК ТипАкцииКод,
	               |	ЕСТЬNULL(РА_РекламнаяАкция.ВариантПредоставленияСкидки.Порядок, 0) КАК ВариантПредоставленияСкидкиКод,
	               |	РА_РекламнаяАкция.РазмерСкидки КАК РазмерСкидки,
	               |	ЕСТЬNULL(РА_РекламнаяАкция.ВариантИспользованияДК.Порядок, 0) КАК ОбластьДействияПоКартамКод,
	               |	ЕСТЬNULL(РА_РекламнаяАкция.СпособПредоставления.Порядок, 0) КАК СпособПредоставленияСкидкиКод,
	               |	ЕСТЬNULL(РА_РекламнаяАкция.КемПредоставляетсяСкидка.Порядок, 0) КАК КемПредоставляетсяСкидкаКод,
	               |	РА_РекламнаяАкция.Описание КАК Описание,
	               |	РА_РекламнаяАкция.ИДП КАК Подсказка,
	               |	РА_РекламнаяАкция.УсловияИтДляОтфСтрок КАК УсловияИтДляОтфСтрок,
	               |	РА_РекламнаяАкция.ОбластьДействияПоАптекам КАК ОбластьДействияПоАптекам,
	               |	РА_РекламнаяАкция.НеУчаствуетВРасчетеСРН КАК НеУчаствуетВРасчетеСРН,
	               |	РА_РекламнаяАкция.КодовоеСловоДляПечати КАК КодовоеСловоДляПечати,
	               |	РА_РекламнаяАкция.ТекстВЧек КАК ТекстВЧек,
	               |	ЕСТЬNULL(РА_РекламнаяАкция.ИнформационнаяАкция.КодовоеСловоДляПечати,"""") КАК КодовоеСловоДляПечатиИнфоАкции
	               |ИЗ
	               |	Документ.РА_РекламнаяАкция КАК РА_РекламнаяАкция
	               |ГДЕ
	               |	РА_РекламнаяАкция.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Док);
	Рез = Запрос.Выполнить();
	Выборка = Рез.Выбрать();
	
	
	ТХТ="ВЫБРАТЬ
	    |	СписокАптек.Склад.Код КАК КодАптеки
	    |ИЗ
	    |	Документ.РА_РекламнаяАкция.СписокАптек КАК СписокАптек
	    |ГДЕ
	    |	СписокАптек.Ссылка = &Ссылка
	    |	И НЕ СписокАптек.Ссылка.ОбластьДействияПоАптекам = ЗНАЧЕНИЕ(Перечисление.ОбластиДействия.ВсеАптеки)";
	
		
	Запрос.Текст=ТХТ;
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		ЕстьАптеки = Ложь;
	Иначе
		ЕстьАптеки = Истина;
	КонецЕсли;
	
	Если ЕстьАптеки Тогда
		ВыборкаАптек = Рез.Выбрать();
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Условия.НомерСтроки КАК НомерСтроки,
	               |	Условия.ОператорОбъединения1,
	               |	Условия.ОткрывающаяСкобка,
	               |	Условия.ЛеваяЧасть,
	               |	Условия.Оператор,
	               |	Условия.ПраваяЧасть,
	               |	Условия.ПраваяЧастьХЗ,
	               |	Условия.ЗакрывающаяСкобка,
	               |	Условия.ОператорОбъединения2,
	               |	Условия.ИспользоватьДляПодсказки
	               |ИЗ
	               |	Документ.РА_РекламнаяАкция.УсловияПримененияПострочно КАК Условия
	               |ГДЕ
	               |	Условия.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки";
				   
	ТЗУсловий = Запрос.Выполнить().Выгрузить();		
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Условия.НомерСтроки КАК НомерСтроки,
	               |	Условия.ОператорОбъединения1,
	               |	Условия.ОткрывающаяСкобка,
	               |	Условия.ЛеваяЧасть,
	               |	Условия.АгрегатнаяФункция,
	               |	Условия.Оператор,
	               |	Условия.ПраваяЧасть,
	               |	Условия.ПраваяЧастьХЗ,
	               |	Условия.ЗакрывающаяСкобка,
	               |	Условия.ОператорОбъединения2
	               |ИЗ
	               |	Документ.РА_РекламнаяАкция.УсловияПримененияИтоги КАК Условия
	               |ГДЕ
	               |	Условия.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки";
				   
	ТЗУсловийИтогов = Запрос.Выполнить().Выгрузить();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РА_РекламнаяАкцияКарты.НомерСтроки КАК НомерСтроки,
	               |	РА_РекламнаяАкцияКарты.ТипДК.Код как КодКарты,
	               |	РА_РекламнаяАкцияКарты.ТипДК.ПроцентСкидки  как ПроцентСкидки
	               |ИЗ
	               |	Документ.РА_РекламнаяАкция.Карты КАК РА_РекламнаяАкцияКарты
	               |ГДЕ
	               |	РА_РекламнаяАкцияКарты.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки";
				   
	ТЗКарт = Запрос.Выполнить().Выгрузить();
	
	
	Выборка.Следующий();
	ОбластьДействия = Выборка.ОбластьДействияПоАптекам;
	//ВремКаталог = "Y:\aptretail\aptrtlra\Xml\Promo\2602\";//КаталогВременныхФайлов();
	//ИмяФайла =  "PROMO_" + СокрЛП(Формат(2602,"ЧГ=0")) + "_" + НомерДокумента +  "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьXML = Новый ЗаписьТекста(ИмяФайла,"windows-1251");
	
	
	ЗаписьXML.ЗаписатьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ЗаписатьСтроку("<document>"); 
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "pack_type", "PROMO"); 
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ЗаписатьСтроку("<hdr>");        
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id",	Формат(Выборка.Номер,"ЧГ=0; ЧН=0") );
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "guid",	XMLСтрока(Док) );
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "ndoc",	Формат(Выборка.Номер,"ЧГ=0; ЧН=0") );
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "ddoc",	Формат(Выборка.Дата,"ДФ=dd.MM.yyyy") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "status",	"3" );
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "sdate",	Формат(Выборка.ДатаНачала,"ДФ=dd.MM.yyyy") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "edate",		Формат(Выборка.ДатаОкончания,"ДФ=dd.MM.yyyy") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "descr",		КорректировкаСпецСимволов(Лев(СокрЛП(Выборка.Описание),150)));
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "ozon_password",	КорректировкаСпецСимволов(СокрЛП(Выборка.КодовоеСлово)));
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "cash_hint",	КорректировкаСпецСимволов(СокрЛП(Выборка.Подсказка)));
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "scope_dep",	Формат(Выборка.ОбластьДействияКод,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "scope_dc",	Формат(Выборка.ОбластьДействияПоКартамКод,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "scope_total",	Формат(Число(Выборка.УсловияИтДляОтфСтрок),"ЧГ=0; ЧН=0") );		
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_type",		Формат(Выборка.ТипАкцииКод,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_dc_method",Формат(Выборка.СпособПредоставленияСкидкиКод,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_dc_option",Формат(Выборка.ВариантПредоставленияСкидкиКод,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_discount_source",Формат(Выборка.КемПредоставляетсяСкидкаКод,"ЧГ=0; ЧН=0") );
		Если Выборка.ВариантПредоставленияСкидкиКод = 0 Тогда // Процент от суммы
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "p_discount",	Формат(Выборка.РазмерСкидки,"ЧГ=0; ЧН=0") );
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "sum_discount",	"0");
		Иначе
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "p_discount",	"0" );
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "sum_discount",	Формат(Выборка.РазмерСкидки,"ЧГ=0; ЧН=0"));
		КонецЕсли;
		
		//Если ЭтоКопия Тогда
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "asm_exclude", Формат(Число(Выборка.НеУчаствуетВРасчетеСРН),"ЧН=0")); 	
		//КонецЕсли;
		
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "banner",		КорректировкаСпецСимволов(СокрЛП(Выборка.ТекстВЧек)));
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "banner_password",	КорректировкаСпецСимволов(СокрЛП(Выборка.КодовоеСловоДляПечати)));
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "discount_password",	КорректировкаСпецСимволов(СокрЛП(Выборка.КодовоеСловоДляПечатиИнфоАкции)));
		
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "dsc",	"");
	ЗаписьXML.ЗаписатьСтроку("</hdr>");
	
	ЗаписьXML.ЗаписатьСтроку("<week/>");
	
	ЗаписатьБлокАкционныхКарт(ЗаписьXML,ТЗКарт);

	Если ЕстьАптеки Тогда
		ЗаписьXML.ЗаписатьСтроку("<dep>");
		
		Пока ВыборкаАптек.Следующий() Цикл
			ЗаписьXML.ЗаписатьСтроку("<row>");	
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_dep",	Формат(ВыборкаАптек.КодАптеки,"ЧГ=0; ЧН=0") );				
			ЗаписьXML.ЗаписатьСтроку("</row>");
		КонецЦикла;
		ЗаписьXML.ЗаписатьСтроку("</dep>"); 
	Иначе
		ЗаписьXML.ЗаписатьСтроку("<dep/>"); 
	КонецЕсли;
	
	Если ТЗУсловий.Количество() > 0 Тогда
		//Выборка.Сбросить();
		ЗаписатьБлокУсловийПримененийДляАкций(ЗаписьXML,ТЗУсловий,Выборка);
	КонецЕсли;
	Если ТЗУсловийИтогов.Количество() > 0 Тогда
		//Выборка.Сбросить();
		ЗаписатьБлокИтоговПримененийДляАкций(ЗаписьXML,ТЗУсловийИтогов,Выборка);
	КонецЕсли;

	ЗаписьXML.ЗаписатьСтроку("<present/>");
	ЗаписьXML.ЗаписатьСтроку("</document>"); //конец записи секции  "document"
	
	ЗаписьXML.Закрыть();
	ЗаписьXML = Новый ЧтениеТекста(ИмяФайла,"windows-1251");
	
	ТекстУпаковки = ЗаписьXML.Прочитать();
	ЗаписьXML.Закрыть();	
	Попытка
		УдалитьФайлы(ИмяФайла);
	Исключение
		#Если Клиент Тогда
			Сообщить(ОписаниеОшибки());	
		#КонецЕсли
	КонецПопытки;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "PROMO" , ТекстУпаковки , НомерДокумента );

	
КонецПроцедуры

Процедура ВыгрузитьРекламныеАкции(Аптека = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РА_РекламнаяАкция.Ссылка, Номер
	               |ИЗ
	               |	Документ.РА_РекламнаяАкция КАК РА_РекламнаяАкция
	               |ГДЕ
	               |	РА_РекламнаяАкция.Проведен = Истина
	               |	И РА_РекламнаяАкция.ДатаОкончания >= &ТекДата
	               |	И РА_РекламнаяАкция.РазмерСкидки >= 0 
				   |УПОРЯДОЧИТЬ ПО Номер";
	Запрос.УстановитьПараметр("ТекДата",КонецДня(ТекущаяДата())+1);


	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	Всего = ВЫборка.Количество();
	н=0;
	Пока Выборка.Следующий() Цикл
		н=н+1;
		#Если Клиент Тогда
			Состояние("номер акции: " + Формат(Выборка.Номер,"ЧГ=0") + " п/н - "  + н + " из " + Всего);
			ОбработкаПрерыванияПользователя();
		#КонецЕсли
		ВыгрузитьРекламнуюАкцию(Аптека, Выборка.Ссылка);	
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ВыгрузитьДопМотивацию3Процента(Аптека)
	
	Запрос = Новый Запрос;
	Если Аптека = Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	МестаХранения.Код,
		|	МестаХранения.Ссылка КАК Аптека
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		|ГДЕ
		|	МестаХранения.ПометкаУдаления = ЛОЖЬ
		|	И СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		|	И МестаХранения.Бренд.ПроцентМотивации = 3
		|	И МестаХранения.Бренд = &Бренд
		|";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	МестаХранения.Код,
		|	МестаХранения.Ссылка КАК Аптека
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		|ГДЕ
		|	МестаХранения.ПометкаУдаления = ЛОЖЬ
		|	И СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		|	И МестаХранения.Бренд.ПроцентМотивации = 3
		|	И МестаХранения.Бренд = &Бренд
		|	И МестаХранения.Код в  (&КодАптеки)
		|";
		Запрос.УстановитьПараметр("КодАптеки",Аптека.Код);

	КонецЕсли;
				   
	Запрос.УстановитьПараметр("Бренд",Справочники.БрендыАптечныхСетей.НайтиПоКоду(4)); //АВЕ луксури				   
				   
	 Рез = Запрос.Выполнить();
	 Если Рез.Пустой() Тогда
		 Возврат;
	 КонецЕсли;
	 ВыборкаАптек = Рез.Выбрать();
	 Всего = ВыборкаАптек.Количество();
	
	
	
	
	Запрос.Текст =   "ВЫБРАТЬ
	                 |	ТоварыСТМСрезПоследних.Товар.Код КАК Код
	                 |ИЗ
	                 |	РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	                 |ГДЕ
	                 |	ТоварыСТМСрезПоследних.ТипСТМ <> ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.НеСТМ)
	                 |	И НЕ ТоварыСТМСрезПоследних.Товар В
	                 |				(ВЫБРАТЬ
	                 |					ТоварыСТМСрезПоследних.Товар
	                 |				ИЗ
	                 |					РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	                 |				ГДЕ
	                 |					ТоварыСТМСрезПоследних.ТипСТМ = ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.Приорити)
	                 |					И НАЧАЛОПЕРИОДА(ТоварыСТМСрезПоследних.Период, ДЕНЬ) = ДАТАВРЕМЯ(2016, 12, 16))";
	
	//Запрос.Текст =   "ВЫБРАТЬ
	//                 |	ТоварыСТМСрезПоследних.Товар.Код КАК Код
	//                 |ИЗ
	//                 |	РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	//                 |ГДЕ
	//                 |	ТоварыСТМСрезПоследних.ТипСТМ <> ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.НеСТМ)
	//                 |
	//                 |УПОРЯДОЧИТЬ ПО
	//                 |	Код";

	
	
	Рез = Запрос.Выполнить();
	 Выборка = Рез.Выбрать();
	 #Если Клиент Тогда
	 	Сообщить("количество позиций : " + Выборка.Количество());
	#КонецЕсли
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "OWN_BRAND"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<own_brand>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</own_brand>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ВесьТекст = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;

	 н=0;
	 Пока ВыборкаАптек.Следующий() Цикл
		 
		н = н+1;
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
			Если н%10 = 0 Тогда
				Состояние(""+н+" из " + Всего);
			КонецЕсли;
		#КонецЕсли 
		КодСклада = ВыборкаАптек.Код;
		КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
		Если КодСчетчика = -1 Тогда
			КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
			Если КодСчетчика = -1 Тогда
				Возврат ;	
			КонецЕсли;
		КонецЕсли;
		
		МЗ = РегистрыСведений.ОфисАптекаЦелевые.СоздатьМенеджерЗаписи();
		МЗ.Код = КодСчетчика;
		МЗ.КодАптеки = КодСклада;
		МЗ.ТипУпаковки = "OWN_BRAND";
		МЗ.Приоритет = 1;
		МЗ.ВерсияФормата = 1;
		МЗ.ИмяФайла = "OWN_BRAND_3_" + СокрЛП(Формат(КодСклада,"ЧГ=0"))  +  "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
		МЗ.ИдентификаторКодировки = 1;
		МЗ.ХМЛСтрока = ВесьТекст;
		МЗ.Записать();		 
		 
		 
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ВыгрузитьДопМотивацию7_5Процента(Аптека)
	
	Запрос = Новый Запрос;
	
	Если Аптека = Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	МестаХранения.Код,
		|	МестаХранения.Ссылка КАК Аптека
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		|ГДЕ
		|	МестаХранения.ПометкаУдаления = ЛОЖЬ
		|	И СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		|	И МестаХранения.Бренд.ПроцентМотивации = 7.5
		|";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	МестаХранения.Код,
		|	МестаХранения.Ссылка КАК Аптека
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		|ГДЕ
		|	МестаХранения.ПометкаУдаления = ЛОЖЬ
		|	И СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		|	И МестаХранения.Бренд.ПроцентМотивации = 7.5
		|	И МестаХранения.Код в  (&КодАптеки)
		|";
		Запрос.УстановитьПараметр("КодАптеки",Аптека.Код);

	КонецЕсли;

				   
	 Рез = Запрос.Выполнить();
	 Если Рез.Пустой() Тогда
		 Возврат;
	 КонецЕсли;
	 
	 ВыборкаАптек = Рез.Выбрать();
	 Всего = ВыборкаАптек.Количество();
				   
		
	
	Запрос.Текст =   "ВЫБРАТЬ
	                 |	ТоварыСТМСрезПоследних.Товар.Код КАК Код
	                 |ИЗ
	                 |	РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	                 |ГДЕ
	                 |	ТоварыСТМСрезПоследних.ТипСТМ <> ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.НеСТМ)
	                 |
	                 |ОБЪЕДИНИТЬ
	                 |
	                 |ВЫБРАТЬ
	                 |	АП.Код
	                 |ИЗ
	                 |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	                 |ГДЕ
	                 |	АП.Код В (148, 182, 185, 1010, 1020, 1021, 1022, 1023, 1025, 1028, 1031, 1111, 1191, 1315, 1316, 1317, 1318, 1513, 1525, 1553, 2015, 2064, 2078, 2082, 2089, 2126, 2300, 2547, 2772, 2817, 2827, 2917, 2918, 2920, 2921, 2923, 2931, 2948, 2955, 2956, 2958, 2969, 2974, 3004, 3028, 3035, 3036, 3203, 3219, 3220, 3221, 3490, 3491, 3501, 3503, 3505, 3506, 3507, 3508, 3509, 3511, 3512, 3515, 3518, 3522, 3523, 3545, 3547, 3548, 3550, 3553, 3556, 3557, 3566, 3574, 3579, 3584, 3586, 3592, 3595, 3597, 3601, 3602, 3616, 3628, 3636, 3644, 3647, 3657, 3660, 3666, 3669, 3672, 3677, 3708, 3727, 3752, 3753, 3793, 3794, 3803, 3814, 3840, 3898, 3899, 3908, 3970, 3971, 3974, 4061, 4062, 4067, 4108, 4110, 4111, 4112, 4167, 4176, 4182, 4197, 4241, 4243, 4248, 4250, 4262, 4269, 4274, 4279, 4299, 4300, 4314, 4341, 4350, 4359, 4543, 4553, 4554, 4605, 4608, 4609, 4617, 4637, 4640, 4676, 4679, 4729, 4750, 4817, 4821, 4827, 4853, 4854, 4943, 4956, 4958, 4962, 4963, 5014, 5040, 5042, 5163, 5316, 5317, 5318, 5339, 5361, 5378, 5411, 5429, 5432, 5487, 5493, 5517, 5539, 5593, 5605, 5606, 5608, 5609, 5613, 5616, 5638, 5639, 5694, 5719, 5835, 5840, 5846, 5879, 5891, 5899, 5943, 5992, 6069, 6134, 6146, 6159, 6177, 6261, 6312, 6319, 6351, 6352, 6353, 6361, 6365, 6367, 6371, 6372, 6375, 6404, 6433, 6438, 6536, 6686, 6687, 6688, 6689, 6691, 7083, 7087, 7280, 7300, 7414, 7921, 7990, 8015, 8136, 8179, 8220, 8221, 8357, 8360, 8477, 8556, 8614, 8640, 8668, 8735, 8738, 8746, 8753, 8759, 8767, 8789, 8860, 9131, 9138, 9139, 9143, 9145, 9149, 9164, 9166, 9167, 9168, 9169, 9170, 9172, 9177, 9178, 9186, 9227, 9232, 9891, 9895, 9899, 10798, 10814, 10821, 11068, 11069, 11070, 11078, 11080, 11994, 12113, 12117, 14325, 14346, 14347, 14348, 14377, 14379, 14386, 14389, 14397, 14398, 14442, 14445, 14478, 14495, 14518, 14538, 14678, 14687, 14761, 14792, 14795, 14826, 14831, 14860, 14973, 15059, 15087, 15233, 15460, 15608, 15631, 15653, 15668, 15669, 15670, 15776, 15778, 15891, 15892, 15894, 15895, 15896, 15921, 15925, 16041, 16161, 16224, 16226, 16227, 16293, 16367, 16374, 16438, 17109, 17169, 17173, 17306, 17517, 17544, 17610, 17641, 17681, 17683, 17685, 17686, 17688, 17718, 17843, 17876, 17879, 17964, 17986, 18179, 18188, 18191, 18197, 18198, 18223, 18292, 18328, 18487, 18524, 19020, 19023, 19024, 19031, 19217, 19304, 19352, 19359, 19366, 19423, 19430, 19473, 19545, 19683, 19715, 19837, 19852, 20014, 20134, 20150, 20244, 20279, 20326, 20327, 20401, 20621, 20636, 20827, 20845, 21023, 21050, 21140, 21337, 21631, 21733, 22035, 22115, 22319, 22381, 22411, 22497, 22643, 22665, 22668, 22794, 23006, 23158, 23278, 23329, 23630, 23658, 23718, 23748, 35020, 35021, 35084, 35087, 35176, 35249, 35259, 35301, 35462, 35464, 35517, 35530, 35552, 35679, 35680, 35686, 35687, 35713, 35858, 35946, 35970, 36040, 36051, 36054, 36157, 36178, 36188, 36229, 36253, 36364, 36365, 36428, 36468, 36564, 36570, 36760, 36800, 37014, 37032, 37144, 37330, 37339, 37517, 37520, 37531, 37533, 37545, 37623, 37624, 37628, 37631, 37632, 37633, 37634, 37635, 37712, 37714, 37716, 37758, 37836, 37853, 37878, 37883, 37889, 37912, 37916, 37917, 38089, 38165, 38189, 38190, 38191, 38231, 38279, 38356, 38424, 38425, 38426, 38587, 38711, 38782, 38907, 39229, 39439, 39444, 39503, 39509, 39605, 39615, 39797, 39800, 40013, 40015, 40021, 40031, 40170, 40216, 40290, 40371, 40426, 40427, 40432, 40494, 40495, 40609, 40610, 40629, 40638, 40647, 40659, 41013, 41022, 41025, 41034, 41036, 41037, 41038, 41206, 41217, 41224, 41228, 41230, 41274, 41277, 41286, 41320, 41371, 41444, 41589, 41590, 41720, 41766, 41768, 41775, 41776, 41777, 41779, 41781, 41782, 41783, 41786, 41788, 41790, 41791, 41792, 41795, 41797, 41805, 41898, 42042, 42144, 42202, 42262, 42325, 42333, 42399, 42582, 42718, 42736, 42889, 42932, 43038, 43069, 43096, 43103, 43122, 43129, 43260, 43264, 43340, 43529, 43573, 43580, 43583, 43584, 43586, 43589, 43590, 43603, 43605, 43796, 43995, 43996, 44000, 44008, 44055, 44073, 44084, 44085, 44086, 44087, 44088, 44090, 44091, 44092, 44109, 44215, 44216, 44347, 44349, 44417, 44465, 44523, 44524, 44527, 44528, 44536, 44541, 44555, 44557, 44560, 44655, 44707, 44712, 44784, 44977, 44988, 45024, 45122, 45151, 45163, 45179, 45180, 45181, 45191, 45215, 45336, 45467, 45807, 45827, 45835, 45977, 46291, 46394, 46397, 46421, 46578, 46605, 46640, 46841, 47618, 47724, 48041, 48056, 48236, 48237, 48362, 48426, 48429, 48502, 48529, 48531, 48735, 49210, 49521, 49716, 50036, 50046, 50524, 50648, 50928, 51011, 51207, 51537, 51556, 51565, 51591, 52080, 52298, 52497, 52720, 52990, 53034, 53105, 53298, 53415, 53426, 53462, 53537, 53622, 53729, 53767, 53872, 54080, 54105, 54110, 54747, 54876, 54877, 55084, 55086, 55320, 55801, 55956, 56015, 56090, 56180, 56214, 56245, 56251, 56257, 56713, 56825, 56836, 56885, 56886, 57033, 57136, 57210, 57257, 57258, 57269, 57307, 57318, 57380, 57397, 57427, 57533, 57901, 58119, 58223, 58288, 58290, 58546, 58815, 58861, 58882, 58889, 59038, 59157, 59168, 59422, 59702, 60029, 60071, 60196, 60559, 60608, 60694, 60755, 60866, 60924, 60941, 60959, 61089, 61165, 61175, 61176, 61187, 61245, 61260, 61279, 61430, 61704, 62059, 62232, 62437, 62438, 62439, 62500, 62781, 62899, 63535, 64147, 64150, 64151, 64258, 64288, 64290, 64342, 64353, 64596, 64598, 64696, 65467, 65565, 65688, 65723, 65853, 66005, 66167, 66508, 66512, 66513, 66514, 66516, 66517, 66520, 66521, 66522, 66523, 66524, 66525, 66526, 66534, 66535, 67014, 67015, 67021, 67144, 67175, 67210, 67258, 67287, 67288, 67309, 67552, 67565, 67573, 67667, 67834, 67885, 67887, 67898, 67901, 67961, 68022, 68036, 68040, 68272, 68367, 68699, 68957, 69039, 69289, 69292, 69293, 69374, 69376, 69469, 69471, 69910, 69925, 70007, 70008, 70009, 70010, 70011, 70012, 70013, 70015, 70016, 70032, 70060, 70333, 70339, 71055, 71123, 71182, 71240, 71247, 71274, 71287, 71288, 71294, 71298, 71340, 71341, 71377, 71391, 71392, 71393, 71554, 71809, 71946, 71947, 71961, 71968, 72039, 72040, 72042, 72137, 73184, 73186, 73190, 73226, 73355, 73361, 73424, 73445, 73545, 73562, 73565, 73591, 73603, 73604, 73606, 73690, 73823, 74110, 74234, 74328, 74329, 74330, 74331, 74332, 74333, 74334, 74593, 74748, 74876, 75033, 75034, 75037, 75041, 75048, 75320, 75401, 75752, 76057, 76130, 76168, 76171, 76358, 76664, 76745, 76784, 76963, 77191, 77343, 77344, 77617, 77628, 77631, 77731, 77828, 78020, 78057, 78096, 78836, 78870, 78871, 78872, 78888, 78889, 78891, 79116, 79134, 79324, 79325, 79412, 79451, 79478, 79624, 80299, 80378, 80379, 80527, 81004, 81193, 81407, 81439, 81450, 81495, 81569, 81735, 81773, 82010, 82016, 82096, 82215, 82313, 82374, 82401, 82495, 82617, 82691, 82813, 82853, 82981, 82988, 83409, 83416, 83417, 83467, 83627, 83730, 83831, 83859, 83860, 83861, 83868, 84044, 84048, 84049, 84061, 84069, 84327, 84328, 84358, 84404, 84441, 84456, 84485, 84654, 84660, 84705, 84791, 84962, 84963, 85052, 85093, 85175, 85299, 85328, 85331, 85332, 85664, 85892, 86225, 86233, 86500, 86513, 86516, 86697, 86702, 86793, 86822, 86823, 86824, 86847, 86883, 86884, 86885, 86886, 86887, 86888, 86889, 86890, 86891, 86892, 86895, 86906, 86953, 86954, 86955, 86956, 86964, 86972, 87032, 87155, 87244, 87286, 87287, 87303, 87309, 87324, 87325, 87426, 87443, 87495, 87496, 87636, 87640, 87646, 87648, 87655, 87656, 87771, 87780, 87994, 88096, 88134, 88255, 88389, 88460, 88654, 88696, 88697, 89153, 89488, 89525, 89611, 89614, 89629, 89705, 90065, 90200, 90452, 90563, 90576, 90577, 90578, 90597, 90847, 90972, 91099, 91139, 91356, 91608, 91617, 91665, 91672, 91841, 91995, 92174, 92215, 92364, 92653, 92726, 93039, 93113, 93391, 93646, 93748, 93996, 94648, 95164, 95432, 95494, 95619, 95715, 95831, 96041, 96050, 96103, 96116, 96117, 96197, 96821, 96943, 96958, 96991, 97026, 97121, 97122, 97262, 97635, 97643, 98304, 98366, 98472, 98619, 98724, 98834, 98941, 100213, 100401, 100402, 100766, 100855, 101069, 102725, 102738, 102747, 102748, 102749, 102750, 103374, 103405, 103407, 103409, 103410, 103414, 103417, 103564, 103956, 103958, 103970, 104074, 104254, 104660, 104662, 104664, 105254, 105910, 106099, 107761, 108489, 109818, 109875, 109889, 110681, 110710, 110718, 111025, 111032, 111144, 111594, 111595, 111596, 111641, 112017, 112035, 112455, 112594, 113361, 113766, 113770, 113996, 114070, 114072, 114073, 114075, 114077, 114082, 114409, 114410, 114412, 114413, 114414, 114475, 114719, 114825, 114909, 114911, 114915, 114973, 114974, 115001, 115033, 115043, 115081, 115172, 115328, 115342, 115353, 115359, 115360, 115361, 115363, 115364, 115365, 116171, 116172, 116187, 116204, 116205, 116206, 116306, 116336, 116341, 116598, 116633, 116653, 116679, 116712, 116713, 116723, 116724, 116930, 116939, 116940, 116941, 116942, 116943, 117153, 117154, 117155, 117156, 117157, 117201, 117221, 117298, 117303, 117334, 117624, 117667, 117838, 117924, 118125, 118127, 118147, 118148, 118150, 118287, 118293, 118331, 118336, 118338, 118339, 118478, 118479, 118600, 118602, 118687, 118688, 118754, 118755, 118756, 118757, 118979, 118995, 119412, 119413, 119414, 119492, 119661, 119838, 120036, 120251, 120252, 120369, 120376, 125452, 125472, 125795, 125796, 125878, 126016, 126089, 126373, 126378, 126451, 126466, 126467, 126491, 126678, 126695, 126696, 126700, 126760, 126774, 126810, 126996, 126997, 126998, 127091, 127094, 127371, 127375, 127488, 127681, 127814, 127815, 127885, 127887, 128038, 128039, 128078, 128079, 128358, 128434, 128482, 128575, 128778, 128779, 128806, 128859, 128913, 128928, 128948, 129116, 129121, 129673, 129788, 129930, 129932, 129942, 130064, 130176, 130596, 133026, 133761, 134855, 136005, 136326, 136327, 136328, 136329, 136657, 136707, 136837, 136890, 137018, 137019, 137069, 137226, 137229, 137256, 137278, 137329, 137332, 137367, 137408, 138612, 138763, 138882, 139014, 139136, 139137, 139164, 139380, 139463, 139484, 139486, 139490, 139517, 140073, 140074, 140153, 140356, 140694, 140695, 140699, 140771, 140772, 140784, 140799, 140802, 140845, 140853, 140950, 140970, 140990, 141078, 141087, 141090, 141108, 141111, 141141, 141170, 141200, 141201, 141202, 141205, 141206, 141215, 141443, 141455, 141459, 141523, 141578, 141601, 141655, 141657, 141658, 141775, 141841, 141843, 141844, 141845, 141846, 141847, 141848, 141849, 141898, 141917, 141918, 141919, 141920, 141921, 142061, 142520, 142529, 142632, 142639, 143160, 143816, 143969, 143970, 143971, 143972, 143973, 143984, 143985, 144036, 144037, 144038, 144040, 144041, 144048, 144064, 144067, 144080, 144081, 144103, 144107, 144110, 144290, 144822, 144823, 144920, 144933, 144992, 145304, 145306, 145606, 146236, 146288, 146467, 146661, 146772, 146819, 146950, 147164, 147172, 147173, 147174, 147215, 147230, 147262, 147300, 147301, 147336, 147343, 147350, 147363, 147376, 147377, 147413, 147418, 147469, 147509, 147546, 147580, 147602, 147604, 147606, 147860, 147861, 148465, 148505, 148713, 149158, 151323, 152965, 152968, 153410, 153721, 154506, 154593, 154595, 154721, 154740, 154765, 154862, 154871, 154872, 154873, 155071, 155142, 155541, 155584, 155588, 155711, 156517, 157019, 157150, 157308, 157481, 157635, 157698, 157777, 160150, 160151, 160637, 160728, 160837, 161018, 161188, 161203, 161205, 161260, 161300, 161304, 161316, 161351, 161507, 161518, 161527, 161571, 161594, 161635, 161644, 161725, 161733, 161744, 161769, 161774, 161915, 161943, 161948, 161985, 161986, 161991, 162011, 162525, 162675, 162681, 162945, 162949, 163032, 163050, 163052, 163054, 163056, 163059, 163060, 163063, 163073, 163104, 163108, 163115, 163116, 163276, 163495, 163496, 163523, 163524, 163625, 163637, 163691, 163728, 163761, 163827, 163835, 163882, 163955, 164291, 164444, 164499, 164500, 164506, 165032, 165153, 165918, 165919, 165920, 165921, 166318, 166319, 166321, 166322, 166323, 166917, 167172, 167175, 167263, 167264, 167360, 167447, 167448, 167449, 167450, 167451, 167506, 167586, 176934, 176935, 176937, 176940, 177209, 177211, 177634, 177635, 177636, 177637, 177638, 177690, 177692, 177693, 177696, 177768, 178159, 178284, 178508, 178509, 178511, 178529, 178530, 178816, 179091, 179096, 179100, 179102, 179103, 179112, 179129, 179164, 179170, 179300, 179302, 179304, 179305, 179306, 179307, 179343, 179347, 179350, 179431, 179432, 179640, 179730, 179732, 179733, 179769, 179868, 180054, 180066, 180290, 180326)";

	
	
	Рез = Запрос.Выполнить();
	 Выборка = Рез.Выбрать();
	 #Если Клиент Тогда
	 	Сообщить("количество позиций : " + Выборка.Количество());
	#КонецЕсли
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "OWN_BRAND"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<own_brand>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</own_brand>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ВесьТекст = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;

	
	 н=0;
	 Пока ВыборкаАптек.Следующий() Цикл
		 
		н = н+1;
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();

			Если н%10 = 0 Тогда
				Состояние(""+н+" из " + Всего);
			КонецЕсли;
		#КонецЕсли 
		КодСклада = ВыборкаАптек.Код;
		КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
		Если КодСчетчика = -1 Тогда
			КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
			Если КодСчетчика = -1 Тогда
				Возврат ;	
			КонецЕсли;
		КонецЕсли;
		
		МЗ = РегистрыСведений.ОфисАптекаЦелевые.СоздатьМенеджерЗаписи();
		МЗ.Код = КодСчетчика;
		МЗ.КодАптеки = КодСклада;
		МЗ.ТипУпаковки = "OWN_BRAND";
		МЗ.Приоритет = 1;
		МЗ.ВерсияФормата = 1;
		МЗ.ИмяФайла = "OWN_BRAND_7_5_" + СокрЛП(Формат(КодСклада,"ЧГ=0"))  +  "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
		МЗ.ИдентификаторКодировки = 1;
		МЗ.ХМЛСтрока = ВесьТекст;
		МЗ.Записать();		 
		 
		 
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ВыгрузитьДопМотивацию4_5Процента(Аптека)
	
	Запрос = Новый Запрос;
	
	Если Аптека = Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	МестаХранения.Код,
		|	МестаХранения.Ссылка КАК Аптека
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		|ГДЕ
		|	МестаХранения.ПометкаУдаления = ЛОЖЬ
		|	И СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		|	И МестаХранения.Бренд.ПроцентМотивации = 4.5
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	МестаХранения.Код,
		|	МестаХранения.Ссылка
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		|ГДЕ
		|	МестаХранения.ПометкаУдаления = ЛОЖЬ
		|	И СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		|	И МестаХранения.Бренд.ПроцентМотивации = 3
		|	И МестаХранения.Бренд <> &Бренд
		|";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	МестаХранения.Код,
		|	МестаХранения.Ссылка КАК Аптека
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		|ГДЕ
		|	МестаХранения.ПометкаУдаления = ЛОЖЬ
		|	И СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		|	И МестаХранения.Бренд.ПроцентМотивации = 4.5
		|	И МестаХранения.Код в  (&КодАптеки)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	МестаХранения.Код,
		|	МестаХранения.Ссылка
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		|ГДЕ
		|	МестаХранения.ПометкаУдаления = ЛОЖЬ
		|	И СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		|	И МестаХранения.Бренд.ПроцентМотивации = 3
		|	И МестаХранения.Бренд <> &Бренд
		|	И МестаХранения.Код в  (&КодАптеки)
		|";
			Запрос.УстановитьПараметр("КодАптеки",Аптека.Код);
	КонецЕсли;				   
	

	Запрос.УстановитьПараметр("Бренд",Справочники.БрендыАптечныхСетей.НайтиПоКоду(4)); //АВЕ луксури			   
	 Рез = Запрос.Выполнить();
	 Если Рез.Пустой() Тогда
		 Возврат;
	 КонецЕсли;
	 
	 ВыборкаАптек = Рез.Выбрать();
	 Всего = ВыборкаАптек.Количество();
	
	
	
	Запрос.Текст =   "ВЫБРАТЬ
	                 |	ТоварыСТМСрезПоследних.Товар.Код КАК Код
	                 |ИЗ
	                 |	РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	                 |ГДЕ
	                 |	ТоварыСТМСрезПоследних.ТипСТМ <> ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.НеСТМ)
	                 |	И НЕ ТоварыСТМСрезПоследних.Товар В
	                 |				(ВЫБРАТЬ
	                 |					ТоварыСТМСрезПоследних.Товар
	                 |				ИЗ
	                 |					РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	                 |				ГДЕ
	                 |					ТоварыСТМСрезПоследних.ТипСТМ = ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.Приорити)
	                 |					И НАЧАЛОПЕРИОДА(ТоварыСТМСрезПоследних.Период, ДЕНЬ) = ДАТАВРЕМЯ(2016, 12, 16))
	                 |
	                 |ОБЪЕДИНИТЬ
	                 |
	                 |ВЫБРАТЬ
	                 |	АП.Код
	                 |ИЗ
	                 |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	                 |ГДЕ
	                 |	АП.Код В (2015, 4061, 4062, 4067, 4108, 4110, 4111, 4112, 4167, 4176, 4182, 4197, 4241, 4243, 4248, 4250, 4262, 4269, 4274, 4279, 4299, 4300, 4314, 4341, 4350, 4359, 4543, 4605, 4608, 4609, 4617, 4637, 4640, 4676, 4679, 4729, 4750, 4817, 4821, 5411, 5429, 5432, 5487, 5493, 5517, 5539, 5593, 5605, 5606, 5608, 5609, 5613, 5616, 5638, 5639, 5694, 5719, 5835, 5840, 5846, 5879, 5891, 5899, 5943, 5992, 6069, 6134, 6146, 6159, 6177, 6261, 6312, 6319, 6351, 6352, 6353, 6361, 6365, 6367, 6371, 6372, 6375, 6404, 6438, 6536, 6686, 6687, 6688, 6689, 6691, 7083, 7087, 7280, 7300, 7414, 7921, 7990, 8015, 8136, 8179, 8220, 8221, 8357, 14346, 14347, 14348, 14377, 14379, 14386, 14389, 14397, 14398, 14442, 14445, 14478, 14495, 14538, 14678, 14687, 14792, 14795, 14826, 14831, 14860, 15087, 15233, 15631, 19352, 19359, 19430, 19473, 20150, 20279, 20401, 22319, 22411, 22643, 22665, 22668, 22794, 23329, 35087, 35462, 35530, 35858, 35946, 36428, 37339, 37517, 37545, 37836, 37883, 37916, 38089, 38165, 38279, 38907, 39509, 40015, 40371, 40426, 40427, 40432, 40638, 40659, 41217, 41274, 41320, 41371, 42042, 42202, 42262, 42399, 43038, 43069, 43103, 43122, 43340, 43605, 44417, 44655, 44707, 44784, 45827, 45835, 46291, 46394, 46578, 48056, 48236, 48429, 48735, 49521, 50524, 50928, 51011, 51537, 52298, 52497, 53105, 53415, 53426, 53462, 53729, 54105, 54110, 56180, 56245, 57210, 57533, 57901, 58288, 58290, 58861, 60071, 60196, 60694, 60755, 60924, 61245, 62500, 64147, 64150, 64258, 64598, 64696, 67175, 67898, 67961, 68022, 68957, 69376, 69471, 69910, 70032, 70339, 71123, 71240, 71298, 72039, 72137, 73355, 73565, 73690, 74234, 74748, 75033, 75034, 75037, 75041, 76171, 76358, 76963, 77628, 77631, 77731, 77828, 78870, 78871, 78872, 78888, 78889, 78891, 79116, 79134, 79324, 79325, 79412, 79624, 80299, 80378, 80379, 81407, 82813, 83416, 83417, 83467, 83627, 84044, 84048, 84049, 84069, 84358, 84441, 84660, 84705, 84791, 85328, 85331, 85332, 85664, 85892, 86702, 86793, 86822, 86823, 86847, 86953, 86954, 86955, 86956, 86964, 86972, 87309, 87324, 87325, 87495, 87496, 89153, 89611, 90065, 90452, 91665, 91672, 92215, 92653, 93646, 94648, 95619, 95715, 95831, 96041, 96050, 96103, 96943, 96958, 98366, 98472, 98619, 98724, 101069, 102725, 102738, 103564, 105910, 108489, 110718, 111025, 111641, 112594, 115043, 115081, 115172, 115342, 115353, 116171, 116172, 116633, 116723, 116724, 116930, 117838, 118293, 118687, 118688, 118754, 118755, 118756, 118757, 125878, 128038, 128039, 128358, 128575, 128778, 128779, 128806, 128859, 129116, 129121, 129673, 129788, 130596, 137019, 137226, 137408, 138882, 139136, 139137, 139164, 139380, 140153, 140799, 140970, 141775, 141841, 141843, 141844, 141845, 141846, 141847, 141848, 141849, 142061, 142520, 143160, 143984, 143985, 144107, 144110, 146288, 146467, 146661, 146772, 146950, 147262, 148713, 154740, 154862, 155071, 155588, 157698, 157777, 160637, 165032, 165153, 165918, 165919, 165920, 165921, 167586, 176934, 176935, 176937, 176940, 177634, 177635, 177636, 177690, 177692, 177693, 177696, 179343, 179347, 179350, 179431, 179432, 179730, 179769, 179868)";
	
	
	Рез = Запрос.Выполнить();
	 Выборка = Рез.Выбрать();
	 #Если Клиент Тогда
	 	Сообщить("количество позиций : " + Выборка.Количество());
	#КонецЕсли
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "OWN_BRAND"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<own_brand>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</own_brand>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ВесьТекст = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;

	 н=0;
	 Пока ВыборкаАптек.Следующий() Цикл
		 
		н = н+1;
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
			Если н%10 = 0 Тогда
				Состояние(""+н+" из " + Всего);
			КонецЕсли;
		#КонецЕсли
		 
		КодСклада = ВыборкаАптек.Код;
		КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
		Если КодСчетчика = -1 Тогда
			КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
			Если КодСчетчика = -1 Тогда
				Возврат ;	
			КонецЕсли;
		КонецЕсли;
		
		МЗ = РегистрыСведений.ОфисАптекаЦелевые.СоздатьМенеджерЗаписи();
		МЗ.Код = КодСчетчика;
		МЗ.КодАптеки = КодСклада;
		МЗ.ТипУпаковки = "OWN_BRAND";
		МЗ.Приоритет = 1;
		МЗ.ВерсияФормата = 1;
		МЗ.ИмяФайла = "OWN_BRAND_4_5_" + СокрЛП(Формат(КодСклада,"ЧГ=0"))  +  "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
		МЗ.ИдентификаторКодировки = 1;
		МЗ.ХМЛСтрока = ВесьТекст;
		МЗ.Записать();		 
		 
		 
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ВыгрузитьДопМотивациюКроме366(Аптека)
	
	Запрос = Новый Запрос;
	
	Если Аптека = Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	МестаХранения.Код,
		|	МестаХранения.Ссылка КАК Аптека
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		|ГДЕ
		|	МестаХранения.ПометкаУдаления = ЛОЖЬ
		|	И СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		|	И МестаХранения.Бренд <> &Бренд
		|";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	МестаХранения.Код,
		|	МестаХранения.Ссылка КАК Аптека
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		|ГДЕ
		|	МестаХранения.ПометкаУдаления = ЛОЖЬ
		|	И СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		|	И МестаХранения.Бренд <> &Бренд
		|	И МестаХранения.Код в  (&КодАптеки)
		|
		|";
			Запрос.УстановитьПараметр("КодАптеки",Аптека.Код);
	КонецЕсли;				   
	

	Запрос.УстановитьПараметр("Бренд",Справочники.БрендыАптечныхСетей.НайтиПоКоду(12)); //36,6			   
	 Рез = Запрос.Выполнить();
	 Если Рез.Пустой() Тогда
		 Возврат;
	 КонецЕсли;
	 
	 ВыборкаАптек = Рез.Выбрать();
	 Всего = ВыборкаАптек.Количество();
	
	
	
	Запрос.Текст =   "ВЫБРАТЬ
	                 |	ТоварыСТМСрезПоследних.Товар.Код КАК Код
	                 |ИЗ
	                 |	РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	                 |ГДЕ
	                 |	ТоварыСТМСрезПоследних.ТипСТМ <> ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.НеСТМ)
	                 |	И ТоварыСТМСрезПоследних.Товар.НеУчаствуетВМотивации = Ложь
	                 |
	                 |УПОРЯДОЧИТЬ ПО
	                 |	Код";

	
	
	Рез = Запрос.Выполнить();
	 Выборка = Рез.Выбрать();
	 #Если Клиент Тогда
	 	Сообщить("количество позиций : " + Выборка.Количество());
	#КонецЕсли
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "OWN_BRAND"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<own_brand>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</own_brand>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ВесьТекст = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;

	 н=0;
	 Пока ВыборкаАптек.Следующий() Цикл
		 
		н = н+1;
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
			Если н%10 = 0 Тогда
				Состояние(""+н+" из " + Всего);
			КонецЕсли;
		#КонецЕсли
		 
		КодСклада = ВыборкаАптек.Код;
		КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
		Если КодСчетчика = -1 Тогда
			КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
			Если КодСчетчика = -1 Тогда
				Возврат ;	
			КонецЕсли;
		КонецЕсли;
		
		МЗ = РегистрыСведений.ОфисАптекаЦелевые.СоздатьМенеджерЗаписи();
		МЗ.Код = КодСчетчика;
		МЗ.КодАптеки = КодСклада;
		МЗ.ТипУпаковки = "OWN_BRAND";
		МЗ.Приоритет = 1;
		МЗ.ВерсияФормата = 1;
		МЗ.ИмяФайла = "OWN_BRAND_NO_366_" + СокрЛП(Формат(КодСклада,"ЧГ=0"))  +  "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
		МЗ.ИдентификаторКодировки = 1;
		МЗ.ХМЛСтрока = ВесьТекст;
		МЗ.Записать();		 
		 
		 
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ВыгрузитьДопМотивациюПо366(Аптека)
	
	Запрос = Новый Запрос;
	
	Если Аптека = Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	МестаХранения.Код,
		|	МестаХранения.Ссылка КАК Аптека
		|ИЗ
		|	Справочник.МестаХранения КАК МестаХранения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		|ГДЕ
		|	МестаХранения.ПометкаУдаления = ЛОЖЬ
		|	И СостоянияПодписчиков.Активна = ИСТИНА
		|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		|	И МестаХранения.Бренд = &Бренд
		|
		|";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	МестаХранения.Код,
		               |	МестаХранения.Ссылка КАК Аптека
		               |ИЗ
		               |	Справочник.МестаХранения КАК МестаХранения
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		               |		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		               |ГДЕ
		               |	МестаХранения.ПометкаУдаления = ЛОЖЬ
		               |	И СостоянияПодписчиков.Активна = ИСТИНА
		               |	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		               |	И МестаХранения.Бренд = &Бренд
		               |	И МестаХранения.Код В(&КодАптеки)";
			Запрос.УстановитьПараметр("КодАптеки",Аптека.Код);
	КонецЕсли;				   
	

	Запрос.УстановитьПараметр("Бренд",Справочники.БрендыАптечныхСетей.НайтиПоКоду(12)); //366			   
	 Рез = Запрос.Выполнить();
	 Если Рез.Пустой() Тогда
		 Возврат;
	 КонецЕсли;
	 
	 ВыборкаАптек = Рез.Выбрать();
	 Всего = ВыборкаАптек.Количество();
	
	
	
	Запрос.Текст =      "ВЫБРАТЬ
	                    |	ТоварыСТМСрезПоследних.Товар.Код КАК Код
	                    |ИЗ
	                    |	РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	                    |ГДЕ
	                    |	ТоварыСТМСрезПоследних.ТипСТМ <> ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.НеСТМ)
	                    |	И ТоварыСТМСрезПоследних.Товар.НеУчаствуетВМотивации = ЛОЖЬ
	                    |	И НЕ ТоварыСТМСрезПоследних.Товар.Код В (116374, 45646, 177838, 102695, 69509, 6272, 6271, 5413, 5414, 6273, 77587, 6269, 5412, 45715, 49696, 39479, 49574, 38749, 97030, 91291, 4317, 95859, 167583, 119137, 47672, 165933, 179059, 165993, 140801, 57166, 79071, 159587, 55957, 41114, 167134, 167133, 167136, 167132, 128793, 137547, 116377, 89391, 75419, 146681, 42475, 42479, 42476, 179068, 179067, 127003, 46792, 128790, 139242, 144926, 116381, 165935, 76155, 116379, 165936, 141899, 46339, 5829, 180235, 179057, 128796, 75403, 154866, 161091, 6144, 5952, 179065, 179064, 119303, 181996, 182081, 182080, 156221, 49364, 144969, 84706, 5591, 158200, 159640, 5619, 180242, 180243, 47576, 6156, 86394, 137388, 137391, 137392, 157991, 146678, 177396, 147263, 116386, 154867, 56732, 181877, 181879, 146085, 21052, 141495, 141496, 154825, 45350, 116388, 128851, 179061, 49433, 177823, 181880, 5112, 98829, 116389, 116390, 8255)";
	
	
	Рез = Запрос.Выполнить();
	 Выборка = Рез.Выбрать();
	 #Если Клиент Тогда
	 	Сообщить("количество позиций : " + Выборка.Количество());
	#КонецЕсли
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "OWN_BRAND"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<own_brand>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</own_brand>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ВесьТекст = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;

	 н=0;
	 Пока ВыборкаАптек.Следующий() Цикл
		 
		н = н+1;
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
			Если н%10 = 0 Тогда
				Состояние(""+н+" из " + Всего);
			КонецЕсли;
		#КонецЕсли
		 
		КодСклада = ВыборкаАптек.Код;
		КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
		Если КодСчетчика = -1 Тогда
			КодСчетчика = ОМ_ТСО.ПолучитьКодСчетчика("ОбменАптекаОфисЦелевые");
			Если КодСчетчика = -1 Тогда
				Возврат ;	
			КонецЕсли;
		КонецЕсли;
		
		МЗ = РегистрыСведений.ОфисАптекаЦелевые.СоздатьМенеджерЗаписи();
		МЗ.Код = КодСчетчика;
		МЗ.КодАптеки = КодСклада;
		МЗ.ТипУпаковки = "OWN_BRAND";
		МЗ.Приоритет = 1;
		МЗ.ВерсияФормата = 1;
		МЗ.ИмяФайла = "OWN_BRAND_366_" + СокрЛП(Формат(КодСклада,"ЧГ=0"))  +  "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
		МЗ.ИдентификаторКодировки = 1;
		МЗ.ХМЛСтрока = ВесьТекст;
		МЗ.Записать();		 
		 
		 
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ВыгрузитьДопМотивацию_Старая(Аптека = Неопределено) Экспорт
	
	Запрос = Новый Запрос;

	Запрос.Текст =   "ВЫБРАТЬ
	                 |	ТоварыСТМСрезПоследних.Товар.Код КАК Код
	                 |ИЗ
	                 |	РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	                 |ГДЕ
	                 |	ТоварыСТМСрезПоследних.ТипСТМ <> ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.НеСТМ)
	                 |	И ТоварыСТМСрезПоследних.Товар.НеУчаствуетВМотивации = Ложь
	                 |
	                 |УПОРЯДОЧИТЬ ПО
	                 |	Код";

	
	
	Рез = Запрос.Выполнить();
	 Выборка = Рез.Выбрать();
	 #Если Клиент Тогда
	 	Сообщить("количество позиций : " + Выборка.Количество());
	#КонецЕсли
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "OWN_BRAND"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<own_brand>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ДобавитьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</own_brand>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "OWN_BRAND" , ТекстУпаковки , "");
	
	
КонецПроцедуры
 
Процедура ВыгрузитьДопМотивацию_ОченьСтарая(Аптека = Неопределено) Экспорт
	
	//ВыгрузитьДопМотивацию3Процента(Аптека);
	//ВыгрузитьДопМотивацию4_5Процента(Аптека);
	//ВыгрузитьДопМотивацию7_5Процента(Аптека);
	
КонецПроцедуры

Процедура ВыгрузитьДопМотивацию(Аптека = Неопределено) Экспорт
	
	ВыгрузитьДопМотивациюКроме366(Аптека);
	ВыгрузитьДопМотивациюПо366(Аптека);                         
	
КонецПроцедуры

Процедура ВыгрузитьТипыПоступленийНаСклад(Аптека = Неопределено) Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ
	                 |	ТипыПоставокНаСклад.Код КАК Код,
	                 |	ТипыПоставокНаСклад.ПометкаУдаления КАК ПометкаУдаления,
	                 |	ТипыПоставокНаСклад.Наименование КАК Наименование,
	                 |	ТипыПоставокНаСклад.КодСкладаПриемки КАК КодСкладаПриемки,
	                 |	Выбор когда ТипыПоставокНаСклад.ТипизацияМОР = """" Тогда ЛОЖЬ ИНАЧЕ Истина КОНЕЦ КАК ПризнакМОР,
	                 |	ТипыПоставокНаСклад.НаименованиеСкладаПриемки КАК НаименованиеСкладаПриемки
	                 |ИЗ
	                 |	Справочник.ТипыПоставокНаСклад КАК ТипыПоставокНаСклад";
			
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");

	ЗаписьXML.ДобавитьСтроку("<document>"); 

	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "DELIVERY_TYPE"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<delivery_type>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id",	Формат(Выборка.Код,"ЧГ=0; ЧН=0") );		
			ЗаписатьЭлементXML(ЗаписьXML, "is_deleted",		Формат(Выборка.ПометкаУдаления,"БЛ=0; БИ=1") );				
			ЗаписатьЭлементXML(ЗаписьXML, "descr",			КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
			ЗаписатьЭлементXML(ЗаписьXML, "id_dep_gdp",		Формат(Выборка.КодСкладаПриемки,"ЧН=0; ЧГ=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "descr_dep_gdp",	КорректировкаСпецСимволов(СокрЛП(Выборка.НаименованиеСкладаПриемки)));
			ЗаписатьЭлементXML(ЗаписьXML, "is_small_sale",	Формат(Выборка.ПризнакМОР,"БЛ=0; БИ=1") );		
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</delivery_type>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "DELIVERY_TYPE" , ТекстУпаковки );

	
КонецПроцедуры

Процедура ВыгрузитьТоварыНеУчаствующиеВСписанииСтарыйВариант(Аптека = Неопределено) Экспорт
	
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	АП.Код КАК КодТовара
	               |ИЗ
	               |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	               |ГДЕ
	               |	(АП.НеУчаствуетВСписании = ИСТИНА
	               |			ИЛИ АП.Реализация = ИСТИНА)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	АП.Код";
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	
	Выборка = Рез.Выбрать();
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	
	ЗаписьXML = Новый ЗаписьТекста(ИмяФайла,"windows-1251");
	ЗаписьXML.ЗаписатьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ЗаписатьСтроку("<document>"); 

	
	
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "pack_type", "GOODS_NOT_DISCARDABLE"); 
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ЗаписатьСтроку("<goods_not_discardable>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ЗаписатьСтроку("<row>");
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_goods",	Формат(Выборка.КодТовара,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ЗаписатьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ЗаписатьСтроку("</goods_not_discardable>"); 
	ЗаписьXML.ЗаписатьСтроку("</document>"); 
	
	ЗаписьXML.Закрыть();
	ЗаписьXML = Новый ЧтениеТекста(ИмяФайла,"windows-1251");
	ТекстУпаковки = ЗаписьXML.Прочитать();
	ЗаписьXML.Закрыть();
	ЗаписьXML = Неопределено;
	УдалитьФайлы(ИмяФайла);	
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "GOODS_NOT_DISCARDABLE" , ТекстУпаковки );
	
КонецПроцедуры

Процедура ВыгрузитьТоварыНеУчаствующиеВСписанииФармакор(Аптека = Неопределено)
	
	Запрос = Новый Запрос;
	
	Если Аптека = Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	МестаХранения.Код КАК Код,
		               |	МестаХранения.Ссылка КАК Аптека
		               |ИЗ
		               |	Справочник.МестаХранения КАК МестаХранения
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		               |		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		               |ГДЕ
		               |	МестаХранения.ПометкаУдаления = ЛОЖЬ
		               |	И СостоянияПодписчиков.Активна = ИСТИНА
		               |	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		               //|	И (МестаХранения.Фирма.Код в (181, 132, 131, 153, 149)
		               |	И (МестаХранения.Фирма.Код в (181)
		               |			ИЛИ МестаХранения.Бренд = &Бренд или МестаХранения.Код в (1404, 2292, 2432 , 1944, 1807, 4681, 4088, 4352))";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	МестаХранения.Код КАК Код,
		               |	МестаХранения.Ссылка КАК Аптека
		               |ИЗ
		               |	Справочник.МестаХранения КАК МестаХранения
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		               |		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		               |ГДЕ
		               |	МестаХранения.ПометкаУдаления = ЛОЖЬ
		               |	И СостоянияПодписчиков.Активна = ИСТИНА
		               |	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		              // |	И (МестаХранения.Фирма.Код в (181, 132, 131, 153, 149)
		               |	И (МестаХранения.Фирма.Код в (181)
		               |			ИЛИ МестаХранения.Бренд = &Бренд)
		               |	И МестаХранения.Код В(&КодАптеки)";
			Запрос.УстановитьПараметр("КодАптеки",Аптека.Код);
	КонецЕсли;				   
	

	//Запрос.УстановитьПараметр("Фирма",Справочники.Фирмы.НайтиПоКоду(181)); //Фармакор
	Запрос.УстановитьПараметр("Бренд",Справочники.БрендыАптечныхСетей.НайтиПоКоду(4)); //Луксури

	 Рез = Запрос.Выполнить();
	 Если Рез.Пустой() Тогда
		 Возврат;
	 КонецЕсли;
	 
	 ВыборкаАптек = Рез.Выбрать();
	 Всего = ВыборкаАптек.Количество();
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	АП.Код КАК КодТовара
	               |ИЗ
	               |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	               |ГДЕ
	               |	АП.Код В (182183, 182184, 70033, 120054, 145528, 59953, 97062, 130338, 130417, 130418, 130420, 7822, 57077, 130415, 14468, 7825, 7827, 7826, 14467, 7821, 48962, 7823, 7824, 46783, 53623, 50087, 36434, 178096, 180385, 149160, 71745, 71519, 182154, 178088, 187502, 187503, 183482, 79319, 183894, 178239, 183480, 186090, 186089, 45988, 45989, 179912, 177595, 177593, 164436, 7479, 92294, 7480, 92295)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	АП.Код";


	
	
	Рез = Запрос.Выполнить();
	 Выборка = Рез.Выбрать();
	 #Если Клиент Тогда
	 	Сообщить("количество позиций : " + Выборка.Количество());
	#КонецЕсли
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	
	ЗаписьXML = Новый ЗаписьТекста(ИмяФайла,"windows-1251");
	ЗаписьXML.ЗаписатьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ЗаписатьСтроку("<document>"); 

	
	
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "pack_type", "GOODS_NOT_DISCARDABLE"); 
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ЗаписатьСтроку("<goods_not_discardable>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ЗаписатьСтроку("<row>");
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_goods",	Формат(Выборка.КодТовара,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ЗаписатьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ЗаписатьСтроку("</goods_not_discardable>"); 
	ЗаписьXML.ЗаписатьСтроку("</document>"); 
	
	ЗаписьXML.Закрыть();
	ЗаписьXML = Новый ЧтениеТекста(ИмяФайла,"windows-1251");
	ТекстУпаковки = ЗаписьXML.Прочитать();
	ЗаписьXML.Закрыть();
	ЗаписьXML = Неопределено;
	УдалитьФайлы(ИмяФайла);	

	 н=0;
	 Пока ВыборкаАптек.Следующий() Цикл
		 
		н = н+1;
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
			Если н%10 = 0 Тогда
				Состояние(""+н+" из " + Всего);
			КонецЕсли;
		#КонецЕсли
		 
		КодСклада = ВыборкаАптек.Код;
		
		МЗ = РегистрыСведений.ОфисАптекаЦелевые.СоздатьМенеджерЗаписи();
		МЗ.Код = 1;
		МЗ.КодАптеки = КодСклада;
		МЗ.ТипУпаковки = "GOODS_NOT_DISCARDABLE";
		МЗ.Приоритет = 1;
		МЗ.ВерсияФормата = 1;
		МЗ.ИмяФайла = "GOODS_NOT_DISCARDABLE_FRMK_" + СокрЛП(Формат(КодСклада,"ЧГ=0"))  +  "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
		МЗ.ИдентификаторКодировки = 1;
		МЗ.ХМЛСтрока = ТекстУпаковки;
		МЗ.Записать();		 
		 
		 
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыгрузитьТоварыНеУчаствующиеВСписанииВсеКромеФармакор(Аптека = Неопределено)
	
	Запрос = Новый Запрос;
	
	Если Аптека = Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	МестаХранения.Код КАК Код,
		               |	МестаХранения.Ссылка КАК Аптека
		               |ИЗ
		               |	Справочник.МестаХранения КАК МестаХранения
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		               |		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		               |ГДЕ
		               |	МестаХранения.ПометкаУдаления = ЛОЖЬ
		               |	И СостоянияПодписчиков.Активна = ИСТИНА
		               |	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		              // |	И НЕ(МестаХранения.Фирма.Код в (181, 132, 131, 153, 149)
					  //не АО Фармакор, АО "САП", АО "Мособлфармация", Провизор, Фармацевт ООО
		               |	И НЕ(МестаХранения.Фирма.Код в (181)
		               |				ИЛИ МестаХранения.Бренд = &Бренд
		               |				ИЛИ МестаХранения.Код В (1404, 2292, 2432, 1944, 1807, 4681, 4088))";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	МестаХранения.Код КАК Код,
		               |	МестаХранения.Ссылка КАК Аптека
		               |ИЗ
		               |	Справочник.МестаХранения КАК МестаХранения
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
		               |		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
		               |ГДЕ
		               |	МестаХранения.ПометкаУдаления = ЛОЖЬ
		               |	И СостоянияПодписчиков.Активна = ИСТИНА
		               |	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
		              // |	И НЕ(МестаХранения.Фирма.Код в (181, 132, 131, 153, 149)
					  //не АО Фармакор, АО "САП", АО "Мособлфармация", Провизор, Фармацевт ООО
					   |	И НЕ(МестаХранения.Фирма.Код в (181)
		               |				ИЛИ МестаХранения.Бренд = &Бренд или МестаХранения.Код в (1404, 2292, 2432 , 1944, 1807, 4681, 4088, 4352))
		               |	И МестаХранения.Код В(&КодАптеки)";
			Запрос.УстановитьПараметр("КодАптеки",Аптека.Код);
	КонецЕсли;				   
	

	//Запрос.УстановитьПараметр("Фирма",Справочники.Фирмы.НайтиПоКоду(181)); //Фармакор
	Запрос.УстановитьПараметр("Бренд",Справочники.БрендыАптечныхСетей.НайтиПоКоду(4)); //Луксури

	 Рез = Запрос.Выполнить();
	 Если Рез.Пустой() Тогда
		 Возврат;
	 КонецЕсли;
	 
	 ВыборкаАптек = Рез.Выбрать();
	 Всего = ВыборкаАптек.Количество();
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	АП.Код КАК КодТовара
	               |ИЗ
	               |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	               |ГДЕ
	               |	(АП.НеУчаствуетВСписании = ИСТИНА
	               |			ИЛИ АП.Реализация = ИСТИНА
	               |			ИЛИ АП.Код В (182183, 182184, 70033, 120054, 145528, 59953, 97062, 130338, 130417, 130418, 130420, 7822, 57077, 130415, 14468, 7825, 7827, 7826, 14467, 7821, 48962, 7823, 7824, 46783, 53623, 50087, 36434, 178096, 180385, 149160, 71745, 71519, 182154, 178088, 187502, 187503, 183482, 79319, 183894, 178239, 183480, 186090, 186089, 45988, 45989, 179912, 177595, 177593, 164436, 7479, 92294, 7480, 92295))
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	АП.Код";


	
	
	Рез = Запрос.Выполнить();
	 Выборка = Рез.Выбрать();
	 #Если Клиент Тогда
	 	Сообщить("количество позиций : " + Выборка.Количество());
	#КонецЕсли
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	
	ЗаписьXML = Новый ЗаписьТекста(ИмяФайла,"windows-1251");
	ЗаписьXML.ЗаписатьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ЗаписатьСтроку("<document>"); 

	
	
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "pack_type", "GOODS_NOT_DISCARDABLE"); 
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ЗаписатьСтроку("<goods_not_discardable>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ЗаписатьСтроку("<row>");
		ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_goods",	Формат(Выборка.КодТовара,"ЧГ=0; ЧН=0") );				
		ЗаписьXML.ЗаписатьСтроку("</row>");		
	КонецЦикла;
	ЗаписьXML.ЗаписатьСтроку("</goods_not_discardable>"); 
	ЗаписьXML.ЗаписатьСтроку("</document>"); 
	
	ЗаписьXML.Закрыть();
	ЗаписьXML = Новый ЧтениеТекста(ИмяФайла,"windows-1251");
	ТекстУпаковки = ЗаписьXML.Прочитать();
	ЗаписьXML.Закрыть();
	ЗаписьXML = Неопределено;
	УдалитьФайлы(ИмяФайла);	

	 н=0;
	 Пока ВыборкаАптек.Следующий() Цикл
		 
		н = н+1;
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
			Если н%10 = 0 Тогда
				Состояние(""+н+" из " + Всего);
			КонецЕсли;
		#КонецЕсли
		 
		КодСклада = ВыборкаАптек.Код;
		
		МЗ = РегистрыСведений.ОфисАптекаЦелевые.СоздатьМенеджерЗаписи();
		МЗ.Код = 1;
		МЗ.КодАптеки = КодСклада;
		МЗ.ТипУпаковки = "GOODS_NOT_DISCARDABLE";
		МЗ.Приоритет = 1;
		МЗ.ВерсияФормата = 1;
		МЗ.ИмяФайла = "GOODS_NOT_DISCARDABLE_NOTFRMK_" + СокрЛП(Формат(КодСклада,"ЧГ=0"))  +  "_" + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") +".xml";
		МЗ.ИдентификаторКодировки = 1;
		МЗ.ХМЛСтрока = ТекстУпаковки;
		МЗ.Записать();		 
		 
		 
	КонецЦикла;
	                          
	
КонецПроцедуры

Процедура ВыгрузитьТоварыНеУчаствующиеВСписании(Аптека = Неопределено) Экспорт
	
	ВыгрузитьТоварыНеУчаствующиеВСписанииФармакор(Аптека);
	ВыгрузитьТоварыНеУчаствующиеВСписанииВсеКромеФармакор(Аптека);
	
КонецПроцедуры

Процедура ВыгрузитьФальсификаты(Аптека = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ
	                 |	Фальсификаты.Код КАК Код,
	                 |	Фальсификаты.Наименование КАК Наименование,
	                 |	Фальсификаты.АП.Код КАК АПКод,
	                 |	Фальсификаты.АП.Наименование КАК АПНаименование,
	                 |	Фальсификаты.НаименованиеЛаборатории КАК НаименованиеЛаборатории,
	                 |	Фальсификаты.НомерПисьма КАК НомерПисьма,
	                 |	Фальсификаты.ДатаПисьма КАК ДатаПисьма,
	                 |	Фальсификаты.Производитель КАК Производитель,
	                 |	Фальсификаты.Причина КАК Причина,
	                 |	Фальсификаты.НомерСерии КАК НомерСерии,
	                 |	Фальсификаты.Страна КАК Страна,
	                 |	Фальсификаты.УникСтр КАК УникСтр,
	                 |	ВЫБОР
	                 |		КОГДА Фальсификаты.РешениеПоВозврату = ""Возврат""
	                 |			ТОГДА 1
	                 |		ИНАЧЕ ВЫБОР
	                 |				КОГДА Фальсификаты.РешениеПоВозврату = ""Приостановка""
	                 |					ТОГДА 2
	                 |				ИНАЧЕ 0
	                 |			КОНЕЦ
	                 |	КОНЕЦ КАК РешениеПоВозврату
	                 |ИЗ
	                 |	Справочник.Фальсификаты КАК Фальсификаты
	                 |ГДЕ
	                 |	Фальсификаты.РешениеПоВозврату <> ""Разбраковка"""; //Самсонов 20.06.18 SKD-208
			
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ДобавитьСтроку("<document>"); 
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "FALSIFICATION"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<falsification>");
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id",				Формат(Выборка.Код,"ЧГ=0; ЧН=0") );	
			ЗаписатьЭлементXML(ЗаписьXML, "descr",			КорректировкаСпецСимволов(СокрЛП(Выборка.Наименование)));
			ЗаписатьЭлементXML(ЗаписьXML, "id_goods",		Формат(Выборка.АПКод,"ЧГ=0; ЧН=0") );	
			ЗаписатьЭлементXML(ЗаписьXML, "descr_goods",	КорректировкаСпецСимволов(СокрЛП(Выборка.АПНаименование)));
			ЗаписатьЭлементXML(ЗаписьXML, "lab",			КорректировкаСпецСимволов(СокрЛП(Выборка.НаименованиеЛаборатории)));
			ЗаписатьЭлементXML(ЗаписьXML, "NoLater",		КорректировкаСпецСимволов(СокрЛП(Выборка.НомерПисьма)));
			ЗаписатьЭлементXML(ЗаписьXML, "DataLater",		Формат(Выборка.ДатаПисьма, "ДФ=dd.MM.yyyy"));
			ЗаписатьЭлементXML(ЗаписьXML, "manufacturer",	КорректировкаСпецСимволов(СокрЛП(Выборка.Производитель)));
			ЗаписатьЭлементXML(ЗаписьXML, "reason",  		КорректировкаСпецСимволов(СокрЛП(Выборка.Причина)));
			ЗаписатьЭлементXML(ЗаписьXML, "series",  		КорректировкаСпецСимволов(СокрЛП(Выборка.НомерСерии)));
			ЗаписатьЭлементXML(ЗаписьXML, "country",  		КорректировкаСпецСимволов(СокрЛП(Выборка.Страна)));
			ЗаписатьЭлементXML(ЗаписьXML, "UnicStr",  		КорректировкаСпецСимволов(СокрЛП(Выборка.УникСтр)));
			ЗаписатьЭлементXML(ЗаписьXML, "returnDecision", КорректировкаСпецСимволов(СокрЛП(Выборка.РешениеПоВозврату)));
			
		ЗаписьXML.ДобавитьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ДобавитьСтроку("</falsification>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	Обмен.ЗаписатьУпаковкуВРегистрОбмена(Аптека,"FALSIFICATION", ТекстУпаковки);

КонецПроцедуры

Процедура ВыгрузитьПланыПродажАптека(Аптека = Неопределено) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.Текст =   
	"ВЫБРАТЬ
	|	МестаХранения.Код КАК Код,
	|	МестаХранения.Ссылка КАК Аптека
	|ПОМЕСТИТЬ ВТ_Склады
	|ИЗ
	|	Справочник.МестаХранения КАК МестаХранения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
	|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
	|ГДЕ
	|	МестаХранения.ПометкаУдаления = ЛОЖЬ
	|	И СостоянияПодписчиков.Активна = ИСТИНА
	|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланПродажПоАптекам.КодАптеки КАК КодАптеки,
	|	ПланПродажПоАптекам.Дата КАК Дата,
	|	ПланПродажПоАптекам.СуммаПродаж КАК СуммаПродаж,
	|	ПланПродажПоАптекам.СуммаПродажПФ КАК СуммаПродажПФ,
	|	ПланПродажПоАптекам.СуммаПродажСТМ КАК СуммаПродажСТМ,
	|	ВТ_Склады.Аптека КАК Аптека
	|ИЗ
	|	РегистрСведений.ПланПродажПоАптекам КАК ПланПродажПоАптекам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Склады КАК ВТ_Склады
	|		ПО ПланПродажПоАптекам.КодАптеки = ВТ_Склады.Код
	|ГДЕ
	|	ПланПродажПоАптекам.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|ИТОГИ ПО
	|	Аптека";
	
	Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ТекущаяДата()));		
	Запрос.УстановитьПараметр("ДатаОкончания",КонецМесяца(ТекущаяДата()));
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаПоАптеке = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Аптека");
	Пока ВыборкаПоАптеке.Следующий() Цикл
		
		ЗаписьXML = Новый ТекстовыйДокумент;
		ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
		ЗаписьXML.ДобавитьСтроку("<document>"); 
		
		ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "SALE_DEP"); 
		ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
		
		ЗаписьXML.ДобавитьСтроку("<sale_dep>");
		
		Выборка = ВыборкаПоАптеке.Выбрать();
	    Пока Выборка.Следующий() Цикл
		
			ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_dep",		Формат(Выборка.КодАптеки,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "day_date",	Формат(Выборка.Дата,"ДФ=dd.MM.yyyy") );	
			ЗаписатьЭлементXML(ЗаписьXML, "sale_total",	Формат(Выборка.СуммаПродаж,"ЧГ=0; ЧН=0") );
			ЗаписатьЭлементXML(ЗаписьXML, "sale_PF",		Формат(Выборка.СуммаПродажПФ,"ЧГ=0; ЧН=0") );
			ЗаписатьЭлементXML(ЗаписьXML, "sale_STM",	Формат(Выборка.СуммаПродажСТМ,"ЧГ=0; ЧН=0") );
			ЗаписьXML.ДобавитьСтроку("</row>");		
		
		КонецЦикла;
		
		ЗаписьXML.ДобавитьСтроку("</sale_dep>"); 
		ЗаписьXML.ДобавитьСтроку("</document>"); 
		
		ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
		ЗаписьXML.Очистить();
		ЗаписьXML = Неопределено;
		
		Обмен.ЗаписатьУпаковкуВРегистрОбмена(ВыборкаПоАптеке.Аптека,"SALE_DEP",ТекстУпаковки);
	
	КонецЦикла; 
	
КонецПроцедуры

Процедура ВыгрузитьПланыПродажАптекаВДолях(Аптека = Неопределено) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.Текст =   
	"ВЫБРАТЬ
	|	МестаХранения.Код КАК Код,
	|	МестаХранения.Ссылка КАК Аптека
	|ПОМЕСТИТЬ ВТ_Склады
	|ИЗ
	|	Справочник.МестаХранения КАК МестаХранения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПодписчиков КАК СостоянияПодписчиков
	|		ПО МестаХранения.Код = СостоянияПодписчиков.КодАптеки
	|ГДЕ
	|	МестаХранения.ПометкаУдаления = ЛОЖЬ
	|	И СостоянияПодписчиков.Активна = ИСТИНА
	|	И СостоянияПодписчиков.Закрыта = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланПродажПоАптекамВДолях.КодАптеки КАК КодАптеки,
	|	ВТ_Склады.Аптека КАК Аптека,
	|	ПланПродажПоАптекамВДолях.ДатаНачала КАК ДатаНачала,
	|	ПланПродажПоАптекамВДолях.ДоляПродажПФ КАК ДоляПродажПФ,
	|	ПланПродажПоАптекамВДолях.ДоляПродажСТМ КАК ДоляПродажСТМ,
	|	ПланПродажПоАптекамВДолях.КоличествоСуперпромо КАК КоличествоСуперпромо,
	|	ПланПродажПоАптекамВДолях.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	РегистрСведений.ПланПродажПоАптекамВДолях КАК ПланПродажПоАптекамВДолях
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Склады КАК ВТ_Склады
	|		ПО ПланПродажПоАптекамВДолях.КодАптеки = ВТ_Склады.Код
	|ГДЕ
	|	ПланПродажПоАптекамВДолях.ДатаНачала <= &ТекущаяДата
	|	И ПланПродажПоАптекамВДолях.ДатаОкончания >= &ТекущаяДата
	|ИТОГИ ПО
	|	Аптека";
	
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());		
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаПоАптеке = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Аптека");
	Пока ВыборкаПоАптеке.Следующий() Цикл
		
		ЗаписьXML = Новый ТекстовыйДокумент;
		ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
		ЗаписьXML.ДобавитьСтроку("<document>"); 
		
		ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "SALE_DEP_PERCENTAGE"); 
		ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
		
		ЗаписьXML.ДобавитьСтроку("<sale_dep_percentage>");
		
		Выборка = ВыборкаПоАптеке.Выбрать();
	    Пока Выборка.Следующий() Цикл
		
			ЗаписьXML.ДобавитьСтроку("<row>");
			ЗаписатьЭлементXML(ЗаписьXML, "id_dep",		Формат(Выборка.КодАптеки,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXML(ЗаписьXML, "start_date",	Формат(Выборка.ДатаНачала,"ДФ=dd.MM.yyyy") );	
			ЗаписатьЭлементXML(ЗаписьXML, "end_date",	Формат(Выборка.ДатаОкончания,"ДФ=dd.MM.yyyy") );	
			ЗаписатьЭлементXML(ЗаписьXML, "sale_PF",	Формат(Выборка.ДоляПродажПФ,"ЧГ=0; ЧН=0") );
			ЗаписатьЭлементXML(ЗаписьXML, "sale_STM",	Формат(Выборка.ДоляПродажСТМ,"ЧГ=0; ЧН=0") );
			ЗаписатьЭлементXML(ЗаписьXML, "superpromo",	Формат(Выборка.КоличествоСуперпромо,"ЧГ=0; ЧН=0") );
			ЗаписьXML.ДобавитьСтроку("</row>");		
		
		КонецЦикла;
		
		ЗаписьXML.ДобавитьСтроку("</sale_dep_percentage>"); 
		ЗаписьXML.ДобавитьСтроку("</document>"); 
		
		ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
		ЗаписьXML.Очистить();
		ЗаписьXML = Неопределено;
		
		Обмен.ЗаписатьУпаковкуВРегистрОбмена(ВыборкаПоАптеке.Аптека,"SALE_DEP_PERCENTAGE",ТекстУпаковки);
	
	КонецЦикла; 
	
КонецПроцедуры

Процедура ВыгрузитьПланыПродажЛичный(Аптека = Неопределено) Экспорт

	Запрос = Новый Запрос;
	
	// Запрос для пакета
	// 1. Выборка из РС ПланПродажЛичный за период
	// 2. Данные по продажам по сотрудникам по датам за период. 
	//    Продажи разбиты по товарам СТМ и ПФ
	// 3. Таблица с нарастающим итогоп продаж на каждый день из РС ПланПродажЛичный по каждому сотруднику
	// 4. Итоговая таблица с данными для пакета
	Запрос.Текст =                                                
	"ВЫБРАТЬ
	|	ПланПродажЛичный.Сотрудник.Фамилия + "" "" + ПланПродажЛичный.Сотрудник.Имя + "" "" + ПланПродажЛичный.Сотрудник.Отчество КАК Сотрудник,
	|	ПланПродажЛичный.Сотрудник.СНИЛС КАК СотрудникСНИЛС,
	|	ПланПродажЛичный.ДатаПродаж КАК ДатаПродаж,
	|	ПланПродажЛичный.СуммаПродаж КАК СуммаПродаж,
	|	ПланПродажЛичный.СуммаПродажПФ КАК СуммаПродажПФ,
	|	ПланПродажЛичный.СуммаПродажСТМ КАК СуммаПродажСТМ,
	|	ПланПродажЛичный.Сотрудник.Код КАК СотрудникКод
	|ПОМЕСТИТЬ ВТ_ПланПродажЛичный
	|ИЗ
	|	РегистрСведений.ПланПродажЛичный КАК ПланПродажЛичный
	|ГДЕ
	|	ПланПродажЛичный.ДатаПродаж МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаПродаж
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА АССОРТИМЕНТНЫЙ_ПЛАН.ТипДляЦО = ЗНАЧЕНИЕ(пЕРЕЧИСЛЕНИЕ.ТипыДляЦО.пАРАФАРМАЦИЯ)
	|				ТОГДА УЗ_РеализацияККММотивацияТовар.СуммаРозн
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаРознПФ,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ТоварыСТМСрезПоследних.ТипСТМ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.СТМ)
	|					ИЛИ ЕСТЬNULL(ТоварыСТМСрезПоследних.ТипСТМ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыСТМ.УсловныйСТМ)
	|				ТОГДА УЗ_РеализацияККММотивацияТовар.СуммаРозн
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаРознСТМ,
	|	УЗ_РеализацияККММотивацияТовар.СотрудникКод КАК СотрудникКод,
	|	НАЧАЛОПЕРИОДА(УЗ_РеализацияККММотивацияТовар.Ссылка.Дата, ДЕНЬ) КАК Дата,
	|	СУММА(УЗ_РеализацияККММотивацияТовар.СуммаРозн) КАК СуммаРознВсе
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.УЗ_РеализацияККМ.МотивацияТовар КАК УЗ_РеализацияККММотивацияТовар
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
	|		ПО УЗ_РеализацияККММотивацияТовар.КодТовара = АССОРТИМЕНТНЫЙ_ПЛАН.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыСТМ.СрезПоследних КАК ТоварыСТМСрезПоследних
	|		ПО УЗ_РеализацияККММотивацияТовар.КодТовара = ТоварыСТМСрезПоследних.Товар.Код
	|ГДЕ
	|	УЗ_РеализацияККММотивацияТовар.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	УЗ_РеализацияККММотивацияТовар.СотрудникКод,
	|	НАЧАЛОПЕРИОДА(УЗ_РеализацияККММотивацияТовар.Ссылка.Дата, ДЕНЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Данные.СотрудникКод КАК СотрудникКод,
	|	ВТ_Данные.ДатаПродаж КАК Дата,
	|	СУММА(ВТ_Данные1.СуммаРознПФ) КАК СуммаРознПФ1,
	|	СУММА(ВТ_Данные1.СуммаРознСТМ) КАК СуммаРознСТМ1,
	|	СУММА(ВТ_Данные1.СуммаРознВсе) КАК СуммаРознВсе
	|ПОМЕСТИТЬ ВТ_Итоги
	|ИЗ
	|	ВТ_ПланПродажЛичный КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Данные КАК ВТ_Данные1
	|		ПО ВТ_Данные.ДатаПродаж >= ВТ_Данные1.Дата
	|			И ВТ_Данные.СотрудникКод = ВТ_Данные1.СотрудникКод
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.СотрудникКод,
	|	ВТ_Данные.ДатаПродаж
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СотрудникКод,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПланПродажЛичный.Сотрудник КАК Сотрудник,
	|	ВТ_ПланПродажЛичный.СотрудникСНИЛС КАК СотрудникСНИЛС,
	|	ВТ_ПланПродажЛичный.СотрудникКод КАК СотрудникКод,
	|	ВТ_ПланПродажЛичный.ДатаПродаж КАК ДатаПродаж,
	|	ВТ_ПланПродажЛичный.СуммаПродаж КАК СуммаПродаж,
	|	ВТ_ПланПродажЛичный.СуммаПродажПФ КАК СуммаПродажПФ,
	|	ВТ_ПланПродажЛичный.СуммаПродажСТМ КАК СуммаПродажСТМ,
	|	ЕСТЬNULL(ВТ_Итоги.СуммаРознПФ1, 0) КАК ИтогРознПФ,
	|	ЕСТЬNULL(ВТ_Итоги.СуммаРознСТМ1, 0) КАК ИтогРознСТМ,
	|	ЕСТЬNULL(ВТ_Итоги.СуммаРознВсе, 0) КАК СуммаРознВсе
	|ИЗ
	|	ВТ_ПланПродажЛичный КАК ВТ_ПланПродажЛичный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоги КАК ВТ_Итоги
	|		ПО ВТ_ПланПродажЛичный.СотрудникКод = ВТ_Итоги.СотрудникКод
	|			И ВТ_ПланПродажЛичный.ДатаПродаж = ВТ_Итоги.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	ДатаПродаж";
	
	Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ТекущаяДата()));		
	Запрос.УстановитьПараметр("ДатаОкончания",КонецМесяца(ТекущаяДата()));
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ДобавитьСтроку("<document>"); 
	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "SALE_EMPLOYEE"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<sale_employee>");
	
	Выборка = Рез.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаписьXML.ДобавитьСтроку("<row>");
		ЗаписатьЭлементXML(ЗаписьXML, "employee",		КорректировкаСпецСимволов(СокрЛП(Выборка.Сотрудник)));				
		//ЗаписатьЭлементXML(ЗаписьXML, "snils",			КорректировкаСпецСимволов(СокрЛП(Выборка.СотрудникСНИЛС)));				
		ЗаписатьЭлементXML(ЗаписьXML, "login_key",		КорректировкаСпецСимволов(СокрЛП(Выборка.СотрудникКод)));				
		ЗаписатьЭлементXML(ЗаписьXML, "day_date",		Формат(Выборка.ДатаПродаж,"ДФ=dd.MM.yyyy") );	
		ЗаписатьЭлементXML(ЗаписьXML, "sale_total",		Формат(Выборка.СуммаПродаж,"ЧГ=0; ЧН=0") );
		ЗаписатьЭлементXML(ЗаписьXML, "sale_PF",		Формат(Выборка.СуммаПродажПФ,"ЧГ=0; ЧН=0") );
		ЗаписатьЭлементXML(ЗаписьXML, "sale_STM",		Формат(Выборка.СуммаПродажСТМ,"ЧГ=0; ЧН=0") );
		ЗаписатьЭлементXML(ЗаписьXML, "sale_total_sum",	Формат(Выборка.СуммаРознВсе,"ЧГ=0; ЧН=0") );
		ЗаписатьЭлементXML(ЗаписьXML, "sale_PF_sum",	Формат(Выборка.ИтогРознПФ,"ЧГ=0; ЧН=0") );
		ЗаписатьЭлементXML(ЗаписьXML, "sale_STM_sum",	Формат(Выборка.ИтогРознСТМ,"ЧГ=0; ЧН=0") );
		
		ЗаписьXML.ДобавитьСтроку("</row>");		
	
	КонецЦикла; 
	
	ЗаписьXML.ДобавитьСтроку("</sale_employee>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	Обмен.ЗаписатьУпаковкуВРегистрОбмена(Аптека,"SALE_EMPLOYEE",ТекстУпаковки);
	
КонецПроцедуры

Процедура ВыгрузитьПланыПродажЛичныйВДолях(Аптека = Неопределено) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.Текст =   
	"ВЫБРАТЬ
	|	ПланПродажЛичныйВДолях.Сотрудник.Фамилия + "" "" + ПланПродажЛичныйВДолях.Сотрудник.Имя + "" "" + ПланПродажЛичныйВДолях.Сотрудник.Отчество КАК Сотрудник,
	|	ПланПродажЛичныйВДолях.Сотрудник.Код КАК СотрудникКод,
	|	ПланПродажЛичныйВДолях.Сотрудник.СНИЛС КАК СотрудникСНИЛС,
	|	ПланПродажЛичныйВДолях.ДатаНачала КАК ДатаНачала,
	|	ПланПродажЛичныйВДолях.ДатаОкончания КАК ДатаОкончания,
	|	ПланПродажЛичныйВДолях.ДоляПродажПФ КАК ДоляПродажПФ,
	|	ПланПродажЛичныйВДолях.ДоляПродажСТМ КАК ДоляПродажСТМ,
	|	ПланПродажЛичныйВДолях.КоличествоСуперпромо КАК КоличествоСуперпромо
	|ПОМЕСТИТЬ ВТ_ПланПродажЛичныйВДолях
	|ИЗ
	|	РегистрСведений.ПланПродажЛичныйВДолях КАК ПланПродажЛичныйВДолях
	|ГДЕ
	|	ПланПродажЛичныйВДолях.ДатаНачала <= &ТекущаяДата
	|	И ПланПродажЛичныйВДолях.ДатаОкончания >= &ТекущаяДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПромоакцииТоварныеПозиции.Код1С КАК ТоварКод,
	|	ПромоакцииСклад.Код1С КАК АптекаКод,
	|	ПромоакцииТоварныеПозиции.Ссылка.ДатаПроведенияС КАК ДатаПроведенияС,
	|	ПромоакцииТоварныеПозиции.Ссылка.ДатаПроведенияПо КАК ДатаПроведенияПо
	|ПОМЕСТИТЬ ВТ_ТаблицаПромо
	|ИЗ
	|	Справочник.Промоакции.ТоварныеПозиции КАК ПромоакцииТоварныеПозиции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Промоакции.Склад КАК ПромоакцииСклад
	|		ПО ПромоакцииТоварныеПозиции.Ссылка = ПромоакцииСклад.Ссылка
	|ГДЕ
	|	ПромоакцииСклад.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ПромоакцииСклад.Ссылка.ДатаПроведенияС <= &ТекущаяДата
	|	И ПромоакцииСклад.Ссылка.ДатаПроведенияПо >= &ТекущаяДата
	|	И ПромоакцииСклад.Ссылка.Наименование ПОДОБНО ""СУПЕРПРОМО%""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УЗ_РеализацияККММотивацияТовар.СотрудникКод КАК СотрудникКод,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_ТаблицаПромо.ТоварКод, 0) <> 0
	|				ТОГДА УЗ_РеализацияККММотивацияТовар.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоСуперпромо
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.УЗ_РеализацияККМ.МотивацияТовар КАК УЗ_РеализацияККММотивацияТовар
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаПромо КАК ВТ_ТаблицаПромо
	|		ПО УЗ_РеализацияККММотивацияТовар.КодТовара = ВТ_ТаблицаПромо.ТоварКод
	|			И УЗ_РеализацияККММотивацияТовар.Ссылка.СкладКод = ВТ_ТаблицаПромо.АптекаКод
	|			И УЗ_РеализацияККММотивацияТовар.Ссылка.Дата >= ВТ_ТаблицаПромо.ДатаПроведенияС
	|			И УЗ_РеализацияККММотивацияТовар.Ссылка.Дата <= ВТ_ТаблицаПромо.ДатаПроведенияПо
	|ГДЕ
	|	УЗ_РеализацияККММотивацияТовар.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	УЗ_РеализацияККММотивацияТовар.СотрудникКод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПланПродажЛичныйВДолях.Сотрудник КАК Сотрудник,
	|	ВТ_ПланПродажЛичныйВДолях.СотрудникСНИЛС КАК СотрудникСНИЛС,
	|	ВТ_ПланПродажЛичныйВДолях.СотрудникКод КАК СотрудникКод,
	|	ВТ_ПланПродажЛичныйВДолях.ДатаНачала КАК ДатаНачала,
	|	ВТ_ПланПродажЛичныйВДолях.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ПланПродажЛичныйВДолях.ДоляПродажПФ КАК ДоляПродажПФ,
	|	ВТ_ПланПродажЛичныйВДолях.ДоляПродажСТМ КАК ДоляПродажСТМ,
	|	ВТ_ПланПродажЛичныйВДолях.КоличествоСуперпромо КАК КоличествоСуперпромо,
	|	ЕСТЬNULL(ВТ_Данные.КоличествоСуперпромо,0) КАК КоличествоСуперпромоПродажи
	|ИЗ
	|	ВТ_ПланПродажЛичныйВДолях КАК ВТ_ПланПродажЛичныйВДолях
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Данные КАК ВТ_Данные
	|		ПО ВТ_ПланПродажЛичныйВДолях.СотрудникКод = ВТ_Данные.СотрудникКод
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	
	Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ТекущаяДата()));		
	Запрос.УстановитьПараметр("ДатаОкончания",КонецМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьXML = Новый ТекстовыйДокумент;
	ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
	ЗаписьXML.ДобавитьСтроку("<document>"); 
	
	ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "SALE_EMPLOYEE_PERCENTAGE"); 
	ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ДобавитьСтроку("<sale_employee_percentage>");
	
	Выборка = Рез.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаписьXML.ДобавитьСтроку("<row>");
		ЗаписатьЭлементXML(ЗаписьXML, "employee",		КорректировкаСпецСимволов(СокрЛП(Выборка.Сотрудник)));
		//ЗаписатьЭлементXML(ЗаписьXML, "snils",			КорректировкаСпецСимволов(СокрЛП(Выборка.СотрудникСНИЛС)));				
		ЗаписатьЭлементXML(ЗаписьXML, "login_key",			КорректировкаСпецСимволов(СокрЛП(Выборка.СотрудникКод)));				
		ЗаписатьЭлементXML(ЗаписьXML, "start_date",		Формат(Выборка.ДатаНачала,"ДФ=dd.MM.yyyy") );	
		ЗаписатьЭлементXML(ЗаписьXML, "end_date",		Формат(Выборка.ДатаОкончания,"ДФ=dd.MM.yyyy") );	
		ЗаписатьЭлементXML(ЗаписьXML, "sale_PF",		Формат(Выборка.ДоляПродажПФ,"ЧГ=0; ЧН=0") );
		ЗаписатьЭлементXML(ЗаписьXML, "sale_STM",		Формат(Выборка.ДоляПродажСТМ,"ЧГ=0; ЧН=0") );
		ЗаписатьЭлементXML(ЗаписьXML, "superpromo",		Формат(Выборка.КоличествоСуперпромо,"ЧГ=0; ЧН=0") );
		ЗаписатьЭлементXML(ЗаписьXML, "superpromo_sum",	Формат(Выборка.КоличествоСуперпромоПродажи,"ЧГ=0; ЧН=0") );
		ЗаписьXML.ДобавитьСтроку("</row>");		
	
	КонецЦикла; 
	
	ЗаписьXML.ДобавитьСтроку("</sale_employee_percentage>"); 
	ЗаписьXML.ДобавитьСтроку("</document>"); 
	
	ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
	ЗаписьXML.Очистить();
	ЗаписьXML = Неопределено;
	
	Обмен.ЗаписатьУпаковкуВРегистрОбмена(Аптека,"SALE_EMPLOYEE_PERCENTAGE",ТекстУпаковки);
	
КонецПроцедуры

Процедура ВыгрузитьПромоакцииСуперпромо(Аптека = Неопределено) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.Текст =   
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПромоакцииТоварныеПозиции.Ссылка.Код КАК Код,
	|	ПромоакцииТоварныеПозиции.Ссылка.Наименование КАК Наименование,
	|	ПромоакцииТоварныеПозиции.Ссылка.ДатаПроведенияС КАК ДатаПроведенияС,
	|	ПромоакцииТоварныеПозиции.Ссылка.ДатаПроведенияПо КАК ДатаПроведенияПо,
	|	""Товар"" + ПромоакцииТоварныеПозиции.Ссылка.Наименование КАК Группировка,
	|	ПромоакцииТоварныеПозиции.Код1С КАК ТоварКод,
	|	ПромоакцииТоварныеПозиции.Товар.Наименование КАК ТоварНаименование,
	|	NULL КАК АптекаКод,
	|	NULL КАК АптекаНаименование,
	|	ПромоакцииТоварныеПозиции.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Промоакции.ТоварныеПозиции КАК ПромоакцииТоварныеПозиции
	|ГДЕ
	|	ПромоакцииТоварныеПозиции.Ссылка.ДатаПроведенияС <= &ТекущаяДата
	|	И ПромоакцииТоварныеПозиции.Ссылка.ДатаПроведенияПо >= &ТекущаяДата
	|	И ПромоакцииТоварныеПозиции.Ссылка.Наименование ПОДОБНО ""СУПЕРПРОМО%""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПромоакцииСклад.Ссылка.Код,
	|	ПромоакцииСклад.Ссылка.Наименование,
	|	ПромоакцииСклад.Ссылка.ДатаПроведенияС,
	|	ПромоакцииСклад.Ссылка.ДатаПроведенияПо,
	|	""Аптека"" + ПромоакцииСклад.Ссылка.Наименование,
	|	NULL,
	|	NULL,
	|	ПромоакцииСклад.Код1С,
	|	ПромоакцииСклад.Аптека.Наименование,
	|	ПромоакцииСклад.Ссылка
	|ИЗ
	|	Справочник.Промоакции.Склад КАК ПромоакцииСклад
	|ГДЕ
	|	ПромоакцииСклад.Ссылка.ДатаПроведенияС <= &ТекущаяДата
	|	И ПромоакцииСклад.Ссылка.ДатаПроведенияПо >= &ТекущаяДата
	|	И ПромоакцииСклад.Ссылка.Наименование ПОДОБНО ""СУПЕРПРОМО%""
	|ИТОГИ ПО
	|	Ссылка,
	|	Группировка";
	
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаПоСсылке = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Ссылка");
	Пока ВыборкаПоСсылке.Следующий() Цикл
		
		ЗаписьXML = Новый ТекстовыйДокумент;
		ЗаписьXML.ДобавитьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");
		ЗаписьXML.ДобавитьСтроку("<document>"); 
		
		ЗаписатьЭлементXML(ЗаписьXML, "pack_type", "SUPERPROMO"); 
		ЗаписатьЭлементXML(ЗаписьXML, "fmt_ver", "1"); 
		
		ЗаписьXML.ДобавитьСтроку("<superpromo>");
		
		ЗаписьXML.ДобавитьСтроку("<hdr>");
		ЗаписатьЭлементXML(ЗаписьXML, "id",				Формат(ВыборкаПоСсылке.Код,"ЧГ=0; ЧН=0") );				
		ЗаписатьЭлементXML(ЗаписьXML, "name",			КорректировкаСпецСимволов(СокрЛП(ВыборкаПоСсылке.Наименование)) );				
		ЗаписатьЭлементXML(ЗаписьXML, "start_date",		Формат(ВыборкаПоСсылке.ДатаПроведенияС,"ДФ=dd.MM.yyyy") );				
		ЗаписатьЭлементXML(ЗаписьXML, "end_date",		Формат(ВыборкаПоСсылке.ДатаПроведенияПо,"ДФ=dd.MM.yyyy") );	
		ЗаписьXML.ДобавитьСтроку("</hdr>");		
		
		ВыборкаПоГруппировке = ВыборкаПоСсылке.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Группировка");
		Пока ВыборкаПоГруппировке.Следующий() Цикл
			
			Если Лев(ВыборкаПоГруппировке.Группировка,5) = "Товар" Тогда
				ЗаписьXML.ДобавитьСтроку("<row_sku>");	
			Иначе
				ЗаписьXML.ДобавитьСтроку("<row_dep>");
			КонецЕсли;	
			
			Выборка = ВыборкаПоГруппировке.Выбрать();
			Пока Выборка.Следующий() Цикл
			
				Если Лев(ВыборкаПоГруппировке.Группировка,5) = "Товар" Тогда
					
					ЗаписьXML.ДобавитьСтроку("<row>");
					ЗаписатьЭлементXML(ЗаписьXML, "id_goods",		Формат(Выборка.ТоварКод,"ЧГ=0; ЧН=0") );				
					ЗаписатьЭлементXML(ЗаписьXML, "goods_descr",	КорректировкаСпецСимволов(СокрЛП(Выборка.ТоварНаименование)) );	
					ЗаписьXML.ДобавитьСтроку("</row>");		
					
				Иначе
					
					ЗаписьXML.ДобавитьСтроку("<row>");
					ЗаписатьЭлементXML(ЗаписьXML, "id_dep",		Формат(Выборка.АптекаКод,"ЧГ=0; ЧН=0") );				
					ЗаписатьЭлементXML(ЗаписьXML, "dep_descr",	КорректировкаСпецСимволов(СокрЛП(Выборка.АптекаНаименование)) );	
					ЗаписьXML.ДобавитьСтроку("</row>");		
					
				КонецЕсли	
			
			КонецЦикла; 
			
			Если Лев(ВыборкаПоГруппировке.Группировка,5) = "Товар" Тогда
				ЗаписьXML.ДобавитьСтроку("</row_sku>");	
			Иначе
				ЗаписьXML.ДобавитьСтроку("</row_dep>");
			КонецЕсли;	
			
		КонецЦикла;
		
		ЗаписьXML.ДобавитьСтроку("</superpromo>"); 
		ЗаписьXML.ДобавитьСтроку("</document>"); 
		
		ТекстУпаковки = ЗаписьXML.ПолучитьТекст();
		ЗаписьXML.Очистить();
		ЗаписьXML = Неопределено;
		
		Обмен.ЗаписатьУпаковкуВРегистрОбмена(Аптека,"SUPERPROMO",ТекстУпаковки);
	
	КонецЦикла; 
	
КонецПроцедуры

Процедура ВыгрузитьДопПолнительныеПродажи(Аптека = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                 |	ДополнительныеПродажи.КодТовара КАК КодТовара,
	                 |	ДополнительныеПродажи.КодТовараДопродажи КАК КодТовараДопродажи,
	                 |	ДополнительныеПродажи.СообщениеДопродажи.Наименование КАК СообщениеДопродажи
	                 |ИЗ
	                 |	Справочник.ДополнительныеПродажи КАК ДополнительныеПродажи";
			
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	
	ЗаписьXML = Новый ЗаписьТекста(ИмяФайла,"windows-1251");

	ЗаписьXML.ЗаписатьСтроку("<?xml version=""1.0"" encoding=""WINDOWS-1251""?>");


	ЗаписьXML.ЗаписатьСтроку("<document>"); 

	
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "pack_type", "ADDITIONAL_PRODUCTS"); 
	ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "fmt_ver", "1"); 
	
	ЗаписьXML.ЗаписатьСтроку("<additional_products>"); 
	
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ЗаписатьСтроку("<row>");
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_goods",	Формат(Выборка.КодТовара,"ЧГ=0; ЧН=0") );				
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "id_accompany",	Формат(Выборка.КодТовараДопродажи,"ЧГ=0; ЧН=0") );		
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "cash_hint",		КорректировкаСпецСимволов(СокрЛП(Выборка.СообщениеДопродажи)));
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "priority",	"0");
			ЗаписатьЭлементXMLЧерезЗапись(ЗаписьXML, "qnt",		"0");
		ЗаписьXML.ЗаписатьСтроку("</row>");
	КонецЦикла;
	ЗаписьXML.ЗаписатьСтроку("</additional_products>"); 
	ЗаписьXML.ЗаписатьСтроку("</document>"); 
	
	ЗаписьXML.Закрыть();
	ЗаписьXML = Новый ЧтениеТекста(ИмяФайла,"windows-1251");
	ТекстУпаковки = ЗаписьXML.Прочитать();
	ЗаписьXML.Закрыть();
	ЗаписьXML = Неопределено;
	УдалитьФайлы(ИмяФайла);	
	
	ЗаписатьУпаковкуВРегистрОбмена(Аптека, "ADDITIONAL_PRODUCTS" , ТекстУпаковки );

	
КонецПроцедуры

Процедура ВыгрузитьВсеСправочники(Аптека = Неопределено) Экспорт
	
	РегламентноеЗадание = Справочники.РегламентныеЗадания.НайтиПоКоду("ВыгрузкаСправочниковВАптеки");
	
	ВыгрузитьБанки(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Банки. Аптека = " + Аптека);
	ВыгрузитьКонтрагентов(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Контрагенты. Аптека = " + Аптека);
	ВыгрузитьБанковскиеСчета(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Банковские счета. Аптека = " + Аптека);
	ВыгрузитьФирмы(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Фирмы. Аптека = " + Аптека);
	ВыгрузитьАптеки(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Аптеки. Аптека = " + Аптека);	
	ВыгрузитьМестаХраненияВАптеке(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : ВыгрузитьМестаХраненияВАптеке. Аптека = " + Аптека);
	ВыгрузитьТипыДисконтныхКарт(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Типы диск. карт. Аптека = " + Аптека);
	ВыгрузитьДокументыМотивации(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Документы мотивации. Аптека = " + Аптека);
	ВыгрузитьСимптомыИТовар(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Симптомы и товар. Аптека = " + Аптека);
	ВыгрузитьДопродажи(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Допродажи. Аптека = " + Аптека);
	ВыгрузитьАтрибутыИнкассации(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Атрибуты инкассации. Аптека = " + Аптека);
	ВыгрузитьБрендыАптечныхСетей(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Бренды аптечных сетей. Аптека = " + Аптека);
	ВыгрузитьУслуги(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Услуги. Аптека = " + Аптека);
	//ВыгрузитьТоварыСНаценкой0(Аптека);
	//МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : ТоварыСНаценкой0. Аптека = " + Аптека);
	ВыгрузитьМаркетинговыеКонтракты(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Маркетиновые контракты. Аптека = " + Аптека);
	ВыгрузитьТоварыСТМ_БезПриорити(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : ТоварыСТМ_БезПриорити. Аптека = " + Аптека);
	ВыгрузитьАктивныйАссортимент(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : АктивныйАссортимент. Аптека = " + Аптека);
	//ВыгрузитьСпециальныеЦены(Аптека);
	//										МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Специальные цены. Аптека = " + Аптека);
	УЗ_РегламентныеЗадания.УЗ_ВыгрузкаСотрудниковФизлиц_В_АМ3(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Сотрудники. Аптека = " + Аптека);
	Если НЕ Аптека = Неопределено Тогда
		ВыгрузитьРекламныеАкции(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Рекламные акции. Аптека = " + Аптека);
	КонецЕсли;
	ВыгрузитьМатрицы(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Матрицы. Аптека = " + Аптека);
	ВыгрузитьДопМотивацию(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Доп. мотивация. Аптека = " + Аптека);
	ВыгрузитьТипыПоступленийНаСклад(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Типы поступлений на склад. Аптека = " + Аптека);
	ВыгрузитьТоварыНеУчаствующиеВСписании(Аптека);
											МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Выгрузка не участвующих в списании товаров. Аптека = " + Аптека);
	ВыгрузитьФальсификаты(Аптека);
	МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Выгрузка фальификатов. Аптека = " + Аптека);
	
	ВыгрузитьПланыПродажАптека(Аптека);
	МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Выгрузка планы продаж аптек. Аптека = " + Аптека);
	
	ВыгрузитьПланыПродажАптекаВДолях(Аптека);
	МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Выгрузка планы продаж аптек по долям. Аптека = " + Аптека);
	
	ВыгрузитьПланыПродажЛичный(Аптека);
	МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Выгрузка личные планы продаж");
	
	ВыгрузитьПланыПродажЛичныйВДолях(Аптека);
	МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Выгрузка личные планы продаж по долям");
	
	ВыгрузитьПромоакцииСуперпромо(Аптека);
	МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Выгрузка суперакции промо");
	
	ВыгрузитьДопПолнительныеПродажи(Аптека);
	МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгружен : Выгрузка дополнительные продажи");
	
	
	МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(РегламентноеЗадание, Перечисления.ТипыЗаписейЛога.Информация, "Выгрузка окончена.");
	
КонецПроцедуры







