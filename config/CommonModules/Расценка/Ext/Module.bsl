
Процедура КомментаторРасчета  (ТОварОбъект,Таб,Макет,ИмяСекции,СтруктураПараметров="",ФормироватьКомментарий=Ложь) 
	// Назначение:
	// Вывод, или не вывод , строки комментария расчета
	// 
	// 
	//--------------------------------------------------------------------------------
	Если  ФормироватьКомментарий=Ложь тогда
		ВОЗВРАТ ;
	КонецЕсли; 	
	
	
	//============================< Шаблон печати таблицы начало >================================GtG===
	Секция=Макет.ПолучитьОбласть(ИмяСекции); // тип Табличный документ
	//
	//СтруктураПарам= Новый  Структура;
	//СтруктураПарам.Вставить("Имя параметра как в макете","Значение параметра");
	//// .....
	// ... парам N
	Если СтруктураПараметров<>"" Тогда	
		Секция.Параметры.Заполнить(СтруктураПараметров); // заполняет данными из структуры (параметры и расшифровки), только те у которых имена совпадают
	КонецЕсли; 
	
		
	
	Если ИмяСекции="Регион" ТОгда   
		Попытка
			Таб.ЗакончитьГруппуСтрок();
		Исключение
			//Нет так нет...
		КонецПопытки; 
		Таб.Вывести(Секция); 
		Таб.НачатьГруппуСтрок(,);
	Иначе
		Таб.Вывести(Секция); 
	КонецЕсли;	

	
КонецПроцедуры

Функция ПолучитьПредельнуюРозничнуюЦену(СубъектРФ,КодПартии)
	
	Партия = Справочники.УЗ_Партии.НайтиПоКоду(КодПартии);
	Если Партия.Пустая() Тогда
		Возврат 0;
	КонецЕсли;
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СубъектыРФОграниченияПоЦенообразованию.ПредельнаяНадбавкаРозн
		|ИЗ
		|	Справочник.СубъектыРФ.ОграниченияПоЦенообразованию КАК СубъектыРФОграниченияПоЦенообразованию
		|ГДЕ
		|	СубъектыРФОграниченияПоЦенообразованию.Ссылка = &СубъектРФ
		|	И СубъектыРФОграниченияПоЦенообразованию.ЦенаПроизводителяОт < &ЦенаПроизводителя
		|	И СубъектыРФОграниченияПоЦенообразованию.ЦенаПроизводителяДо >= &ЦенаПроизводителя";
		
		Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
		Запрос.УстановитьПараметр("ЦенаПроизводителя",Партия.ЦенаПроизводителяБезНДС);
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			#Если Клиент Тогда
				Предупреждение("У субъекта РФ " + СубъектРФ + " нет соответствия цены производителя и предельной наценки");
			#КонецЕсли
			Возврат 0;
		КонецЕсли;
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		ПредельнаяЦена =  (Окр(Партия.ЦенаЗакуп/(1+Партия.СтавкаНДСЗакуп/100),2)+ Партия.ЦенаПроизводителяБезНДС/100*Выборка.ПредельнаяНадбавкаРозн)*(1+Партия.СтавкаНДСРозн/100);
		ПредельнаяЦена = Цел(ПредельнаяЦена*10)/10;
		ПредельнаяЦена = Окр(ПредельнаяЦена/Партия.К,2)*Партия.К ;
		
		Возврат ПредельнаяЦена;
	
КонецФункции

Функция ПолучитьДанныеПоТОварамДокумента(Документ,ВидФиксЦены,ДатаДок)
	
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Получаем таблицу данных по товарам документа...";
	
	ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
	
	Запрос=Новый Запрос;
	Если ВидДок = "УЗ_ПоступлениеТовара" Тогда
		Запрос.Текст="ВЫБРАТЬ
		|	АП.Ссылка,
		|	АП.ГруппаНаценки,
		|	АП.ГруппаНаценкиДоп,
		|	АП.ГруппаНаценки.Наценка КАК Наценка,
		|	АП.ГруппаНаценки.МинНаценка КАК МинНаценка,
		|	АП.ГруппаНаценки.МаксНаценка КАК МаксНаценка,
		|	АП.ГруппаНаценкиДоп.Наценка КАК НаценкаДоп,
		|	АП.ГруппаНаценкиДоп.МинНаценка КАК МинНаценкаДоп,
		|	АП.ГруппаНаценкиДоп.МаксНаценка КАК МаксНаценкаДоп,
		|	АП.ПометкаУдаления,
		|	АП.Код,
		|	АП.Наименование,
		|	АП.Поставщик,
		|	АП.Производитель,
		|	АП.Бренд,
		|	АП.ЖНВЛС,
		|	АП.ПККН,
		|	АП.СВЛС,
		|	АП.Сезон,
		|	АП.ТипДляЦО,
		|	АП.АптечныйОБ,
		|	АП.ГруппаАП,
		|	АП.ГруппаФТГ,
		|	АП.ДатаВводаВАП,
		|	АП.Дисконт,
		|	АП.Дозировка,
		|	АП.ЕдиницаПоУмолчанию,
		|	АП.ЕдиницаПоУмолчанию.К КАК Коэфф,
		|	АП.ЗакупочнаяЦена,
		|	АП.Категория,
		|	АП.КолвоВУпаковке,
		|	АП.ЛекФорма,
		|	АП.МаксЦенаMedlux,
		|	АП.МеждународноеНазвание,
		|	АП.МинЦенаMedlux,
		|	АП.Назначение,
		|	АП.ОбобщеннаяГруппа,
		|	АП.ОсновнаяГруппа,
		|	АП.Подкатегория,
		|	АП.НеУчаствуетВМотивации,
		|	АП.Причина,
		|	АП.ПроцентДисконта,
		|	АП.Реализация,
		|	АП.РозничнаяЦена,
		|	АП.РозничнаяЦенаДоп,
		|	АП.Сезонный,
		|	АП.СпецПроект,
		|	АП.СпецРознЦена,
		|	АП.СтавкаНДС,
		|	АП.УчаствуетВАП,
		|	АП.Фасовка,
		|	АП.Примечание,
		|	АП.КолвоМин,
		|	АП.КолвоМакс,
		|	АП.ТорговоеНаименование,
		|	АП.Топ100,
		|	АП.Топ1000,
		|	АП.Новинка,
		|	АП.Разбивается,
		|	АП.ЕдиницаМин,
		|	АП.ЗаказНаСкладе,
		|	АП.НезависимаяГруппа,
		|	АП.Маркер,
		|	АП.Локомотив,
		|	ЕСТЬNULL(ФЦ.Цена, 0) КАК ФиксированнаяЦена,
		|	ЕСТЬNULL(ЦеныМониторинга.Цена, 0) КАК ЦенаМониторинга,
		|	ЕСТЬNULL(ИндЦены.ЦенаРозн, 0) КАК ИндЦена,
		|	ЕСТЬNULL(ЦеныПротокола.Цена, 0) КАК ЦенаПротокола
		|ИЗ
		|	Документ.УЗ_ПоступлениеТовара.Товар КАК ДокПост_Товар
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
		|		ПО ДокПост_Товар.Товар = АП.Ссылка
		|			И (ДокПост_Товар.Ссылка = &Документ)
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксированныеЦены.СрезПоследних КАК ФиксированныеЦены
		//|		ПО (ФиксированныеЦены.Товар = ДокПост_Товар.Товар)
		//|			И (ДокПост_Товар.Ссылка = &Документ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксЦены.СрезПоследних(,ВидФиксЦены = &ВидФиксЦены) КАК ФЦ
		|		ПО (ФЦ.КодТовара = ДокПост_Товар.КодТовара)
		|			И (ДокПост_Товар.Ссылка = &Документ)		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныМониторинга КАК ЦеныМониторинга
		|		ПО (ЦеныМониторинга.Товар = ДокПост_Товар.Товар)
		|			И (ДокПост_Товар.Ссылка = &Документ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЗ_ПоступлениеТовара.ИндивидуальныеЦены КАК ИндЦены
		|		ПО ДокПост_Товар.Ссылка = ИндЦены.Ссылка
		|			И (ИндЦены.Ссылка = &Документ)
		|			И ДокПост_Товар.Товар = ИндЦены.Товар
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныПротокола КАК ЦеныПротокола
		|		ПО ДокПост_Товар.Ссылка.Поставщик = ЦеныПротокола.Поставщик
		|			И ДокПост_Товар.Товар = ЦеныПротокола.Товар
		|			И (ЦеныПротокола.ДатаНачала <= &ДатаДок)
		|			И (&ДатаДок <= ЦеныПротокола.ДатаОкончания)
		|			И (ЦеныПротокола.Поставщик.КонтролироватьЦеныПротокола = ИСТИНА)
		|ГДЕ
		|	ДокПост_Товар.Ссылка = &Документ";
	ИначеЕсли ВидДок = "ПоступлениеТовара" Тогда
		Запрос.Текст="ВЫБРАТЬ
		|	АП.Ссылка,
		|	АП.ГруппаНаценки,
		|	АП.ГруппаНаценкиДоп,
		|	АП.ГруппаНаценки.Наценка КАК Наценка,
		|	АП.ГруппаНаценки.МинНаценка КАК МинНаценка,
		|	АП.ГруппаНаценки.МаксНаценка КАК МаксНаценка,
		|	АП.ГруппаНаценкиДоп.Наценка КАК НаценкаДоп,
		|	АП.ГруппаНаценкиДоп.МинНаценка КАК МинНаценкаДоп,
		|	АП.ГруппаНаценкиДоп.МаксНаценка КАК МаксНаценкаДоп,
		|	АП.ПометкаУдаления,
		|	АП.Предопределенный,
		|	АП.Родитель,
		|	АП.ЭтоГруппа,
		|	АП.Код,
		|	АП.Наименование,
		|	АП.Поставщик,
		|	АП.Производитель,
		|	АП.Бренд,
		|	АП.ЖНВЛС,
		|	АП.ПККН,
		|	АП.СВЛС,
		|	АП.Сезон,
		|	АП.ТипДляЦО,
		|	АП.АптечныйОБ,
		|	АП.Артикул,
		|	АП.ГруппаАП,
		|	АП.ГруппаФТГ,
		|	АП.ДатаВводаВАП,
		|	АП.Дисконт,
		|	АП.Дозировка,
		|	АП.ЕдиницаПоУмолчанию,
		|	АП.ЕдиницаПоУмолчанию.К КАК Коэфф,
		|	АП.ЗакупочнаяЦена,
		|	АП.Категория,
		|	АП.КолвоВУпаковке,
		|	АП.ЛекФорма,
		|	АП.МаксЦенаMedlux,
		|	АП.МеждународноеНазвание,
		|	АП.МинЦенаMedlux,
		|	АП.Назначение,
		|	АП.ОбобщеннаяГруппа,
		|	АП.ОсновнаяГруппа,
		|	АП.Подкатегория,
		|	АП.НеУчаствуетВМотивации,
		|	АП.Причина,
		|	АП.ПроцентДисконта,
		|	АП.Реализация,
		|	АП.РозничнаяЦена,
		|	АП.РозничнаяЦенаДоп,
		|	АП.Сезонный,
		|	АП.СпецПроект,
		|	АП.СпецРознЦена,
		|	АП.СтавкаНДС,
		|	АП.УчаствуетВАП,
		|	АП.Фасовка,
		|	АП.Примечание,
		|	АП.ЕдиницаОтгрузки,
		|	АП.КолвоМин,
		|	АП.КолвоМакс,
		|	АП.ТорговоеНаименование,
		|	АП.Концентрация,
		|	АП.Дополнение,
		|	АП.НаименованиеПоГенератору,
		|	АП.Топ100,
		|	АП.Топ1000,
		|	АП.Новинка,
		|	АП.Разбивается,
		|	АП.ЕдиницаМин,
		|	АП.ЗаказНаСкладе,
		|	АП.Представление,
		|	АП.НезависимаяГруппа,
		|	АП.Маркер,
		|	АП.Локомотив,
		|	ЕСТЬNULL(ФЦ.Цена, 0) КАК ФиксированнаяЦена,
		|	ЕСТЬNULL(ЦеныМониторинга.Цена, 0) КАК ЦенаМониторинга,
		|	ЕСТЬNULL(ИндЦены.ЦенаРозн, 0) КАК ИндЦена,
		|	ЕСТЬNULL(ЦеныПротокола.Цена, 0) КАК ЦенаПротокола
		|ИЗ
		|	Документ.ПоступлениеТовара.Товар КАК ДокПост_Товар
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
		|		ПО ДокПост_Товар.Товар = АП.Ссылка
		|			И (ДокПост_Товар.Ссылка = &Документ)
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксированныеЦены.СрезПоследних КАК ФиксированныеЦены
		//|		ПО (ФиксированныеЦены.Товар = ДокПост_Товар.Товар)
		//|			И (ДокПост_Товар.Ссылка = &Документ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксЦены.СрезПоследних(,ВидФиксЦены = &ВидФиксЦены) КАК ФЦ
		|		ПО (ФЦ.КодТовара = ДокПост_Товар.Товар.Код)
		|			И (ДокПост_Товар.Ссылка = &Документ)		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныМониторинга КАК ЦеныМониторинга
		|		ПО (ЦеныМониторинга.Товар = ДокПост_Товар.Товар)
		|			И (ДокПост_Товар.Ссылка = &Документ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТовара.ИндивидуальныеЦены КАК ИндЦены
		|		ПО ДокПост_Товар.Ссылка = ИндЦены.Ссылка
		|			И (ИндЦены.Ссылка = &Документ)
		|			И ДокПост_Товар.Товар = ИндЦены.Товар
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныПротокола КАК ЦеныПротокола
		|		ПО ДокПост_Товар.Ссылка.Поставщик = ЦеныПротокола.Поставщик
		|			И ДокПост_Товар.Товар = ЦеныПротокола.Товар
		|			И (ЦеныПротокола.ДатаНачала <= &ДатаДок)
		|			И (&ДатаДок <= ЦеныПротокола.ДатаОкончания)
		|			И (ЦеныПротокола.Поставщик.КонтролироватьЦеныПротокола = ИСТИНА)
		|ГДЕ
		|	ДокПост_Товар.Ссылка = &Документ";
		
		
	Иначе
		Запрос.Текст="ВЫБРАТЬ
		|	АП.Ссылка,
		|	АП.ГруппаНаценки,
		|	АП.ГруппаНаценкиДоп,
		|	АП.ГруппаНаценки.Наценка КАК Наценка,
		|	АП.ГруппаНаценки.МинНаценка КАК МинНаценка,
		|	АП.ГруппаНаценки.МаксНаценка КАК МаксНаценка,
		|	АП.ГруппаНаценкиДоп.Наценка КАК НаценкаДоп,
		|	АП.ГруппаНаценкиДоп.МинНаценка КАК МинНаценкаДоп,
		|	АП.ГруппаНаценкиДоп.МаксНаценка КАК МаксНаценкаДоп,
		|	АП.ПометкаУдаления,
		|	АП.Предопределенный,
		|	АП.Родитель,
		|	АП.ЭтоГруппа,
		|	АП.Код,
		|	АП.Наименование,
		|	АП.Поставщик,
		|	АП.Производитель,
		|	АП.Бренд,
		|	АП.ЖНВЛС,
		|	АП.ПККН,
		|	АП.СВЛС,
		|	АП.Сезон,
		|	АП.ТипДляЦО,
		|	АП.АптечныйОБ,
		|	АП.Артикул,
		|	АП.ГруппаАП,
		|	АП.ГруппаФТГ,
		|	АП.ДатаВводаВАП,
		|	АП.Дисконт,
		|	АП.Дозировка,
		|	АП.ЕдиницаПоУмолчанию,
		|	АП.ЕдиницаПоУмолчанию.К КАК Коэфф,
		|	АП.ЗакупочнаяЦена,
		|	АП.Категория,
		|	АП.КолвоВУпаковке,
		|	АП.ЛекФорма,
		|	АП.МаксЦенаMedlux,
		|	АП.МеждународноеНазвание,
		|	АП.МинЦенаMedlux,
		|	АП.Назначение,
		|	АП.ОбобщеннаяГруппа,
		|	АП.ОсновнаяГруппа,
		|	АП.Подкатегория,
		|	АП.НеУчаствуетВМотивации,
		|	АП.Причина,
		|	АП.ПроцентДисконта,
		|	АП.Реализация,
		|	АП.РозничнаяЦена,
		|	АП.РозничнаяЦенаДоп,
		|	АП.Сезонный,
		|	АП.СпецПроект,
		|	АП.СпецРознЦена,
		|	АП.СтавкаНДС,
		|	АП.Страна,
		|	АП.УчаствуетВАП,
		|	АП.Фасовка,
		|	АП.Примечание,
		|	АП.ЕдиницаОтгрузки,
		|	АП.КолвоМин,
		|	АП.КолвоМакс,
		|	АП.ТорговоеНаименование,
		|	АП.Концентрация,
		|	АП.Дополнение,
		|	АП.НаименованиеПоГенератору,
		|	АП.Топ100,
		|	АП.Топ1000,
		|	АП.Новинка,
		|	АП.Разбивается,
		|	АП.ЕдиницаМин,
		|	АП.ЗаказНаСкладе,
		|	АП.Представление,
		|	АП.НезависимаяГруппа,
		|	АП.Маркер,
		|	АП.Локомотив,
		|	ЕСТЬNULL(ФЦ.Цена, 0) КАК ФиксированнаяЦена,
		|	ЕСТЬNULL(ЦеныМониторинга.Цена, 0) КАК ЦенаМониторинга,
		|	0 как ИндЦена,
		|	0 как ЦенаПротокола
		|ИЗ
		|	Документ."+ВидДок+".Товар КАК ДокПост_Товар
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
		|		ПО ДокПост_Товар.Товар = АП.Ссылка
		|			И (ДокПост_Товар.Ссылка = &Документ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксЦены.СрезПоследних(,ВидФиксЦены = &ВидФиксЦены) КАК ФЦ
		|		ПО (ФЦ.КодТовара = ДокПост_Товар.КодТовара)
		|			И (ДокПост_Товар.Ссылка = &Документ)		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныМониторинга КАК ЦеныМониторинга
		|		ПО (ЦеныМониторинга.Товар = ДокПост_Товар.Товар) И (ДокПост_Товар.Ссылка = &Документ)				 
		|ГДЕ
		|	ДокПост_Товар.Ссылка = &Документ";
		
	КонецЕсли;
				 
    Запрос.УстановитьПараметр("Документ",Документ);
	Запрос.УстановитьПараметр("ВидФиксЦены",ВидФиксЦены);
	Запрос.УстановитьПараметр("ДатаДок",ДатаДок);

	
	ТЗ=Запрос.Выполнить().Выгрузить();
	
	ТЗ.Индексы.Добавить("Код");
	
	Возврат   ТЗ;
	
КонецФункции	


Функция ПолучитьДанныеПоПартиямДокумента(Документ)
	
	
	ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
	Запрос=Новый Запрос();

	Если ВидДок = "УЗ_ПоступлениеТовара" Тогда
		Запрос.Текст="ВЫБРАТЬ
		             |	ДокТовар.КодПартии КАК КодПартии,
		             |	ДокТовар.КодТовара КАК КодТовара,
		             |	ДокТовар.СтавкаНДСРозн КАК СтавкаНДС,
		             |	ДокТовар.ЦенаЗакуп КАК ЦенаЗакуп,
		             |	ДокТовар.ЦенаПроизводителя КАК ЦенаПроизводителя,
		             |	ДокТовар.ЦенаГосРегистрации КАК ЦенаГосРегистрации,
		             |	ЕСТЬNULL(Пост.Ссылка, ЗНАЧЕНИЕ(Справочник.Поставщики.ПустаяСсылка)) КАК ПартияПоставщик,
		             |	ДокТовар.Товар КАК Товар,
		             |	ДокТовар.СрокГодности КАК СрокГодности,
		             |	ЕСТЬNULL(СпецЦены.Ссылка.СпециальнаяЦена, 0) КАК СпецЦена,
		             |	ВЫБОР
		             |		КОГДА СпецЦены.Ссылка.СпециальнаяЦена ЕСТЬ NULL
		             |			ТОГДА ЛОЖЬ
		             |		ИНАЧЕ ИСТИНА
		             |	КОНЕЦ КАК ЕстьСпецЦена,
		             |	ДокТовар.КачествоТовара КАК КачествоТовара
		             |ИЗ
		             |	Документ.УЗ_ПоступлениеТовара.Товар КАК ДокТовар
		             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
		             |		ПО (Партии.Код = ДокТовар.КодПартии)
		             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Поставщики КАК Пост
		             |		ПО (Пост.Код = Партии.ПоставщикИсходный)
		             |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпециальныеЦены.Аптеки КАК СпецЦены
		             |		ПО ДокТовар.Товар = СпецЦены.Ссылка.Товар
		             |			И (&Дата МЕЖДУ НАЧАЛОПЕРИОДА(СпецЦены.Ссылка.НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(СпецЦены.Ссылка.КонПериода, ДЕНЬ))
		             |			И (СпецЦены.Аптека = &Склад)
		             |			И (СпецЦены.Ссылка.ПометкаУдаления = ЛОЖЬ)
		             |ГДЕ
		             |	ДокТовар.Ссылка = &Документ";		
		
	ИначеЕсли ВидДок = "УЗ_ВводОстатков" Тогда
		Запрос.Текст="ВЫБРАТЬ
		|	ДокТовар.КодПартии КАК КодПартии,
		|	ДокТовар.КодТовара КАК КодТовара,
		|	ДокТовар.СтавкаНДСРозн КАК СтавкаНДС,
		|	ДокТовар.ЦенаЗакуп,
		|	ДокТовар.ЦенаПроизводителя,
		|	ДокТовар.ЦенаГосРегистрации,
		|	ЕСТЬNULL(Пост.Ссылка, ЗНАЧЕНИЕ(Справочник.Поставщики.ПустаяСсылка)) КАК ПартияПоставщик,
		|	ДокТовар.Товар КАК Товар,
		|	ДокТовар.СрокГодности КАК СрокГодности , """" как КачествоТовара
		|ПОМЕСТИТЬ PRT
		|ИЗ
		|	Документ.УЗ_ВводОстатков.Товар КАК ДокТовар
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
		|		ПО (Партии.Код = ДокТовар.КодПартии)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Поставщики КАК Пост
		|		ПО (Пост.Код = Партии.ПоставщикИсходный)
		|ГДЕ
		|	ДокТовар.Ссылка = &Документ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпециальныеЦеныАптеки.Ссылка.Товар КАК Товар,
		|	СпециальныеЦеныАптеки.Ссылка.СпециальнаяЦена
		|ПОМЕСТИТЬ СпецЦены
		|ИЗ
		|	Справочник.СпециальныеЦены.Аптеки КАК СпециальныеЦеныАптеки
		|ГДЕ
		|	СпециальныеЦеныАптеки.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И &Дата МЕЖДУ НАЧАЛОПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.КонПериода, ДЕНЬ)
		|	И СпециальныеЦеныАптеки.Аптека = &Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	PRT.КодПартии,
		|	PRT.КодТовара,
		|	PRT.СтавкаНДС,
		|	PRT.ЦенаЗакуп,
		|	PRT.ЦенаПроизводителя,
		|	PRT.ЦенаГосРегистрации,
		|	PRT.Товар,
		|	PRT.СрокГодности,
		|	PRT.ПартияПоставщик,
		|	ЕСТЬNULL(СпецЦены.СпециальнаяЦена, 0) КАК СпецЦена,
		|	ВЫБОР
		|		КОГДА СпецЦены.СпециальнаяЦена ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСпецЦена ,
		|	PRT.КачествоТовара
		|ИЗ
		|	PRT КАК PRT
		|		ЛЕВОЕ СОЕДИНЕНИЕ СпецЦены КАК СпецЦены
		|		ПО PRT.Товар = СпецЦены.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ PRT
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СпецЦены";	
		
	ИначеЕсли ВидДок = "УЗ_Перемещение" Тогда

		Если Документ.ВнутреннееПеремещение Тогда
			ТекстКодаПартии = " ДокТовар.КодПартии ";
			
		Иначе
			ТекстКодаПартии = " ДокТовар.КодПартииПолучателя ";
		КонецЕсли;
		Запрос.Текст="	ВЫБРАТЬ
		|		Партии.Ссылка КАК Партия,
		|		Партии.СтавкаНДСРозн КАК СтавкаНДС,
		|		Партии.ЦенаЗакуп КАК ЦенаЗакуп,
		|		Партии.ЦенаПроизводителяБезНДС КАК ЦенаПроизводителя,
		|		Партии.ЦенаГосРегистрации КАК ЦенаГосРегистрации,
		|		ЕСТЬNULL(Пост.Ссылка, ЗНАЧЕНИЕ(Справочник.Поставщики.ПустаяСсылка)) КАК ПартияПоставщик,
		|		ДокТовар.Товар КАК Товар,
		|		" + ТекстКодаПартии + " КАК КодПартии,
		|		ДокТовар.КодТовара КАК КодТовара,
		|		Партии.СрокГодности КАК СрокГодности,
		|		ЕСТЬNULL(ВЦП.КачествоТовара,"""") как КачествоТовара
		|	ПОМЕСТИТЬ PRT
		|	ИЗ
		|		Документ.УЗ_Перемещение.Товар КАК ДокТовар
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии как Партии ПО Партии.Код = " + ТекстКодаПартии + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Поставщики КАК Пост
		|		ПО (Пост.Код = Партии.ПоставщикИсходный)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВходящиеЦеныПоставщика КАК ВЦП
		|		ПО ДокТовар.КодПартии = ВЦП.ПартияКод

		|	ГДЕ
		|		ДокТовар.Ссылка = &Документ
		|	
		|	ИНДЕКСИРОВАТЬ ПО
		|		Товар
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	ВЫБРАТЬ
		|		СпециальныеЦеныАптеки.Ссылка.Товар КАК Товар,
		|		СпециальныеЦеныАптеки.Ссылка.СпециальнаяЦена
		|	ПОМЕСТИТЬ СпецЦены
		|	ИЗ
		|		Справочник.СпециальныеЦены.Аптеки КАК СпециальныеЦеныАптеки
		|	ГДЕ
		|		СпециальныеЦеныАптеки.Ссылка.ПометкаУдаления = ЛОЖЬ
		|		И &Дата МЕЖДУ НАЧАЛОПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.КонПериода, ДЕНЬ)
		|		И СпециальныеЦеныАптеки.Аптека = &Склад
		|	
		|	ИНДЕКСИРОВАТЬ ПО
		|		Товар
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	ВЫБРАТЬ
		|		PRT.Партия,
		|		PRT.КодПартии,
		|		PRT.КодТовара,
		|		PRT.СтавкаНДС,
		|		PRT.ЦенаЗакуп,
		|		PRT.ЦенаПроизводителя,
		|		PRT.ЦенаГосРегистрации,
		|		PRT.Товар,
		|		PRT.СрокГодности,
		|		PRT.ПартияПоставщик,
		|		ЕСТЬNULL(СпецЦены.СпециальнаяЦена, 0) КАК СпецЦена,
		|		ВЫБОР
		|			КОГДА СпецЦены.СпециальнаяЦена ЕСТЬ NULL 
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК ЕстьСпецЦена ,
		|		PRT.КачествоТовара
		|	ИЗ
		|		PRT КАК PRT
		|			ЛЕВОЕ СОЕДИНЕНИЕ СпецЦены КАК СпецЦены
		|			ПО PRT.Товар = СпецЦены.Товар
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	УНИЧТОЖИТЬ PRT
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	УНИЧТОЖИТЬ СпецЦены
		|";	
	ИначеЕсли ВидДок = "УстановкаРозничныхЦен" Тогда

		Запрос.Текст="	ВЫБРАТЬ
		|		Партии.Ссылка КАК Партия,
		|		Партии.СтавкаНДСРозн КАК СтавкаНДС,
		|		Партии.ЦенаЗакуп КАК ЦенаЗакуп,
		|		Партии.ЦенаПроизводителяБезНДС КАК ЦенаПроизводителя,
		|		Партии.ЦенаГосРегистрации КАК ЦенаГосРегистрации,
		|		ЕСТЬNULL(Пост.Ссылка, ЗНАЧЕНИЕ(Справочник.Поставщики.ПустаяСсылка)) КАК ПартияПоставщик,
		|		ДокТовар.Товар КАК Товар,
		|		ДокТовар.КодПартии КАК КодПартии,
		|		ДокТовар.КодТовара КАК КодТовара,
		|		Партии.СрокГодности КАК СрокГодности,
		|		ЕСТЬNULL(ВЦП.КачествоТовара,"""") как КачествоТовара
		|	ПОМЕСТИТЬ PRT
		|	ИЗ
		|		Документ.УстановкаРозничныхЦен.Товар КАК ДокТовар
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии как Партии ПО Партии.Код = ДокТовар.КодПартии
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Поставщики КАК Пост
		|		ПО (Пост.Код = Партии.ПоставщикИсходный)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВходящиеЦеныПоставщика КАК ВЦП
		|		ПО ДокТовар.КодПартии = ВЦП.ПартияКод
		|	ГДЕ
		|		ДокТовар.Ссылка = &Документ
		|	
		|	ИНДЕКСИРОВАТЬ ПО
		|		Товар
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	ВЫБРАТЬ
		|		СпециальныеЦеныАптеки.Ссылка.Товар КАК Товар,
		|		СпециальныеЦеныАптеки.Ссылка.СпециальнаяЦена
		|	ПОМЕСТИТЬ СпецЦены
		|	ИЗ
		|		Справочник.СпециальныеЦены.Аптеки КАК СпециальныеЦеныАптеки
		|	ГДЕ
		|		СпециальныеЦеныАптеки.Ссылка.ПометкаУдаления = ЛОЖЬ
		|		И &Дата МЕЖДУ НАЧАЛОПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.КонПериода, ДЕНЬ)
		|		И СпециальныеЦеныАптеки.Аптека = &Склад
		|	
		|	ИНДЕКСИРОВАТЬ ПО
		|		Товар
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	ВЫБРАТЬ
		|		PRT.Партия,
		|		PRT.КодПартии,
		|		PRT.КодТовара,
		|		PRT.СтавкаНДС,
		|		PRT.ЦенаЗакуп,
		|		PRT.ЦенаПроизводителя,
		|		PRT.ЦенаГосРегистрации,
		|		PRT.Товар,
		|		PRT.СрокГодности,
		|		PRT.ПартияПоставщик,
		|		ЕСТЬNULL(СпецЦены.СпециальнаяЦена, 0) КАК СпецЦена,
		|		ВЫБОР
		|			КОГДА СпецЦены.СпециальнаяЦена ЕСТЬ NULL 
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК ЕстьСпецЦена,
		|		PRT.КачествоТовара
		|	ИЗ
		|		PRT КАК PRT
		|			ЛЕВОЕ СОЕДИНЕНИЕ СпецЦены КАК СпецЦены
		|			ПО PRT.Товар = СпецЦены.Товар
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	УНИЧТОЖИТЬ PRT
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	УНИЧТОЖИТЬ СпецЦены
		|";	
	ИначеЕсли ВидДок = "ПереоценкаПоКачеству" Тогда

		Запрос.Текст="	ВЫБРАТЬ
		|		Партии.Ссылка КАК Партия,
		|		Партии.СтавкаНДСРозн КАК СтавкаНДС,
		|		Партии.ЦенаЗакуп КАК ЦенаЗакуп,
		|		Партии.ЦенаПроизводителяБезНДС КАК ЦенаПроизводителя,
		|		Партии.ЦенаГосРегистрации КАК ЦенаГосРегистрации,
		|		ЕСТЬNULL(Пост.Ссылка, ЗНАЧЕНИЕ(Справочник.Поставщики.ПустаяСсылка)) КАК ПартияПоставщик,
		|		ДокТовар.Товар КАК Товар,
		|		ДокТовар.КодПартии КАК КодПартии,
		|		ДокТовар.КодТовара КАК КодТовара,
		|		Партии.СрокГодности КАК СрокГодности,
		|		ЕСТЬNULL(ВЦП.КачествоТовара,"""") как КачествоТовара
		|	ПОМЕСТИТЬ PRT
		|	ИЗ
		|		Документ.ПереоценкаПоКачеству.Товар КАК ДокТовар
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии как Партии ПО Партии.Код = ДокТовар.КодПартии
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Поставщики КАК Пост
		|		ПО (Пост.Код = Партии.ПоставщикИсходный)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВходящиеЦеныПоставщика КАК ВЦП
		|		ПО ДокТовар.КодПартии = ВЦП.ПартияКод
		|	ГДЕ
		|		ДокТовар.Ссылка = &Документ
		|	
		|	ИНДЕКСИРОВАТЬ ПО
		|		Товар
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	ВЫБРАТЬ
		|		СпециальныеЦеныАптеки.Ссылка.Товар КАК Товар,
		|		СпециальныеЦеныАптеки.Ссылка.СпециальнаяЦена
		|	ПОМЕСТИТЬ СпецЦены
		|	ИЗ
		|		Справочник.СпециальныеЦены.Аптеки КАК СпециальныеЦеныАптеки
		|	ГДЕ
		|		СпециальныеЦеныАптеки.Ссылка.ПометкаУдаления = ЛОЖЬ
		|		И &Дата МЕЖДУ НАЧАЛОПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.КонПериода, ДЕНЬ)
		|		И СпециальныеЦеныАптеки.Аптека = &Склад
		|	
		|	ИНДЕКСИРОВАТЬ ПО
		|		Товар
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	ВЫБРАТЬ
		|		PRT.Партия,
		|		PRT.КодПартии,
		|		PRT.КодТовара,
		|		PRT.СтавкаНДС,
		|		PRT.ЦенаЗакуп,
		|		PRT.ЦенаПроизводителя,
		|		PRT.ЦенаГосРегистрации,
		|		PRT.Товар,
		|		PRT.СрокГодности,
		|		PRT.ПартияПоставщик,
		|		ЕСТЬNULL(СпецЦены.СпециальнаяЦена, 0) КАК СпецЦена,
		|		ВЫБОР
		|			КОГДА СпецЦены.СпециальнаяЦена ЕСТЬ NULL 
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК ЕстьСпецЦена,
		|		PRT.КачествоТовара		
		|	ИЗ
		|		PRT КАК PRT
		|			ЛЕВОЕ СОЕДИНЕНИЕ СпецЦены КАК СпецЦены
		|			ПО PRT.Товар = СпецЦены.Товар
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	УНИЧТОЖИТЬ PRT
		|	;
		|	
		|	////////////////////////////////////////////////////////////////////////////////
		|	УНИЧТОЖИТЬ СпецЦены
		|";	

	КонецЕсли;
    Запрос.УстановитьПараметр("Документ",Документ);
	Запрос.УстановитьПараметр("Дата",Документ.Дата);

	
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.УЗ_Перемещение") Тогда
		ДокСклад=Документ.СкладПолучатель;
	Иначе
		ДокСклад=Документ.Склад;
	КонецЕсли;	
	Запрос.УстановитьПараметр("Склад",ДокСклад);
	
	
	ТЗ=Запрос.Выполнить().Выгрузить(); //тз
	
	ТЗ.Индексы.Добавить("КодПартии");
	
	Возврат   ТЗ;
	
	
КонецФункции	


Функция ПолучитьДанныеПоПартиямДокумента366(Документ)
	
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Получаем таблицу данных по партиям документа...";
	
	ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
	//
	//  "+ВидДок+"
	Запрос=Новый Запрос();
	
	Запрос.Текст="	ВЫБРАТЬ
	|		ДокТовар.Партия КАК Партия,
	|		ДокТовар.СтавкаНДС КАК СтавкаНДС,
	|		ДокТовар.ЦенаЗакуп КАК ЦенаЗакуп,
	|		ДокТовар.ЦенаПроизводителя КАК ЦенаПроизводителяБезНДС,
	|		ДокТовар.ЦенаГосРегистрации КАК ЦенаГосРегистрации,
	|		ДокТовар.Товар КАК Товар
	|	ПОМЕСТИТЬ PRT
	|	ИЗ
	|		Документ."+ВидДок+".Товар КАК ДокТовар
	|	ГДЕ
	|		ДокТовар.Ссылка = &Документ
	|	
	|	ИНДЕКСИРОВАТЬ ПО
	|		Товар
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	ВЫБРАТЬ
	|		СпециальныеЦеныАптеки.Ссылка.Товар КАК Товар,
	|		СпециальныеЦеныАптеки.Ссылка.СпециальнаяЦена
	|	ПОМЕСТИТЬ СпецЦены
	|	ИЗ
	|		Справочник.СпециальныеЦены.Аптеки КАК СпециальныеЦеныАптеки
	|	ГДЕ
	|		СпециальныеЦеныАптеки.Ссылка.ПометкаУдаления = ЛОЖЬ
	|		И &Дата МЕЖДУ НАЧАЛОПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.НачПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(СпециальныеЦеныАптеки.Ссылка.КонПериода, ДЕНЬ)
	|		И СпециальныеЦеныАптеки.Аптека = &Склад
	|	
	|	ИНДЕКСИРОВАТЬ ПО
	|		Товар
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	ВЫБРАТЬ
	|		PRT.Партия,
	|		PRT.СтавкаНДС,
	|		PRT.ЦенаЗакуп,
	|		PRT.ЦенаПроизводителяБезНДС,
	|		PRT.ЦенаГосРегистрации,
	|		PRT.Товар,
	|		ЕСТЬNULL(СпецЦены.СпециальнаяЦена, 0) КАК СпецЦена,
	|		ВЫБОР
	|			КОГДА СпецЦены.СпециальнаяЦена ЕСТЬ NULL 
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК ЕстьСпецЦена
	|	ИЗ
	|		PRT КАК PRT
	|			ЛЕВОЕ СОЕДИНЕНИЕ СпецЦены КАК СпецЦены
	|			ПО PRT.Товар = СпецЦены.Товар
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ PRT
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ СпецЦены
	|"; // Сгенерировано в GtG's Консоль запросов. 04.03.2013 19:05:39
	
	
    Запрос.УстановитьПараметр("Документ",Документ);
	Запрос.УстановитьПараметр("Дата",Документ.Дата);
	
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПеремещениеТовара") Тогда
		ДокСклад=Документ.СкладПолучатель;
	Иначе
		ДокСклад=Документ.Склад;
	КонецЕсли;	
	Запрос.УстановитьПараметр("Склад",ДокСклад);
	
	
	
	
	ТЗ=Запрос.Выполнить().Выгрузить(); //тз
	
	ТЗ.Индексы.Добавить("Партия");
	
	Возврат   ТЗ;
	
	
КонецФункции	

Функция ПолучитьМинимальныеЦеныКонкурентов(Документ)
	
	ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
	//
	//  "+ВидДок+"
		
	Запрос=Новый Запрос();
	
	Запрос.Текст="	
	|	////////////////////////////////////////////////////////////////////////////////
	|	ВЫБРАТЬ
	|		Конкурент.Код как КодКонкурента
	|		
	|	ПОМЕСТИТЬ Конкуренты
	|	ИЗ
	|		Справочник.АптекиКонкуренты КАК АптекиКонкуренты
	|	ГДЕ
	|		АптекиКонкуренты.Владелец = &Склад
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	ВЫБРАТЬ
	|		КодТовараСправочной как КодТовара,
	|		Минимум(Цена)
	|	ИЗ
	|		РегистрСведений.ЦеныКонкурентов КАК Цены
	|			INNER JOIN Конкуренты КАК Конкуренты ПО Конкуренты.КодКонкурента = Цены.КодКонкурента
	|			INNER JOIN Документ."+ВидДок+".Товар КАК ДокТовар ПО ДокТовар.Ссылка = &Документ и ДокТовар.КодТовара = Цены.КодТовараСправочной
	|СГРУППИРОВАТЬ ПО КодТовараСправочной	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ Конкуренты
	|	;
	|	
	|	
	|";	
	
    Запрос.УстановитьПараметр("Документ",Документ);
	Запрос.УстановитьПараметр("Дата",Документ.Дата);
	
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.УЗ_Перемещение") Тогда
		ДокСклад=Документ.СкладПолучатель;
	Иначе
		ДокСклад=Документ.Склад;
	КонецЕсли;	
	Запрос.УстановитьПараметр("Склад",ДокСклад);
	
	
	
	
	ТЗ=Запрос.Выполнить().Выгрузить(); //тз
	
	Возврат   ТЗ;
	
	
КонецФункции	


//==========================================================GtG====
Функция ОМ6_ЕстьСпецЦена (Товар,Склад,Дата,ДанныеТекПартии)  
	//----------------------------------
	//Назначение:
	//  Ищет спеццену 
	//Товар,Склад,Дата не нужно, оставлено для совместимости
	//----------------------------------
	Возврат ДанныеТекПартии.ЕстьСпеццена;
КонецФункции	//ОМ6_ЕстьСпецЦена
//==========================================================GtG====

//==========================================================GtG====
Функция ОМ6_СпецЦена (Товар,Склад,Дата,ДанныеТекПартии)  
	//----------------------------------
	//Назначение:
	//  Ищет спеццену в справочнике спеццен
	//Товар,Склад,Дата не нужно, оставлено для совместимости
	//----------------------------------
	
	Возврат ДанныеТекПартии.Спеццена;

КонецФункции	//ОМ6_ЕстьСпецЦена
//==========================================================GtG====


Функция ПолучитьТаблицуСтарыхРозничныхЦен (Дата,Склад,Регион,СписокСтрокДокумента,Документ)  
	//----------------------------------
	//Назначение:
	//  Список предыдущих расценок товаров из документа
	//----------------------------------
	
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Получаем таблицу Старых Розничных Цен...";

	
	ПериодВыборки=15;//дней
	
	КонецПериода=Дата-30;
	НачалоПериода = КонецПериода - 60*60*24*ПериодВыборки;
	
	ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
	//КодСклада = Склад.Код;
	//Если КодСклада = 62 или КодСклада = 67 или КодСклада = 58 или  КодСклада = 183 или  КодСклада = 323 или
	//	КодСклада = 11 или КодСклада = 86 или КодСклада = 176 или КодСклада = 32 или КодСклада = 43 Тогда
		
		ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПоступлениеТовараТовар.Товар
		|ПОМЕСТИТЬ ТаблицаТовараДокумента
		|ИЗ
		|	Документ."+ВидДок+".Товар КАК ПоступлениеТовараТовар
	    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Ошибки.Товар КАК Товар
		|ИЗ
		|	Документ.ПоступлениеТовара.ОшибкиРасценки КАК Ошибки
		|ГДЕ
		|	Ошибки.Ссылка = &Документ
		|	И Ошибки.ИгнорироватьОшибку = Истина) КАК Выборка
		|ПО (Выборка.Товар = ПоступлениеТовараТовар.Товар)		
		|ГДЕ
		|	ПоступлениеТовараТовар.Ссылка = &Документ и Выборка.Товар ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПартииЖНВЛСОстатки.Товар,
		|	СУММА(ПартииЖНВЛСОстатки.КолвоОстаток) КАК КолвоОстаток,
		|	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.К КАК цена
		|ПОМЕСТИТЬ ВыборкаОстатков
		|ИЗ
		|	РегистрНакопления.ПартииЖНВЛС.Остатки(
		|			,
		|			Товар В (&СписокТоваров)
		|				И Склад = &Склад) КАК ПартииЖНВЛСОстатки
		|ГДЕ
		|	ПартииЖНВЛСОстатки.КолвоОстаток > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииЖНВЛСОстатки.Товар,
		|	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.К
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсторияРозничнойЦены.Товар,
		|	СРЕДНЕЕ(ИсторияРозничнойЦены.Цена) КАК Цена
		|ПОМЕСТИТЬ СредниеЦены
		|ИЗ
		|	ТаблицаТовараДокумента КАК ТаблицаТовараДокумента
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРозничнойЦены КАК ИсторияРозничнойЦены
		|ПО (ИсторияРозничнойЦены.Товар = ТаблицаТовараДокумента.Товар)
		|	И (ИсторияРозничнойЦены.Регион = &Регион)
        |
		|СГРУППИРОВАТЬ ПО
		|	ИсторияРозничнойЦены.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовараДокумента.Товар КАК Товар,
		|	ЕСТЬNULL(ВыборкаОстатков.КолвоОстаток, 0) КАК Остаток,
		|isnull(	ЕСТЬNULL(ВыборкаОстатков.цена, СредниеЦены.Цена),0) КАК ПрошлаяЦена
		|ИЗ
		|	ТаблицаТовараДокумента КАК ТаблицаТовараДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СредниеЦены КАК СредниеЦены
		|		ПО ТаблицаТовараДокумента.Товар = СредниеЦены.Товар
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаОстатков КАК ВыборкаОстатков
		|		ПО ТаблицаТовараДокумента.Товар = ВыборкаОстатков.Товар
		|где isnull(	ЕСТЬNULL(ВыборкаОстатков.цена, СредниеЦены.Цена),0)>0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВыборкаОстатков
		|;
		|
		|Уничтожить ТаблицаТовараДокумента
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СредниеЦены";
		
	//Иначе
	//	ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	ПоступлениеТовараТовар.Товар
	//	|ПОМЕСТИТЬ ТаблицаТовараДокумента
	//	|ИЗ
	//	|	Документ."+ВидДок+".Товар КАК ПоступлениеТовараТовар
	//	|ГДЕ
	//	|	ПоступлениеТовараТовар.Ссылка = &Документ
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ЦеныСрезПоследних.АП,
	//	|	ЦеныСрезПоследних.ЦенаРознГТТ*ЦеныСрезПоследних.АП.ЕдиницаПоУмолчанию.К как ЦенаРознГТТ,
	//	|	МАКСИМУМ(ЦеныСрезПоследних.Период) КАК Период
	//	|ПОМЕСТИТЬ БАЗА
	//	|ИЗ
	//	|	РегистрСведений.Цены КАК ЦеныСрезПоследних
	//	|ГДЕ
	//	|	ЦеныСрезПоследних.Период МЕЖДУ &НачалоПериода И &КонецПериода
	//	|	И ЦеныСрезПоследних.РЕГИОН = &регион
	//	|	И ЦеныСрезПоследних.АП В(&СписокТоваров)
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ЦеныСрезПоследних.АП,
	//	|	ЦеныСрезПоследних.ЦенаРознГТТ*ЦеныСрезПоследних.АП.ЕдиницаПоУмолчанию.К
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	База.АП,
	//	|	МАКСИМУМ(База.Период) КАК Период
	//	|ПОМЕСТИТЬ РаспоследниеЦены
	//	|ИЗ
	//	|	БАЗА КАК База
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	База.АП
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ПартииЖНВЛСОстатки.Товар,
	//	|	СУММА(ПартииЖНВЛСОстатки.КолвоОстаток) КАК КолвоОстаток,
	//	|	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.ЕИТЗакупки.К КАК цена
	//	|ПОМЕСТИТЬ ВыборкаОстатков
	//	|ИЗ
	//	|	РегистрНакопления.ПартииЖНВЛС.Остатки(
	//	|			,
	//	|			Товар В (&СписокТоваров)
	//	|				И Склад = &Склад) КАК ПартииЖНВЛСОстатки
	//	|ГДЕ
	//	|	ПартииЖНВЛСОстатки.КолвоОстаток > 0
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ПартииЖНВЛСОстатки.Товар,
	//	|	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.ЕИТЗакупки.К
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	РаспоследниеЦены.АП,
	//	|	РаспоследниеЦены.Период,
	//	|	БАЗА.ЦенаРознГТТ
	//	|ПОМЕСТИТЬ ПоследниеЦены
	//	|ИЗ
	//	|	РаспоследниеЦены КАК РаспоследниеЦены
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ БАЗА КАК БАЗА
	//	|		ПО (БАЗА.АП = РаспоследниеЦены.АП)
	//	|			И (БАЗА.Период = РаспоследниеЦены.Период)
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ТаблицаТовараДокумента.Товар КАК Товар,
	//	|	ЕСТЬNULL(ВыборкаОстатков.КолвоОстаток, 0) КАК Остаток,
	//	|isnull(	ЕСТЬNULL(ВыборкаОстатков.цена, ПоследниеЦены.ЦенаРознГТТ),0) КАК ПрошлаяЦена
	//	|ИЗ
	//	|	ТаблицаТовараДокумента КАК ТаблицаТовараДокумента
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеЦены КАК ПоследниеЦены
	//	|		ПО ТаблицаТовараДокумента.Товар = ПоследниеЦены.АП
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаОстатков КАК ВыборкаОстатков
	//	|		ПО ТаблицаТовараДокумента.Товар = ВыборкаОстатков.Товар
	//	|где isnull(	ЕСТЬNULL(ВыборкаОстатков.цена, ПоследниеЦены.ЦенаРознГТТ),0)>0
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|УНИЧТОЖИТЬ База
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|УНИЧТОЖИТЬ ВыборкаОстатков
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|УНИЧТОЖИТЬ РаспоследниеЦены
	//	|;
	//	|Уничтожить ТаблицаТовараДокумента
	//	|;
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|УНИЧТОЖИТЬ ПоследниеЦены";
	//КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
	Запрос.УстановитьПараметр("Регион",Регион);
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("СписокТоваров",СписокСтрокДокумента);
	Запрос.УстановитьПараметр("Документ",Документ);
	
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Таблица Старых Розничных Цен получена...";

	
	Возврат Запрос.Выполнить().Выгрузить();
	
	
КонецФункции	//ПолучитьТаблицуСтарыхРозничныхЦен


Функция УЗ_ПолучитьТаблицуСтарыхРозничныхЦен (Склад,СписокСтрокДокумента,Документ,СписокКодыТовара)  
	
	ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
		
		ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		      |	Приход.Товар,
		      |	Приход.КодТовара
		      |ПОМЕСТИТЬ ТаблицаТовараДокумента
		      |ИЗ
		      |	Документ." + ВидДок + ".Товар КАК Приход
		      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		      |			Ошибки.Товар КАК Товар
		      |		ИЗ
		      |			Документ." + ВидДок + ".ОшибкиРасценки КАК Ошибки
		      |		ГДЕ
		      |			Ошибки.Ссылка = &Документ
		      |			И Ошибки.ИгнорироватьОшибку = ИСТИНА) КАК Выборка
		      |		ПО (Выборка.Товар = Приход.Товар)
		      |ГДЕ
		      |	Приход.Ссылка = &Документ
		      |	И Выборка.Товар ЕСТЬ NULL 
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	Партии.ТоварКод КАК КодТовара,
			  |	Партии.ПартияКод,
			  |	ТаблицаТовараДокумента.Товар КАК Товар,
		      |	Партии.КоличествоОстаток КАК Остаток,
		      |	ЕСТЬNULL(РЦП.Цена , ЕСТЬNULL(РЦ.Цена, 0)) как ПрошлаяЦена
		      |ИЗ
		      |	РегистрНакопления.УЗ_Партии.Остатки(
		      |			,
		      |			ТоварКод В (&СписокКодыТовара)
		      |				И СкладКод = &СкладКод) КАК Партии
		      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦены КАК РЦ
		      |		ПО Партии.ТоварКод = РЦ.ТоварКод
		      |			И (РЦ.АптекаКод = &СкладКод)
		      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РозничныеЦеныПоПартиям КАК РЦП
		      |		ПО Партии.ТоварКод = РЦП.ТоварКод
		      |			И (РЦП.АптекаКод = &СкладКод)
		      |			И (РЦП.ПартияКод = Партии.ПартияКод)
			  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовараДокумента КАК ТаблицаТовараДокумента ПО ТаблицаТовараДокумента.КодТовара =  Партии.ТоварКод
		      |;
		      |
			  |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ТаблицаТовараДокумента";
		
			  
	  
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("СкладКод",Склад.Код);
	Запрос.УстановитьПараметр("СписокТоваров",СписокСтрокДокумента);
	Запрос.УстановитьПараметр("СписокКодыТовара",СписокКодыТовара);
	Запрос.УстановитьПараметр("Документ",Документ);
	
	
	Возврат Запрос.Выполнить().Выгрузить();
	
	
КонецФункции	//ПолучитьТаблицуСтарыхРозничныхЦен


Функция ПолучитьТаблицуСтарыхРозничныхЦен366 (Дата,Склад,Регион,СписокСтрокДокумента,Документ)  
	//----------------------------------
	//Назначение:
	//  Список предыдущих расценок товаров из документа
	//----------------------------------
	
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Получаем таблицу Старых Розничных Цен...";

	
	ПериодВыборки=15;//дней
	
	КонецПериода=Дата-30;
	НачалоПериода = КонецПериода - 60*60*24*ПериодВыборки;
	
	ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
	//КодСклада = Склад.Код;
	//Если КодСклада = 62 или КодСклада = 67 или КодСклада = 58 или  КодСклада = 183 или  КодСклада = 323 или
	//	КодСклада = 11 или КодСклада = 86 или КодСклада = 176 или КодСклада = 32 или КодСклада = 43 Тогда
		
		ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПоступлениеТовараТовар.Товар
		|ПОМЕСТИТЬ ТаблицаТовараДокумента
		|ИЗ
		|	Документ."+ВидДок+".Товар КАК ПоступлениеТовараТовар
		|ГДЕ
		|	ПоступлениеТовараТовар.Ссылка = &Документ
		|;
		|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	ПартииЖНВЛСОстатки.Товар,
		//|	СУММА(ПартииЖНВЛСОстатки.КолвоОстаток) КАК КолвоОстаток,
		//|	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.ЕИТЗакупки.К КАК цена
		//|ПОМЕСТИТЬ ВыборкаОстатков
		//|ИЗ
		//|	РегистрНакопления.ПартииЖНВЛС.Остатки(
		//|			,
		//|			Товар В (&СписокТоваров)
		//|				И Склад = &Склад) КАК ПартииЖНВЛСОстатки
		//|ГДЕ
		//|	ПартииЖНВЛСОстатки.КолвоОстаток > 0
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	ПартииЖНВЛСОстатки.Товар,
		//|	ПартииЖНВЛСОстатки.СуммаРознСНДСОстаток / ПартииЖНВЛСОстатки.КолвоОстаток * ПартииЖНВЛСОстатки.Партия.ЕИТЗакупки.К
		//|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсторияРозничнойЦены.Товар,
		|	СРЕДНЕЕ(ИсторияРозничнойЦены.Цена) КАК Цена
		|ПОМЕСТИТЬ СредниеЦены
		|ИЗ
		|	РегистрСведений.ИсторияРозничнойЦены КАК ИсторияРозничнойЦены
		|inner join ТаблицаТовараДокумента как ТаблицаТовараДокумента ПО ТаблицаТовараДокумента.Товар = ИсторияРозничнойЦены.Товар
		//|ГДЕ
		//|	ИсторияРозничнойЦены.Товар В(&СписокТоваров)
		|	И ИсторияРозничнойЦены.Регион = &Регион
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсторияРозничнойЦены.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовараДокумента.Товар КАК Товар,
		|	0 КАК Остаток,
		|   ВЫРАЗИТЬ(СредниеЦены.Цена как Число(12,2)) КАК ПрошлаяЦена
		|ИЗ
		|	ТаблицаТовараДокумента КАК ТаблицаТовараДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ СредниеЦены КАК СредниеЦены
		|		ПО ТаблицаТовараДокумента.Товар = СредниеЦены.Товар
//		|		ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаОстатков КАК ВыборкаОстатков
//		|		ПО ТаблицаТовараДокумента.Товар = ВыборкаОстатков.Товар
		|где СредниеЦены.Цена>0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		//|УНИЧТОЖИТЬ ВыборкаОстатков
		//|;
		|
		|Уничтожить ТаблицаТовараДокумента
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СредниеЦены";
		

	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
	Запрос.УстановитьПараметр("Регион",Регион);
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("СписокТоваров",СписокСтрокДокумента);
	Запрос.УстановитьПараметр("Документ",Документ);
	
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Таблица Старых Розничных Цен получена...";

	
	Возврат Запрос.Выполнить().Выгрузить();
	
	
КонецФункции	//ПолучитьТаблицуСтарыхРозничныхЦен

Функция ПолучитьТаблицуЦенКонкурентов(Документ)
	
         ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
		ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДокументТовар.Товар,
		|	ДокументТовар.КодТовара как КодТовара
		|ПОМЕСТИТЬ ТаблицаТовараДокумента
		|ИЗ
		|	Документ."+ВидДок+".Товар КАК ДокументТовар
		|ГДЕ
		|	ДокументТовар.Ссылка = &Документ
		|ИНДЕКСИРОВАТЬ ПО ДокументТовар.КодТовара
		|
		|;
		|
		  |ВЫБРАТЬ
	      |	Конкуренты.Наименование КАК ИмяКонкурента,
	      |	Конкуренты.Вес,
	      |	ЦеныКонкурентов.Цена,
	      |	ВыборкаТовары.КодТовара,
	      |	Конкуренты.Код КАК КодКонкурента
	      |ПОМЕСТИТЬ ВремВыборка
	      |ИЗ
	      |	РегистрСведений.ЦеныКонкурентов КАК ЦеныКонкурентов
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовараДокумента КАК ВыборкаТовары
	      |		ПО (ВыборкаТовары.КодТовара = ЦеныКонкурентов.КодТовараСправочной)
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонкурентыЕГК КАК Конкуренты
	      |		ПО ЦеныКонкурентов.КодКонкурента = Конкуренты.Код
	      |			И (Конкуренты.Вес > 0)
	      |			И (Конкуренты.ЗагружатьДанные = ИСТИНА)
		  |ИНДЕКСИРОВАТЬ ПО ВыборкаТовары.КодТовара , ЦеныКонкурентов.Цена
	      |;
	      |
	      |	ВЫБРАТЬ
	      |			МИНИМУМ(ВремВыборка.Цена) КАК МинЦена,
	      |			ВремВыборка.КодТовара КАК КодТовара
		  |ПОМЕСТИТЬ МинЦены
	      |		ИЗ
	      |			ВремВыборка КАК ВремВыборка
	      |		ГДЕ
	      |			ВремВыборка.Вес > 0
	      |		
	      |		СГРУППИРОВАТЬ ПО
	      |			ВремВыборка.КодТовара
		  |;
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	МАКСИМУМ(ВремВыборка.ИмяКонкурента) КАК ИмяКонкурента,
	      |	ВремВыборка.КодТовара,
	      |	МинЦены.МинЦена
	      |ПОМЕСТИТЬ МинЦеныСКодом
	      |ИЗ
	      |	ВремВыборка КАК ВремВыборка
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинЦены как МинЦены
	      |		ПО ВремВыборка.КодТовара = МинЦены.КодТовара
	      |			И ВремВыборка.Цена = МинЦены.МинЦена
	      |ГДЕ
	      |	ВремВыборка.Вес > 0
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ВремВыборка.КодТовара,
	      |	МинЦены.МинЦена
	      |
	      |ИНДЕКСИРОВАТЬ ПО
	      |	ВремВыборка.КодТовара
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ЕСТЬNULL(СУММА(ВремВыборка.Цена * ВремВыборка.Вес) / СУММА(ВремВыборка.Вес), 0) КАК СВЦена,
	      |	ВремВыборка.КодТовара,
	      |	МинЦеныСКодом.ИмяКонкурента,
	      |	МинЦеныСКодом.МинЦена
	      |ИЗ
	      |	ВремВыборка КАК ВремВыборка
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинЦеныСКодом КАК МинЦеныСКодом
	      |		ПО (МинЦеныСКодом.КодТовара = ВремВыборка.КодТовара)
	      |ГДЕ
	      |	ВремВыборка.Вес > 0
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ВремВыборка.КодТовара,
	      |	МинЦеныСКодом.ИмяКонкурента,
	      |	МинЦеныСКодом.МинЦена
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ ВремВыборка
	      |;
	      |УНИЧТОЖИТЬ ТаблицаТовараДокумента
	      |;
	      |УНИЧТОЖИТЬ МинЦены
	      |;		  
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ МинЦеныСКодом";
		  
	Запрос  = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Документ",Документ);
	ТЗЦенКонкурентов = Запрос.Выполнить().Выгрузить();
	Для каждого стр из ТЗЦенКонкурентов Цикл
		Если стр.СВЦена > 0 Тогда
			Если стр.СВЦена > 0 и стр.СВЦена <= 10	Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До10коп, Перечисления.МетодыОкругления.Математически);
			ИначеЕсли стр.СВЦена > 10 и стр.СВЦена <= 50 Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До50коп, Перечисления.МетодыОкругления.Математически);
			ИначеЕсли стр.СВЦена > 50 Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.ДоРуб, Перечисления.МетодыОкругления.Математически);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	Возврат ТЗЦенКонкурентов;

	
	//ТХТ = "ВЫБРАТЬ
	//	  |			Различные
	//	  |			товары.Товар.Код КАК КодТовара
	//	  |ПОМЕСТИТЬ ВТТовары
	//	  |		ИЗ
	//	  |			Документ.ПоступлениеТовара.Товар КАК товары
	//	  |		ГДЕ
	//	  |			товары.Ссылка = &Документ
	//	  |;
	//	  |ВЫБРАТЬ
	//	  |	Конкуренты.Наименование КАК ИмяКонкурента,
	//	  |	Конкуренты.Вес,
	//	  |	ЦеныКонкурентов.Цена,
	//	  //|	ВыборкаТовары.Товар,
	//	  |	ВТТовары.КодТовара,
	//	  |	Конкуренты.Код КАК КодКонкурента
	//	  |ПОМЕСТИТЬ ВремВыборка
	//	  |ИЗ
	//	  |	РегистрСведений.ЦеныКонкурентов КАК ЦеныКонкурентов
	//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТовары КАК ВТТовары
	//	  |		ПО (ВТТовары.КодТовара = ЦеныКонкурентов.КодТовараСправочной)
	//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонкурентыЕГК КАК Конкуренты
	//	  |		ПО ЦеныКонкурентов.КодКонкурента = Конкуренты.Код
	//	  |			И (Конкуренты.Вес > 0)
	//	  |			И (Конкуренты.ЗагружатьДанные = ИСТИНА)
	//	  |;
	//	  |
	//	  |////////////////////////////////////////////////////////////////////////////////
	//	  |ВЫБРАТЬ
	//	  |	МАКСИМУМ(ВремВыборка.ИмяКонкурента) КАК ИмяКонкурента,
	//	  |	ВремВыборка.КодТовара,
	//	  |	выборка2.МинЦена
	//	  |ПОМЕСТИТЬ ВыборкаМинЦен
	//	  |ИЗ
	//	  |	ВремВыборка КАК ВремВыборка
	//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//	  |			МИНИМУМ(ВремВыборка.Цена) КАК МинЦена,
	//	  |			ВремВыборка.КодТовара КАК КодТовара
	//	  |		ИЗ
	//	  |			ВремВыборка КАК ВремВыборка
	//	  |		ГДЕ
	//	  |			ВремВыборка.Вес > 0
	//	  |		
	//	  |		СГРУППИРОВАТЬ ПО
	//	  |			ВремВыборка.КодТовара) КАК выборка2
	//	  |		ПО ВремВыборка.КодТовара = выборка2.КодТовара
	//	  |			И ВремВыборка.Цена = выборка2.МинЦена
	//	  |ГДЕ
	//	  |	ВремВыборка.Вес > 0
	//	  |
	//	  |СГРУППИРОВАТЬ ПО
	//	  |	ВремВыборка.КодТовара,
	//	  |	выборка2.МинЦена
	//	  |
	//	  |ИНДЕКСИРОВАТЬ ПО
	//	  |	ВремВыборка.КодТовара
	//	  |;
	//	  |
	//	  |////////////////////////////////////////////////////////////////////////////////
	//	  |ВЫБРАТЬ
	//	  |	ЕСТЬNULL(СУММА(ВремВыборка.Цена * ВремВыборка.Вес) / СУММА(ВремВыборка.Вес), 0) КАК СВЦена,
	//	  //|	ВремВыборка.Товар,
	//	  |	ВремВыборка.КодТовара,
	//	  |	ВыборкаМинЦен.ИмяКонкурента,
	//	  |	ВыборкаМинЦен.МинЦена
	//	  |ИЗ
	//	  |	ВремВыборка КАК ВремВыборка
	//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыборкаМинЦен КАК ВыборкаМинЦен
	//	  |		ПО (ВыборкаМинЦен.КодТовара = ВремВыборка.КодТовара)
	//	  |ГДЕ
	//	  |	ВремВыборка.Вес > 0
	//	  |
	//	  |СГРУППИРОВАТЬ ПО
	//	  //|	ВремВыборка.Товар,
	//	  |	ВремВыборка.КодТовара,
	//	  |	ВыборкаМинЦен.ИмяКонкурента,
	//	  |	ВыборкаМинЦен.МинЦена
	//	  |;
	//	  |
	//	  |////////////////////////////////////////////////////////////////////////////////
	//	  |УНИЧТОЖИТЬ ВремВыборка
	//	  |;
	//	  |
	//	  |////////////////////////////////////////////////////////////////////////////////
	//	  |УНИЧТОЖИТЬ ВТТовары
	//	  |;		  
	//	  |////////////////////////////////////////////////////////////////////////////////
	//	  |УНИЧТОЖИТЬ ВыборкаМинЦен";
	//	  
	//Запрос  = Новый Запрос;
	//Запрос.Текст = ТХТ;
	//Запрос.УстановитьПараметр("Документ",Документ);
	//ТЗЦенКонкурентов = Запрос.Выполнить().Выгрузить();
	//Для каждого стр из ТЗЦенКонкурентов Цикл
	//	Если стр.СВЦена > 0 Тогда
	//		Если стр.СВЦена > 0 и стр.СВЦена <= 10	Тогда
	//			стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До10коп, Перечисления.МетодыОкругления.Математически);
	//		ИначеЕсли стр.СВЦена > 10 и стр.СВЦена <= 50 Тогда
	//			стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До50коп, Перечисления.МетодыОкругления.Математически);
	//		ИначеЕсли стр.СВЦена > 50 Тогда
	//			стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.ДоРуб, Перечисления.МетодыОкругления.Математически);
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;	
	//Возврат ТЗЦенКонкурентов;
	
КонецФункции

Функция ПолучитьТаблицуЦенКонкурентовПоАптеке(Документ,Аптека)
	
         ВидДок=Документ.МЕТАДАННЫЕ().Имя;
	
		 СписокКонкурентов = Новый СписокЗначений;
		 ВыборкаКонкурентов = Справочники.АптекиКонкуренты.Выбрать(,Аптека);
		 Пока ВыборкаКонкурентов.Следующий() Цикл
			 СписокКонкурентов.Добавить(ВыборкаКонкурентов.Конкурент);
		 КонецЦикла;
		 
		 
		 ТХТ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДокументТовар.Товар,
		|	ДокументТовар.КодТовара как КодТовара
		|ПОМЕСТИТЬ ТаблицаТовараДокумента
		|ИЗ
		|	Документ."+ВидДок+".Товар КАК ДокументТовар
		|ГДЕ
		|	ДокументТовар.Ссылка = &Документ
		|ИНДЕКСИРОВАТЬ ПО ДокументТовар.КодТовара
		|
		|;
		|
		  |ВЫБРАТЬ
	      |	Конкуренты.Наименование КАК ИмяКонкурента,
	      |	Конкуренты.Вес,
	      |	ЦеныКонкурентов.Цена,
	      |	ВыборкаТовары.КодТовара,
	      |	Конкуренты.Код КАК КодКонкурента
	      |ПОМЕСТИТЬ ВремВыборка
	      |ИЗ
	      |	РегистрСведений.ЦеныКонкурентов КАК ЦеныКонкурентов
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонкурентыЕГК КАК Конкуренты
	      |		ПО ЦеныКонкурентов.КодКонкурента = Конкуренты.Код  и Конкуренты.Ссылка в (&СписокКонкурентов)
	      |			И (Конкуренты.Вес > 0)
	      |			И (Конкуренты.ЗагружатьДанные = ИСТИНА)
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовараДокумента КАК ВыборкаТовары
	      |		ПО (ВыборкаТовары.КодТовара = ЦеныКонкурентов.КодТовараСправочной)
		  |ИНДЕКСИРОВАТЬ ПО ВыборкаТовары.КодТовара , ЦеныКонкурентов.Цена
	      |;
	      |
	      |	ВЫБРАТЬ
	      |			МИНИМУМ(ВремВыборка.Цена) КАК МинЦена,
	      |			ВремВыборка.КодТовара КАК КодТовара
		  |ПОМЕСТИТЬ МинЦены
	      |		ИЗ
	      |			ВремВыборка КАК ВремВыборка
	      |		ГДЕ
	      |			ВремВыборка.Вес > 0
	      |		
	      |		СГРУППИРОВАТЬ ПО
	      |			ВремВыборка.КодТовара
		  |;
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	МАКСИМУМ(ВремВыборка.ИмяКонкурента) КАК ИмяКонкурента,
	      |	ВремВыборка.КодТовара,
	      |	МинЦены.МинЦена
	      |ПОМЕСТИТЬ МинЦеныСКодом
	      |ИЗ
	      |	ВремВыборка КАК ВремВыборка
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинЦены как МинЦены
	      |		ПО ВремВыборка.КодТовара = МинЦены.КодТовара
	      |			И ВремВыборка.Цена = МинЦены.МинЦена
	      |ГДЕ
	      |	ВремВыборка.Вес > 0
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ВремВыборка.КодТовара,
	      |	МинЦены.МинЦена
	      |
	      |ИНДЕКСИРОВАТЬ ПО
	      |	ВремВыборка.КодТовара
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ЕСТЬNULL(СУММА(ВремВыборка.Цена * ВремВыборка.Вес) / СУММА(ВремВыборка.Вес), 0) КАК СВЦена,
	      |	ВремВыборка.КодТовара,
	      |	МинЦеныСКодом.ИмяКонкурента,
	      |	МинЦеныСКодом.МинЦена
	      |ИЗ
	      |	ВремВыборка КАК ВремВыборка
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинЦеныСКодом КАК МинЦеныСКодом
	      |		ПО (МинЦеныСКодом.КодТовара = ВремВыборка.КодТовара)
	      |ГДЕ
	      |	ВремВыборка.Вес > 0
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ВремВыборка.КодТовара,
	      |	МинЦеныСКодом.ИмяКонкурента,
	      |	МинЦеныСКодом.МинЦена
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ ВремВыборка
	      |;
	      |УНИЧТОЖИТЬ ТаблицаТовараДокумента
	      |;
	      |УНИЧТОЖИТЬ МинЦены
	      |;		  
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ МинЦеныСКодом";
		  
	Запрос  = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Документ",Документ);
	Запрос.УстановитьПараметр("СписокКонкурентов",СписокКонкурентов);
	ТЗЦенКонкурентов = Запрос.Выполнить().Выгрузить();
	Для каждого стр из ТЗЦенКонкурентов Цикл
		Если стр.СВЦена > 0 Тогда
			Если стр.СВЦена > 0 и стр.СВЦена <= 10	Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До10коп, Перечисления.МетодыОкругления.Математически);
			ИначеЕсли стр.СВЦена > 10 и стр.СВЦена <= 50 Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До50коп, Перечисления.МетодыОкругления.Математически);
			ИначеЕсли стр.СВЦена > 50 Тогда
				стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.ДоРуб, Перечисления.МетодыОкругления.Математически);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	Возврат ТЗЦенКонкурентов;

	
	//ТХТ = "ВЫБРАТЬ
	//	  |			Различные
	//	  |			товары.Товар.Код КАК КодТовара
	//	  |ПОМЕСТИТЬ ВТТовары
	//	  |		ИЗ
	//	  |			Документ.ПоступлениеТовара.Товар КАК товары
	//	  |		ГДЕ
	//	  |			товары.Ссылка = &Документ
	//	  |;
	//	  |ВЫБРАТЬ
	//	  |	Конкуренты.Наименование КАК ИмяКонкурента,
	//	  |	Конкуренты.Вес,
	//	  |	ЦеныКонкурентов.Цена,
	//	  //|	ВыборкаТовары.Товар,
	//	  |	ВТТовары.КодТовара,
	//	  |	Конкуренты.Код КАК КодКонкурента
	//	  |ПОМЕСТИТЬ ВремВыборка
	//	  |ИЗ
	//	  |	РегистрСведений.ЦеныКонкурентов КАК ЦеныКонкурентов
	//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТовары КАК ВТТовары
	//	  |		ПО (ВТТовары.КодТовара = ЦеныКонкурентов.КодТовараСправочной)
	//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонкурентыЕГК КАК Конкуренты
	//	  |		ПО ЦеныКонкурентов.КодКонкурента = Конкуренты.Код
	//	  |			И (Конкуренты.Вес > 0)
	//	  |			И (Конкуренты.ЗагружатьДанные = ИСТИНА)
	//	  |;
	//	  |
	//	  |////////////////////////////////////////////////////////////////////////////////
	//	  |ВЫБРАТЬ
	//	  |	МАКСИМУМ(ВремВыборка.ИмяКонкурента) КАК ИмяКонкурента,
	//	  |	ВремВыборка.КодТовара,
	//	  |	выборка2.МинЦена
	//	  |ПОМЕСТИТЬ ВыборкаМинЦен
	//	  |ИЗ
	//	  |	ВремВыборка КАК ВремВыборка
	//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//	  |			МИНИМУМ(ВремВыборка.Цена) КАК МинЦена,
	//	  |			ВремВыборка.КодТовара КАК КодТовара
	//	  |		ИЗ
	//	  |			ВремВыборка КАК ВремВыборка
	//	  |		ГДЕ
	//	  |			ВремВыборка.Вес > 0
	//	  |		
	//	  |		СГРУППИРОВАТЬ ПО
	//	  |			ВремВыборка.КодТовара) КАК выборка2
	//	  |		ПО ВремВыборка.КодТовара = выборка2.КодТовара
	//	  |			И ВремВыборка.Цена = выборка2.МинЦена
	//	  |ГДЕ
	//	  |	ВремВыборка.Вес > 0
	//	  |
	//	  |СГРУППИРОВАТЬ ПО
	//	  |	ВремВыборка.КодТовара,
	//	  |	выборка2.МинЦена
	//	  |
	//	  |ИНДЕКСИРОВАТЬ ПО
	//	  |	ВремВыборка.КодТовара
	//	  |;
	//	  |
	//	  |////////////////////////////////////////////////////////////////////////////////
	//	  |ВЫБРАТЬ
	//	  |	ЕСТЬNULL(СУММА(ВремВыборка.Цена * ВремВыборка.Вес) / СУММА(ВремВыборка.Вес), 0) КАК СВЦена,
	//	  //|	ВремВыборка.Товар,
	//	  |	ВремВыборка.КодТовара,
	//	  |	ВыборкаМинЦен.ИмяКонкурента,
	//	  |	ВыборкаМинЦен.МинЦена
	//	  |ИЗ
	//	  |	ВремВыборка КАК ВремВыборка
	//	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыборкаМинЦен КАК ВыборкаМинЦен
	//	  |		ПО (ВыборкаМинЦен.КодТовара = ВремВыборка.КодТовара)
	//	  |ГДЕ
	//	  |	ВремВыборка.Вес > 0
	//	  |
	//	  |СГРУППИРОВАТЬ ПО
	//	  //|	ВремВыборка.Товар,
	//	  |	ВремВыборка.КодТовара,
	//	  |	ВыборкаМинЦен.ИмяКонкурента,
	//	  |	ВыборкаМинЦен.МинЦена
	//	  |;
	//	  |
	//	  |////////////////////////////////////////////////////////////////////////////////
	//	  |УНИЧТОЖИТЬ ВремВыборка
	//	  |;
	//	  |
	//	  |////////////////////////////////////////////////////////////////////////////////
	//	  |УНИЧТОЖИТЬ ВТТовары
	//	  |;		  
	//	  |////////////////////////////////////////////////////////////////////////////////
	//	  |УНИЧТОЖИТЬ ВыборкаМинЦен";
	//	  
	//Запрос  = Новый Запрос;
	//Запрос.Текст = ТХТ;
	//Запрос.УстановитьПараметр("Документ",Документ);
	//ТЗЦенКонкурентов = Запрос.Выполнить().Выгрузить();
	//Для каждого стр из ТЗЦенКонкурентов Цикл
	//	Если стр.СВЦена > 0 Тогда
	//		Если стр.СВЦена > 0 и стр.СВЦена <= 10	Тогда
	//			стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До10коп, Перечисления.МетодыОкругления.Математически);
	//		ИначеЕсли стр.СВЦена > 10 и стр.СВЦена <= 50 Тогда
	//			стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.До50коп, Перечисления.МетодыОкругления.Математически);
	//		ИначеЕсли стр.СВЦена > 50 Тогда
	//			стр.СВЦена = Округлить(стр.СВЦена, Перечисления.СпособыОкруглений.ДоРуб, Перечисления.МетодыОкругления.Математически);
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;	
	//Возврат ТЗЦенКонкурентов;
	
КонецФункции

Функция КонтрольПоЗакупке_Старый(ТЧТовар,Регион,Документ,ТипДокумента,ВидДокумента)
	//----------------------------------
	//Назначение:
	// Перемещение товара - удаляем из ТЧТовар строки с розничной ценой получателя
	// Проверяет по каждой строке закупочную цену.  
	//  Берем последние 10 партий по товару отсортированые по цене в обратном порядке
	//  Из полученных берем первую -> МАКСЗакупЦена
	//  Текущая закуп цена  (ТЗЦ) должна быть <= МАКСЗакупЦена+МаксимальноДопустимыйПроцентОтклоненияОтПредыдущейЗакупочнойЦены%
	//        Если   ТЗЦ не удовлетворит этому условию - в комментарий документа пишем сообщение о том, что закупка по товару больше максимальной,
	//		         таки расценяем как получится, но документ не проводим (если раценка запущена при автоматической загрузке документа)
    //
	// ТАкже проверяет срок годности, должен быть больше чем константа.МинимальныйСрокГодности (дней)
	//	
	//	
	//----------------------------------
	//СписокИсключаемыхСтрок= Новый СписокЗначений; 
	
	
	
	ТЗКосяков = Новый ТаблицаЗначений;
	ТЗКосяков.Колонки.Добавить("Партия");
	ТЗКосяков.Колонки.Добавить("Товар");
	ТЗКосяков.Колонки.Добавить("Косяк");
	ТЗКосяков.Колонки.Добавить("ЦенаПоРасценке");

	
	Если ТипДокумента=Тип("ДокументСсылка.РаспоряжениеНаПереоценку") 
		 ИЛИ
		 ТипДокумента=Тип("ДокументСсылка.ПерерасценкаТоваровНаСкладе") 
		 ИЛИ 
		 ТипДокумента=Тип("ДокументСсылка.ПерерасценкаТоваров")
		 ИЛИ 
		 ТипДокумента=Тип("ДокументСсылка.Перерасценка366")
		 
		Тогда
		Возврат ТЗКосяков;	
	КонецЕсли;		
	
	
	ДокДата=КонецДня(Документ.Дата);
	
	
	Запрос=Новый Запрос;
		
	ТХТ = "ВЫБРАТЬ
	      |	ИсторияЗакупочнойЦены.Товар,
	      |	СРЕДНЕЕ(ИсторияЗакупочнойЦены.Цена) КАК МаксЗакупЦена
	      |ИЗ
	      |	РегистрСведений.ИсторияЗакупочнойЦены КАК ИсторияЗакупочнойЦены
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ."+ВидДокумента+".Товар КАК ПоступлениеТовараТовар
	      |		ПО ИсторияЗакупочнойЦены.Товар = ПоступлениеТовараТовар.Товар
	      |			И (ПоступлениеТовараТовар.Ссылка = &Документ)  
	      |ГДЕ ИсторияЗакупочнойЦены.СубъектРФ = &СубъектРФ
	      |СГРУППИРОВАТЬ ПО
	      |	ИсторияЗакупочнойЦены.Товар";
		
		
		
	
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("Документ",Документ);
	Запрос.УстановитьПараметр("СубъектРФ",Документ.Склад.СубъектРФ);
	ТЗ=Запрос.Выполнить().Выгрузить();
	ТЗ.Индексы.Добавить("Товар");
	
	МаксПроцент = Константы.МаксимальноДопустимыйПроцентОтклоненияОтПредыдущейЗакупочнойЦены.Получить();
	Если МаксПроцент <=0 Тогда
		Возврат ТЗКосяков;
	КонецЕсли;
	
	Для каждого Стр из ТЧТОвар Цикл
		
		СтрокаМаксЦеныТОвара=ТЗ.Найти(Стр.Товар,"Товар");
		
		Если СтрокаМаксЦеныТОвара= Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		МаксЗакупЦена=СтрокаМаксЦеныТОвара.МаксЗакупЦена;
		
		Если МаксЗакупЦена=0 ТОгда
			Продолжить;
		КонецЕсли;	
		
		
		Если  Стр.КоличествоФакт=0 или Стр.Коэфф=0 ТОгда
			Продолжить;
		КонецЕсли;	
		
		
		
		Попытка
			ТЗЦ=Окр(Стр.СуммаЗакуп /(Стр.КоличествоФакт* Стр.Коэфф),2);
		Исключение
			ТЗЦ=Стр.ЦенаЗакуп; // для перерасценки 
		КонецПопытки;
		
		
		
		ПроцентПревышения= Окр((ТЗЦ/МаксЗакупЦена-1)*100,2);
		
		Если ПроцентПревышения>МаксПроцент Тогда
			// значит товар закупили по цене превышающей предыдущую закупку
			// расценяем, и пишем в комментарий документа  строчку о товаре.
			// документ не проводим.
			ДокОбъект = Документ.ПолучитьОбъект();
			ИгнорироватьОшибку = Ложь;
			Если ТипЗнч(ДокОбъект) = Тип("ДокументОбъект.ПоступлениеТовара") Тогда
				МассивСтрок = ДокОбъект.ОшибкиРасценки.НайтиСтроки(Новый Структура("Партия", Стр.Партия));
				Для Каждого СтрокаТЧ Из МассивСтрок Цикл
					Если СтрокаТЧ.ИгнорироватьОшибку И Найти(СтрокаТЧ.ОписаниеОшибки, "Превышение закупочной цены!") <> 0 Тогда
						ИгнорироватьОшибку = Истина;
						Прервать;
					КонецЕсли;	
				КонецЦикла;	
			КонецЕсли;
			
			Если НЕ ИгнорироватьОшибку Тогда
				Косяк=ТЗКосяков.Добавить();
				Косяк.Партия=Стр.Партия;
				Косяк.ТОвар=Стр.Товар;
				Косяк.Косяк="Превышение закупочной цены! "+ТЗЦ+" > "+Окр(МАКСЗакупЦена,2)+" на "+ПроцентПревышения+"%";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;		
	
	Возврат ТЗКосяков;	
	
	
КонецФункции


Процедура ПроверитьПревышениеЗакупочнойЦены(ТЧТовар,Регион,СубъектРФ,Документ,ТипДокумента,ВидДокумента,ТЗКосяков,СвойПоставщик = Ложь)
	

	Если ТипДокумента<>Тип("ДокументСсылка.ПоступлениеТовара") Тогда
		Возврат;
	КонецЕсли;
	
	Если СвойПоставщик = Ложь Тогда
		ТаблицаИстории = "ИсторияЗакупочнойЦены";
	Иначе
		ТаблицаИстории = "ИсторияЗакупочнойЦеныСП";
	КонецЕсли;
	
	//Если ТипДокумента=Тип("ДокументСсылка.РаспоряжениеНаПереоценку") 
	//	 ИЛИ
	//	 ТипДокумента=Тип("ДокументСсылка.ПерерасценкаТоваровНаСкладе") 
	//	 ИЛИ 
	//	 ТипДокумента=Тип("ДокументСсылка.ПерерасценкаТоваров")
	//	 ИЛИ 
	//	 ТипДокумента=Тип("ДокументСсылка.Перерасценка366")
	//	 ИЛИ 
	//	 ТипДокумента=Тип("ДокументСсылка.ВводОстатков")
	//	 ИЛИ 
	//	 ТипДокумента=Тип("ДокументСсылка.ПеремещениеТовара")		 
	//	Тогда
	//	Возврат ;	
	//КонецЕсли;		
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	АлгоритмыПревышенияУсловияПрименения.Ссылка.Код КАК Код,
	               |	АлгоритмыПревышенияУсловияПрименения.НомерСтроки,
	               |	АлгоритмыПревышенияУсловияПрименения.ЛеваяЧасть,
	               |	АлгоритмыПревышенияУсловияПрименения.ТипУсловия,
	               |	АлгоритмыПревышенияУсловияПрименения.ПраваяЧасть,
	               |	ТИПЗНАЧЕНИЯ(АлгоритмыПревышенияУсловияПрименения.ПраваяЧасть) КАК ТипПравойЧасти,
	               |	ПРЕДСТАВЛЕНИЕ(АлгоритмыПревышенияУсловияПрименения.ПраваяЧасть),
	               |	АлгоритмыПревышенияУсловияПрименения.ОбъединятьСоСледующим,
	               |	АлгоритмыПревышенияУсловияПрименения.Ссылка.ФормулаРасчетаЦены КАК Формула
	               |ИЗ
	               |	Справочник.АлгоритмыПревышения.УсловияПрименения КАК АлгоритмыПревышенияУсловияПрименения
	               |ГДЕ
	               |	АлгоритмыПревышенияУсловияПрименения.Ссылка В
	               |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |				АлгоритмыПревышенияРегионы.Ссылка
	               |			ИЗ
	               |				Справочник.АлгоритмыПревышения.Регионы КАК АлгоритмыПревышенияРегионы
	               |			ГДЕ
	               |				АлгоритмыПревышенияРегионы.Ссылка.Субъект = &Субъект
	               |				И АлгоритмыПревышенияРегионы.Регион = &Регион)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	АлгоритмыПревышенияУсловияПрименения.Ссылка.Приоритет УБЫВ,
	               |	АлгоритмыПревышенияУсловияПрименения.ПорядокФормированияУсловия
	               |ИТОГИ ПО
	               |	Код ИЕРАРХИЯ";
	
    Запрос.УстановитьПараметр("Субъект",СубъектРФ);
	Запрос.УстановитьПараметр("Регион", Регион );
	Рез = Запрос.Выполнить();
	СпособВыборки = ОбходРезультатаЗапроса.ПоГруппировкамСИерархией;
	Выборка = Рез.Выбрать(СпособВыборки);
	Т="";
	ПервыйЗаход = Истина;
	Параметры = Новый Структура;
	НомерПараметра = 0;
	
	Т = "
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	Приход.Товар,
	    |	Приход.ЦенаЗакуп как Цена,
	    |	СРЕДНЕЕ(ИсторияЗакупочнойЦены.Цена) КАК ПрошлаяЦена
		|ПОМЕСТИТЬ ПриходСИсторией
	    |ИЗ
	    |	Документ."+ВидДокумента+".Товар как Приход
	    |		INNER JOIN РегистрСведений."+ТаблицаИстории+" КАК ИсторияЗакупочнойЦены
	    |		ПО (ИсторияЗакупочнойЦены.Товар = Приход.Товар)  и СубъектРФ = &СубъектРФ
	    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Ошибки.Товар КАК Товар
		|ИЗ
		|	Документ.ПоступлениеТовара.ОшибкиРасценки КАК Ошибки
		|ГДЕ
		|	Ошибки.Ссылка = &Ссылка
		|	И Ошибки.ИгнорироватьОшибку = Истина) КАК Выборка
		|ПО (Выборка.Товар = Приход.Товар)		
	    |
		|ГДЕ Приход.Ссылка = &Ссылка   И ИсторияЗакупочнойЦены.Период >= &Период И Выборка.Товар ЕСТЬ NULL
	    |СГРУППИРОВАТЬ ПО
	    |	Приход.Товар,
	    |	Приход.ЦенаЗакуп
	    |;

	|Выбрать ПриходСИсторией.Товар,ПриходСИсторией.Цена, ПриходСИсторией.ПрошлаяЦена, ";
	Пока Выборка.Следующий() Цикл
		Если ПервыйЗаход = Истина Тогда
			Т = Т + Символы.ПС + "ВЫБОР КОГДА ";
			ПервыйЗаход = Ложь;
		Иначе
			Т = Т + Символы.ПС + " КОГДА ";
		КонецЕсли;

		Выборка2 = Выборка.Выбрать(СпособВыборки);
		Формула = "";
		Пока Выборка2.Следующий() Цикл
			Формула = Выборка2.Формула;
			Если Найти(XMLТипЗнч(Выборка2.ПраваяЧасть).ИмяТипа,"Ref") Тогда
				 ПраваяЧасть = "Параметр"+Формат(НомерПараметра,"ЧН=0; ЧГ=0");
				 Параметры.Вставить(ПраваяЧасть,Выборка2.ПраваяЧасть);
				 НомерПараметра = НомерПараметра + 1;
			 Иначе
				 ПраваяЧасть = Формат(Выборка2.ПраваяЧасть,"ЧГ=0");
			КонецЕсли;
			
			Т = Т + Символы.ПС + Выборка2.ЛеваяЧасть + " " + Выборка2.ТипУсловия + " " + ПраваяЧасть + " " + Выборка2.ОбъединятьСоСледующим;
		КонецЦикла;
		Т = Т + Символы.ПС + " ТОГДА " + Формула ;
	КонецЦикла;
	Т = Т + Символы.ПС + " КОНЕЦ КАК Процент ";
	Т = Т + "
	|ПОМЕСТИТЬ ТЗСПроцентом
	|ИЗ ПриходСИсторией как ПриходСИсторией
	|;
	|Выбрать 
	|	ТЗСПроцентом.Товар,
	|	ТЗСПроцентом.Цена,
	|	ТЗСПроцентом.ПрошлаяЦена,
	|	ТЗСПроцентом.Процент,
	|	Выбор когда ТЗСПроцентом.Цена > ТЗСПроцентом.ПрошлаяЦена и ЕСТЬNULL(Процент,0) > 0 и ТЗСПроцентом.ПрошлаяЦена > 0 и -1*(1-ТЗСПроцентом.Цена/ТЗСПроцентом.ПрошлаяЦена)*100 > ЕСТЬNULL(Процент,0) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ Как Превышение,
	|	Выбор когда ТЗСПроцентом.Цена > ТЗСПроцентом.ПрошлаяЦена и ЕСТЬNULL(Процент,0) > 0 и ТЗСПроцентом.ПрошлаяЦена > 0 ТОГДА -1*(1-ТЗСПроцентом.Цена/ТЗСПроцентом.ПрошлаяЦена)*100 ИНАЧЕ 0 КОНЕЦ как ПроцентПревышения
	|ИЗ ТЗСПроцентом
	|ГДЕ ТЗСПроцентом.Цена > ТЗСПроцентом.ПрошлаяЦена и ЕСТЬNULL(Процент,0) > 0 и  -1*(1-ТЗСПроцентом.Цена/ТЗСПроцентом.ПрошлаяЦена)*100 > ЕСТЬNULL(Процент,0)
	|;
	|УНИЧТОЖИТЬ ТЗСПроцентом; 
	|УНИЧТОЖИТЬ ПриходСИсторией;";

	
	Т = СтрЗаменить(Т,"Параметр","&Параметр");
	Т = СтрЗаменить(Т,"Склад.Регион","&Регион");
	Запрос.Текст = Т;
	
	
	Для каждого стр из Параметры Цикл
		//Сообщить("Запрос.УстановитьПараметр(""" + стр.Ключ + ""","+ "" + стр.Значение + ")");
		Запрос.УстановитьПараметр("" + стр.Ключ + "", стр.Значение );
	КонецЦикла;

	Запрос.УстановитьПараметр("Период", НачалоДня(ТекущаяДата())-24*60*60*Константы.ДнейИсторииЦеныДляПроверкиПрихода.Получить() );
	Запрос.УстановитьПараметр("Ссылка", Документ );
	Запрос.УстановитьПараметр("Регион", Регион );
	Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
    Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Возврат ;
	КонецЕсли;
	
	ТЗПревышений = Рез.Выгрузить();	
	
	Для каждого стр из ТЗПревышений Цикл
		
		Косяк=ТЗКосяков.Добавить();
		//Косяк.Партия=Стр.Партия;
		Косяк.ТОвар=стр.Товар;
		Косяк.Косяк="Превышение закупочной цены! "+стр.Цена+" > "+Окр(стр.ПрошлаяЦена,2)+" на "+Окр(стр.ПроцентПревышения,2)+"%" + " предел: " + стр.Процент;
		
	КонецЦикла;
	
	Возврат;
	
КонецПроцедуры


Процедура УЗ_ПроверитьПревышениеЗакупочнойЦены(ТЧТовар,Регион,СубъектРФ,Документ,ТипДокумента,ВидДокумента,ТЗКосяков,СвойПоставщик = Ложь)
	

	Если ТипДокумента<>Тип("ДокументСсылка.УЗ_ПоступлениеТовара") Тогда
		Возврат;
	КонецЕсли;
	
	Если СвойПоставщик = Ложь Тогда
		ТаблицаИстории = "ИсторияЗакупочнойЦены";
	Иначе
		ТаблицаИстории = "ИсторияЗакупочнойЦеныСП";
	КонецЕсли;
	
	//Если ТипДокумента=Тип("ДокументСсылка.РаспоряжениеНаПереоценку") 
	//	 ИЛИ
	//	 ТипДокумента=Тип("ДокументСсылка.ПерерасценкаТоваровНаСкладе") 
	//	 ИЛИ 
	//	 ТипДокумента=Тип("ДокументСсылка.ПерерасценкаТоваров")
	//	 ИЛИ 
	//	 ТипДокумента=Тип("ДокументСсылка.Перерасценка366")
	//	 ИЛИ 
	//	 ТипДокумента=Тип("ДокументСсылка.ВводОстатков")
	//	 ИЛИ 
	//	 ТипДокумента=Тип("ДокументСсылка.ПеремещениеТовара")		 
	//	Тогда
	//	Возврат ;	
	//КонецЕсли;		
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	АлгоритмыПревышенияУсловияПрименения.Ссылка.Код КАК Код,
	               |	АлгоритмыПревышенияУсловияПрименения.НомерСтроки,
	               |	АлгоритмыПревышенияУсловияПрименения.ЛеваяЧасть,
	               |	АлгоритмыПревышенияУсловияПрименения.ТипУсловия,
	               |	АлгоритмыПревышенияУсловияПрименения.ПраваяЧасть,
	               |	ТИПЗНАЧЕНИЯ(АлгоритмыПревышенияУсловияПрименения.ПраваяЧасть) КАК ТипПравойЧасти,
	               |	ПРЕДСТАВЛЕНИЕ(АлгоритмыПревышенияУсловияПрименения.ПраваяЧасть),
	               |	АлгоритмыПревышенияУсловияПрименения.ОбъединятьСоСледующим,
	               |	АлгоритмыПревышенияУсловияПрименения.Ссылка.ФормулаРасчетаЦены КАК Формула
	               |ИЗ
	               |	Справочник.АлгоритмыПревышения.УсловияПрименения КАК АлгоритмыПревышенияУсловияПрименения
	               |ГДЕ
	               |	АлгоритмыПревышенияУсловияПрименения.Ссылка В
	               |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |				АлгоритмыПревышенияРегионы.Ссылка
	               |			ИЗ
	               |				Справочник.АлгоритмыПревышения.Регионы КАК АлгоритмыПревышенияРегионы
	               |			ГДЕ
	               |				АлгоритмыПревышенияРегионы.Ссылка.Субъект = &Субъект
	               |				И АлгоритмыПревышенияРегионы.Регион = &Регион)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	АлгоритмыПревышенияУсловияПрименения.Ссылка.Приоритет УБЫВ,
	               |	АлгоритмыПревышенияУсловияПрименения.ПорядокФормированияУсловия
	               |ИТОГИ ПО
	               |	Код ИЕРАРХИЯ";
	
    Запрос.УстановитьПараметр("Субъект",СубъектРФ);
	Запрос.УстановитьПараметр("Регион", Регион );
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		#Если Клиент Тогда
			Сообщить("Не задано ни одного правила для проверки превышений цен по региону: " + Регион + " и субъекту РФ: " + СубъектРФ);
		#КонецЕсли
		Возврат;
	КонецЕсли;
	СпособВыборки = ОбходРезультатаЗапроса.ПоГруппировкамСИерархией;
	Выборка = Рез.Выбрать(СпособВыборки);
	Т="";
	ПервыйЗаход = Истина;
	Параметры = Новый Структура;
	НомерПараметра = 0;
	
	Т = "
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	Приход.Товар,
	    |	Приход.ЦенаЗакуп*Приход.КоэффициентРазбивки / Приход.Коэфф как Цена,
	    |	СРЕДНЕЕ(ИсторияЗакупочнойЦены.Цена) КАК ПрошлаяЦена
		|ПОМЕСТИТЬ ПриходСИсторией
	    |ИЗ
	    |	Документ."+ВидДокумента+".Товар как Приход
	    |		INNER JOIN РегистрСведений."+ТаблицаИстории+" КАК ИсторияЗакупочнойЦены
	    |		ПО (ИсторияЗакупочнойЦены.Товар = Приход.Товар)  и СубъектРФ = &СубъектРФ
	    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Ошибки.Товар КАК Товар
		|ИЗ
		|	Документ."+ВидДокумента+".ОшибкиРасценки КАК Ошибки
		|ГДЕ
		|	Ошибки.Ссылка = &Ссылка
		|	И Ошибки.ИгнорироватьОшибку = Истина) КАК Выборка
		|ПО (Выборка.Товар = Приход.Товар)		
	    |
		|ГДЕ Приход.Ссылка = &Ссылка И Приход.Товар.ЖНВЛС = Ложь  И ИсторияЗакупочнойЦены.Период >= &Период И Выборка.Товар ЕСТЬ NULL
	    |СГРУППИРОВАТЬ ПО
	    |	Приход.Товар,
	    |	Приход.ЦенаЗакуп*Приход.КоэффициентРазбивки / Приход.Коэфф
	    |;

	|Выбрать ПриходСИсторией.Товар,ПриходСИсторией.Цена, ПриходСИсторией.ПрошлаяЦена, ";
	Пока Выборка.Следующий() Цикл
		Если ПервыйЗаход = Истина Тогда
			Т = Т + Символы.ПС + "ВЫБОР КОГДА ";
			ПервыйЗаход = Ложь;
		Иначе
			Т = Т + Символы.ПС + " КОГДА ";
		КонецЕсли;

		Выборка2 = Выборка.Выбрать(СпособВыборки);
		Формула = "";
		Пока Выборка2.Следующий() Цикл
			Формула = Выборка2.Формула;
			Если Найти(XMLТипЗнч(Выборка2.ПраваяЧасть).ИмяТипа,"Ref") Тогда
				 ПраваяЧасть = "Параметр"+Формат(НомерПараметра,"ЧН=0; ЧГ=0");
				 Параметры.Вставить(ПраваяЧасть,Выборка2.ПраваяЧасть);
				 НомерПараметра = НомерПараметра + 1;
			 Иначе
				 ПраваяЧасть = Формат(Выборка2.ПраваяЧасть,"ЧГ=0");
			КонецЕсли;
			
			Т = Т + Символы.ПС + Выборка2.ЛеваяЧасть + " " + Выборка2.ТипУсловия + " " + ПраваяЧасть + " " + Выборка2.ОбъединятьСоСледующим;
		КонецЦикла;
		Т = Т + Символы.ПС + " ТОГДА " + Формула ;
	КонецЦикла;
	Т = Т + Символы.ПС + " КОНЕЦ КАК Процент ";
	Т = Т + "
	|ПОМЕСТИТЬ ТЗСПроцентом
	|ИЗ ПриходСИсторией как ПриходСИсторией
	|;
	|Выбрать 
	|	ТЗСПроцентом.Товар,
	|	ТЗСПроцентом.Цена,
	|	ТЗСПроцентом.ПрошлаяЦена,
	|	ТЗСПроцентом.Процент,
	|	Выбор когда ТЗСПроцентом.Цена > ТЗСПроцентом.ПрошлаяЦена и ЕСТЬNULL(Процент,0) > 0 и ТЗСПроцентом.ПрошлаяЦена > 0 и -1*(1-ТЗСПроцентом.Цена/ТЗСПроцентом.ПрошлаяЦена)*100 > ЕСТЬNULL(Процент,0) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ Как Превышение,
	|	Выбор когда ТЗСПроцентом.Цена > ТЗСПроцентом.ПрошлаяЦена и ЕСТЬNULL(Процент,0) > 0 и ТЗСПроцентом.ПрошлаяЦена > 0 ТОГДА -1*(1-ТЗСПроцентом.Цена/ТЗСПроцентом.ПрошлаяЦена)*100 ИНАЧЕ 0 КОНЕЦ как ПроцентПревышения
	|ИЗ ТЗСПроцентом
	|ГДЕ ТЗСПроцентом.Цена > ТЗСПроцентом.ПрошлаяЦена и ЕСТЬNULL(Процент,0) > 0 и  -1*(1-ТЗСПроцентом.Цена/ТЗСПроцентом.ПрошлаяЦена)*100 > ЕСТЬNULL(Процент,0)
	|;
	|УНИЧТОЖИТЬ ТЗСПроцентом; 
	|УНИЧТОЖИТЬ ПриходСИсторией;";

	
	Т = СтрЗаменить(Т,"Параметр","&Параметр");
	Т = СтрЗаменить(Т,"Склад.Регион","&Регион");
	Запрос.Текст = Т;
	
	
	Для каждого стр из Параметры Цикл
		//Сообщить("Запрос.УстановитьПараметр(""" + стр.Ключ + ""","+ "" + стр.Значение + ")");
		Запрос.УстановитьПараметр("" + стр.Ключ + "", стр.Значение );
	КонецЦикла;

	Запрос.УстановитьПараметр("Период", НачалоДня(ТекущаяДата())-24*60*60*Константы.ДнейИсторииЦеныДляПроверкиПрихода.Получить() );
	Запрос.УстановитьПараметр("Ссылка", Документ );
	Запрос.УстановитьПараметр("Регион", Регион );
	Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
    Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Возврат ;
	КонецЕсли;
	
	ТЗПревышений = Рез.Выгрузить();	
	
	Для каждого стр из ТЗПревышений Цикл
		
		Косяк=ТЗКосяков.Добавить();
		//Косяк.Партия=Стр.Партия;
		Косяк.ТОвар=стр.Товар;
		Косяк.Косяк="Превышение закупочной цены! "+стр.Цена+" > "+Окр(стр.ПрошлаяЦена,2)+" на "+Окр(стр.ПроцентПревышения,2)+"%" + " предел: " + стр.Процент;
		
	КонецЦикла;
	
	Возврат;
	
КонецПроцедуры


Функция СоздатьТаблицуРезультата(Авторасценка)
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("НН");
	ТЗ.Колонки.Добавить("КодТовара");
	ТЗ.Колонки.Добавить("Товар");
	ТЗ.Колонки.Добавить("Остаток");
	ТЗ.Колонки.Добавить("ПредыдущаяРознЦена");
	ТЗ.Колонки.Добавить("ЦенаРозн");
	//ТЗ.Колонки.Добавить("ЕИТ");
	ТЗ.Колонки.Добавить("КоэффЕит");
	ТЗ.Колонки.Добавить("ТоварРасфасован");
	ТЗ.Колонки.Добавить("Регион");
	ТЗ.Колонки.Добавить("КодПартии");
	ТЗ.Колонки.Добавить("Отклонение");
	ТЗ.Колонки.Добавить("ЖНВЛС");
	ТЗ.Колонки.Добавить("СтавкаНДС");
	ТЗ.Колонки.Добавить("ЭтоИндивидуальнаяЦена");
	ТЗ.Колонки.Добавить("ЦенаПоМатрице");
	ТЗ.Колонки.Добавить("ПроцентПоМатрицеНаценок");
	ТЗ.Колонки.Добавить("ЦенаПоМатрицеТМ");
	ТЗ.Колонки.Добавить("ПроцентПоМатрицеТМ");
	
	
	Если Авторасценка = Ложь Тогда
		ТЗ.Колонки.Добавить("Конкурент");
		ТЗ.Колонки.Добавить("МинимальнаяЦена");
		ТЗ.Колонки.Добавить("НаценкаОтЗакупБезНДС");
		ТЗ.Колонки.Добавить("НаценкаОтЗакупки");
		ТЗ.Колонки.Добавить("НаценкаОтЦГР");
		ТЗ.Колонки.Добавить("НаценкаОтЦПРБНДС");
		ТЗ.Колонки.Добавить("СредневзвешеннаяЦена");
		ТЗ.Колонки.Добавить("Топ100");
		ТЗ.Колонки.Добавить("Топ1000");
		ТЗ.Колонки.Добавить("ЦенаГосРег");
		ТЗ.Колонки.Добавить("ЦенаЗакуп");
		ТЗ.Колонки.Добавить("ЦенаПРБезНДС");
		ТЗ.Колонки.Добавить("ИндЦена");
		ТЗ.Колонки.Добавить("Группа");


	КонецЕсли;
	
	Возврат ТЗ;
	
КонецФункции

Функция СоздатьДеревоОшибок()
	
	ДО = Новый ДеревоЗначений;
	КДО=ДО.Колонки.Добавить("Ошибки");
	ДО.Строки.Очистить();
	Возврат ДО;
	
КонецФункции

Функция СоздатьТабличныйДокумент(Макет)
	    
		Таб = Новый ТабличныйДокумент;
		Таб.ОтображатьСетку= ЛОЖЬ;
		Таб.АвтоМасштаб= ИСТИНА;
		Таб.ОтображатьЗаголовки = Ложь;
		Секция=Макет.ПолучитьОбласть("Шапка"); 
		Таб.Вывести(Секция);
		Возврат Таб;
		
КонецФункции

Функция ВеткаОшибокТОвара (ВеткаТОварПРов,ВеткаРОдитель,Текст)  
	//----------------------------------
	//Назначение:
	//  Определяет выведена ли ветка товара и если нет то создает ее
	//  
	//  
	//  
	//----------------------------------
	Если ВеткаТОварПРов= Неопределено ТОгда
		Рез=ВеткаРОдитель.Строки.Добавить();
		Рез.Ошибки=Текст.Ссылка;
	Иначе
		Рез=ВеткаТОварПРов;
	КонецЕсли; 
	
	Возврат Рез;	
	
КонецФункции	//ВеткаОшибокТОвара


Функция Условие_СодЗнач(Лево,Право)
	
	// Лево - это  либо ТЗ либо Неопределено
	// Право - Это одно значение

	
	Если Лево=Неопределено тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Лево.Найти(Право)= Неопределено Тогда
		Возврат Ложь; // нет там такого
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Функция ПравильнаяФормулаРасчета (Знач ИсходнаяФормула)  
	//----------------------------------
	//Назначение:
	//  Приводит формулу расчета к идэальным сферическим единицам
	//  
	//  
	//  
	//----------------------------------
	
	
	Если Найти(ИсходнаяФормула,"Док.ЦенаПроизводителя")<>0 Тогда
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"Док.ЦенаПроизводителя","(Док.ЦенаПроизводителя/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли;	 
	
	
	Если Найти(ИсходнаяФормула,"Док.ЦенаЗакупБезНДС")<>0 Тогда
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"Док.ЦенаЗакупБезНДС","(Док.ЦенаЗакупБезНДС/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли; 
	
	Если Найти(ИсходнаяФормула,"(Док.ЦенаЗакуп)")<>0 Тогда	
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"(Док.ЦенаЗакуп)","((Док.ЦенаЗакуп)/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли;
	
	Если Найти(ИсходнаяФормула,"Док.ЦенаГосРегистрации")<>0 Тогда
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"Док.ЦенаГосРегистрации","(Док.ЦенаГосРегистрации/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли;
	
	Если СтрДлина(СокрЛП(ИсходнаяФормула))<5 тогда // а вдруг жестко задали цену? до 9999
		Попытка // а вдруг там просто число
			Ч=Число(ИсходнаяФормула);
			ИсходнаяФормула=ИсходнаяФормула+"/ДокЕитК";
		Исключение
			// бредовая идея
		КонецПопытки;	
	КонецЕсли; 
	
	Возврат ИсходнаяФормула;	
	
КонецФункции	//ПравильнаяФормулаРасчета

Функция ПолучитьМатрицуОкруглений()
	
	Запрос=Новый Запрос;

	Запрос.Текст = "ВЫБРАТЬ
             |	МатрицаОкруглений.Цена1,
             |	МатрицаОкруглений.Цена2,
             |	МатрицаОкруглений.ПроцентОтклоненияВверх,
             |	МатрицаОкруглений.ПроцентОтклоненияВниз,
             |	МатрицаОкруглений.СпособОкругления,
             |	МатрицаОкруглений.МетодОкругления,
             |	МатрицаОкруглений.ИспользоватьДляЖВ
             |ИЗ
             |	Справочник.МатрицаОкруглений КАК МатрицаОкруглений";
			 
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьтаблицуПредельныхНаценок(СубъектРФ)
	
	ТХТ = "ВЫБРАТЬ
	      |	СубъектыРФОграниченияПоЦенообразованию.ЦенаПроизводителяОт,
	      |	СубъектыРФОграниченияПоЦенообразованию.ЦенаПроизводителяДо,
	      |	СубъектыРФОграниченияПоЦенообразованию.ПредельнаяНадбавкаОпт,
	      |	СубъектыРФОграниченияПоЦенообразованию.ПредельнаяНадбавкаРозн,
	      |	СубъектыРФОграниченияПоЦенообразованию.ПредельнаяНадбавкаПККНОпт,
	      |	СубъектыРФОграниченияПоЦенообразованию.ПредельнаяНадбавкаПККНРозн
	      |ИЗ
	      |	Справочник.СубъектыРФ.ОграниченияПоЦенообразованию КАК СубъектыРФОграниченияПоЦенообразованию
	      |ГДЕ
	      |	СубъектыРФОграниченияПоЦенообразованию.Ссылка = &СубъектРФ";
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция Расценить(ПараметрыРасценки = Неопределено) Экспорт
	
	Перем СокрСтр;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("Результат",Ложь);
	СтруктураРезультата.Вставить("Комментарий","");
    СтруктураРезультата.Вставить("КоличествоОшибокРасценки",0);

	Если ПараметрыРасценки = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	Авторасценка = ПараметрыРасценки.Авторасценка ;
	Склад = ПараметрыРасценки.Склад;
	Документ = ПараметрыРасценки.Документ ;
	ТипДокумента = ПараметрыРасценки.ТипДокумента ;
	ВидДокумента = ПараметрыРасценки.ВидДокумента ;
	ФормироватьКомментарий = ПараметрыРасценки.Комментировать;
	ВыводитьНеРасцененные = ПараметрыРасценки.ВыводитьНеРасцененные;
	Регион = ПараметрыРасценки.Регион;
	СубъектРФ = Склад.СубъектРФ;
	МинимальныйПроцентНаценкиКромеТопов = ПараметрыРасценки.МинимальныйПроцентНаценкиКромеТопов;
	ЗаписыватьЦеныВРегистрЦен = ПараметрыРасценки.ЗаписыватьЦеныВРегистрЦен;
	УстановитьрозничныеЦеныВДокументе = ПараметрыРасценки.УстановитьрозничныеЦеныВДокументе;
	ИспользоватьЦеныКонкурентов = ПараметрыРасценки.ИспользоватьЦеныКонкурентов;
	ПроверятьЗакупкуИРозницу = ПараметрыРасценки.ПроверятьЗакупкуИРозницу;
	ВидФиксЦены = Склад.ВидФиксЦены.Код;

	//Если ПараметрыРасценки.Свойство("РазрешитьРозничнуюЦенуНижеЗакупочной") = Ложь Тогда
	//	РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь;
	//Иначе
	//	РазрешитьРозничнуюЦенуНижеЗакупочной=ПараметрыРасценки.РазрешитьРозничнуюЦенуНижеЗакупочной;
	//КонецЕсли;
	РазрешитьРозничнуюЦенуНижеЗакупочной = Константы.РазрешатьРасценкуВМинус.Получить();	
	
	Если ПараметрыРасценки.Свойство("СвойПоставщик") = Ложь Тогда
		СвойПоставщик = Ложь;
	Иначе
		СвойПоставщик = ПараметрыРасценки.СвойПоставщик;
	КонецЕсли;
	
	Если ПараметрыРасценки.Свойство("ИгнорироватьПревышенияЗакупочнойЦены") = Истина Тогда
		ИгнорироватьПревышенияЗакупочнойЦены = ПараметрыРасценки.ИгнорироватьПревышенияЗакупочнойЦены;
	Иначе
		ИгнорироватьПревышенияЗакупочнойЦены = Ложь;
	КонецЕсли;

	
	 НачалоРасценки=ТекущаяДата();
	
	
	СтруктураРезультата.КоличествоОшибокРАсценки=0;
	
	Макет=ПолучитьОбщийМакет("РасценкаКомментарий");
	
	Таб	= СоздатьТабличныйДокумент(Макет);
	ТП	= СоздатьТаблицуРезультата(Авторасценка);
	ДО	= СоздатьДеревоОшибок();
	
	Корень=ДО.Строки.Добавить();
	Корень.Ошибки="Расценка документа ";
	
	ТЧТовар= Документ.Товар.Выгрузить(); //ЭтаФорма.ВладелецФормы.Товар;
	
	ТЗКосяков = Новый ТаблицаЗначений;
	ТЗКосяков.Колонки.Добавить("Партия");
	ТЗКосяков.Колонки.Добавить("Товар");
	ТЗКосяков.Колонки.Добавить("Косяк");
	ТЗКосяков.Колонки.Добавить("ЦенаПоРасценке");

	ТЗВМинус = Новый ТаблицаЗначений;
	ТЗВМинус.Колонки.Добавить("Партия");
	ТЗВМинус.Колонки.Добавить("Товар");
	ТЗВМинус.Колонки.Добавить("ЦенаЗакуп");
	ТЗВМинус.Колонки.Добавить("ЦенаРозн");
	ТЗВМинус.Колонки.Добавить("Дата");
	ТЗВМинус.Колонки.Добавить("Количество");

	//ТЗКосяков=КонтрольПоЗакупке_Старый(ТЧТовар,Регион,Документ,ТипДокумента,ВидДокумента);
	Если НЕ ИгнорироватьПревышенияЗакупочнойЦены Тогда
		ПроверитьПревышениеЗакупочнойЦены(ТЧТовар,Регион,СубъектРФ,Документ,ТипДокумента,ВидДокумента,ТЗКосяков,СвойПоставщик);
	КонецЕсли;

	
	СтруктураРезультата.Вставить("ДеревоОшибок",ДО);
	СтруктураРезультата.Вставить("ТаблицаКомментариев",Таб);
	СтруктураРезультата.Вставить("ТП",ТП);
	СтруктураРезультата.Вставить("ТЗКосяков",ТЗКосяков);

	Если Регион.Пустая() = Истина Тогда
		Косяк=ТЗКосяков.Добавить();
		Косяк.Партия="";
		Косяк.ТОвар="";
		Косяк.Косяк="Для аптеки не задан регион ценообразования";
		СтруктураРезультата.Результат = Ложь;
		СтруктураРезультата.ТЗКосяков = ТЗКосяков;
		Возврат СтруктураРезультата;
	КонецЕсли;
	
	
	ТЗМатрицаОкруглений = ПолучитьМатрицуОкруглений();
	ТЗПредельныхНаценок = ПолучитьтаблицуПредельныхНаценок(СубъектРФ);	
	
	ДатаДок=Документ.Дата;
	ИмяДок = Документ.МЕТАДАННЫЕ().Имя;
	Если ИмяДок = "ПоступлениеТовара" Тогда
		ДатаВхДок = Документ.ВхДатаНакл;
		Если ДатаВхДок = Дата(1,1,1) Тогда
			ДатаВхДок = ДатаДок;
		КонецЕсли;
	Иначе
		ДатаВхДок = ДатаДок;
	КонецЕсли;
	
	
	ДатаВыходаНаПМ=КонецМесяца(КонецМесяца(СКЛАД.ДатаПерехода)+1);// среднестатистический срок выхода на проектную мощность  через месяц после конца месяца открытия аптеки
	
	
	//Попытка
	//	Курс=ПолучитьКурсВалюты(Документ.Валюта, ДатаДок);
	//ИСключение
		Курс=1;  // в документе нет реквизита валюта
	//КонецПопытки;
	

	
	СтрокаНулевыхЦен=ТЧТовар.Найти(0,"ЦенаЗакуп");
	Если СтрокаНулевыхЦен<> Неопределено Тогда
		Косяк=ТЗКосяков.Добавить();
		Косяк.Партия="";
		Косяк.ТОвар="";
		Косяк.Косяк="В документе есть строки с нулевой закупочной ценой!";
		#Если Клиент Тогда
			Сообщить("В документе есть строки с нулевой закупочной ценой! РАСЦЕНИТЬ НЕВОЗМОЖНО! ДОКУМЕНТ НЕ ГОТОВ!");
		#КонецЕсли
		
		
		Если НЕ Документ.Метаданные().ТабличныеЧасти.Найти("ОшибкиРасценки") = Неопределено  Тогда
			ДокументОбъект = Документ.ПолучитьОбъект();
			ОП=ДокументОбъект.ОшибкиРасценки;
			
			Если Константы.БеспределСЖНВЛС.Получить() = Истина Тогда
				ПустаяПартия = Справочники.Партии.ПустаяСсылка();
				
				СписокУдаляемыхСтрок=новый СписокЗначений;
				
				Для каждого стр из ОП Цикл
					Если стр.Партия = ПустаяПартия Тогда
						продолжить;
					КонецЕсли;
					СписокУдаляемыхСтрок.Добавить(стр);
				КонецЦикла;
				Для Каждого ССУС из СписокУдаляемыхСтрок цикл
					ОП.Удалить(ССУС.Значение);
				КонецЦикла;	
				
				
			Иначе
				ОП.Очистить();// при каждой расценке перезаполняется. в идеале - пустая.
			КонецЕсли;
			
			ТЗКосяков.Свернуть("Партия,Товар,Косяк,ЦенаПоРасценке","");
			
			
			Для каждого Стр из ТЗКосяков Цикл
				СтрОп=ОП.Добавить();
				СтрОП.Товар 	= Стр.Товар;
				СтрОП.Партия 	= Стр.Партия;
				СтрОП.ОписаниеОшибки= Стр.Косяк;
				СтрОП.ЦенаПоРасценке= Стр.ЦенаПоРасценке;
			КонецЦикла;
			
		КонецЕсли;	
		
		Попытка
			ДокументОбъект.Состояние=Справочники.СостояниеДокумента.НайтиПоНаименованию("не готов");
		Исключение
		КонецПопытки;
		
        ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
        СтруктураРезультата.ТЗКосяков=ТЗКосяков;

		Возврат СтруктураРезультата; // произойдет ошибка расценки. Не расцениваем недоделанный документ
	КонецЕсли; 
	
	Если АвтоРасценка = Ложь и ИспользоватьЦеныКонкурентов = Истина и ПроверятьЗакупкуИРозницу = Истина Тогда
		ТЗЦенКонкурентов = ПолучитьТаблицуЦенКонкурентов(Документ);
	КонецЕсли;
	
	Если ИспользоватьЦеныКонкурентов = Истина Тогда
		ТЗМинимальныхЦенКонкурентов = ПолучитьМинимальныеЦеныКонкурентов(Документ);	
	КонецЕсли;
	
	//ЕстьИндЦены = Ложь;
	//Если Документ.ИндивидуальныеЦены.Количество() > 0 Тогда
	//	ЕстьИндЦены = Истина;
	//КонецЕсли;
	
	СписокСтрокДокумента=ТЧТовар.ВыгрузитьКолонку("ТОвар");
	
	
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Поиск старых розничных цен...";
	Если ПроверятьЗакупкуИРозницу = Истина Тогда
		ТаблицаСтарыхРознЦен=ПолучитьТаблицуСтарыхРозничныхЦен(ДатаДок,Склад,Регион,СписокСтрокДокумента,Документ);
	КонецЕсли;
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Старые розн. цены получены.";
	
	
	ЕстьОшибки=Ложь;
	
		
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПеремещениеТОвара") Тогда
		ТЧТовар.Колонки.Добавить("ЦенаГосРегистрации");
		ТЧТовар.Колонки.Добавить("ЦенаПроизводителя");
		ТЧТовар.Колонки.Добавить("ЦенаЗакупБезНДС");
		ТЧТовар.ЗаполнитьЗначения(0,"ЦенаГосРегистрации");
		
		Для каждого СтрТЧТовар из ТЧТовар Цикл
			СтрТЧТовар.ЦенаЗакупБезНДС= СтрТЧТовар.ЦенаЗакуп - ОМ3_НДСИзСуммыПоСтавке (СтрТЧТовар.ЦенаЗакуп,СтрТЧТовар.СтавкаНДС);
			СтрТЧТовар.ЦенаПроизводителя=СтрТЧТовар.Партия.ЦенаПроизводителяБезНДС;
			СтрТЧТовар.ЦенаГосРегистрации = СтрТЧТовар.Партия.ЦенаГосРегистрации;
			СтрТЧТовар.ЦенаЗакупБезНДС = Окр(СтрТЧТовар.ЦенаЗакуп/(1+СтрТЧТовар.СтавкаНДС.Ставка/100),2);
		КонецЦикла;	
	КонецЕсли;
	
	ТЧ = ТЧТовар.Скопировать(,"Товар,Партия,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС"); //ЭВФ.Товар.Выгрузить();

	ТЧ.Свернуть("Товар,Партия,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС","");
	
	СписокРегионов = Новый СписокЗначений;
	СписокРегионов.Добавить(Регион);
	
	Для каждого СтрРег из СписокРегионов цикл // ПО РЕГИОНАМ
		
		
				
		ТекРегион=СтрРег.Значение;
		
		
		Если ТекРегион.ПометкаУдаления=Истина ТОгда
			ПРодолжить; // Удаленные регионы НЕ обрабатываем!
		КонецЕсли; 
		
		
		ВеткаРегион=Корень.Строки.Добавить();
		ВеткаРегион.Ошибки="по Региону   "+ТекРегион;
		
		
		КомментаторРасчета  (Неопределено,Таб,Макет,"Регион",Новый Структура("Регион",ТекРегион),ФормироватьКомментарий);
		
		
		
		//------------------<Получим алогоритмы ценообразования из справочников>-------------------GtG----16.11.2007
		//Регион
		//	Алгоритмы ценообразования
		//		УСЛОВИЯ ПРИМЕНЕНИЯ АЛГОРИТМОВ
		// Выборку строим начиная с конца (УПА)
		ТХТ="ВЫБРАТЬ
		    |	УсловияАлгоритма.ЛеваяЧасть,
		    |	УсловияАлгоритма.ТипУсловия,
		    |	УсловияАлгоритма.ПраваяЧасть,
		    |	УсловияАлгоритма.ОбъединятьСоСледующим,
		    |	УсловияАлгоритма.ПорядокФормированияУсловия КАК ПорядокФормированияУсловия,
		    |	УсловияАлгоритма.Ссылка.Приоритет КАК Приоритет,
		    |	УсловияАлгоритма.Ссылка.ДатаС,
		    |	УсловияАлгоритма.Ссылка.ДатаПо,
		    |	УсловияАлгоритма.Ссылка.МинПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.МаксПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаЦены,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаПроцентаНаценки,
		    |	УсловияАлгоритма.Ссылка.Ссылка КАК АлгоритмСсылка,
		    |	УсловияАлгоритма.ОткрывающаяСкобка КАК ОСК,
		    |	УсловияАлгоритма.ЗакрывающаяСкобка КАК ЗСК
		    |ИЗ
		    |	Справочник.АлгоритмыЦенообразованияРегионов.УсловияПрименения КАК УсловияАлгоритма
		    |ГДЕ
		    |	УсловияАлгоритма.Ссылка.Владелец = &Регион
		    |	И &ДатаДок МЕЖДУ УсловияАлгоритма.Ссылка.ДатаС И УсловияАлгоритма.Ссылка.ДатаПо
		    |	И УсловияАлгоритма.Ссылка.ДляВсехАптек = ИСТИНА
		    |
		    |ОБЪЕДИНИТЬ ВСЕ
		    |
		    |ВЫБРАТЬ
		    |	УсловияАлгоритма.ЛеваяЧасть,
		    |	УсловияАлгоритма.ТипУсловия,
		    |	УсловияАлгоритма.ПраваяЧасть,
		    |	УсловияАлгоритма.ОбъединятьСоСледующим,
		    |	УсловияАлгоритма.ПорядокФормированияУсловия,
		    |	УсловияАлгоритма.Ссылка.Приоритет,
		    |	УсловияАлгоритма.Ссылка.ДатаС,
		    |	УсловияАлгоритма.Ссылка.ДатаПо,
		    |	УсловияАлгоритма.Ссылка.МинПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.МаксПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаЦены,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаПроцентаНаценки,
		    |	УсловияАлгоритма.Ссылка.Ссылка,
		    |	УсловияАлгоритма.ОткрывающаяСкобка,
		    |	УсловияАлгоритма.ЗакрывающаяСкобка
		    |ИЗ
		    |	Справочник.АлгоритмыЦенообразованияРегионов.УсловияПрименения КАК УсловияАлгоритма
		    |ГДЕ
		    |	УсловияАлгоритма.Ссылка В
		    |			(ВЫБРАТЬ
		    |				ПодключенныеАптеки.Ссылка
		    |			ИЗ
		    |				Справочник.АлгоритмыЦенообразованияРегионов.ПодключенныеАптеки КАК ПодключенныеАптеки
		    |			ГДЕ
		    |				ПодключенныеАптеки.Ссылка.Владелец = &Регион
		    |				И ПодключенныеАптеки.Склад = &Склад
		    |				И &ДатаДок МЕЖДУ ПодключенныеАптеки.Ссылка.ДатаС И ПодключенныеАптеки.Ссылка.ДатаПо
		    |				И ПодключенныеАптеки.Ссылка.ДляВсехАптек = ЛОЖЬ)
		    |
		    |УПОРЯДОЧИТЬ ПО
		    |	Приоритет,
		    |	ПорядокФормированияУсловия";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Склад",Склад);
		Запрос.УстановитьПараметр("Регион",ТекРегион); 
		Запрос.УстановитьПараметр("ДАТАДок",ДатаДок);
		
		ИсходнаяТЗПравил=Запрос.Выполнить().Выгрузить(); // сырые данные
		ИсходнаяТЗПравил.Колонки.Добавить("УсловиеВыполнилось");
		ИсходнаяТЗПРавил.Колонки.Добавить("ВырИтУсл");  // выаржение для вычисления иотгового результата условия примеенния
		
		
		
		Если ИсходнаяТЗПРавил.Количество()=0 ТОгда
			ТекстОшибки=("   По региону  "+ТекРегион+" не задано ни одного алгоритма ценообразования! НЕ РАСЦЕНЕНО! (Задается через справочник регионов.)");
			
			ОшибкаРЕгион=ВеткаРегион.Строки.Добавить();
			ОшибкаРегион.Ошибки=ТекстОшибки;
			СсылкаРегион=ОшибкаРЕгион.Строки.Добавить();
			СсылкаРегион.ошибки=ТекРегион;
			
			КомментаторРасчета  (Неопределено,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион),ФормироватьКомментарий);
			
			СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
			
			Продолжить; // по группам ТТ
		КонецЕсли; 	
		
		ТЗХ=ИсходнаяТЗПРавил.Скопировать(,"Приоритет");
		ТЗХ.Свернуть("Приоритет"); //,ПорядокФормированияУсловия");
		КоличествоАлгоритмов=ТЗХ.Количество();
		
		
		
		//------------------<Собираем из кусочков сложные условия>-------------------GtG----16.11.2007
		ВеткаТовары=ВеткаРегион.Строки.Добавить();
		ВеткаТовары.Ошибки=" Ошибки при расценке товара по региону  ";
		ЕстьОшибкиПоГТТ=Ложь;
		
		
		КоличествоСтрок = ТЧТовар.Количество();
		
		НН=0;
		
		
		ИсходнаяТЗПРавил.Сортировать("ПРиоритет,ПорядокФормированияУсловия");
		
				
		                                                                    
		ДанныеПоТоварамДокумента = ПолучитьДанныеПоТОварамДокумента(Документ,ВидФиксЦены,ДатаВхДок); //04-03-2013// ТОВАРЫ ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		ДанныеПоПартиямДокумента = ПолучитьДанныеПоПартиямДокумента(Документ);  //04-03-2013// Партии ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Расчет цен по строкам документа...";
		Для каждого Стр из ТЧТовар Цикл // по строкам документа
			
			ПостОбработкаЦены=Ложь;
			
			ДанныеТекПартии=ДанныеПоПартиямДокумента.Найти(Стр.Партия,"Партия");// строка тз
			
			
			НН=НН+1;
			
			//ТОвар=Стр.Товар.ПолучитьОбъект();
			
			//---------------<ускорение ускорения расценки>---------------------------// GtG // 04.03.2013 16:43:19 
			 // данные по всем товарам в одну тз
			//------------------<Ускорение расценки>-------------------GtG----27.11.2008 
			// чтобы избежать многочисленных обращений к базе Товар - делаем как ТЗ из 1-й строки
			// с колонками соответствующими всем реквизитам товара.
			// при вычислении условий типа товар.ххх = уууу это даст ускорение вычисления
			//-------------- ЗАПРОС GTG --------------------------НАЧАЛО
			//Назначение: все реквизиты товара
			//
			//ТХТ="ВЫБРАТЬ
			//	|	АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка,
			//	|	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценки,.... и т.д.  
						
			
			ТОВАР= ДанныеПоТоварамДокумента.найти(Стр.Товар,"ССЫЛКА"); // строка ТЗ
			
			МинЦенаКонкурента = 0;
			Если ИспользоватьЦеныКонкурентов = Истина Тогда
				НайденнаяЦена = ТЗМинимальныхЦенКонкурентов.Найти(Товар.Код,"КодТовара");
				Если НЕ НайденнаяЦена = Неопределено Тогда
					МинЦенаКонкурента = НайденнаяЦена.Цена;	
				КонецЕсли;
			КонецЕсли;

			ИндЦена = ТОВАР.ИндЦена;
			
			
			СтрТОвар=Товар.Ссылка;
			СтрТОварКод=Товар.Код;
			
			Если ФормироватьКомментарий Тогда
				КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Товар",Новый Структура("ТОВар,Расшифровка,ТОВарКод",СтрТОвар,СтрТОвар,СтрТОварКод),ФормироватьКомментарий);
			КонецЕсли;
			
			#Если Клиент Тогда
				Если АвтоРасценка=Ложь ТОгда
					
					Дрыг=цел(КоличествоСтрок/100);
					Если Дрыг=0 тогда Дрыг=1 конецесли;
					
					
					если  НН%Дрыг=0 тогда
						Состояние("расчет " + НН + " из " + КоличествоСтрок);
					КонецЕсли;
					
				КонецЕсли;	
			#КонецЕсли
			
			ВеткаТовар= Неопределено;
			
			Если Стр.КоличествоФакт=0 тогда
				Если ФормироватьКомментарий = Истина Тогда
					ТекстОшибки="Расценим, НО Фактическое количество товара равно нулю! ("+СтрТоварКод+")  "+СтрТовар+"    Не РАСЦЕНЕН!";
					
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
				КонецЕсли;
				ЕстьОшибкиПоГТТ=Истина;
				СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
				//Продолжить;
			КонецЕсли; 
			
			
			
			ТЗПРавил=ИсходнаяТЗПРавил.Скопировать();
			РознЦена=0;
			
			ПредельнаяНадбавкаОпт = 0;
			ПредельнаяНадбавкаРозн = 0;
			Если Товар.ЖНВЛС = Истина Тогда
				Для каждого текнаценка из ТЗПредельныхНаценок Цикл
					Если текнаценка.ЦенаПроизводителяОт < стр.ЦенаПроизводителя  и 	стр.ЦенаПроизводителя <= текнаценка.ЦенаПроизводителяДо Тогда
						ПредельнаяНадбавкаОпт = текнаценка.ПредельнаяНадбавкаОпт;	
						ПредельнаяНадбавкаРозн = текнаценка.ПредельнаяНадбавкаРозн;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			
			//------------------<1) нужны значения всех возможных переменных из алгоритма условий>-------------------GtG----17.11.2007
			//---------------- Товар-------
			//			ТОвар=Стр.Товар;
			//------------------Регион------
			//Регион=ТекРегион;
			
			//------------- ГТТ------
			//ГТТ=ВыбГТТ.Ссылка;
			
			//------------------<строка документа>-------------------GtG----17.11.2007 
			Док=Стр;
			
			//------------------<Единица измерения>-------------------GtG----28.11.2007
			Если Док.Еит.Пустая()=Истина ТОгда
				
				Если ФормироватьКомментарий = Истина Тогда
					ТекстОшибки="В документе у товара не указана единица измерения! ("+СтрТоварКод+")  "+СтрТОвар+"    Не РАСЦЕНЕН!";
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТОвар);
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
				КонецЕсли;
				
				ЕстьОшибкиПоГТТ=Истина;
				СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
				
				Продолжить; // по таблице товаров
			Иначе
				ДокЕитК=Док.Коэфф;  // коэффициент единицы измерения из документа
				ДокЕИТ=Док.Еит;
			КонецЕсли; 
			
			Если ПроверятьЗакупкуИРозницу = Истина Тогда  //Virus 04.03.2013
				Отбор = Новый Структура();
				//Отбор.Вставить("Регион",Регион);
				Отбор.Вставить("Товар",Товар.Ссылка);
				Строки = ТаблицаСтарыхРознЦен.НайтиСтроки(Отбор);
				Если Строки.Количество() > 0 Тогда
					ПредыдущаяРознЦена = Округлить(Строки[0].ПрошлаяЦена,Перечисления.СпособыОкруглений.До10коп,Перечисления.МетодыОкругления.Отбрасывать);
					Остаток			 =  Строки[0].Остаток;
				Иначе
					ПредыдущаяРознЦена = 0;
					Остаток = 0;
				КонецЕсли;
			Иначе
				ПредыдущаяРознЦена = 0;
				Остаток = 0;
			КонецЕсли;
			
			
			Если Товар.ЦенаПротокола > 0 Тогда
				Если (ДанныеТекПартии.ЦенаЗакуп - Товар.ЦенаПротокола) > 1 Тогда
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия=Стр.Партия;
						Косяк.ТОвар=Стр.Товар;
						Косяк.Косяк="Закупочная цена превышает цену протокола: ЦЗ=" + ДанныеТекПартии.ЦенаЗакуп + " ЦП= " + Товар.ЦенаПротокола;
				КонецЕсли;
			КонецЕсли;
			
			
			
			Если АвтоРасценка = Ложь и ИспользоватьЦеныКонкурентов = Истина и ПроверятьЗакупкуИРозницу = Истина Тогда
            	//СтрокаЦеныКонкурента = ТЗЦенКонкурентов.Найти(Товар.Ссылка,"Товар");
				СтрокаЦеныКонкурента = ТЗЦенКонкурентов.Найти(Товар.Код,"КодТовара");
			Иначе
				СтрокаЦеныКонкурента = Неопределено;
			КонецЕсли;
			
			~ПостобработкаЦены:  // безусловный переход сюда, если есть алгоритмы с отрицательным приоритетом.
			
			
			//------------------<Рассчитываем условия по каждой строке условий применения алгоритма>-------------------GtG----17.11.2007 
			// Если условие составное это даст для каждой части ИСТИНА или ЛОЖЬ потом их можно
			// загнать в одно выражение и получить результат
			
			ТЗПравил.Колонки.Добавить("РасшифровкаОшибки");
			
			Для каждого СтрП из ТЗПравил Цикл  // по таблице правил
				
				Если ПостОбработкаЦены=Истина Тогда // при повторной обработке отрицательных алгоритмов не берем положительные вообще
					Если  СтрП.приоритет>0 Тогда
						СтрП.УсловиеВыполнилось=Ложь;
						ПРодолжить;
					КонецЕсли;
				КонецЕсли;	
				
				
				
				
				Если СтрП.ЗСК=Истина или СтрП.ОСК=Истина Тогда // это скобка "(" или ")"
					СтрП.УсловиеВыполнилось=Истина; // скобки всегда считаем истинными
				Иначе// собственно это условие	 
					ЗначениеПРавойЧасти=СтрП.ПраваяЧасть;
					
					Если ТипЗнч(ЗначениеПРавойЧасти)=Тип("Строка") Тогда // значит это формула и ее нужно вычислить
						ЗначениеПРавойЧасти =Вычислить( ЗначениеПРавойЧасти );
					КонецЕсли;	
					
					ТХТВычислить=""+СтрП.ЛеваяЧасть+" "+СтрП.ТипУсловия+" ЗначениеПРавойЧасти";
					
					
					Если  СтрП.ТипУсловия="СодЗнач" Тогда // вычисляет сидит ли значение Лева в таблице значений Права
						ТХТВычислить=""+Условие_СодЗнач(Вычислить(СтрП.ЛеваяЧасть),ЗначениеПРавойЧасти)+"";
						
						// ТХТВычислить будет как "Истина" или "Ложь"
					КонецЕсли;
					
					
					

					Попытка
							СтрП.УсловиеВыполнилось=Вычислить(ТХТВычислить);		
					Исключение  //ибо могут накосячить при написании условий
						Комментарий=ОписаниеОшибки()+"
									|Ошибка вычисления выражения. 
									|Алгоритм  "+СтрП.АлгоритмСсылка+"
									|"+СтрП.ЛеваяЧасть+" Условие сравнения "+СтрП.ТипУсловия+" Значение в правой части "+ЗначениеПРавойЧасти; 
						СтруктураРезультата.Комментарий = Комментарий;
						СтруктураРезультата.ТЗКосяков=ТЗКосяков;
						#Если Клиент Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТОвар);
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=Комментарий;
					
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
	
							ВызватьИсключение Комментарий;
						#Иначе
							Возврат СтруктураРезультата; // точно! - накосячили.
						#КонецЕсли
					КонецПопытки ;
					
					
					
					Если СтрП.УсловиеВыполнилось=Ложь Тогда
						СтрП.РасшифровкаОшибки="Не выполнилось условие "+ТХТВычислить;// СтрЗаменить(ТХТВычислить,"ЗначениеПРавойЧасти",ЗначениеПРавойЧасти);//+", а по товару "+Вычислить(СтрП.ЛеваяЧасть);
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла;	// по таблице правил
			
			
			Приоритет=0;
			ВырИтУсл="";
			
			Для каждого СтрП из ТЗПравил Цикл  // по таблице правил 2 заход
				
				Если Приоритет<>СтрП.Приоритет Тогда // новое правило расчета
					ВырИтУсл="";
					
					Приоритет=СтрП.Приоритет; // запомним какой был последним
					
				КонецЕсли;	
				
				
				Если СтрП.ЗСК=Истина Тогда // это скобка ")"
					СтрПУсловиеВыполнилось=")"
				ИначеЕсли СтрП.ОСК=Истина Тогда // это скобка "("
					СтрПУсловиеВыполнилось="("
				Иначе  // Это условие
					СтрПУсловиеВыполнилось =СтрП.УсловиеВыполнилось;
				КонецЕсли; 	
					
				
				
				СтрП.ВырИтУсл=ВырИтУсл+" "+СтрПУсловиеВыполнилось+" "+СтрП.ОбъединятьСоСледующим;
				ВырИтУсл= СтрП.ВырИтУсл;// в последней строке сложного условия оно соберется все целиком
				// эта строка будет имет ьмакс порядок формирования
				
				
			КонецЦикла; // по таблице правил 2 заход
			
			//------------------<Свернет таблицу правил>-------------------GtG----20.11.2007
			
			
			ТЗПРавил.Сортировать("ПорядокФормированияУсловия Desc");
			ТЗПРавил.Сортировать("Приоритет Asc");

			
						
			ТЗПравил.Колонки.Удалить("ЛеваяЧасть");
			ТЗПравил.Колонки.Удалить("ТипУсловия");
			ТЗПравил.Колонки.Удалить("ПраваяЧасть");
			ТЗПравил.Колонки.Удалить("ОбъединятьСоСледующим");
			ТЗПравил.Колонки.Удалить("УсловиеВыполнилось");
			
			ППР=0; // правилоПриоритет
			ППФУ=0;  // правило, порядок формирования условия
			Удаляемыестроки=Новый СписокЗначений;
			
			СписокНевыполнившихсяУсловий=Новый СписокЗначений; // для человеческой расшифровки ошибки если
			// ни один алгоритм не подойдет	
			
			
			// АХТУНГ ДАНГЕР!
			
						
			//ПРи большом кол-ве условий неправильный порядок условий
			
			ТЗПравил.Колонки.Добавить("ЭтоУдаляемоеУсловие");
			ТЗПРавил.ЗаполнитьЗначения(Ложь,"ЭтоУдаляемоеУсловие");
			
			Для каждого СтрП из ТЗПравил Цикл
				
				
				Если ППР<СтрП.Приоритет Тогда
					ППР=СтрП.Приоритет ;    // правило приоритет
					ППФУ=СтрП.ПорядокФормированияУсловия; //правило, порядок формирования условия)
				КонецЕсли;	
				
				
									
				Если СтрП.ПорядокФормированияУсловия < ППФУ Тогда
					// это огрызок недоделанного сложного условия
					// его надо убрать чтоб дальше не мешался
					СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
					Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП);
                КонецЕсли; 
				
				//======================= Самый медленный кусок ======================
				Если прав( СтрП.ВырИтУсл,2)=" И" Или  прав( СтрП.ВырИтУсл,4)=" ИЛИ" Тогда
					СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
					Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
				Иначе
					Попытка
						Если Вычислить(СтрП.ВырИтУсл)=Ложь Тогда
							//------------------<Еще подуменьшим количество условий>-------------------GtG----20.11.2007 
							// Отбросим ложные строки
							СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
							Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
						КонецЕсли; 
					Исключение
						//------------------<Точно это огрызок сложного условия и он не посчитается>-------------------GtG----29.12.2007
						// Отбросим ложные строки
						СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
						Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
					КонецПопытки; 
				КонецЕсли; 
                //====================================================

			КонецЦикла;	
			
			
			
			//------------------<Удаляем неподходящие алгоритмы>-------------------GtG----23.11.2007
			//Для каждого СтрУС из Удаляемыестроки Цикл
			//	Попытка
			//		ТЗПРавил.Удалить(СтРУС.Значение);// удаляем лишние строки условий 
			//	ИСключение
			//		// значит уже прибили нах
			//	КонецПопытки; 
			//КонецЦикла;	
			ТЗПравил=ТзПравил.Скопировать(Новый Структура("ЭтоУдаляемоеУсловие",Ложь));
			
			
			
			
			
			//------------------<Должны остаться только подходящие>-------------------GtG----23.11.2007
			// если ничего не подошло - расценка невозможна 
			// выведем список невыполнившихся условий и перейдем к расценке следующего товара
			Если ТЗПравил.Количество()=0  и ПостОбработкаЦены=Ложь Тогда
				
				Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
					//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
					
					//ДокПартияЦенаЗакуп=ДанныеТекПартии["ЦенаЗакуп"]; // 1 раз лезем в базу
					
					Цена_Розничная=0;
					СтрТП=Тп.Добавить();
					СтрТП.ТОвар=СтрТОвар; //ссылка
					СтрТП.Партия=ДанныеТекПартии["Партия"];
					СтрТП.ЕИТ=Док.Еит;
					СтрТП.КоэффЕит=ДокЕитК;
					СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
					СтрТП.ЦенаГосРег=0;
					СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
					СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
					
					СтрТП.Топ100=Товар.Топ100;
					СтрТП.Топ1000=ТОвар.Топ1000;
					
					СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
					СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
					СтрТП.Регион  =ТекРегион;
					СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
					
					СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
					СтрТП.НН=НН;
					СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
					СтрТП.Остаток = Остаток;
					СтрТП.ИндЦена = ИндЦена;
					Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
						СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
						//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
						СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
					КонецЕсли;
					
				КонецЕсли; 
				
				Попытка
					Косяк=ТЗКосяков.Добавить();
					Косяк.Партия=СтрТП.Партия;
					Косяк.ТОвар=СтрТП.ТОвар;
					Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
				Исключение
					Попытка
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия="Партия неизвестна";
						Косяк.ТОвар=СтрТП.ТОвар;
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					Исключение
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия="Партия неизвестна";
						Косяк.ТОвар="Товар неизвестен!";
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					КонецПопытки;
				КонецПопытки; 
				
				

				
				
				Если ФормироватьКомментарий = Истина Тогда
					
					ТекстОшибки=" Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшСсы.Ошибки=СтрТОвар; // ссылка на товар
					ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшСсы.Ошибки=ТекРегион; // ссылка на регион
					
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион),ФормироватьКомментарий);
				КонецЕсли;
				
				//------------------<Список невыполнившихся условий>-------------------GtG----23.11.2007
				Для каждого ЧПО из СписокНевыполнившихсяУсловий Цикл
					Если СокрЛП(ЧПО.Значение)="" ТОгда
						Продолжить;
					КонецЕсли; 
					Если ФормироватьКомментарий = Истина Тогда
						ВеткаЧПО=ВеткаТОварОшСсы.Строки.Добавить();
						ВеткаЧПО.Ошибки=ЧПО.Значение;
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки,Расшифровка",ЧПО.Значение,ТекРегион),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
				КонецЦикла;	
				
				
				
				ЕстьОшибкиПоГТТ=Истина;
				Продолжить;  // не расценилось
			КонецЕсли; 	
			
			
			
			
			
			//==================<а вот теперь можно начинать считать цену розничную>===================GtG====20.11.2007 
			// Должен сработать алгоритм расценки с наибольшим приоритетом
			// Поэтому с меньшим даже и смотреть не стоит
			
			
			
			//~ПостобработкаЦены:  // безусловный переход сюда, если есть алгоритмы с отрицательным приоритетом.
			// сюда прыгаем после расчета цены по основным алгоритмам с положительным приоритетом	
			Если ПостОбработкаЦены=Ложь Тогда
				ТЗПравил.Сортировать("Приоритет desc");
				// в ТЗ рпавил первыми пойдут условия с максимальным проядком формирования
				//  т.е. самые доделанные. остальные будут недоделанными огрызками и от них надо избавиться
			Иначе
				
				Если  ТЗПРавил.Количество()=0 ТОгда // Это значит, что при обработке отрицательных
					// алгоритмов ни один из них не сработал и товар считаем расцененным по положительному алгоритму
					//??? Продолжить;
				Иначе
					Цена_Розничная = Цена_Розничная/ДокЕитК;  //Вернем обратно маленькую цену, потому что по отриц. алгоритмам расчеты пойдут.  Virus
				КонецЕсли;	
				
								
				ТЗПРавил.Сортировать("Приоритет Asc");
				//Для постобработки розничной цены с помощью алгоритмов с отрицательным приоритетом
			КонецЕсли;
			
			
			
			ЕСЛИ ТЗПравил.Количество()>0 ТОГДА  // ЕСЛИ ИМЕЕТСЯ РАБОЧИЙ АЛГОРИТМ ДЛЯ РАСЧЕТОВ //
				
				РабочийАлгоритм=ТЗПравил.Получить(0); // первая строка сверху по таблице правил расчета
				
				
				Если ФормироватьКомментарий = Истина Тогда
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Алг",Новый Структура("Алг,Расшифровка",РабочийАлгоритм.АлгоритмСсылка,РабочийАлгоритм.АлгоритмСсылка),ФормироватьКомментарий);
				КонецЕсли;
				
				//==================<перед тем, как вычислять цены >===================GtG====22.11.2007
				// нужно проверить все ли условия на ноебходимые данные 
				// по выбранному алгоритму выполняются , НО это еще не гарантирует что он сработает
				
				// ..запросом собарть условия в тз
				// построить условия, вычислить их и получить бульрезультат по всем условиям 
				// через И если в итоге ПРАВДА тогда все ОК иначе алгоритм не сработает
				
				ТХТ="ВЫБРАТЬ
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Реквизит,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.ДолженБыть,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Чему,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Ссылка
				|ИЗ
				|	Справочник.АлгоритмыЦенообразованияРегионов.НеобходимыеРеквизиты КАК АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты
				|ГДЕ
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Ссылка = &ВыбАлгоритм";
				
				
				Запрос=Новый Запрос;
				Запрос.Текст=ТХТ;
				Запрос.УстановитьПараметр("ВыбАлгоритм",РабочийАлгоритм.АлгоритмСсылка);
				
				НеобхРекв=Запрос.Выполнить().Выгрузить();
				НеобхРекв.Колонки.Добавить("УсловиеВыполнилось");
				
				Для каждого СтрНРекв из НеобхРекв Цикл
					
					Если СтрНРекв.ДолженБыть = "СодЗнач" Тогда
						СтруктураРезультата.Комментарий = "Нельзя использовать тип сравнения СодЗнач в необходимых реквизитах алгоритма ценообразования!";
						СтруктураРезультата.ТЗКосяков=ТЗКосяков;
						Возврат СтруктураРезультата;
					КонецЕсли;	
					
					ТекстУсловия=""+СтрНРекв.Реквизит+" "+ СтрНРекв.ДолженБыть+" "+СтрНРекв.Чему;
					СтрНРекв.УсловиеВыполнилось=Вычислить(ТекстУсловия);
				КонецЦикла;	
				
				//------------------<Если какое-либо условие не выполнилось то нихрена не расчитается>-------------------GtG----22.11.2007
				ЕстьОшибкиПоУПА=Ложь;
				Для каждого СтрНРекв из НеобхРекв Цикл
					Если СтрНРекв.УсловиеВыполнилось=Ложь Тогда
						Если ФормироватьКомментарий = Истина Тогда
							ТекстОшибки=""+СтрНРекв.Реквизит+" "+ СтрНРекв.ДолженБыть+" "+СтрНРекв.Чему+" Условие не выполнилось!";
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
						КонецЕсли;
						
						ЕстьОшибкиПоУПА=Истина;
					КонецЕсли; 
				КонецЦикла;	
				Если  ЕстьОшибкиПоУПА=Истина Тогда
					//товар не расценился
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					Продолжить;
				КонецЕсли; 	
				//--------------------------------------------------------GtG----КОНЕЦ--22.11.2007
				
				
				Попытка 
					
					
					//------------------<МОМЕНТ с ценами из АП>--------------------------------GtG----28.11.2007
					// Расчет цены на 1 минимальную единицу
					// Цены если из основного ап считаем заданными на единицу по умолчанию (делим на еёйный К)
					// Если цена задана из АПГТТ то там должна быть ЕИТ на которую задана цена (делим на еёйный К), 
					//
					// Получившуюся Розн цену * на К по документу
					//
					// В РЕГИСТРЕ ЦЕН ХРАНИМ ЦЕНУ В РАСЧЕТЕ НА К=1 ! ДАЛЕЕ ВЕЗДЕ ЕЕ МНОЖИМ НА К ЕДИНИЦЫ
					//
					//------------------<--------------------->--------------------------------GtG----28.11.2007
					
					ФормулаДляРасчетаЦены= РабочийАлгоритм.ФормулаРасчетаЦены;
					ФормулаДляРасчетаПроцНац=РабочийАлгоритм.ФормулаРасчетаПроцентаНаценки;
					
					
					ФормулаДляРасчетаЦены=ПравильнаяФормулаРасчета(ФормулаДляРасчетаЦены);
					ФормулаДляРасчетаПроцНац=ПравильнаяФормулаРасчета(ФормулаДляРасчетаПроцНац);
					
					//------------------------------------------------------------GtG----28.11.2007
					
					Цена_Розничная=Вычислить(ФормулаДляРасчетаЦены); // на идеальную сферическую единицу в вакууме
					
					
					//--- Округляем в БОЛЬШУЮ сторону до 10 копеек
					
					Цена_Розничная=ОМ3_ОтброситьДо10Коп(Цена_Розничная);
					//--- потом при расчете границ наценки обкорнается в меньшую сторону
					Если ФормироватьКомментарий = Истина Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаДляРасчетаЦены,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
					КонецЕсли;
					
				Исключение
					
					
					//Начало добавил 19.11.2012  Васильченко
					Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
						//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
						
						
						
						Цена_Розничная=0;
						СтрТП=Тп.Добавить();
						СтрТП.ТОвар=СтрТОвар; //ссылка
						СтрТП.Партия=ДанныеТекПартии["Партия"];
						СтрТП.ЕИТ=Док.Еит;
						СтрТП.КоэффЕит=ДокЕитК;
						СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
						СтрТП.ЦенаГосРег=0;
						СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
						СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
						
						СтрТП.Топ100=Товар.Топ100;
						СтрТП.Топ1000=ТОвар.Топ1000;
						
						СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
						СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
						СтрТП.Регион  =ТекРегион;
						СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
						
						СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
						СтрТП.НН=НН;
						СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
						СтрТП.Остаток = Остаток;
						
						СтрТП.ИндЦена = ИндЦена;
						Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
							СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
							//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
							СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
						КонецЕсли;

						

					КонецЕсли;					
					//Конец добавил 19.11.2012  Васильченко
					
					Если ФормироватьКомментарий = Истина Тогда
						ТекстОшибки="Ошибка при расчете розничной цены:";
						ООШ=ОписаниеОшибки();
						
						
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);	
						
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаЦены),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
					ЕстьОшибкиПоГТТ=Истина;
					
					Продолжить;								
				КонецПопытки;
				
				Попытка 
					пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),4,РежимОкругления.Окр15как20); // В большую СТОРОНУ!  
					
					Если ФормироватьКомментарий = Истина Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
					КонецЕсли;
				Исключение
					
					Если ФормироватьКомментарий = Истина Тогда
						ТекстОшибки="Ошибка при расчете процента наценки:";
						ООШ=ОписаниеОшибки();
						
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаПроцНац),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
					
					ЕстьОшибкиПоГТТ = Истина;
					
					Продолжить;								
				КонецПопытки;
				
				МинПроцНаценки=Вычислить(РабочийАлгоритм.МинПроцНаценки);
				
				МаксПроцНаценки=Вычислить(РабочийАлгоритм.МаксПроцНаценки);
				
				//КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки));
				
				Если  ФормироватьКомментарий = Истина Тогда
					Если МинПроцНаценки=0  Тогда
						МинПроцНаценки=Константы.МинимальноДопустимаяНаценка.Получить();
						
						Ахтунг_Дангер=""+ТекРегион+"  "+ТОВар.Наименование+" Не удалось вычислить минимальный процент наценки по формуле "+РабочийАлгоритм.МинПроцНаценки+"
						| принимаем = "+МинПроцНаценки+" %";
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);		
						
					КонецЕсли; 	
					
					Если МаксПроцНаценки=0 Тогда
						МаксПроцНаценки=70;
						Ахтунг_Дангер=(""+ТекРегион+"  "+ТОВар.Наименование+" Не удалось вычислить максимальный процент наценки по формуле "+РабочийАлгоритм.МаксПроцНаценки+"
						| принимаем = "+МаксПроцНаценки+" %");
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);		
						
						
					КонецЕсли; 	
					
					// прокомментируем новые границы процента наценки
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки), ФормироватьКомментарий);
					
				КонецЕсли;
				
				//==================<зарубим лишнее / добавим если процент наценки вылез за границы максимально-минимального диапазона>===================GtG====20.11.2007
				
				Если  пРОЦЕНТ_Наценки>МаксПроцНаценки тогда
					//Зарубим
					Если ФормироватьКомментарий = Истина Тогда
						Ахтунг_Дангер=("Превышение максимального процента наценки! Уменьшаем наценку..."+пРОЦЕНТ_Наценки+">"+МаксПроцНаценки);
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);
					КонецЕсли;
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+МаксПроцНаценки) / (100+Окр(пРОЦЕНТ_Наценки,1)) )";// в меньшую сторону
					// чем больше бы лпроцент наценки тем меньше будет цена( про копейки)
					
					Попытка
						
						
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);// в меньшую сторону (актуально для ЖНВЛС)
						
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
						КонецЕсли;
						
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненной цены";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
							
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР),ФормироватьКомментарий);
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
						
					КонецПопытки;
					
					Попытка
						//----------------------------< пересчитаем процент наценки по скорректированной Розничной цене >--------------------------------GtG--- 
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),3,РежимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
						
						
						
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненного процента наценки";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
				ИначеЕсли пРОЦЕНТ_Наценки<МинПроцНаценки Тогда
					
					ЕстьКосякТопа=Ложь;
					
					Если ТОвар.Топ100=Ложь ТОгда
						ПодтягиватьКПроценту= "МинПроцНаценки"; // было  "МаксПроцНаценки";
					Иначе   // Если заниженный процент по ТОП 100 то это - косяк и товар надо возвращать или пересматривать цену на товар в АП
						ПодтягиватьКПроценту="МинПроцНаценки";
						
						//Косяк=ТЗКосяков.Добавить();
						//Косяк.Партия=Стр.Партия;
						//Косяк.ТОвар=Стр.Товар;
						//Косяк.Косяк="ТОП 100! Заниженный процент наценки! Слишком высокая закупка! Вернуть или пересмотреть цену в АП!";
						
						//ЕстьКосякТопа=Истина;
					КонецЕсли;
					
					
					//Подтянем
					Если ФормироватьКомментарий Тогда
						Ахтунг_Дангер=("Заниженный процент наценки! Рассчитываем по "+ПодтягиватьКПроценту+" ..."+пРОЦЕНТ_Наценки+"<"+МинПроцНаценки);
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);
					КонецЕсли;
					
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+"+ПодтягиватьКПроценту+") / (100+пРОЦЕНТ_Наценки) )";// в меньшую сторону  топ 100, в большую остальные 
					
					Попытка
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
						КонецЕсли;
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненной цены";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР),ФормироватьКомментарий);
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
					
					Попытка
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),6,режимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненного процента наценки";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					КонецПопытки;
					
					
					Если ЕстьКосякТопа=Истина ТОгда
						Косяк.ЦенаПоРасценке=Цена_Розничная*ДокЕитК;
					КонецЕсли; 
					
				КонецЕсли;
				
				ЦенаЕд=Цена_Розничная; // для комментатора

				//ПредыдущаяРознЦена=ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
				
				//СпособОкругления = Неопределено;
				//МетодОкругления = Неопределено;
				
				//Округление цены по новым правилам из справочника МатрицаОкругления
				Если ТекРегион.ИспользоватьМатрицуОкругления = Истина Тогда
					ПроцентОтклоненияВверх	= неопределено;
					ПроцентОтклоненияВниз	= неопределено;
					ЦенаДоКорректировки = Цена_Розничная;
					Для каждого строкаМО из ТЗМатрицаОкруглений Цикл
						Если (Цена_Розничная >= строкаМО.Цена1 и Цена_Розничная <=строкаМО.Цена2 ) и ТОвар.ЖНВЛС = строкаМо.ИспользоватьДляЖВ Тогда
							Цена_Розничная = Округлить(Цена_Розничная,строкаМО.СпособОкругления,строкаМО.МетодОкругления);
							Если ФормироватьКомментарий Тогда
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Округление",Новый Структура("СпособОкругления,ЦенаДоОкругления,ЦенаПослеОкругления",строкаМО.СпособОкругления,ЦенаДоКорректировки,Цена_Розничная),ФормироватьКомментарий);
							КонецЕсли;
							//СпособОкругления = строкаМО.СпособОкругления;
							//МетодОкругления = строкаМО.МетодОкругления;	
							ПроцентОтклоненияВверх	= строкаМО.ПроцентОтклоненияВверх;
							ПроцентОтклоненияВниз	= строкаМО.ПроцентОтклоненияВниз;
							Прервать;	
						КонецЕсли;
					КонецЦикла;				
				КонецЕсли;
				
				//==================<Реальная несферическая единица не в вакууме>===================GtG====28.11.2007
				Цена_Розничная=Цена_Розничная*ДокЕитК;

				
				Если  ТекРегион.ИспользоватьПредыдущуюРозничнуюЦенуПриРасценке=Истина и ИндЦена = 0 и НЕ (ТекРегион.НеКорректироватьФиксЦены = Истина и Товар.ФиксированнаяЦена > 0) Тогда
					//------------------<Подгоняем новую розничную под старую>-------------------GtG----27.11.2008
					// Считаем процент наценки по алг расчета процента исходя из старой цены Nold
					// Считаем процент наценки по алг расчета процента исходя из новой цены  Nnew
					// если Nold-Nnew >10% тогда  берем цену по расценке (как более правильную)
					//  <10% берем старую цену , ибо нормально
					Если ДанныеТекПартии.СрокГодности > ТекущаяДата() + 24*60*60*95 или ДанныеТекПартии.СрокГодности = Дата(1,1,1) Тогда
						Если 	ТОвар.ЖНВЛС=Ложь 		и 
							Товар.Топ100=Ложь 		и Остаток > 0  и 
							ОМ6_ЕстьСпецЦена(Товар.Ссылка, Склад, ДатаДок, ДанныеТекПартии)=ложь и    //????? Virus
							ПредыдущаяРознЦена>0  и Цена_Розничная > 0  
							Тогда					                
							ЦенаДоКорректировки = Цена_Розничная;
							Если Цена_Розничная > ПредыдущаяРознЦена Тогда
								Если ((Цена_Розничная/ПредыдущаяРознЦена)-1)*100 < ПроцентОтклоненияВверх Тогда 
									Цена_Розничная = ПредыдущаяРознЦена;
								КонецЕсли;
							ИначеЕсли Цена_Розничная < ПредыдущаяРознЦена Тогда
								Если ((ПредыдущаяРознЦена/Цена_Розничная)-1)*100 < ПроцентОтклоненияВниз Тогда 
									Цена_Розничная = ПредыдущаяРознЦена;
								КонецЕсли;
							Иначе
							КонецЕсли;
							Если ФормироватьКомментарий Тогда
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"КорректировкаЦены",Новый Структура("ПредыдущаяЦена,ЦенаДоКорректировки,ЦенаПослеКорректировки",ПредыдущаяРознЦена,ЦенаДоКорректировки,Цена_Розничная),ФормироватьКомментарий);
							КонецЕсли;
						КонецЕсли;	
					КонецЕсли;
					Если ФормироватьКомментарий Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Рез",Новый Структура("ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки",ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
					КонецЕсли;
					
				КонецЕсли; // регион использует расценку с подтягиванием предыдущей розничной цены
				
				
				
				//------------------<еще проверочку на превыешние закупочной цены розничной рассчитанной чтобы в минус не ушло>-------------------GtG----21.11.2007
				Если Цена_Розничная < Док.ЦенаЗакуп Тогда
					ОтборМинус = Новый Структура();
					ОтборМинус.Вставить("Товар",стрТовар);
					ОтборМинус.Вставить("Партия",стр.Партия);
					НайденныеСтрокиМинусов =  ТЗВМинус.НайтиСтроки(ОтборМинус);
					Если НайденныеСтрокиМинусов.Количество() > 0 Тогда
						СтрокаМинуса = НайденныеСтрокиМинусов.Получить(0);
						СтрокаМинуса.ЦенаЗакуп = Док.ЦенаЗакуп;
						СтрокаМинуса.ЦенаРозн = Цена_Розничная;
						СтрокаМинуса.Количество = стр.КоличествоФакт;
						СтрокаМинуса.Дата = ДатаДок;
					Иначе
						НовыйМинус = ТЗВМинус.Добавить();
						НовыйМинус.Товар = стрТовар;
						НовыйМинус.Партия = стр.Партия;
						НовыйМинус.ЦенаЗакуп = Док.ЦенаЗакуп;
						НовыйМинус.ЦенаРозн = Цена_Розничная;
						НовыйМинус.Количество = стр.КоличествоФакт;
						НовыйМинус.Дата = ДатаДок;
					КонецЕсли;
				КонецЕсли;
				
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					Если Цена_Розничная<=Док.ЦенаЗакуп  Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар=СтрТОвар;
							СтрТП.Партия=ДанныеТекПартии["Партия"];
							СтрТП.ЕИТ=Док.Еит;
							СтрТП.КоэффЕит=ДокЕитК;
							СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
							СтрТП.ЦенаГосРег=0;
							СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
							
							СтрТП.Топ100=Товар.Топ100;
							СтрТП.Топ1000=ТОвар.Топ1000;
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток 	= Остаток;
							СтрТП.ИндЦена	= ИндЦена;
							Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
								СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
								//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
								СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
							КонецЕсли;
							

						КонецЕсли; 
						
						
						
						Если ФормироватьКомментарий Тогда
							
							ТекстОшибки="Розничная цена оказалась меньше закупочной!    ("+Товар.Код+")  "+Товар.Наименование+"    Не РАСЦЕНЕН!";
							
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ЕстьОшибкиПоГТТ=Истина;
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КонецЕсли;
						
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;

						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия=Стр.Партия;
						Косяк.ТОвар=Стр.Товар;
						Косяк.Косяк="Розничная цена оказалась меньше закупочной! НЕ РАСЦЕНЕН!";
						Косяк.ЦенаПоРасценке=Цена_Розничная;
						
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					//==================<Не ТОПОВЫЕ позиции наценка от закупки с ндс НЕ МЕНЕЕ 10% полюбому>===================GtG====21.01.2008
					Если (ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"],Цена_Розничная)<МинимальныйПроцентНаценкиКромеТопов)
						И (Товар.Топ100=Ложь и ТОвар.Топ1000=Ложь)
						Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар=СтрТОвар;
							СтрТП.Партия=Док.Партия;
							СтрТП.ЕИТ=Док.Еит;
							СтрТП.КоэффЕит=ДокЕитК;
							СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
							СтрТП.ЦенаГосРег=0;
							СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
							
							СтрТП.Топ100=Товар.Топ100;
							СтрТП.Топ1000=ТОвар.Топ1000;
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток = Остаток;
							СтрТП.ИндЦена	= ИндЦена;
							
							Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
								СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
								//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
								СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
							КонецЕсли;


						КонецЕсли; 
						
						Если ФормироватьКомментарий  Тогда
							ТекстОшибки="НЕ ТОПОВЫЙ товар, наценка от закупки с НДС меньше "+МинимальныйПроцентНаценкиКромеТопов+"% ("+Товар.Код+")  "+Товар+"    Не РАСЦЕНЕН!";
							
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КонецЕсли;
						
						ЕстьОшибкиПоГТТ=Истина;

						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
						Продолжить;
					КонецЕсли;
					//================================================GtG====КОНЕЦ==21.01.2008
				КонецЕсли;
				
				
				//----------------------------< комментарий окончательного результата по товару >--------------------------------GtG--- 
				//КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Рез",Новый Структура("ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки",ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки));
				
				//==================<Проверяем отклонение новой розничной цены от старой, не более чем в 2 раза>===================GtG====28.11.2008
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					Если ПредыдущаяРознЦена>0 Тогда
						КонтрольноеОтклонение=ПредыдущаяРознЦена/(Цена_Розничная);
						
						Если КонтрольноеОтклонение<=0.5 или КонтрольноеОтклонение>=2 тогда
							// это косяк. цена отличается более чем в 2 раза от предыдущей
							Если ФормироватьКомментарий Тогда
								ТекстОшибки="Розничная цена отличается более чем в 2 раза от предыдущей розничной!";
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КонецЕсли;
							
							Косяк=ТЗКосяков.Добавить();
							Косяк.Партия=Стр.Партия;
							Косяк.ТОвар=Стр.Товар;
							Косяк.Косяк="Розничная цена отличается более чем в 2 раза от предыдущей розничной!";
							// попадет в тч ошибок расценки и документ не проведется
							
						КонецЕсли;
					КонецЕсли; 
				КонецЕсли;
				//================================================GtG====КОНЕЦ==28.11.2008
				
				
			КОНЕЦЕСЛИ;  // ЕСЛИ ИМЕЕТСЯ РАБОЧИЙ АЛГОРИТМ ДЛЯ РАСЧЕТОВ //
			
			
			
			///// ==========ЕСЛИ в регионе есть алгоритмы с отрицательным приоритетом, то прогоним еще раз по ним
			
			ИсходнаяТЗПравил.Сортировать("Приоритет Asc, ПорядокФормированияУсловия asc");

			Если ИсходнаяТЗПравил.Получить(0).Приоритет < 0 и 
				 	ПостОбработкаЦены=Ложь 
					//и 
				 	//ОМ6_ЕстьСпецЦена(Товар.Ссылка,Склад,ДатаДок)=истина   
					тогда
					ТЗПРавил=ИсходнаяТЗПРавил.Скопировать();
					ПостОбработкаЦены=Истина;
					Перейти ~ПостобработкаЦены; // 1 дополнительный проход по товару
				
			КонецЕсли;
			
			
			//==================<Выводим строку расцененного товара >===================GtG====20.11.2007
			СтрТП=Тп.Добавить();
			СтрТП.НН=НН;
			СтрТП.ТОвар=СтрТОвар;
			СтрТП.Партия=ДанныеТекПартии["Партия"];
			СтрТП.ЕИТ=Док.Еит;
			СтрТП.КоэффЕит=ДокЕитК;
			СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
			СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;
			СтрТП.Остаток = Остаток;
			СтрТП.Регион=ТекРегион;
			
			
			Если Авторасценка = Ложь Тогда
				СтрТП.ЦенаПРБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
				СтрТП.ЦенаГосРег=0;
				СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
				СтрТП.Топ100=Товар.Топ100;
				СтрТП.Топ1000=ТОвар.Топ1000;
				СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
				СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
				СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
				СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
				СтрТП.ИндЦена = ИндЦена;
				Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
					СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
					//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
					СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
				КонецЕсли;
			КонецЕсли;
			
			Если Док.ЦенаГосРегистрации > 0 и Товар.ЖНВЛС = Ложь Тогда   // 08.09.2014 Васильченко по ТЗ Токмаковой
				Косяк=ТЗКосяков.Добавить();
				Косяк.Партия=Стр.Партия;
				Косяк.ТОвар=Стр.Товар;
				Косяк.Косяк="Позиция имеет цену ГР, но не имеет признака ЖНВЛС в базе";
			КонецЕсли;
			
		КонецЦикла;	// по строкам документа
		
		#Если Клиент Тогда
			Состояние("расчет " + НН + " из " + КоличествоСтрок);
		#КонецЕсли
		
		
		Если ЕстьОшибкиПоГТТ=Ложь и ФормироватьКомментарий = Истина тогда
			ВеткаТОварОш=ВеткаРегион.Строки.Добавить();
			ВеткаТОварОш.Ошибки="ОК. Ошибок нет";
		КонецЕсли;
		
		
		Если Цена_Розничная=0 ТОгда
			Косяк=ТЗКосяков.Добавить();
			Косяк.Партия=Стр.Партия;
			Косяк.ТОвар=Стр.Товар;
			Косяк.Косяк="Товар не расценился.";
		КонецЕсли;	
		
		
		
		
	КонецЦикла; // по Регионам
	
	//ЭлементыФормы .ДеревоОшибок.Значение=ДО;
	//ЭлементыФормы.ДеревоОшибок.СоздатьКолонки();
	Если ФормироватьКомментарий Тогда
		Таб.ЗакончитьГруппуСтрок();
	КонецЕсли;
	СтруктураРезультата.ТаблицаКомментариев = Таб;
	СтруктураРезультата.ТП = ТП;
    СтруктураРезультата.ДеревоОшибок = ДО;
	СтруктураРезультата.ТЗКосяков=ТЗКосяков;

	Если ЕстьОшибки или ЕстьОшибкиПоГТТ или ЕстьОшибкиПоУПА или ТЗКосяков.Количество() > 0 Тогда
		СтруктураРезультата.Результат = Ложь;
	Иначе
		СтруктураРезультата.Результат = Истина;
	КонецЕсли;
	
	
	Если ТЗВМинус.Количество() > 0 Тогда
		ТЗВМинус.Свернуть("Товар,Партия,ЦенаЗакуп,ЦенаРозн,Дата","Количество");
		НаборЗаписей = РегистрыСведений.ЛогРасценки.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.Регистратор.Установить(Документ); 
		НаборЗаписей.Загрузить(ТЗВМинус); 
		Попытка
			НаборЗаписей.Записать(); 
		Исключение
			#Если Клиент Тогда
				Сообщить(""+ОписаниеОшибки());
			#КонецЕсли
		КонецПопытки;
	КонецЕсли;
	
		
	Возврат СтруктураРезультата;
	
	//Таб.ТолькоПросмотр=Истина;
	//Таб.ПоказатьУровеньГруппировокСтрок(Таб.КоличествоУровнейГруппировокСтрок()-1);
	//Таб.Показать(); // вывод на экран
	
	//ЭлементыФормы.Индикатор.Видимость=Ложь;
	//
	//ЭлементыФормы.ХодРасценкиРегион.Видимость=Ложь;
	//	
	//ЭлементыФормы.ТП.ФиксацияСлева=3;
	//ЭлементыФормы.ТП.Колонки.Топ100.Формат="БЛ=' '; БИ=V";
	//ЭлементыФормы.ТП.Колонки.Топ1000.Формат="БЛ=' '; БИ=V";
	//
	//
	//
	//КонецРасценки=ТекущаяДата();
	//
	//ВремяВыполнения=КонецРасценки-НачалоРасценки;
	//
	//ВВМин=Цел(ВремяВыполнения/60);
	//ВВСек=ВремяВыполнения%60;
	//
	//
	//
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Готово! "+Формат(ВВМин,"ЧЦ=2; ЧН=00; ЧВН=")+":"+Формат(ВВсек,"ЧЦ=2; ЧН=00; ЧВН=");
	
	
	
	
КонецФункции


Функция Расценить2(ПараметрыРасценки = Неопределено) Экспорт
	
	Перем СокрСтр;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("Результат",Ложь);
	СтруктураРезультата.Вставить("Комментарий","");
    СтруктураРезультата.Вставить("КоличествоОшибокРасценки",0);

	Если ПараметрыРасценки = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	Авторасценка				= ПараметрыРасценки.Авторасценка ;
	Склад						= ПараметрыРасценки.Склад;
	Документ					= ПараметрыРасценки.Документ ;
	ТипДокумента				= ПараметрыРасценки.ТипДокумента ;
	ВидДокумента				= ПараметрыРасценки.ВидДокумента ;
	ФормироватьКомментарий		= ПараметрыРасценки.Комментировать;
	ВыводитьНеРасцененные		= ПараметрыРасценки.ВыводитьНеРасцененные;
	Регион						= ПараметрыРасценки.Регион;
	СубъектРФ					= Склад.СубъектРФ;
	МинимальныйПроцентНаценкиКромеТопов = ПараметрыРасценки.МинимальныйПроцентНаценкиКромеТопов;
	ЗаписыватьЦеныВРегистрЦен	= ПараметрыРасценки.ЗаписыватьЦеныВРегистрЦен;
	УстановитьрозничныеЦеныВДокументе = ПараметрыРасценки.УстановитьрозничныеЦеныВДокументе;
	ИспользоватьЦеныКонкурентов = ПараметрыРасценки.ИспользоватьЦеныКонкурентов;
	ПроверятьЗакупкуИРозницу	= ПараметрыРасценки.ПроверятьЗакупкуИРозницу;
	
	//Если ПараметрыРасценки.Свойство("РазрешитьРозничнуюЦенуНижеЗакупочной") = Ложь Тогда
	//	РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь;
	//Иначе
	//	РазрешитьРозничнуюЦенуНижеЗакупочной=ПараметрыРасценки.РазрешитьРозничнуюЦенуНижеЗакупочной;
	//КонецЕсли;
	РазрешитьРозничнуюЦенуНижеЗакупочной = Константы.РазрешатьРасценкуВМинус.Получить();
	
	Если ПараметрыРасценки.Свойство("СвойПоставщик") = Ложь Тогда
		СвойПоставщик = Ложь;
	Иначе
		СвойПоставщик = ПараметрыРасценки.СвойПоставщик;
	КонецЕсли;
	
	Если ПараметрыРасценки.Свойство("ИгнорироватьПревышенияЗакупочнойЦены") = Истина Тогда
		ИгнорироватьПревышенияЗакупочнойЦены = ПараметрыРасценки.ИгнорироватьПревышенияЗакупочнойЦены;
	Иначе
		ИгнорироватьПревышенияЗакупочнойЦены = Ложь;
	КонецЕсли;

	
	НачалоРасценки=ТекущаяДата();
	
	
	СтруктураРезультата.КоличествоОшибокРАсценки=0;
	
	Макет=ПолучитьОбщийМакет("РасценкаКомментарий");
	
	Таб	= СоздатьТабличныйДокумент(Макет);
	ТП	= СоздатьТаблицуРезультата(Авторасценка);
	ДО	= СоздатьДеревоОшибок();
	
	Корень=ДО.Строки.Добавить();
	Корень.Ошибки="Расценка документа ";
	
	ТЧТовар= Документ.Товар.Выгрузить(); //ЭтаФорма.ВладелецФормы.Товар;
	
	ТЗКосяков = Новый ТаблицаЗначений;
	ТЗКосяков.Колонки.Добавить("Партия");
	ТЗКосяков.Колонки.Добавить("Товар");
	ТЗКосяков.Колонки.Добавить("Косяк");
	ТЗКосяков.Колонки.Добавить("ЦенаПоРасценке");
	
	
	ТЗВМинус = Новый ТаблицаЗначений;
	ТЗВМинус.Колонки.Добавить("Партия");
	ТЗВМинус.Колонки.Добавить("Товар");
	ТЗВМинус.Колонки.Добавить("ЦенаЗакуп");
	ТЗВМинус.Колонки.Добавить("ЦенаРозн");
	ТЗВМинус.Колонки.Добавить("Дата");
	ТЗВМинус.Колонки.Добавить("Количество");



	//ТЗКосяков=КонтрольПоЗакупке_Старый(ТЧТовар,Регион,Документ,ТипДокумента,ВидДокумента);
	Если НЕ ИгнорироватьПревышенияЗакупочнойЦены Тогда
		ПроверитьПревышениеЗакупочнойЦены(ТЧТовар,Регион,СубъектРФ,Документ,ТипДокумента,ВидДокумента,ТЗКосяков,СвойПоставщик);
	КонецЕсли;

	
	СтруктураРезультата.Вставить("ДеревоОшибок",ДО);
	СтруктураРезультата.Вставить("ТаблицаКомментариев",Таб);
	СтруктураРезультата.Вставить("ТП",ТП);
	СтруктураРезультата.Вставить("ТЗКосяков",ТЗКосяков);

	Если Регион.Пустая() = Истина Тогда
		Косяк=ТЗКосяков.Добавить();
		Косяк.Партия="";
		Косяк.ТОвар="";
		Косяк.Косяк="Для аптеки не задан регион ценообразования";
		СтруктураРезультата.Результат = Ложь;
		СтруктураРезультата.ТЗКосяков = ТЗКосяков;
		Возврат СтруктураРезультата;
	КонецЕсли;
	
	
	ТЗМатрицаОкруглений = ПолучитьМатрицуОкруглений();
	ТЗПредельныхНаценок = ПолучитьтаблицуПредельныхНаценок(СубъектРФ);	
	
	ДатаДок=Документ.Дата;
	ИмяДок = Документ.МЕТАДАННЫЕ().Имя;
	Если ИмяДок = "ПоступлениеТовара" Тогда
		ДатаВхДок = Документ.ВхДатаНакл;
		Если ДатаВхДок = Дата(1,1,1) Тогда
			ДатаВхДок = ДатаДок;
		КонецЕсли;
	Иначе
		ДатаВхДок = ДатаДок;
	КонецЕсли;
	
	
	
	ДатаВыходаНаПМ=КонецМесяца(КонецМесяца(СКЛАД.ДатаПерехода)+1);// среднестатистический срок выхода на проектную мощность  через месяц после конца месяца открытия аптеки
	
	
	Попытка
		Курс=ПолучитьКурсВалюты(Документ.Валюта, ДатаДок);
	ИСключение
		Курс=1;  // в документе нет реквизита валюта
	КонецПопытки;
	

	
	СтрокаНулевыхЦен=ТЧТовар.Найти(0,"ЦенаЗакуп");
	Если СтрокаНулевыхЦен<> Неопределено Тогда
		Косяк=ТЗКосяков.Добавить();
		Косяк.Партия="";
		Косяк.ТОвар="";
		Косяк.Косяк="В документе есть строки с нулевой закупочной ценой!";
		#Если Клиент Тогда
			Сообщить("В документе есть строки с нулевой закупочной ценой! РАСЦЕНИТЬ НЕВОЗМОЖНО! ДОКУМЕНТ НЕ ГОТОВ!");
		#КонецЕсли
		
		
		Если НЕ Документ.Метаданные().ТабличныеЧасти.Найти("ОшибкиРасценки") = Неопределено  Тогда
			ДокументОбъект = Документ.ПолучитьОбъект();
			ОП=ДокументОбъект.ОшибкиРасценки;
			
			Если Константы.БеспределСЖНВЛС.Получить() = Истина Тогда
				ПустаяПартия = Справочники.Партии.ПустаяСсылка();
				
				СписокУдаляемыхСтрок=новый СписокЗначений;
				
				Для каждого стр из ОП Цикл
					Если стр.Партия = ПустаяПартия Тогда
						продолжить;
					КонецЕсли;
					СписокУдаляемыхСтрок.Добавить(стр);
				КонецЦикла;
				Для Каждого ССУС из СписокУдаляемыхСтрок цикл
					ОП.Удалить(ССУС.Значение);
				КонецЦикла;	
				
				
			Иначе
				ОП.Очистить();// при каждой расценке перезаполняется. в идеале - пустая.
			КонецЕсли;
			
			ТЗКосяков.Свернуть("Партия,Товар,Косяк,ЦенаПоРасценке","");
			
			
			Для каждого Стр из ТЗКосяков Цикл
				СтрОп=ОП.Добавить();
				СтрОП.Товар 	= Стр.Товар;
				СтрОП.Партия 	= Стр.Партия;
				СтрОП.ОписаниеОшибки= Стр.Косяк;
				СтрОП.ЦенаПоРасценке= Стр.ЦенаПоРасценке;
			КонецЦикла;
			
		КонецЕсли;	
		
		Попытка
			ДокументОбъект.Состояние=Справочники.СостояниеДокумента.НайтиПоНаименованию("не готов");
		Исключение
		КонецПопытки;
		
        ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
        СтруктураРезультата.ТЗКосяков=ТЗКосяков;

		Возврат СтруктураРезультата; // произойдет ошибка расценки. Не расцениваем недоделанный документ
	КонецЕсли; 
	
	Если АвтоРасценка = Ложь и ИспользоватьЦеныКонкурентов = Истина и ПроверятьЗакупкуИРозницу = Истина Тогда
		ТЗЦенКонкурентов = ПолучитьТаблицуЦенКонкурентов(Документ);
	КонецЕсли;
	
	Если ИспользоватьЦеныКонкурентов = Истина Тогда
		ТЗМинимальныхЦенКонкурентов = ПолучитьМинимальныеЦеныКонкурентов(Документ);	
	КонецЕсли;
	
	//ЕстьИндЦены = Ложь;
	//Если Документ.ИндивидуальныеЦены.Количество() > 0 Тогда
	//	ЕстьИндЦены = Истина;
	//КонецЕсли;
	
	СписокСтрокДокумента=ТЧТовар.ВыгрузитьКолонку("ТОвар");
	
	
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Поиск старых розничных цен...";
	Если ПроверятьЗакупкуИРозницу = Истина Тогда
		ТаблицаСтарыхРознЦен=ПолучитьТаблицуСтарыхРозничныхЦен(ДатаДок,Склад,Регион,СписокСтрокДокумента,Документ);
	КонецЕсли;
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Старые розн. цены получены.";
	
	
	ЕстьОшибки=Ложь;
	
		
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПеремещениеТОвара") Тогда
		ТЧТовар.Колонки.Добавить("ЦенаГосРегистрации");
		ТЧТовар.Колонки.Добавить("ЦенаПроизводителя");
		ТЧТовар.Колонки.Добавить("ЦенаЗакупБезНДС");
		ТЧТовар.ЗаполнитьЗначения(0,"ЦенаГосРегистрации");
		
		Для каждого СтрТЧТовар из ТЧТовар Цикл
			СтрТЧТовар.ЦенаЗакупБезНДС= СтрТЧТовар.ЦенаЗакуп - ОМ3_НДСИзСуммыПоСтавке (СтрТЧТовар.ЦенаЗакуп,СтрТЧТовар.СтавкаНДС);
			СтрТЧТовар.ЦенаПроизводителя=СтрТЧТовар.Партия.ЦенаПроизводителяБезНДС;
			СтрТЧТовар.ЦенаГосРегистрации = СтрТЧТовар.Партия.ЦенаГосРегистрации;
		КонецЦикла;	
	КонецЕсли;
	
	ТЧ = ТЧТовар.Скопировать(,"Товар,Партия,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС"); //ЭВФ.Товар.Выгрузить();

	ТЧ.Свернуть("Товар,Партия,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС","");
	
	СписокРегионов = Новый СписокЗначений;
	СписокРегионов.Добавить(Регион);
	
	Для каждого СтрРег из СписокРегионов цикл // ПО РЕГИОНАМ
		
		
				
		ТекРегион=СтрРег.Значение;
		
		
		Если ТекРегион.ПометкаУдаления=Истина ТОгда
			ПРодолжить; // Удаленные регионы НЕ обрабатываем!
		КонецЕсли; 
		
		
		ВеткаРегион=Корень.Строки.Добавить();
		ВеткаРегион.Ошибки="по Региону   "+ТекРегион;
		
		
		КомментаторРасчета  (Неопределено,Таб,Макет,"Регион",Новый Структура("Регион",ТекРегион),ФормироватьКомментарий);
		
		
		
		//------------------<Получим алогоритмы ценообразования из справочников>-------------------GtG----16.11.2007
		//Регион
		//	Алгоритмы ценообразования
		//		УСЛОВИЯ ПРИМЕНЕНИЯ АЛГОРИТМОВ
		// Выборку строим начиная с конца (УПА)
		ТХТ="ВЫБРАТЬ
		    |	УсловияАлгоритма.ЛеваяЧасть,
		    |	УсловияАлгоритма.ТипУсловия,
		    |	УсловияАлгоритма.ПраваяЧасть,
		    |	УсловияАлгоритма.ОбъединятьСоСледующим,
		    |	УсловияАлгоритма.ПорядокФормированияУсловия КАК ПорядокФормированияУсловия,
		    |	УсловияАлгоритма.Ссылка.Приоритет КАК Приоритет,
		    |	УсловияАлгоритма.Ссылка.ДатаС,
		    |	УсловияАлгоритма.Ссылка.ДатаПо,
		    |	УсловияАлгоритма.Ссылка.МинПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.МаксПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаЦены,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаПроцентаНаценки,
		    |	УсловияАлгоритма.Ссылка.Ссылка КАК АлгоритмСсылка,
		    |	УсловияАлгоритма.ОткрывающаяСкобка КАК ОСК,
		    |	УсловияАлгоритма.ЗакрывающаяСкобка КАК ЗСК,
			|	УсловияАлгоритма.ПраваяЧастьХЗ
		    |ИЗ
		    |	Справочник.АлгоритмыЦенообразованияРегионов.УсловияПрименения КАК УсловияАлгоритма
		    |ГДЕ
		    |	УсловияАлгоритма.Ссылка.Владелец = &Регион
		    |	И &ДатаДок МЕЖДУ УсловияАлгоритма.Ссылка.ДатаС И УсловияАлгоритма.Ссылка.ДатаПо
		    |	И УсловияАлгоритма.Ссылка.ДляВсехАптек = ИСТИНА
		    |
		    |ОБЪЕДИНИТЬ ВСЕ
		    |
		    |ВЫБРАТЬ
		    |	УсловияАлгоритма.ЛеваяЧасть,
		    |	УсловияАлгоритма.ТипУсловия,
		    |	УсловияАлгоритма.ПраваяЧасть,
		    |	УсловияАлгоритма.ОбъединятьСоСледующим,
		    |	УсловияАлгоритма.ПорядокФормированияУсловия,
		    |	УсловияАлгоритма.Ссылка.Приоритет,
		    |	УсловияАлгоритма.Ссылка.ДатаС,
		    |	УсловияАлгоритма.Ссылка.ДатаПо,
		    |	УсловияАлгоритма.Ссылка.МинПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.МаксПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаЦены,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаПроцентаНаценки,
		    |	УсловияАлгоритма.Ссылка.Ссылка,
		    |	УсловияАлгоритма.ОткрывающаяСкобка,
		    |	УсловияАлгоритма.ЗакрывающаяСкобка,
			|	УсловияАлгоритма.ПраваяЧастьХЗ
		    |ИЗ
		    |	Справочник.АлгоритмыЦенообразованияРегионов.УсловияПрименения КАК УсловияАлгоритма
		    |ГДЕ
		    |	УсловияАлгоритма.Ссылка В
		    |			(ВЫБРАТЬ
		    |				ПодключенныеАптеки.Ссылка
		    |			ИЗ
		    |				Справочник.АлгоритмыЦенообразованияРегионов.ПодключенныеАптеки КАК ПодключенныеАптеки
		    |			ГДЕ
		    |				ПодключенныеАптеки.Ссылка.Владелец = &Регион
		    |				И ПодключенныеАптеки.Склад = &Склад
		    |				И &ДатаДок МЕЖДУ ПодключенныеАптеки.Ссылка.ДатаС И ПодключенныеАптеки.Ссылка.ДатаПо
		    |				И ПодключенныеАптеки.Ссылка.ДляВсехАптек = ЛОЖЬ)
		    |
		    |УПОРЯДОЧИТЬ ПО
		    |	Приоритет Убыв,
		    |	ПорядокФормированияУсловия";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Склад",Склад);
		Запрос.УстановитьПараметр("Регион",ТекРегион); 
		Запрос.УстановитьПараметр("ДАТАДок",ДатаДок);
		
		ИсходнаяТЗПравил=Запрос.Выполнить().Выгрузить(); // сырые данные
		ИсходнаяТЗПравил.Колонки.Добавить("УсловиеВыполнилось");
		ИсходнаяТЗПРавил.Колонки.Добавить("ВырИтУсл");  // выаржение для вычисления иотгового результата условия примеенния
		
		
		
		Если ИсходнаяТЗПРавил.Количество()=0 ТОгда
			ТекстОшибки=("   По региону  "+ТекРегион+" не задано ни одного алгоритма ценообразования! НЕ РАСЦЕНЕНО! (Задается через справочник регионов.)");
			
			ОшибкаРЕгион=ВеткаРегион.Строки.Добавить();
			ОшибкаРегион.Ошибки=ТекстОшибки;
			СсылкаРегион=ОшибкаРЕгион.Строки.Добавить();
			СсылкаРегион.ошибки=ТекРегион;
			
			КомментаторРасчета  (Неопределено,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион),ФормироватьКомментарий);
			
			СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
			
			Продолжить; // по группам ТТ
		КонецЕсли; 	
		
		ТЗХ=ИсходнаяТЗПРавил.Скопировать(,"Приоритет,АлгоритмСсылка,МинПроцНаценки,МаксПроцНаценки,ФормулаРасчетаЦены,ФормулаРасчетаПроцентаНаценки");
		ТЗХ.Свернуть("Приоритет,АлгоритмСсылка,МинПроцНаценки,МаксПроцНаценки,ФормулаРасчетаЦены,ФормулаРасчетаПроцентаНаценки"); //,ПорядокФормированияУсловия");
		КоличествоАлгоритмов=ТЗХ.Количество();
		
		
		
		//------------------<Собираем из кусочков сложные условия>-------------------GtG----16.11.2007
		ВеткаТовары=ВеткаРегион.Строки.Добавить();
		ВеткаТовары.Ошибки=" Ошибки при расценке товара по региону  ";
		ЕстьОшибкиПоГТТ=Ложь;
		
		
		КоличествоСтрок = ТЧТовар.Количество();
		
		НН=0;
		
		
		ИсходнаяТЗПРавил.Сортировать("ПРиоритет Убыв,ПорядокФормированияУсловия");
		
				
		                                                                    
		ДанныеПоТоварамДокумента = ПолучитьДанныеПоТОварамДокумента(Документ,СубъектРФ,ДатаДок); //04-03-2013// ТОВАРЫ ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		ДанныеПоПартиямДокумента = ПолучитьДанныеПоПартиямДокумента(Документ);  //04-03-2013// Партии ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Расчет цен по строкам документа...";
		Для каждого Стр из ТЧТовар Цикл // по строкам документа
			
			ПостОбработкаЦены=Ложь;
			
			ДанныеТекПартии=ДанныеПоПартиямДокумента.Найти(Стр.Партия,"Партия");// строка тз
			
			
			НН=НН+1;
			
			//ТОвар=Стр.Товар.ПолучитьОбъект();
			
			//---------------<ускорение ускорения расценки>---------------------------// GtG // 04.03.2013 16:43:19 
			 // данные по всем товарам в одну тз
			//------------------<Ускорение расценки>-------------------GtG----27.11.2008 
			// чтобы избежать многочисленных обращений к базе Товар - делаем как ТЗ из 1-й строки
			// с колонками соответствующими всем реквизитам товара.
			// при вычислении условий типа товар.ххх = уууу это даст ускорение вычисления
			//-------------- ЗАПРОС GTG --------------------------НАЧАЛО
			//Назначение: все реквизиты товара
			//
			//ТХТ="ВЫБРАТЬ
			//	|	АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка,
			//	|	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценки,.... и т.д.  
						
			
			ТОВАР= ДанныеПоТоварамДокумента.найти(Стр.Товар,"ССЫЛКА"); // строка ТЗ
			
			МинЦенаКонкурента = 0;
			Если ИспользоватьЦеныКонкурентов = Истина Тогда
				НайденнаяЦена = ТЗМинимальныхЦенКонкурентов.Найти(Товар.Код,"КодТовара");
				Если НЕ НайденнаяЦена = Неопределено Тогда
					МинЦенаКонкурента = НайденнаяЦена.Цена;	
				КонецЕсли;
			КонецЕсли;

			ИндЦена = ТОВАР.ИндЦена;
			
			//-------------- ЗАПРОС GTG --------------------------КОНЕЦ
			
		    //--------------------------------------------------------GtG----КОНЕЦ--27.11.2008
			
			
			СтрТОвар=Товар.Ссылка;
			СтрТОварКод=Товар.Код;
			
			Если ФормироватьКомментарий Тогда
				КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Товар",Новый Структура("ТОВар,Расшифровка,ТОВарКод",СтрТОвар,СтрТОвар,СтрТОварКод),ФормироватьКомментарий);
			КонецЕсли;
			
			#Если Клиент Тогда
				Если АвтоРасценка=Ложь ТОгда
					
					Дрыг=цел(КоличествоСтрок/100);
					Если Дрыг=0 тогда Дрыг=1 конецесли;
					
					
					если  НН%Дрыг=0 тогда
						Состояние("расчет " + НН + " из " + КоличествоСтрок);
					КонецЕсли;
					
				КонецЕсли;	
			#КонецЕсли
			
			ВеткаТовар= Неопределено;
			
			Если Стр.КоличествоФакт=0 тогда
				Если ФормироватьКомментарий = Истина Тогда
					ТекстОшибки="Расценим, НО Фактическое количество товара равно нулю! ("+СтрТоварКод+")  "+СтрТовар+"    Не РАСЦЕНЕН!";
					
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
				КонецЕсли;
				ЕстьОшибкиПоГТТ=Истина;
				СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
				//Продолжить;
			КонецЕсли; 
			
			
			
			ТЗПРавил=ИсходнаяТЗПРавил.Скопировать();
			РознЦена=0;
			
			ПредельнаяНадбавкаОпт = 0;
			ПредельнаяНадбавкаРозн = 0;
			Если Товар.ЖНВЛС = Истина Тогда
				Для каждого текнаценка из ТЗПредельныхНаценок Цикл
					Если текнаценка.ЦенаПроизводителяОт < стр.ЦенаПроизводителя  и 	стр.ЦенаПроизводителя <= текнаценка.ЦенаПроизводителяДо Тогда
						ПредельнаяНадбавкаОпт = текнаценка.ПредельнаяНадбавкаОпт;	
						ПредельнаяНадбавкаРозн = текнаценка.ПредельнаяНадбавкаРозн;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			
			//------------------<1) нужны значения всех возможных переменных из алгоритма условий>-------------------GtG----17.11.2007
			//---------------- Товар-------
			//			ТОвар=Стр.Товар;
			//------------------Регион------
			//Регион=ТекРегион;
			
			//------------- ГТТ------
			//ГТТ=ВыбГТТ.Ссылка;
			
			//------------------<строка документа>-------------------GtG----17.11.2007 
			Док=Стр;
			
			//------------------<Единица измерения>-------------------GtG----28.11.2007
			Если Док.Еит.Пустая()=Истина ТОгда
				
				Если ФормироватьКомментарий = Истина Тогда
					ТекстОшибки="В документе у товара не указана единица измерения! ("+СтрТоварКод+")  "+СтрТОвар+"    Не РАСЦЕНЕН!";
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТОвар);
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
				КонецЕсли;
				
				ЕстьОшибкиПоГТТ=Истина;
				СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
				
				Продолжить; // по таблице товаров
			Иначе
				ДокЕитК=Док.Коэфф;  // коэффициент единицы измерения из документа
				ДокЕИТ=Док.Еит;
			КонецЕсли; 
			
			Если ПроверятьЗакупкуИРозницу = Истина Тогда  //Virus 04.03.2013
				Отбор = Новый Структура();
				//Отбор.Вставить("Регион",Регион);
				Отбор.Вставить("Товар",Товар.Ссылка);
				Строки = ТаблицаСтарыхРознЦен.НайтиСтроки(Отбор);
				Если Строки.Количество() > 0 Тогда
					ПредыдущаяРознЦена = Округлить(Строки[0].ПрошлаяЦена,Перечисления.СпособыОкруглений.До10коп,Перечисления.МетодыОкругления.Отбрасывать);
					Остаток			 =  Строки[0].Остаток;
				Иначе
					ПредыдущаяРознЦена = 0;
					Остаток = 0;
				КонецЕсли;
			Иначе
				ПредыдущаяРознЦена = 0;
				Остаток = 0;
			КонецЕсли;
			
			Если Товар.ЦенаПротокола > 0 Тогда
				Если (ДанныеТекПартии.ЦенаЗакуп - Товар.ЦенаПротокола) > 1 Тогда
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия=Стр.Партия;
						Косяк.ТОвар=Стр.Товар;
						Косяк.Косяк="Закупочная цена превышает цену протокола: ЦЗ=" + ДанныеТекПартии.ЦенаЗакуп + " ЦП= " + Товар.ЦенаПротокола;
				КонецЕсли;
			КонецЕсли;
			
			
			Если АвтоРасценка = Ложь и ИспользоватьЦеныКонкурентов = Истина и ПроверятьЗакупкуИРозницу = Истина Тогда
            	//СтрокаЦеныКонкурента = ТЗЦенКонкурентов.Найти(Товар.Ссылка,"Товар");
				СтрокаЦеныКонкурента = ТЗЦенКонкурентов.Найти(Товар.Код,"КодТовара");
			Иначе
				СтрокаЦеныКонкурента = Неопределено;
			КонецЕсли;
			
			СработалХотяБыОдинАлгоритм = Ложь;
			
			ТЗПравил.Колонки.Добавить("РасшифровкаОшибки");
			
			~ПостобработкаЦены:  // безусловный переход сюда, если есть алгоритмы с отрицательным приоритетом.
			
			
			//------------------<Рассчитываем условия по каждой строке условий применения алгоритма>-------------------GtG----17.11.2007 
			// Если условие составное это даст для каждой части ИСТИНА или ЛОЖЬ потом их можно
			// загнать в одно выражение и получить результат
			
			
			
			Для каждого Алгоритм из ТЗХ Цикл
				
				Если ПостОбработкаЦены = Истина Тогда
					Если Алгоритм.Приоритет > 0 Тогда
						Продолжить;
					КонецЕсли;
				Иначе
					Если Алгоритм.Приоритет < 0 Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				
				Отбор = Новый Структура;
				Отбор.Вставить("АлгоритмСсылка",Алгоритм.АлгоритмСсылка);
				Правила = ТЗПРавил.НайтиСтроки(Отбор);
				
				
				ВырИтУсл="";
				
				Для каждого СтрП из Правила Цикл  // по таблице правил
					
					
					Если СтрП.ЗСК=Истина	Тогда
						СтрПУсловиеВыполнилось=")" ;
					ИначеЕсли СтрП.ОСК=Истина Тогда // это скобка "(" или ")"
						СтрПУсловиеВыполнилось="(";
					ИначеЕсли   СтрП.ТипУсловия = "В Списке" Тогда
						
						СтрПУсловиеВыполнилось = Ложь;
						МассивУсловий = СтрП.ПраваяЧастьХЗ.Получить();
						Если НЕ МассивУсловий = Неопределено Тогда
							Рез = Вычислить("МассивУсловий.Найти(" + СтрП.ЛеваяЧасть + ")");
							Если НЕ Рез = Неопределено Тогда
								СтрПУсловиеВыполнилось = Истина;	
							КонецЕсли;
							МассивУсловий = Неопределено;
						КонецЕсли;
						
						
					Иначе// собственно это условие	 
						ЗначениеПРавойЧасти=СтрП.ПраваяЧасть;
						
						
						Если ТипЗнч(ЗначениеПРавойЧасти)=Тип("Строка") Тогда // значит это формула и ее нужно вычислить
							ЗначениеПРавойЧасти =Вычислить( ЗначениеПРавойЧасти );
						КонецЕсли;	
						
						ТХТВычислить=""+СтрП.ЛеваяЧасть+" "+СтрП.ТипУсловия+" ЗначениеПРавойЧасти";
						
						
						Если  СтрП.ТипУсловия="СодЗнач" Тогда // вычисляет сидит ли значение Лева в таблице значений Права
							ТХТВычислить=""+Условие_СодЗнач(Вычислить(СтрП.ЛеваяЧасть),ЗначениеПРавойЧасти)+"";
							
							// ТХТВычислить будет как "Истина" или "Ложь"
						КонецЕсли;
						
						
						
						Попытка
							СтрП.УсловиеВыполнилось=Вычислить(ТХТВычислить);		
						Исключение  //ибо могут накосячить при написании условий
							Комментарий=ОписаниеОшибки()+"
							|Ошибка вычисления выражения. 
							|Алгоритм  "+СтрП.АлгоритмСсылка+"
							|"+СтрП.ЛеваяЧасть+" Условие сравнения "+СтрП.ТипУсловия+" Значение в правой части "+ЗначениеПРавойЧасти; 
							СтруктураРезультата.Комментарий = Комментарий;
							СтруктураРезультата.ТЗКосяков=ТЗКосяков;
							#Если Клиент Тогда
								ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТОвар);
								ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
								ВеткаТОварОш.Ошибки=Комментарий;
								
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
								
								ВызватьИсключение Комментарий;
							#Иначе
								Возврат СтруктураРезультата; // точно! - накосячили.
							#КонецЕсли
						КонецПопытки ;
						
						
						
						Если СтрП.УсловиеВыполнилось=Ложь Тогда
							СтрП.РасшифровкаОшибки="Не выполнилось условие "+ТХТВычислить;// СтрЗаменить(ТХТВычислить,"ЗначениеПРавойЧасти",ЗначениеПРавойЧасти);//+", а по товару "+Вычислить(СтрП.ЛеваяЧасть);
						КонецЕсли; 
						

						СтрПУсловиеВыполнилось =СтрП.УсловиеВыполнилось;

						
					КонецЕсли;	
						
					СтрП.ВырИтУсл=ВырИтУсл+" "+СтрПУсловиеВыполнилось+" "+СтрП.ОбъединятьСоСледующим;
					ВырИтУсл= СтрП.ВырИтУсл;// в последней строке сложного условия оно соберется все целиком
						
					 
					
				КонецЦикла;
				
				Попытка
					РезультатВычисления = Вычислить(ВырИтУсл);
				Исключение
					
					
				КонецПопытки;
				
				Если РезультатВычисления = Ложь Тогда
					//Уходим, так как не сработали условия по данному алгоритму
					Продолжить;
				Иначе
					СработалХотяБыОдинАлгоритм = Истина;
				КонецЕсли;

				Попытка 
					
					Если ПостОбработкаЦены = Истина Тогда
						Цена_Розничная = Цена_Розничная/ДокЕитК;
					КонецЕсли;					
					
					//------------------<МОМЕНТ с ценами из АП>--------------------------------GtG----28.11.2007
					// Расчет цены на 1 минимальную единицу
					// Цены если из основного ап считаем заданными на единицу по умолчанию (делим на еёйный К)
					// Если цена задана из АПГТТ то там должна быть ЕИТ на которую задана цена (делим на еёйный К), 
					//
					// Получившуюся Розн цену * на К по документу
					//
					// В РЕГИСТРЕ ЦЕН ХРАНИМ ЦЕНУ В РАСЧЕТЕ НА К=1 ! ДАЛЕЕ ВЕЗДЕ ЕЕ МНОЖИМ НА К ЕДИНИЦЫ
					//
					//------------------<--------------------->--------------------------------GtG----28.11.2007
					
					ФормулаДляРасчетаЦены= Алгоритм.ФормулаРасчетаЦены;
					ФормулаДляРасчетаПроцНац=Алгоритм.ФормулаРасчетаПроцентаНаценки;
					
					
					ФормулаДляРасчетаЦены=ПравильнаяФормулаРасчета(ФормулаДляРасчетаЦены);
					ФормулаДляРасчетаПроцНац=ПравильнаяФормулаРасчета(ФормулаДляРасчетаПроцНац);
					
					//------------------------------------------------------------GtG----28.11.2007
					
					Цена_Розничная=Вычислить(ФормулаДляРасчетаЦены); // на идеальную сферическую единицу в вакууме
					
					
					//--- Округляем в БОЛЬШУЮ сторону до 10 копеек
					
					Цена_Розничная=ОМ3_ОтброситьДо10Коп(Цена_Розничная);
					//--- потом при расчете границ наценки обкорнается в меньшую сторону
					Если ФормироватьКомментарий = Истина Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаДляРасчетаЦены,Алгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
					КонецЕсли;
					
				Исключение
					
					
					//Начало добавил 19.11.2012  Васильченко
					Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
						//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
						
						
						
						Цена_Розничная=0;
						СтрТП=Тп.Добавить();
						СтрТП.ТОвар=СтрТОвар; //ссылка
						СтрТП.Партия=ДанныеТекПартии["Партия"];
						СтрТП.ЕИТ=Док.Еит;
						СтрТП.КоэффЕит=ДокЕитК;
						СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
						СтрТП.ЦенаГосРег=0;
						СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
						СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
						
						СтрТП.Топ100=Товар.Топ100;
						СтрТП.Топ1000=ТОвар.Топ1000;
						
						СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
						СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
						СтрТП.Регион  =ТекРегион;
						СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
						
						СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
						СтрТП.НН=НН;
						СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
						СтрТП.Остаток = Остаток;
						
						СтрТП.ИндЦена = ИндЦена;
						Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
							СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
							//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
							СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
						КонецЕсли;

						

					КонецЕсли;					
					//Конец добавил 19.11.2012  Васильченко
					
					Если ФормироватьКомментарий = Истина Тогда
						ТекстОшибки="Ошибка при расчете розничной цены:";
						ООШ=ОписаниеОшибки();
						
						
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);	
						
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаЦены),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
					ЕстьОшибкиПоГТТ=Истина;
					
					СработалХотяБыОдинАлгоритм = Ложь;
					
					Прервать;								
				КонецПопытки;
				
				Попытка 
					пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),4,РежимОкругления.Окр15как20); // В большую СТОРОНУ!  
					
					Если ФормироватьКомментарий = Истина Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
					КонецЕсли;
				Исключение
					
					Если ФормироватьКомментарий = Истина Тогда
						ТекстОшибки="Ошибка при расчете процента наценки:";
						ООШ=ОписаниеОшибки();
						
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаПроцНац),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
					
					ЕстьОшибкиПоГТТ = Истина;
					СработалХотяБыОдинАлгоритм = Ложь;
					
					Прервать;									
					
				КонецПопытки;
				
				МинПроцНаценки=Вычислить(Алгоритм.МинПроцНаценки);
				
				МаксПроцНаценки=Вычислить(Алгоритм.МаксПроцНаценки);
				
				//КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки));
				
				Если  ФормироватьКомментарий = Истина Тогда
					Если МинПроцНаценки=0  Тогда
						МинПроцНаценки=Константы.МинимальноДопустимаяНаценка.Получить();
						
						Ахтунг_Дангер=""+ТекРегион+"  "+ТОВар.Наименование+" Не удалось вычислить минимальный процент наценки по формуле "+Алгоритм.МинПроцНаценки+"
						| принимаем = "+МинПроцНаценки+" %";
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);		
						
					КонецЕсли; 	
					
					Если МаксПроцНаценки=0 Тогда
						МаксПроцНаценки=70;
						Ахтунг_Дангер=(""+ТекРегион+"  "+ТОВар.Наименование+" Не удалось вычислить максимальный процент наценки по формуле "+Алгоритм.МаксПроцНаценки+"
						| принимаем = "+МаксПроцНаценки+" %");
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);		
						
						
					КонецЕсли; 	
					
					// прокомментируем новые границы процента наценки
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки), ФормироватьКомментарий);
					
				КонецЕсли;
				
				
				Если  Процент_Наценки>МаксПроцНаценки тогда
					//Зарубим
					Если ФормироватьКомментарий = Истина Тогда
						Ахтунг_Дангер=("Превышение максимального процента наценки! Уменьшаем наценку..."+пРОЦЕНТ_Наценки+">"+МаксПроцНаценки);
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);
					КонецЕсли;
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+МаксПроцНаценки) / (100+Окр(пРОЦЕНТ_Наценки,1)) )";// в меньшую сторону
					// чем больше бы лпроцент наценки тем меньше будет цена( про копейки)
					
					Попытка
						
						
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);// в меньшую сторону (актуально для ЖНВЛС)
						
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,Алгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
						КонецЕсли;
						
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненной цены";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
							
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР),ФормироватьКомментарий);
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
						
					КонецПопытки;
					
					Попытка
						//----------------------------< пересчитаем процент наценки по скорректированной Розничной цене >--------------------------------GtG--- 
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),3,РежимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
						
						
						
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненного процента наценки";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
				ИначеЕсли пРОЦЕНТ_Наценки<МинПроцНаценки Тогда
					
					ЕстьКосякТопа=Ложь;
					
					Если ТОвар.Топ100=Ложь ТОгда
						ПодтягиватьКПроценту= "МинПроцНаценки"; // было  "МаксПроцНаценки";
					Иначе   // Если заниженный процент по ТОП 100 то это - косяк и товар надо возвращать или пересматривать цену на товар в АП
						ПодтягиватьКПроценту="МинПроцНаценки";
						
						//Косяк=ТЗКосяков.Добавить();
						//Косяк.Партия=Стр.Партия;
						//Косяк.ТОвар=Стр.Товар;
						//Косяк.Косяк="ТОП 100! Заниженный процент наценки! Слишком высокая закупка! Вернуть или пересмотреть цену в АП!";
						
						//ЕстьКосякТопа=Истина;
					КонецЕсли;
					
					
					//Подтянем
					Если ФормироватьКомментарий Тогда
						Ахтунг_Дангер=("Заниженный процент наценки! Рассчитываем по "+ПодтягиватьКПроценту+" ..."+пРОЦЕНТ_Наценки+"<"+МинПроцНаценки);
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);
					КонецЕсли;
					
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+"+ПодтягиватьКПроценту+") / (100+пРОЦЕНТ_Наценки) )";// в меньшую сторону  топ 100, в большую остальные 
					
					Попытка
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,Алгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
						КонецЕсли;
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненной цены";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР),ФормироватьКомментарий);
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
					
					Попытка
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),6,режимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненного процента наценки";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					КонецПопытки;
					
					
					Если ЕстьКосякТопа=Истина ТОгда
						Косяк.ЦенаПоРасценке=Цена_Розничная*ДокЕитК;
					КонецЕсли; 
					
				КонецЕсли;
				
				ЦенаЕд=Цена_Розничная; // для комментатора

				//ПредыдущаяРознЦена=ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
				
				//СпособОкругления = Неопределено;
				//МетодОкругления = Неопределено;
				
				//Округление цены по новым правилам из справочника МатрицаОкругления
				Если ТекРегион.ИспользоватьМатрицуОкругления = Истина Тогда
					ПроцентОтклоненияВверх	= неопределено;
					ПроцентОтклоненияВниз	= неопределено;
					ЦенаДоКорректировки = Цена_Розничная;
					Для каждого строкаМО из ТЗМатрицаОкруглений Цикл
						Если (Цена_Розничная >= строкаМО.Цена1 и Цена_Розничная <=строкаМО.Цена2 ) и ТОвар.ЖНВЛС = строкаМо.ИспользоватьДляЖВ Тогда
							Цена_Розничная = Округлить(Цена_Розничная,строкаМО.СпособОкругления,строкаМО.МетодОкругления);
							Если ФормироватьКомментарий Тогда
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Округление",Новый Структура("СпособОкругления,ЦенаДоОкругления,ЦенаПослеОкругления",строкаМО.СпособОкругления,ЦенаДоКорректировки,Цена_Розничная),ФормироватьКомментарий);
							КонецЕсли;
							//СпособОкругления = строкаМО.СпособОкругления;
							//МетодОкругления = строкаМО.МетодОкругления;	
							ПроцентОтклоненияВверх	= строкаМО.ПроцентОтклоненияВверх;
							ПроцентОтклоненияВниз	= строкаМО.ПроцентОтклоненияВниз;
							Прервать;	
						КонецЕсли;
					КонецЦикла;				
				КонецЕсли;
				
				//==================<Реальная несферическая единица не в вакууме>===================GtG====28.11.2007
				Цена_Розничная=Цена_Розничная*ДокЕитК;
				
				Если  ТекРегион.ИспользоватьПредыдущуюРозничнуюЦенуПриРасценке=Истина и ИндЦена = 0 и НЕ (ТекРегион.НеКорректироватьФиксЦены = Истина и Товар.ФиксированнаяЦена > 0) Тогда
					//------------------<Подгоняем новую розничную под старую>-------------------GtG----27.11.2008
					// Считаем процент наценки по алг расчета процента исходя из старой цены Nold
					// Считаем процент наценки по алг расчета процента исходя из новой цены  Nnew
					// если Nold-Nnew >10% тогда  берем цену по расценке (как более правильную)
					//  <10% берем старую цену , ибо нормально
					Если ДанныеТекПартии.СрокГодности > ТекущаяДата() + 24*60*60*95 или ДанныеТекПартии.СрокГодности = Дата(1,1,1) Тогда
						Если 	ТОвар.ЖНВЛС=Ложь 		и 
							Товар.Топ100=Ложь 		и Остаток > 0  и 
							ОМ6_ЕстьСпецЦена(Товар.Ссылка, Склад, ДатаДок, ДанныеТекПартии)=ложь и    //????? Virus
							ПредыдущаяРознЦена>0  и Цена_Розничная > 0  
							Тогда					                
							ЦенаДоКорректировки = Цена_Розничная;
							Если Цена_Розничная > ПредыдущаяРознЦена Тогда
								Если ((Цена_Розничная/ПредыдущаяРознЦена)-1)*100 < ПроцентОтклоненияВверх Тогда 
									Цена_Розничная = ПредыдущаяРознЦена;
								КонецЕсли;
							ИначеЕсли Цена_Розничная < ПредыдущаяРознЦена Тогда
								Если ((ПредыдущаяРознЦена/Цена_Розничная)-1)*100 < ПроцентОтклоненияВниз Тогда 
									Цена_Розничная = ПредыдущаяРознЦена;
								КонецЕсли;
							Иначе
							КонецЕсли;
							Если ФормироватьКомментарий Тогда
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"КорректировкаЦены",Новый Структура("ПредыдущаяЦена,ЦенаДоКорректировки,ЦенаПослеКорректировки",ПредыдущаяРознЦена,ЦенаДоКорректировки,Цена_Розничная),ФормироватьКомментарий);
							КонецЕсли;
						КонецЕсли;	
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Рез",Новый Структура("ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки",ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли; // регион использует расценку с подтягиванием предыдущей розничной цены
				
				
				
				//------------------<еще проверочку на превыешние закупочной цены розничной рассчитанной чтобы в минус не ушло>-------------------GtG----21.11.2007
				Если Цена_Розничная < Док.ЦенаЗакуп Тогда
					ОтборМинус = Новый Структура();
					ОтборМинус.Вставить("Товар",стрТовар);
					ОтборМинус.Вставить("Партия",ДанныеТекПартии["Партия"]);
					НайденныеСтрокиМинусов =  ТЗВМинус.НайтиСтроки(ОтборМинус);
					Если НайденныеСтрокиМинусов.Количество() > 0 Тогда
						СтрокаМинуса = НайденныеСтрокиМинусов.Получить(0);
						СтрокаМинуса.ЦенаЗакуп = Док.ЦенаЗакуп;
						СтрокаМинуса.ЦенаРозн = Цена_Розничная;
						СтрокаМинуса.Количество = стр.КоличествоФакт;
						СтрокаМинуса.Дата = ДатаДок;
					Иначе
						НовыйМинус = ТЗВМинус.Добавить();
						НовыйМинус.Товар = стрТовар;
						НовыйМинус.Партия = ДанныеТекПартии["Партия"];
						НовыйМинус.ЦенаЗакуп = Док.ЦенаЗакуп;
						НовыйМинус.ЦенаРозн = Цена_Розничная;
						НовыйМинус.Количество = стр.КоличествоФакт;
						НовыйМинус.Дата = ДатаДок;
					КонецЕсли;
				КонецЕсли;

				
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					Если Цена_Розничная<=Док.ЦенаЗакуп  Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар=СтрТОвар;
							СтрТП.Партия=ДанныеТекПартии["Партия"];
							СтрТП.ЕИТ=Док.Еит;
							СтрТП.КоэффЕит=ДокЕитК;
							СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
							СтрТП.ЦенаГосРег=0;
							СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
							
							СтрТП.Топ100=Товар.Топ100;
							СтрТП.Топ1000=ТОвар.Топ1000;
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток 	= Остаток;
							СтрТП.ИндЦена	= ИндЦена;
							Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
								СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
								//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
								СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
							КонецЕсли;
							

						КонецЕсли; 
						
						
						
						Если ФормироватьКомментарий Тогда
							
							ТекстОшибки="Розничная цена оказалась меньше закупочной!    ("+Товар.Код+")  "+Товар.Наименование+"    Не РАСЦЕНЕН!";
							
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ЕстьОшибкиПоГТТ=Истина;
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КонецЕсли;
						
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;

						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия=Стр.Партия;
						Косяк.ТОвар=Стр.Товар;
						Косяк.Косяк="Розничная цена оказалась меньше закупочной! НЕ РАСЦЕНЕН!";
						Косяк.ЦенаПоРасценке=Цена_Розничная;
						
						Прервать;
					КонецЕсли;
				КонецЕсли;
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					//==================<Не ТОПОВЫЕ позиции наценка от закупки с ндс НЕ МЕНЕЕ 10% полюбому>===================GtG====21.01.2008
					Если (ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"],Цена_Розничная)<МинимальныйПроцентНаценкиКромеТопов)
						И (Товар.Топ100=Ложь и ТОвар.Топ1000=Ложь)
						Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар=СтрТОвар;
							СтрТП.Партия=Док.Партия;
							СтрТП.ЕИТ=Док.Еит;
							СтрТП.КоэффЕит=ДокЕитК;
							СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
							СтрТП.ЦенаГосРег=0;
							СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
							
							СтрТП.Топ100=Товар.Топ100;
							СтрТП.Топ1000=ТОвар.Топ1000;
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток = Остаток;
							СтрТП.ИндЦена	= ИндЦена;
							
							Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
								СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
								//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
								СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
							КонецЕсли;


						КонецЕсли; 
						
						Если ФормироватьКомментарий  Тогда
							ТекстОшибки="НЕ ТОПОВЫЙ товар, наценка от закупки с НДС меньше "+МинимальныйПроцентНаценкиКромеТопов+"% ("+Товар.Код+")  "+Товар+"    Не РАСЦЕНЕН!";
							
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КонецЕсли;
						
						ЕстьОшибкиПоГТТ=Истина;

						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
						Прервать;
					КонецЕсли;
					//================================================GtG====КОНЕЦ==21.01.2008
				КонецЕсли;
				
				
				//----------------------------< комментарий окончательного результата по товару >--------------------------------GtG--- 
				//КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Рез",Новый Структура("ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки",ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки));
				
				//==================<Проверяем отклонение новой розничной цены от старой, не более чем в 2 раза>===================GtG====28.11.2008
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					Если ПредыдущаяРознЦена>0 Тогда
						КонтрольноеОтклонение=ПредыдущаяРознЦена/(Цена_Розничная);
						
						Если КонтрольноеОтклонение<=0.5 или КонтрольноеОтклонение>=2 тогда
							// это косяк. цена отличается более чем в 2 раза от предыдущей
							Если ФормироватьКомментарий Тогда
								ТекстОшибки="Розничная цена отличается более чем в 2 раза от предыдущей розничной!";
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КонецЕсли;
							
							Косяк=ТЗКосяков.Добавить();
							Косяк.Партия=Стр.Партия;
							Косяк.ТОвар=Стр.Товар;
							Косяк.Косяк="Розничная цена отличается более чем в 2 раза от предыдущей розничной!";
							// попадет в тч ошибок расценки и документ не проведется
							
						КонецЕсли;
					КонецЕсли; 
				КонецЕсли;
				//================================================GtG====КОНЕЦ==28.11.2008				
				Прервать;
				
			КонецЦикла;	// по таблице правил
			
			Если СработалХотяБыОдинАлгоритм = Истина и ПостОбработкаЦены = Ложь Тогда
				ПостОбработкаЦены = Истина;
				Перейти ~ПостобработкаЦены;
			КонецЕсли;
			
			Если СработалХотяБыОдинАлгоритм = Ложь Тогда	
				Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
					//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
					Цена_Розничная=0;
					СтрТП=Тп.Добавить();
					СтрТП.ТОвар=СтрТОвар; //ссылка
					СтрТП.Партия=ДанныеТекПартии["Партия"];
					СтрТП.ЕИТ=Док.Еит;
					СтрТП.КоэффЕит=ДокЕитК;
					СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
					СтрТП.ЦенаГосРег=0;
					СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
					СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
					
					СтрТП.Топ100=Товар.Топ100;
					СтрТП.Топ1000=ТОвар.Топ1000;
					
					СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
					СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
					СтрТП.Регион  =ТекРегион;
					СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
					
					СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
					СтрТП.НН=НН;
					СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
					СтрТП.Остаток = Остаток;
					СтрТП.ИндЦена = ИндЦена;
					Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
						СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
						//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
						СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
					КонецЕсли;
					
				КонецЕсли; 
				
				Попытка
					Косяк=ТЗКосяков.Добавить();
					Косяк.Партия=СтрТП.Партия;
					Косяк.ТОвар=СтрТП.ТОвар;
					Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
				Исключение
					Попытка
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия="Партия неизвестна";
						Косяк.ТОвар=СтрТП.ТОвар;
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					Исключение
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия="Партия неизвестна";
						Косяк.ТОвар="Товар неизвестен!";
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					КонецПопытки;
				КонецПопытки; 
				
				Если ФормироватьКомментарий = Истина Тогда
					
					ТекстОшибки=" Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшСсы.Ошибки=СтрТОвар; // ссылка на товар
					ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшСсы.Ошибки=ТекРегион; // ссылка на регион
					
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион),ФормироватьКомментарий);
				КонецЕсли;
				
				
				ЕстьОшибкиПоГТТ=Истина;
				Продолжить;  // не расценилось
			КонецЕсли;  // конец если не сработал ни один алгоритм
			
			Если СработалХотяБыОдинАлгоритм = Истина Тогда
				
				//==================<Выводим строку расцененного товара >===================GtG====20.11.2007
				СтрТП=Тп.Добавить();
				СтрТП.НН=НН;
				СтрТП.ТОвар=СтрТОвар;
				СтрТП.Партия=ДанныеТекПартии["Партия"];
				СтрТП.ЕИТ=Док.Еит;
				СтрТП.КоэффЕит=ДокЕитК;
				СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
				СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;
				СтрТП.Остаток = Остаток;
				СтрТП.Регион=ТекРегион;
				
				
				Если Авторасценка = Ложь Тогда
					СтрТП.ЦенаПРБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
					СтрТП.ЦенаГосРег=0;
					СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
					СтрТП.Топ100=Товар.Топ100;
					СтрТП.Топ1000=ТОвар.Топ1000;
					СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
					СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
					СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
					СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
					СтрТП.ИндЦена = ИндЦена;
					Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
						СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
						//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
						СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
					КонецЕсли;
				КонецЕсли;
				
				Если Док.ЦенаГосРегистрации > 0 и Товар.ЖНВЛС = Ложь Тогда   // 08.09.2014 Васильченко по ТЗ Токмаковой
					Косяк=ТЗКосяков.Добавить();
					Косяк.Партия=Стр.Партия;
					Косяк.ТОвар=Стр.Товар;
					Косяк.Косяк="Позиция имеет цену ГР, но не имеет признака ЖНВЛС в базе";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	// по строкам документа
		
		#Если Клиент Тогда
			Состояние("расчет " + НН + " из " + КоличествоСтрок);
		#КонецЕсли
		
		
		Если ЕстьОшибкиПоГТТ=Ложь и ФормироватьКомментарий = Истина тогда
			ВеткаТОварОш=ВеткаРегион.Строки.Добавить();
			ВеткаТОварОш.Ошибки="ОК. Ошибок нет";
		КонецЕсли;
		
		
		Если Цена_Розничная=0 ТОгда
			Косяк=ТЗКосяков.Добавить();
			Косяк.Партия=Стр.Партия;
			Косяк.ТОвар=Стр.Товар;
			Косяк.Косяк="Товар не расценился.";
		КонецЕсли;	
		
		
		
		
	КонецЦикла; // по Регионам
	
	//ЭлементыФормы .ДеревоОшибок.Значение=ДО;
	//ЭлементыФормы.ДеревоОшибок.СоздатьКолонки();
	Если ФормироватьКомментарий Тогда
		Таб.ЗакончитьГруппуСтрок();
	КонецЕсли;
	СтруктураРезультата.ТаблицаКомментариев = Таб;
	СтруктураРезультата.ТП = ТП;
    СтруктураРезультата.ДеревоОшибок = ДО;
	СтруктураРезультата.ТЗКосяков=ТЗКосяков;

	Если ЕстьОшибки или ЕстьОшибкиПоГТТ или ТЗКосяков.Количество() > 0 Тогда  //ЕстьОшибкиПоУПА
		СтруктураРезультата.Результат = Ложь;
	Иначе
		СтруктураРезультата.Результат = Истина;
	КонецЕсли;
	
	Если ТЗВМинус.Количество() > 0 Тогда
		ТЗВМинус.Свернуть("Товар,Партия,ЦенаЗакуп,ЦенаРозн,Дата","Количество");
		НаборЗаписей = РегистрыСведений.ЛогРасценки.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.Регистратор.Установить(Документ); 
		НаборЗаписей.Загрузить(ТЗВМинус); 
		Попытка
			НаборЗаписей.Записать(); 
		Исключение
			#Если Клиент Тогда
				Сообщить(""+ОписаниеОшибки());
			#КонецЕсли
		КонецПопытки;
	КонецЕсли;


		
	Возврат СтруктураРезультата;
	
	
	
	
	
КонецФункции
 
Функция  УЗ_ПолучитьТаблицуДокументаДляРасценки(Документ,ИмяДокумента,ВнутреннееПеремещение,МатрицаНаценок,МатрицаНаценокТМ)
	
	Запрос = Новый Запрос;
	
	Если ИмяДокумента = "УЗ_ПоступлениеТовара" или ИмяДокумента = "УЗ_ВводОстатков" Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ТЧ.КодТовара,
		|	ТЧ.КодПартии,
		|	ТЧ.Коэфф,
		|	ТЧ.КоэффициентРазбивки,
		|	ТЧ.Товар,
		|	ТЧ.СрокГодности,
		|	ТЧ.Количество,
		|	Партии.ЦенаГосРегистрации,
		|	Партии.ЦенаЗакуп,
		|	Выразить(Партии.ЦенаЗакуп/(1 + Партии.СтавкаНДСЗакуп/100) как Число(15,2)) как ЦенаЗакупБезНДС,
		|	Партии.ЦенаПроизводителяБезНДС как ЦенаПроизводителя,
		|	Партии.СтавкаНДСРозн как СтавкаНДС,
		|Выбор когда МатрицыНаценокСостав.Ссылка есть NULL Тогда 0 ИНАЧЕ ВЫРАЗИТЬ(Партии.ЦенаЗакуп * (1 + ЕСТЬNULL(ВЫБОР
		|			КОГДА Партии.ЦенаЗакуп <= 20
		|				ТОГДА МатрицыНаценокСостав.Цена_0_20
		|			КОГДА Партии.ЦенаЗакуп > 20
		|					И Партии.ЦенаЗакуп <= 50
		|				ТОГДА МатрицыНаценокСостав.Цена_20_50
		|			КОГДА Партии.ЦенаЗакуп > 50
		|					И Партии.ЦенаЗакуп <= 200
		|				ТОГДА МатрицыНаценокСостав.Цена_50_200
		|			КОГДА Партии.ЦенаЗакуп > 200
		|					И Партии.ЦенаЗакуп <= 500
		|				ТОГДА МатрицыНаценокСостав.Цена_200_500
		|			КОГДА Партии.ЦенаЗакуп > 500
		|					И Партии.ЦенаЗакуп <= 1000
		|				ТОГДА МатрицыНаценокСостав.Цена_500_1000
		|			КОГДА Партии.ЦенаЗакуп > 1000
		|					И Партии.ЦенаЗакуп <= 3000
		|				ТОГДА МатрицыНаценокСостав.Цена_1000_3000
		|			КОГДА Партии.ЦенаЗакуп > 3000
		|					И Партии.ЦенаЗакуп <= 5000
		|				ТОГДА МатрицыНаценокСостав.Цена_3000_5000
		|			КОГДА Партии.ЦенаЗакуп > 5000
		|				ТОГДА МатрицыНаценокСостав.Цена_5000_1000000
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) / 100) КАК ЧИСЛО(15, 2)) КОНЕЦ КАК ЦенаПоМатрице ,
		|ЕСТЬNULL(ВЫБОР
		|			КОГДА Партии.ЦенаЗакуп <= 20
		|				ТОГДА МатрицыНаценокСостав.Цена_0_20
		|			КОГДА Партии.ЦенаЗакуп > 20
		|					И Партии.ЦенаЗакуп <= 50
		|				ТОГДА МатрицыНаценокСостав.Цена_20_50
		|			КОГДА Партии.ЦенаЗакуп > 50
		|					И Партии.ЦенаЗакуп <= 200
		|				ТОГДА МатрицыНаценокСостав.Цена_50_200
		|			КОГДА Партии.ЦенаЗакуп > 200
		|					И Партии.ЦенаЗакуп <= 500
		|				ТОГДА МатрицыНаценокСостав.Цена_200_500
		|			КОГДА Партии.ЦенаЗакуп > 500
		|					И Партии.ЦенаЗакуп <= 1000
		|				ТОГДА МатрицыНаценокСостав.Цена_500_1000
		|			КОГДА Партии.ЦенаЗакуп > 1000
		|					И Партии.ЦенаЗакуп <= 3000
		|				ТОГДА МатрицыНаценокСостав.Цена_1000_3000
		|			КОГДА Партии.ЦенаЗакуп > 3000
		|					И Партии.ЦенаЗакуп <= 5000
		|				ТОГДА МатрицыНаценокСостав.Цена_3000_5000
		|			КОГДА Партии.ЦенаЗакуп > 5000
		|				ТОГДА МатрицыНаценокСостав.Цена_5000_1000000
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ПроцентПоМатрицеНаценок,
		|ЕСТЬNULL(МатрицыНаценокТМ.Наценка,0) как ПроцентПоМатрицеТМ,
       |	ВЫБОР
       |		КОГДА МатрицыНаценокТМ.Наценка ЕСТЬ NULL
       |			ТОГДА 0
       |		ИНАЧЕ ВЫРАЗИТЬ(Партии.ЦенаЗакуп * (1 + ЕСТЬNULL(МатрицыНаценокТМ.Наценка, 0) / 100) КАК ЧИСЛО(15, 2))
       |	КОНЕЦ КАК ЦенаПоМатрицеТМ
		|ИЗ
		|	Документ."+ИмяДокумента+".Товар КАК ТЧ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
		|		ПО ТЧ.КодПартии = Партии.Код
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МатрицыНаценок.Состав КАК МатрицыНаценокСостав
		|		ПО ТЧ.Товар.Спрос = МатрицыНаценокСостав.Спрос
		|			И ТЧ.Товар.НоваяКатегория = МатрицыНаценокСостав.НоваяКатегория
		|			И (МатрицыНаценокСостав.Ссылка = &МатрицаНаценок)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МатрицыНаценокТМ.Состав КАК МатрицыНаценокТМ
		|		ПО ТЧ.Товар.Бренд = МатрицыНаценокТМ.Бренд
		|			И (МатрицыНаценокТМ.Ссылка = &МатрицаНаценокТМ)
		|
		|ГДЕ
		|	ТЧ.Ссылка = &Документ";
	ИначеЕсли ИмяДокумента = "УЗ_Перемещение" Тогда
		
		Если ВнутреннееПеремещение Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	ТЧ.КодТовара КАК КодТовара,
			               |	ТЧ.КодПартии КАК КодПартии,
			               |	ТЧ.Коэфф КАК Коэфф,
			               |	ТЧ.КоэффициентРазбивки КАК КоэффициентРазбивки,
			               |	ТЧ.Товар КАК Товар,
			               |	ТЧ.Количество КАК Количество,
			               |	Партии.СрокГодности КАК СрокГодности,
			               |	Партии.ЦенаГосРегистрации КАК ЦенаГосРегистрации,
			               |	Партии.ЦенаЗакуп КАК ЦенаЗакуп,
			               |	ВЫРАЗИТЬ(Партии.ЦенаЗакуп / (1 + Партии.СтавкаНДСЗакуп / 100) КАК ЧИСЛО(15, 2)) КАК ЦенаЗакупБезНДС,
			               |	Партии.ЦенаПроизводителяБезНДС КАК ЦенаПроизводителя,
			               |	Партии.СтавкаНДСРозн КАК СтавкаНДС,
			               |	ВЫБОР
			               |		КОГДА МатрицыНаценокСостав.Ссылка ЕСТЬ NULL
			               |			ТОГДА 0
			               |		ИНАЧЕ ВЫРАЗИТЬ(Партии.ЦенаЗакуп * (1 + ЕСТЬNULL(ВЫБОР
						   |						КОГДА Партии.ЦенаЗакуп <= 20
						   |							ТОГДА МатрицыНаценокСостав.Цена_0_20
						   |						КОГДА Партии.ЦенаЗакуп > 20
						   |								И Партии.ЦенаЗакуп <= 50
			               |							ТОГДА МатрицыНаценокСостав.Цена_20_50
			               |						КОГДА Партии.ЦенаЗакуп > 50
			               |								И Партии.ЦенаЗакуп <= 200
			               |							ТОГДА МатрицыНаценокСостав.Цена_50_200
			               |						КОГДА Партии.ЦенаЗакуп > 200
			               |								И Партии.ЦенаЗакуп <= 500
			               |							ТОГДА МатрицыНаценокСостав.Цена_200_500
			               |						КОГДА Партии.ЦенаЗакуп > 500
			               |								И Партии.ЦенаЗакуп <= 1000
			               |							ТОГДА МатрицыНаценокСостав.Цена_500_1000
			               |						КОГДА Партии.ЦенаЗакуп > 1000
			               |								И Партии.ЦенаЗакуп <= 3000
			               |							ТОГДА МатрицыНаценокСостав.Цена_1000_3000
			               |						КОГДА Партии.ЦенаЗакуп > 3000
			               |								И Партии.ЦенаЗакуп <= 5000
			               |							ТОГДА МатрицыНаценокСостав.Цена_3000_5000
			               |						КОГДА Партии.ЦенаЗакуп > 5000
			               |							ТОГДА МатрицыНаценокСостав.Цена_5000_1000000
			               |						ИНАЧЕ 0
			               |					КОНЕЦ, 0) / 100) КАК ЧИСЛО(15, 2))
			               |	КОНЕЦ КАК ЦенаПоМатрице,
			               |	ЕСТЬNULL(ВЫБОР
						   |			КОГДА Партии.ЦенаЗакуп <= 20
						   |				ТОГДА МатрицыНаценокСостав.Цена_0_20
						   |			КОГДА Партии.ЦенаЗакуп > 20
						   |					И Партии.ЦенаЗакуп <= 50
			               |				ТОГДА МатрицыНаценокСостав.Цена_20_50
			               |			КОГДА Партии.ЦенаЗакуп > 50
			               |					И Партии.ЦенаЗакуп <= 200
			               |				ТОГДА МатрицыНаценокСостав.Цена_50_200
			               |			КОГДА Партии.ЦенаЗакуп > 200
			               |					И Партии.ЦенаЗакуп <= 500
			               |				ТОГДА МатрицыНаценокСостав.Цена_200_500
			               |			КОГДА Партии.ЦенаЗакуп > 500
			               |					И Партии.ЦенаЗакуп <= 1000
			               |				ТОГДА МатрицыНаценокСостав.Цена_500_1000
			               |			КОГДА Партии.ЦенаЗакуп > 1000
			               |					И Партии.ЦенаЗакуп <= 3000
			               |				ТОГДА МатрицыНаценокСостав.Цена_1000_3000
			               |			КОГДА Партии.ЦенаЗакуп > 3000
			               |					И Партии.ЦенаЗакуп <= 5000
			               |				ТОГДА МатрицыНаценокСостав.Цена_3000_5000
			               |			КОГДА Партии.ЦенаЗакуп > 5000
			               |				ТОГДА МатрицыНаценокСостав.Цена_5000_1000000
			               |			ИНАЧЕ 0
			               |		КОНЕЦ, 0) КАК ПроцентПоМатрицеНаценок,
			               |	ЕСТЬNULL(МатрицыНаценокТМ.Наценка, 0) КАК ПроцентПоМатрицеТМ,
			               |	ВЫБОР
			               |		КОГДА МатрицыНаценокТМ.Наценка ЕСТЬ NULL
			               |			ТОГДА 0
			               |		ИНАЧЕ ВЫРАЗИТЬ(Партии.ЦенаЗакуп * (1 + ЕСТЬNULL(МатрицыНаценокТМ.Наценка, 0) / 100) КАК ЧИСЛО(15, 2))
			               |	КОНЕЦ КАК ЦенаПоМатрицеТМ
			               |ИЗ
			               |	Документ.УЗ_Перемещение.Товар КАК ТЧ
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			               |		ПО ТЧ.КодПартии = Партии.Код
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МатрицыНаценок.Состав КАК МатрицыНаценокСостав
			               |		ПО ТЧ.Товар.Спрос = МатрицыНаценокСостав.Спрос
			               |			И ТЧ.Товар.НоваяКатегория = МатрицыНаценокСостав.НоваяКатегория
			               |			И (МатрицыНаценокСостав.Ссылка = &МатрицаНаценок)
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МатрицыНаценокТМ.Состав КАК МатрицыНаценокТМ
			               |		ПО ТЧ.Товар.Бренд = МатрицыНаценокТМ.Бренд
			               |			И (МатрицыНаценокТМ.Ссылка = &МатрицаНаценокТМ)
			               |ГДЕ
			               |	ТЧ.Ссылка = &Документ";
		Иначе
			Запрос.Текст = "ВЫБРАТЬ
			               |	ТЧ.КодТовара КАК КодТовара,
			               |	ТЧ.КодПартииПолучателя КАК КодПартии,
			               |	ТЧ.Коэфф КАК Коэфф,
			               |	ТЧ.КоэффициентРазбивки КАК КоэффициентРазбивки,
			               |	ТЧ.Товар КАК Товар,
			               |	ТЧ.Количество КАК Количество,
			               |	Партии.СрокГодности КАК СрокГодности,
			               |	Партии.ЦенаГосРегистрации КАК ЦенаГосРегистрации,
			               |	Партии.ЦенаЗакуп КАК ЦенаЗакуп,
			               |	ВЫРАЗИТЬ(Партии.ЦенаЗакуп / (1 + Партии.СтавкаНДСЗакуп / 100) КАК ЧИСЛО(15, 2)) КАК ЦенаЗакупБезНДС,
			               |	Партии.ЦенаПроизводителяБезНДС КАК ЦенаПроизводителя,
			               |	Партии.СтавкаНДСРозн КАК СтавкаНДС,
			               |	ВЫБОР
			               |		КОГДА МатрицыНаценокСостав.Ссылка ЕСТЬ NULL
			               |			ТОГДА 0
			               |		ИНАЧЕ ВЫРАЗИТЬ(Партии.ЦенаЗакуп * (1 + ЕСТЬNULL(ВЫБОР
						   |						КОГДА Партии.ЦенаЗакуп <= 20
						   |							ТОГДА МатрицыНаценокСостав.Цена_0_20
						   |						КОГДА Партии.ЦенаЗакуп > 20
						   |								И Партии.ЦенаЗакуп <= 50
			               |							ТОГДА МатрицыНаценокСостав.Цена_20_50
			               |						КОГДА Партии.ЦенаЗакуп > 50
			               |								И Партии.ЦенаЗакуп <= 200
			               |							ТОГДА МатрицыНаценокСостав.Цена_50_200
			               |						КОГДА Партии.ЦенаЗакуп > 200
			               |								И Партии.ЦенаЗакуп <= 500
			               |							ТОГДА МатрицыНаценокСостав.Цена_200_500
			               |						КОГДА Партии.ЦенаЗакуп > 500
			               |								И Партии.ЦенаЗакуп <= 1000
			               |							ТОГДА МатрицыНаценокСостав.Цена_500_1000
			               |						КОГДА Партии.ЦенаЗакуп > 1000
			               |								И Партии.ЦенаЗакуп <= 3000
			               |							ТОГДА МатрицыНаценокСостав.Цена_1000_3000
			               |						КОГДА Партии.ЦенаЗакуп > 3000
			               |								И Партии.ЦенаЗакуп <= 5000
			               |							ТОГДА МатрицыНаценокСостав.Цена_3000_5000
			               |						КОГДА Партии.ЦенаЗакуп > 5000
			               |							ТОГДА МатрицыНаценокСостав.Цена_5000_1000000
			               |						ИНАЧЕ 0
			               |					КОНЕЦ, 0) / 100) КАК ЧИСЛО(15, 2))
			               |	КОНЕЦ КАК ЦенаПоМатрице,
			               |	ЕСТЬNULL(ВЫБОР
						   |			КОГДА Партии.ЦенаЗакуп <= 20
						   |				ТОГДА МатрицыНаценокСостав.Цена_0_20
						   |			КОГДА Партии.ЦенаЗакуп > 20
						   |					И Партии.ЦенаЗакуп <= 50
			               |				ТОГДА МатрицыНаценокСостав.Цена_20_50
			               |			КОГДА Партии.ЦенаЗакуп > 50
			               |					И Партии.ЦенаЗакуп <= 200
			               |				ТОГДА МатрицыНаценокСостав.Цена_50_200
			               |			КОГДА Партии.ЦенаЗакуп > 200
			               |					И Партии.ЦенаЗакуп <= 500
			               |				ТОГДА МатрицыНаценокСостав.Цена_200_500
			               |			КОГДА Партии.ЦенаЗакуп > 500
			               |					И Партии.ЦенаЗакуп <= 1000
			               |				ТОГДА МатрицыНаценокСостав.Цена_500_1000
			               |			КОГДА Партии.ЦенаЗакуп > 1000
			               |					И Партии.ЦенаЗакуп <= 3000
			               |				ТОГДА МатрицыНаценокСостав.Цена_1000_3000
			               |			КОГДА Партии.ЦенаЗакуп > 3000
			               |					И Партии.ЦенаЗакуп <= 5000
			               |				ТОГДА МатрицыНаценокСостав.Цена_3000_5000
			               |			КОГДА Партии.ЦенаЗакуп > 5000
			               |				ТОГДА МатрицыНаценокСостав.Цена_5000_1000000
			               |			ИНАЧЕ 0
			               |		КОНЕЦ, 0) КАК ПроцентПоМатрицеНаценок,
			               |	ЕСТЬNULL(МатрицыНаценокТМ.Наценка, 0) КАК ПроцентПоМатрицеТМ,
			               |	ВЫБОР
			               |		КОГДА МатрицыНаценокТМ.Наценка ЕСТЬ NULL
			               |			ТОГДА 0
			               |		ИНАЧЕ ВЫРАЗИТЬ(Партии.ЦенаЗакуп * (1 + ЕСТЬNULL(МатрицыНаценокТМ.Наценка, 0) / 100) КАК ЧИСЛО(15, 2))
			               |	КОНЕЦ КАК ЦенаПоМатрицеТМ
			               |ИЗ
			               |	Документ.УЗ_Перемещение.Товар КАК ТЧ
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			               |		ПО ТЧ.КодПартииПолучателя = Партии.Код
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МатрицыНаценок.Состав КАК МатрицыНаценокСостав
			               |		ПО ТЧ.Товар.Спрос = МатрицыНаценокСостав.Спрос
			               |			И ТЧ.Товар.НоваяКатегория = МатрицыНаценокСостав.НоваяКатегория
			               |			И (МатрицыНаценокСостав.Ссылка = &МатрицаНаценок)
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МатрицыНаценокТМ.Состав КАК МатрицыНаценокТМ
			               |		ПО ТЧ.Товар.Бренд = МатрицыНаценокТМ.Бренд
			               |			И (МатрицыНаценокТМ.Ссылка = &МатрицаНаценокТМ)
			               |ГДЕ
			               |	ТЧ.Ссылка = &Документ";		
		КонецЕсли;
		
	ИначеЕсли  ИмяДокумента = "УстановкаРозничныхЦен" Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	ТЧ.КодТовара КАК КодТовара,
			               |	ТЧ.КодПартии КАК КодПартии,
			               |	ТЧ.Коэфф КАК Коэфф,
			               |	ТЧ.КоэффициентРазбивки КАК КоэффициентРазбивки,
			               |	ТЧ.Товар КАК Товар,
			               |	ТЧ.Количество КАК Количество,
			               |	Партии.СрокГодности КАК СрокГодности,
			               |	Партии.ЦенаГосРегистрации КАК ЦенаГосРегистрации,
			               |	Партии.ЦенаЗакуп КАК ЦенаЗакуп,
			               |	ВЫРАЗИТЬ(Партии.ЦенаЗакуп / (1 + Партии.СтавкаНДСЗакуп / 100) КАК ЧИСЛО(15, 2)) КАК ЦенаЗакупБезНДС,
			               |	Партии.ЦенаПроизводителяБезНДС КАК ЦенаПроизводителя,
			               |	Партии.СтавкаНДСРозн КАК СтавкаНДС,
			               |	ВЫБОР
			               |		КОГДА МатрицыНаценокСостав.Ссылка ЕСТЬ NULL
			               |			ТОГДА 0
			               |		ИНАЧЕ ВЫРАЗИТЬ(Партии.ЦенаЗакуп * (1 + ЕСТЬNULL(ВЫБОР
						   |						КОГДА Партии.ЦенаЗакуп <= 20
						   |							ТОГДА МатрицыНаценокСостав.Цена_0_20
						   |						КОГДА Партии.ЦенаЗакуп > 20
						   |								И Партии.ЦенаЗакуп <= 50
			               |							ТОГДА МатрицыНаценокСостав.Цена_20_50
			               |						КОГДА Партии.ЦенаЗакуп > 50
			               |								И Партии.ЦенаЗакуп <= 200
			               |							ТОГДА МатрицыНаценокСостав.Цена_50_200
			               |						КОГДА Партии.ЦенаЗакуп > 200
			               |								И Партии.ЦенаЗакуп <= 500
			               |							ТОГДА МатрицыНаценокСостав.Цена_200_500
			               |						КОГДА Партии.ЦенаЗакуп > 500
			               |								И Партии.ЦенаЗакуп <= 1000
			               |							ТОГДА МатрицыНаценокСостав.Цена_500_1000
			               |						КОГДА Партии.ЦенаЗакуп > 1000
			               |								И Партии.ЦенаЗакуп <= 3000
			               |							ТОГДА МатрицыНаценокСостав.Цена_1000_3000
			               |						КОГДА Партии.ЦенаЗакуп > 3000
			               |								И Партии.ЦенаЗакуп <= 5000
			               |							ТОГДА МатрицыНаценокСостав.Цена_3000_5000
			               |						КОГДА Партии.ЦенаЗакуп > 5000
			               |							ТОГДА МатрицыНаценокСостав.Цена_5000_1000000
			               |						ИНАЧЕ 0
			               |					КОНЕЦ, 0) / 100) КАК ЧИСЛО(15, 2))
			               |	КОНЕЦ КАК ЦенаПоМатрице,
			               |	ЕСТЬNULL(ВЫБОР
						   |			КОГДА Партии.ЦенаЗакуп <= 20
						   |				ТОГДА МатрицыНаценокСостав.Цена_0_20
						   |			КОГДА Партии.ЦенаЗакуп > 20
						   |					И Партии.ЦенаЗакуп <= 50
			               |				ТОГДА МатрицыНаценокСостав.Цена_20_50
			               |			КОГДА Партии.ЦенаЗакуп > 50
			               |					И Партии.ЦенаЗакуп <= 200
			               |				ТОГДА МатрицыНаценокСостав.Цена_50_200
			               |			КОГДА Партии.ЦенаЗакуп > 200
			               |					И Партии.ЦенаЗакуп <= 500
			               |				ТОГДА МатрицыНаценокСостав.Цена_200_500
			               |			КОГДА Партии.ЦенаЗакуп > 500
			               |					И Партии.ЦенаЗакуп <= 1000
			               |				ТОГДА МатрицыНаценокСостав.Цена_500_1000
			               |			КОГДА Партии.ЦенаЗакуп > 1000
			               |					И Партии.ЦенаЗакуп <= 3000
			               |				ТОГДА МатрицыНаценокСостав.Цена_1000_3000
			               |			КОГДА Партии.ЦенаЗакуп > 3000
			               |					И Партии.ЦенаЗакуп <= 5000
			               |				ТОГДА МатрицыНаценокСостав.Цена_3000_5000
			               |			КОГДА Партии.ЦенаЗакуп > 5000
			               |				ТОГДА МатрицыНаценокСостав.Цена_5000_1000000
			               |			ИНАЧЕ 0
			               |		КОНЕЦ, 0) КАК ПроцентПоМатрицеНаценок,
			               |	ЕСТЬNULL(МатрицыНаценокТМ.Наценка, 0) КАК ПроцентПоМатрицеТМ,
			               |	ВЫБОР
			               |		КОГДА МатрицыНаценокТМ.Наценка ЕСТЬ NULL
			               |			ТОГДА 0
			               |		ИНАЧЕ ВЫРАЗИТЬ(Партии.ЦенаЗакуп * (1 + ЕСТЬNULL(МатрицыНаценокТМ.Наценка, 0) / 100) КАК ЧИСЛО(15, 2))
			               |	КОНЕЦ КАК ЦенаПоМатрицеТМ
			               |ИЗ
			               |	Документ.УстановкаРозничныхЦен.Товар КАК ТЧ
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			               |		ПО ТЧ.КодПартии = Партии.Код
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МатрицыНаценок.Состав КАК МатрицыНаценокСостав
			               |		ПО ТЧ.Товар.Спрос = МатрицыНаценокСостав.Спрос
			               |			И ТЧ.Товар.НоваяКатегория = МатрицыНаценокСостав.НоваяКатегория
			               |			И (МатрицыНаценокСостав.Ссылка = &МатрицаНаценок)
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МатрицыНаценокТМ.Состав КАК МатрицыНаценокТМ
			               |		ПО ТЧ.Товар.Бренд = МатрицыНаценокТМ.Бренд
			               |			И (МатрицыНаценокТМ.Ссылка = &МатрицаНаценокТМ)
			               |ГДЕ
			               |	ТЧ.Ссылка = &Документ";
			
	ИначеЕсли  ИмяДокумента = "ПереоценкаПоКачеству" Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	ТЧ.КодТовара КАК КодТовара,
			               |	ТЧ.КодПартии КАК КодПартии,
			               |	ТЧ.Коэфф КАК Коэфф,
			               |	ТЧ.КоэффициентРазбивки КАК КоэффициентРазбивки,
			               |	ТЧ.Товар КАК Товар,
			               |	ТЧ.Количество КАК Количество,
			               |	Партии.СрокГодности КАК СрокГодности,
			               |	Партии.ЦенаГосРегистрации КАК ЦенаГосРегистрации,
			               |	Партии.ЦенаЗакуп КАК ЦенаЗакуп,
			               |	ВЫРАЗИТЬ(Партии.ЦенаЗакуп / (1 + Партии.СтавкаНДСЗакуп / 100) КАК ЧИСЛО(15, 2)) КАК ЦенаЗакупБезНДС,
			               |	Партии.ЦенаПроизводителяБезНДС КАК ЦенаПроизводителя,
			               |	Партии.СтавкаНДСРозн КАК СтавкаНДС,
			               |	ВЫБОР
			               |		КОГДА МатрицыНаценокСостав.Ссылка ЕСТЬ NULL
			               |			ТОГДА 0
			               |		ИНАЧЕ ВЫРАЗИТЬ(Партии.ЦенаЗакуп * (1 + ЕСТЬNULL(ВЫБОР
						   |						КОГДА Партии.ЦенаЗакуп <= 20
						   |							ТОГДА МатрицыНаценокСостав.Цена_0_20
						   |						КОГДА Партии.ЦенаЗакуп > 20
						   |								И Партии.ЦенаЗакуп <= 50
			               |							ТОГДА МатрицыНаценокСостав.Цена_20_50
			               |						КОГДА Партии.ЦенаЗакуп > 50
			               |								И Партии.ЦенаЗакуп <= 200
			               |							ТОГДА МатрицыНаценокСостав.Цена_50_200
			               |						КОГДА Партии.ЦенаЗакуп > 200
			               |								И Партии.ЦенаЗакуп <= 500
			               |							ТОГДА МатрицыНаценокСостав.Цена_200_500
			               |						КОГДА Партии.ЦенаЗакуп > 500
			               |								И Партии.ЦенаЗакуп <= 1000
			               |							ТОГДА МатрицыНаценокСостав.Цена_500_1000
			               |						КОГДА Партии.ЦенаЗакуп > 1000
			               |								И Партии.ЦенаЗакуп <= 3000
			               |							ТОГДА МатрицыНаценокСостав.Цена_1000_3000
			               |						КОГДА Партии.ЦенаЗакуп > 3000
			               |								И Партии.ЦенаЗакуп <= 5000
			               |							ТОГДА МатрицыНаценокСостав.Цена_3000_5000
			               |						КОГДА Партии.ЦенаЗакуп > 5000
			               |							ТОГДА МатрицыНаценокСостав.Цена_5000_1000000
			               |						ИНАЧЕ 0
			               |					КОНЕЦ, 0) / 100) КАК ЧИСЛО(15, 2))
			               |	КОНЕЦ КАК ЦенаПоМатрице,
			               |	ЕСТЬNULL(ВЫБОР
						   |			КОГДА Партии.ЦенаЗакуп <= 20
						   |				ТОГДА МатрицыНаценокСостав.Цена_0_20
						   |			КОГДА Партии.ЦенаЗакуп > 20
						   |					И Партии.ЦенаЗакуп <= 50
			               |				ТОГДА МатрицыНаценокСостав.Цена_20_50
			               |			КОГДА Партии.ЦенаЗакуп > 50
			               |					И Партии.ЦенаЗакуп <= 200
			               |				ТОГДА МатрицыНаценокСостав.Цена_50_200
			               |			КОГДА Партии.ЦенаЗакуп > 200
			               |					И Партии.ЦенаЗакуп <= 500
			               |				ТОГДА МатрицыНаценокСостав.Цена_200_500
			               |			КОГДА Партии.ЦенаЗакуп > 500
			               |					И Партии.ЦенаЗакуп <= 1000
			               |				ТОГДА МатрицыНаценокСостав.Цена_500_1000
			               |			КОГДА Партии.ЦенаЗакуп > 1000
			               |					И Партии.ЦенаЗакуп <= 3000
			               |				ТОГДА МатрицыНаценокСостав.Цена_1000_3000
			               |			КОГДА Партии.ЦенаЗакуп > 3000
			               |					И Партии.ЦенаЗакуп <= 5000
			               |				ТОГДА МатрицыНаценокСостав.Цена_3000_5000
			               |			КОГДА Партии.ЦенаЗакуп > 5000
			               |				ТОГДА МатрицыНаценокСостав.Цена_5000_1000000
			               |			ИНАЧЕ 0
			               |		КОНЕЦ, 0) КАК ПроцентПоМатрицеНаценок,
			               |	ЕСТЬNULL(МатрицыНаценокТМ.Наценка, 0) КАК ПроцентПоМатрицеТМ,
			               |	ВЫБОР
			               |		КОГДА МатрицыНаценокТМ.Наценка ЕСТЬ NULL
			               |			ТОГДА 0
			               |		ИНАЧЕ ВЫРАЗИТЬ(Партии.ЦенаЗакуп * (1 + ЕСТЬNULL(МатрицыНаценокТМ.Наценка, 0) / 100) КАК ЧИСЛО(15, 2))
			               |	КОНЕЦ КАК ЦенаПоМатрицеТМ
			               |ИЗ
			               |	Документ.ПереоценкаПоКачеству.Товар КАК ТЧ
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			               |		ПО ТЧ.КодПартии = Партии.Код
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МатрицыНаценок.Состав КАК МатрицыНаценокСостав
			               |		ПО ТЧ.Товар.Спрос = МатрицыНаценокСостав.Спрос
			               |			И ТЧ.Товар.НоваяКатегория = МатрицыНаценокСостав.НоваяКатегория
			               |			И (МатрицыНаценокСостав.Ссылка = &МатрицаНаценок)
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МатрицыНаценокТМ.Состав КАК МатрицыНаценокТМ
			               |		ПО ТЧ.Товар.Бренд = МатрицыНаценокТМ.Бренд
			               |			И (МатрицыНаценокТМ.Ссылка = &МатрицаНаценокТМ)
			               |ГДЕ
			               |	ТЧ.Ссылка = &Документ";		
	КонецЕсли;
	Запрос.УстановитьПараметр("Документ",Документ);
	Запрос.УстановитьПараметр("МатрицаНаценок",МатрицаНаценок);
	Запрос.УстановитьПараметр("МатрицаНаценокТМ",МатрицаНаценокТМ);

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция УЗ_Расценить(ПараметрыРасценки = Неопределено) Экспорт
	
	Перем СокрСтр;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("Результат",Ложь);
	СтруктураРезультата.Вставить("Комментарий","");
    СтруктураРезультата.Вставить("КоличествоОшибокРасценки",0);

	Если ПараметрыРасценки = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	Авторасценка				= ПараметрыРасценки.Авторасценка ;
	Склад						= ПараметрыРасценки.Склад;
	Документ					= ПараметрыРасценки.Документ ;
	ТипДокумента				= ПараметрыРасценки.ТипДокумента ;
	ВидДокумента				= ПараметрыРасценки.ВидДокумента ;
	ФормироватьКомментарий		= ПараметрыРасценки.Комментировать;
	ВыводитьНеРасцененные		= ПараметрыРасценки.ВыводитьНеРасцененные;
	Регион						= ПараметрыРасценки.Регион;
	МатрицаНаценок				= Регион.МатрицаНаценок;
	МатрицаНаценокТМ			= Регион.МатрицаНаценокТМ;
	СубъектРФ					= Склад.СубъектРФ;
	МинимальныйПроцентНаценкиКромеТопов = ПараметрыРасценки.МинимальныйПроцентНаценкиКромеТопов;
	ЗаписыватьЦеныВРегистрЦен	= ПараметрыРасценки.ЗаписыватьЦеныВРегистрЦен;
	УстановитьрозничныеЦеныВДокументе = ПараметрыРасценки.УстановитьрозничныеЦеныВДокументе;
	ИспользоватьЦеныКонкурентов = ПараметрыРасценки.ИспользоватьЦеныКонкурентов;
	ПроверятьЗакупкуИРозницу	= ПараметрыРасценки.ПроверятьЗакупкуИРозницу;
	ВнутреннееПеремещение		= Ложь;
	ВидФиксЦены					= Склад.ВидФиксЦены.Код;
	ЭтоИнтернетНакладная		= Ложь; //Далее переопределим , если надо будет
	
	Конкурент = Справочники.АптекиКонкуренты.Выбрать(,Склад);
	Если Конкурент.Следующий() Тогда
		ЕстьКонкурент = Истина;  //Данная переменная будет использована в алгоритмах ценообразования
	Иначе
		ЕстьКонкурент = Ложь;
	КонецЕсли;
	//Если ПараметрыРасценки.Свойство("РазрешитьРозничнуюЦенуНижеЗакупочной") = Ложь Тогда
	//	РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь;
	//Иначе
	//	РазрешитьРозничнуюЦенуНижеЗакупочной=ПараметрыРасценки.РазрешитьРозничнуюЦенуНижеЗакупочной;
	//КонецЕсли;
	РазрешитьРозничнуюЦенуНижеЗакупочной = Константы.РазрешатьРасценкуВМинус.Получить();
	
	Если ПараметрыРасценки.Свойство("СвойПоставщик") = Ложь Тогда
		СвойПоставщик = Ложь;
	Иначе
		СвойПоставщик = ПараметрыРасценки.СвойПоставщик;
	КонецЕсли;
	
	Если ПараметрыРасценки.Свойство("ИгнорироватьПревышенияЗакупочнойЦены") = Истина Тогда
		ИгнорироватьПревышенияЗакупочнойЦены = ПараметрыРасценки.ИгнорироватьПревышенияЗакупочнойЦены;
	Иначе
		ИгнорироватьПревышенияЗакупочнойЦены = Ложь;
	КонецЕсли;

	ДатаДок=Документ.Дата;
	ИмяДок = Документ.МЕТАДАННЫЕ().Имя;
	Если ИмяДок = "УЗ_ПоступлениеТовара" Тогда
		ДатаВхДок = Документ.ВхДатаНакл;
		Если ДатаВхДок = Дата(1,1,1) Тогда
			ДатаВхДок = ДатаДок;
		КонецЕсли;
		Если Документ.ТипНакладной = Перечисления.ТипыНакладной.ИндивидуальныйЗаказ или Документ.ТипНакладной = Перечисления.ТипыНакладной.ИнтернетЗаказ Тогда
			ЭтоИнтернетНакладная = Истина;
		КонецЕсли;
	Иначе
		ДатаВхДок = ДатаДок;
	КонецЕсли;	
	
	Если ИмяДок = "УЗ_Перемещение" Тогда
		ВнутреннееПеремещение = Документ.ВнутреннееПеремещение;	
	КонецЕсли;
	
	
	НачалоРасценки=ТекущаяДата();
	
	
	СтруктураРезультата.КоличествоОшибокРАсценки=0;
	
	Макет=ПолучитьОбщийМакет("РасценкаКомментарий");
	
	Таб	= СоздатьТабличныйДокумент(Макет);
	ТП	= СоздатьТаблицуРезультата(Авторасценка);
	ДО	= СоздатьДеревоОшибок();
	
	Корень=ДО.Строки.Добавить();
	Корень.Ошибки="Расценка документа ";
	
	ТЧТовар= УЗ_ПолучитьТаблицуДокументаДляРасценки(Документ,ИмяДок,ВнутреннееПеремещение,МатрицаНаценок,МатрицаНаценокТМ);//Документ.Товар.Выгрузить(); //ЭтаФорма.ВладелецФормы.Товар;
	
	ТЗКосяков = Новый ТаблицаЗначений;
	ТЗКосяков.Колонки.Добавить("КодПартии");
	ТЗКосяков.Колонки.Добавить("Товар");
	ТЗКосяков.Колонки.Добавить("Косяк");
	ТЗКосяков.Колонки.Добавить("ЦенаПоРасценке");
	
	
	ТЗВМинус = Новый ТаблицаЗначений;
	ТЗВМинус.Колонки.Добавить("КодПартии");
	ТЗВМинус.Колонки.Добавить("Товар");
	ТЗВМинус.Колонки.Добавить("ЦенаЗакуп");
	ТЗВМинус.Колонки.Добавить("ЦенаРозн");
	ТЗВМинус.Колонки.Добавить("Дата");
	ТЗВМинус.Колонки.Добавить("Количество");



	//ТЗКосяков=КонтрольПоЗакупке_Старый(ТЧТовар,Регион,Документ,ТипДокумента,ВидДокумента);
	Если НЕ ИгнорироватьПревышенияЗакупочнойЦены Тогда
		УЗ_ПроверитьПревышениеЗакупочнойЦены(ТЧТовар,Регион,СубъектРФ,Документ,ТипДокумента,ВидДокумента,ТЗКосяков,СвойПоставщик);
	КонецЕсли;

	
	СтруктураРезультата.Вставить("ДеревоОшибок",ДО);
	СтруктураРезультата.Вставить("ТаблицаКомментариев",Таб);
	СтруктураРезультата.Вставить("ТП",ТП);
	СтруктураРезультата.Вставить("ТЗКосяков",ТЗКосяков);

	Если Регион.Пустая() = Истина Тогда
		Косяк=ТЗКосяков.Добавить();
		Косяк.КодПартии=0;
		Косяк.ТОвар="";
		Косяк.Косяк="Для аптеки не задан регион ценообразования";
		СтруктураРезультата.Результат = Ложь;
		СтруктураРезультата.ТЗКосяков = ТЗКосяков;
		Возврат СтруктураРезультата;
	КонецЕсли;
	
	
	ТЗМатрицаОкруглений = ПолучитьМатрицуОкруглений();
	ТЗПредельныхНаценок = ПолучитьтаблицуПредельныхНаценок(СубъектРФ);	
	
	
	ДатаВыходаНаПМ=КонецМесяца(КонецМесяца(СКЛАД.ДатаПерехода)+1);// среднестатистический срок выхода на проектную мощность  через месяц после конца месяца открытия аптеки
	
	
	Курс=1;  // в документе нет реквизита валюта


	
	СтрокаНулевыхЦен=ТЧТовар.Найти(0,"ЦенаЗакуп");
	Если СтрокаНулевыхЦен<> Неопределено Тогда
		Косяк=ТЗКосяков.Добавить();
		Косяк.КодПартии="";
		Косяк.ТОвар="";
		Косяк.Косяк="В документе есть строки с нулевой закупочной ценой!";
		#Если Клиент Тогда
			Сообщить("В документе есть строки с нулевой закупочной ценой! РАСЦЕНИТЬ НЕВОЗМОЖНО! ДОКУМЕНТ НЕ ГОТОВ!");
		#КонецЕсли
		
		
		Если НЕ Документ.Метаданные().ТабличныеЧасти.Найти("ОшибкиРасценки") = Неопределено  Тогда
			ДокументОбъект = Документ.ПолучитьОбъект();
			ОП=ДокументОбъект.ОшибкиРасценки;
			
			Если Константы.БеспределСЖНВЛС.Получить() = Истина Тогда
				
				
				СписокУдаляемыхСтрок=новый СписокЗначений;
				
				Для каждого стр из ОП Цикл
					Если стр.КодПартии = 0 Тогда
						продолжить;
					КонецЕсли;
					СписокУдаляемыхСтрок.Добавить(стр);
				КонецЦикла;
				Для Каждого ССУС из СписокУдаляемыхСтрок цикл
					ОП.Удалить(ССУС.Значение);
				КонецЦикла;	
				
				
			Иначе
				ОП.Очистить();// при каждой расценке перезаполняется. в идеале - пустая.
			КонецЕсли;
			
			ТЗКосяков.Свернуть("КодПартии,Товар,Косяк,ЦенаПоРасценке","");
			
			
			Для каждого Стр из ТЗКосяков Цикл
				СтрОп=ОП.Добавить();
				СтрОП.Товар 	= Стр.Товар;
				СтрОП.КодПартии 	= Стр.КодПартии;
				СтрОП.ОписаниеОшибки= Стр.Косяк;
				СтрОП.ЦенаПоРасценке= Стр.ЦенаПоРасценке;
			КонецЦикла;
			
		КонецЕсли;	
		
		
        ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
        СтруктураРезультата.ТЗКосяков=ТЗКосяков;

		Возврат СтруктураРезультата; // произойдет ошибка расценки. Не расцениваем недоделанный документ
	КонецЕсли; 
	
	Если АвтоРасценка = Ложь и ИспользоватьЦеныКонкурентов = Истина и ПроверятьЗакупкуИРозницу = Истина Тогда
		ТЗЦенКонкурентов = ПолучитьТаблицуЦенКонкурентов(Документ);
	КонецЕсли;
	
	Если ИспользоватьЦеныКонкурентов = Истина Тогда
		ТЗМинимальныхЦенКонкурентов = ПолучитьМинимальныеЦеныКонкурентов(Документ);	
	КонецЕсли;
	
	//ЕстьИндЦены = Ложь;
	//Если Документ.ИндивидуальныеЦены.Количество() > 0 Тогда
	//	ЕстьИндЦены = Истина;
	//КонецЕсли;
	
	СписокСтрокДокумента=ТЧТовар.ВыгрузитьКолонку("Товар");
	СписокКодовТовара = ТЧТовар.ВыгрузитьКолонку("КодТовара");
	
	
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Поиск старых розничных цен...";
	Если ПроверятьЗакупкуИРозницу = Истина Тогда
		ТаблицаСтарыхРознЦен=УЗ_ПолучитьТаблицуСтарыхРозничныхЦен(Склад,СписокСтрокДокумента,Документ,СписокКодовТовара);
	КонецЕсли;
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Старые розн. цены получены.";
	
	
	ЕстьОшибки=Ложь;
	
	//??????????????????????????????????????????????????????????????????????????????????????????????????	
	//????????????????????????? ЭТОТ КУСОК НАДО БУДЕТ ОТРАБОТАТЬ , КОГДА БУДЕТ ГОТОВО ПЕРЕМЕЩЕНИЕ???????
	//??????????????????????????????????????????????????????????????????????????????????????????????????
	//??????????????????????????????????????????????????????????????????????????????????????????????????
	//Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПеремещениеТОвара") Тогда
	//	ТЧТовар.Колонки.Добавить("ЦенаГосРегистрации");
	//	ТЧТовар.Колонки.Добавить("ЦенаПроизводителя");
	//	ТЧТовар.Колонки.Добавить("ЦенаЗакупБезНДС");
	//	ТЧТовар.ЗаполнитьЗначения(0,"ЦенаГосРегистрации");
	//	
	//	Для каждого СтрТЧТовар из ТЧТовар Цикл
	//		СтрТЧТовар.ЦенаЗакупБезНДС= СтрТЧТовар.ЦенаЗакуп - ОМ3_НДСИзСуммыПоСтавке (СтрТЧТовар.ЦенаЗакуп,СтрТЧТовар.СтавкаНДС);
	//		СтрТЧТовар.ЦенаПроизводителя=СтрТЧТовар.Партия.ЦенаПроизводителяБезНДС;
	//		СтрТЧТовар.ЦенаГосРегистрации = СтрТЧТовар.Партия.ЦенаГосРегистрации;
	//		СтрТЧТовар.ЦенаЗакупБезНДС = Окр(СтрТЧТовар.ЦенаЗакуп/(1+СтрТЧТовар.СтавкаНДС.Ставка/100),2);
	//	КонецЦикла;	
	//КонецЕсли;
	//??????????????????????????????????????????????????????????????????????????????????????????????????
	//??????????????????????????????????????????????????????????????????????????????????????????????????
	//??????????????????????????????????????????????????????????????????????????????????????????????????
	
	ТЧ = ТЧТовар.Скопировать(,"КодТовара,Товар,КодПартии,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС,ЦенаПоМатрице, ПроцентПоМатрицеНаценок,ЦенаПоМатрицеТМ, ПроцентПоМатрицеТМ"); //ЭВФ.Товар.Выгрузить();

	ТЧ.Свернуть("КодТовара,Товар,КодПартии,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС,ЦенаПоМатрице, ПроцентПоМатрицеНаценок,ЦенаПоМатрицеТМ, ПроцентПоМатрицеТМ","");
	
	СписокРегионов = Новый СписокЗначений;
	СписокРегионов.Добавить(Регион);
	
	Для каждого СтрРег из СписокРегионов цикл // ПО РЕГИОНАМ
				
		ТекРегион=СтрРег.Значение;
		
		Если ТекРегион.ПометкаУдаления=Истина ТОгда
			ПРодолжить; // Удаленные регионы НЕ обрабатываем!
		КонецЕсли; 
		
		ВеткаРегион=Корень.Строки.Добавить();
		ВеткаРегион.Ошибки="по Региону   "+ТекРегион;
		
		КомментаторРасчета  (Неопределено,Таб,Макет,"Регион",Новый Структура("Регион",ТекРегион),ФормироватьКомментарий);
		
		
		//------------------<Получим алогоритмы ценообразования из справочников>-------------------GtG----16.11.2007
		//Регион
		//	Алгоритмы ценообразования
		//		УСЛОВИЯ ПРИМЕНЕНИЯ АЛГОРИТМОВ
		// Выборку строим начиная с конца (УПА)
		ТХТ="ВЫБРАТЬ
		    |	УсловияАлгоритма.ЛеваяЧасть,
		    |	УсловияАлгоритма.ТипУсловия,
		    |	УсловияАлгоритма.ПраваяЧасть,
		    |	УсловияАлгоритма.ОбъединятьСоСледующим,
		    |	УсловияАлгоритма.ПорядокФормированияУсловия КАК ПорядокФормированияУсловия,
		    |	УсловияАлгоритма.Ссылка.Приоритет КАК Приоритет,
		    |	УсловияАлгоритма.Ссылка.ДатаС,
		    |	УсловияАлгоритма.Ссылка.ДатаПо,
		    |	УсловияАлгоритма.Ссылка.МинПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.МаксПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаЦены,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаПроцентаНаценки,
		    |	УсловияАлгоритма.Ссылка.Ссылка КАК АлгоритмСсылка,
		    |	УсловияАлгоритма.ОткрывающаяСкобка КАК ОСК,
		    |	УсловияАлгоритма.ЗакрывающаяСкобка КАК ЗСК,
			|	УсловияАлгоритма.ПраваяЧастьХЗ
		    |ИЗ
		    |	Справочник.АлгоритмыЦенообразованияРегионов.УсловияПрименения КАК УсловияАлгоритма
		    |ГДЕ
		    |	УсловияАлгоритма.Ссылка.Владелец = &Регион
		    |	И &ДатаДок МЕЖДУ УсловияАлгоритма.Ссылка.ДатаС И УсловияАлгоритма.Ссылка.ДатаПо
		    |	И УсловияАлгоритма.Ссылка.ДляВсехАптек = ИСТИНА
		    |
		    |ОБЪЕДИНИТЬ ВСЕ
		    |
		    |ВЫБРАТЬ
		    |	УсловияАлгоритма.ЛеваяЧасть,
		    |	УсловияАлгоритма.ТипУсловия,
		    |	УсловияАлгоритма.ПраваяЧасть,
		    |	УсловияАлгоритма.ОбъединятьСоСледующим,
		    |	УсловияАлгоритма.ПорядокФормированияУсловия,
		    |	УсловияАлгоритма.Ссылка.Приоритет,
		    |	УсловияАлгоритма.Ссылка.ДатаС,
		    |	УсловияАлгоритма.Ссылка.ДатаПо,
		    |	УсловияАлгоритма.Ссылка.МинПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.МаксПроцНаценки,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаЦены,
		    |	УсловияАлгоритма.Ссылка.ФормулаРасчетаПроцентаНаценки,
		    |	УсловияАлгоритма.Ссылка.Ссылка,
		    |	УсловияАлгоритма.ОткрывающаяСкобка,
		    |	УсловияАлгоритма.ЗакрывающаяСкобка,
			|	УсловияАлгоритма.ПраваяЧастьХЗ
		    |ИЗ
		    |	Справочник.АлгоритмыЦенообразованияРегионов.УсловияПрименения КАК УсловияАлгоритма
		    |ГДЕ
		    |	УсловияАлгоритма.Ссылка В
		    |			(ВЫБРАТЬ
		    |				ПодключенныеАптеки.Ссылка
		    |			ИЗ
		    |				Справочник.АлгоритмыЦенообразованияРегионов.ПодключенныеАптеки КАК ПодключенныеАптеки
		    |			ГДЕ
		    |				ПодключенныеАптеки.Ссылка.Владелец = &Регион
		    |				И ПодключенныеАптеки.Склад = &Склад
		    |				И &ДатаДок МЕЖДУ ПодключенныеАптеки.Ссылка.ДатаС И ПодключенныеАптеки.Ссылка.ДатаПо
		    |				И ПодключенныеАптеки.Ссылка.ДляВсехАптек = ЛОЖЬ)
		    |
		    |УПОРЯДОЧИТЬ ПО
		    |	Приоритет Убыв,
		    |	ПорядокФормированияУсловия";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Склад",Склад);
		Запрос.УстановитьПараметр("Регион",ТекРегион); 
		Запрос.УстановитьПараметр("ДАТАДок",ДатаДок);
		
		ИсходнаяТЗПравил=Запрос.Выполнить().Выгрузить(); // сырые данные
		ИсходнаяТЗПравил.Колонки.Добавить("УсловиеВыполнилось");
		ИсходнаяТЗПРавил.Колонки.Добавить("ВырИтУсл");  // выаржение для вычисления иотгового результата условия примеенния
		
		
		
		Если ИсходнаяТЗПРавил.Количество()=0 ТОгда
			ТекстОшибки=("   По региону  "+ТекРегион+" не задано ни одного алгоритма ценообразования! НЕ РАСЦЕНЕНО! (Задается через справочник регионов.)");
			
			ОшибкаРЕгион=ВеткаРегион.Строки.Добавить();
			ОшибкаРегион.Ошибки=ТекстОшибки;
			СсылкаРегион=ОшибкаРЕгион.Строки.Добавить();
			СсылкаРегион.ошибки=ТекРегион;
			
			КомментаторРасчета  (Неопределено,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион),ФормироватьКомментарий);
			
			СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
			
			Продолжить; // по группам ТТ
		КонецЕсли; 	
		
		ТЗХ=ИсходнаяТЗПРавил.Скопировать(,"Приоритет,АлгоритмСсылка,МинПроцНаценки,МаксПроцНаценки,ФормулаРасчетаЦены,ФормулаРасчетаПроцентаНаценки");
		ТЗХ.Свернуть("Приоритет,АлгоритмСсылка,МинПроцНаценки,МаксПроцНаценки,ФормулаРасчетаЦены,ФормулаРасчетаПроцентаНаценки"); //,ПорядокФормированияУсловия");
		КоличествоАлгоритмов=ТЗХ.Количество();
		
		
		
		//------------------<Собираем из кусочков сложные условия>-------------------GtG----16.11.2007
		ВеткаТовары=ВеткаРегион.Строки.Добавить();
		ВеткаТовары.Ошибки=" Ошибки при расценке товара по региону  ";
		ЕстьОшибкиПоГТТ=Ложь;
		
		
		КоличествоСтрок = ТЧТовар.Количество();
		
		НН=0;
		
		ИсходнаяТЗПРавил.Сортировать("Приоритет Убыв,ПорядокФормированияУсловия");
				
		                                                                    
		ДанныеПоТоварамДокумента = ПолучитьДанныеПоТоварамДокумента(Документ,ВидФиксЦены,ДатаДок); //04-03-2013// ТОВАРЫ ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		ДанныеПоПартиямДокумента = ПолучитьДанныеПоПартиямДокумента(Документ);  //04-03-2013// Партии ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Расчет цен по строкам документа...";
		Для каждого Стр из ТЧТовар Цикл // по строкам документа
			
			ПостОбработкаЦены=Ложь;
			
			ДанныеТекПартии=ДанныеПоПартиямДокумента.Найти(Стр.КодПартии,"КодПартии");// строка тз
			
			
			НН=НН+1;
			
			
			ТОВАР= ДанныеПоТоварамДокумента.найти(Стр.КодТовара,"Код"); // строка ТЗ
			
			МинЦенаКонкурента = 0;
			Если ИспользоватьЦеныКонкурентов = Истина Тогда
				НайденнаяЦена = ТЗМинимальныхЦенКонкурентов.Найти(Стр.КодТовара,"КодТовара");
				Если НЕ НайденнаяЦена = Неопределено Тогда
					МинЦенаКонкурента = НайденнаяЦена.Цена;	
				КонецЕсли;
			КонецЕсли;

			ИндЦена = ТОВАР.ИндЦена;
			ЦенаПоМатрице = стр.ЦенаПоМатрице;
			ПроцентПоМатрицеНаценок = стр.ПроцентПоМатрицеНаценок;
			ЦенаПоМатрицеТМ = стр.ЦенаПоМатрицеТМ;
			ПроцентПоМатрицеТМ = стр.ПроцентПоМатрицеТМ;			
			
			
			//-------------- ЗАПРОС GTG --------------------------КОНЕЦ
			
		    //--------------------------------------------------------GtG----КОНЕЦ--27.11.2008
			
			
			СтрТОвар=Товар.Ссылка;
			СтрТОварКод=Стр.КодТовара;
			
			Если ФормироватьКомментарий Тогда
				КомментаторРасчета  (Товар.Ссылка,Таб,Макет,"Товар",Новый Структура("ТОВар,Расшифровка,ТОВарКод",СтрТОвар,СтрТОвар,СтрТОварКод),ФормироватьКомментарий);
			КонецЕсли;
			
			#Если Клиент Тогда
				Если АвтоРасценка=Ложь ТОгда
					
					Дрыг=цел(КоличествоСтрок/100);
					Если Дрыг=0 тогда Дрыг=1 конецесли;
					
					
					если  НН%Дрыг=0 тогда
						Состояние("расчет " + НН + " из " + КоличествоСтрок);
					КонецЕсли;
					
				КонецЕсли;	
			#КонецЕсли
			
			ВеткаТовар= Неопределено;
			
			//Если Стр.КоличествоФакт=0 тогда
			//	Если ФормироватьКомментарий = Истина Тогда
			//		ТекстОшибки="Расценим, НО Фактическое количество товара равно нулю! ("+СтрТоварКод+")  "+СтрТовар+"    Не РАСЦЕНЕН!";
			//		
			//		ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
			//		ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
			//		ВеткаТОварОш.Ошибки=ТекстОшибки;
			//		
			//		КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
			//	КонецЕсли;
			//	ЕстьОшибкиПоГТТ=Истина;
			//	СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
			//	//Продолжить;
			//КонецЕсли; 
			
			
			
			ТЗПРавил=ИсходнаяТЗПРавил.Скопировать();
			РознЦена=0;
			
			ПредельнаяНадбавкаОпт = 0;
			ПредельнаяНадбавкаРозн = 0;
			ПредельнаяНадбавкаПККНОпт = 0;
			ПредельнаяНадбавкаПККНРозн = 0;			
			Если Товар.ЖНВЛС = Истина Тогда
				Для каждого текнаценка из ТЗПредельныхНаценок Цикл
					Если текнаценка.ЦенаПроизводителяОт < стр.ЦенаПроизводителя  и 	стр.ЦенаПроизводителя <= текнаценка.ЦенаПроизводителяДо Тогда
						ПредельнаяНадбавкаОпт = текнаценка.ПредельнаяНадбавкаОпт;	
						ПредельнаяНадбавкаРозн = текнаценка.ПредельнаяНадбавкаРозн;
						ПредельнаяНадбавкаПККНОпт = текнаценка.ПредельнаяНадбавкаПККНОпт;	
						ПредельнаяНадбавкаПККНРозн = текнаценка.ПредельнаяНадбавкаПККНРозн;						
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			
			//------------------<1) нужны значения всех возможных переменных из алгоритма условий>-------------------GtG----17.11.2007
			//---------------- Товар-------
			//			ТОвар=Стр.Товар;
			//------------------Регион------
			//Регион=ТекРегион;
			
			//------------- ГТТ------
			//ГТТ=ВыбГТТ.Ссылка;
			
			//------------------<строка документа>-------------------GtG----17.11.2007 
			Док=Стр;
			
			//------------------<Единица измерения>-------------------GtG----28.11.2007
			ДокЕитК=Док.Коэфф;  // коэффициент единицы измерения из документа
			КоэффициентОприходования = Док.Коэфф;
			КоэффициентРазбивки = Док.КоэффициентРазбивки;
			
			Если КоэффициентОприходования = 1 и КоэффициентРазбивки > 1 Тогда
				ТоварРасфасован = Истина;
			Иначе
				ТоварРасфасован = Ложь;
			КонецЕсли;
			//ДокЕИТ=Док.Еит;
			
			Если ПроверятьЗакупкуИРозницу = Истина Тогда  //Virus 04.03.2013
				Отбор = Новый Структура();
				//Отбор.Вставить("Регион",Регион);
				Отбор.Вставить("Товар",Товар.Ссылка);
				Строки = ТаблицаСтарыхРознЦен.НайтиСтроки(Отбор);
				Если Строки.Количество() > 0 Тогда
					ПредыдущаяРознЦена = Строки[0].ПрошлаяЦена; //Округлить(Строки[0].ПрошлаяЦена,Перечисления.СпособыОкруглений.До10коп,Перечисления.МетодыОкругления.Отбрасывать);
					Остаток			 =  Строки[0].Остаток;
				Иначе
					ПредыдущаяРознЦена = 0;
					Остаток = 0;
				КонецЕсли;
			Иначе
				ПредыдущаяРознЦена = 0;
				Остаток = 0;
			КонецЕсли;
			
			Если Товар.ЦенаПротокола > 0 Тогда
				Если (ДанныеТекПартии.ЦенаЗакуп - Товар.ЦенаПротокола) > 1 Тогда
						Косяк=ТЗКосяков.Добавить();
						Косяк.КодПартии=Стр.КодПартии;
						Косяк.ТОвар=Стр.Товар;
						Косяк.Косяк="Закупочная цена превышает цену протокола: ЦЗ=" + ДанныеТекПартии.ЦенаЗакуп + " ЦП= " + Товар.ЦенаПротокола;
				КонецЕсли;
			КонецЕсли;
			
			
			Если АвтоРасценка = Ложь и ИспользоватьЦеныКонкурентов = Истина и ПроверятьЗакупкуИРозницу = Истина Тогда
            	//СтрокаЦеныКонкурента = ТЗЦенКонкурентов.Найти(Товар.Ссылка,"Товар");
				СтрокаЦеныКонкурента = ТЗЦенКонкурентов.Найти(Товар.Код,"КодТовара");
			Иначе
				СтрокаЦеныКонкурента = Неопределено;
			КонецЕсли;
			
			СработалХотяБыОдинАлгоритм = Ложь;
			
			ТЗПравил.Колонки.Добавить("РасшифровкаОшибки");
			
			~ПостобработкаЦены:  // безусловный переход сюда, если есть алгоритмы с отрицательным приоритетом.
			
			
			//------------------<Рассчитываем условия по каждой строке условий применения алгоритма>-------------------GtG----17.11.2007 
			// Если условие составное это даст для каждой части ИСТИНА или ЛОЖЬ потом их можно
			// загнать в одно выражение и получить результат
			
			
			
			Для каждого Алгоритм из ТЗХ Цикл
				
				Если ПостОбработкаЦены = Истина Тогда
					Если Алгоритм.Приоритет > 0 Тогда
						Продолжить;
					КонецЕсли;
				Иначе
					Если Алгоритм.Приоритет < 0 Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				
				Отбор = Новый Структура;
				Отбор.Вставить("АлгоритмСсылка",Алгоритм.АлгоритмСсылка);
				Правила = ТЗПРавил.НайтиСтроки(Отбор);
				
				
				ВырИтУсл="";
				
				Для каждого СтрП из Правила Цикл  // по таблице правил
					
					
					Если СтрП.ЗСК=Истина	Тогда
						СтрПУсловиеВыполнилось=")" ;
					ИначеЕсли СтрП.ОСК=Истина Тогда // это скобка "(" или ")"
						СтрПУсловиеВыполнилось="(";
					ИначеЕсли   СтрП.ТипУсловия = "В Списке" Тогда
						
						СтрПУсловиеВыполнилось = Ложь;
						МассивУсловий = СтрП.ПраваяЧастьХЗ.Получить();
						Если НЕ МассивУсловий = Неопределено Тогда
							Рез = Вычислить("МассивУсловий.Найти(" + СтрП.ЛеваяЧасть + ")");
							Если НЕ Рез = Неопределено Тогда
								СтрПУсловиеВыполнилось = Истина;	
							КонецЕсли;
							МассивУсловий = Неопределено;
						КонецЕсли;
						
						
					Иначе// собственно это условие	 
						ЗначениеПРавойЧасти=СтрП.ПраваяЧасть;
						
						
						Если ТипЗнч(ЗначениеПРавойЧасти)=Тип("Строка") Тогда // значит это формула и ее нужно вычислить
							ЗначениеПРавойЧасти =Вычислить( ЗначениеПРавойЧасти );
						КонецЕсли;	
						
						ТХТВычислить=""+СтрП.ЛеваяЧасть+" "+СтрП.ТипУсловия+" ЗначениеПРавойЧасти";
						
						
						Если  СтрП.ТипУсловия="СодЗнач" Тогда // вычисляет сидит ли значение Лева в таблице значений Права
							ТХТВычислить=""+Условие_СодЗнач(Вычислить(СтрП.ЛеваяЧасть),ЗначениеПРавойЧасти)+"";
							
							// ТХТВычислить будет как "Истина" или "Ложь"
						КонецЕсли;
						
						
						
						Попытка
							СтрП.УсловиеВыполнилось=Вычислить(ТХТВычислить);		
						Исключение  //ибо могут накосячить при написании условий
							Комментарий=ОписаниеОшибки()+"
							|Ошибка вычисления выражения. 
							|Алгоритм  "+СтрП.АлгоритмСсылка+"
							|"+СтрП.ЛеваяЧасть+" Условие сравнения "+СтрП.ТипУсловия+" Значение в правой части "+ЗначениеПРавойЧасти; 
							СтруктураРезультата.Комментарий = Комментарий;
							СтруктураРезультата.ТЗКосяков=ТЗКосяков;
							#Если Клиент Тогда
								ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТОвар);
								ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
								ВеткаТОварОш.Ошибки=Комментарий;
								
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
								
								ВызватьИсключение Комментарий;
							#Иначе
								Возврат СтруктураРезультата; // точно! - накосячили.
							#КонецЕсли
						КонецПопытки ;
						
						
						
						Если СтрП.УсловиеВыполнилось=Ложь Тогда
							СтрП.РасшифровкаОшибки="Не выполнилось условие "+ТХТВычислить;// СтрЗаменить(ТХТВычислить,"ЗначениеПРавойЧасти",ЗначениеПРавойЧасти);//+", а по товару "+Вычислить(СтрП.ЛеваяЧасть);
						КонецЕсли; 
						

						СтрПУсловиеВыполнилось =СтрП.УсловиеВыполнилось;

						
					КонецЕсли;	
						
					СтрП.ВырИтУсл=ВырИтУсл+" "+СтрПУсловиеВыполнилось+" "+СтрП.ОбъединятьСоСледующим;
					ВырИтУсл= СтрП.ВырИтУсл;// в последней строке сложного условия оно соберется все целиком
						
					 
					
				КонецЦикла;
				
				Попытка
					РезультатВычисления = Вычислить(ВырИтУсл);
				Исключение
					РезультатВычисления = Ложь;
				КонецПопытки;
				
				Если РезультатВычисления = Ложь Тогда
					//Уходим, так как не сработали условия по данному алгоритму
					Продолжить;
				Иначе
					СработалХотяБыОдинАлгоритм = Истина;
				КонецЕсли;

				Попытка 
					
					Если ПостОбработкаЦены = Истина Тогда
						//Цена_Розничная = Цена_Розничная/ДокЕитК;
					КонецЕсли;					
					
					//------------------<МОМЕНТ с ценами из АП>--------------------------------GtG----28.11.2007
					// Расчет цены на 1 минимальную единицу
					// Цены если из основного ап считаем заданными на единицу по умолчанию (делим на еёйный К)
					// Если цена задана из АПГТТ то там должна быть ЕИТ на которую задана цена (делим на еёйный К), 
					//
					// Получившуюся Розн цену * на К по документу
					//
					// В РЕГИСТРЕ ЦЕН ХРАНИМ ЦЕНУ В РАСЧЕТЕ НА К=1 ! ДАЛЕЕ ВЕЗДЕ ЕЕ МНОЖИМ НА К ЕДИНИЦЫ
					//
					//------------------<--------------------->--------------------------------GtG----28.11.2007
					
					ФормулаДляРасчетаЦены= Алгоритм.ФормулаРасчетаЦены;
					ФормулаДляРасчетаПроцНац=Алгоритм.ФормулаРасчетаПроцентаНаценки;
					
					
					//ФормулаДляРасчетаЦены=ПравильнаяФормулаРасчета(ФормулаДляРасчетаЦены);
					//ФормулаДляРасчетаПроцНац=ПравильнаяФормулаРасчета(ФормулаДляРасчетаПроцНац);
					
					
					Цена_Розничная=Вычислить(ФормулаДляРасчетаЦены); // цена за упаковку 
					
					
					Цена_Розничная=ОМ3_ОтброситьДо10Коп(Цена_Розничная);
					//--- потом при расчете границ наценки обкорнается в меньшую сторону
					Если ФормироватьКомментарий = Истина Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаДляРасчетаЦены,Алгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
					КонецЕсли;
					
				Исключение
					
					
					//Начало добавил 19.11.2012  Васильченко
					Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
						//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
						
						
						
						Цена_Розничная=0;
						СтрТП=Тп.Добавить();
						СтрТП.ТОвар=СтрТОвар; //ссылка
						СтрТП.КодТовара=Товар.Код;
						СтрТП.ЖНВЛС=Товар.ЖНВЛС;						
						СтрТП.КодПартии=ДанныеТекПартии["КодПартии"];
						СтрТП.СтавкаНДС=ДанныеТекПартии["СтавкаНДС"];
						//СтрТП.ЕИТ=Док.Еит;
						СтрТП.КоэффЕит=КоэффициентРазбивки;
						СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителя"];
						СтрТП.ЦенаГосРег=ДанныеТекПартии["ЦенаГосРегистрации"];
						СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
						СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
						
						СтрТП.Топ100=Товар.Топ100;
						СтрТП.Топ1000=ТОвар.Топ1000;
						
						СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
						СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
						СтрТП.Регион  =ТекРегион;
						СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
						
						СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителя"],Цена_Розничная);
						СтрТП.НН=НН;
						СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
						СтрТП.Остаток = Остаток;
						
						СтрТП.ИндЦена = ИндЦена;
						СтрТП.ТоварРасфасован = ТоварРасфасован;
						СтрТП.ЦенаПоМатрице = стр.ЦенаПоМатрице;
						СтрТП.ПроцентПоМатрицеНаценок = стр.ПроцентПоМатрицеНаценок;
						СтрТП.ЦенаПоМатрицеТМ = стр.ЦенаПоМатрицеТМ;
						СтрТП.ПроцентПоМатрицеТМ = стр.ПроцентПоМатрицеТМ;						
						Если Товар.ЖНВЛС = Истина или ИндЦена > 0 или ЭтоИнтернетНакладная или НЕ ДанныеТекПартии["КачествоТовара"] = "" Тогда
							СтрТП.ЭтоИндивидуальнаяЦена = Истина;
						Иначе
							СтрТП.ЭтоИндивидуальнаяЦена = Ложь;
						КонецЕсли;
						
						
						Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
							СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
							//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
							СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
						КонецЕсли;

						

					КонецЕсли;					
					//Конец добавил 19.11.2012  Васильченко
					
					Если ФормироватьКомментарий = Истина Тогда
						ТекстОшибки="Ошибка при расчете розничной цены:";
						ООШ=ОписаниеОшибки();
						
						
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);	
						
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаЦены),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
					ЕстьОшибкиПоГТТ=Истина;
					
					СработалХотяБыОдинАлгоритм = Ложь;
					
					Прервать;								
				КонецПопытки;
				
				Попытка 
					пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),4,РежимОкругления.Окр15как20); // В большую СТОРОНУ!  
					
					Если ФормироватьКомментарий = Истина Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
					КонецЕсли;
				Исключение
					
					Если ФормироватьКомментарий = Истина Тогда
						ТекстОшибки="Ошибка при расчете процента наценки:";
						ООШ=ОписаниеОшибки();
						
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаПроцНац),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
					
					ЕстьОшибкиПоГТТ = Истина;
					СработалХотяБыОдинАлгоритм = Ложь;
					
					Прервать;									
					
				КонецПопытки;
				
				МинПроцНаценки=Вычислить(Алгоритм.МинПроцНаценки);
				
				МаксПроцНаценки=Вычислить(Алгоритм.МаксПроцНаценки);
				
				УстановитьПризнакИндивидуальнойЦены = Ложь;
				
				//КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки));
				
				Если  ФормироватьКомментарий = Истина Тогда
					Если МинПроцНаценки=0  Тогда
						МинПроцНаценки=Константы.МинимальноДопустимаяНаценка.Получить();
						
						Ахтунг_Дангер=""+ТекРегион+"  "+ТОВар.Наименование+" Не удалось вычислить минимальный процент наценки по формуле "+Алгоритм.МинПроцНаценки+"
						| принимаем = "+МинПроцНаценки+" %";
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);		
						
					КонецЕсли; 	
					
					Если МаксПроцНаценки=0 Тогда
						МаксПроцНаценки=70;
						Ахтунг_Дангер=(""+ТекРегион+"  "+ТОВар.Наименование+" Не удалось вычислить максимальный процент наценки по формуле "+Алгоритм.МаксПроцНаценки+"
						| принимаем = "+МаксПроцНаценки+" %");
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);		
						
						
					КонецЕсли; 	
					
					// прокомментируем новые границы процента наценки
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки), ФормироватьКомментарий);
					
				КонецЕсли;
				
				
				Если  Процент_Наценки>МаксПроцНаценки тогда
					//Зарубим
					Если ФормироватьКомментарий = Истина Тогда
						Ахтунг_Дангер=("Превышение максимального процента наценки! Уменьшаем наценку..."+пРОЦЕНТ_Наценки+">"+МаксПроцНаценки);
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);
					КонецЕсли;
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+МаксПроцНаценки) / (100+Окр(пРОЦЕНТ_Наценки,1)) )";// в меньшую сторону
					// чем больше бы лпроцент наценки тем меньше будет цена( про копейки)
					
					Попытка
						
						
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);// в меньшую сторону (актуально для ЖНВЛС)
						
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,Алгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
						КонецЕсли;
						
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненной цены";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
							
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР),ФормироватьКомментарий);
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
						
					КонецПопытки;
					
					Попытка
						//----------------------------< пересчитаем процент наценки по скорректированной Розничной цене >--------------------------------GtG--- 
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),3,РежимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
						
						
						
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненного процента наценки";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
				ИначеЕсли пРОЦЕНТ_Наценки<МинПроцНаценки Тогда
					
					ЕстьКосякТопа=Ложь;
					
					Если Товар.ФиксированнаяЦена > 0 Тогда
						Если Товар.ФиксированнаяЦена = Цена_Розничная Тогда
							УстановитьПризнакИндивидуальнойЦены = Истина;
						КонецЕсли;
					КонецЕсли;
					
					Если ТОвар.Топ100=Ложь ТОгда
						ПодтягиватьКПроценту= "МинПроцНаценки"; // было  "МаксПроцНаценки";
					Иначе   // Если заниженный процент по ТОП 100 то это - косяк и товар надо возвращать или пересматривать цену на товар в АП
						ПодтягиватьКПроценту="МинПроцНаценки";
						
						//Косяк=ТЗКосяков.Добавить();
						//Косяк.Партия=Стр.Партия;
						//Косяк.ТОвар=Стр.Товар;
						//Косяк.Косяк="ТОП 100! Заниженный процент наценки! Слишком высокая закупка! Вернуть или пересмотреть цену в АП!";
						
						//ЕстьКосякТопа=Истина;
					КонецЕсли;
					
					
					//Подтянем
					Если ФормироватьКомментарий Тогда
						Ахтунг_Дангер=("Заниженный процент наценки! Рассчитываем по "+ПодтягиватьКПроценту+" ..."+пРОЦЕНТ_Наценки+"<"+МинПроцНаценки);
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);
					КонецЕсли;
					
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+"+ПодтягиватьКПроценту+") / (100+пРОЦЕНТ_Наценки) )";// в меньшую сторону  топ 100, в большую остальные 
					
					Попытка
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,Алгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
						КонецЕсли;
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненной цены";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР),ФормироватьКомментарий);
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
					
					Попытка
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),6,режимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненного процента наценки";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					КонецПопытки;
					
					
					Если ЕстьКосякТопа=Истина ТОгда
						Косяк.ЦенаПоРасценке=Цена_Розничная;
					КонецЕсли; 
					
				КонецЕсли;
				
				ЦенаЕд=Цена_Розничная; // для комментатора

				Цена_Розничная = Цена_Розничная/КоэффициентРазбивки;	
				
				//Округление цены по новым правилам из справочника МатрицаОкругления
				Если ТекРегион.ИспользоватьМатрицуОкругления = Истина Тогда
					ПроцентОтклоненияВверх	= неопределено;
					ПроцентОтклоненияВниз	= неопределено;
					ЦенаДоКорректировки = Цена_Розничная;
					Для каждого строкаМО из ТЗМатрицаОкруглений Цикл
						Если (Цена_Розничная >= строкаМО.Цена1 и Цена_Розничная <=строкаМО.Цена2 ) и Товар.ЖНВЛС = строкаМо.ИспользоватьДляЖВ Тогда
							Цена_Розничная = Округлить(Цена_Розничная,строкаМО.СпособОкругления,строкаМО.МетодОкругления);
							Если ФормироватьКомментарий Тогда
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Округление",Новый Структура("СпособОкругления,ЦенаДоОкругления,ЦенаПослеОкругления",строкаМО.СпособОкругления,ЦенаДоКорректировки,Цена_Розничная),ФормироватьКомментарий);
							КонецЕсли;
							//СпособОкругления = строкаМО.СпособОкругления;
							//МетодОкругления = строкаМО.МетодОкругления;	
							ПроцентОтклоненияВверх	= строкаМО.ПроцентОтклоненияВверх;
							ПроцентОтклоненияВниз	= строкаМО.ПроцентОтклоненияВниз;
							Прервать;	
						КонецЕсли;
					КонецЦикла;				
				КонецЕсли;
				
				//==================<Реальная несферическая единица не в вакууме>===================GtG====28.11.2007
				Цена_Розничная=Цена_Розничная*КоэффициентРазбивки;
				
				Если  ТекРегион.ИспользоватьПредыдущуюРозничнуюЦенуПриРасценке=Истина и ИндЦена = 0 и НЕ (ТекРегион.НеКорректироватьФиксЦены = Истина и Товар.ФиксированнаяЦена > 0) Тогда
					//------------------<Подгоняем новую розничную под старую>-------------------GtG----27.11.2008
					// Считаем процент наценки по алг расчета процента исходя из старой цены Nold
					// Считаем процент наценки по алг расчета процента исходя из новой цены  Nnew
					// если Nold-Nnew >10% тогда  берем цену по расценке (как более правильную)
					//  <10% берем старую цену , ибо нормально
					Если ДанныеТекПартии.СрокГодности > ТекущаяДата() + 24*60*60*95 или ДанныеТекПартии.СрокГодности = Дата(1,1,1) Тогда
						Если 	ТОвар.ЖНВЛС=Ложь 		и 
							Товар.Топ100=Ложь 		и Остаток > 0  и 
							ДанныеТекПартии.ЕстьСпецЦена=ложь и    //????? Virus
							ПредыдущаяРознЦена>0  и Цена_Розничная > 0  
							Тогда					                
							ЦенаДоКорректировки = Цена_Розничная;
							Если Цена_Розничная > ПредыдущаяРознЦена Тогда
								Если ((Цена_Розничная/ПредыдущаяРознЦена)-1)*100 < ПроцентОтклоненияВверх Тогда 
									Цена_Розничная = ПредыдущаяРознЦена;
								КонецЕсли;
							ИначеЕсли Цена_Розничная < ПредыдущаяРознЦена Тогда
								Если ((ПредыдущаяРознЦена/Цена_Розничная)-1)*100 < ПроцентОтклоненияВниз Тогда 
									Цена_Розничная = ПредыдущаяРознЦена;
								КонецЕсли;
							Иначе
							КонецЕсли;
							Если ФормироватьКомментарий Тогда
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"КорректировкаЦены",Новый Структура("ПредыдущаяЦена,ЦенаДоКорректировки,ЦенаПослеКорректировки",ПредыдущаяРознЦена,ЦенаДоКорректировки,Цена_Розничная),ФормироватьКомментарий);
							КонецЕсли;
						КонецЕсли;	
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Рез",Новый Структура("ЦенаЕд,Цена_Розничная,ДокЕитК,пРОЦЕНТ_Наценки",ЦенаЕд,Цена_Розничная,ДокЕитК,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли; // регион использует расценку с подтягиванием предыдущей розничной цены
				
				
				
				//------------------<еще проверочку на превыешние закупочной цены розничной рассчитанной чтобы в минус не ушло>-------------------GtG----21.11.2007
				Если Цена_Розничная < Док.ЦенаЗакуп Тогда
					ОтборМинус = Новый Структура();
					ОтборМинус.Вставить("Товар",стрТовар);
					ОтборМинус.Вставить("КодПартии",ДанныеТекПартии["КодПартии"]);
					НайденныеСтрокиМинусов =  ТЗВМинус.НайтиСтроки(ОтборМинус);
					Если НайденныеСтрокиМинусов.Количество() > 0 Тогда
						СтрокаМинуса = НайденныеСтрокиМинусов.Получить(0);
						СтрокаМинуса.ЦенаЗакуп = Док.ЦенаЗакуп;
						СтрокаМинуса.ЦенаРозн = Цена_Розничная;
						СтрокаМинуса.Количество = стр.Количество;
						СтрокаМинуса.Дата = ДатаДок;
					Иначе
						НовыйМинус = ТЗВМинус.Добавить();
						НовыйМинус.Товар = стрТовар;
						НовыйМинус.КодПартии = ДанныеТекПартии["КодПартии"];
						НовыйМинус.ЦенаЗакуп = Док.ЦенаЗакуп;
						НовыйМинус.ЦенаРозн = Цена_Розничная;
						НовыйМинус.Количество = стр.Количество;
						НовыйМинус.Дата = ДатаДок;
					КонецЕсли;
				КонецЕсли;

				
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					Если Цена_Розничная<=Док.ЦенаЗакуп  Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар	=СтрТОвар;
							СтрТП.КодТовара=Товар.Код;
							СтрТП.ЖНВЛС=Товар.ЖНВЛС;							
							СтрТП.КодПартии=ДанныеТекПартии["КодПартии"];
							СтрТП.СтавкаНДС=ДанныеТекПартии["СтавкаНДС"];
							//СтрТП.ЕИТ=Док.Еит;
							СтрТП.КоэффЕит=КоэффициентРазбивки;
							СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителя"];
							СтрТП.ЦенаГосРег=ДанныеТекПартии["ЦенаГосРегистрации"];
							СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
							
							СтрТП.Топ100=Товар.Топ100;
							СтрТП.Топ1000=ТОвар.Топ1000;
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителя"],Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток 	= Остаток;
							СтрТП.ИндЦена	= ИндЦена;
							СтрТП.ТоварРасфасован = ТоварРасфасован;
							СтрТП.ЦенаПоМатрице = стр.ЦенаПоМатрице;
							СтрТП.ПроцентПоМатрицеНаценок = стр.ПроцентПоМатрицеНаценок;
							СтрТП.ЦенаПоМатрицеТМ = стр.ЦенаПоМатрицеТМ;
							СтрТП.ПроцентПоМатрицеТМ = стр.ПроцентПоМатрицеТМ;							
							
							Если Товар.ЖНВЛС = Истина или ИндЦена > 0 или ЭтоИнтернетНакладная или НЕ ДанныеТекПартии["КачествоТовара"] = "" Тогда
								СтрТП.ЭтоИндивидуальнаяЦена = Истина;
							Иначе
								СтрТП.ЭтоИндивидуальнаяЦена = Ложь;
							КонецЕсли;							
							
							Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
								СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
								//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
								СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
							КонецЕсли;
							

						КонецЕсли; 
						
						
						
						Если ФормироватьКомментарий Тогда
							
							ТекстОшибки="Розничная цена оказалась меньше закупочной!    ("+Товар.Код+")  "+Товар.Наименование+"    Не РАСЦЕНЕН!";
							
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ЕстьОшибкиПоГТТ=Истина;
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КонецЕсли;
						
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;

						Косяк=ТЗКосяков.Добавить();
						Косяк.КодПартии=Стр.КодПартии;
						Косяк.ТОвар=Стр.Товар;
						Косяк.Косяк="Розничная цена оказалась меньше закупочной! НЕ РАСЦЕНЕН!";
						Косяк.ЦенаПоРасценке=Цена_Розничная;
						
						Прервать;
					КонецЕсли;
				КонецЕсли;
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					//==================<Не ТОПОВЫЕ позиции наценка от закупки с ндс НЕ МЕНЕЕ 10% полюбому>===================GtG====21.01.2008
					Если (ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"],Цена_Розничная)<МинимальныйПроцентНаценкиКромеТопов)
						И (Товар.Топ100=Ложь и ТОвар.Топ1000=Ложь)
						Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар=СтрТОвар;
							СтрТП.КодТовара=Товар.Код;
							СтрТП.ЖНВЛС=Товар.ЖНВЛС;
							СтрТП.КодПартии=Док.КодПартии;
							СтрТП.СтавкаНДС=ДанныеТекПартии["СтавкаНДС"];
							//СтрТП.ЕИТ=Док.Еит;
							СтрТП.КоэффЕит=КоэффициентРазбивки;
							СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителя"];
							СтрТП.ЦенаГосРег=ДанныеТекПартии["ЦенаГосРегистрации"];
							СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
							
							СтрТП.Топ100=Товар.Топ100;
							СтрТП.Топ1000=ТОвар.Топ1000;
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителя"],Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток = Остаток;
							СтрТП.ИндЦена	= ИндЦена;
							СтрТП.ТоварРасфасован = ТоварРасфасован;
							СтрТП.ЦенаПоМатрице = стр.ЦенаПоМатрице;
							СтрТП.ПроцентПоМатрицеНаценок = стр.ПроцентПоМатрицеНаценок;
							СтрТП.ЦенаПоМатрицеТМ = стр.ЦенаПоМатрицеТМ;
							СтрТП.ПроцентПоМатрицеТМ = стр.ПроцентПоМатрицеТМ;							
							
							Если Товар.ЖНВЛС = Истина или ИндЦена > 0 или ЭтоИнтернетНакладная или НЕ ДанныеТекПартии["КачествоТовара"] = "" Тогда
								СтрТП.ЭтоИндивидуальнаяЦена = Истина;
							Иначе
								СтрТП.ЭтоИндивидуальнаяЦена = Ложь;
							КонецЕсли;							
							
							Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
								СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
								//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
								СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
							КонецЕсли;
							

						КонецЕсли; 
						
						Если ФормироватьКомментарий  Тогда
							ТекстОшибки="НЕ ТОПОВЫЙ товар, наценка от закупки с НДС меньше "+МинимальныйПроцентНаценкиКромеТопов+"% ("+Товар.Код+")  "+Товар+"    Не РАСЦЕНЕН!";
							
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КонецЕсли;
						
						ЕстьОшибкиПоГТТ=Истина;

						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
						Прервать;
					КонецЕсли;
					//================================================GtG====КОНЕЦ==21.01.2008
				КонецЕсли;
				
				
				//----------------------------< комментарий окончательного результата по товару >--------------------------------GtG--- 
				//КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Рез",Новый Структура("ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки",ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки));
				
				//==================<Проверяем отклонение новой розничной цены от старой, не более чем в 2 раза>===================GtG====28.11.2008
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					Если ПредыдущаяРознЦена>0 Тогда
						КонтрольноеОтклонение=ПредыдущаяРознЦена/(Цена_Розничная);
						
						Если КонтрольноеОтклонение<=0.5 или КонтрольноеОтклонение>=2 тогда
							// это косяк. цена отличается более чем в 2 раза от предыдущей
							Если ФормироватьКомментарий Тогда
								ТекстОшибки="Розничная цена отличается более чем в 2 раза от предыдущей розничной!";
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КонецЕсли;
							
							Косяк=ТЗКосяков.Добавить();
							Косяк.КодПартии=Стр.КодПартии;
							Косяк.ТОвар=Стр.Товар;
							Косяк.Косяк="Розничная цена отличается более чем в 2 раза от предыдущей розничной!";
							// попадет в тч ошибок расценки и документ не проведется
							
						КонецЕсли;
					КонецЕсли; 
				КонецЕсли;
				//================================================GtG====КОНЕЦ==28.11.2008				
				Прервать;
				
			КонецЦикла;	// по таблице правил
			
			Если СработалХотяБыОдинАлгоритм = Истина и ПостОбработкаЦены = Ложь Тогда
				ПостОбработкаЦены = Истина;
				Перейти ~ПостобработкаЦены;
			КонецЕсли;
			
			Если СработалХотяБыОдинАлгоритм = Ложь Тогда	
				Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
					//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
					Цена_Розничная=0;
					СтрТП=Тп.Добавить();
					СтрТП.ТОвар=СтрТОвар; //ссылка
					СтрТП.КодТовара=Товар.Код;
					СтрТП.ЖНВЛС=Товар.ЖНВЛС;					
					СтрТП.КодПартии=ДанныеТекПартии["КодПартии"];
					СтрТП.СтавкаНДС=ДанныеТекПартии["СтавкаНДС"];
					//СтрТП.ЕИТ=Док.Еит;
					СтрТП.КоэффЕит=КоэффициентРазбивки;
					СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителя"];
					СтрТП.ЦенаГосРег=ДанныеТекПартии["ЦенаГосРегистрации"];
					СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
					СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
					
					СтрТП.Топ100=Товар.Топ100;
					СтрТП.Топ1000=ТОвар.Топ1000;
					
					СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
					СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
					СтрТП.Регион  =ТекРегион;
					СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
					
					СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителя"],Цена_Розничная);
					СтрТП.НН=НН;
					СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
					СтрТП.Остаток = Остаток;
					СтрТП.ИндЦена = ИндЦена;
					СтрТП.ТоварРасфасован = ТоварРасфасован;
					СтрТП.ЦенаПоМатрице = стр.ЦенаПоМатрице;
					СтрТП.ПроцентПоМатрицеНаценок = стр.ПроцентПоМатрицеНаценок;
					СтрТП.ЦенаПоМатрицеТМ = стр.ЦенаПоМатрицеТМ;
					СтрТП.ПроцентПоМатрицеТМ = стр.ПроцентПоМатрицеТМ;					
					
					Если Товар.ЖНВЛС = Истина или ИндЦена > 0 или ЭтоИнтернетНакладная или НЕ ДанныеТекПартии["КачествоТовара"] = "" Тогда
						СтрТП.ЭтоИндивидуальнаяЦена = Истина;
					Иначе
						СтрТП.ЭтоИндивидуальнаяЦена = Ложь;
					КонецЕсли;		
					
					Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
						СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
						//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
						СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
					КонецЕсли;
					
				КонецЕсли; 
				
				Попытка
					Косяк=ТЗКосяков.Добавить();
					Косяк.КодПартии=СтрТП.КодПартии;
					Косяк.ТОвар=СтрТП.ТОвар;
					Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
				Исключение
					Попытка
						Косяк=ТЗКосяков.Добавить();
						Косяк.КодПартии="Партия неизвестна";
						Косяк.ТОвар=СтрТП.ТОвар;
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					Исключение
						Косяк=ТЗКосяков.Добавить();
						Косяк.КодПартии="Партия неизвестна";
						Косяк.ТОвар="Товар неизвестен!";
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					КонецПопытки;
				КонецПопытки; 
				
				Если ФормироватьКомментарий = Истина Тогда
					
					ТекстОшибки=" Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшСсы.Ошибки=СтрТОвар; // ссылка на товар
					ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшСсы.Ошибки=ТекРегион; // ссылка на регион
					
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион),ФормироватьКомментарий);
				КонецЕсли;
				
				
				ЕстьОшибкиПоГТТ=Истина;
				Продолжить;  // не расценилось
			КонецЕсли;  // конец если не сработал ни один алгоритм
			
			Если СработалХотяБыОдинАлгоритм = Истина Тогда
				
				//==================<Выводим строку расцененного товара >===================GtG====20.11.2007
				СтрТП=Тп.Добавить();
				СтрТП.НН=НН;
				СтрТП.КодТовара=Товар.Код;
				СтрТП.ЖНВЛС=Товар.ЖНВЛС;
				СтрТП.ТОвар=СтрТОвар;
				СтрТП.КодПартии=ДанныеТекПартии["КодПартии"];
				СтрТП.СтавкаНДС=ДанныеТекПартии["СтавкаНДС"];
				//СтрТП.ЕИТ=Док.Еит;
				СтрТП.КоэффЕит=КоэффициентРазбивки;
				СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
				СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;
				СтрТП.Остаток = Остаток;
				СтрТП.Регион=ТекРегион;
				Если Товар.ЖНВЛС = Истина или ИндЦена > 0 или УстановитьПризнакИндивидуальнойЦены или ЭтоИнтернетНакладная или НЕ ДанныеТекПартии["КачествоТовара"] = "" Тогда
					СтрТП.ЭтоИндивидуальнаяЦена = Истина;
				Иначе
					СтрТП.ЭтоИндивидуальнаяЦена = Ложь;
				КонецЕсли;				
				СтрТП.ТоварРасфасован = ТоварРасфасован;
				СтрТП.ЦенаПоМатрице = стр.ЦенаПоМатрице;
				СтрТП.ПроцентПоМатрицеНаценок = стр.ПроцентПоМатрицеНаценок;
				СтрТП.ЦенаПоМатрицеТМ = стр.ЦенаПоМатрицеТМ;
				СтрТП.ПроцентПоМатрицеТМ = стр.ПроцентПоМатрицеТМ;				
				
				Если Авторасценка = Ложь Тогда
					СтрТП.ЦенаПРБезНДС	=	ДанныеТекПартии["ЦенаПроизводителя"];
					СтрТП.ЦенаГосРег	=	ДанныеТекПартии["ЦенаГосРегистрации"];
					СтрТП.ЦенаЗакуп		=	ДанныеТекПартии["ЦенаЗакуп"];
					СтрТП.Топ100		=	Товар.Топ100;
					СтрТП.Топ1000		=	ТОвар.Топ1000;
					СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
					СтрТП.НаценкаОтЦГР	=	ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
					СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
					СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителя"],Цена_Розничная);
					СтрТП.ИндЦена		= ИндЦена;
					
					Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
						СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
						//СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
						СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
					КонецЕсли;
				КонецЕсли;
				
				Если Док.ЦенаГосРегистрации > 0 и Товар.ЖНВЛС = Ложь Тогда   // 08.09.2014 Васильченко по ТЗ Токмаковой
					Косяк=ТЗКосяков.Добавить();
					Косяк.КодПартии=Стр.КодПартии;
					Косяк.ТОвар=Стр.Товар;
					Косяк.Косяк="Позиция имеет цену ГР, но не имеет признака ЖНВЛС в базе";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	// по строкам документа
		
		#Если Клиент Тогда
			Состояние("расчет " + НН + " из " + КоличествоСтрок);
		#КонецЕсли
		
		
		Если ЕстьОшибкиПоГТТ=Ложь и ФормироватьКомментарий = Истина тогда
			ВеткаТОварОш=ВеткаРегион.Строки.Добавить();
			ВеткаТОварОш.Ошибки="ОК. Ошибок нет";
		КонецЕсли;
		
		
		Если Цена_Розничная=0 ТОгда
			Косяк=ТЗКосяков.Добавить();
			Косяк.КодПартии=Стр.КодПартии;
			Косяк.ТОвар=Стр.Товар;
			Косяк.Косяк="Товар не расценился.";
		КонецЕсли;	
		
		
		
		
	КонецЦикла; // по Регионам
	

	
	
	Если ФормироватьКомментарий Тогда
		Таб.ЗакончитьГруппуСтрок();
	КонецЕсли;
	
    //====================  если в ТП есть несколько одинаковых товаров , то присвоим всем партиям макс цену розн
	Если Авторасценка = Ложь Тогда
		ТП.Сортировать("Товар , ЦенаРозн Убыв");
	Иначе
		ТП.Сортировать("КодТовара , ЦенаРозн Убыв");
	КонецЕсли;
	
	СтарыйКод = 0;
	СтараяЦена = 0;
	
	Для каждого стр из ТП Цикл
		Если стр.ЭтоИндивидуальнаяЦена = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтарыйКод = стр.КодТовара Тогда
			стр.ЦенаРозн = СтараяЦена;
			Если НЕ Авторасценка Тогда
				Если стр.ЦенаЗакуп > 0 Тогда
					стр.НаценкаОтЗакупки = Окр((стр.ЦенаРозн/стр.ЦенаЗакуп - 1)*100,2);
				КонецЕсли;
			КонецЕсли;
		Иначе
			СтараяЦена = стр.ЦенаРозн;
		КонецЕсли;
		СтарыйКод = стр.КодТовара;		
	КонецЦикла;
	//============================================================================================================	
	
	СтруктураРезультата.ТаблицаКомментариев = Таб;
	СтруктураРезультата.ТП = ТП;
    СтруктураРезультата.ДеревоОшибок = ДО;
	СтруктураРезультата.ТЗКосяков=ТЗКосяков;

	Если ЕстьОшибки или ЕстьОшибкиПоГТТ или ТЗКосяков.Количество() > 0 Тогда  //ЕстьОшибкиПоУПА
		СтруктураРезультата.Результат = Ложь;
	Иначе
		СтруктураРезультата.Результат = Истина;
	КонецЕсли;
	
	//Если ТЗВМинус.Количество() > 0 Тогда
	//	ТЗВМинус.Свернуть("Товар,КодПартии,ЦенаЗакуп,ЦенаРозн,Дата","Количество");
	//	НаборЗаписей = РегистрыСведений.ЛогРасценки.СоздатьНаборЗаписей(); 
	//	НаборЗаписей.Отбор.Регистратор.Установить(Документ); 
	//	НаборЗаписей.Загрузить(ТЗВМинус); 
	//	Попытка
	//		НаборЗаписей.Записать(); 
	//	Исключение
	//		#Если Клиент Тогда
	//			Сообщить(""+ОписаниеОшибки());
	//		#КонецЕсли
	//	КонецПопытки;
	//КонецЕсли;


		
	Возврат СтруктураРезультата;
	
	
	
	
	
КонецФункции
 



Функция Расценить366(ПараметрыРасценки = Неопределено) Экспорт
	
	Перем СокрСтр;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("Результат",Ложь);
	СтруктураРезультата.Вставить("Комментарий","");
    СтруктураРезультата.Вставить("КоличествоОшибокРасценки",0);

	Если ПараметрыРасценки = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	Авторасценка = ПараметрыРасценки.Авторасценка ;
	Склад = ПараметрыРасценки.Склад;
	Документ = ПараметрыРасценки.Документ ;
	ТипДокумента = ПараметрыРасценки.ТипДокумента ;
	ВидДокумента = ПараметрыРасценки.ВидДокумента ;
	ФормироватьКомментарий = ПараметрыРасценки.Комментировать;
	ВыводитьНеРасцененные = ПараметрыРасценки.ВыводитьНеРасцененные;
	Регион = ПараметрыРасценки.Регион;
	СубъектРФ = Склад.СубъектРФ;
	РегионДляНесопоставленных = ПараметрыРасценки.ДопРегион;
	РегионДляИсторииЦен = РегионДляНесопоставленных.ДопРегион;
	МинимальныйПроцентНаценкиКромеТопов = ПараметрыРасценки.МинимальныйПроцентНаценкиКромеТопов;
	ЗаписыватьЦеныВРегистрЦен = ПараметрыРасценки.ЗаписыватьЦеныВРегистрЦен;
	УстановитьрозничныеЦеныВДокументе = ПараметрыРасценки.УстановитьрозничныеЦеныВДокументе;
	ИспользоватьЦеныКонкурентов = Ложь; //ПараметрыРасценки.ИспользоватьЦеныКонкурентов;
	ПроверятьЗакупкуИРозницу = ПараметрыРасценки.ПроверятьЗакупкуИРозницу;
	РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь;
	Если ПараметрыРасценки.Свойство("СвойПоставщик") = Ложь Тогда
		СвойПоставщик = Ложь;
	Иначе
		СвойПоставщик = ПараметрыРасценки.СвойПоставщик;
	КонецЕсли;

	
	 НачалоРасценки=ТекущаяДата();
	
	
	СтруктураРезультата.КоличествоОшибокРАсценки=0;
	
	Макет=ПолучитьОбщийМакет("РасценкаКомментарий");
	
	Таб	= СоздатьТабличныйДокумент(Макет);
	ТП	= СоздатьТаблицуРезультата(Авторасценка);
	ДО	= СоздатьДеревоОшибок();
	
	Корень=ДО.Строки.Добавить();
	Корень.Ошибки="Расценка документа ";
	
	
	Отбор = Новый структура();
	Отбор.Вставить("Сопоставлен",Истина);
	ТЧТовар= Документ.Товар.Выгрузить(Отбор); //ЭтаФорма.ВладелецФормы.Товар;
	
 	ТЗКосяков = Новый ТаблицаЗначений;
	ТЗКосяков.Колонки.Добавить("Партия");
	ТЗКосяков.Колонки.Добавить("Товар");
	ТЗКосяков.Колонки.Добавить("Косяк");
	ТЗКосяков.Колонки.Добавить("ЦенаПоРасценке");
	
	//ТЗКосяков=КонтрольПоЗакупке(ТЧТовар,РегионДляИсторииЦен,Документ,ТипДокумента,ВидДокумента);
	ПроверитьПревышениеЗакупочнойЦены(ТЧТовар,РегионДляИсторииЦен,СубъектРФ,Документ,ТипДокумента,ВидДокумента,ТЗКосяков,СвойПоставщик);

	
	СтруктураРезультата.Вставить("ДеревоОшибок",ДО);
	СтруктураРезультата.Вставить("ТаблицаКомментариев",Таб);
	СтруктураРезультата.Вставить("ТП",ТП);
	СтруктураРезультата.Вставить("ТЗКосяков",ТЗКосяков);

	Если Регион.Пустая() = Истина Тогда
		Косяк=ТЗКосяков.Добавить();
		Косяк.Партия="";
		Косяк.ТОвар="";
		Косяк.Косяк="Для аптеки не задан регион ценообразования";
		СтруктураРезультата.Результат = Ложь;
		СтруктураРезультата.ТЗКосяков = ТЗКосяков;
		Возврат СтруктураРезультата;
	КонецЕсли;
	
	
	ТЗМатрицаОкруглений = ПолучитьМатрицуОкруглений();
		
	
	ДатаДок=Документ.Дата;
	
	
	ДатаВыходаНаПМ=КонецМесяца(КонецМесяца(СКЛАД.ДатаПерехода)+1);// среднестатистический срок выхода на проектную мощность  через месяц после конца месяца открытия аптеки
	
	
	Попытка
		Курс=ПолучитьКурсВалюты(Документ.Валюта, ДатаДок);
	ИСключение
		Курс=1;  // в документе нет реквизита валюта
	КонецПопытки;
	

	
	СтрокаНулевыхЦен=ТЧТовар.Найти(0,"ЦенаЗакуп");
	Если СтрокаНулевыхЦен<> Неопределено Тогда
		Косяк=ТЗКосяков.Добавить();
		Косяк.Партия="";
		Косяк.ТОвар="";
		Косяк.Косяк="В документе есть строки с нулевой закупочной ценой!";
		#Если Клиент Тогда
			Сообщить("В документе есть строки с нулевой закупочной ценой! РАСЦЕНИТЬ НЕВОЗМОЖНО! ДОКУМЕНТ НЕ ГОТОВ!");
		#КонецЕсли
		
		
		Если НЕ Документ.Метаданные().ТабличныеЧасти.Найти("ОшибкиРасценки") = Неопределено  Тогда
			
			ОП=Документ.ОшибкиРасценки;
			
			Если Константы.БеспределСЖНВЛС.Получить() = Истина Тогда
				ПустаяПартия = Справочники.Партии.ПустаяСсылка();
				
				СписокУдаляемыхСтрок=новый СписокЗначений;
				
				Для каждого стр из ОП Цикл
					Если стр.Партия = ПустаяПартия Тогда
						продолжить;
					КонецЕсли;
					СписокУдаляемыхСтрок.Добавить(стр);
				КонецЦикла;
				Для Каждого ССУС из СписокУдаляемыхСтрок цикл
					ОП.Удалить(ССУС.Значение);
				КонецЦикла;	
				
				
			Иначе
				ОП.Очистить();// при каждой расценке перезаполняется. в идеале - пустая.
			КонецЕсли;
			
			ТЗКосяков.Свернуть("Партия,Товар,Косяк,ЦенаПоРасценке","");
			
			
			Для каждого Стр из ТЗКосяков Цикл
				СтрОп=ОП.Добавить();
				СтрОП.Товар 	= Стр.Товар;
				СтрОП.Партия 	= Стр.Партия;
				СтрОП.ОписаниеОшибки= Стр.Косяк;
				СтрОП.ЦенаПоРасценке= Стр.ЦенаПоРасценке;
			КонецЦикла;
			
		КонецЕсли;	
		
		Попытка
			Документ.Состояние=Справочники.СостояниеДокумента.НайтиПоНаименованию("не готов");
		Исключение
		КонецПопытки;
		
        Документ.Записать(РежимЗаписиДокумента.Запись);
		
        СтруктураРезультата.ТЗКосяков=ТЗКосяков;

		Возврат СтруктураРезультата; // произойдет ошибка расценки. Не расцениваем недоделанный документ
	КонецЕсли; 
	
	Если АвтоРасценка = Ложь и ИспользоватьЦеныКонкурентов = Истина и ПроверятьЗакупкуИРозницу = Истина Тогда
		ТЗЦенКонкурентов = ПолучитьТаблицуЦенКонкурентов(Документ);
	КонецЕсли;
	
	Если ИспользоватьЦеныКонкурентов = Истина Тогда
		ТЗМинимальныхЦенКонкурентов = ПолучитьМинимальныеЦеныКонкурентов(Документ);	
	КонецЕсли;
	
	СписокСтрокДокумента=ТЧТовар.ВыгрузитьКолонку("ТОвар");
	
	
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Поиск старых розничных цен...";
	Если ПроверятьЗакупкуИРозницу = Истина Тогда
		ТаблицаСтарыхРознЦен=ПолучитьТаблицуСтарыхРозничныхЦен366(ДатаДок,Склад,РегионДляИсторииЦен,СписокСтрокДокумента,Документ);
	КонецЕсли;
	//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Старые розн. цены получены.";
	
	
	ЕстьОшибки=Ложь;
	
		
	Если ТипЗнч(Документ)=Тип("ДокументСсылка.ПеремещениеТОвара") Тогда
		ТЧТовар.Колонки.Добавить("ЦенаГосРегистрации");
		ТЧТовар.Колонки.Добавить("ЦенаПроизводителя");
		ТЧТовар.Колонки.Добавить("ЦенаЗакупБезНДС");
		ТЧТовар.ЗаполнитьЗначения(0,"ЦенаГосРегистрации");
		
		Для каждого СтрТЧТовар из ТЧТовар Цикл
			СтрТЧТовар.ЦенаЗакупБезНДС= СтрТЧТовар.ЦенаЗакуп - ОМ3_НДСИзСуммыПоСтавке (СтрТЧТовар.ЦенаЗакуп,СтрТЧТовар.СтавкаНДС);
			СтрТЧТовар.ЦенаПроизводителя=СтрТЧТовар.Партия.ЦенаПроизводителяБезНДС;
			СтрТЧТовар.ЦенаГосРегистрации = СтрТЧТовар.Партия.ЦенаГосРегистрации;
			СтрТЧТовар.ЦенаЗакупБезНДС = Окр(СтрТЧТовар.ЦенаЗакуп/(1+СтрТЧТовар.СтавкаНДС.Ставка/100),2);
		КонецЦикла;	
	КонецЕсли;
	
	//ТЧ = ТЧТовар.Скопировать(,"Товар,Партия,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС,ЖНВЛС,ГруппаТовара"); //ЭВФ.Товар.Выгрузить();

	//ТЧ.Свернуть("Товар,Партия,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС,ЖНВЛС,ГруппаТовара","");
	
	СписокРегионов = Новый СписокЗначений;
	СписокРегионов.Добавить(Регион);
	
	Для каждого СтрРег из СписокРегионов цикл // ПО РЕГИОНАМ
		
		
				
		ТекРегион=СтрРег.Значение;
		
		
		Если ТекРегион.ПометкаУдаления=Истина ТОгда
			ПРодолжить; // Удаленные регионы НЕ обрабатываем!
		КонецЕсли; 
		
		
		ВеткаРегион=Корень.Строки.Добавить();
		ВеткаРегион.Ошибки="по Региону   "+ТекРегион;
		
		
		КомментаторРасчета  (Неопределено,Таб,Макет,"Регион",Новый Структура("Регион",ТекРегион),ФормироватьКомментарий);
		
		
		
		//------------------<Получим алогоритмы ценообразования из справочников>-------------------GtG----16.11.2007
		//Регион
		//	Алгоритмы ценообразования
		//		УСЛОВИЯ ПРИМЕНЕНИЯ АЛГОРИТМОВ
		// Выборку строим начиная с конца (УПА)
		ТХТ="ВЫБРАТЬ
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ЛеваяЧасть,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ТипУсловия,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ПраваяЧасть,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ОбъединятьСоСледующим,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ПорядокФормированияУсловия КАК ПорядокФормированияУсловия,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Приоритет КАК Приоритет,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаС,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаПо,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.МинПроцНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.МаксПроцНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ФормулаРасчетаЦены,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ФормулаРасчетаПроцентаНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Ссылка КАК АлгоритмСсылка,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ОткрывающаяСкобка КАК ОСК,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ЗакрывающаяСкобка как ЗСК
		    |ИЗ
		    |	Справочник.АлгоритмыЦенообразованияРегионов.УсловияПрименения КАК АлгоритмыЦенообразованияРегионовУсловияПрименения
		    |ГДЕ
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Владелец = &Регион
		    |	И &ДатаДок МЕЖДУ АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаС И АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаПо
		    |
		    |УПОРЯДОЧИТЬ ПО
		    |	Приоритет,
		    |	ПорядокФормированияУсловия";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Регион",ТекРегион); 
		Запрос.УстановитьПараметр("ДАТАДок",ДатаДок);
		
		ИсходнаяТЗПравил=Запрос.Выполнить().Выгрузить(); // сырые данные
		ИсходнаяТЗПравил.Колонки.Добавить("УсловиеВыполнилось");
		ИсходнаяТЗПРавил.Колонки.Добавить("ВырИтУсл");  // выаржение для вычисления иотгового результата условия примеенния
		
		
		
		Если ИсходнаяТЗПРавил.Количество()=0 ТОгда
			ТекстОшибки=("   По региону  "+ТекРегион+" не задано ни одного алгоритма ценообразования! НЕ РАСЦЕНЕНО! (Задается через справочник регионов.)");
			
			ОшибкаРЕгион=ВеткаРегион.Строки.Добавить();
			ОшибкаРегион.Ошибки=ТекстОшибки;
			СсылкаРегион=ОшибкаРЕгион.Строки.Добавить();
			СсылкаРегион.ошибки=ТекРегион;
			
			КомментаторРасчета  (Неопределено,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион),ФормироватьКомментарий);
			
			СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
			
			Продолжить; // по группам ТТ
		КонецЕсли; 	
		
		ТЗХ=ИсходнаяТЗПРавил.Скопировать();
		ТЗХ.Свернуть("Приоритет"); //,ПорядокФормированияУсловия");
		КоличествоАлгоритмов=ТЗХ.Количество();
		
		
		
		//------------------<Собираем из кусочков сложные условия>-------------------GtG----16.11.2007
		ВеткаТовары=ВеткаРегион.Строки.Добавить();
		ВеткаТовары.Ошибки=" Ошибки при расценке товара по региону  ";
		ЕстьОшибкиПоГТТ=Ложь;
		
		
		КоличествоСтрок = ТЧТовар.Количество();
		
		НН=0;
		
		
		ИсходнаяТЗПРавил.Сортировать("ПРиоритет,ПорядокФормированияУсловия");
		
				
		
		ДанныеПоТоварамДокумента = ПолучитьДанныеПоТОварамДокумента(Документ,СубъектРФ,ДатаДок); //04-03-2013// ТОВАРЫ ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		ДанныеПоПартиямДокумента = ПолучитьДанныеПоПартиямДокумента366(Документ);  //04-03-2013// Партии ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Расчет цен по строкам документа...";
		Для каждого Стр из ТЧТовар Цикл // по строкам документа
			
			ПостОбработкаЦены=Ложь;
			
			ДанныеТекПартии=ДанныеПоПартиямДокумента.Найти(Стр.Партия,"Партия");// строка тз
			
			
			НН=НН+1;
			
			//ТОвар=Стр.Товар.ПолучитьОбъект();
			
			//---------------<ускорение ускорения расценки>---------------------------// GtG // 04.03.2013 16:43:19 
			 // данные по всем товарам в одну тз
			//------------------<Ускорение расценки>-------------------GtG----27.11.2008 
			// чтобы избежать многочисленных обращений к базе Товар - делаем как ТЗ из 1-й строки
			// с колонками соответствующими всем реквизитам товара.
			// при вычислении условий типа товар.ххх = уууу это даст ускорение вычисления
			//-------------- ЗАПРОС GTG --------------------------НАЧАЛО
			//Назначение: все реквизиты товара
			//
			//ТХТ="ВЫБРАТЬ
			//	|	АССОРТИМЕНТНЫЙ_ПЛАН.Ссылка,
			//	|	АССОРТИМЕНТНЫЙ_ПЛАН.ГруппаНаценки,.... и т.д.  
						
			
			ТОВАР= ДанныеПоТоварамДокумента.найти(Стр.Товар,"ССЫЛКА"); // строка ТЗ
			
			МинЦенаКонкурента = 0;
			Если ИспользоватьЦеныКонкурентов = Истина Тогда
				НайденнаяЦена = ТЗМинимальныхЦенКонкурентов.Найти(Товар.Код,"КодТовара");
				Если НЕ НайденнаяЦена = Неопределено Тогда
					МинЦенаКонкурента = НайденнаяЦена.Цена;	
				КонецЕсли;
			КонецЕсли;

			
			//-------------- ЗАПРОС GTG --------------------------КОНЕЦ
			
		    //--------------------------------------------------------GtG----КОНЕЦ--27.11.2008
			
			
			СтрТОвар=Товар.Ссылка;
			СтрТОварКод=Товар.Код;
			
			Если ФормироватьКомментарий Тогда
				КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Товар",Новый Структура("ТОВар,Расшифровка,ТОВарКод",СтрТОвар,СтрТОвар,СтрТОварКод),ФормироватьКомментарий);
			КонецЕсли;
			
			#Если Клиент Тогда
				Если АвтоРасценка=Ложь ТОгда
					
					Дрыг=цел(КоличествоСтрок/100);
					Если Дрыг=0 тогда Дрыг=1 конецесли;
					
					
					если  НН%Дрыг=0 тогда
						Состояние("расчет " + НН + " из " + КоличествоСтрок);
					КонецЕсли;
					
				КонецЕсли;	
			#КонецЕсли
			
			ВеткаТовар= Неопределено;
			
			Если Стр.Количество=0 тогда
				Если ФормироватьКомментарий = Истина Тогда
					ТекстОшибки="Расценим, НО Фактическое количество товара равно нулю! ("+СтрТоварКод+")  "+СтрТовар+"    Не РАСЦЕНЕН!";
					
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
				КонецЕсли;
				ЕстьОшибкиПоГТТ=Истина;
				СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
				//Продолжить;
			КонецЕсли; 
			
			
			
			ТЗПРавил=ИсходнаяТЗПРавил.Скопировать();
			РознЦена=0;
			
			//------------------<1) нужны значения всех возможных переменных из алгоритма условий>-------------------GtG----17.11.2007
			//---------------- Товар-------
			//			ТОвар=Стр.Товар;
			//------------------Регион------
			//Регион=ТекРегион;
			
			//------------- ГТТ------
			//ГТТ=ВыбГТТ.Ссылка;
			
			//------------------<строка документа>-------------------GtG----17.11.2007 
			Док=Стр;
			
			//------------------<Единица измерения>-------------------GtG----28.11.2007
			//Если Док.Еит.Пустая()=Истина ТОгда
			//	
			//	Если ФормироватьКомментарий = Истина Тогда
			//		ТекстОшибки="В документе у товара не указана единица измерения! ("+СтрТоварКод+")  "+СтрТОвар+"    Не РАСЦЕНЕН!";
			//		ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТОвар);
			//		ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
			//		ВеткаТОварОш.Ошибки=ТекстОшибки;
			//		
			//		КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
			//	КонецЕсли;
			//	
			//	ЕстьОшибкиПоГТТ=Истина;
			//	СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
			//	
			//	Продолжить; // по таблице товаров
			//Иначе
			ДокЕитК=Док.Коэфф;  // коэффициент единицы измерения из документа
			ДокЕИТ=""; //Док.Еит;
			//КонецЕсли; 
			
			Если ПроверятьЗакупкуИРозницу = Истина Тогда  //Virus 04.03.2013
				Отбор = Новый Структура();
				//Отбор.Вставить("Регион",Регион);
				Отбор.Вставить("Товар",Товар.Ссылка);
				Строки = ТаблицаСтарыхРознЦен.НайтиСтроки(Отбор);
				Если Строки.Количество() > 0 Тогда
					ПредыдущаяРознЦена = Строки[0].ПрошлаяЦена;
					Остаток			 =  Строки[0].Остаток;
				Иначе
					ПредыдущаяРознЦена = 0;
					Остаток = 0;
				КонецЕсли;
			Иначе
				ПредыдущаяРознЦена = 0;
				Остаток = 0;
			КонецЕсли;
			
			
			Если АвтоРасценка = Ложь и ИспользоватьЦеныКонкурентов = Истина и ПроверятьЗакупкуИРозницу = Истина Тогда
            	//СтрокаЦеныКонкурента = ТЗЦенКонкурентов.Найти(Товар.Ссылка,"Товар");
				СтрокаЦеныКонкурента = ТЗЦенКонкурентов.Найти(Товар.Код,"КодТовара");
			Иначе
				СтрокаЦеныКонкурента = Неопределено;
			КонецЕсли;
			
			~ПостобработкаЦены:  // безусловный переход сюда, если есть алгоритмы с отрицательным приоритетом.
			
			
			//------------------<Рассчитываем условия по каждой строке условий применения алгоритма>-------------------GtG----17.11.2007 
			// Если условие составное это даст для каждой части ИСТИНА или ЛОЖЬ потом их можно
			// загнать в одно выражение и получить результат
			
			ТЗПравил.Колонки.Добавить("РасшифровкаОшибки");
			
			Для каждого СтрП из ТЗПравил Цикл  // по таблице правил
				
				Если ПостОбработкаЦены=Истина Тогда // при повторной обработке отрицательных алгоритмов не берем положительные вообще
					Если  СтрП.приоритет>0 Тогда
						СтрП.УсловиеВыполнилось=Ложь;
						ПРодолжить;
					КонецЕсли;
				КонецЕсли;	
				
				
				
				
				Если СтрП.ЗСК=Истина или СтрП.ОСК=Истина Тогда // это скобка "(" или ")"
					СтрП.УсловиеВыполнилось=Истина; // скобки всегда считаем истинными
				Иначе// собственно это условие	 
					ЗначениеПРавойЧасти=СтрП.ПраваяЧасть;
					
					Если ТипЗнч(ЗначениеПРавойЧасти)=Тип("Строка") Тогда // значит это формула и ее нужно вычислить
						ЗначениеПРавойЧасти =Вычислить( ЗначениеПРавойЧасти );
					КонецЕсли;	
					
					ТХТВычислить=""+СтрП.ЛеваяЧасть+" "+СтрП.ТипУсловия+" ЗначениеПРавойЧасти";
					
					
					Если  СтрП.ТипУсловия="СодЗнач" Тогда // вычисляет сидит ли значение Лева в таблице значений Права
						ТХТВычислить=""+Условие_СодЗнач(Вычислить(СтрП.ЛеваяЧасть),ЗначениеПРавойЧасти)+"";
						
						// ТХТВычислить будет как "Истина" или "Ложь"
					КонецЕсли;
					
					
					

					Попытка
							СтрП.УсловиеВыполнилось=Вычислить(ТХТВычислить);		
					Исключение  //ибо могут накосячить при написании условий
						Комментарий=ОписаниеОшибки()+"
									|Ошибка вычисления выражения. 
									|Алгоритм  "+СтрП.АлгоритмСсылка+"
									|"+СтрП.ЛеваяЧасть+" Условие сравнения "+СтрП.ТипУсловия+" Значение в правой части "+ЗначениеПРавойЧасти; 
						СтруктураРезультата.Комментарий = Комментарий;
						СтруктураРезультата.ТЗКосяков=ТЗКосяков;
						#Если Клиент Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТОвар);
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=Комментарий;
					
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
	
							ВызватьИсключение Комментарий;
						#Иначе
							Возврат СтруктураРезультата; // точно! - накосячили.
						#КонецЕсли
					КонецПопытки ;
					
					
					
					Если СтрП.УсловиеВыполнилось=Ложь Тогда
						СтрП.РасшифровкаОшибки="Не выполнилось условие "+ТХТВычислить;// СтрЗаменить(ТХТВычислить,"ЗначениеПРавойЧасти",ЗначениеПРавойЧасти);//+", а по товару "+Вычислить(СтрП.ЛеваяЧасть);
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла;	// по таблице правил
			
			
			Приоритет=0;
			ВырИтУсл="";
			
			Для каждого СтрП из ТЗПравил Цикл  // по таблице правил 2 заход
				
				Если Приоритет<>СтрП.Приоритет Тогда // новое правило расчета
					ВырИтУсл="";
					
					Приоритет=СтрП.Приоритет; // запомним какой был последним
					
				КонецЕсли;	
				
				
				Если СтрП.ЗСК=Истина Тогда // это скобка ")"
					СтрПУсловиеВыполнилось=")"
				ИначеЕсли СтрП.ОСК=Истина Тогда // это скобка "("
					СтрПУсловиеВыполнилось="("
				Иначе  // Это условие
					СтрПУсловиеВыполнилось =СтрП.УсловиеВыполнилось;
				КонецЕсли; 	
					
				
				
				СтрП.ВырИтУсл=ВырИтУсл+" "+СтрПУсловиеВыполнилось+" "+СтрП.ОбъединятьСоСледующим;
				ВырИтУсл= СтрП.ВырИтУсл;// в последней строке сложного условия оно соберется все целиком
				// эта строка будет имет ьмакс порядок формирования
				
				
			КонецЦикла; // по таблице правил 2 заход
			
			//------------------<Свернет таблицу правил>-------------------GtG----20.11.2007
			
			
			ТЗПРавил.Сортировать("ПорядокФормированияУсловия Desc");
			ТЗПРавил.Сортировать("Приоритет Asc");

			
						
			ТЗПравил.Колонки.Удалить("ЛеваяЧасть");
			ТЗПравил.Колонки.Удалить("ТипУсловия");
			ТЗПравил.Колонки.Удалить("ПраваяЧасть");
			ТЗПравил.Колонки.Удалить("ОбъединятьСоСледующим");
			ТЗПравил.Колонки.Удалить("УсловиеВыполнилось");
			
			ППР=0; // правилоПриоритет
			ППФУ=0;  // правило, порядок формирования условия
			Удаляемыестроки=Новый СписокЗначений;
			
			СписокНевыполнившихсяУсловий=Новый СписокЗначений; // для человеческой расшифровки ошибки если
			// ни один алгоритм не подойдет	
			
			
			// АХТУНГ ДАНГЕР!
			
						
			//ПРи большом кол-ве условий неправильный порядок условий
			
			ТЗПравил.Колонки.Добавить("ЭтоУдаляемоеУсловие");
			ТЗПРавил.ЗаполнитьЗначения(Ложь,"ЭтоУдаляемоеУсловие");
			
			Для каждого СтрП из ТЗПравил Цикл
				
				
				Если ППР<СтрП.Приоритет Тогда
					ППР=СтрП.Приоритет ;    // правило приоритет
					ППФУ=СтрП.ПорядокФормированияУсловия; //правило, порядок формирования условия)
				КонецЕсли;	
				
				
									
				Если СтрП.ПорядокФормированияУсловия < ППФУ Тогда
					// это огрызок недоделанного сложного условия
					// его надо убрать чтоб дальше не мешался
					СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
					Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП);
                КонецЕсли; 
				
				//======================= Самый медленный кусок ======================
				Если прав( СтрП.ВырИтУсл,2)=" И" Или  прав( СтрП.ВырИтУсл,4)=" ИЛИ" Тогда
					СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
					Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
				Иначе
					Попытка
						Если Вычислить(СтрП.ВырИтУсл)=Ложь Тогда
							//------------------<Еще подуменьшим количество условий>-------------------GtG----20.11.2007 
							// Отбросим ложные строки
							СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
							Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
						КонецЕсли; 
					Исключение
						//------------------<Точно это огрызок сложного условия и он не посчитается>-------------------GtG----29.12.2007
						// Отбросим ложные строки
						СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
						Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
					КонецПопытки; 
				КонецЕсли; 
                //====================================================

			КонецЦикла;	
			
			
			
			//------------------<Удаляем неподходящие алгоритмы>-------------------GtG----23.11.2007
			//Для каждого СтрУС из Удаляемыестроки Цикл
			//	Попытка
			//		ТЗПРавил.Удалить(СтРУС.Значение);// удаляем лишние строки условий 
			//	ИСключение
			//		// значит уже прибили нах
			//	КонецПопытки; 
			//КонецЦикла;	
			ТЗПравил=ТзПравил.Скопировать(Новый Структура("ЭтоУдаляемоеУсловие",Ложь));
			
			
			
			
			
			//------------------<Должны остаться только подходящие>-------------------GtG----23.11.2007
			// если ничего не подошло - расценка невозможна 
			// выведем список невыполнившихся условий и перейдем к расценке следующего товара
			Если ТЗПравил.Количество()=0  и ПостОбработкаЦены=Ложь Тогда
				
				Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
					//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
					
					//ДокПартияЦенаЗакуп=ДанныеТекПартии["ЦенаЗакуп"]; // 1 раз лезем в базу
					
					Цена_Розничная=0;
					СтрТП=Тп.Добавить();
					СтрТП.ТОвар=СтрТОвар; //ссылка
					СтрТП.Партия=ДанныеТекПартии["Партия"];
					СтрТП.ЕИТ=ДокЕИТ;
					СтрТП.КоэффЕит=ДокЕитК;
					СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
					СтрТП.ЦенаГосРег=0;
					СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
					СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
					СтрТП.ЖНВЛС  = Стр.ЖНВЛС;
					СтрТП.СтавкаНДС  = Стр.СтавкаНДС;
					СтрТП.Топ100=Товар.Топ100;
					СтрТП.Топ1000=ТОвар.Топ1000;
					
					СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
					СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
					СтрТП.Регион  =ТекРегион;
					СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
					
					СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
					СтрТП.НН=НН;
					СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
					СтрТП.Остаток = Остаток;
					Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
						СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
						СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
						СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
					КонецЕсли;
					
				КонецЕсли; 
				
				Попытка
					Косяк=ТЗКосяков.Добавить();
					Косяк.Партия=СтрТП.Партия;
					Косяк.ТОвар=СтрТП.ТОвар;
					Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
				Исключение
					Попытка
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия="Партия неизвестна";
						Косяк.ТОвар=СтрТП.ТОвар;
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					Исключение
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия="Партия неизвестна";
						Косяк.ТОвар="Товар неизвестен!";
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					КонецПопытки;
				КонецПопытки; 
				
				

				
				
				Если ФормироватьКомментарий = Истина Тогда
					
					ТекстОшибки=" Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшСсы.Ошибки=СтрТОвар; // ссылка на товар
					ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшСсы.Ошибки=ТекРегион; // ссылка на регион
					
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион),ФормироватьКомментарий);
				КонецЕсли;
				
				//------------------<Список невыполнившихся условий>-------------------GtG----23.11.2007
				Для каждого ЧПО из СписокНевыполнившихсяУсловий Цикл
					Если СокрЛП(ЧПО.Значение)="" ТОгда
						Продолжить;
					КонецЕсли; 
					Если ФормироватьКомментарий = Истина Тогда
						ВеткаЧПО=ВеткаТОварОшСсы.Строки.Добавить();
						ВеткаЧПО.Ошибки=ЧПО.Значение;
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки,Расшифровка",ЧПО.Значение,ТекРегион),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
				КонецЦикла;	
				
				
				
				ЕстьОшибкиПоГТТ=Истина;
				Продолжить;  // не расценилось
			КонецЕсли; 	
			
			
			
			
			
			//==================<а вот теперь можно начинать считать цену розничную>===================GtG====20.11.2007 
			// Должен сработать алгоритм расценки с наибольшим приоритетом
			// Поэтому с меньшим даже и смотреть не стоит
			
			
			
			//~ПостобработкаЦены:  // безусловный переход сюда, если есть алгоритмы с отрицательным приоритетом.
			// сюда прыгаем после расчета цены по основным алгоритмам с положительным приоритетом	
			Если ПостОбработкаЦены=Ложь Тогда
				ТЗПравил.Сортировать("Приоритет desc");
				// в ТЗ рпавил первыми пойдут условия с максимальным проядком формирования
				//  т.е. самые доделанные. остальные будут недоделанными огрызками и от них надо избавиться
			Иначе
				
				Если  ТЗПРавил.Количество()=0 ТОгда // Это значит, что при обработке отрицательных
					// алгоритмов ни один из них не сработал и товар считаем расцененным по положительному алгоритму
					//??? Продолжить;
				Иначе
					Цена_Розничная = Цена_Розничная/ДокЕитК;  //Вернем обратно маленькую цену, потому что по отриц. алгоритмам расчеты пойдут.  Virus
				КонецЕсли;	
				
								
				ТЗПРавил.Сортировать("Приоритет Asc");
				//Для постобработки розничной цены с помощью алгоритмов с отрицательным приоритетом
			КонецЕсли;
			
			
			
			ЕСЛИ ТЗПравил.Количество()>0 ТОГДА  // ЕСЛИ ИМЕЕТСЯ РАБОЧИЙ АЛГОРИТМ ДЛЯ РАСЧЕТОВ //
				
				РабочийАлгоритм=ТЗПравил.Получить(0); // первая строка сверху по таблице правил расчета
				
				
				Если ФормироватьКомментарий = Истина Тогда
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Алг",Новый Структура("Алг,Расшифровка",РабочийАлгоритм.АлгоритмСсылка,РабочийАлгоритм.АлгоритмСсылка),ФормироватьКомментарий);
				КонецЕсли;
				
				//==================<перед тем, как вычислять цены >===================GtG====22.11.2007
				// нужно проверить все ли условия на ноебходимые данные 
				// по выбранному алгоритму выполняются , НО это еще не гарантирует что он сработает
				
				// ..запросом собарть условия в тз
				// построить условия, вычислить их и получить бульрезультат по всем условиям 
				// через И если в итоге ПРАВДА тогда все ОК иначе алгоритм не сработает
				
				ТХТ="ВЫБРАТЬ
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Реквизит,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.ДолженБыть,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Чему,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Ссылка
				|ИЗ
				|	Справочник.АлгоритмыЦенообразованияРегионов.НеобходимыеРеквизиты КАК АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты
				|ГДЕ
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Ссылка = &ВыбАлгоритм";
				
				
				Запрос=Новый Запрос;
				Запрос.Текст=ТХТ;
				Запрос.УстановитьПараметр("ВыбАлгоритм",РабочийАлгоритм.АлгоритмСсылка);
				
				НеобхРекв=Запрос.Выполнить().Выгрузить();
				НеобхРекв.Колонки.Добавить("УсловиеВыполнилось");
				
				Для каждого СтрНРекв из НеобхРекв Цикл
					
					Если СтрНРекв.ДолженБыть = "СодЗнач" Тогда
						СтруктураРезультата.Комментарий = "Нельзя использовать тип сравнения СодЗнач в необходимых реквизитах алгоритма ценообразования!";
						СтруктураРезультата.ТЗКосяков=ТЗКосяков;
						Возврат СтруктураРезультата;
					КонецЕсли;	
					
					ТекстУсловия=""+СтрНРекв.Реквизит+" "+ СтрНРекв.ДолженБыть+" "+СтрНРекв.Чему;
					СтрНРекв.УсловиеВыполнилось=Вычислить(ТекстУсловия);
				КонецЦикла;	
				
				//------------------<Если какое-либо условие не выполнилось то нихрена не расчитается>-------------------GtG----22.11.2007
				ЕстьОшибкиПоУПА=Ложь;
				Для каждого СтрНРекв из НеобхРекв Цикл
					Если СтрНРекв.УсловиеВыполнилось=Ложь Тогда
						Если ФормироватьКомментарий = Истина Тогда
							ТекстОшибки=""+СтрНРекв.Реквизит+" "+ СтрНРекв.ДолженБыть+" "+СтрНРекв.Чему+" Условие не выполнилось!";
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
						КонецЕсли;
						
						ЕстьОшибкиПоУПА=Истина;
					КонецЕсли; 
				КонецЦикла;	
				Если  ЕстьОшибкиПоУПА=Истина Тогда
					//товар не расценился
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					Продолжить;
				КонецЕсли; 	
				//--------------------------------------------------------GtG----КОНЕЦ--22.11.2007
				
				
				Попытка 
					
					
					//------------------<МОМЕНТ с ценами из АП>--------------------------------GtG----28.11.2007
					// Расчет цены на 1 минимальную единицу
					// Цены если из основного ап считаем заданными на единицу по умолчанию (делим на еёйный К)
					// Если цена задана из АПГТТ то там должна быть ЕИТ на которую задана цена (делим на еёйный К), 
					//
					// Получившуюся Розн цену * на К по документу
					//
					// В РЕГИСТРЕ ЦЕН ХРАНИМ ЦЕНУ В РАСЧЕТЕ НА К=1 ! ДАЛЕЕ ВЕЗДЕ ЕЕ МНОЖИМ НА К ЕДИНИЦЫ
					//
					//------------------<--------------------->--------------------------------GtG----28.11.2007
					
					ФормулаДляРасчетаЦены= РабочийАлгоритм.ФормулаРасчетаЦены;
					ФормулаДляРасчетаПроцНац=РабочийАлгоритм.ФормулаРасчетаПроцентаНаценки;
					
					
					ФормулаДляРасчетаЦены=ПравильнаяФормулаРасчета(ФормулаДляРасчетаЦены);
					ФормулаДляРасчетаПроцНац=ПравильнаяФормулаРасчета(ФормулаДляРасчетаПроцНац);
					
					//------------------------------------------------------------GtG----28.11.2007
					
					Цена_Розничная=Вычислить(ФормулаДляРасчетаЦены); // на идеальную сферическую единицу в вакууме
					
					
					//--- Округляем в БОЛЬШУЮ сторону до 10 копеек
					
					Цена_Розничная=ОМ3_ОтброситьДо10Коп(Цена_Розничная);
					//--- потом при расчете границ наценки обкорнается в меньшую сторону
					Если ФормироватьКомментарий = Истина Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаДляРасчетаЦены,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
					КонецЕсли;
					
				Исключение
					
					
					//Начало добавил 19.11.2012  Васильченко
					Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
						//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
						
						
						
						Цена_Розничная=0;
						СтрТП=Тп.Добавить();
						СтрТП.ТОвар=СтрТОвар; //ссылка
						СтрТП.Партия=ДанныеТекПартии["Партия"];
						СтрТП.ЕИТ=ДокЕит;
						СтрТП.КоэффЕит=ДокЕитК;
						СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
						СтрТП.ЦенаГосРег=0;
						СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
						СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
						СтрТП.ЖНВЛС  = Стр.ЖНВЛС;
						СтрТП.СтавкаНДС  = Стр.СтавкаНДС;

						
						СтрТП.Топ100=Товар.Топ100;
						СтрТП.Топ1000=ТОвар.Топ1000;
						
						СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
						СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
						СтрТП.Регион  =ТекРегион;
						СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
						
						СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
						СтрТП.НН=НН;
						СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
						СтрТП.Остаток = Остаток;
						
						Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
							СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
							СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
							СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
						КонецЕсли;
						

					КонецЕсли;					
					//Конец добавил 19.11.2012  Васильченко
					
					Если ФормироватьКомментарий = Истина Тогда
						ТекстОшибки="Ошибка при расчете розничной цены:";
						ООШ=ОписаниеОшибки();
						
						
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);	
						
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаЦены),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
					ЕстьОшибкиПоГТТ=Истина;
					
					Продолжить;								
				КонецПопытки;
				
				Попытка 
					пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),4,РежимОкругления.Окр15как20); // В большую СТОРОНУ!  
					
					Если ФормироватьКомментарий = Истина Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
					КонецЕсли;
				Исключение
					
					Если ФормироватьКомментарий = Истина Тогда
						ТекстОшибки="Ошибка при расчете процента наценки:";
						ООШ=ОписаниеОшибки();
						
						ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						
						ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						ВеткаТОварОш.Ошибки=ТекстОшибки;
						
						ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
						
						ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаПроцНац),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
					
					ЕстьОшибкиПоГТТ = Истина;
					
					Продолжить;								
				КонецПопытки;
				
				МинПроцНаценки=Вычислить(РабочийАлгоритм.МинПроцНаценки);
				
				МаксПроцНаценки=Вычислить(РабочийАлгоритм.МаксПроцНаценки);
				
				//КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки));
				
				Если  ФормироватьКомментарий = Истина Тогда
					Если МинПроцНаценки=0  Тогда
						МинПроцНаценки=Константы.МинимальноДопустимаяНаценка.Получить();
						
						Ахтунг_Дангер=""+ТекРегион+"  "+ТОВар.Наименование+" Не удалось вычислить минимальный процент наценки по формуле "+РабочийАлгоритм.МинПроцНаценки+"
						| принимаем = "+МинПроцНаценки+" %";
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);		
						
					КонецЕсли; 	
					
					Если МаксПроцНаценки=0 Тогда
						МаксПроцНаценки=70;
						Ахтунг_Дангер=(""+ТекРегион+"  "+ТОВар.Наименование+" Не удалось вычислить максимальный процент наценки по формуле "+РабочийАлгоритм.МаксПроцНаценки+"
						| принимаем = "+МаксПроцНаценки+" %");
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);		
						
						
					КонецЕсли; 	
					
					// прокомментируем новые границы процента наценки
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки), ФормироватьКомментарий);
					
				КонецЕсли;
				
				//==================<зарубим лишнее / добавим если процент наценки вылез за границы максимально-минимального диапазона>===================GtG====20.11.2007
				
				Если  пРОЦЕНТ_Наценки>МаксПроцНаценки тогда
					//Зарубим
					Если ФормироватьКомментарий = Истина Тогда
						Ахтунг_Дангер=("Превышение максимального процента наценки! Уменьшаем наценку..."+пРОЦЕНТ_Наценки+">"+МаксПроцНаценки);
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);
					КонецЕсли;
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+МаксПроцНаценки) / (100+Окр(пРОЦЕНТ_Наценки,1)) )";// в меньшую сторону
					// чем больше бы лпроцент наценки тем меньше будет цена( про копейки)
					
					Попытка
						
						
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);// в меньшую сторону (актуально для ЖНВЛС)
						
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
						КонецЕсли;
						
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненной цены";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
							
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР),ФормироватьКомментарий);
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
						
					КонецПопытки;
					
					Попытка
						//----------------------------< пересчитаем процент наценки по скорректированной Розничной цене >--------------------------------GtG--- 
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),3,РежимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
						
						
						
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненного процента наценки";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
				ИначеЕсли пРОЦЕНТ_Наценки<МинПроцНаценки Тогда
					
					ЕстьКосякТопа=Ложь;
					
					Если ТОвар.Топ100=Ложь ТОгда
						ПодтягиватьКПроценту= "МинПроцНаценки"; // было  "МаксПроцНаценки";
					Иначе   // Если заниженный процент по ТОП 100 то это - косяк и товар надо возвращать или пересматривать цену на товар в АП
						ПодтягиватьКПроценту="МинПроцНаценки";
						
						//Косяк=ТЗКосяков.Добавить();
						//Косяк.Партия=Стр.Партия;
						//Косяк.ТОвар=Стр.Товар;
						//Косяк.Косяк="ТОП 100! Заниженный процент наценки! Слишком высокая закупка! Вернуть или пересмотреть цену в АП!";
						
						//ЕстьКосякТопа=Истина;
					КонецЕсли;
					
					
					//Подтянем
					Если ФормироватьКомментарий Тогда
						Ахтунг_Дангер=("Заниженный процент наценки! Рассчитываем по "+ПодтягиватьКПроценту+" ..."+пРОЦЕНТ_Наценки+"<"+МинПроцНаценки);
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);
					КонецЕсли;
					
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+"+ПодтягиватьКПроценту+") / (100+пРОЦЕНТ_Наценки) )";// в меньшую сторону  топ 100, в большую остальные 
					
					Попытка
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
						КонецЕсли;
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненной цены";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР),ФормироватьКомментарий);
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
					
					Попытка
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),6,режимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
					Исключение
						Если ФормироватьКомментарий Тогда
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненного процента наценки";
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
							
							ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					КонецПопытки;
					
					
					Если ЕстьКосякТопа=Истина ТОгда
						Косяк.ЦенаПоРасценке=Цена_Розничная*ДокЕитК;
					КонецЕсли; 
					
				КонецЕсли;
				
				ЦенаЕд=Цена_Розничная; // для комментатора

				//ПредыдущаяРознЦена=ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
				
				//СпособОкругления = Неопределено;
				//МетодОкругления = Неопределено;
				
				//Округление цены по новым правилам из справочника МатрицаОкругления
				Если ТекРегион.ИспользоватьМатрицуОкругления = Истина Тогда
					ПроцентОтклоненияВверх	= неопределено;
					ПроцентОтклоненияВниз	= неопределено;
					ЦенаДоКорректировки = Цена_Розничная;
					Для каждого строкаМО из ТЗМатрицаОкруглений Цикл
						Если (Цена_Розничная >= строкаМО.Цена1 и Цена_Розничная <=строкаМО.Цена2 ) и ТОвар.ЖНВЛС = строкаМо.ИспользоватьДляЖВ Тогда
							Цена_Розничная = Округлить(Цена_Розничная,строкаМО.СпособОкругления,строкаМО.МетодОкругления);
							Если ФормироватьКомментарий Тогда
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Округление",Новый Структура("СпособОкругления,ЦенаДоОкругления,ЦенаПослеОкругления",строкаМО.СпособОкругления,ЦенаДоКорректировки,Цена_Розничная),ФормироватьКомментарий);
							КонецЕсли;
							//СпособОкругления = строкаМО.СпособОкругления;
							//МетодОкругления = строкаМО.МетодОкругления;	
							ПроцентОтклоненияВверх	= строкаМО.ПроцентОтклоненияВверх;
							ПроцентОтклоненияВниз	= строкаМО.ПроцентОтклоненияВниз;
							Прервать;	
						КонецЕсли;
					КонецЦикла;				
				КонецЕсли;
				
				//==================<Реальная несферическая единица не в вакууме>===================GtG====28.11.2007
				Цена_Розничная=Цена_Розничная*ДокЕитК;

				
				Если  ТекРегион.ИспользоватьПредыдущуюРозничнуюЦенуПриРасценке=Истина тогда
					//------------------<Подгоняем новую розничную под старую>-------------------GtG----27.11.2008
					// Считаем процент наценки по алг расчета процента исходя из старой цены Nold
					// Считаем процент наценки по алг расчета процента исходя из новой цены  Nnew
					// если Nold-Nnew >10% тогда  берем цену по расценке (как более правильную)
					//  <10% берем старую цену , ибо нормально
					Если 	ТОвар.ЖНВЛС=Ложь 		и 
						Товар.Топ100=Ложь 		и Остаток > 0  и 
						ОМ6_ЕстьСпецЦена(Товар.Ссылка,Склад,ДатаДок,ДанныеТекПартии)=ложь и    //????? Virus
						ПредыдущаяРознЦена>0  и Цена_Розничная > 0  
						Тогда					                
						ЦенаДоКорректировки = Цена_Розничная;
						Если Цена_Розничная > ПредыдущаяРознЦена Тогда
							Если ((Цена_Розничная/ПредыдущаяРознЦена)-1)*100 < ПроцентОтклоненияВверх Тогда 
								Цена_Розничная = ПредыдущаяРознЦена;
							КонецЕсли;
						ИначеЕсли Цена_Розничная < ПредыдущаяРознЦена Тогда
							Если ((ПредыдущаяРознЦена/Цена_Розничная)-1)*100 < ПроцентОтклоненияВниз Тогда 
								Цена_Розничная = ПредыдущаяРознЦена;
							КонецЕсли;
						Иначе
						КонецЕсли;
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"КорректировкаЦены",Новый Структура("ПредыдущаяЦена,ЦенаДоКорректировки,ЦенаПослеКорректировки",ПредыдущаяРознЦена,ЦенаДоКорректировки,Цена_Розничная),ФормироватьКомментарий);
						КонецЕсли;
					КонецЕсли;	
					Если ФормироватьКомментарий Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Рез",Новый Структура("ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки",ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
					КонецЕсли;
					
				КонецЕсли; // регион использует расценку с подтягиванием предыдущей розничной цены
				
				
				
				//------------------<еще проверочку на превыешние закупочной цены розничной рассчитанной чтобы в минус не ушло>-------------------GtG----21.11.2007
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					Если Цена_Розничная<=Док.ЦенаЗакуп  Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар=СтрТОвар;
							СтрТП.Партия=ДанныеТекПартии["Партия"];
							СтрТП.ЕИТ=ДокЕит;
							СтрТП.КоэффЕит=ДокЕитК;
							СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
							СтрТП.ЦенаГосРег=0;
							СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.ЖНВЛС  = Стр.ЖНВЛС;
							СтрТП.СтавкаНДС  = Стр.СтавкаНДС;
							
							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
							
							СтрТП.Топ100=Товар.Топ100;
							СтрТП.Топ1000=ТОвар.Топ1000;
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток = Остаток;
							
							Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
								СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
								СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
								СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
							КонецЕсли;
							

						КонецЕсли; 
						
						
						
						Если ФормироватьКомментарий Тогда
							
							ТекстОшибки="Розничная цена оказалась меньше закупочной!    ("+Товар.Код+")  "+Товар.Наименование+"    Не РАСЦЕНЕН!";
							
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ЕстьОшибкиПоГТТ=Истина;
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КонецЕсли;
						
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;

						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия=Стр.Партия;
						Косяк.ТОвар=Стр.Товар;
						Косяк.Косяк="Розничная цена оказалась меньше закупочной! НЕ РАСЦЕНЕН!";
						Косяк.ЦенаПоРасценке=Цена_Розничная;
						
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					//==================<Не ТОПОВЫЕ позиции наценка от закупки с ндс НЕ МЕНЕЕ 10% полюбому>===================GtG====21.01.2008
					Если (ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"],Цена_Розничная)<МинимальныйПроцентНаценкиКромеТопов)
						И (Товар.Топ100=Ложь и ТОвар.Топ1000=Ложь)
						Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар=СтрТОвар;
							СтрТП.Партия=Док.Партия;
							СтрТП.ЕИТ=ДокЕит;
							СтрТП.КоэффЕит=ДокЕитК;
							СтрТП.ЦенаПрБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
							СтрТП.ЦенаГосРег=0;
							СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.ЖНВЛС  = Стр.ЖНВЛС;
							СтрТП.СтавкаНДС  = Стр.СтавкаНДС;

							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
							
							СтрТП.Топ100=Товар.Топ100;
							СтрТП.Топ1000=ТОвар.Топ1000;
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток = Остаток;
							
							Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
								СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
								СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
								СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
							КонецЕсли;


						КонецЕсли; 
						
						Если ФормироватьКомментарий  Тогда
							ТекстОшибки="НЕ ТОПОВЫЙ товар, наценка от закупки с НДС меньше "+МинимальныйПроцентНаценкиКромеТопов+"% ("+Товар.Код+")  "+Товар+"    Не РАСЦЕНЕН!";
							
							ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							
							ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КонецЕсли;
						
						ЕстьОшибкиПоГТТ=Истина;

						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
						Продолжить;
					КонецЕсли;
					//================================================GtG====КОНЕЦ==21.01.2008
				КонецЕсли;
				
				
				//----------------------------< комментарий окончательного результата по товару >--------------------------------GtG--- 
				//КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Рез",Новый Структура("ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки",ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки));
				
				//==================<Проверяем отклонение новой розничной цены от старой, не более чем в 2 раза>===================GtG====28.11.2008
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					Если ПредыдущаяРознЦена>0 Тогда
						КонтрольноеОтклонение=ПредыдущаяРознЦена/(Цена_Розничная);
						
						Если КонтрольноеОтклонение<=0.5 или КонтрольноеОтклонение>=2 тогда
							// это косяк. цена отличается более чем в 2 раза от предыдущей
							Если ФормироватьКомментарий Тогда
								ТекстОшибки="Розничная цена отличается более чем в 2 раза от предыдущей розничной!";
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КонецЕсли;
							
							Косяк=ТЗКосяков.Добавить();
							Косяк.Партия=Стр.Партия;
							Косяк.ТОвар=Стр.Товар;
							Косяк.Косяк="Розничная цена отличается более чем в 2 раза от предыдущей розничной!";
							// попадет в тч ошибок расценки и документ не проведется
							
						КонецЕсли;
					КонецЕсли; 
				КонецЕсли;
				//================================================GtG====КОНЕЦ==28.11.2008
				
				
			КОНЕЦЕСЛИ;  // ЕСЛИ ИМЕЕТСЯ РАБОЧИЙ АЛГОРИТМ ДЛЯ РАСЧЕТОВ //
			
			
			
			///// ==========ЕСЛИ в регионе есть алгоритмы с отрицательным приоритетом, то прогоним еще раз по ним
			
			ИсходнаяТЗПравил.Сортировать("Приоритет Asc, ПорядокФормированияУсловия asc");

			Если ИсходнаяТЗПравил.Получить(0).Приоритет < 0 и 
				 	ПостОбработкаЦены=Ложь 
					//и 
				 	//ОМ6_ЕстьСпецЦена(Товар.Ссылка,Склад,ДатаДок)=истина   
					тогда
					ТЗПРавил=ИсходнаяТЗПРавил.Скопировать();
					ПостОбработкаЦены=Истина;
					Перейти ~ПостобработкаЦены; // 1 дополнительный проход по товару
				
			КонецЕсли;
			
			
			//==================<Выводим строку расцененного товара >===================GtG====20.11.2007
			СтрТП=Тп.Добавить();
			СтрТП.НН=НН;
			СтрТП.ТОвар=СтрТОвар;
			СтрТП.Партия=ДанныеТекПартии["Партия"];
			СтрТП.ЕИТ=ДокЕит;
			СтрТП.КоэффЕит=ДокЕитК;
			СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
			СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;
			СтрТП.Остаток = Остаток;
			СтрТП.Регион=ТекРегион;
			
			Если Авторасценка = Ложь Тогда
				СтрТП.ЦенаПРБезНДС=ДанныеТекПартии["ЦенаПроизводителяБезНДС"];
				СтрТП.ЦенаГосРег=0;
				СтрТП.ЦенаЗакуп =ДанныеТекПартии["ЦенаЗакуп"];
				СтрТП.Топ100=Товар.Топ100;
				СтрТП.Топ1000=ТОвар.Топ1000;
				СтрТП.ЖНВЛС  = Стр.ЖНВЛС;
				СтрТП.СтавкаНДС  = Стр.СтавкаНДС;

				СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
				СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
				СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаЗакуп"]-ОМ3_НДСИзСуммыПоСтавке(ДанныеТекПартии["ЦенаЗакуп"],ДанныеТекПартии["СтавкаНДС"],2),Цена_Розничная);
				СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (ДанныеТекПартии["ЦенаПроизводителяБезНДС"],Цена_Розничная);			
				Если НЕ СтрокаЦеныКонкурента = Неопределено Тогда
					СтрТП.МинимальнаяЦена = СтрокаЦеныКонкурента.МинЦена;
					СтрТП.СредневзвешеннаяЦена = СтрокаЦеныКонкурента.СВЦена;
					СтрТП.Конкурент = СтрокаЦеныКонкурента.ИмяКонкурента;
				КонецЕсли;
			КонецЕсли;
			
			#Если Клиент Тогда
				Состояние("расчет " + НН + " из " + КоличествоСтрок);
			#КонецЕсли			
			
		КонецЦикла;	// по строкам документа
		

		
		
		Если ЕстьОшибкиПоГТТ=Ложь и ФормироватьКомментарий = Истина тогда
			ВеткаТОварОш=ВеткаРегион.Строки.Добавить();
			ВеткаТОварОш.Ошибки="ОК. Ошибок нет";
		КонецЕсли;
		
		
		Если Цена_Розничная=0 ТОгда
			Косяк=ТЗКосяков.Добавить();
			Косяк.Партия=Стр.Партия;
			Косяк.ТОвар=Стр.Товар;
			Косяк.Косяк="Товар не расценился.";
		КонецЕсли;	
		
		
	КонецЦикла; // по Регионам
	
	
	
	//Расценка несопоставленных позиций
	
	ПостОбработкаЦены=Ложь;
	
	Отбор = Новый структура();
	Отбор.Вставить("Сопоставлен",Ложь);
	ТЧТовар= Документ.Товар.Выгрузить(Отбор); 
	Если ТЧТовар.Количество()=0 Тогда
		Если ФормироватьКомментарий Тогда
			Таб.ЗакончитьГруппуСтрок();
		КонецЕсли;
		СтруктураРезультата.ТаблицаКомментариев = Таб;
		СтруктураРезультата.ТП = ТП;
		СтруктураРезультата.ДеревоОшибок = ДО;
		СтруктураРезультата.ТЗКосяков=ТЗКосяков;
		
		Если ЕстьОшибки или ЕстьОшибкиПоГТТ или ЕстьОшибкиПоУПА или ТЗКосяков.Количество() > 0 Тогда
			СтруктураРезультата.Результат = Ложь;
		Иначе
			СтруктураРезультата.Результат = Истина;
		КонецЕсли;                                                                                                     
		
		Возврат СтруктураРезультата;
		
	КонецЕсли;
	
	
	СписокСтрокДокумента=ТЧТовар.ВыгрузитьКолонку("НаименованиеТовара366");
	
	
	////ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Поиск старых розничных цен...";
	//Если ПроверятьЗакупкуИРозницу = Истина Тогда
	//	ТаблицаСтарыхРознЦен=ПолучитьТаблицуСтарыхРозничныхЦен366(ДатаДок,Склад,Регион,СписокСтрокДокумента,Документ);
	//КонецЕсли;
	////ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Старые розн. цены получены.";
	//
	
		
	
	//ТЧ = ТЧТовар.Скопировать(,"НаименованиеТовара366,Партия,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС,ЖНВЛС,ГруппаТовара"); //ЭВФ.Товар.Выгрузить();

	//ТЧ.Свернуть("НаименованиеТовара366,Партия,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС,ЖНВЛС,ГруппаТовара","");
	
		
				
	ТекРегион=РегионДляНесопоставленных;
		
		

	//ВеткаРегион=Корень.Строки.Добавить();
	//ВеткаРегион.Ошибки="по Региону   "+ТекРегион;
	//	
		
	КомментаторРасчета  (Неопределено,Таб,Макет,"Регион",Новый Структура("Регион",ТекРегион),ФормироватьКомментарий);
		
		
		
		//------------------<Получим алогоритмы ценообразования из справочников>-------------------GtG----16.11.2007
		//Регион
		//	Алгоритмы ценообразования
		//		УСЛОВИЯ ПРИМЕНЕНИЯ АЛГОРИТМОВ
		// Выборку строим начиная с конца (УПА)
		ТХТ="ВЫБРАТЬ
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ЛеваяЧасть,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ТипУсловия,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ПраваяЧасть,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ОбъединятьСоСледующим,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ПорядокФормированияУсловия КАК ПорядокФормированияУсловия,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Приоритет КАК Приоритет,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаС,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаПо,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.МинПроцНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.МаксПроцНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ФормулаРасчетаЦены,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ФормулаРасчетаПроцентаНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Ссылка КАК АлгоритмСсылка,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ОткрывающаяСкобка КАК ОСК,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ЗакрывающаяСкобка как ЗСК
		    |ИЗ
		    |	Справочник.АлгоритмыЦенообразованияРегионов.УсловияПрименения КАК АлгоритмыЦенообразованияРегионовУсловияПрименения
		    |ГДЕ
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Владелец = &Регион
		    |	И &ДатаДок МЕЖДУ АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаС И АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаПо
		    |
		    |УПОРЯДОЧИТЬ ПО
		    |	Приоритет,
		    |	ПорядокФормированияУсловия";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Регион",ТекРегион); 
		Запрос.УстановитьПараметр("ДАТАДок",ДатаДок);
		
		ИсходнаяТЗПравил=Запрос.Выполнить().Выгрузить(); // сырые данные
		ИсходнаяТЗПравил.Колонки.Добавить("УсловиеВыполнилось");
		ИсходнаяТЗПРавил.Колонки.Добавить("ВырИтУсл");  // выаржение для вычисления иотгового результата условия примеенния
		
		
		
		Если ИсходнаяТЗПРавил.Количество()=0 ТОгда
			ТекстОшибки=("   По региону  "+РегионДляНесопоставленных+" не задано ни одного алгоритма ценообразования! НЕ РАСЦЕНЕНО! (Задается через справочник регионов.)");
			
			//ОшибкаРЕгион=ВеткаРегион.Строки.Добавить();
			//ОшибкаРегион.Ошибки=ТекстОшибки;
			//СсылкаРегион=ОшибкаРЕгион.Строки.Добавить();
			//СсылкаРегион.ошибки=ТекРегион;
			
			КомментаторРасчета  (Неопределено,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион),ФормироватьКомментарий);
			
			СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
			
			СтруктураРезультата.ТаблицаКомментариев = Таб;
			СтруктураРезультата.ТП = ТП;
			СтруктураРезультата.ДеревоОшибок = ДО;
			СтруктураРезультата.ТЗКосяков=ТЗКосяков;
			
			Если ЕстьОшибки или ЕстьОшибкиПоГТТ или ЕстьОшибкиПоУПА или ТЗКосяков.Количество() > 0 Тогда
				СтруктураРезультата.Результат = Ложь;
			Иначе
				СтруктураРезультата.Результат = Истина;
			КонецЕсли;                                                                                                     
			
			Возврат СтруктураРезультата;
			
		КонецЕсли; 	
		
		ТЗХ=ИсходнаяТЗПРавил.Скопировать(,"Приоритет");
		ТЗХ.Свернуть("Приоритет"); //,ПорядокФормированияУсловия");
		КоличествоАлгоритмов=ТЗХ.Количество();
		
		
		
		//------------------<Собираем из кусочков сложные условия>-------------------GtG----16.11.2007
		//ВеткаТовары=ВеткаРегион.Строки.Добавить();
		//ВеткаТовары.Ошибки=" Ошибки при расценке товара по региону  ";
		ЕстьОшибкиПоГТТ=Ложь;
		
		
		КоличествоСтрок = ТЧТовар.Количество();
		
		//НН=0;
		
		
		ИсходнаяТЗПРавил.Сортировать("ПРиоритет,ПорядокФормированияУсловия");
		
				
		
		//ДанныеПоТоварамДокумента = ПолучитьДанныеПоТОварамДокумента(Документ); //04-03-2013// ТОВАРЫ ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		//ДанныеПоПартиямДокумента = ПолучитьДанныеПоПартиямДокумента366(Документ);  //04-03-2013// Партии ИЗ ДОКУМЕНТА С РЕКВИЗИТАМИ В ТЗ
		
		//ЭлементыФормы.ХодРасценкиТОвар.Заголовок="Расчет цен по строкам документа...";
		Для каждого Стр из ТЧТовар Цикл // по строкам документа
			
			ПостОбработкаЦены=Ложь;
			
			//ДанныеТекПартии=ДанныеПоПартиямДокумента.Найти(Стр.Партия,"Партия");// строка тз
			
			
			НН=НН+1;
			
			
			ТОВАР= Новый Структура();//ДанныеПоТоварамДокумента.найти(Стр.Товар,"ССЫЛКА"); // строка ТЗ
			ТОВАР.Вставить("Ссылка",стр.НаименованиеТовара366);
			ТОВАР.Вставить("Код",стр.Партия);
			ТОВАР.Вставить("ЖНВЛС",стр.ЖНВЛС);
			
			МинЦенаКонкурента = 0;
			
				
			СтрТОвар=Товар.Ссылка;
			СтрТОварКод=Товар.Код;
			
			Если ФормироватьКомментарий Тогда
				КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Товар",Новый Структура("ТОВар,Расшифровка,ТОВарКод",СтрТОвар,СтрТОвар,СтрТОварКод),ФормироватьКомментарий);
			КонецЕсли;
			
			#Если Клиент Тогда
				Если АвтоРасценка=Ложь ТОгда
					
					Дрыг=цел(КоличествоСтрок/100);
					Если Дрыг=0 тогда Дрыг=1 конецесли;
					
					
					если  НН%Дрыг=0 тогда
						Состояние("расчет " + НН + " из " + КоличествоСтрок);
					КонецЕсли;
					
				КонецЕсли;	
			#КонецЕсли
			
			ВеткаТовар= Неопределено;
			
			Если Стр.Количество=0 тогда
				Если ФормироватьКомментарий = Истина Тогда
					ТекстОшибки="Расценим, НО Фактическое количество товара равно нулю! ("+СтрТоварКод+")  "+СтрТовар+"    Не РАСЦЕНЕН!";
					
					//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
					//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					//ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
				КонецЕсли;
				ЕстьОшибкиПоГТТ=Истина;
				СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
				//Продолжить;
			КонецЕсли; 
			
			
			
			ТЗПРавил=ИсходнаяТЗПРавил.Скопировать();
			РознЦена=0;
			
			
			//------------------<строка документа>-------------------GtG----17.11.2007 
			Док=Стр;
			
			ДокЕитК=Док.Коэфф;  // коэффициент единицы измерения из документа
			ДокЕИТ=""; //Док.Еит;
			//КонецЕсли; 
			
			//Если ПроверятьЗакупкуИРозницу = Истина Тогда  //Virus 04.03.2013
			//	Отбор = Новый Структура();
			//	//Отбор.Вставить("Регион",Регион);
			//	Отбор.Вставить("Товар",Товар.Ссылка);
			//	Строки = ТаблицаСтарыхРознЦен.НайтиСтроки(Отбор);
			//	Если Строки.Количество() > 0 Тогда
			//		ПредыдущаяРознЦена = Строки[0].ПрошлаяЦена;
			//		Остаток			 =  Строки[0].Остаток;
			//	Иначе
			//		ПредыдущаяРознЦена = 0;
			//		Остаток = 0;
			//	КонецЕсли;
			//Иначе
				ПредыдущаяРознЦена = 0;
				Остаток = 0;
			//КонецЕсли;
			
			
			СтрокаЦеныКонкурента = Неопределено;
			
			~ПостобработкаЦеныНесопоставленные:  // безусловный переход сюда, если есть алгоритмы с отрицательным приоритетом.
			
			
			//------------------<Рассчитываем условия по каждой строке условий применения алгоритма>-------------------GtG----17.11.2007 
			// Если условие составное это даст для каждой части ИСТИНА или ЛОЖЬ потом их можно
			// загнать в одно выражение и получить результат
			
			ТЗПравил.Колонки.Добавить("РасшифровкаОшибки");
			
			Для каждого СтрП из ТЗПравил Цикл  // по таблице правил
				
				Если ПостОбработкаЦены=Истина Тогда // при повторной обработке отрицательных алгоритмов не берем положительные вообще
					Если  СтрП.приоритет>0 Тогда
						СтрП.УсловиеВыполнилось=Ложь;
						ПРодолжить;
					КонецЕсли;
				КонецЕсли;	
				
				
				
				
				Если СтрП.ЗСК=Истина или СтрП.ОСК=Истина Тогда // это скобка "(" или ")"
					СтрП.УсловиеВыполнилось=Истина; // скобки всегда считаем истинными
				Иначе// собственно это условие	 
					ЗначениеПРавойЧасти=СтрП.ПраваяЧасть;
					
					Если ТипЗнч(ЗначениеПРавойЧасти)=Тип("Строка") Тогда // значит это формула и ее нужно вычислить
						ЗначениеПРавойЧасти =Вычислить( ЗначениеПРавойЧасти );
					КонецЕсли;	
					
					ТХТВычислить=""+СтрП.ЛеваяЧасть+" "+СтрП.ТипУсловия+" ЗначениеПРавойЧасти";
					
					
					Если  СтрП.ТипУсловия="СодЗнач" Тогда // вычисляет сидит ли значение Лева в таблице значений Права
						ТХТВычислить=""+Условие_СодЗнач(Вычислить(СтрП.ЛеваяЧасть),ЗначениеПРавойЧасти)+"";
						
						// ТХТВычислить будет как "Истина" или "Ложь"
					КонецЕсли;
					
					
					

					Попытка
							СтрП.УсловиеВыполнилось=Вычислить(ТХТВычислить);		
					Исключение  //ибо могут накосячить при написании условий
						Комментарий=ОписаниеОшибки()+"
									|Ошибка вычисления выражения. 
									|Алгоритм  "+СтрП.АлгоритмСсылка+"
									|"+СтрП.ЛеваяЧасть+" Условие сравнения "+СтрП.ТипУсловия+" Значение в правой части "+ЗначениеПРавойЧасти; 
						СтруктураРезультата.Комментарий = Комментарий;
						СтруктураРезультата.ТЗКосяков=ТЗКосяков;
						#Если Клиент Тогда
							//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТОвар);
							//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							//ВеткаТОварОш.Ошибки=Комментарий;
					
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
	
							ВызватьИсключение Комментарий;
						#Иначе
							Возврат СтруктураРезультата; // точно! - накосячили.
						#КонецЕсли
					КонецПопытки ;
					
					
					
					Если СтрП.УсловиеВыполнилось=Ложь Тогда
						СтрП.РасшифровкаОшибки="Не выполнилось условие "+ТХТВычислить;// СтрЗаменить(ТХТВычислить,"ЗначениеПРавойЧасти",ЗначениеПРавойЧасти);//+", а по товару "+Вычислить(СтрП.ЛеваяЧасть);
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла;	// по таблице правил
			
			
			Приоритет=0;
			ВырИтУсл="";
			
			Для каждого СтрП из ТЗПравил Цикл  // по таблице правил 2 заход
				
				Если Приоритет<>СтрП.Приоритет Тогда // новое правило расчета
					ВырИтУсл="";
					
					Приоритет=СтрП.Приоритет; // запомним какой был последним
					
				КонецЕсли;	
				
				
				Если СтрП.ЗСК=Истина Тогда // это скобка ")"
					СтрПУсловиеВыполнилось=")"
				ИначеЕсли СтрП.ОСК=Истина Тогда // это скобка "("
					СтрПУсловиеВыполнилось="("
				Иначе  // Это условие
					СтрПУсловиеВыполнилось =СтрП.УсловиеВыполнилось;
				КонецЕсли; 	
					
				
				
				СтрП.ВырИтУсл=ВырИтУсл+" "+СтрПУсловиеВыполнилось+" "+СтрП.ОбъединятьСоСледующим;
				ВырИтУсл= СтрП.ВырИтУсл;// в последней строке сложного условия оно соберется все целиком
				// эта строка будет имет ьмакс порядок формирования
				
				
			КонецЦикла; // по таблице правил 2 заход
			
			//------------------<Свернет таблицу правил>-------------------GtG----20.11.2007
			
			
			ТЗПРавил.Сортировать("ПорядокФормированияУсловия Desc");
			ТЗПРавил.Сортировать("Приоритет Asc");

			
						
			ТЗПравил.Колонки.Удалить("ЛеваяЧасть");
			ТЗПравил.Колонки.Удалить("ТипУсловия");
			ТЗПравил.Колонки.Удалить("ПраваяЧасть");
			ТЗПравил.Колонки.Удалить("ОбъединятьСоСледующим");
			ТЗПравил.Колонки.Удалить("УсловиеВыполнилось");
			
			ППР=0; // правилоПриоритет
			ППФУ=0;  // правило, порядок формирования условия
			Удаляемыестроки=Новый СписокЗначений;
			
			СписокНевыполнившихсяУсловий=Новый СписокЗначений; // для человеческой расшифровки ошибки если
			// ни один алгоритм не подойдет	
			
			
			// АХТУНГ ДАНГЕР!
			
						
			//ПРи большом кол-ве условий неправильный порядок условий
			
			ТЗПравил.Колонки.Добавить("ЭтоУдаляемоеУсловие");
			ТЗПРавил.ЗаполнитьЗначения(Ложь,"ЭтоУдаляемоеУсловие");
			
			Для каждого СтрП из ТЗПравил Цикл
				
				
				Если ППР<СтрП.Приоритет Тогда
					ППР=СтрП.Приоритет ;    // правило приоритет
					ППФУ=СтрП.ПорядокФормированияУсловия; //правило, порядок формирования условия)
				КонецЕсли;	
				
				
									
				Если СтрП.ПорядокФормированияУсловия < ППФУ Тогда
					// это огрызок недоделанного сложного условия
					// его надо убрать чтоб дальше не мешался
					СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
					Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП);
                КонецЕсли; 
				
				//======================= Самый медленный кусок ======================
				Если прав( СтрП.ВырИтУсл,2)=" И" Или  прав( СтрП.ВырИтУсл,4)=" ИЛИ" Тогда
					СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
					Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
				Иначе
					Попытка
						Если Вычислить(СтрП.ВырИтУсл)=Ложь Тогда
							//------------------<Еще подуменьшим количество условий>-------------------GtG----20.11.2007 
							// Отбросим ложные строки
							СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
							Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
						КонецЕсли; 
					Исключение
						//------------------<Точно это огрызок сложного условия и он не посчитается>-------------------GtG----29.12.2007
						// Отбросим ложные строки
						СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
						Стрп.ЭтоУдаляемоеУсловие=Истина;   //Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
					КонецПопытки; 
				КонецЕсли; 
                //====================================================

			КонецЦикла;	
			
			
			
			//------------------<Удаляем неподходящие алгоритмы>-------------------GtG----23.11.2007
			//Для каждого СтрУС из Удаляемыестроки Цикл
			//	Попытка
			//		ТЗПРавил.Удалить(СтРУС.Значение);// удаляем лишние строки условий 
			//	ИСключение
			//		// значит уже прибили нах
			//	КонецПопытки; 
			//КонецЦикла;	
			ТЗПравил=ТзПравил.Скопировать(Новый Структура("ЭтоУдаляемоеУсловие",Ложь));
			
			
			
			
			
			//------------------<Должны остаться только подходящие>-------------------GtG----23.11.2007
			// если ничего не подошло - расценка невозможна 
			// выведем список невыполнившихся условий и перейдем к расценке следующего товара
			Если ТЗПравил.Количество()=0  и ПостОбработкаЦены=Ложь Тогда
				
				Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
					//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
					
					//ДокПартияЦенаЗакуп=ДанныеТекПартии["ЦенаЗакуп"]; // 1 раз лезем в базу
					
					Цена_Розничная=0;
					СтрТП=Тп.Добавить();
					СтрТП.ТОвар=СтрТОвар; //ссылка
					СтрТП.Партия=стр.Партия;
					СтрТП.ЕИТ=ДокЕИТ;
					СтрТП.КоэффЕит=ДокЕитК;
					СтрТП.ЦенаПрБезНДС=Стр.ЦенаПроизводителя;
					СтрТП.ЦенаГосРег=0;
					СтрТП.ЦенаЗакуп =Стр.ЦенаЗакуп;
					СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
					СтрТП.ЖНВЛС  = Стр.ЖНВЛС;
					СтрТП.СтавкаНДС  = Стр.СтавкаНДС;

					
					СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
					СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
					СтрТП.Регион  =ТекРегион;
					СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (Стр.ЦенаЗакуп-ОМ3_НДСИзСуммыПоСтавке(Стр.ЦенаЗакуп,Стр.СтавкаНДС,2),Цена_Розничная);
					
					СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (Стр.ЦенаПроизводителяБезНДС,Цена_Розничная);
					СтрТП.НН=НН;
					СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
					СтрТП.Остаток = Остаток;
					
				КонецЕсли; 
				
				Попытка
					Косяк=ТЗКосяков.Добавить();
					Косяк.Партия=СтрТП.Партия;
					Косяк.ТОвар=СтрТП.ТОвар;
					Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
				Исключение
					Попытка
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия="Партия неизвестна";
						Косяк.ТОвар=СтрТП.ТОвар;
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					Исключение
						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия="Партия неизвестна";
						Косяк.ТОвар="Товар неизвестен!";
						Косяк.Косяк="Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					КонецПопытки;
				КонецПопытки; 
				
				

				
				
				Если ФормироватьКомментарий = Истина Тогда
					
					ТекстОшибки=" Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
					
					//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
					//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					//ВеткаТОварОш.Ошибки=ТекстОшибки;
					//ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
					//ВеткаТОварОшСсы.Ошибки=СтрТОвар; // ссылка на товар
					//ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
					//ВеткаТОварОшСсы.Ошибки=ТекРегион; // ссылка на регион
					
					
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион),ФормироватьКомментарий);
				КонецЕсли;
				
				//------------------<Список невыполнившихся условий>-------------------GtG----23.11.2007
				Для каждого ЧПО из СписокНевыполнившихсяУсловий Цикл
					Если СокрЛП(ЧПО.Значение)="" ТОгда
						Продолжить;
					КонецЕсли; 
					Если ФормироватьКомментарий = Истина Тогда
						//ВеткаЧПО=ВеткаТОварОшСсы.Строки.Добавить();
						//ВеткаЧПО.Ошибки=ЧПО.Значение;
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки,Расшифровка",ЧПО.Значение,ТекРегион),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
				КонецЦикла;	
				
				
				
				ЕстьОшибкиПоГТТ=Истина;
				Продолжить;  // не расценилось
			КонецЕсли; 	
			
			
			
			
			
			//==================<а вот теперь можно начинать считать цену розничную>===================GtG====20.11.2007 
			// Должен сработать алгоритм расценки с наибольшим приоритетом
			// Поэтому с меньшим даже и смотреть не стоит
			
			
			
			//~ПостобработкаЦены:  // безусловный переход сюда, если есть алгоритмы с отрицательным приоритетом.
			// сюда прыгаем после расчета цены по основным алгоритмам с положительным приоритетом	
			Если ПостОбработкаЦены=Ложь Тогда
				ТЗПравил.Сортировать("Приоритет desc");
				// в ТЗ рпавил первыми пойдут условия с максимальным проядком формирования
				//  т.е. самые доделанные. остальные будут недоделанными огрызками и от них надо избавиться
			Иначе
				
				Если  ТЗПРавил.Количество()=0 ТОгда // Это значит, что при обработке отрицательных
					// алгоритмов ни один из них не сработал и товар считаем расцененным по положительному алгоритму
					//??? Продолжить;
				Иначе
					Цена_Розничная = Цена_Розничная/ДокЕитК;  //Вернем обратно маленькую цену, потому что по отриц. алгоритмам расчеты пойдут.  Virus
				КонецЕсли;	
				
								
				ТЗПРавил.Сортировать("Приоритет Asc");
				//Для постобработки розничной цены с помощью алгоритмов с отрицательным приоритетом
			КонецЕсли;
			
			
			
			ЕСЛИ ТЗПравил.Количество()>0 ТОГДА  // ЕСЛИ ИМЕЕТСЯ РАБОЧИЙ АЛГОРИТМ ДЛЯ РАСЧЕТОВ //
				
				РабочийАлгоритм=ТЗПравил.Получить(0); // первая строка сверху по таблице правил расчета
				
				
				Если ФормироватьКомментарий = Истина Тогда
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Алг",Новый Структура("Алг,Расшифровка",РабочийАлгоритм.АлгоритмСсылка,РабочийАлгоритм.АлгоритмСсылка),ФормироватьКомментарий);
				КонецЕсли;
				
				//==================<перед тем, как вычислять цены >===================GtG====22.11.2007
				// нужно проверить все ли условия на ноебходимые данные 
				// по выбранному алгоритму выполняются , НО это еще не гарантирует что он сработает
				
				// ..запросом собарть условия в тз
				// построить условия, вычислить их и получить бульрезультат по всем условиям 
				// через И если в итоге ПРАВДА тогда все ОК иначе алгоритм не сработает
				
				ТХТ="ВЫБРАТЬ
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Реквизит,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.ДолженБыть,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Чему,
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Ссылка
				|ИЗ
				|	Справочник.АлгоритмыЦенообразованияРегионов.НеобходимыеРеквизиты КАК АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты
				|ГДЕ
				|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Ссылка = &ВыбАлгоритм";
				
				
				Запрос=Новый Запрос;
				Запрос.Текст=ТХТ;
				Запрос.УстановитьПараметр("ВыбАлгоритм",РабочийАлгоритм.АлгоритмСсылка);
				
				НеобхРекв=Запрос.Выполнить().Выгрузить();
				НеобхРекв.Колонки.Добавить("УсловиеВыполнилось");
				
				Для каждого СтрНРекв из НеобхРекв Цикл
					
					Если СтрНРекв.ДолженБыть = "СодЗнач" Тогда
						СтруктураРезультата.Комментарий = "Нельзя использовать тип сравнения СодЗнач в необходимых реквизитах алгоритма ценообразования!";
						СтруктураРезультата.ТЗКосяков=ТЗКосяков;
						Возврат СтруктураРезультата;
					КонецЕсли;	
					
					ТекстУсловия=""+СтрНРекв.Реквизит+" "+ СтрНРекв.ДолженБыть+" "+СтрНРекв.Чему;
					СтрНРекв.УсловиеВыполнилось=Вычислить(ТекстУсловия);
				КонецЦикла;	
				
				//------------------<Если какое-либо условие не выполнилось то нихрена не расчитается>-------------------GtG----22.11.2007
				ЕстьОшибкиПоУПА=Ложь;
				Для каждого СтрНРекв из НеобхРекв Цикл
					Если СтрНРекв.УсловиеВыполнилось=Ложь Тогда
						Если ФормироватьКомментарий = Истина Тогда
							ТекстОшибки=""+СтрНРекв.Реквизит+" "+ СтрНРекв.ДолженБыть+" "+СтрНРекв.Чему+" Условие не выполнилось!";
							//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							//ВеткаТОварОш.Ошибки=ТекстОшибки;
							//
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""),ФормироватьКомментарий);
						КонецЕсли;
						
						ЕстьОшибкиПоУПА=Истина;
					КонецЕсли; 
				КонецЦикла;	
				Если  ЕстьОшибкиПоУПА=Истина Тогда
					//товар не расценился
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					Продолжить;
				КонецЕсли; 	
				//--------------------------------------------------------GtG----КОНЕЦ--22.11.2007
				
				
				Попытка 
					
					
					//------------------<МОМЕНТ с ценами из АП>--------------------------------GtG----28.11.2007
					// Расчет цены на 1 минимальную единицу
					// Цены если из основного ап считаем заданными на единицу по умолчанию (делим на еёйный К)
					// Если цена задана из АПГТТ то там должна быть ЕИТ на которую задана цена (делим на еёйный К), 
					//
					// Получившуюся Розн цену * на К по документу
					//
					// В РЕГИСТРЕ ЦЕН ХРАНИМ ЦЕНУ В РАСЧЕТЕ НА К=1 ! ДАЛЕЕ ВЕЗДЕ ЕЕ МНОЖИМ НА К ЕДИНИЦЫ
					//
					//------------------<--------------------->--------------------------------GtG----28.11.2007
					
					ФормулаДляРасчетаЦены= РабочийАлгоритм.ФормулаРасчетаЦены;
					ФормулаДляРасчетаПроцНац=РабочийАлгоритм.ФормулаРасчетаПроцентаНаценки;
					
					
					ФормулаДляРасчетаЦены=ПравильнаяФормулаРасчета(ФормулаДляРасчетаЦены);
					ФормулаДляРасчетаПроцНац=ПравильнаяФормулаРасчета(ФормулаДляРасчетаПроцНац);
					
					//------------------------------------------------------------GtG----28.11.2007
					
					Цена_Розничная=Вычислить(ФормулаДляРасчетаЦены); // на идеальную сферическую единицу в вакууме
					
					
					//--- Округляем в БОЛЬШУЮ сторону до 10 копеек
					
					Цена_Розничная=ОМ3_ОтброситьДо10Коп(Цена_Розничная);
					//--- потом при расчете границ наценки обкорнается в меньшую сторону
					Если ФормироватьКомментарий = Истина Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаДляРасчетаЦены,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
					КонецЕсли;
					
				Исключение
					
					
					//Начало добавил 19.11.2012  Васильченко
					Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
						//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
						
						
						
						Цена_Розничная=0;
						СтрТП=Тп.Добавить();
						СтрТП.ТОвар=СтрТОвар; //ссылка
						СтрТП.Партия=Стр.Партия;
						СтрТП.ЕИТ=ДокЕит;
						СтрТП.КоэффЕит=ДокЕитК;
						СтрТП.ЦенаПрБезНДС=Стр.ЦенаПроизводителя;
						СтрТП.ЦенаГосРег=0;
						СтрТП.ЦенаЗакуп =Стр.ЦенаЗакуп;
						СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
						СтрТП.ЖНВЛС  = Стр.ЖНВЛС;
						СтрТП.СтавкаНДС  = Стр.СтавкаНДС;

			
						СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
						СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
						СтрТП.Регион  =ТекРегион;
						СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (Стр.ЦенаЗакуп-ОМ3_НДСИзСуммыПоСтавке(Стр.ЦенаЗакуп,Стр.СтавкаНДС,2),Цена_Розничная);
						
						СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (Стр.ЦенаПроизводителя,Цена_Розничная);
						СтрТП.НН=НН;
						СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(ТОВар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
						СтрТП.Остаток = Остаток;
						
					КонецЕсли;					
					//Конец добавил 19.11.2012  Васильченко
					
					Если ФормироватьКомментарий = Истина Тогда
						ТекстОшибки="Ошибка при расчете розничной цены:";
						ООШ=ОписаниеОшибки();
						
						
						//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);	
						//
						//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						//ВеткаТОварОш.Ошибки=ТекстОшибки;
						//
						//ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						//ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
						//
						//ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						//ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаЦены),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
					ЕстьОшибкиПоГТТ=Истина;
					
					Продолжить;								
				КонецПопытки;
				
				Попытка 
					пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),4,РежимОкругления.Окр15как20); // В большую СТОРОНУ!  
					
					Если ФормироватьКомментарий = Истина Тогда
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
					КонецЕсли;
				Исключение
					
					Если ФормироватьКомментарий = Истина Тогда
						ТекстОшибки="Ошибка при расчете процента наценки:";
						ООШ=ОписаниеОшибки();
						
						//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
						//
						//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
						//ВеткаТОварОш.Ошибки=ТекстОшибки;
						//
						//ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
						//ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
						//
						//ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
						//ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаПроцНац),ФормироватьКомментарий);
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ),ФормироватьКомментарий);
					КонецЕсли;
					СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					
					
					ЕстьОшибкиПоГТТ = Истина;
					
					Продолжить;								
				КонецПопытки;
				
				МинПроцНаценки=Вычислить(РабочийАлгоритм.МинПроцНаценки);
				
				МаксПроцНаценки=Вычислить(РабочийАлгоритм.МаксПроцНаценки);
				
				//КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки));
				
				Если  ФормироватьКомментарий = Истина Тогда
					Если МинПроцНаценки=0  Тогда
						МинПроцНаценки=Константы.МинимальноДопустимаяНаценка.Получить();
						
						Ахтунг_Дангер=""+ТекРегион+"  "+ТОВар.Наименование+" Не удалось вычислить минимальный процент наценки по формуле "+РабочийАлгоритм.МинПроцНаценки+"
						| принимаем = "+МинПроцНаценки+" %";
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);		
						
					КонецЕсли; 	
					
					Если МаксПроцНаценки=0 Тогда
						МаксПроцНаценки=70;
						Ахтунг_Дангер=(""+ТекРегион+"  "+ТОВар.Ссылка+" Не удалось вычислить максимальный процент наценки по формуле "+РабочийАлгоритм.МаксПроцНаценки+"
						| принимаем = "+МаксПроцНаценки+" %");
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);		
						
						
					КонецЕсли; 	
					
					// прокомментируем новые границы процента наценки
					КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки), ФормироватьКомментарий);
					
				КонецЕсли;
				
				//==================<зарубим лишнее / добавим если процент наценки вылез за границы максимально-минимального диапазона>===================GtG====20.11.2007
				
				Если  пРОЦЕНТ_Наценки>МаксПроцНаценки тогда
					//Зарубим
					Если ФормироватьКомментарий = Истина Тогда
						Ахтунг_Дангер=("Превышение максимального процента наценки! Уменьшаем наценку..."+пРОЦЕНТ_Наценки+">"+МаксПроцНаценки);
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);
					КонецЕсли;
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+МаксПроцНаценки) / (100+Окр(пРОЦЕНТ_Наценки,1)) )";// в меньшую сторону
					// чем больше бы лпроцент наценки тем меньше будет цена( про копейки)
					
					Попытка
						
						
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);// в меньшую сторону (актуально для ЖНВЛС)
						
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
						КонецЕсли;
						
					Исключение
						Если ФормироватьКомментарий Тогда
							//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненной цены";
							//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							//ВеткаТОварОш.Ошибки=ТекстОшибки;
							//
							//ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							//ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
							//
							//ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							//ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
							//
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР),ФормироватьКомментарий);
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
						
					КонецПопытки;
					
					Попытка
						//----------------------------< пересчитаем процент наценки по скорректированной Розничной цене >--------------------------------GtG--- 
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),3,РежимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
						
						
						
					Исключение
						Если ФормироватьКомментарий Тогда
							//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненного процента наценки";
							//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							//ВеткаТОварОш.Ошибки=ТекстОшибки;
							//
							//ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							//ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
							//
							//ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							//ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
				ИначеЕсли пРОЦЕНТ_Наценки<МинПроцНаценки Тогда
					
					ЕстьКосякТопа=Ложь;
					
					ПодтягиватьКПроценту="МинПроцНаценки";
					
					
					//Подтянем
					Если ФормироватьКомментарий Тогда
						Ахтунг_Дангер=("Заниженный процент наценки! Рассчитываем по "+ПодтягиватьКПроценту+" ..."+пРОЦЕНТ_Наценки+"<"+МинПроцНаценки);
						
						КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер),ФормироватьКомментарий);
					КонецЕсли;
					
					ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+"+ПодтягиватьКПроценту+") / (100+пРОЦЕНТ_Наценки) )";// в меньшую сторону  топ 100, в большую остальные 
					
					Попытка
						Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная),ФормироватьКомментарий);
						КонецЕсли;
					Исключение
						Если ФормироватьКомментарий Тогда
							//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненной цены";
							//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							//ВеткаТОварОш.Ошибки=ТекстОшибки;
							//
							//ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							//ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
							//
							//ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							//ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР),ФормироватьКомментарий);
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
					КонецПопытки;
					
					
					Попытка
						пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),6,режимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
						Если ФормироватьКомментарий Тогда
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки),ФормироватьКомментарий);
						КонецЕсли;
					Исключение
						Если ФормироватьКомментарий Тогда
							//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							ТекстОшибки="Ошибка при расчете уточненного процента наценки";
							//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							//ВеткаТОварОш.Ошибки=ТекстОшибки;
							//
							//ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
							//ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
							//
							//ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
							//ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
						КонецЕсли;
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
					КонецПопытки;
					
					
					Если ЕстьКосякТопа=Истина ТОгда
						Косяк.ЦенаПоРасценке=Цена_Розничная*ДокЕитК;
					КонецЕсли; 
					
				КонецЕсли;
				
				ЦенаЕд=Цена_Розничная; // для комментатора

				//ПредыдущаяРознЦена=ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
				
				//СпособОкругления = Неопределено;
				//МетодОкругления = Неопределено;
				
				//Округление цены по новым правилам из справочника МатрицаОкругления
					ПроцентОтклоненияВверх	= неопределено;
					ПроцентОтклоненияВниз	= неопределено;
					ЦенаДоКорректировки = Цена_Розничная;
					Для каждого строкаМО из ТЗМатрицаОкруглений Цикл
						Если (Цена_Розничная >= строкаМО.Цена1 и Цена_Розничная <=строкаМО.Цена2 ) и ТОвар.ЖНВЛС = строкаМо.ИспользоватьДляЖВ Тогда
							Цена_Розничная = Округлить(Цена_Розничная,строкаМО.СпособОкругления,строкаМО.МетодОкругления);
							Если ФормироватьКомментарий Тогда
								КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"Округление",Новый Структура("СпособОкругления,ЦенаДоОкругления,ЦенаПослеОкругления",строкаМО.СпособОкругления,ЦенаДоКорректировки,Цена_Розничная),ФормироватьКомментарий);
							КонецЕсли;
							//СпособОкругления = строкаМО.СпособОкругления;
							//МетодОкругления = строкаМО.МетодОкругления;	
							ПроцентОтклоненияВверх	= строкаМО.ПроцентОтклоненияВверх;
							ПроцентОтклоненияВниз	= строкаМО.ПроцентОтклоненияВниз;
							Прервать;	
						КонецЕсли;
					КонецЦикла;				
				//==================<Реальная несферическая единица не в вакууме>===================GtG====28.11.2007
				Цена_Розничная=Цена_Розничная*ДокЕитК;

				
				
				//------------------<еще проверочку на превыешние закупочной цены розничной рассчитанной чтобы в минус не ушло>-------------------GtG----21.11.2007
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					Если Цена_Розничная<=Док.ЦенаЗакуп  Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар=СтрТОвар;
							СтрТП.Партия=Стр.Партия;
							СтрТП.ЕИТ=ДокЕит;
							СтрТП.КоэффЕит=ДокЕитК;
							СтрТП.ЦенаПрБезНДС=Стр.ЦенаПроизводителя;
							СтрТП.ЦенаГосРег=0;
							СтрТП.ЦенаЗакуп =Стр.ЦенаЗакуп;
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.ЖНВЛС  = Стр.ЖНВЛС;
							СтрТП.СтавкаНДС  = Стр.СтавкаНДС;

							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (Стр.ЦенаЗакуп-ОМ3_НДСИзСуммыПоСтавке(Стр.ЦенаЗакуп,Стр.СтавкаНДС,2),Цена_Розничная);
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (Стр.ЦенаПроизводителя,Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток = Остаток;
					

						КонецЕсли; 
						
						
						
						Если ФормироватьКомментарий Тогда
							
							ТекстОшибки="Розничная цена оказалась меньше закупочной!    ("+Товар.Код+")  "+Товар.Ссылка+"    Не РАСЦЕНЕН!";
							
							//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							//
							//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							//ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							ЕстьОшибкиПоГТТ=Истина;
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КонецЕсли;
						
						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;

						Косяк=ТЗКосяков.Добавить();
						Косяк.Партия=Стр.Партия;
						Косяк.ТОвар=Товар.Ссылка;
						Косяк.Косяк="Розничная цена оказалась меньше закупочной! НЕ РАСЦЕНЕН!";
						Косяк.ЦенаПоРасценке=Цена_Розничная;
						
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если РазрешитьРозничнуюЦенуНижеЗакупочной=Ложь Тогда
					//==================<Не ТОПОВЫЕ позиции наценка от закупки с ндс НЕ МЕНЕЕ 10% полюбому>===================GtG====21.01.2008
					Если (ОМ6_НаценкаОтЧегоЛибо (Стр.ЦенаЗакуп,Цена_Розничная)<МинимальныйПроцентНаценкиКромеТопов)
						Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
						Если ВыводитьНеРасцененные=Истина и Авторасценка = Ложь Тогда  
							//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
							Цена_Розничная=0;
							СтрТП=Тп.Добавить();
							СтрТП.ТОвар=СтрТОвар;
							СтрТП.Партия=Док.Партия;
							СтрТП.ЕИТ=ДокЕит;
							СтрТП.КоэффЕит=ДокЕитК;
							СтрТП.ЦенаПрБезНДС=Стр.ЦенаПроизводителя;
							СтрТП.ЦенаГосРег=0;
							СтрТП.ЦенаЗакуп =Стр.ЦенаЗакуп;
							СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
							СтрТП.ЖНВЛС  = Стр.ЖНВЛС;
							СтрТП.СтавкаНДС  = Стр.СтавкаНДС;
						
							СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
							СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
							СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (Стр.ЦенаЗакуп-ОМ3_НДСИзСуммыПоСтавке(Стр.ЦенаЗакуп,Стр.СтавкаНДС,2),Цена_Розничная);
							
							СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (Стр.ЦенаПроизводителя,Цена_Розничная);
							
							СтрТП.Регион=ТекРегион;
							СтрТП.НН=НН;
							
							СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;//ПолучитьПрошлуюЦену(Товар.Ссылка,ТекРегион,ТаблицаСтарыхРознЦен);
							СтрТП.Остаток = Остаток;
							
						КонецЕсли; 
						
						Если ФормироватьКомментарий  Тогда
							ТекстОшибки="НЕ ТОПОВЫЙ товар, наценка от закупки с НДС меньше "+МинимальныйПроцентНаценкиКромеТопов+"% ("+Товар.Код+")  "+Товар.Ссылка+"    Не РАСЦЕНЕН!";
							
							//ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,СтрТовар);
							//
							//ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
							//ВеткаТОварОш.Ошибки=ТекстОшибки;
							
							
							КомментаторРасчета  (ТОВар.Ссылка,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки),ФормироватьКомментарий);
						КонецЕсли;
						
						ЕстьОшибкиПоГТТ=Истина;

						СтруктураРезультата.КоличествоОшибокРАсценки=СтруктураРезультата.КоличествоОшибокРАсценки+1;
						
						Продолжить;
					КонецЕсли;
					//================================================GtG====КОНЕЦ==21.01.2008
				КонецЕсли;
				
					
				
			КОНЕЦЕСЛИ;  // ЕСЛИ ИМЕЕТСЯ РАБОЧИЙ АЛГОРИТМ ДЛЯ РАСЧЕТОВ //
			
			
			
			///// ==========ЕСЛИ в регионе есть алгоритмы с отрицательным приоритетом, то прогоним еще раз по ним
			
			ИсходнаяТЗПравил.Сортировать("Приоритет Asc, ПорядокФормированияУсловия asc");

			Если ИсходнаяТЗПравил.Получить(0).Приоритет < 0 и 
				 	ПостОбработкаЦены=Ложь 
					//и 
				 	//ОМ6_ЕстьСпецЦена(Товар.Ссылка,Склад,ДатаДок)=истина   
					тогда
					ТЗПРавил=ИсходнаяТЗПРавил.Скопировать();
					ПостОбработкаЦены=Истина;
					Перейти ~ПостобработкаЦеныНесопоставленные; // 1 дополнительный проход по товару
				
			КонецЕсли;
			
			
			//==================<Выводим строку расцененного товара >===================GtG====20.11.2007
			СтрТП=Тп.Добавить();
			СтрТП.НН=НН;
			СтрТП.ТОвар=СтрТОвар;
			СтрТП.Партия=Стр.Партия;
			СтрТП.ЕИТ=ДокЕит;
			СтрТП.КоэффЕит=ДокЕитК;
			СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
			СтрТП.ПредыдущаяРознЦена=ПредыдущаяРознЦена;
			СтрТП.Остаток = Остаток;
			СтрТП.Регион=ТекРегион;
			
			Если Авторасценка = Ложь Тогда
				СтрТП.ЖНВЛС  = Стр.ЖНВЛС;
				СтрТП.СтавкаНДС  = Стр.СтавкаНДС;
			
				СтрТП.ЦенаПРБезНДС=Стр.ЦенаПроизводителя;
				СтрТП.ЦенаГосРег=0;
				СтрТП.ЦенаЗакуп =Стр.ЦенаЗакуп;
				СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
				СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
				СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (Стр.ЦенаЗакуп-ОМ3_НДСИзСуммыПоСтавке(Стр.ЦенаЗакуп,Стр.СтавкаНДС,2),Цена_Розничная);
				СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (Стр.ЦенаПроизводителя,Цена_Розничная);			
			КонецЕсли;
			
			#Если Клиент Тогда
				Состояние("расчет " + НН + " из " + КоличествоСтрок);
			#КонецЕсли			
			
		КонецЦикла;	// по строкам документа
		

		
		
		//Если ЕстьОшибкиПоГТТ=Ложь и ФормироватьКомментарий = Истина тогда
		//	ВеткаТОварОш=ВеткаРегион.Строки.Добавить();
		//	ВеткаТОварОш.Ошибки="ОК. Ошибок нет";
		//КонецЕсли;
		
		
		Если Цена_Розничная=0 ТОгда
			Косяк=ТЗКосяков.Добавить();
			Косяк.Партия=Стр.Партия;
			Косяк.ТОвар=СтрТОвар;
			Косяк.Косяк="Товар не расценился.";
		КонецЕсли;	
		
		
	//Конец расценки несопоставленных позиций
	
	
	
	
	//ЭлементыФормы .ДеревоОшибок.Значение=ДО;
	//ЭлементыФормы.ДеревоОшибок.СоздатьКолонки();
	Если ФормироватьКомментарий Тогда
		Таб.ЗакончитьГруппуСтрок();
	КонецЕсли;
	СтруктураРезультата.ТаблицаКомментариев = Таб;
	СтруктураРезультата.ТП = ТП;
    СтруктураРезультата.ДеревоОшибок = ДО;
	СтруктураРезультата.ТЗКосяков=ТЗКосяков;

	Если ЕстьОшибки или ЕстьОшибкиПоГТТ или ЕстьОшибкиПоУПА или ТЗКосяков.Количество() > 0 Тогда
		СтруктураРезультата.Результат = Ложь;
	Иначе
		СтруктураРезультата.Результат = Истина;
	КонецЕсли;                                                                                                     
		
	Возврат СтруктураРезультата;
	

	
КонецФункции
 
Функция Расценить366_Несопоставленные()
КонецФункции
