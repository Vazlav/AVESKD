////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ВЫГРУЗКИ ДАННЫХ ДЛЯ БУХГАЛТЕРИИ

Функция ЗагрузкаСкладов(ИНН) Экспорт 
	
	ТекстЗапроса	= "ВЫБРАТЬ
	            	  |	МестаХранения.Наименование,
	            	  |	МестаХранения.Код,
	            	  |	ВЫБОР
	            	  |		КОГДА МестаХранения.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыМХ.Опт)
	            	  |			ТОГДА 1
	            	  |		КОГДА МестаХранения.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыМХ.Розн)
	            	  |			ТОГДА 2
	            	  |	КОНЕЦ КАК ТипСклада,
	            	  |	МестаХранения.Мэйл,
	            	  |	ВЫБОР
	            	  |		КОГДА МестаХранения.ТипНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.НДС)
	            	  |			ТОГДА 1
	            	  |		КОГДА МестаХранения.ТипНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.ЕНВД)
	            	  |			ТОГДА 2
	            	  |		КОГДА МестаХранения.ТипНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.УСН)
	            	  |			ТОГДА 3
	            	  |	КОНЕЦ КАК ТипНалогообложения,
	            	  |	МестаХранения.ДатаПерехода,
	            	  |	МестаХранения.ДатаЗакрытия,
	            	  |	ВЫБОР
	            	  |		КОГДА МестаХранения.ПометкаУдаления = ИСТИНА
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК ПометкаУдаления,
	            	  |	МестаХранения.ОбщаяПлощадь,
	            	  |	МестаХранения.ПлощадьТорговогоЗала,
	            	  |	МестаХранения.НомерАптеки
	            	  |ИЗ
	            	  |	Справочник.МестаХранения КАК МестаХранения
	            	  |ГДЕ
	            	  |	МестаХранения.Фирма.ИНН = &ИНН
	            	  |	И МестаХранения.ЭтоГруппа = ЛОЖЬ
	            	  |	И МестаХранения.ТипСклада.Ссылка ЕСТЬ НЕ NULL 
					  //|	И МестаХранения.Ссылка В(&МассивИзмененныхДокументов)
					  |";
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= ТекстЗапроса;
	Запрос.УстановитьПараметр("ИНН", ИНН);
	//Запрос.УстановитьПараметр("МассивИзмененныхОбъектов", ПолучитьВсеИзмененияИзПланаОбмена().Справочники);
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция ЗагрузкаКонтрагентов() Экспорт 
	
	ТекстЗапроса	= "ВЫБРАТЬ
	            	  |	Поставщики.Наименование КАК Наименование,
	            	  |	Поставщики.ПолнНаименование,
	            	  |	Поставщики.ИНН,
	            	  |	Поставщики.КПП,
	            	  |	ВЫБОР
	            	  |		КОГДА Поставщики.ПометкаУдаления = ИСТИНА
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК ПометкаУдаления,
	            	  |	Поставщики.Код
	            	  |ИЗ
	            	  |	Справочник.Поставщики КАК Поставщики
	            	  |ГДЕ
	            	  |	Поставщики.ИНН <> """"
	            	  |	И Поставщики.ЭтоГруппа = ЛОЖЬ
	            	  |	И (Поставщики.ОсновнойПоставщик.Ссылка ЕСТЬ NULL 
	            	  |			ИЛИ Поставщики.ОсновнойПоставщик.Ссылка = Поставщики.Ссылка)
					  //|	И Поставщики.Ссылка В(&МассивИзмененныхОбъектов)
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	Наименование";
	
	Запрос			= Новый Запрос;
	//Запрос.УстановитьПараметр("МассивИзмененныхОбъектов", ПолучитьВсеИзмененияИзПланаОбмена().Справочники);
	Запрос.Текст	= ТекстЗапроса;
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция ЗагрузкаКатегорийУслуг() Экспорт 
	
	ТекстЗапроса	= "ВЫБРАТЬ РАЗЛИЧНЫЕ
	            	  |	КатегорииУслуг.Код КАК КодС,
	            	  |	КатегорииУслуг.Наименование
	            	  |ИЗ
	            	  |	Справочник.КатегорииУслуг КАК КатегорииУслуг
					  //|ГДЕ
					  //|	КатегорииУслуг.Ссылка В(&МассивИзмененныхОбъектов)
					  |";
	
	Запрос			= Новый Запрос;
	//Запрос.УстановитьПараметр("МассивИзмененныхОбъектов", ПолучитьВсеИзмененияИзПланаОбмена().Справочники);
	Запрос.Текст	= ТекстЗапроса;
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_ПоступлениеТоваров(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	SKLAD_DATA.ДатаДляЗагрузки,
	            	  |	SKLAD_DATA.СуммаЗакуп,
	            	  |	SKLAD_DATA.СуммаРозн,
	            	  |	SKLAD_DATA.СуммаБрак,
	            	  |	SKLAD_DATA.СуммаБракРозн,
	            	  |	SKLAD_DATA.СуммаНедовоз,
	            	  |	SKLAD_DATA.НДСЗакуп,
	            	  |	SKLAD_DATA.НДСРозн,
	            	  |	SKLAD_DATA.СтавкаНДССтавка,
	            	  |	SKLAD_DATA.Номер,
	            	  |	SKLAD_DATA.Дата,
	            	  |	SKLAD_DATA.ВхДатаНакл,
	            	  |	SKLAD_DATA.ВхДатаСФ,
	            	  |	SKLAD_DATA.ВхНомерНакл,
	            	  |	SKLAD_DATA.ВхНомерСФ,
	            	  |	SKLAD_DATA.ПоставщикИНН,
	            	  |	SKLAD_DATA.ПоставщикКПП,
	            	  |	SKLAD_DATA.ПоставщикКод,
	            	  |	SKLAD_DATA.ПоставщикНаименование,
	            	  |	SKLAD_DATA.ДоговорПоставкиНомер,
	            	  |	SKLAD_DATA.ДоговорПоставкиДата,
	            	  |	SKLAD_DATA.ДоговорПоставкиЦентрализованныйКонтракт,
	            	  |	SKLAD_DATA.СкладКод,
	            	  |	SKLAD_DATA.ОтсрочкаПлатежа,
	            	  |	SKLAD_DATA.ДоговорПоставкиПериодДействияС,
	            	  |	SKLAD_DATA.ДоговорПоставкиПериодДействияПо,
	            	  |	SKLAD_DATA.ВидПоступленияТовара,
	            	  |	SKLAD_DATA.КодДоговораПоставки
	            	  |ИЗ
	            	  |	(ВЫБРАТЬ
	            	  |		НАЧАЛОПЕРИОДА(ПоступлениеТовараТовар.Ссылка.Дата, ДЕНЬ) КАК ДатаДляЗагрузки,
	            	  |		СУММА(ПоступлениеТовараТовар.СуммаЗакуп) КАК СуммаЗакуп,
	            	  |		СУММА(ПоступлениеТовараТовар.СуммаРозн) КАК СуммаРозн,
	            	  |		СУММА(ПоступлениеТовараТовар.БойБрак * ПоступлениеТовараТовар.ЦенаЗакуп) КАК СуммаБрак,
	            	  |		СУММА(ПоступлениеТовараТовар.ЦенаРозн * ПоступлениеТовараТовар.БойБрак) КАК СуммаБракРозн,
	            	  |		СУММА(ПоступлениеТовараТовар.Недовоз * ПоступлениеТовараТовар.ЦенаЗакуп) КАК СуммаНедовоз,
	            	  |		СУММА(ПоступлениеТовараТовар.НДСЗакуп) КАК НДСЗакуп,
	            	  |		СУММА(ПоступлениеТовараТовар.НДСРозн) КАК НДСРозн,
	            	  |		ПоступлениеТовараТовар.СтавкаНДС.Ставка КАК СтавкаНДССтавка,
	            	  |		ПоступлениеТовараТовар.Ссылка.Номер КАК Номер,
	            	  |		ПоступлениеТовараТовар.Ссылка.Дата КАК Дата,
	            	  |		ПоступлениеТовараТовар.Ссылка.ВхДатаНакл КАК ВхДатаНакл,
	            	  |		ПоступлениеТовараТовар.Ссылка.ВхДатаСФ КАК ВхДатаСФ,
	            	  |		ПоступлениеТовараТовар.Ссылка.ВхНомерНакл КАК ВхНомерНакл,
	            	  |		ПоступлениеТовараТовар.Ссылка.ВхНомерСФ КАК ВхНомерСФ,
	            	  |		ПоступлениеТовараТовар.Ссылка.Поставщик.ИНН КАК ПоставщикИНН,
	            	  |		ПоступлениеТовараТовар.Ссылка.Поставщик.КПП КАК ПоставщикКПП,
	            	  |		ПоступлениеТовараТовар.Ссылка.Поставщик.Код КАК ПоставщикКод,
	            	  |		ПоступлениеТовараТовар.Ссылка.Поставщик.Наименование КАК ПоставщикНаименование,
	            	  |		ЕСТЬNULL(ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.Номер, ""Основной договор поставки"") КАК ДоговорПоставкиНомер,
	            	  |		ЕСТЬNULL(ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.Дата, ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)) КАК ДоговорПоставкиДата,
	            	  |		ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.ЦентрализованныйКонтракт КАК ДоговорПоставкиЦентрализованныйКонтракт,
	            	  |		ПоступлениеТовараТовар.Ссылка.Склад.Код КАК СкладКод,
	            	  |		ПоступлениеТовараТовар.Ссылка.ОтсрочкаПлатежа КАК ОтсрочкаПлатежа,
	            	  |		ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.ПериодДействияС КАК ДоговорПоставкиПериодДействияС,
	            	  |		ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.ПериодДействияПо КАК ДоговорПоставкиПериодДействияПо,
	            	  |		ПоступлениеТовараТовар.Ссылка.ВидПоступленияТовара.Порядок КАК ВидПоступленияТовара,
	            	  |		ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.Код КАК КодДоговораПоставки
	            	  |	ИЗ
	            	  |		Документ.ПоступлениеТовара.Товар КАК ПоступлениеТовараТовар
	            	  |	ГДЕ
	            	  |		ПоступлениеТовараТовар.Ссылка.Фирма.ИНН = &ИНН
	            	  |		И ПоступлениеТовараТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |		И ПоступлениеТовараТовар.Ссылка.Проведен = ИСТИНА
	            	  |		И ПоступлениеТовараТовар.Ссылка.Поставщик.ИНН = ВЫБОР
	            	  |				КОГДА &ПоВсемПоставщикам = ИСТИНА
	            	  |					ТОГДА ПоступлениеТовараТовар.Ссылка.Поставщик.ИНН
	            	  |				ИНАЧЕ &ИННПоставщика
	            	  |			КОНЕЦ
	            	  |		И ПоступлениеТовараТовар.Ссылка.Склад.Код = ВЫБОР
	            	  |				КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |					ТОГДА ПоступлениеТовараТовар.Ссылка.Склад.Код
	            	  |				ИНАЧЕ &КодСклада
	            	  |			КОНЕЦ
	            	  |	
	            	  |	СГРУППИРОВАТЬ ПО
	            	  |		НАЧАЛОПЕРИОДА(ПоступлениеТовараТовар.Ссылка.Дата, ДЕНЬ),
	            	  |		ПоступлениеТовараТовар.Ссылка.ОтсрочкаПлатежа,
	            	  |		ПоступлениеТовараТовар.Ссылка.Склад.Код,
	            	  |		ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.ЦентрализованныйКонтракт,
	            	  |		ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.Дата,
	            	  |		ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.Номер,
	            	  |		ПоступлениеТовараТовар.Ссылка.Поставщик.КПП,
	            	  |		ПоступлениеТовараТовар.Ссылка.Поставщик.ИНН,
	            	  |		ПоступлениеТовараТовар.Ссылка.Поставщик.Наименование,
	            	  |		ПоступлениеТовараТовар.Ссылка.ВхНомерСФ,
	            	  |		ПоступлениеТовараТовар.Ссылка.ВхНомерНакл,
	            	  |		ПоступлениеТовараТовар.Ссылка.ВхДатаСФ,
	            	  |		ПоступлениеТовараТовар.Ссылка.ВхДатаНакл,
	            	  |		ПоступлениеТовараТовар.Ссылка.Дата,
	            	  |		ПоступлениеТовараТовар.Ссылка.Номер,
	            	  |		ПоступлениеТовараТовар.СтавкаНДС.Ставка,
	            	  |		ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.ПериодДействияС,
	            	  |		ПоступлениеТовараТовар.Ссылка.Поставщик.Код,
	            	  |		ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.ПериодДействияПо,
	            	  |		ПоступлениеТовараТовар.Ссылка.ВидПоступленияТовара.Порядок,
	            	  |		ПоступлениеТовараТовар.Ссылка.ДоговорПоставки.Код) КАК SKLAD_DATA
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	SKLAD_DATA.ДатаДляЗагрузки,
	            	  |	SKLAD_DATA.СкладКод,
	            	  |	SKLAD_DATA.ПоставщикИНН,
	            	  |	SKLAD_DATA.ПоставщикКПП,
	            	  |	SKLAD_DATA.ВхНомерНакл,
	            	  |	SKLAD_DATA.СтавкаНДССтавка";

	Запрос.УстановитьПараметр("ИНН"					, ИНН);
	Запрос.УстановитьПараметр("Дата1"				, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"				, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемПоставщикам"	, ?(ЗначениеЗаполнено(ИННПоставщика), Ложь, Истина));
	Запрос.УстановитьПараметр("ИННПоставщика"		, ?(ЗначениеЗаполнено(ИННПоставщика), ИННПоставщика, Неопределено));
	Запрос.УстановитьПараметр("ПоВсемСкладам"		, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"			, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	
	Попытка
		Результат		= Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
			РезТЗ		= "";
		Иначе 
			РезТЗ		= Результат.Выгрузить();
		КонецЕсли;
	Исключение
		Запрос.Текст	= СтрЗаменить(Запрос.Текст,"ПоступлениеТовараТовар.Ссылка.ВидПоступленияТовара.Порядок", "   0   ");
	Результат		= Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
			РезТЗ		= "";
		Иначе 
			РезТЗ		= Результат.Выгрузить();
		КонецЕсли;
	КонецПопытки;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_ВыручкаККМ(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ ПЕРВЫЕ 1000000000
	            	  |	РеализацияККМБухгалтерия.Ссылка.Фирма.ИНН КАК ФирмаИНН,
	            	  |	РеализацияККМБухгалтерия.Ссылка.Склад.Код КАК СкладКод,
	            	  |	ВЫБОР
	            	  |		КОГДА РеализацияККМБухгалтерия.Ссылка.Затычка = ИСТИНА
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК Затычка,
	            	  |	НАЧАЛОПЕРИОДА(РеализацияККМБухгалтерия.Ссылка.Дата, ДЕНЬ) КАК Дата,
	            	  |	РеализацияККМБухгалтерия.Касса.ЗаводскойНомер КАК КассаЗаводскойНомер,
	            	  |	РеализацияККМБухгалтерия.ЗетОчет КАК ЗетОтчет,
	            	  |	РеализацияККМБухгалтерия.СтавкаНДС.Ставка КАК СтавкаНДССтавка,
	            	  |	РеализацияККМБухгалтерия.ТипОплаты КАК ТипОплаты,
	            	  |	РеализацияККМБухгалтерия.ТипОплаты.Порядок КАК ТипОплатыПорядок,
	            	  |	РеализацияККМБухгалтерия.СуммаБезСкидки КАК СуммаБезСкидки,
	            	  |	РеализацияККМБухгалтерия.СуммаСоСкидкой КАК СуммаСоСкидкой,
	            	  |	РеализацияККМБухгалтерия.СуммаСкидки КАК СуммаСкидки,
	            	  |	РеализацияККМБухгалтерия.СуммаНДСБезСкидки КАК СуммаНДСБезСкидки,
	            	  |	РеализацияККМБухгалтерия.СуммаНДДСоСкидкой КАК СуммаНДДСоСкидкой,
	            	  |	РеализацияККМБухгалтерия.ЗакупочнаяСНДС КАК ЗакупочнаяСНДС,
	            	  |	РеализацияККМБухгалтерия.НДСЗакуп КАК НДСЗакуп,
	            	  |	РеализацияККМБухгалтерия.ТипНалогообложенияПТ КАК ТипНалогообложенияПТ,
	            	  |	РеализацияККМБухгалтерия.ТипНалогообложенияПТ.Порядок КАК ТипНалогообложенияПТПорядок,
	            	  |	РеализацияККМБухгалтерия.Ссылка.Склад.ТипНалогообложения.Порядок КАК СкладТипНалогообложенияПорядок,
	            	  |	ВЫБОР
	            	  |		КОГДА РеализацияККМБухгалтерия.ВидПоступленияТовара <> ЗНАЧЕНИЕ(перечисление.ВидыПоступленияТоваров.Подарки)
	            	  |			ТОГДА ВЫБОР
	            	  |					КОГДА РеализацияККМБухгалтерия.Ссылка.Склад.ТипНалогообложения = РеализацияККМБухгалтерия.ТипНалогообложенияПТ
	            	  |						ТОГДА ВЫБОР
	            	  |								КОГДА РеализацияККМБухгалтерия.Ссылка.Склад.ТипНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.НДС)
	            	  |									ТОГДА РеализацияККМБухгалтерия.СуммаСоСкидкой - (РеализацияККМБухгалтерия.ЗакупочнаяСНДС - РеализацияККМБухгалтерия.НДСЗакуп)
	            	  |								ИНАЧЕ РеализацияККМБухгалтерия.СуммаСоСкидкой - РеализацияККМБухгалтерия.ЗакупочнаяСНДС
	            	  |							КОНЕЦ
	            	  |					КОГДА РеализацияККМБухгалтерия.Ссылка.Склад.ТипНалогообложения <> РеализацияККМБухгалтерия.ТипНалогообложенияПТ
	            	  |						ТОГДА ВЫБОР
	            	  |								КОГДА РеализацияККМБухгалтерия.Ссылка.Склад.ТипНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.НДС)
	            	  |									ТОГДА РеализацияККМБухгалтерия.СуммаСоСкидкой - РеализацияККМБухгалтерия.ЗакупочнаяСНДС
	            	  |								ИНАЧЕ РеализацияККМБухгалтерия.СуммаСоСкидкой - РеализацияККМБухгалтерия.ЗакупочнаяСНДС
	            	  |							КОНЕЦ
	            	  |				КОНЕЦ
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК Наценка,
	            	  |	ЕСТЬNULL(РеализацияККМБухгалтерия.ВидПоступленияТовара.Порядок, -1) КАК ВидПТ,
	            	  |	1 КАК ТоварУслуга,
	            	  |	0 КАК КодКатегорииУслугиЧ,
	            	  |	РеализацияККМБухгалтерия.Поставщик.Код КАК ПоставщикКод,
	            	  |	РеализацияККМБухгалтерия.Поставщик.ИНН,
	            	  |	РеализацияККМБухгалтерия.Поставщик.КПП,
	            	  |	РеализацияККМБухгалтерия.ВхНомерНакл,
	            	  |	РеализацияККМБухгалтерия.ВхДатаНакл,
	            	  |	РеализацияККМБухгалтерия.ТипОплаты КАК ТипОплаты1,
	            	  |	РеализацияККМБухгалтерия.ВидПоступленияТовара
	            	  |ПОМЕСТИТЬ СыраяВыборка
	            	  |ИЗ
	            	  |	Документ.РеализацияККМ.Бухгалтерия КАК РеализацияККМБухгалтерия
	            	  |ГДЕ
	            	  |	РеализацияККМБухгалтерия.Ссылка.Фирма.ИНН = &ИНН
	            	  |	И РеализацияККМБухгалтерия.Ссылка.Склад.Код = ВЫБОР
	            	  |			КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |				ТОГДА РеализацияККМБухгалтерия.Ссылка.Склад.Код
	            	  |			ИНАЧЕ &КодСклада
	            	  |		КОНЕЦ
	            	  |	И РеализацияККМБухгалтерия.Ссылка.Проведен = ИСТИНА
	            	  |	И РеализацияККМБухгалтерия.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |
	            	  |ОБЪЕДИНИТЬ ВСЕ
	            	  |
	            	  |ВЫБРАТЬ
	            	  |	Услуги.ФирмаИНН,
	            	  |	Услуги.СкладКод,
	            	  |	Услуги.Затычка,
	            	  |	Услуги.Дата,
	            	  |	Услуги.КассаЗаводскойНомер,
	            	  |	Услуги.ЗетОчет,
	            	  |	Услуги.СтавкаНДССтавка,
	            	  |	Услуги.ТипОплаты,
	            	  |	Услуги.ТипОплатыПорядок,
	            	  |	Услуги.СуммаБезСкидки,
	            	  |	Услуги.СуммаСоСкидкой,
	            	  |	Услуги.СуммаСкидки,
	            	  |	Услуги.СуммаНДС,
	            	  |	Услуги.СуммаНДС1,
	            	  |	Услуги.ЗакупочнаяСНДС,
	            	  |	Услуги.НДСЗакуп,
	            	  |	NULL,
	            	  |	-1,
	            	  |	Услуги.СкладТипНалогообложенияПорядок,
	            	  |	Услуги.Наценка,
	            	  |	Услуги.ВидПТ,
	            	  |	Услуги.ТоварУслуга,
	            	  |	Услуги.КодКатегорииУслуги,
	            	  |	NULL,
	            	  |	NULL,
	            	  |	NULL,
	            	  |	NULL,
	            	  |	NULL,
	            	  |	Услуги.ТипОплаты,
	            	  |	Услуги.ВидПТ
	            	  |ИЗ
	            	  |	(ВЫБРАТЬ
	            	  |		РеализацияККМАвансыПоУслугам.Ссылка.Фирма.ИНН КАК ФирмаИНН,
	            	  |		РеализацияККМАвансыПоУслугам.Ссылка.Склад.Код КАК СкладКод,
	            	  |		ВЫБОР
	            	  |			КОГДА РеализацияККМАвансыПоУслугам.Ссылка.Затычка = ИСТИНА
	            	  |				ТОГДА 1
	            	  |			ИНАЧЕ 0
	            	  |		КОНЕЦ КАК Затычка,
	            	  |		НАЧАЛОПЕРИОДА(РеализацияККМАвансыПоУслугам.Ссылка.Дата, ДЕНЬ) КАК Дата,
	            	  |		РеализацияККМАвансыПоУслугам.Касса.ЗаводскойНомер КАК КассаЗаводскойНомер,
	            	  |		РеализацияККМАвансыПоУслугам.ЗетОчет КАК ЗетОчет,
	            	  |		РеализацияККМАвансыПоУслугам.СтавкаНДС.Ставка КАК СтавкаНДССтавка,
	            	  |		РеализацияККМАвансыПоУслугам.ТипОплаты КАК ТипОплаты,
	            	  |		РеализацияККМАвансыПоУслугам.ТипОплаты.Порядок КАК ТипОплатыПорядок,
	            	  |		СУММА(РеализацияККМАвансыПоУслугам.Сумма) КАК СуммаБезСкидки,
	            	  |		СУММА(РеализацияККМАвансыПоУслугам.Сумма) КАК СуммаСоСкидкой,
	            	  |		СУММА(0) КАК СуммаСкидки,
	            	  |		СУММА(РеализацияККМАвансыПоУслугам.СуммаНДС) КАК СуммаНДС,
	            	  |		СУММА(РеализацияККМАвансыПоУслугам.СуммаНДС) КАК СуммаНДС1,
	            	  |		СУММА(0) КАК ЗакупочнаяСНДС,
	            	  |		СУММА(0) КАК НДСЗакуп,
	            	  |		NULL КАК ТипНалогообложенияПТ,
	            	  |		NULL КАК ТипНалогообложенияПТПорядок,
	            	  |		РеализацияККМАвансыПоУслугам.Ссылка.Склад.ТипНалогообложения.Порядок КАК СкладТипНалогообложенияПорядок,
	            	  |		СУММА(0) КАК Наценка,
	            	  |		-1 КАК ВидПТ,
	            	  |		2 КАК ТоварУслуга,
	            	  |		ЕСТЬNULL(РеализацияККМАвансыПоУслугам.Услуга.КатегорияУслуги.Код, 0) КАК КодКатегорииУслуги
	            	  |	ИЗ
	            	  |		Документ.РеализацияККМ.АвансыПоУслугам КАК РеализацияККМАвансыПоУслугам
	            	  |	ГДЕ
	            	  |		РеализацияККМАвансыПоУслугам.Ссылка.Фирма.ИНН = &ИНН
	            	  |		И РеализацияККМАвансыПоУслугам.Ссылка.Склад.Код = ВЫБОР
	            	  |				КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |					ТОГДА РеализацияККМАвансыПоУслугам.Ссылка.Склад.Код
	            	  |				ИНАЧЕ &КодСклада
	            	  |			КОНЕЦ
	            	  |		И РеализацияККМАвансыПоУслугам.Ссылка.Проведен = ИСТИНА
	            	  |		И РеализацияККМАвансыПоУслугам.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |	
	            	  |	СГРУППИРОВАТЬ ПО
	            	  |		РеализацияККМАвансыПоУслугам.Ссылка.Фирма.ИНН,
	            	  |		РеализацияККМАвансыПоУслугам.Ссылка.Склад.Код,
	            	  |		РеализацияККМАвансыПоУслугам.Ссылка.Затычка,
	            	  |		НАЧАЛОПЕРИОДА(РеализацияККМАвансыПоУслугам.Ссылка.Дата, ДЕНЬ),
	            	  |		РеализацияККМАвансыПоУслугам.Касса.ЗаводскойНомер,
	            	  |		РеализацияККМАвансыПоУслугам.ЗетОчет,
	            	  |		РеализацияККМАвансыПоУслугам.СтавкаНДС.Ставка,
	            	  |		РеализацияККМАвансыПоУслугам.ТипОплаты,
	            	  |		РеализацияККМАвансыПоУслугам.ТипОплаты.Порядок,
	            	  |		РеализацияККМАвансыПоУслугам.Ссылка.Склад.ТипНалогообложения.Порядок,
	            	  |		РеализацияККМАвансыПоУслугам.Услуга.КатегорияУслуги.Код) КАК Услуги
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	ФирмаИНН,
	            	  |	Дата,
	            	  |	СкладКод,
	            	  |	КассаЗаводскойНомер,
	            	  |	СтавкаНДССтавка,
	            	  |	ТипНалогообложенияПТПорядок
	            	  |;
	            	  |
	            	  |////////////////////////////////////////////////////////////////////////////////
	            	  |ВЫБРАТЬ
	            	  |	СыраяВыборка.ФирмаИНН КАК ФирмаИНН,
	            	  |	СыраяВыборка.СкладКод КАК СкладКод,
	            	  |	СыраяВыборка.Затычка,
	            	  |	СыраяВыборка.Дата КАК Дата,
	            	  |	СыраяВыборка.КассаЗаводскойНомер КАК КассаЗаводскойНомер,
	            	  |	СыраяВыборка.ЗетОтчет КАК ЗетОтчет,
	            	  |	СыраяВыборка.СтавкаНДССтавка КАК СтавкаНДССтавка,
	            	  |	СыраяВыборка.ТипОплаты,
	            	  |	СыраяВыборка.ТипОплатыПорядок КАК ТипОплатыПорядок,
	            	  |	СыраяВыборка.СуммаБезСкидки,
	            	  |	СыраяВыборка.СуммаСоСкидкой,
	            	  |	СыраяВыборка.СуммаСкидки,
	            	  |	СыраяВыборка.СуммаНДСБезСкидки,
	            	  |	СыраяВыборка.СуммаНДДСоСкидкой,
	            	  |	СыраяВыборка.ЗакупочнаяСНДС,
	            	  |	СыраяВыборка.НДСЗакуп,
	            	  |	СыраяВыборка.ТипНалогообложенияПТ,
	            	  |	СыраяВыборка.ТипНалогообложенияПТПорядок,
	            	  |	СыраяВыборка.СкладТипНалогообложенияПорядок,
	            	  |	СыраяВыборка.Наценка,
	            	  |	СыраяВыборка.ВидПТ КАК ВидПТ,
	            	  |	СыраяВыборка.ТоварУслуга,
	            	  |	СыраяВыборка.КодКатегорииУслугиЧ,
	            	  |	ПРЕДСТАВЛЕНИЕ(СыраяВыборка.ПоставщикКод) КАК ПоставщикКод,
	            	  |	СыраяВыборка.ПоставщикИНН,
	            	  |	СыраяВыборка.ПоставщикКПП,
	            	  |	СыраяВыборка.ВхНомерНакл,
	            	  |	СыраяВыборка.ВхДатаНакл,
	            	  |	СыраяВыборка.ТипОплаты1,
	            	  |	СыраяВыборка.ВидПоступленияТовара
	            	  |ИЗ
	            	  |	СыраяВыборка КАК СыраяВыборка
	            	  |ГДЕ
	            	  |	СыраяВыборка.КассаЗаводскойНомер <> """"
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	ФирмаИНН,
	            	  |	Дата,
	            	  |	СкладКод,
	            	  |	КассаЗаводскойНомер,
	            	  |	ЗетОтчет,
	            	  |	СтавкаНДССтавка,
	            	  |	ТипОплатыПорядок,
	            	  |	ВидПТ
	            	  |;
	            	  |
	            	  |////////////////////////////////////////////////////////////////////////////////
	            	  |УНИЧТОЖИТЬ СыраяВыборка";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_Переоценка(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	База_0.ФирмаИНН,
	            	  |	База_0.СкладКод,
	            	  |	База_0.СкладНаименование,
	            	  |	База_0.Партия,
	            	  |	База_0.СтараяСуммаРозн,
	            	  |	База_0.НоваяСуммаРозн,
	            	  |	База_0.СуммаЗакуп,
	            	  |	База_0.СтавкаНДССтавка,
	            	  |	База_0.НДСЗакуп,
	            	  |	База_0.НовыйРознНДС,
	            	  |	База_0.СтарыйРознНДС,
	            	  |	ВЫБОР
	            	  |		КОГДА База_0.КонтрагентНаУСН = ИСТИНА
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК КонтрагентНаУСН,
	            	  |	База_0.ТипНОПоступления,
	            	  |	База_0.ПереоценкаНижеЗакупки,
	            	  |	База_0.Номер,
	            	  |	База_0.Дата,
	            	  |	ВЫБОР
	            	  |		КОГДА База_0.ПереоценкаНижеЗакупки = ЛОЖЬ
	            	  |			ТОГДА База_0.НоваяСуммаРозн - База_0.СтараяСуммаРозн
	            	  |		ИНАЧЕ ВЫБОР
	            	  |				КОГДА База_0.КонтрагентНаУСН = ИСТИНА
	            	  |					ТОГДА База_0.СуммаЗакуп
	            	  |				ИНАЧЕ База_0.СуммаЗакуп - База_0.НДСЗакуп
	            	  |			КОНЕЦ - База_0.СтараяСуммаРозн
	            	  |	КОНЕЦ КАК УценкаДооценка,
	            	  |	ВЫБОР
	            	  |		КОГДА База_0.ПереоценкаНижеЗакупки = ЛОЖЬ
	            	  |			ТОГДА 0
	            	  |		ИНАЧЕ ВЫБОР
	            	  |				КОГДА База_0.КонтрагентНаУСН = ИСТИНА
	            	  |					ТОГДА База_0.СуммаЗакуп
	            	  |				ИНАЧЕ База_0.СуммаЗакуп - База_0.НДСЗакуп
	            	  |			КОНЕЦ - База_0.НоваяСуммаРозн
	            	  |	КОНЕЦ КАК УбытокОтПереоценкиНижеЗакупки
	            	  |ПОМЕСТИТЬ База
	            	  |ИЗ
	            	  |	(ВЫБРАТЬ
	            	  |		ПереоценкаТовар.Ссылка.Фирма.ИНН КАК ФирмаИНН,
	            	  |		ПереоценкаТовар.Ссылка.Склад.Код КАК СкладКод,
	            	  |		ПереоценкаТовар.Ссылка.Склад.Наименование КАК СкладНаименование,
	            	  |		ПереоценкаТовар.Партия КАК Партия,
	            	  |		ПереоценкаТовар.СтараяСуммаРозн КАК СтараяСуммаРозн,
	            	  |		ПереоценкаТовар.НоваяСуммаРозн КАК НоваяСуммаРозн,
	            	  |		ПереоценкаТовар.СуммаЗакуп КАК СуммаЗакуп,
	            	  |		ПереоценкаТовар.СтавкаНДС.Ставка КАК СтавкаНДССтавка,
	            	  |		ПереоценкаТовар.НДСЗакуп КАК НДСЗакуп,
	            	  |		ПереоценкаТовар.НовыйРознНДС КАК НовыйРознНДС,
	            	  |		ПереоценкаТовар.СтарыйРознНДС КАК СтарыйРознНДС,
	            	  |		ПереоценкаТовар.Партия.Поставщик.КонтрагентНаУСН КАК КонтрагентНаУСН,
	            	  |		ПереоценкаТовар.Партия.ДокументПоступления.Склад.ТипНалогообложения.Порядок КАК ТипНОПоступления,
	            	  |		ВЫБОР
	            	  |			КОГДА ПереоценкаТовар.Партия.Поставщик.КонтрагентНаУСН = ЛОЖЬ
	            	  |				ТОГДА ВЫБОР
	            	  |						КОГДА ПереоценкаТовар.НоваяСуммаРозн < ПереоценкаТовар.СуммаЗакуп - ПереоценкаТовар.НДСЗакуп
	            	  |								И ПереоценкаТовар.СтараяСуммаРозн >= ПереоценкаТовар.СуммаЗакуп - ПереоценкаТовар.НДСЗакуп
	            	  |							ТОГДА ИСТИНА
	            	  |						ИНАЧЕ ЛОЖЬ
	            	  |					КОНЕЦ
	            	  |			ИНАЧЕ ВЫБОР
	            	  |					КОГДА ПереоценкаТовар.НоваяСуммаРозн < ПереоценкаТовар.СуммаЗакуп
	            	  |							И ПереоценкаТовар.СтараяСуммаРозн >= ПереоценкаТовар.СуммаЗакуп
	            	  |						ТОГДА ИСТИНА
	            	  |					ИНАЧЕ ЛОЖЬ
	            	  |				КОНЕЦ
	            	  |		КОНЕЦ КАК ПереоценкаНижеЗакупки,
	            	  |		ПереоценкаТовар.Ссылка.Номер КАК Номер,
	            	  |		ПереоценкаТовар.Ссылка.Дата КАК Дата
	            	  |	ИЗ
	            	  |		Документ.Переоценка.Товар КАК ПереоценкаТовар
	            	  |	ГДЕ
	            	  |		ПереоценкаТовар.Неактивная = ЛОЖЬ
	            	  |		И ПереоценкаТовар.Ссылка.Фирма.ИНН = &ИНН
	            	  |		И ПереоценкаТовар.Ссылка.Склад.Код = ВЫБОР
	            	  |				КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |					ТОГДА ПереоценкаТовар.Ссылка.Склад.Код
	            	  |				ИНАЧЕ &КодСклада
	            	  |			КОНЕЦ
	            	  |		И ПереоценкаТовар.Ссылка.Проведен = ИСТИНА
	            	  |		И ПереоценкаТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2) КАК База_0
	            	  |;
	            	  |
	            	  |////////////////////////////////////////////////////////////////////////////////
	            	  |ВЫБРАТЬ
	            	  |	База.Дата КАК Дата,
	            	  |	База.Номер КАК Номер,
	            	  |	База.ФирмаИНН,
	            	  |	База.СкладКод,
	            	  |	База.СкладНаименование,
	            	  |	СУММА(База.СтараяСуммаРозн) КАК СтараяСуммаРозн,
	            	  |	СУММА(База.НоваяСуммаРозн) КАК НоваяСуммаРозн,
	            	  |	СУММА(База.СуммаЗакуп) КАК СуммаЗакуп,
	            	  |	База.СтавкаНДССтавка,
	            	  |	СУММА(База.НДСЗакуп) КАК НДСЗакуп,
	            	  |	СУММА(База.НовыйРознНДС) КАК НовыйРознНДС,
	            	  |	СУММА(База.СтарыйРознНДС) КАК СтарыйРознНДС,
	            	  |	ВЫБОР
	            	  |		КОГДА База.КонтрагентНаУСН = ИСТИНА
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК КонтрагентНаУСН,
	            	  |	База.ТипНОПоступления,
	            	  |	ВЫБОР
	            	  |		КОГДА База.ПереоценкаНижеЗакупки = ИСТИНА
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК ПереоценкаНижеЗакупки,
	            	  |	СУММА(База.УценкаДооценка) КАК УценкаДооценка,
	            	  |	СУММА(База.УбытокОтПереоценкиНижеЗакупки) КАК УбытокОтПереоценкиНижеЗакупки
	            	  |ИЗ
	            	  |	База КАК База
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	База.ФирмаИНН,
	            	  |	База.СкладКод,
	            	  |	База.СкладНаименование,
	            	  |	База.СтавкаНДССтавка,
	            	  |	База.КонтрагентНаУСН,
	            	  |	База.ТипНОПоступления,
	            	  |	База.ПереоценкаНижеЗакупки,
	            	  |	База.Номер,
	            	  |	База.Дата,
	            	  |	ВЫБОР
	            	  |		КОГДА База.КонтрагентНаУСН = ИСТИНА
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ,
	            	  |	ВЫБОР
	            	  |		КОГДА База.ПереоценкаНижеЗакупки = ИСТИНА
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	Дата,
	            	  |	Номер
	            	  |АВТОУПОРЯДОЧИВАНИЕ
	            	  |;
	            	  |
	            	  |////////////////////////////////////////////////////////////////////////////////
	            	  |УНИЧТОЖИТЬ БАЗА";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_ВозвратНеВДеньПокупки(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	ВозвратОтПокупателяТовар.Ссылка.Склад.Код,
	            	  |	ВозвратОтПокупателяТовар.Ссылка.Склад.Фирма.ИНН,
	            	  |	ВозвратОтПокупателяТовар.Партия.ДокументПоступления.Склад.ТипНалогообложения.Порядок КАК ТНО_Поступления,
	            	  |	ВозвратОтПокупателяТовар.Ссылка.Склад.ТипНалогообложения.Порядок,
	            	  |	ВозвратОтПокупателяТовар.СтавкаНДС.Ставка КАК СтавкаНДС,
	            	  |	СУММА(ВозвратОтПокупателяТовар.НДСЗакуп) КАК НДСЗакуп,
	            	  |	СУММА(ВозвратОтПокупателяТовар.НДСРозн) КАК НДСРозн,
	            	  |	СУММА(ВозвратОтПокупателяТовар.СуммаЗакуп) КАК СуммаЗакуп,
	            	  |	СУММА(ВозвратОтПокупателяТовар.СуммаРозн) КАК СуммаРозн,
	            	  |	СУММА(ВозвратОтПокупателяТовар.СуммаСкидки) КАК СуммаСкидки,
	            	  |	ВозвратОтПокупателяТовар.Ссылка.Номер КАК Номер,
	            	  |	НАЧАЛОПЕРИОДА(ВозвратОтПокупателяТовар.Ссылка.Дата, ДЕНЬ) КАК Дата
	            	  |ИЗ
	            	  |	Документ.ВозвратОтПокупателя.Товар КАК ВозвратОтПокупателяТовар
	            	  |ГДЕ
	            	  |	ВозвратОтПокупателяТовар.Ссылка.Фирма.ИНН = &ИНН
	            	  |	И ВозвратОтПокупателяТовар.Ссылка.Склад.Код = ВЫБОР
	            	  |			КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |				ТОГДА ВозвратОтПокупателяТовар.Ссылка.Склад.Код
	            	  |			ИНАЧЕ &КодСклада
	            	  |		КОНЕЦ
	            	  |	И ВозвратОтПокупателяТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	ВозвратОтПокупателяТовар.Ссылка.Склад.Код,
	            	  |	ВозвратОтПокупателяТовар.Ссылка.Склад.Фирма.ИНН,
	            	  |	ВозвратОтПокупателяТовар.Ссылка.Номер,
	            	  |	ВозвратОтПокупателяТовар.СтавкаНДС.Ставка,
	            	  |	ВозвратОтПокупателяТовар.Ссылка.Дата,
	            	  |	ВозвратОтПокупателяТовар.Ссылка.Склад.ТипНалогообложения.Порядок,
	            	  |	ВозвратОтПокупателяТовар.Партия.ДокументПоступления.Склад.ТипНалогообложения.Порядок
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	Дата,
	            	  |	Номер,
	            	  |	ТНО_Поступления";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции	

Функция АС_ВозвратТоваровПоставщику(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.ИНН КАК ПоставщикИНН,
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.КПП КАК ПоставщикКПП,
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.Код КАК ПоставщикКод,
	            	  |	ВозвратТовараПоставщикуТовар.Партия.ДокументПоступления.Поставщик.ИНН КАК ППоставщикИНН,
	            	  |	ВозвратТовараПоставщикуТовар.Партия.ДокументПоступления.Поставщик.КПП КАК ППоставщикКПП,
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Склад.Код КАК СкладКод,
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Номер КАК Номер,
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Дата КАК Дата,
	            	  |	ВозвратТовараПоставщикуТовар.Партия.ДокументПоступления.ВхДатаНакл КАК ВхДатаНакл,
	            	  |	ВозвратТовараПоставщикуТовар.Партия.ДокументПоступления.ВхНомерНакл КАК ВхНомерНакл,
	            	  |	ВозвратТовараПоставщикуТовар.СтавкаНДС.Ставка КАК СтавкаНДССтавка,
	            	  |	СУММА(ВозвратТовараПоставщикуТовар.СуммаЗакуп) КАК СуммаЗакуп,
	            	  |	СУММА(ВозвратТовараПоставщикуТовар.СуммаРозн) КАК СуммаРозн,
	            	  |	СУММА(ВозвратТовараПоставщикуТовар.НДСЗакуп) КАК НДСЗакуп,
	            	  |	СУММА(ВозвратТовараПоставщикуТовар.НДСРозн) КАК НДСРозн,
	            	  |	ВЫБОР
	            	  |		КОГДА ВозвратТовараПоставщикуТовар.Ссылка.Поставщик = ВозвратТовараПоставщикуТовар.Партия.Поставщик
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК ТоварПоставщика
	            	  |ИЗ
	            	  |	Документ.ВозвратТовараПоставщику.Товар КАК ВозвратТовараПоставщикуТовар
	            	  |ГДЕ
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Фирма.ИНН = &ИНН
	            	  |	И ВозвратТовараПоставщикуТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |	И ВозвратТовараПоставщикуТовар.Ссылка.Склад.Код = ВЫБОР
	            	  |			КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |				ТОГДА ВозвратТовараПоставщикуТовар.Ссылка.Склад.Код
	            	  |			ИНАЧЕ &КодСклада
	            	  |		КОНЕЦ
	            	  |	И ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.ИНН = ВЫБОР
	            	  |			КОГДА &ПоВсемПоставщикам = ИСТИНА
	            	  |				ТОГДА ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.ИНН
	            	  |			ИНАЧЕ &ИННПоставщика
	            	  |		КОНЕЦ
	            	  |	И ВозвратТовараПоставщикуТовар.Ссылка.Проведен = ИСТИНА
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	ВозвратТовараПоставщикуТовар.Партия.ДокументПоступления.Поставщик.ИНН,
	            	  |	ВозвратТовараПоставщикуТовар.Партия.ДокументПоступления.Поставщик.КПП,
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Склад.Код,
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Номер,
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Дата,
	            	  |	ВозвратТовараПоставщикуТовар.Партия.ДокументПоступления.ВхДатаНакл,
	            	  |	ВозвратТовараПоставщикуТовар.Партия.ДокументПоступления.ВхНомерНакл,
	            	  |	ВозвратТовараПоставщикуТовар.СтавкаНДС.Ставка,
	            	  |	ВЫБОР
	            	  |		КОГДА ВозвратТовараПоставщикуТовар.Ссылка.Поставщик = ВозвратТовараПоставщикуТовар.Партия.Поставщик
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ,
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.ИНН,
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.КПП,
	            	  |	ВозвратТовараПоставщикуТовар.Ссылка.Поставщик.Код
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	ПоставщикКод,
	            	  |	ППоставщикИНН,
	            	  |	ППоставщикКПП,
	            	  |	СкладКод,
	            	  |	Номер,
	            	  |	Дата,
	            	  |	ВхДатаНакл,
	            	  |	ВхНомерНакл,
	            	  |	СтавкаНДССтавка,
	            	  |	ТоварПоставщика";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	Запрос.УстановитьПараметр("ПоВсемПоставщикам", ?(ЗначениеЗаполнено(ИННПоставщика), Ложь, Истина));
	Запрос.УстановитьПараметр("ИННПоставщика"	, ?(ЗначениеЗаполнено(ИННПоставщика), ИННПоставщика, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_ВозвратСКомиссии(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	ВозвратСКомиссииТовар.Ссылка.ФирмаКомиссионер.ИНН КАК ПоставщикИНН,
	            	  |	ВозвратСКомиссииТовар.Ссылка.ФирмаКомиссионер.КПП КАК ПоставщикКПП,
	            	  |	ВозвратСКомиссииТовар.Ссылка.ФирмаКомиссионер.ФирмаКакПоставщик.Код КАК ПоставщикКод,
	            	  |	ВозвратСКомиссииТовар.Ссылка.Фирма.ИНН КАК ППоставщикИНН,
	            	  |	ВозвратСКомиссииТовар.Ссылка.Фирма.КПП КАК ППоставщикКПП,
	            	  |	ВозвратСКомиссииТовар.Ссылка.Склад.Код КАК СкладКод,
	            	  |	ВозвратСКомиссииТовар.Ссылка.Номер КАК Номер,
	            	  |	ВозвратСКомиссииТовар.Ссылка.Дата КАК Дата,
	            	  |	ВозвратСКомиссииТовар.Партия.ДокументПоступления.ВхДатаНакл КАК ВхДатаНакл,
	            	  |	ВозвратСКомиссииТовар.Партия.ДокументПоступления.ВхНомерНакл КАК ВхНомерНакл,
	            	  |	ВозвратСКомиссииТовар.СтавкаНДС.Ставка КАК СтавкаНДССтавка,
	            	  |	СУММА(ВозвратСКомиссииТовар.СуммаЗакуп) КАК СуммаЗакуп,
	            	  |	СУММА(ВозвратСКомиссииТовар.СуммаРозн) КАК СуммаРозн,
	            	  |	СУММА(ВозвратСКомиссииТовар.НДСЗакуп) КАК НДСЗакуп,
	            	  |	СУММА(ВозвратСКомиссииТовар.НДСРозн) КАК НДСРозн,
	            	  |	1 КАК ТоварПоставщика
	            	  |ИЗ
	            	  |	Документ.ВозвратСКомиссии.Товар КАК ВозвратСКомиссииТовар
	            	  |ГДЕ
	            	  |	ВозвратСКомиссииТовар.Ссылка.Фирма.ИНН = &ИНН
	            	  |	И ВозвратСКомиссииТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |	И ВозвратСКомиссииТовар.Ссылка.Склад.Код = ВЫБОР
	            	  |			КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |				ТОГДА ВозвратСКомиссииТовар.Ссылка.Склад.Код
	            	  |			ИНАЧЕ &КодСклада
	            	  |		КОНЕЦ
	            	  |	И ВозвратСКомиссииТовар.Ссылка.Проведен = ИСТИНА
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	ВозвратСКомиссииТовар.Ссылка.Склад.Код,
	            	  |	ВозвратСКомиссииТовар.Ссылка.Номер,
	            	  |	ВозвратСКомиссииТовар.Ссылка.Дата,
	            	  |	ВозвратСКомиссииТовар.Партия.ДокументПоступления.ВхДатаНакл,
	            	  |	ВозвратСКомиссииТовар.Партия.ДокументПоступления.ВхНомерНакл,
	            	  |	ВозвратСКомиссииТовар.СтавкаНДС.Ставка,
	            	  |	ВозвратСКомиссииТовар.Ссылка.ФирмаКомиссионер.ИНН,
	            	  |	ВозвратСКомиссииТовар.Ссылка.ФирмаКомиссионер.КПП,
	            	  |	ВозвратСКомиссииТовар.Ссылка.ФирмаКомиссионер.ФирмаКакПоставщик.Код,
	            	  |	ВозвратСКомиссииТовар.Ссылка.Фирма.ИНН,
	            	  |	ВозвратСКомиссииТовар.Ссылка.Фирма.КПП
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	ПоставщикКод,
	            	  |	ППоставщикИНН,
	            	  |	ППоставщикКПП,
	            	  |	СкладКод,
	            	  |	Номер,
	            	  |	Дата,
	            	  |	ВхДатаНакл,
	            	  |	ВхНомерНакл,
	            	  |	СтавкаНДССтавка,
	            	  |	ТоварПоставщика";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_МелкооптоваяОтгрузка(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	РеализацияОптомТовар.Ссылка.Склад.Код,
	            	  |	РеализацияОптомТовар.Ссылка.Покупатель.ИНН,
	            	  |	РеализацияОптомТовар.Ссылка.Покупатель.КПП,
	            	  |	РеализацияОптомТовар.Ссылка.Покупатель.Код,
	            	  |	РеализацияОптомТовар.Ссылка.Номер КАК Номер,
	            	  |	НАЧАЛОПЕРИОДА(РеализацияОптомТовар.Ссылка.Дата, ДЕНЬ) КАК Дата,
	            	  |	РеализацияОптомТовар.СтавкаНДС.Ставка,
	            	  |	СУММА(РеализацияОптомТовар.СуммаЗакуп) КАК СуммаЗакуп,
	            	  |	СУММА(РеализацияОптомТовар.СуммаРозн) КАК СуммаРозн,
	            	  |	СУММА(РеализацияОптомТовар.НДСЗакуп) КАК НДСЗакуп,
	            	  |	СУММА(РеализацияОптомТовар.НДСРозн) КАК НДСРозн,
	            	  |	РеализацияОптомТовар.Ссылка.НомДокАптеки,
	            	  |	РеализацияОптомТовар.Ссылка.Склад.НомерАптеки,
	            	  |	СУММА(РеализацияОптомТовар.СуммаСоСкидкой) КАК СуммаСоСкидкой,
	            	  |	СУММА(РеализацияОптомТовар.СуммаСкидки) КАК СуммаСкидки
	            	  |ИЗ
	            	  |	Документ.РеализацияОптом.Товар КАК РеализацияОптомТовар
	            	  |ГДЕ
	            	  |	РеализацияОптомТовар.Ссылка.Проведен = ИСТИНА
	            	  |	И РеализацияОптомТовар.Ссылка.Фирма.ИНН = &ИНН
	            	  |	И РеализацияОптомТовар.Ссылка.Покупатель.ИНН = ВЫБОР
	            	  |			КОГДА &ПоВсемПоставщикам = ИСТИНА
	            	  |				ТОГДА РеализацияОптомТовар.Ссылка.Покупатель.ИНН
	            	  |			ИНАЧЕ &ИННПоставщика
	            	  |		КОНЕЦ
	            	  |	И РеализацияОптомТовар.Ссылка.Склад.Код = ВЫБОР
	            	  |			КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |				ТОГДА РеализацияОптомТовар.Ссылка.Склад.Код
	            	  |			ИНАЧЕ &КодСклада
	            	  |		КОНЕЦ
	            	  |	И РеализацияОптомТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	РеализацияОптомТовар.Ссылка.Покупатель.КПП,
	            	  |	РеализацияОптомТовар.Ссылка.Покупатель.ИНН,
	            	  |	РеализацияОптомТовар.Ссылка.Склад.Код,
	            	  |	РеализацияОптомТовар.Ссылка.Покупатель.Код,
	            	  |	РеализацияОптомТовар.Ссылка.Номер,
	            	  |	РеализацияОптомТовар.СтавкаНДС.Ставка,
	            	  |	НАЧАЛОПЕРИОДА(РеализацияОптомТовар.Ссылка.Дата, ДЕНЬ),
	            	  |	РеализацияОптомТовар.Ссылка.НомДокАптеки,
	            	  |	РеализацияОптомТовар.Ссылка.Склад.НомерАптеки
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	Дата,
	            	  |	Номер";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	Запрос.УстановитьПараметр("ПоВсемПоставщикам", ?(ЗначениеЗаполнено(ИННПоставщика), Ложь, Истина));
	Запрос.УстановитьПараметр("ИННПоставщика"	, ?(ЗначениеЗаполнено(ИННПоставщика), ИННПоставщика, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_ОптоваяОтгрузка(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	РеализацияОптоваяТовар.Ссылка.Склад.Код,
	            	  |	РеализацияОптоваяТовар.Ссылка.Фирма.ИНН КАК ФирмаИНН,
	            	  |	РеализацияОптоваяТовар.Ссылка.Покупатель.ИНН,
	            	  |	РеализацияОптоваяТовар.Ссылка.Покупатель.КПП,
	            	  |	РеализацияОптоваяТовар.Ссылка.Покупатель.Код,
	            	  |	РеализацияОптоваяТовар.Ссылка.Номер КАК Номер,
	            	  |	НАЧАЛОПЕРИОДА(РеализацияОптоваяТовар.Ссылка.Дата, ДЕНЬ) КАК Дата,
	            	  |	РеализацияОптоваяТовар.СтавкаНДС.Ставка,
	            	  |	СУММА(РеализацияОптоваяТовар.СуммаЗакуп) КАК СуммаЗакуп,
	            	  |	СУММА(РеализацияОптоваяТовар.НДСЗакуп) КАК НДСЗакуп,
	            	  |	РеализацияОптоваяТовар.Ссылка.Склад.НомерАптеки,
	            	  |	СУММА(РеализацияОптоваяТовар.СуммаОпт) КАК СуммаРозн,
	            	  |	СУММА(РеализацияОптоваяТовар.НДСОпт) КАК НДСРозн
	            	  |ИЗ
	            	  |	Документ.РеализацияОптовая.Товар КАК РеализацияОптоваяТовар
	            	  |ГДЕ
	            	  |	РеализацияОптоваяТовар.Ссылка.Проведен = ИСТИНА
	            	  |	И РеализацияОптоваяТовар.Ссылка.Фирма.ИНН = &ИНН
	            	  |	И РеализацияОптоваяТовар.Ссылка.Покупатель.ИНН = ВЫБОР
	            	  |			КОГДА &ПоВсемПоставщикам = ИСТИНА
	            	  |				ТОГДА РеализацияОптоваяТовар.Ссылка.Покупатель.ИНН
	            	  |			ИНАЧЕ &ИННПоставщика
	            	  |		КОНЕЦ
	            	  |	И РеализацияОптоваяТовар.Ссылка.Склад.Код = ВЫБОР
	            	  |			КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |				ТОГДА РеализацияОптоваяТовар.Ссылка.Склад.Код
	            	  |			ИНАЧЕ &КодСклада
	            	  |		КОНЕЦ
	            	  |	И РеализацияОптоваяТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	РеализацияОптоваяТовар.Ссылка.Фирма.ИНН,
	            	  |	РеализацияОптоваяТовар.Ссылка.Покупатель.КПП,
	            	  |	РеализацияОптоваяТовар.Ссылка.Покупатель.ИНН,
	            	  |	РеализацияОптоваяТовар.Ссылка.Склад.Код,
	            	  |	РеализацияОптоваяТовар.Ссылка.Покупатель.Код,
	            	  |	РеализацияОптоваяТовар.Ссылка.Номер,
	            	  |	РеализацияОптоваяТовар.СтавкаНДС.Ставка,
	            	  |	РеализацияОптоваяТовар.Ссылка.Склад.НомерАптеки,
	            	  |	НАЧАЛОПЕРИОДА(РеализацияОптоваяТовар.Ссылка.Дата, ДЕНЬ)
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	Дата,
	            	  |	Номер";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	Запрос.УстановитьПараметр("ПоВсемПоставщикам", ?(ЗначениеЗаполнено(ИННПоставщика), Ложь, Истина));
	Запрос.УстановитьПараметр("ИННПоставщика"	, ?(ЗначениеЗаполнено(ИННПоставщика), ИННПоставщика, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_ПередачаНаКомиссию(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.Номер КАК Номер,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.Дата КАК Дата,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.ВхДатаНакл,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.ВхДатаСФ,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.ВхНомерНакл,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.ВхНомерСФ,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.Склад.Наименование,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.Склад.Код,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.СкладКомиссионер.Наименование,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.СкладКомиссионер.Код,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.Фирма.ИНН,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.ФирмаКомиссионер.ИНН,
	            	  |	ПередачаНаКомиссиюТовар.СтавкаНДС.Ставка КАК СтавкаНДССтавка,
	            	  |	СУММА(ПередачаНаКомиссиюТовар.СуммаЗакуп) КАК СуммаЗакуп,
	            	  |	СУММА(ПередачаНаКомиссиюТовар.НДСЗакуп) КАК НДСЗакуп,
	            	  |	СУММА(ПередачаНаКомиссиюТовар.СуммаРозн) КАК СуммаРозн,
	            	  |	СУММА(ПередачаНаКомиссиюТовар.НДСРозн) КАК НДСРозн,
	            	  |	ПередачаНаКомиссиюТовар.Партия.ВидПоступленияТовара.Порядок КАК ВПТ,
	            	  |	ПередачаНаКомиссиюТовар.Партия.ДокументПоступления.Склад.ТипНалогообложения.Порядок КАК ТНОПоступления,
	            	  |	ПередачаНаКомиссиюТовар.Партия.Поставщик.КонтрагентНаУСН КАК ПоставщикНаУСН
	            	  |ИЗ
	            	  |	Документ.ПередачаНаКомиссию.Товар КАК ПередачаНаКомиссиюТовар
	            	  |ГДЕ
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.Фирма.ИНН = &ИНН
	            	  |	И ПередачаНаКомиссиюТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |	И ПередачаНаКомиссиюТовар.Ссылка.Проведен = ИСТИНА
	            	  |	И ПередачаНаКомиссиюТовар.Ссылка.Склад.Код = ВЫБОР
	            	  |			КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |				ТОГДА ПередачаНаКомиссиюТовар.Ссылка.Склад.Код
	            	  |			ИНАЧЕ &КодСклада
	            	  |		КОНЕЦ
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.Склад.Наименование,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.ВхНомерСФ,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.ВхНомерНакл,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.ВхДатаСФ,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.ВхДатаНакл,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.Дата,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.СкладКомиссионер.Наименование,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.Фирма.ИНН,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.ФирмаКомиссионер.ИНН,
	            	  |	ПередачаНаКомиссиюТовар.Партия.ВидПоступленияТовара.Порядок,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.Номер,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.Склад.Код,
	            	  |	ПередачаНаКомиссиюТовар.Ссылка.СкладКомиссионер.Код,
	            	  |	ПередачаНаКомиссиюТовар.СтавкаНДС.Ставка,
	            	  |	ПередачаНаКомиссиюТовар.Партия.ДокументПоступления.Склад.ТипНалогообложения.Порядок,
	            	  |	ПередачаНаКомиссиюТовар.Партия.Поставщик.КонтрагентНаУСН
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	Дата,
	            	  |	Номер,
	            	  |	СтавкаНДССтавка";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_Инвентаризация(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	ИнвентаризацияТовар.Партия.ВидПоступленияТовара.Порядок КАК ПартияВидПоступленияТовара,
	            	  |	ИнвентаризацияТовар.СтавкаНДС.Ставка КАК СтавкаНДССтавка,
	            	  |	ИнвентаризацияТовар.Ссылка.Фирма.ИНН КАК ФирмаИНН,
	            	  |	ИнвентаризацияТовар.Ссылка.Склад.Код КАК СкладКод,
	            	  |	СУММА(ИнвентаризацияТовар.СуммаЗакупУчет) КАК СуммаЗакупУчет,
	            	  |	СУММА(ИнвентаризацияТовар.СуммаРознУчет) КАК СуммаРознУчет,
	            	  |	СУММА(ИнвентаризацияТовар.СуммаЗакупФакт) КАК СуммаЗакупФакт,
	            	  |	СУММА(ИнвентаризацияТовар.СуммаРознФакт) КАК СуммаРознФакт,
	            	  |	СУММА(ИнвентаризацияТовар.СуммаНДСЗакупУчет) КАК СуммаНДСЗакупУчет,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА ИнвентаризацияТовар.Товар.Поставщик.ИНН
	            	  |		ИНАЧЕ """"
	            	  |	КОНЕЦ КАК ТоварПоставщикИНН,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА ИнвентаризацияТовар.Товар.Поставщик.Код
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК ТоварПоставщикКод,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА ИнвентаризацияТовар.Товар.Поставщик.КПП
	            	  |		ИНАЧЕ """"
	            	  |	КОНЕЦ КАК ТоварПоставщикКПП,
	            	  |	ИнвентаризацияТовар.Ссылка.Номер КАК Номер,
	            	  |	НАЧАЛОПЕРИОДА(ИнвентаризацияТовар.Ссылка.Дата, ДЕНЬ) КАК Дата,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА ИнвентаризацияТовар.Партия.ДокументПоступления.ВхНомерНакл
	            	  |		ИНАЧЕ """"
	            	  |	КОНЕЦ КАК ВхНомерНакл,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА НАЧАЛОПЕРИОДА(ИнвентаризацияТовар.Партия.ДокументПоступления.ВхДатаНакл, ДЕНЬ)
	            	  |		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	            	  |	КОНЕЦ КАК ВхДатаНакл,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА ИнвентаризацияТовар.Партия.ДокументПоступления.Номер
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК НомерПА,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА НАЧАЛОПЕРИОДА(ИнвентаризацияТовар.Партия.ДокументПоступления.Дата, ДЕНЬ)
	            	  |		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	            	  |	КОНЕЦ КАК ДатаПА,
	            	  |	ИнвентаризацияТовар.Ссылка.Комментарий,
	            	  |	ИнвентаризацияТовар.Партия.ДокументПоступления.Склад.ТипНалогообложения.Порядок КАК ТипНОПТ
	            	  |ИЗ
	            	  |	Документ.Инвентаризация.Товар КАК ИнвентаризацияТовар
	            	  |ГДЕ
	            	  |	ИнвентаризацияТовар.Ссылка.Проведен = ИСТИНА
	            	  |	И ИнвентаризацияТовар.Ссылка.Фирма.ИНН = &ИНН
	            	  |	И ВЫБОР
	            	  |			КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |				ТОГДА ИнвентаризацияТовар.Ссылка.Склад.Код
	            	  |			ИНАЧЕ &КодСклада
	            	  |		КОНЕЦ = ИнвентаризацияТовар.Ссылка.Склад.Код
	            	  |	И ИнвентаризацияТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	ИнвентаризацияТовар.Партия.ВидПоступленияТовара.Порядок,
	            	  |	ИнвентаризацияТовар.СтавкаНДС.Ставка,
	            	  |	ИнвентаризацияТовар.Ссылка.Фирма.ИНН,
	            	  |	ИнвентаризацияТовар.Ссылка.Склад.Код,
	            	  |	ИнвентаризацияТовар.Ссылка.Номер,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА ИнвентаризацияТовар.Товар.Поставщик.ИНН
	            	  |		ИНАЧЕ """"
	            	  |	КОНЕЦ,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА ИнвентаризацияТовар.Товар.Поставщик.Код
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА ИнвентаризацияТовар.Товар.Поставщик.КПП
	            	  |		ИНАЧЕ """"
	            	  |	КОНЕЦ,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА ИнвентаризацияТовар.Партия.ДокументПоступления.ВхНомерНакл
	            	  |		ИНАЧЕ """"
	            	  |	КОНЕЦ,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА ИнвентаризацияТовар.Партия.ДокументПоступления.Номер
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ,
	            	  |	ИнвентаризацияТовар.Ссылка.Комментарий,
	            	  |	НАЧАЛОПЕРИОДА(ИнвентаризацияТовар.Ссылка.Дата, ДЕНЬ),
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА НАЧАЛОПЕРИОДА(ИнвентаризацияТовар.Партия.ДокументПоступления.Дата, ДЕНЬ)
	            	  |		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	            	  |	КОНЕЦ,
	            	  |	ВЫБОР
	            	  |		КОГДА ИнвентаризацияТовар.Партия.ВидПоступленияТовара = ЗНАЧЕНИЕ(перечисление.видыпоступлениятоваров.комиссия)
	            	  |			ТОГДА НАЧАЛОПЕРИОДА(ИнвентаризацияТовар.Партия.ДокументПоступления.ВхДатаНакл, ДЕНЬ)
	            	  |		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	            	  |	КОНЕЦ,
	            	  |	ИнвентаризацияТовар.Партия.ДокументПоступления.Склад.ТипНалогообложения.Порядок
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	Дата,
	            	  |	Номер,
	            	  |	ТоварПоставщикИНН,
	            	  |	ТоварПоставщикКПП,
	            	  |	ПартияВидПоступленияТовара,
	            	  |	СтавкаНДССтавка";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_ПеремещениеТоваров(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	база.ОтправительИНН,
	            	  |	база.ОтправительКПП,
	            	  |	база.ИНН,
	            	  |	база.ОтправительКод,
	            	  |	база.ПолучательИНН,
	            	  |	база.ПолучательКПП,
	            	  |	база.ПолучательКод,
	            	  |	база.ТипПеремещения,
	            	  |	база.Номер,
	            	  |	база.Дата,
	            	  |	база.СтавкаНДС.Ставка КАК СтавкаНДС,
	            	  |	база.СуммаЗакуп,
	            	  |	база.СуммаРозн,
	            	  |	база.СуммаРознПол,
	            	  |	база.НДСЗакуп,
	            	  |	база.НДСРозн,
	            	  |	база.НДСРознПол,
	            	  |	база.ТипНOПоступления,
	            	  |	ВЫБОР
	            	  |		КОГДА база.ПартияПоставщикКонтрагентНаУСН = ИСТИНА
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК КонтрагентНаУСН
	            	  |ИЗ
	            	  |	(ВЫБРАТЬ ПЕРВЫЕ 1000000000
	            	  |		ПеремещениеТовараТовар.Ссылка.Склад.Фирма.ИНН КАК ОтправительИНН,
	            	  |		ПеремещениеТовараТовар.Ссылка.Склад.Фирма.КПП КАК ОтправительКПП,
	            	  |		ПеремещениеТовараТовар.Ссылка.Фирма.ИНН КАК ИНН,
	            	  |		ПеремещениеТовараТовар.Ссылка.Склад.Код КАК ОтправительКод,
	            	  |		ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Фирма.ИНН КАК ПолучательИНН,
	            	  |		ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Фирма.КПП КАК ПолучательКПП,
	            	  |		ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Код КАК ПолучательКод,
	            	  |		ВЫБОР
	            	  |			КОГДА ПеремещениеТовараТовар.Ссылка.Склад.Фирма = ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Фирма
	            	  |				ТОГДА 0
	            	  |			ИНАЧЕ ВЫБОР
	            	  |					КОГДА ПеремещениеТовараТовар.Ссылка.Склад.Фирма.ИНН = &ИНН
	            	  |						ТОГДА 1
	            	  |					КОГДА ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Фирма.ИНН = &ИНН
	            	  |						ТОГДА 2
	            	  |				КОНЕЦ
	            	  |		КОНЕЦ КАК ТипПеремещения,
	            	  |		ПеремещениеТовараТовар.Ссылка.Номер КАК Номер,
	            	  |		ПеремещениеТовараТовар.Ссылка.Дата КАК Дата,
	            	  |		ПеремещениеТовараТовар.СтавкаНДС КАК СтавкаНДС,
	            	  |		СУММА(ПеремещениеТовараТовар.СуммаЗакуп) КАК СуммаЗакуп,
	            	  |		СУММА(ПеремещениеТовараТовар.СуммаРозн) КАК СуммаРозн,
	            	  |		СУММА(ПеремещениеТовараТовар.СуммаРознПол) КАК СуммаРознПол,
	            	  |		СУММА(ПеремещениеТовараТовар.НДСЗакуп) КАК НДСЗакуп,
	            	  |		СУММА(ПеремещениеТовараТовар.НДСРозн) КАК НДСРозн,
	            	  |		СУММА(ПеремещениеТовараТовар.НДСРознПол) КАК НДСРознПол,
	            	  |		ПеремещениеТовараТовар.Партия.ДокументПоступления.Склад.ТипНалогообложения.Порядок КАК ТипНOПоступления,
	            	  |		ПеремещениеТовараТовар.Партия.Поставщик.КонтрагентНаУСН КАК ПартияПоставщикКонтрагентНаУСН
	            	  |	ИЗ
	            	  |		Документ.ПеремещениеТовара.Товар КАК ПеремещениеТовараТовар
	            	  |	ГДЕ
	            	  |		ПеремещениеТовараТовар.Ссылка.Фирма.ИНН = &ИНН
	            	  |		И ПеремещениеТовараТовар.Ссылка.Проведен = ИСТИНА
	            	  |		И ПеремещениеТовараТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |		И (ПеремещениеТовараТовар.Ссылка.Склад.Код = ВЫБОР
	            	  |					КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |						ТОГДА ПеремещениеТовараТовар.Ссылка.Склад.Код
	            	  |					ИНАЧЕ &КодСклада
	            	  |				КОНЕЦ
	            	  |				ИЛИ ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Код = ВЫБОР
	            	  |					КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |						ТОГДА ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Код
	            	  |					ИНАЧЕ &КодСклада
	            	  |				КОНЕЦ)
	            	  |	
	            	  |	СГРУППИРОВАТЬ ПО
	            	  |		ПеремещениеТовараТовар.Ссылка.Склад.Фирма.ИНН,
	            	  |		ПеремещениеТовараТовар.Ссылка.Склад.Фирма.КПП,
	            	  |		ПеремещениеТовараТовар.Ссылка.Фирма.ИНН,
	            	  |		ПеремещениеТовараТовар.Ссылка.Склад.Код,
	            	  |		ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Фирма.ИНН,
	            	  |		ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Фирма.КПП,
	            	  |		ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Код,
	            	  |		ВЫБОР
	            	  |			КОГДА ПеремещениеТовараТовар.Ссылка.Склад.Фирма = ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Фирма
	            	  |				ТОГДА 0
	            	  |			ИНАЧЕ ВЫБОР
	            	  |					КОГДА ПеремещениеТовараТовар.Ссылка.Склад.Фирма.ИНН = &ИНН
	            	  |						ТОГДА 1
	            	  |					КОГДА ПеремещениеТовараТовар.Ссылка.СкладПолучатель.Фирма.ИНН = &ИНН
	            	  |						ТОГДА 2
	            	  |				КОНЕЦ
	            	  |		КОНЕЦ,
	            	  |		ПеремещениеТовараТовар.Ссылка.Номер,
	            	  |		ПеремещениеТовараТовар.Ссылка.Дата,
	            	  |		ПеремещениеТовараТовар.Партия.ДокументПоступления.Склад.ТипНалогообложения.Порядок,
	            	  |		ПеремещениеТовараТовар.СтавкаНДС,
	            	  |		ПеремещениеТовараТовар.Партия.Поставщик.КонтрагентНаУСН
	            	  |	
	            	  |	УПОРЯДОЧИТЬ ПО
	            	  |		Дата,
	            	  |		Номер,
	            	  |		СтавкаНДС,
	            	  |		ТипНOПоступления) КАК база";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции	

Функция АС_Списание(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	СписаниеТовар.Ссылка.Номер КАК Номер,
	            	  |	НАЧАЛОПЕРИОДА(СписаниеТовар.Ссылка.Дата, ДЕНЬ) КАК Дата,
	            	  |	СписаниеТовар.Ссылка.Склад.Код КАК СкладКод,
	            	  |	СписаниеТовар.Ссылка.Фирма.ИНН,
	            	  |	СписаниеТовар.Партия.ВидПоступленияТовара.Порядок,
	            	  |	СписаниеТовар.СтавкаНДС.Ставка,
	            	  |	СУММА(СписаниеТовар.СуммаЗакуп) КАК СуммаЗакуп,
	            	  |	СУММА(СписаниеТовар.СуммаРозн) КАК СуммаРозн,
	            	  |	СУММА(СписаниеТовар.НДСЗакуп) КАК НДСЗакуп,
	            	  |	СУММА(СписаниеТовар.НДСРозн) КАК НДСРозн,
	            	  |	СписаниеТовар.Ссылка.ПричинаСписания.Порядок,
	            	  |	СписаниеТовар.Партия.ТипНалогообложенияПоступленияТоваров.Порядок КАК ТипНОПТ,
	            	  |	ВЫБОР
	            	  |		КОГДА СписаниеТовар.Партия.Поставщик.КонтрагентНаУСН = ИСТИНА
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ КАК КАнаУСН
	            	  |ИЗ
	            	  |	Документ.Списание.Товар КАК СписаниеТовар
	            	  |ГДЕ
	            	  |	СписаниеТовар.Ссылка.Проведен = ИСТИНА
	            	  |	И СписаниеТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	            	  |	И ПОДСТРОКА(СписаниеТовар.Ссылка.Фирма.ИНН, 1, 12) = ПОДСТРОКА(&ИНН, 1, 12)
	            	  |	И ВЫБОР
	            	  |			КОГДА &ПоВсемСкладам = ИСТИНА
	            	  |				ТОГДА &КодСклада
	            	  |			ИНАЧЕ СписаниеТовар.Ссылка.Склад.Код
	            	  |		КОНЕЦ = &КодСклада
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	СписаниеТовар.Ссылка.Номер,
	            	  |	СписаниеТовар.Ссылка.Склад.Код,
	            	  |	СписаниеТовар.Ссылка.Фирма.ИНН,
	            	  |	СписаниеТовар.СтавкаНДС.Ставка,
	            	  |	СписаниеТовар.Ссылка.ПричинаСписания.Порядок,
	            	  |	СписаниеТовар.Партия.ВидПоступленияТовара.Порядок,
	            	  |	НАЧАЛОПЕРИОДА(СписаниеТовар.Ссылка.Дата, ДЕНЬ),
	            	  |	СписаниеТовар.Партия.ТипНалогообложенияПоступленияТоваров.Порядок,
	            	  |	ВЫБОР
	            	  |		КОГДА СписаниеТовар.Партия.Поставщик.КонтрагентНаУСН = ИСТИНА
	            	  |			ТОГДА 1
	            	  |		ИНАЧЕ 0
	            	  |	КОНЕЦ
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	Дата,
	            	  |	Номер,
	            	  |	СкладКод";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_ОтчетАптекиКомиссионераОПродажах(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	|		РеализацияККМБухгалтерия.Ссылка.Номер КАК Номер,
	|		НАЧАЛОПЕРИОДА(РеализацияККМБухгалтерия.Ссылка.Дата, ДЕНЬ) КАК Дата,
	|		РеализацияККМБухгалтерия.Ссылка.Фирма.ИНН,
	|		РеализацияККМБухгалтерия.Ссылка.Фирма.КПП,
	|		РеализацияККМБухгалтерия.Поставщик.ИНН КАК ОрганизацияПоставщикИНН,
	|		РеализацияККМБухгалтерия.Поставщик.КПП КАК ОрганизацияПоставщикКПП,
	|		РеализацияККМБухгалтерия.ВидПоступленияТовара.Порядок,
	|		РеализацияККМБухгалтерия.СтавкаНДС.Ставка КАК СтавкаНДССтавка,
	|		СУММА(РеализацияККМБухгалтерия.СуммаСоСкидкой) КАК СуммаСоСкидкой,
	|		СУММА(РеализацияККМБухгалтерия.СуммаНДДСоСкидкой) КАК СуммаНДССоСкидкой,
	|		СУММА(РеализацияККМБухгалтерия.ЗакупочнаяСНДС - РеализацияККМБухгалтерия.НДСЗакуп) КАК ЗакупочнаяБезНДС,
	|		РеализацияККМБухгалтерия.Ссылка.Склад.Код  как СкладКод
	|	ИЗ
	|		Документ.РеализацияККМ.Бухгалтерия КАК РеализацияККМБухгалтерия
	|	ГДЕ
	|		РеализацияККМБухгалтерия.Поставщик.ИНН = &ТекОрганизацияИНН
	|		И РеализацияККМБухгалтерия.ВидПоступленияТовара.Порядок = 1
	|		И РеализацияККМБухгалтерия.Ссылка.Проведен = ИСТИНА
	|		И РеализацияККМБухгалтерия.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РеализацияККМБухгалтерия.Ссылка.Фирма.ИНН,
	|		РеализацияККМБухгалтерия.Ссылка.Фирма.КПП,
	|		РеализацияККМБухгалтерия.СтавкаНДС.Ставка,
	|		РеализацияККМБухгалтерия.ВидПоступленияТовара.Порядок,
	|		РеализацияККМБухгалтерия.Поставщик.ИНН,
	|		РеализацияККМБухгалтерия.Поставщик.КПП,
	|		РеализацияККМБухгалтерия.Ссылка.Номер,
	|		НАЧАЛОПЕРИОДА(РеализацияККМБухгалтерия.Ссылка.Дата, ДЕНЬ),
	|		РеализацияККМБухгалтерия.Ссылка.Склад.Код
	|	
	|	УПОРЯДОЧИТЬ ПО
	|		Дата,
	|		Номер,
	|		СтавкаНДССтавка
	|";
	
	Запрос.УстановитьПараметр("ИНН"				, ИНН);
	Запрос.УстановитьПараметр("Дата1"			, НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2"			, КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ПоВсемСкладам"	, ?(ЗначениеЗаполнено(КодСклада), Ложь, Истина));
	Запрос.УстановитьПараметр("КодСклада"		, ?(ЗначениеЗаполнено(КодСклада), КодСклада, Неопределено));
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция АС_РКО(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Возврат ""; // Запрос на выборку данных из внешней базы, максимально подготовленных к загрузке
	
КонецФункции

Функция АС_БанковскиеРеквизитыКонтрагентов(ИНН, НачПериода, КонПериода, КодСклада = "", ИННПоставщика = "") Экспорт 
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ РАЗЛИЧНЫЕ
	            	  |	БанковскиеСчета.Владелец.ИНН КАК ИНН,
	            	  |	БанковскиеСчета.Владелец.КПП КАК КПП,
	            	  |	БанковскиеСчета.Владелец.Код КАК КодКА,
	            	  |	БанковскиеСчета.Владелец.Наименование КАК ВладелецНаименование,
	            	  |	БанковскиеСчета.НомерСчета КАК НомерСчета,
	            	  |	БанковскиеСчета.Банк.Код КАК БИК,
	            	  |	БанковскиеСчета.Банк.Наименование КАК НаименованиеБанка,
	            	  |	БанковскиеСчета.Банк.КоррСчет КАК КоррСчетБанка
	            	  |ИЗ
	            	  |	Справочник.БанковскиеСчета КАК БанковскиеСчета
	            	  |ГДЕ
	            	  |	БанковскиеСчета.Владелец.ПометкаУдаления = ЛОЖЬ
	            	  |	И БанковскиеСчета.ПометкаУдаления = ЛОЖЬ
	            	  |
	            	  |УПОРЯДОЧИТЬ ПО
	            	  |	ВладелецНаименование";
	
	Результат		= Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		РезТЗ		= "";
	Иначе 
		РезТЗ		= Результат.Выгрузить();
	КонецЕсли;
	
	Возврат JSON(РезТЗ);
	
КонецФункции

Функция ЗначениеКонстанты(ИмяКонстанты) Экспорт 
	
	ЗначениеКонстанты	= Константы[ИмяКонстанты].Получить();
	Возврат СокрЛП(ЗначениеКонстанты);
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ С ПЛАНОМ ОБМЕНА

Функция ПолучитьВсеИзмененияИзПланаОбмена()
	
	УзелОбменаДокументами	= ПланыОбмена.ОбменСБухгалтерией.ЭтотУзел();
	СтруктураРезультат		= Новый Структура("Документы, Справочники, НомерСообщенияДокументы", Новый Массив(), Новый Массив());
	
	ЗаполнитьСтруктуруИзмененийДляУзла(УзелОбменаДокументами, СтруктураРезультат);
	
	Возврат СтруктураРезультат;
	
КонецФункции

Процедура ЗаполнитьСтруктуруИзмененийДляУзла(УзелПланаОбмена, СтруктураВозврата)
	
	Если НЕ ЗначениеЗаполнено(УзелПланаОбмена) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьXML		= Новый ЗаписьXML();
	ЗаписьXML.УстановитьСтроку();
	
	ЗаписьСообщения	= ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьСообщения.НачатьЗапись(ЗаписьXML, УзелПланаОбмена);
	
	СтруктураВозврата.НомерСообщенияДокументы	= ЗаписьСообщения.НомерСообщения;
	
	Выборка			= ПланыОбмена.ВыбратьИзменения(ЗаписьСообщения.Получатель, ЗаписьСообщения.НомерСообщения); 
	
	Пока Выборка.Следующий() Цикл
		
		Данные		= Выборка.Получить();
		ТипДанных	= ТипЗнч(Данные);
		
		Если (ТипДанных = Тип("ДокументОбъект.ВозвратОтПокупателя")) Или 
			 (ТипДанных = Тип("ДокументОбъект.ВозвратСКомиссии")) Или 
			 (ТипДанных = Тип("ДокументОбъект.ВозвратТовараПоставщику")) Или 
			 (ТипДанных = Тип("ДокументОбъект.Инвентаризация")) Или 
			 (ТипДанных = Тип("ДокументОбъект.ПередачаНаКомиссию")) Или 
			 (ТипДанных = Тип("ДокументОбъект.ПеремещениеТовара")) Или 
			 (ТипДанных = Тип("ДокументОбъект.Переоценка")) Или 
			 (ТипДанных = Тип("ДокументОбъект.ПоступлениеТовара")) Или 
			 (ТипДанных = Тип("ДокументОбъект.РеализацияККМ")) Или 
			 (ТипДанных = Тип("ДокументОбъект.РеализацияОптовая")) Или 
			 (ТипДанных = Тип("ДокументОбъект.РеализацияОптом")) Или 
			 (ТипДанных = Тип("ДокументОбъект.Списание")) Тогда 
			
			СтруктураВозврата.Документы.Добавить(Данные.Ссылка);
			
		ИначеЕсли (ТипДанных = Тип("СправочникОбъект.КатегорииУслуг")) Или 
				  (ТипДанных = Тип("СправочникОбъект.МестаХранения")) Или 
				  (ТипДанных = Тип("СправочникОбъект.Поставщики")) Тогда 
			
			СтруктураВозврата.Справочники.Добавить(Данные.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьРегистрациюИзмененийПланаОбмена(УзелОбменаДокументами, НомерСообщенияДокументы)
	
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелОбменаДокументами, НомерСообщенияДокументы);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПРЕОБРАЗОВАНИЯ ЗНАЧЕНИЙ ДЛЯ ПЕРЕДАЧИ ЧЕРЕЗ ВЕБ-СЕРВИС

//----формирование строки JSON---------------//

Функция Маскировать(Знач Стр)
	
	Стр = СтрЗаменить(Стр, Символы.ПС, "\n");
	Стр = СтрЗаменить(Стр, Символы.ВК, "\r");
	Стр = СтрЗаменить(Стр, """", "\""");
	Стр = СтрЗаменить(Стр, "'", "\'");
	
	Возврат Стр;
	
КонецФункции

Функция JSON(Значение) Экспорт
	
	Разделитель = "";
	
	ТипЗн = ТипЗнч(Значение);
	
	Если ТипЗн = Тип("Строка") Тогда
		
		Стр = """" + Маскировать(Значение) + """";
		
	ИначеЕсли ТипЗн = Тип("Число") ИЛИ ТипЗнч(Значение) = Тип("Булево") Тогда
		
		Стр = XMLСтрока(Значение);
		
	ИначеЕсли ТипЗн  = Тип("Дата") Тогда
		
		//Стр = """" + ?(ЗначениеЗаполнено(Значение), XMLСтрока(Значение), "") + """";
		Стр = """" + XMLСтрока(Значение) + """";
		
	ИначеЕсли ТипЗн = Тип("Структура") Тогда
		
		Стр = "{";
		
		Для Каждого Параметр Из Значение Цикл
			Стр = Стр + Разделитель + Символы.ПС + """" + Параметр.Ключ + """:" + JSON(Параметр.Значение);
			Разделитель = ",";
		КонецЦикла;
		
		Стр = Стр + Символы.ПС + "}";
		
	ИначеЕсли ТипЗн = Тип("Массив") Тогда
		
		Стр = "[";
		
		Для Каждого Элемент Из Значение Цикл
			Стр = Стр + Разделитель + Символы.ПС + JSON(Элемент);
			Разделитель = ","
		КонецЦикла;
		
		Стр = Стр + Символы.ПС + "]";
		
	ИначеЕсли ТипЗн = Тип("ТаблицаЗначений") Тогда
		
		Колонки = Значение.Колонки;
		Массив = Новый Массив;
		Для Каждого СтрокаТЗ Из Значение Цикл
			Структура = Новый Структура;
			Для Каждого Колонка Из Колонки Цикл
				Структура.Вставить(Колонка.Имя, СтрокаТЗ[Колонка.Имя]);
			КонецЦикла;
			Массив.Добавить(Структура);
		КонецЦикла;
		
		Стр = JSON(Массив);
		
	ИначеЕсли Значение = Неопределено Тогда
		
		Стр = "null";
		
	Иначе
		
		Стр = """" + Маскировать(Значение) + """";
		
	КонецЕсли;
	
	Возврат Стр;
	
КонецФункции

//-------------------------------------------//

//----разбор строки JSON---------------//

Функция Парсер(пСтрока)
	
	Возврат Новый Структура("Строка,Длина,Указатель,Символ", пСтрока, СтрДлина(пСтрока), 0, "");
   
КонецФункции

Функция ПрочитатьСимвол(пПарсер, пКоличество = 1)
	
   пПарсер.Символ = "";
   
   Если пПарсер.Указатель >= пПарсер.Длина Тогда
       Возврат Ложь;
   КонецЕсли;
   
   пПарсер.Символ = Сред(пПарсер.Строка, пПарсер.Указатель + 1, пКоличество);
   
   пПарсер.Указатель = пПарсер.Указатель + пКоличество;
   
   Возврат Истина;
   
КонецФункции

Функция ПрочитатьОбъект(пПарсер)
   
   лОбъект = Новый Структура;
   
   Для К = 1 По 1 Цикл
       Пока Истина Цикл
           Если не ПропуститьРазделители(пПарсер) Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
           Если не ТестСимвол(пПарсер,"""") Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
           ПрочитатьСимвол(пПарсер);
           лКлюч = ПрочитатьСтроку(пПарсер);
           Если не ПропуститьРазделители(пПарсер) Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
           Если не ТестСимвол(пПарсер,":") Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
           ПрочитатьСимвол(пПарсер);
           лЗначение = ПрочитатьЗначение(пПарсер);
           лОбъект.Вставить(лКлюч,лЗначение);
           Если не ПропуститьРазделители(пПарсер) Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
           Если ТестСимвол(пПарсер,",") Тогда
               ПрочитатьСимвол(пПарсер);
               Продолжить;
           КонецЕсли;
		   Если ТестСимвол(пПарсер,"}") Тогда
			   ПрочитатьСимвол(пПарсер);
               Прервать;
           КонецЕсли;
           ВызватьИсключение "Ошибка разбора";
       КонецЦикла;
       
   КонецЦикла;
   
   Возврат лОбъект;
   
КонецФункции

Функция ПрочитатьМассив(пПарсер)
   
   лМассив = Новый Массив;
   
   Для К = 1 По 1 Цикл
       Пока Истина Цикл
           лЗначение = ПрочитатьЗначение(пПарсер);
           лМассив.Добавить(лЗначение);
           Если не ПропуститьРазделители(пПарсер) Тогда
               ВызватьИсключение "Ошибка разбора";
           КонецЕсли;
		   Если ТестСимвол(пПарсер,",") Тогда
			   ПрочитатьСимвол(пПарсер);
               Продолжить;
           КонецЕсли;
		   Если ТестСимвол(пПарсер,"]") Тогда
			   ПрочитатьСимвол(пПарсер);
               Прервать;
           КонецЕсли;
           ВызватьИсключение "Ошибка разбора";
       КонецЦикла;
   КонецЦикла;
   
   Возврат лМассив;
   
КонецФункции

Функция ПрочитатьЗначение(пПарсер)
   
   Если не ПропуститьРазделители(пПарсер) Тогда;
       ВызватьИсключение "Ошибка разбора";
   КонецЕсли;
   
   Если ТестСимвол(пПарсер, "{") Тогда
       ПрочитатьСимвол(пПарсер);
       Возврат ПрочитатьОбъект(пПарсер);
   КонецЕсли;
   
   Если ТестСимвол(пПарсер, "[") Тогда
       ПрочитатьСимвол(пПарсер);
       Возврат ПрочитатьМассив(пПарсер);
   КонецЕсли;
   
   Если ТестСимвол(пПарсер, """") Тогда
       ПрочитатьСимвол(пПарсер);
	   //КАЮ(
	   //Возврат ПрочитатьСтроку(пПарсер);
	   СчитанноеЗначение	= ПрочитатьСтроку(пПарсер);
	   Если СтрДлина(СчитанноеЗначение) = 19 И Сред(СчитанноеЗначение, 11, 1) = "T" Тогда 
		   Возврат XMLЗначение(Тип("Дата"), СчитанноеЗначение);
	   Иначе 
		   Возврат СчитанноеЗначение;
	   КонецЕсли;
	   //КАЮ)
   КонецЕсли;
   
   //КАЮ(
   Если ТестСимвол(пПарсер, "123", 2) И пПарсер.Длина = 19 И Сред(пПарсер.Строка, 11, 1) = "T" Тогда 
	   Возврат ПрочитатьДату(пПарсер);
   КонецЕсли;
   //КАЮ)
   
   Если ТестСимвол(пПарсер, "1234567890+-.eE", 2) Тогда
       Возврат ПрочитатьЧисло(пПарсер);
   КонецЕсли;
   
   Если ТестСимвол(пПарсер, "true", 1) Тогда
       ПрочитатьСимвол(пПарсер, 4);
       Возврат Истина;
   КонецЕсли;
   
   Если ТестСимвол(пПарсер, "false", 1) Тогда
       ПрочитатьСимвол(пПарсер, 5);
       Возврат Ложь;
   КонецЕсли;
   
   Если ТестСимвол(пПарсер, "null", 1) Тогда
       ПрочитатьСимвол(пПарсер, 4);
       Возврат Неопределено;
   КонецЕсли;
   
   ВызватьИсключение "Ошибка разбора";
   
КонецФункции

Функция ПрочитатьДату(пПарсер)
	
   лСтр = XMLЗначение(Тип("Дата"), пПарсер.Строка);
   
   Возврат лСтр;
   
КонецФункции

Функция ПрочитатьСтроку(пПарсер)
	
   лСтр = "";
   
   Пока пПарсер.Символ <> """" Цикл
       лСтр = лСтр + пПарсер.Символ;
       Если пПарсер.Символ = "\" Тогда
           Если не ПрочитатьСимвол(пПарсер) Тогда
               Прервать;
           КонецЕсли;
           Если пПарсер.Символ = "n" Тогда
               лСтр = лСтр + Символы.ПС;
           ИначеЕсли пПарсер.Символ = "r" Тогда
               лСтр = лСтр + Символы.ВК;
           ИначеЕсли пПарсер.Символ = """" Тогда
               лСтр = лСтр + """";
           ИначеЕсли пПарсер.Символ = "'" Тогда
               лСтр = лСтр + "'";
           Иначе
           КонецЕсли;
       КонецЕсли;
       Если не ПрочитатьСимвол(пПарсер) Тогда
           Прервать;
       КонецЕсли;
   КонецЦикла;
   
   ПрочитатьСимвол(пПарсер);
   
   Возврат лСтр;
   
КонецФункции

Функция ПрочитатьЧисло(пПарсер)
	
   лЦифрыСтр = "+-1234567890.eE";
   лЧислоСтр = "0";
   
   Пока Найти(лЦифрыСтр,пПарсер.Символ) > 0 Цикл
	   лЧислоСтр = лЧислоСтр + пПарсер.Символ;
	   Если не ПрочитатьСимвол(пПарсер) Тогда
           Прервать;
       КонецЕсли;
   КонецЦикла;
   
   Попытка
   	Возврат Число(лЧислоСтр);
   Исключение
	Возврат	Число(Прав(лЧислоСтр, СтрДлина(лЧислоСтр) - 1));
   КонецПопытки;
   
КонецФункции

Функция ПропуститьРазделители(пПарсер)
	
   лРазделителиСтр = " " + Символы.ВК + Символы.ВТаб + Символы.НПП + Символы.ПС + Символы.ПФ + Символы.Таб;
   Пока Найти(лРазделителиСтр,пПарсер.Символ) > 0 Цикл
       Если не ПрочитатьСимвол(пПарсер) Тогда
           Возврат Ложь;
       КонецЕсли;
   КонецЦикла;
   
   Возврат Истина;
   
КонецФункции

Функция ТестСимвол( пПарсер, пСимвол, пРежим = 1)
	
   // проверяет, начинается ли строка с указанной подстроки
   // Режим:
   // 0 - без учета регистра
   // 1 - с учетом регистра
   // 2 - входжение первого символа в подстроку
   
   Если пРежим = 0 Тогда
       лДлина = СтрДлина(пСимвол);
       лНачалоСтроки = Сред(пПарсер.Строка, пПарсер.Указатель, лДлина);
       Возврат (ВРег(лНачалоСтроки) = ВРег(пСимвол));
   ИначеЕсли пРежим = 1 Тогда
       лДлина = СтрДлина(пСимвол);
       лНачалоСтроки = Сред(пПарсер.Строка, пПарсер.Указатель, лДлина);
       Возврат (лНачалоСтроки = пСимвол);
   ИначеЕсли пРежим = 2 Тогда
       лНачалоСтроки = Сред(пПарсер.Строка, пПарсер.Указатель,1);
       Возврат (Найти(пСимвол, лНачалоСтроки) > 0);
   КонецЕсли;
   
КонецФункции

Функция UnJSON(СтрокаЗначение, ЗаменитьКавычки = Ложь) Экспорт
   
   лСтрока = СтрокаЗначение;
   Если ЗаменитьКавычки Тогда
       лСтрока = СтрЗаменить(СтрокаЗначение, "'", """");
   КонецЕсли;
   
   Попытка
       лПарсер = Парсер(лСтрока);
       ПрочитатьСимвол(лПарсер);
       лЗначение = ПрочитатьЗначение(лПарсер);	   
   Исключение
	   Сообщить("Ошибка разбора JSON: 
	   |" + ОписаниеОшибки());
       Возврат Неопределено;
   КонецПопытки;
   
   Возврат лЗначение;
   
КонецФункции

//-------------------------------------------//

Функция ОставитьТолькоЦифрыВСтроке(Строка) Экспорт
	
	СтрокаЦифр = "0123456789";
	
	ДлинаСтроки = СтрДлина(Строка);
	
	Для инд = 1 по ДлинаСтроки Цикл
		
		ТекСимвол = Сред(Строка, Инд, 1);
		
		Если Найти(СтрокаЦифр, ТекСимвол) = 0 Тогда
			
			Строка = СтрЗаменить(Строка, ТекСимвол, "-");
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтрЗаменить(Строка, "-", "");
	
КонецФункции

Функция ПреобразоватьСтрокуВДату(СтрокаДата, РазделительМеждуДатойИВременем = " ", РезделительВДате = "-", РазделительВоВремени = ":") Экспорт
	
	МассивПодстрок = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СтрокаДата, РазделительМеждуДатойИВременем);
	
	Если МассивПодстрок.Количество() > 1 Тогда
		
		МассивДата = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(МассивПодстрок[0], РезделительВДате);
		МассивВремя = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(МассивПодстрок[1], РазделительВоВремени);
		
		Если (МассивДата.Количество() > 2) И (МассивВремя.Количество() > 2) Тогда
			
			Попытка
				Возврат Дата(МассивДата[2], МассивДата[1], МассивДата[0], МассивВремя[0], МассивВремя[1], МассивВремя[2]);
			Исключение
				Возврат "error: Не корректная дата: {" + СокрЛП(СтрокаДата) + "}";
			КонецПопытки;
			
		Иначе
			
			Возврат "error: Не корректная дата: {" + СокрЛП(СтрокаДата) + "}";
			
		КонецЕсли;
		
	Иначе
		
		Возврат "error: Не корректная дата: {" + СокрЛП(СтрокаДата) + "}";
		
	КонецЕсли;
	
КонецФункции
