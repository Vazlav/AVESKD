#If Client Then
Процедура ОМСС_ПоказатьВБраузере(АдресНаСайте) Экспорт
	Попытка
		если пустаястрока(АдресНаСайте)=Ложь тогда
			Браузер=Обработки.ПросмотрХТМЛСтраницы.Создать();
			Браузер.ХТМЛКод=АдресНаСайте;
			ФБраузера=Браузер.ПолучитьФорму("Форма");
			ФБраузера.Открыть();
		Иначе
			Предупреждение("Не указан адрес",2);
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры
#EndIf


Функция ОМСС_ПолучитьНомерЗаказа(ТипИсточника) Экспорт
	
	НачатьТранзакцию(); // для того чтобы другие пользователи не моглми влезть поперед батьки и испоганить новый сгенеренный номер
	                    // В запросе блокируется регистр сведений , без транзакции не сработает
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	НумераторыИнтернетЗаказов.ТипИсточника КАК ТипИсточника,
	                    |	МАКСИМУМ(НумераторыИнтернетЗаказов.Номер) КАК Номер
	                    |ИЗ
	                    |	РегистрСведений.НумераторыИнтернетЗаказов КАК НумераторыИнтернетЗаказов
	                    |ГДЕ
	                    |	НумераторыИнтернетЗаказов.ТипИсточника = &ТипИсточника
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	НумераторыИнтернетЗаказов.ТипИсточника
	                    |
	                    |ДЛЯ ИЗМЕНЕНИЯ
	                    |	РегистрСведений.НумераторыИнтернетЗаказов");
	
	Запрос.УстановитьПараметр("ТипИсточника",ТипИсточника);
	
	Рез=Запрос.Выполнить().Выгрузить();
	Если Рез.Количество()=0 Тогда
		Номер=0;
	Иначе
		Номер=Рез.Получить(0).номер;
	КонецЕсли;
	
	Номер=Номер+1;
	
	МенЗап=РегистрыСведений.НумераторыИнтернетЗаказов.СоздатьНаборЗаписей();
	МенЗап.Отбор.Найти("ТипИсточника").Установить(ТипИсточника,Истина);
    МенЗап.Прочитать();
	МенЗап.Очистить();
	
	Запись=МенЗап.Добавить();
	
	Запись.ТипИсточника=ТипИсточника;
	Запись.Номер=Номер;
	МенЗап.Записать();
	
	
	ЗафиксироватьТранзакцию(); // освобождаем блокировку
	
	Возврат Номер;
КонецФункции	

Функция ОМСС_ОнЛайнЗонаАптеки(Аптека) Экспорт
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	МестаХранения.Ссылка КАК онлайнзона
						|ИЗ
	                    |	Справочник.МестаХранения КАК МестаХранения
	                    |ГДЕ
	                    |	МестаХранения.ОффлайнАпетка = &Аптека");
						
	Запрос.УстановитьПараметр("Аптека",Аптека);
	
	Рез=ЗАпрос.Выполнить().Выгрузить();
	
	Если Рез.Количество()=0 Тогда
		#Если Клиент Тогда
			Сообщить("У аптеки "+Аптека+" нет онлайн-зоны!");
		#КонецЕсли
		Возврат неопределено;
	Иначе
		Возврат Рез.Получить(0).Онлайнзона;
	КонецЕсли;	
Конецфункции


Функция ОМСС_ВыборКлиентаПоНомеруТелефона(Телефон) Экспорт
	 // Возвращает списокзначений кодов клиентов, 
	 // предположительно подхлдящих под 
	 // условие выборки по огрызку телефонного номера
	 //или Неопределено
	 //------------------------------------------------------------------------
	 // Далее этот массив кодов используется 
	 // при открытии формы справочника клиентов в качестве фильтра по кодам
	 //---------------<---------------------------->---------------------------// GtG // 09.10.2012 18:47:19
	 
	Запрос=Новый Запрос("ВЫБРАТЬ
	                     |	КлиентыИнтернетАптеки.Код КАК Код,
	                     |	КлиентыИнтернетАптеки.Наименование КАК ФИО,
	                     |	КлиентыИнтернетАптеки.Телефон КАК Телефон
	                     |ИЗ
	                     |	Справочник.КлиентыИнтернетАптеки КАК КлиентыИнтернетАптеки
	                     |ГДЕ
	                     |	КлиентыИнтернетАптеки.Телефон ПОДОБНО &Телефон
	                     |
	                     |УПОРЯДОЧИТЬ ПО
	                     |	Телефон,
	                     |	Код");
	ТелДляПоиска=СтрЗаменить(СокрЛП(Телефон),"-","%");
	ТелДляПоиска=СтрЗаменить(СокрЛП(ТелДляПоиска)," ","%");
	
	Пока Найти(ТелДляПоиска,"%%")<>0 Цикл
		ТелДляПоиска=СтрЗаменить(ТелДляПоиска,"%%","%");
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Телефон",ТелДляПоиска);
	Рез=Запрос.Выполнить().Выгрузить();
	
	Если Рез.Количество()<>0 Тогда
		МассивКодовКлиентов=Рез.ВыгрузитьКолонку("Код");
		СЗ=Новый СписокЗначений;
		СЗ.ЗагрузитьЗначения(МассивКодовКлиентов);
        Возврат СЗ;
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
		
	
КонецФункции	

#Если Клиент Тогда
Функция ОМСС_БлокировкаСАрифметическойЗадачкой(БлокируемоеДействие) Экспорт
	Х=0;
	ГСЧ=Новый ГенераторСлучайныхЧисел();
	
	Задачка="Сколько будет ";
	Для Ы =1 по 3 Цикл
		Ч=ГСЧ.СлучайноеЧисло(0,10);
		Задачка=Задачка+" "+Ч+"+";
		Х=Х+Ч;
	Конеццикла;	
	
	ГСЧ=Новый ГенераторСлучайныхЧисел();
	Ч=ГСЧ.СлучайноеЧисло(0,7);
	Задачка=Задачка+" "+Ч+" = ?";
	Х=Х+Ч;
	
	ПравильныйОтвет=Х;
	
	СписокОтветов=Новый СписокЗначений;
	Ы=0;
	Пока Ы<= 2 Цикл
		Ч=ГСЧ.СлучайноеЧисло(0,5);
		КривойОтвет=Х-Ч;
		Если СписокОтветов.НайтиПоЗначению(КривойОтвет)<> неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		Если КривойОтвет<>ПравильныйОтвет Тогда
			СписокОтветов.Добавить(КривойОтвет);
			Ы=Ы+1;
		КонецЕсли;	
	КонецЦикла;	
	
	Ч=ГСЧ.СлучайноеЧисло(0,2);
	СписокОтветов.Вставить(Ч,ПравильныйОтвет);
	СписокОтветов.Добавить(КодвозвратаДиалога.Отмена);
	
	Ответ=Вопрос("Чтобы "+БлокируемоеДействие+", решите задачку:"+символы.пс+Задачка, СписокОтветов, 0, ,"Решите задачку", );
	Если Ответ <>ПравильныйОтвет тогда
		Предупреждение ("Не угадал!");
	КонецЕсли;	
	
	Если Ответ=КодвозвратаДиалога.Отмена или Ответ<>ПравильныйОтвет Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;	
	
КонецФункции
#КонецЕсли

Процедура ОМСС_ОчисткаРезерваПодбораПоАптеке(ПоАптеке) Экспорт
	
	Если ПоАптеке.Пустая() Тогда
		#If Client Then
		ПРедупреждение("Не выбрана аптека по которой чистить резерв подбора!");
		#EndIf
		Возврат;
	КонецЕсли;	
	
	
	//---------------<Защита от случайного запуска.>---------------------------// GtG // 15.10.2012 17:11:49
	
	Если ОМ_СправочнаяСлужба.ОМСС_БлокировкаСАрифметическойЗадачкой(" очистить резерв подбора ")=Ложь ТОгда
		#If Client Then
		Предупреждение("Задачка не решена, резерв подбора не очищен!");
		#EndIf
		Возврат;
	КонецЕсли;
	//---------------<>---------------------------// GtG // 15.10.2012 17:11:53
	
	//--------- ОПАСНО!!!  ПОЛНАЯ ОЧИСТКА РЕГИСТРА СВЕДЕНИЙ!!! --------------------//
	РС=РегистрыСведений.РезервПодбора.СоздатьНаборЗаписей();
	ОтборПоСкладу=РС.Отбор.Найти("Склад");
	ОтборПоСкладу.Установить(ПоАптеке,Истина);
	
	РС.Прочитать();
	РС.Очистить();
	РС.Записать();
	//--------- ОПАСНО!!! ОПАСНО!!! ОПАСНО!!! ОПАСНО!!! ОПАСНО!!! --------------------//
	#If Client Then
	Предупреждение("Резерв подбора по "+ПоАптеке+" ОЧИЩЕН!");
	#EndIf

КонецПроцедуры 	


Процедура ОМСС_ОтформатироватьТАбличноеПоле(Таб) ЭКСПОРТ
	
	// Минимальная разумная ширина 5
	МаксДлинаЗначенийВКолонках=Новый Структура;
	Для Каждого Кол Из Таб.Колонки Цикл
		 МаксДлинаЗначенийВКолонках.Вставить(Кол.Имя,5);
	КонецЦикла;	
	
	Для Каждого Стр Из Таб.Значение Цикл
		Для Каждого ЭлемМаксДлины из МаксДлинаЗначенийВКолонках Цикл
			ДлинаЗначенияЯчейкиТЗ=СтрДлина(СокрЛП(Стр[ЭлемМаксДлины.Ключ]));
			Если ДлинаЗначенияЯчейкиТЗ>75 Тогда
					ДлинаЗначенияЯчейкиТЗ=75;
			КонецЕсли;	
				
			Если ДлинаЗначенияЯчейкиТЗ+5>ЭлемМаксДлины.Значение ТОгда
				МаксДлинаЗначенийВКолонках[ЭлемМаксДлины.Ключ]=ДлинаЗначенияЯчейкиТЗ+5;
			КонецЕсли;
			
	    КонецЦикла;
	КонецЦикла;
	
	Для Каждого ЭлемМаксДлины из МаксДлинаЗначенийВКолонках Цикл
		Таб.Колонки.Найти(ЭлемМаксДлины.Ключ).Ширина=ЭлемМаксДлины.Значение;
	КонецЦикла;
КонецПроцедуры	

Функция ОМСС_ПолучитьНомерБрони() Экспорт
	
	МЗ=РегистрыСведений.НомерБрони.СоздатьМенеджерЗаписи();
	МЗ.Прочитать();
	МЗ.НомерБрони=МЗ.НомерБрони+1;
	МЗ.Записать();
	
	Возврат МЗ.НомерБрони;
	
	
	
КонецФункции
