Процедура ОтправитьПисьмоОбОтменеЗакрытияТовараВПути(СуммыЗакрытияТовараВПути)  Экспорт
	
	
		МПочтец= Обработки.Почтарь;
		Почтец=МПочтец.Создать();
		Почтец.СписокВложений.Очистить();
		Почтец.Рассылка.Очистить();
		Почтец.Автоотправка=ИСТИНА;
		//Почтец.Рассылка.Добавить("sanakoev@mail.ru");
		Почтец.Рассылка.Добавить("a.klodt@ave-apteka.ru");
		Почтец.Рассылка.Добавить("a.vasilchenko@id-soft.ru"); 
		Почтец.Рассылка.Добавить("n.panaeva@ave-apteka.ru");
		
		
		
		Почтец.Тема="!!! АВТОЗАКАЗ: Уведомление об отмене закрытия товара в пути !!!";
		
		Почтец.ТекстПисьма="	----------------=========== ВНИМАНИЕ ===========-----------------------------------
		|   
		|	Доброго утро, коллеги!
		|	
		|	В связи с превышением суммы лимита закрытия заказов не произошло закрытие товара в пути по следующим поставщикам : 
		|   
		|	-----------------------------------------------------------------------------------
		|	| Поставщик  ===  Лимит закрытия заказа  ====  Сумма закрытия   
		|";
		
		Для каждого Стр из СуммыЗакрытияТовараВПути Цикл
			Т = "	| "+ стр.Поставщик + "  ===  "  + стр.ЛимитЗакрытияЗаказов  + "  ===  "  + стр.СуммаЗакрытия ;
			Почтец.ТекстПисьма=Почтец.ТекстПисьма + Т + Символы.ПС;
		КонецЦикла;	
		
		Почтец.ТекстПисьма=Почтец.ТекстПисьма+"	|
		|	-----------------------------------------------------------------------------------
		|	С уважением,
		|	Ваш Автозаказ";
		
		Почтец.функция_Послать();
	
КонецПроцедуры

Функция ПолучитьСуммыЗакрытияТоваровВПути(ДатаЗакрытия,СписокАптек) Экспорт
	
	 ТХТ = "ВЫБРАТЬ
	       |	ИсторияЗакупочнойЦены.Товар,
	       |	СРЕДНЕЕ(ИсторияЗакупочнойЦены.Цена) КАК Цена
	       |ПОМЕСТИТЬ СредниеЦены
	       |ИЗ
	       |	РегистрСведений.ИсторияЗакупочнойЦены КАК ИсторияЗакупочнойЦены
	       |ГДЕ
	       |	ИсторияЗакупочнойЦены.Период >= &Период
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	ИсторияЗакупочнойЦены.Товар
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	ЗаказПоставщикуОстатки.Поставщик КАК Поставщик,
//	       |	КОЛИЧЕСТВО(ЗаказПоставщикуОстатки.Товар) КАК Товар,
	       |	СУММА(ЗаказПоставщикуОстатки.КоличествоОстаток * ЕСТЬNULL(СредниеЦены.Цена, 0)) КАК СуммаЗакрытия
	       |ПОМЕСТИТЬ ТЗСуммаЗакрытия
	       |ИЗ
	       |	РегистрНакопления.ЗаказПоставщику.Остатки(&Дата, Склад.ПометкаУдаления = ЛОЖЬ И Склад.СторонаДоговораКомиссии = ЗНАЧЕНИЕ(Перечисление.СтороныДоговораКомиссии.Нет)) КАК ЗаказПоставщикуОстатки
	       |		ЛЕВОЕ СОЕДИНЕНИЕ СредниеЦены КАК СредниеЦены
	       |		ПО (СредниеЦены.Товар = ЗаказПоставщикуОстатки.Товар)
		   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки ПО КонтрактыИАптеки.Аптека = ЗаказПоставщикуОстатки.Склад
		   |		и КонтрактыИАптеки.Владелец.Владелец.Ссылка = ЗаказПоставщикуОстатки.Поставщик
		   |				 И КонтрактыИАптеки.Активность = ИСТИНА И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
	       |ГДЕ
//	       |	РАЗНОСТЬДАТ(ЗаказПоставщикуОстатки.ДатаЗаказа, &Дата, ДЕНЬ) > ЗаказПоставщикуОстатки.Поставщик.КоличествоДнейДоставки + (ВЫРАЗИТЬ((ДЕНЬНЕДЕЛИ(ЗаказПоставщикуОстатки.ДатаЗаказа) + ЗаказПоставщикуОстатки.Поставщик.КоличествоДнейДоставки) / 7 - 0.5 КАК ЧИСЛО(10, 0)))
	       |    РАЗНОСТЬДАТ(ЗаказПоставщикуОстатки.ДатаЗаказа, &Дата, ДЕНЬ) > 
	       |	(Выбор Когда ЕСТЬNULL(КонтрактыИАптеки.КоличествоДнейДоставки,0)>0 Тогда КонтрактыИАптеки.КоличествоДнейДоставки
	       |		Иначе ЗаказПоставщикуОстатки.Поставщик.КоличествоДнейДоставки Конец)
	       |			+ (ВЫРАЗИТЬ((ДЕНЬНЕДЕЛИ(ЗаказПоставщикуОстатки.ДатаЗаказа) + 
	       |		(Выбор Когда ЕСТЬNULL(КонтрактыИАптеки.КоличествоДнейДоставки,0)>0 Тогда КонтрактыИАптеки.КоличествоДнейДоставки
	       |			Иначе ЗаказПоставщикуОстатки.Поставщик.КоличествоДнейДоставки Конец)
	       |	) / 7 - 0.5 КАК ЧИСЛО(10, 0)))
	       |СГРУППИРОВАТЬ ПО
	       |	ЗаказПоставщикуОстатки.Поставщик
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	ТЗСуммаЗакрытия.Поставщик,
	       |	ВЫРАЗИТЬ(ТЗСуммаЗакрытия.СуммаЗакрытия КАК ЧИСЛО(15, 2)) КАК СуммаЗакрытия,
	       |	ТЗСуммаЗакрытия.Поставщик.ЛимитЗакрытияЗаказов  как ЛимитЗакрытияЗаказов
	       |ИЗ
	       |	ТЗСуммаЗакрытия КАК ТЗСуммаЗакрытия
	       |ГДЕ
	       |	ТЗСуммаЗакрытия.Поставщик.ЛимитЗакрытияЗаказов > 0
	       |	И ТЗСуммаЗакрытия.Поставщик.ЛимитЗакрытияЗаказов < ТЗСуммаЗакрытия.СуммаЗакрытия
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |УНИЧТОЖИТЬ СредниеЦены
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |УНИЧТОЖИТЬ ТЗСуммаЗакрытия";
	 
		   Запрос = Новый Запрос;
		   Запрос.Текст = ТХТ;
		   Запрос.УстановитьПараметр("Период",НачалоДня(ДатаЗакрытия)-60*60*24*10);
		   Запрос.УстановитьПараметр("Дата",ДатаЗакрытия);
		   Запрос.УстановитьПараметр("СписокАптек",СписокАптек);
		   Рез = Запрос.Выполнить();
		   Если Рез.Пустой() Тогда
			   Возврат Неопределено;
		   Иначе
			   Возврат Рез.Выгрузить();
		   КонецЕсли;
		   
	
КонецФункции

Процедура ЗакрытьТоварыВПути(Склад,ДатаЗакрытия,СуммыЗакрытияТовараВПути=Неопределено) 
	
	Если Константы.НеЗакрыватьТоварВПути.Получить() = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если СуммыЗакрытияТовараВПути = Неопределено Тогда
		
		Если Склад.ИнтернетАптека = Истина Тогда
			ТХТ = "ВЫБРАТЬ
			|	ЗаказПоставщикуОстатки.Поставщик как Поставщик,
			|	ЗаказПоставщикуОстатки.Товар как Товар,
			|	ЗаказПоставщикуОстатки.ДатаЗаказа как ДатаЗаказа,
			|	ЗаказПоставщикуОстатки.КоличествоОстаток как Количество,
			|	РАЗНОСТЬДАТ(ЗаказПоставщикуОстатки.ДатаЗаказа, &Дата, ДЕНЬ) КАК разностьдат
			|ИЗ
			|	РегистрНакопления.ЗаказПоставщику.Остатки(&Дата, Склад = &Склад) КАК ЗаказПоставщикуОстатки
			|ГДЕ
			|	РАЗНОСТЬДАТ(ЗаказПоставщикуОстатки.ДатаЗаказа, &Дата, ДЕНЬ) > ЗаказПоставщикуОстатки.Поставщик.КоличествоДнейДоставкиИА + Выразить((ДЕНЬНЕДЕЛИ(ЗаказПоставщикуОстатки.ДатаЗаказа)+ЗаказПоставщикуОстатки.Поставщик.КоличествоДнейДоставкиИА)/7 - 0.5 как Число(10,0))
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЗаказПоставщикуОстатки.Поставщик.Наименование,
			| ЗаказПоставщикуОстатки.Товар.Наименование";	
			
		Иначе
			
			ТХТ = "ВЫБРАТЬ
			      |	Поставщики.Ссылка КАК Поставщик,
		//ENT-1199|	ЕСТЬNULL(_ДниДоставки.ДнейДоставки, Поставщики.КоличествоДнейДоставки) КАК КоличествоДнейДоставки
				  |	(Выбор Когда ЕСТЬNULL(КонтрактыИАптеки.КоличествоДнейДоставки,0) > 0 Тогда КонтрактыИАптеки.КоличествоДнейДоставки
				  |		Иначе ЕСТЬNULL(_ДниДоставки.ДнейДоставки, Поставщики.КоличествоДнейДоставки) Конец) КАК КоличествоДнейДоставки
			      |ПОМЕСТИТЬ ВТДниДоставки
			      |ИЗ
			      |	Справочник.Поставщики КАК Поставщики
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Поставщики.ДниДоставки КАК _ДниДоставки
			      |		ПО (_ДниДоставки.Ссылка = Поставщики.Ссылка)
			      |			И (_ДниДоставки.СубъектРФ = &СубъектРФ)
				  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки ПО КонтрактыИАптеки.Аптека = &Склад
				  |			и КонтрактыИАптеки.Владелец.Владелец.Ссылка = Поставщики.Ссылка
				  |				 И КонтрактыИАптеки.Активность = ИСТИНА И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
			      |ГДЕ
				  |	Поставщики.КоличествоДнейДоставки > 0
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ЗаказПоставщикуОстатки.Поставщик КАК Поставщик,
			      |	ЗаказПоставщикуОстатки.Товар КАК Товар,
			      |	ЗаказПоставщикуОстатки.ДатаЗаказа КАК ДатаЗаказа,
			      |	ЗаказПоставщикуОстатки.КоличествоОстаток КАК Количество,
			      |	РАЗНОСТЬДАТ(ЗаказПоставщикуОстатки.ДатаЗаказа, &Дата, ДЕНЬ) КАК разностьдат
			      |ИЗ
			      |	РегистрНакопления.ЗаказПоставщику.Остатки(&Дата, Склад = &Склад) КАК ЗаказПоставщикуОстатки
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТДниДоставки КАК ВТДниДоставки
			      |		ПО (ВТДниДоставки.Поставщик = ЗаказПоставщикуОстатки.Поставщик)
			      |ГДЕ
			      |	РАЗНОСТЬДАТ(ЗаказПоставщикуОстатки.ДатаЗаказа, &Дата, ДЕНЬ) > ЕСТЬNULL(ВТДниДоставки.КоличествоДнейДоставки, 0) + ВЫБОР
			      |			КОГДА ЗаказПоставщикуОстатки.Поставщик.ПрибавлятьВыходныеКДнямДоставки = ИСТИНА
			      |				ТОГДА ВЫРАЗИТЬ((ДЕНЬНЕДЕЛИ(ЗаказПоставщикуОстатки.ДатаЗаказа) + ЕСТЬNULL(ВТДниДоставки.КоличествоДнейДоставки, 0)) / 7 - 0.5 КАК ЧИСЛО(10, 0))
			      |			ИНАЧЕ 0
			      |		КОНЕЦ
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	ЗаказПоставщикуОстатки.Поставщик.Наименование,
			      |	ЗаказПоставщикуОстатки.Товар.Наименование
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТДниДоставки";
			
		КонецЕсли;	
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Склад",Склад);
		Запрос.УстановитьПараметр("СубъектРФ",Склад.СубъектРФ);
		Запрос.УстановитьПараметр("Дата",ДатаЗакрытия);
	Иначе
		Если Склад.ИнтернетАптека = Истина Тогда
			ТХТ = "ВЫБРАТЬ
			|	ЗаказПоставщикуОстатки.Поставщик как Поставщик,
			|	ЗаказПоставщикуОстатки.Товар как Товар,
			|	ЗаказПоставщикуОстатки.ДатаЗаказа как ДатаЗаказа,
			|	ЗаказПоставщикуОстатки.КоличествоОстаток как Количество,
			|	РАЗНОСТЬДАТ(ЗаказПоставщикуОстатки.ДатаЗаказа, &Дата, ДЕНЬ) КАК разностьдат
			|ИЗ
			|	РегистрНакопления.ЗаказПоставщику.Остатки(&Дата, Склад = &Склад и НЕ Поставщик в (&СписокПоставщиков)) КАК ЗаказПоставщикуОстатки
			|ГДЕ
			|	РАЗНОСТЬДАТ(ЗаказПоставщикуОстатки.ДатаЗаказа, &Дата, ДЕНЬ) > ЗаказПоставщикуОстатки.Поставщик.КоличествоДнейДоставкиИА + Выразить((ДЕНЬНЕДЕЛИ(ЗаказПоставщикуОстатки.ДатаЗаказа)+ЗаказПоставщикуОстатки.Поставщик.КоличествоДнейДоставкиИА)/7 - 0.5 как Число(10,0))
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЗаказПоставщикуОстатки.Поставщик.Наименование,
			| ЗаказПоставщикуОстатки.Товар.Наименование";	
		Иначе
			ТХТ = "ВЫБРАТЬ
			      |	Поставщики.Ссылка КАК Поставщик,
		//ENT-1199|	ЕСТЬNULL(_ДниДоставки.ДнейДоставки, Поставщики.КоличествоДнейДоставки) КАК КоличествоДнейДоставки
				  |	(Выбор Когда ЕСТЬNULL(КонтрактыИАптеки.КоличествоДнейДоставки,0) > 0 Тогда КонтрактыИАптеки.КоличествоДнейДоставки
				  |		Иначе ЕСТЬNULL(_ДниДоставки.ДнейДоставки, Поставщики.КоличествоДнейДоставки) Конец) КАК КоличествоДнейДоставки
			      |ПОМЕСТИТЬ ВТДниДоставки
			      |ИЗ
			      |	Справочник.Поставщики КАК Поставщики
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Поставщики.ДниДоставки КАК _ДниДоставки
			      |		ПО (_ДниДоставки.Ссылка = Поставщики.Ссылка)
			      |			И (_ДниДоставки.СубъектРФ = &СубъектРФ)
				  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки ПО КонтрактыИАптеки.Аптека = &Склад
				  |			и КонтрактыИАптеки.Владелец.Владелец.Ссылка = Поставщики.Ссылка
				  |				 И КонтрактыИАптеки.Активность = ИСТИНА И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
			      |ГДЕ
				  |	Поставщики.КоличествоДнейДоставки > 0
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ЗаказПоставщикуОстатки.Поставщик КАК Поставщик,
			      |	ЗаказПоставщикуОстатки.Товар КАК Товар,
			      |	ЗаказПоставщикуОстатки.ДатаЗаказа КАК ДатаЗаказа,
			      |	ЗаказПоставщикуОстатки.КоличествоОстаток КАК Количество,
			      |	РАЗНОСТЬДАТ(ЗаказПоставщикуОстатки.ДатаЗаказа, &Дата, ДЕНЬ) КАК разностьдат
			      |ИЗ
			      |	РегистрНакопления.ЗаказПоставщику.Остатки(
			      |			&Дата,
			      |			Склад = &Склад
			      |				И НЕ Поставщик В (&СписокПоставщиков)) КАК ЗаказПоставщикуОстатки
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТДниДоставки КАК ВТДниДоставки
			      |		ПО (ВТДниДоставки.Поставщик = ЗаказПоставщикуОстатки.Поставщик)
			      |ГДЕ
			      |	РАЗНОСТЬДАТ(ЗаказПоставщикуОстатки.ДатаЗаказа, &Дата, ДЕНЬ) > ЕСТЬNULL(ВТДниДоставки.КоличествоДнейДоставки, 0) + ВЫБОР
			      |			КОГДА ЗаказПоставщикуОстатки.Поставщик.ПрибавлятьВыходныеКДнямДоставки = ИСТИНА
			      |				ТОГДА ВЫРАЗИТЬ((ДЕНЬНЕДЕЛИ(ЗаказПоставщикуОстатки.ДатаЗаказа) + ЕСТЬNULL(ВТДниДоставки.КоличествоДнейДоставки, 0)) / 7 - 0.5 КАК ЧИСЛО(10, 0))
			      |			ИНАЧЕ 0
			      |		КОНЕЦ
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	ЗаказПоставщикуОстатки.Поставщик.Наименование,
			      |	ЗаказПоставщикуОстатки.Товар.Наименование
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТДниДоставки";				  
		КонецЕсли;
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Склад",Склад);
		Запрос.УстановитьПараметр("СубъектРФ",Склад.СубъектРФ);		
		Запрос.УстановитьПараметр("Дата",ДатаЗакрытия);	
		Запрос.УстановитьПараметр("СписокПоставщиков",СуммыЗакрытияТовараВПути.ВыгрузитьКолонку("Поставщик"));
		
	КонецЕсли;

	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Если ТЗ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Док = Документы.ЗакрытиеЗаказов.СоздатьДокумент();
	Док.Дата = ДатаЗакрытия;
	Док.Склад = Склад;
	Док.ТипЗакрытияЗаказа = Перечисления.ТипыЗакрытияЗаказа.ИстечениеСрокаПоставки;
	Док.РегистрЗакрытияЗаказа = Перечисления.РегистрЗакрытияЗаказа.ЗаказПоставщику;
	Док.Товар.Загрузить(ТЗ);
	Записан = Ложь;
	Для н=1 по 5 Цикл
		Попытка 
			Док.Записать(РежимЗаписиДокумента.Проведение);
			Записан = Истина;
		Исключение
			//Предупреждение("Ждем-с , пока пройдет блокировка",3);
			Записан = Ложь;
		КонецПопытки;
	КонецЦикла;
	
	
	ТХТ = "ВЫБРАТЬ
	      |	ИндивидуальныеЗаказы.Поставщик КАК Поставщик,
	      |	ИндивидуальныеЗаказы.Товар КАК Товар,
	      |	ИндивидуальныеЗаказы.ДатаЗаказа КАК ДатаЗаказа,
	      |	ИндивидуальныеЗаказы.КоличествоОстаток КАК Количество,
	      |	РАЗНОСТЬДАТ(ИндивидуальныеЗаказы.ДатаЗаказа, &Дата, ДЕНЬ) КАК разностьдат,
	      |	ИндивидуальныеЗаказы.ЦенаРозн
	      |ИЗ
	      |	РегистрНакопления.ИндивидуальныеЗаказы.Остатки(&Дата, Склад = &Склад) КАК ИндивидуальныеЗаказы
		  |		  ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки ПО КонтрактыИАптеки.Аптека = &Склад
		  |				 И КонтрактыИАптеки.Владелец.Владелец.Ссылка = ИндивидуальныеЗаказы.Поставщик
		  |				 И КонтрактыИАптеки.Активность = ИСТИНА И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
		  |
	      |ГДЕ
//ENT-1199|	РАЗНОСТЬДАТ(ИндивидуальныеЗаказы.ДатаЗаказа, &Дата, ДЕНЬ) > ИндивидуальныеЗаказы.Поставщик.КоличествоДнейДоставки
		  | РАЗНОСТЬДАТ(ИндивидуальныеЗаказы.ДатаЗаказа, &Дата, ДЕНЬ) >
		  | (Выбор Когда ЕСТЬNULL(КонтрактыИАптеки.КоличествоДнейДоставки,0) > 0 Тогда КонтрактыИАптеки.КоличествоДнейДоставки
		  |	Иначе ИндивидуальныеЗаказы.Поставщик.КоличествоДнейДоставки Конец)
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	ИндивидуальныеЗаказы.Поставщик.Наименование,
	      |	ИндивидуальныеЗаказы.Товар.Наименование";	
		  
		  
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Дата",ДатаЗакрытия);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Если ТЗ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Док = Документы.ЗакрытиеЗаказов.СоздатьДокумент();
	Док.Дата = ДатаЗакрытия;
	Док.Склад = Склад;
	Док.ТипЗакрытияЗаказа = Перечисления.ТипыЗакрытияЗаказа.ИстечениеСрокаПоставки;
	Док.РегистрЗакрытияЗаказа = Перечисления.РегистрЗакрытияЗаказа.ИндивидуальныеЗаказы;
	Док.Товар.Загрузить(ТЗ);
	Записан = Ложь;
	Для н=1 по 5 Цикл
		Попытка 
			Док.Записать(РежимЗаписиДокумента.Проведение);
			Записан = Истина;
		Исключение
			//Предупреждение("Ждем-с , пока пройдет блокировка",3);
			Записан = Ложь;
		КонецПопытки;
	КонецЦикла;	
	
КонецПроцедуры

Процедура ЗакрытьТоварыВПутиОпт()  Экспорт
	
	
	ТХТ = "ВЫБРАТЬ
	      |	ЗаказПроизводителюОптОстатки.КодПроизводителя КАК КодПроизводителя,
	      |	ЗаказПроизводителюОптОстатки.КодТовара КАК КодТовара,
	      |	ЗаказПроизводителюОптОстатки.Заказ КАК Заказ,
	      |	ЗаказПроизводителюОптОстатки.КоличествоОстаток КАК Количество,
	      |	ЗаказПроизводителюОптОстатки.СуммаЗаказаОстаток КАК СуммаЗаказа,
	      |	АП.Ссылка КАК Товар
	      |ИЗ
	      |	РегистрНакопления.ЗаказПроизводителюОпт.Остатки(, ) КАК ЗаказПроизводителюОптОстатки
	      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	      |		ПО (АП.Код = ЗаказПроизводителюОптОстатки.КодТовара)
	      |ГДЕ
	      |	ЗаказПроизводителюОптОстатки.Заказ.ДатаПоставки < &Дата
	      |	И ЗаказПроизводителюОптОстатки.Заказ.ДатаПоставки <> ДАТАВРЕМЯ(1, 1, 1)
	      |ИТОГИ
	      |	МАКСИМУМ(КодПроизводителя)
	      |ПО
	      |	Заказ ИЕРАРХИЯ";	
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Дата",НачалоДня(ТекущаяДата()));

	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		
		Док = Документы.ЗакрытиеЗаказаОпт.СоздатьДокумент();
		Док.Дата = ТекущаяДата();
		Док.Производитель = Справочники.Производители.НайтиПоКоду(Выборка.КодПроизводителя);
		Док.ДокументОснование = Выборка.Заказ;
		Док.РегистрЗакрытияЗаказа = Перечисления.РегистрЗакрытияЗаказа.ЗаказПроизводителяОпт;
		Док.Комментарий = "Автоматическое закрытие по истечению срока поставки";
		
		ВыборкаСтроки = Выборка.Выбрать();
		Пока ВыборкаСтроки.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Док.Товар.Добавить(),ВыборкаСтроки);	
		КонецЦикла;
		Док.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
	
КонецПроцедуры

Функция ЗакрытьТоварыВПутиОптПоЗаказу(ЗаказПроизводителю)  Экспорт
	
	
	Если НЕ ЗначениеЗаполнено(ЗаказПроизводителю) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТХТ = "ВЫБРАТЬ
	      |	ЗаказПроизводителюОптОстатки.КодПроизводителя КАК КодПроизводителя,
	      |	ЗаказПроизводителюОптОстатки.КодТовара КАК КодТовара,
	      |	ЗаказПроизводителюОптОстатки.Заказ КАК Заказ,
	      |	ЗаказПроизводителюОптОстатки.КоличествоОстаток КАК Количество,
	      |	ЗаказПроизводителюОптОстатки.СуммаЗаказаОстаток КАК СуммаЗаказа,
	      |	АП.Ссылка КАК Товар
	      |ИЗ
	      |	РегистрНакопления.ЗаказПроизводителюОпт.Остатки(, Заказ = &ЗаказПроизводителю) КАК ЗаказПроизводителюОптОстатки
	      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	      |		ПО (АП.Код = ЗаказПроизводителюОптОстатки.КодТовара)
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	АП.Наименование";	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ЗаказПроизводителю",ЗаказПроизводителю);
	
	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Док = Документы.ЗакрытиеЗаказаОпт.СоздатьДокумент();
	Док.Дата = ТекущаяДата();
	Док.Производитель = ЗаказПроизводителю.Производитель;
	Док.ДокументОснование = ЗаказПроизводителю;
	Док.РегистрЗакрытияЗаказа = Перечисления.РегистрЗакрытияЗаказа.ЗаказПроизводителяОпт;
	Док.Комментарий = "Ручное закрытие по истечению срока поставки";
	Док.Товар.Загрузить(Рез.Выгрузить());
	Док.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат Док.Ссылка;
	
	
КонецФункции

Функция ЗакрытьТоварыВПутиОптПоЗаявкеНаОтгрузку(ЗаявкаНаОтгрузку)  Экспорт
	
	
	Если НЕ ЗначениеЗаполнено(ЗаявкаНаОтгрузку) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТХТ = "ВЫБРАТЬ
	      |	РегЗаявка.КодКлиента КАК КодКлиента,
	      |	РегЗаявка.КодТовара КАК КодТовара,
	      |	РегЗаявка.Заявка КАК Заявка,
	      |	РегЗаявка.КоличествоОстаток КАК Количество,
	      |	РегЗаявка.СуммаЗакупБезНДСОстаток КАК СуммаЗакупБезНДС,
	      |	АП.Ссылка КАК Товар
	      |ИЗ
	      |	РегистрНакопления.ЗаявкаНаОптовуюОтгрузку.Остатки(, Заявка = &ЗаявкаНаОтгрузку) КАК РегЗаявка
	      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
	      |		ПО (АП.Код = РегЗаявка.КодТовара)
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	АП.Наименование";	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("ЗаявкаНаОтгрузку",ЗаявкаНаОтгрузку);
	
	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Док = Документы.ЗакрытиеЗявкиНаОптовуюОтгрузку.СоздатьДокумент();
	Док.Дата = ТекущаяДата();
	Док.Клиент = ЗаявкаНаОтгрузку.Клиент;
	Док.ДокументОснование = ЗаявкаНаОтгрузку;
	Док.Производитель = ЗаявкаНаОтгрузку.Производитель;
	Док.Комментарий = "Ручное закрытие";
	Док.Товар.Загрузить(Рез.Выгрузить());
	Док.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат Док.Ссылка;
	
	
КонецФункции


Функция ВернутьСписокАптекДляАвтозаказаИнтернетАптек() Экспорт 
	
	
	Если Константы.ИспользоватьГрафикАвтозаказа.Получить() = Истина Тогда
		
		НеделяГода = НеделяГода(ТекущаяДата());
		ДеньСтрока = Формат(ТекущаяДата(),"ДФ=дддд");
		
		Если Цел(НеделяГода/2)=НеделяГода/2  Тогда
			Четность = "Четный";
		ИНаче
			Четность = "";
		КонецЕсли;
		Колонка = ДеньСтрока + Четность;
		Запрос = Новый Запрос;
		Запрос.Текст =
		"
       |	
       |	ВЫБРАТЬ
       |		МХ.Ссылка как Склад
       |		
	   |ПОМЕСТИТЬ ВЫБОРКА
       |	ИЗ
       |		Справочник.МестаХранения как МХ
       |	ГДЕ
       |		МХ.ИнтернетАптека = Истина
       |		И НЕ МХ.РасчетАвтозаказаБезПересчетаСкоростей
	   |		И МХ.АвтозаказНаОфисе
       |	
		|;
		|ВЫБРАТЬ
		|ГрафикиАвтозаказаГрафик.Аптека как Склад
		|ПОМЕСТИТЬ АптекиИзГрафика
		|ИЗ
		|	Справочник.ГрафикиАвтозаказа.График КАК ГрафикиАвтозаказаГрафик
		|ГДЕ
		|	ГрафикиАвтозаказаГрафик.Блокировка = ЛОЖЬ
		|	И ГрафикиАвтозаказаГрафик.Ссылка.Активный = ИСТИНА
		|	И ГрафикиАвтозаказаГрафик."+ Колонка +" = ИСТИНА
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Выборка.Склад,
		|	ЕСТЬNULL(ДР.ПриоритетПриРаспределенииЗаказа,0) как Приоритет
		|ИЗ
		|	ВЫБОРКА КАК Выборка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиИзГрафика как АптекиИзГрафика ПО АптекиИзГрафика.Склад = Выборка.Склад 
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДопРеквизитыМестХранений как ДР ПО ДР.Аптека = Выборка.Склад
		|УПОРЯДОЧИТЬ ПО ЕСТЬNULL(ДР.ПриоритетПриРаспределенииЗаказа,0) УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВЫБОРКА
		|;
		|УНИЧТОЖИТЬ АптекиИзГрафика
		|";
		
	Иначе
		Запрос = Новый Запрос;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МХ.Ссылка КАК Склад,
		|	ЕСТЬNULL(ДР.ПриоритетПриРаспределенииЗаказа, 0) КАК Приоритет
		|ИЗ
		|	Справочник.МестаХранения КАК МХ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДопРеквизитыМестХранений КАК ДР
		|		ПО (ДР.Аптека = МХ.Ссылка)
		|ГДЕ
		|	МХ.ИнтернетАптека = ИСТИНА
		|	И НЕ МХ.РасчетАвтозаказаБезПересчетаСкоростей
		|	И МХ.АвтозаказНаОфисе";

	КонецЕсли;
	
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	МассивАптек = Новый Массив;
	Пока Выборка.Следующий() Цикл
		МассивАптек.Добавить(Выборка.Склад);
	КонецЦикла;
	
	Возврат МассивАптек;
	
КонецФункции

Функция ВернутьСписокАптекДляАвтозаказа(Параметры) Экспорт 
	
	КоличествоДнейПродаж = Параметры.КоличествоДнейПродаж;
	ДопУсловиеОтбораАптек = Параметры.ДопУсловиеОтбораАптек;
	
	Если Константы.ИспользоватьГрафикАвтозаказа.Получить() = Истина Тогда
		
		НеделяГода = НеделяГода(ТекущаяДата());
		ДеньСтрока = Формат(ТекущаяДата(),"ДФ=дддд");
		
		Если Цел(НеделяГода/2)=НеделяГода/2  Тогда
			Четность = "Четный";
		ИНаче
			Четность = "";
		КонецЕсли;
		Колонка = ДеньСтрока + Четность;
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|КОЛИЧЕСТВО(1) КАК Поле1,
		|Матрица.Аптека  как Склад
		|ПОМЕСТИТЬ АптекиИзМатрицы
		|ИЗ
		|РегистрСведений.Матрица КАК Матрица
		|СГРУППИРОВАТЬ ПО
		|Матрица.Аптека
		|
		|;
		|ВЫБРАТЬ 
		|	РеализацияККМ.Склад КАК Склад,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ)) КАК КоличествоВыручек
		|ПОМЕСТИТЬ ВЫБОРКА
		|ИЗ
		|	Документ.РеализацияККМ КАК РеализацияККМ
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &МинДата И &МаксДата
		|	И РеализацияККМ.Проведен = ИСТИНА
		|	И РеализацияККМ.Склад.АссортиментноеПланирование
		|	И РеализацияККМ.Склад.АвтозаказНаОфисе
		|	И НЕ РеализацияККМ.Склад.РасчетАвтозаказаБезПересчетаСкоростей
		|	" + ДопУсловиеОтбораАптек + "
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияККМ.Склад
		|;
		|ВЫБРАТЬ
		|ГрафикиАвтозаказаГрафик.Аптека как Склад
		|ПОМЕСТИТЬ АптекиИзГрафика
		|ИЗ
		|	Справочник.ГрафикиАвтозаказа.График КАК ГрафикиАвтозаказаГрафик
		|ГДЕ
		|	ГрафикиАвтозаказаГрафик.Блокировка = ЛОЖЬ
		|	И ГрафикиАвтозаказаГрафик.Ссылка.Активный = ИСТИНА
		|	И ГрафикиАвтозаказаГрафик."+ Колонка +" = ИСТИНА
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Выборка.Склад,
		|	Выборка.КоличествоВыручек,
		|	ЕСТЬNULL(ДР.ПриоритетПриРаспределенииЗаказа,0) как Приоритет
		|ИЗ
		|	ВЫБОРКА КАК Выборка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			РеализацияККМ.Склад КАК Склад
		|		ИЗ
		|			Документ.РеализацияККМ КАК РеализацияККМ
		|		ГДЕ
		|			КОНЕЦПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) = &МаксДата
		|			И РеализацияККМ.Проведен = ИСТИНА
		|			И РеализацияККМ.Затычка = ЛОЖЬ) КАК ПродажиЗаДень
		|		ПО (ПродажиЗаДень.Склад = Выборка.Склад)
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиИзГрафика как АптекиИзГрафика ПО АптекиИзГрафика.Склад = Выборка.Склад 
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиИзМатрицы как АптекиИзМатрицы ПО АптекиИзМатрицы.Склад = Выборка.Склад
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДопРеквизитыМестХранений как ДР ПО ДР.Аптека = Выборка.Склад
		|УПОРЯДОЧИТЬ ПО ЕСТЬNULL(ДР.ПриоритетПриРаспределенииЗаказа,0) УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВЫБОРКА
		|;
		|УНИЧТОЖИТЬ АптекиИзГрафика
		|;
		|УНИЧТОЖИТЬ АптекиИзМатрицы";
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(1) КАК Поле1,
		|	Матрица.Аптека КАК Склад
		|ПОМЕСТИТЬ АптекиИзМатрицы
		|ИЗ
		|	РегистрСведений.Матрица КАК Матрица
		|
		|СГРУППИРОВАТЬ ПО
		|	Матрица.Аптека
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РеализацияККМ.Склад КАК Склад,
		|	КОЛИЧЕСТВО(РеализацияККМ.Склад) КАК КоличествоВыручек
		|ПОМЕСТИТЬ ВЫБОРКА
		|ИЗ
		|	Документ.РеализацияККМ КАК РеализацияККМ
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &МинДата И &МаксДата
		|	И РеализацияККМ.Проведен = ИСТИНА
		|	И РеализацияККМ.Склад.АссортиментноеПланирование
		|	И РеализацияККМ.Склад.АвтозаказНаОфисе
		|	И НЕ РеализацияККМ.Склад.РасчетАвтозаказаБезПересчетаСкоростей
		|	" + ДопУсловиеОтбораАптек + "
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияККМ.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Выборка.Склад,
		|	Выборка.КоличествоВыручек,
		|	ЕСТЬNULL(ДР.ПриоритетПриРаспределенииЗаказа,0) как Приоритет
		|ИЗ
		|	ВЫБОРКА КАК Выборка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			РеализацияККМ.Склад КАК Склад
		|		ИЗ
		|			Документ.РеализацияККМ КАК РеализацияККМ
		|		ГДЕ
		|			КОНЕЦПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) = &МаксДата
		|			И РеализацияККМ.Проведен = ИСТИНА
		|			И РеализацияККМ.Затычка = ЛОЖЬ) КАК ПродажиЗаДень
		|		ПО (ПродажиЗаДень.Склад = Выборка.Склад)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиИзМатрицы КАК АптекиИзМатрицы
		|		ПО (АптекиИзМатрицы.Склад = Выборка.Склад)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДопРеквизитыМестХранений как ДР ПО ДР.Аптека = Выборка.Склад
		|УПОРЯДОЧИТЬ ПО ЕСТЬNULL(ДР.ПриоритетПриРаспределенииЗаказа,0) УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВЫБОРКА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АптекиИзМатрицы";
	КонецЕсли;
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	РеализацияККМ.Склад КАК Склад,
	//|	МИНИМУМ(РеализацияККМ.Дата) КАК МинДата,
	//|	МАКСИМУМ(РеализацияККМ.Дата) КАК МаксДата
	//|ИЗ
	//|	Документ.РеализацияККМ КАК РеализацияККМ
	//|ГДЕ
	//|	НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &МинДата И &МаксДата
	//|	И РеализацияККМ.Проведен = ИСТИНА
	//|	И РеализацияККМ.Склад.АссортиментноеПланирование
	//|	И РеализацияККМ.Склад.АвтозаказНаОфисе
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	РеализацияККМ.Склад";
	
	МинДата = НачалоДня(ТекущаяДата() - 30*86400);
	МаксДата = КонецДня(НачалоДня(ТекущаяДата())-1 );
	
	Запрос.УстановитьПараметр("МинДата", МинДата);
	Запрос.УстановитьПараметр("МаксДата", МаксДата );
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	МассивАптек = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоВыручек >= КоличествоДнейПродаж Тогда
			МассивАптек.Добавить(Выборка.Склад);
		КонецЕсли;
		//Если НачалоДня(Выборка.МинДата) = МинДата и КонецДня(Выборка.МаксДата) = МаксДата Тогда
		//	МассивАптек.Добавить(Выборка.Склад);	
		//КонецЕсли;
	КонецЦикла;
	
	Возврат МассивАптек;
	
КонецФункции

Функция ВернутьСписокАптекДляАвтозаказа2016(Параметры) Экспорт 
	
	КоличествоДнейПродаж = Параметры.КоличествоДнейПродаж;
	ДопУсловиеОтбораАптек = Параметры.ДопУсловиеОтбораАптек;
	
	Если Константы.ИспользоватьГрафикАвтозаказа.Получить() = Истина Тогда
		
		НеделяГода = НеделяГода(ТекущаяДата());
		ДеньСтрока = Формат(ТекущаяДата(),"ДФ=дддд");
		
		Если Цел(НеделяГода/2)=НеделяГода/2  Тогда
			Четность = "Четный";
		ИНаче
			Четность = "";
		КонецЕсли;
		Колонка = ДеньСтрока + Четность;
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|КОЛИЧЕСТВО(1) КАК Поле1,
		|Матрица.Аптека  как Склад
		|ПОМЕСТИТЬ АптекиИзМатрицы
		|ИЗ
		|РегистрСведений.Матрица КАК Матрица
		|СГРУППИРОВАТЬ ПО
		|Матрица.Аптека
		|
		|;
       |	
       |	ВЫБРАТЬ
       |		МХ.Ссылка как Склад,
       |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ)) как КоличествоВыручек
	   |ПОМЕСТИТЬ ВЫБОРКА
       |	ИЗ
       |		Документ.УЗ_РеализацияККМ КАК РеализацияККМ
	   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения как МХ по МХ.Код = РеализацияККМ.СкладКод
       |	ГДЕ
       |		НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &МинДата И &МаксДата
       |		И РеализацияККМ.Проведен = ИСТИНА
       |		И НЕ МХ.РасчетАвтозаказаБезПересчетаСкоростей
	   |		И МХ.АвтозаказНаОфисе
	   //|	" + ДопУсловиеОтбораАптек + "
       |	
       |	СГРУППИРОВАТЬ ПО
       |		МХ.Ссылка
       |
		|;
		|ВЫБРАТЬ
		|ГрафикиАвтозаказаГрафик.Аптека как Склад
		|ПОМЕСТИТЬ АптекиИзГрафика
		|ИЗ
		|	Справочник.ГрафикиАвтозаказа.График КАК ГрафикиАвтозаказаГрафик
		|ГДЕ
		|	ГрафикиАвтозаказаГрафик.Блокировка = ЛОЖЬ
		|	И ГрафикиАвтозаказаГрафик.Ссылка.Активный = ИСТИНА
		|	И ГрафикиАвтозаказаГрафик."+ Колонка +" = ИСТИНА
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Выборка.Склад,
		|	Выборка.КоличествоВыручек,
		|	ЕСТЬNULL(ДР.ПриоритетПриРаспределенииЗаказа,0) как Приоритет
		|ИЗ
		|	ВЫБОРКА КАК Выборка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			МХ.Ссылка КАК Склад
		|		ИЗ
		|			Документ.УЗ_РеализацияККМ КАК РеализацияККМ
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения как МХ по МХ.Код = РеализацияККМ.СкладКод
		|		ГДЕ
		|			РеализацияККМ.Дата между ДОБАВИТЬКДАТЕ(&МаксДата, ДЕНЬ, -2)  и &МаксДата
		|			И РеализацияККМ.Проведен = ИСТИНА
		|			) КАК ПродажиЗаДень
		|		ПО (ПродажиЗаДень.Склад = Выборка.Склад)
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиИзГрафика как АптекиИзГрафика ПО АптекиИзГрафика.Склад = Выборка.Склад 
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиИзМатрицы как АптекиИзМатрицы ПО АптекиИзМатрицы.Склад = Выборка.Склад
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДопРеквизитыМестХранений как ДР ПО ДР.Аптека = Выборка.Склад
		|УПОРЯДОЧИТЬ ПО ЕСТЬNULL(ДР.ПриоритетПриРаспределенииЗаказа,0) УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВЫБОРКА
		|;
		|УНИЧТОЖИТЬ АптекиИзГрафика
		|;
		|УНИЧТОЖИТЬ АптекиИзМатрицы";
		
	Иначе
		Запрос = Новый Запрос;
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	КОЛИЧЕСТВО(1) КАК Поле1,
		               |	Матрица.Аптека КАК Склад
		               |ПОМЕСТИТЬ АптекиИзМатрицы
		               |ИЗ
		               |	РегистрСведений.Матрица КАК Матрица
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	Матрица.Аптека
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	МХ.Ссылка КАК Склад,
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ)) КАК КоличествоВыручек
		               |ПОМЕСТИТЬ ВЫБОРКА
		               |ИЗ
		               |	Документ.УЗ_РеализацияККМ КАК РеализацияККМ
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МХ
		               |		ПО (МХ.Код = РеализацияККМ.СкладКод)
		               |ГДЕ
		               |	НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &МинДата И &МаксДата
		               |	И РеализацияККМ.Проведен = ИСТИНА
		               |	И НЕ МХ.РасчетАвтозаказаБезПересчетаСкоростей
		               |	И МХ.АвтозаказНаОфисе
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	МХ.Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Выборка.Склад,
		               |	Выборка.КоличествоВыручек,
		               |	ЕСТЬNULL(ДР.ПриоритетПриРаспределенииЗаказа, 0) КАК Приоритет
		               |ИЗ
		               |	ВЫБОРКА КАК Выборка
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |			МХ.Ссылка КАК Склад
		               |		ИЗ
		               |			Документ.УЗ_РеализацияККМ КАК РеализацияККМ
		               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МХ
		               |				ПО (МХ.Код = РеализацияККМ.СкладКод)
		               |		ГДЕ
		               |			КОНЕЦПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) = &МаксДата
		               |			И РеализацияККМ.Проведен = ИСТИНА) КАК ПродажиЗаДень
		               |		ПО (ПродажиЗаДень.Склад = Выборка.Склад)
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиИзМатрицы КАК АптекиИзМатрицы
		               |		ПО (АптекиИзМатрицы.Склад = Выборка.Склад)
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДопРеквизитыМестХранений КАК ДР
		               |		ПО (ДР.Аптека = Выборка.Склад)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ЕСТЬNULL(ДР.ПриоритетПриРаспределенииЗаказа, 0) УБЫВ
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВЫБОРКА
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ АптекиИзМатрицы";
	КонецЕсли;
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	РеализацияККМ.Склад КАК Склад,
	//|	МИНИМУМ(РеализацияККМ.Дата) КАК МинДата,
	//|	МАКСИМУМ(РеализацияККМ.Дата) КАК МаксДата
	//|ИЗ
	//|	Документ.РеализацияККМ КАК РеализацияККМ
	//|ГДЕ
	//|	НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &МинДата И &МаксДата
	//|	И РеализацияККМ.Проведен = ИСТИНА
	//|	И РеализацияККМ.Склад.АссортиментноеПланирование
	//|	И РеализацияККМ.Склад.АвтозаказНаОфисе
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	РеализацияККМ.Склад";
	
	МинДата = НачалоДня(ТекущаяДата() - 30*86400);
	МаксДата = КонецДня(НачалоДня(ТекущаяДата())-1 );
	
	
	Запрос.УстановитьПараметр("МинДата", МинДата);
	Запрос.УстановитьПараметр("МаксДата", МаксДата );
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	МассивАптек = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоВыручек >= КоличествоДнейПродаж Тогда
			МассивАптек.Добавить(Выборка.Склад);
		КонецЕсли;
		//Если НачалоДня(Выборка.МинДата) = МинДата и КонецДня(Выборка.МаксДата) = МаксДата Тогда
		//	МассивАптек.Добавить(Выборка.Склад);	
		//КонецЕсли;
	КонецЦикла;
	
	Возврат МассивАптек;
	
КонецФункции

Функция ВернутьСписокАптекДляАвтозаказаБезПересчетаСкоростей() Экспорт 
	
	Если Константы.ИспользоватьГрафикАвтозаказа.Получить() = Истина Тогда
		
		НеделяГода = НеделяГода(ТекущаяДата());
		ДеньСтрока = Формат(ТекущаяДата(),"ДФ=дддд");
		
		Если Цел(НеделяГода/2)=НеделяГода/2  Тогда
			Четность = "Четный";
		ИНаче
			Четность = "";
		КонецЕсли;
		Колонка = ДеньСтрока + Четность;
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|КОЛИЧЕСТВО(1) КАК Поле1,
		|Матрица.Аптека  как Склад
		|ПОМЕСТИТЬ АптекиИзМатрицы
		|ИЗ
		|РегистрСведений.Матрица КАК Матрица
		|СГРУППИРОВАТЬ ПО
		|Матрица.Аптека
		|
		|;
       |////////////////////////////////////////////////////////////////////////////////
       |ВЫБРАТЬ
       |	ВыборкаПродаж.Склад,
       |	СУММА(ВыборкаПродаж.КоличествоВыручек) КАК КоличествоВыручек
       |ПОМЕСТИТЬ ВЫБОРКА
       |ИЗ
       |	(ВЫБРАТЬ
       |		РеализацияККМ.Склад КАК Склад,
       |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ)) КАК КоличествоВыручек
       |	ИЗ
       |		Документ.РеализацияККМ КАК РеализацияККМ
	   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения как МХ по МХ.Ссылка = РеализацияККМ.Склад
       |	ГДЕ
       |		НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &МинДата И &МаксДата
       |		И РеализацияККМ.Проведен = ИСТИНА
       |		И РеализацияККМ.Склад.РасчетАвтозаказаБезПересчетаСкоростей
       |	
       |	СГРУППИРОВАТЬ ПО
       |		РеализацияККМ.Склад
       |	
       |	ОБЪЕДИНИТЬ ВСЕ
       |	
       |	ВЫБРАТЬ
       |		МХ.Ссылка как Склад,
       |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ))
       |	ИЗ
       |		Документ.УЗ_РеализацияККМ КАК РеализацияККМ
	   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения как МХ по МХ.Код = РеализацияККМ.СкладКод
       |	ГДЕ
       |		НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &МинДата И &МаксДата
       |		И РеализацияККМ.Проведен = ИСТИНА
       |		И МХ.РасчетАвтозаказаБезПересчетаСкоростей
       |	
       |	СГРУППИРОВАТЬ ПО
       |		МХ.Ссылка) КАК ВыборкаПродаж
       |
       |СГРУППИРОВАТЬ ПО
       |	ВыборкаПродаж.Склад
       |;
		|ВЫБРАТЬ
		|ГрафикиАвтозаказаГрафик.Аптека как Склад
		|ПОМЕСТИТЬ АптекиИзГрафика
		|ИЗ
		|	Справочник.ГрафикиАвтозаказа.График КАК ГрафикиАвтозаказаГрафик
		|ГДЕ
		|	ГрафикиАвтозаказаГрафик.Блокировка = ЛОЖЬ
		|	И ГрафикиАвтозаказаГрафик.Ссылка.Активный = ИСТИНА
		|	И ГрафикиАвтозаказаГрафик."+ Колонка +" = ИСТИНА
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Выборка.Склад,
		|	Выборка.КоличествоВыручек
		|ИЗ
		|	ВЫБОРКА КАК Выборка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			МХ.Ссылка КАК Склад
		|		ИЗ
		|			Документ.УЗ_РеализацияККМ КАК РеализацияККМ
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения как МХ по МХ.Код = РеализацияККМ.СкладКод
		|		ГДЕ
		|			РеализацияККМ.Дата между ДОБАВИТЬКДАТЕ(&МаксДата, ДЕНЬ, -2)  и &МаксДата
		|			И РеализацияККМ.Проведен = ИСТИНА
		|			И МХ.РасчетАвтозаказаБезПересчетаСкоростей
		|			) КАК ПродажиЗаДень
		|		ПО (ПродажиЗаДень.Склад = Выборка.Склад)
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиИзГрафика как АптекиИзГрафика ПО АптекиИзГрафика.Склад = Выборка.Склад 
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиИзМатрицы как АптекиИзМатрицы ПО АптекиИзМатрицы.Склад = Выборка.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВЫБОРКА
		|;
		|УНИЧТОЖИТЬ АптекиИзГрафика
		|;
		|УНИЧТОЖИТЬ АптекиИзМатрицы";
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(1) КАК Поле1,
		|	Матрица.Аптека КАК Склад
		|ПОМЕСТИТЬ АптекиИзМатрицы
		|ИЗ
		|	РегистрСведений.Матрица КАК Матрица
		|
		|СГРУППИРОВАТЬ ПО
		|	Матрица.Аптека
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыборкаПродаж.Склад,
		|	СУММА(ВыборкаПродаж.КоличествоВыручек) КАК КоличествоВыручек
		|ПОМЕСТИТЬ ВЫБОРКА
		|ИЗ
		|	(ВЫБРАТЬ
		|		РеализацияККМ.Склад КАК Склад,
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ)) КАК КоличествоВыручек
		|	ИЗ
		|		Документ.РеализацияККМ КАК РеализацияККМ
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МХ
		|			ПО (МХ.Ссылка = РеализацияККМ.Склад)
		|	ГДЕ
		|		НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &МинДата И &МаксДата
		|		И РеализацияККМ.Проведен = ИСТИНА
		|		И РеализацияККМ.Склад.РасчетАвтозаказаБезПересчетаСкоростей
		|	
		|	СГРУППИРОВАТЬ ПО
		|		РеализацияККМ.Склад
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		МХ.Ссылка,
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ))
		|	ИЗ
		|		Документ.УЗ_РеализацияККМ КАК РеализацияККМ
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МХ
		|			ПО (МХ.Код = РеализацияККМ.СкладКод)
		|	ГДЕ
		|		НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &МинДата И &МаксДата
		|		И РеализацияККМ.Проведен = ИСТИНА
		|		И МХ.РасчетАвтозаказаБезПересчетаСкоростей
		|	
		|	СГРУППИРОВАТЬ ПО
		|		МХ.Ссылка) КАК ВыборкаПродаж
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыборкаПродаж.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Выборка.Склад,
		|	Выборка.КоличествоВыручек
		|ИЗ
		|	ВЫБОРКА КАК Выборка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			МХ.Ссылка КАК Склад
		|		ИЗ
		|			Документ.УЗ_РеализацияККМ КАК РеализацияККМ
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МХ
		|				ПО (МХ.Код = РеализацияККМ.СкладКод)
		|		ГДЕ
		|			РеализацияККМ.Дата между ДОБАВИТЬКДАТЕ(&МаксДата, ДЕНЬ, -2)  и &МаксДата
		|			И РеализацияККМ.Проведен = ИСТИНА
		|			И МХ.РасчетАвтозаказаБезПересчетаСкоростей) КАК ПродажиЗаДень
		|		ПО (ПродажиЗаДень.Склад = Выборка.Склад)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АптекиИзМатрицы КАК АптекиИзМатрицы
		|		ПО (АптекиИзМатрицы.Склад = Выборка.Склад)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВЫБОРКА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АптекиИзМатрицы";
	КонецЕсли;
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	РеализацияККМ.Склад КАК Склад,
	//|	МИНИМУМ(РеализацияККМ.Дата) КАК МинДата,
	//|	МАКСИМУМ(РеализацияККМ.Дата) КАК МаксДата
	//|ИЗ
	//|	Документ.РеализацияККМ КАК РеализацияККМ
	//|ГДЕ
	//|	НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &МинДата И &МаксДата
	//|	И РеализацияККМ.Проведен = ИСТИНА
	//|	И РеализацияККМ.Склад.АссортиментноеПланирование
	//|	И РеализацияККМ.Склад.АвтозаказНаОфисе
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	РеализацияККМ.Склад";
	
	МинДата = НачалоДня(ТекущаяДата() - 30*86400);
	МаксДата = КонецДня(НачалоДня(ТекущаяДата())-1 );
	
	Запрос.УстановитьПараметр("МинДата", МинДата);
	Запрос.УстановитьПараметр("МаксДата", МаксДата );
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	МассивАптек = Новый Массив;
	Пока Выборка.Следующий() Цикл
		
		МассивАптек.Добавить(Выборка.Склад);
		//Если НачалоДня(Выборка.МинДата) = МинДата и КонецДня(Выборка.МаксДата) = МаксДата Тогда
		//	МассивАптек.Добавить(Выборка.Склад);	
		//КонецЕсли;
	КонецЦикла;
	
	Возврат МассивАптек;
	
КонецФункции

Функция ВернутьСуммуВыручкиИДнейЗаказа(Аптека) Экспорт
	
	Результат = Новый Структура("СуммаВыручки,ДнейЗаказа,СуммаПоступленийЗаПериод,СуммаПродажЗаПериод",0,999,0,0);
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(ЗаявкаНаТовар.Дата) КАК ДатаЗаказа
	               |ИЗ
	               |	Документ.ЗаявкаНаТовар КАК ЗаявкаНаТовар
	               |ГДЕ
	               |	ЗаявкаНаТовар.Дата > &Дата
	               |	И ЗаявкаНаТовар.Склад = &Аптека
	               |	И ЗаявкаНаТовар.Проведен = ИСТИНА
	               |	И ЗаявкаНаТовар.ТипЗаявки = ЗНАЧЕНИЕ(Перечисление.ТипЗаявки.АвтозаказОфиса)";
	Запрос.УстановитьПараметр("Дата",НачалоДня(ТекущаяДата())-24*60*60*5);
	Запрос.УстановитьПараметр("Аптека",Аптека);
	Запрос.УстановитьПараметр("АптекаКод",Аптека.Код);
	Рез = Запрос.Выполнить();
	Выборка = Рез.Выбрать();
	Выборка.Следующий();
	
	ДатаПоследнегоЗаказа = Выборка.ДатаЗаказа;
	
	Если ДатаПоследнегоЗаказа = NULL Тогда
		ДнейЗаказа = 999;
	Иначе
		ДнейЗаказа = Окр((ТекущаяДата() - ДатаПоследнегоЗаказа)/(24*60*60),0);
	КонецЕсли;
	
	
	Если ДатаПоследнегоЗаказа = NULL Тогда
		СуммаВыручки = 0;
	Иначе
		//Запрос.Текст = "ВЫБРАТЬ
		//|	СУММА(РеализацияККМТовар.СуммаЗакуп) КАК СуммаЗакуп
		//|ИЗ
		//|	Документ.РеализацияККМ.Товар КАК РеализацияККМТовар
		//|ГДЕ
		//|	РеализацияККМТовар.Ссылка.Дата >= &ДатаПоследнегоЗаказа
		//|	И РеализацияККМТовар.Ссылка.Склад = &Аптека
		//|	И РеализацияККМТовар.Ссылка.Проведен = Истина";
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	СУММА(УЗ_ТоварныйОтчет.СуммаЗакупБезНДС * (1 + УЗ_ТоварныйОтчет.СтавкаНДС / 100)) КАК СуммаЗакуп
		               |ИЗ
		               |	РегистрНакопления.УЗ_ТоварныйОтчет КАК УЗ_ТоварныйОтчет
		               |ГДЕ
		               |	УЗ_ТоварныйОтчет.Регистратор ССЫЛКА Документ.УЗ_РеализацияККМ
		               |	И УЗ_ТоварныйОтчет.Период >= &ДатаПоследнегоЗаказа
		               |	И УЗ_ТоварныйОтчет.СкладКод = &АптекаКод";
		
		
		Запрос.УстановитьПараметр("ДатаПоследнегоЗаказа",ДатаПоследнегоЗаказа);
		Рез = Запрос.Выполнить();
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		СуммаВыручки = ?(Выборка.СуммаЗакуп=NULL,0,Выборка.СуммаЗакуп);
	КонецЕсли;
	
	СуммаПродажЗаПериод = 0;
	СуммаПоступленийЗаПериод = 0;
	
	Если Аптека.ДатаПерехода <= НачалоДня(ТекущаяДата() - 60*60*24*30*3) Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	СУММА(ВЫборка.СуммаПрихода) КАК СуммаПрихода,
		               |	СУММА(ВЫборка.СуммаРасхода) КАК СуммаРасхода
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		СУММА(ВЫБОР
		               |				КОГДА ОстаткиПоСтНДСПоСкладам.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОпераций.ПоступлениеТМЦ)
		               |					ТОГДА ОстаткиПоСтНДСПоСкладам.СуммаЗакупСНДС
		               |				ИНАЧЕ 0
		               |			КОНЕЦ) КАК СуммаПрихода,
		               |		СУММА(ВЫБОР
		               |				КОГДА ОстаткиПоСтНДСПоСкладам.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОпераций.ПродажаТМЦ)
		               |					ТОГДА ОстаткиПоСтНДСПоСкладам.СуммаЗакупСНДС
		               |				ИНАЧЕ 0
		               |			КОНЕЦ) КАК СуммаРасхода
		               |	ИЗ
		               |		РегистрНакопления.ОстаткиПоСтНДСПоСкладам КАК ОстаткиПоСтНДСПоСкладам
		               |	ГДЕ
		               |		ОстаткиПоСтНДСПоСкладам.Период МЕЖДУ &НачПериода И &КонПериода
		               |		И ОстаткиПоСтНДСПоСкладам.Склад = &Склад
		               |		И ОстаткиПоСтНДСПоСкладам.ВидОперации В(&ВидыОпераций)
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		СУММА(ВЫБОР
		               |				КОГДА УЗ_Обороты.Регистратор ССЫЛКА Документ.УЗ_ПоступлениеТовара
		               |					ТОГДА УЗ_Обороты.СуммаЗакупБезНДСПриход
		               |				ИНАЧЕ 0
		               |			КОНЕЦ),
		               |		СУММА(ВЫБОР
		               |				КОГДА УЗ_Обороты.Регистратор ССЫЛКА Документ.УЗ_РеализацияККМ
		               |					ТОГДА УЗ_Обороты.СуммаЗакупБезНДСРасход
		               |				ИНАЧЕ 0
		               |			КОНЕЦ)
		               |	ИЗ
		               |		РегистрНакопления.УЗ_ТоварныйОтчет.Обороты(&НачПериода, &КонПериода, Регистратор, СкладКод = &СкладКод) КАК УЗ_Обороты) КАК ВЫборка";
					   
		ВидыОпераций = Новый Массив;
		ВидыОпераций.Добавить(Перечисления.ВидыОпераций.ПоступлениеТМЦ);
		ВидыОпераций.Добавить(Перечисления.ВидыОпераций.ПродажаТМЦ);
		
		Запрос.УстановитьПараметр("НачПериода",НачалоДня(ТекущаяДата()-60*60*24*28));
		Запрос.УстановитьПараметр("КонПериода",НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("Склад",Аптека);
		Запрос.УстановитьПараметр("СкладКод",Аптека.Код);

		Запрос.УстановитьПараметр("ВидыОпераций",ВидыОпераций);
		Рез = Запрос.Выполнить();
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		СуммаПродажЗаПериод = ?(Выборка.СуммаРасхода = NULL,0,Выборка.СуммаРасхода);
		СуммаПоступленийЗаПериод = ?(Выборка.СуммаПрихода = NULL,0,Выборка.СуммаПрихода);				
	КонецЕсли;
	
	
	Результат.СуммаПоступленийЗаПериод = СуммаПоступленийЗаПериод;
	Результат.СуммаПродажЗаПериод = СуммаПродажЗаПериод;
	Результат.ДнейЗаказа = ДнейЗаказа;
	Результат.СуммаВыручки = СуммаВыручки;
	
	Возврат Результат;
	            
КонецФункции

Функция СоздатьИЗаполнитьСоответствиеСкоростей()

	
	СоответствиеСкоростей = Новый Соответствие;
	СоответствиеСкоростей.Вставить("V1",0);
	СоответствиеСкоростей.Вставить("V2",0);
	СоответствиеСкоростей.Вставить("V3",0);
	СоответствиеСкоростей.Вставить("V4",0);
	СоответствиеСкоростей.Вставить("K1",0.3);
	СоответствиеСкоростей.Вставить("K2",0.25);
	СоответствиеСкоростей.Вставить("K3",0.2);
	СоответствиеСкоростей.Вставить("K4",0.15);
	
	Возврат СоответствиеСкоростей;
	
КонецФункции

Процедура РасчетABC(СписокАптек = Неопределено, ПараметрыРасчета = Неопределено) Экспорт
	
	Если ПараметрыРасчета = Неопределено Тогда
		НачПериода = НачалоДня(ТекущаяДата() - 60 * 86400);
		КонПериода = КонецДня(ТекущаяДата());
		ПроцентА = 70;
		ПроцентБ = 20;
	Иначе
		НачПериода = ПараметрыРасчета.НачПериода;
		КонПериода = ПараметрыРасчета.КонПериода;
		ПроцентА = ПараметрыРасчета.ПроцентА;
		ПроцентБ = ПараметрыРасчета.ПроцентБ;
	КонецЕсли;	
	
	
	
	Для Каждого Аптека Из СписокАптек Цикл
		
		
		//ТХТ = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//|	МатрицаАптеки.ГруппаАПВМатрице КАК ГруппаАПВМатрице,
		//|	МатрицаАптеки.АПаптеки,
		//|	МатрицаАптеки.АПТовар,
		//|	ЕСТЬNULL(Продажи.Товар.Наименование, МатрицаАптеки.АПТовар.Наименование) КАК Товар,
		//|	ВЫБОР
		//|		КОГДА Продажи.Товар.Наименование ЕСТЬ NULL 
		//|			ТОГДА ВЫБОР
		//|					КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ABCD]""
		//|						ТОГДА ""D""
		//|					КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ISXF]""
		//|						ТОГДА МатрицаАптеки.ГруппаАПВМатрице
		//|					ИНАЧЕ """"
		//|				КОНЕЦ
		//|		ИНАЧЕ ВЫБОР
		//|				КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ISXF]""
		//|					ТОГДА МатрицаАптеки.ГруппаАПВМатрице
		//|				ИНАЧЕ """"
		//|			КОНЕЦ
		//|	КОНЕЦ КАК ГруппаИтог,
		//|	Продажи.Количество,
		//|	Продажи.СуммаВыручка,
		//|	Продажи.СуммаВаловая
		//|ИЗ
		//|	(ВЫБРАТЬ
		//|		РеализацияККМТовар.Товар КАК Товар,
		//|		СУММА(РеализацияККМТовар.Количество * РеализацияККМТовар.К / РеализацияККМТовар.Партия.К) КАК Количество,
		//|		СУММА(РеализацияККМТовар.Сумма) КАК СуммаВыручка,
		//|		СУММА(РеализацияККМТовар.Сумма - РеализацияККМТовар.СуммаЗакуп) КАК СуммаВаловая
		//|	ИЗ
		//|		Документ.РеализацияККМ.Товар КАК РеализацияККМТовар
		//|	ГДЕ
		//|		РеализацияККМТовар.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		//|		И РеализацияККМТовар.Ссылка.Склад = &Аптека
		//|	
		//|	СГРУППИРОВАТЬ ПО
		//|		РеализацияККМТовар.Товар) КАК Продажи
		//|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		//|			1 КАК АПаптеки,
		//|			Выборка.Товар КАК АПТовар,
		//|			Выборка.ГруппаАПИтог КАК ГруппаАПВМатрице
		//|		ИЗ
		//|			РегистрСведений.Матрица КАК Выборка
		//|		ГДЕ
		//|			Выборка.Аптека = &Аптека) КАК МатрицаАптеки
		//|		ПО Продажи.Товар = МатрицаАптеки.АПТовар";
		
		ТХТ = "ВЫБРАТЬ
		      |	ВЫБОР
		      |		КОГДА АП.КодОП > 0
		      |			ТОГДА АПОП.Ссылка
		      |		ИНАЧЕ АП.Ссылка
		      |	КОНЕЦ КАК Товар,
		      |	СУММА(Продажи.КоличествоОборот / Партии.К) КАК Количество,
		      |	СУММА(Продажи.СуммаРознОборот) КАК СуммаВыручка,
		      |	СУММА(Продажи.СуммаРознОборот - Продажи.СуммаЗакупСНДСОборот) КАК СуммаВаловая
		      |ПОМЕСТИТЬ ТЕМППРОДАЖИ
		      |ИЗ
		      |	РегистрНакопления.УЗ_РеализацииККМ.Обороты(&Дата1, &Дата2, , СкладКод = &КодАптеки) КАК Продажи
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
		      |		ПО (Партии.Код = Продажи.ПартияКод)
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
		      |		ПО (АП.Код = Продажи.ТоварКод)
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АПОП
		      |		ПО (АПОП.Код = АП.КодОП)
		      |ГДЕ
		      |	НЕ Партии.ТипПартии = ""I""
		      |
		      |СГРУППИРОВАТЬ ПО
		      |	ВЫБОР
		      |		КОГДА АП.КодОП > 0
		      |			ТОГДА АПОП.Ссылка
		      |		ИНАЧЕ АП.Ссылка
		      |	КОНЕЦ
		      |
		      |ИНДЕКСИРОВАТЬ ПО
		      |	Товар
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	МатрицаАптеки.ГруппаАПВМатрице КАК ГруппаАПВМатрице,
		      |	МатрицаАптеки.АПаптеки КАК АПаптеки,
		      |	МатрицаАптеки.АПТовар КАК АПТовар,
		      |	ВЫБОР
		      |		КОГДА ТемпПродажи.Товар ЕСТЬ NULL
		      |			ТОГДА ВЫБОР
		      |					КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ABCD]""
		      |						ТОГДА ""D""
		      |					КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ISXF]""
		      |						ТОГДА МатрицаАптеки.ГруппаАПВМатрице
		      |					ИНАЧЕ """"
		      |				КОНЕЦ
		      |		ИНАЧЕ ВЫБОР
		      |				КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ISXF]""
		      |					ТОГДА МатрицаАптеки.ГруппаАПВМатрице
		      |				ИНАЧЕ """"
		      |			КОНЕЦ
		      |	КОНЕЦ КАК ГруппаИтог,
		      |	ТемпПродажи.Количество КАК Количество,
		      |	ТемпПродажи.СуммаВыручка КАК СуммаВыручка,
		      |	ТемпПродажи.СуммаВаловая КАК СуммаВаловая
		      |ИЗ
		      |	ТЕМППРОДАЖИ КАК ТемпПродажи
		      |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		      |			1 КАК АПаптеки,
		      |			Выборка.Товар КАК АПТовар,
		      |			Выборка.ГруппаАПИтог КАК ГруппаАПВМатрице
		      |		ИЗ
		      |			РегистрСведений.Матрица КАК Выборка
		      |		ГДЕ
		      |			Выборка.Аптека = &Аптека) КАК МатрицаАптеки
		      |		ПО ТемпПродажи.Товар = МатрицаАптеки.АПТовар
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ТЕМППРОДАЖИ";
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("КодАптеки",Аптека.Код);
		Запрос.УстановитьПараметр("Дата1",НачПериода);
		Запрос.УстановитьПараметр("Дата2",КонПериода);
		
		
		ТЗЗапроса = Запрос.Выполнить().Выгрузить();
		////--------------------------------	
		//Посчитаем общие суммы и количества
		КоличествоИтог	= ТЗЗапроса.Итог("Количество");
		СуммаВыручкаИтог = ТЗЗапроса.Итог("СуммаВыручка");
		СуммаВаловаяИтог = ТЗЗапроса.Итог("СуммаВаловая");
		
		//Посчитаем проценты
		Процентов80 = Окр(КоличествоИтог*ПроцентА/100,2);
		Процентов95 = Окр(КоличествоИтог*(ПроцентА + ПроцентБ)/100,2);
		
		ТЗЗапроса.Колонки.Добавить("ГруппаУпак");
		ТЗЗапроса.Колонки.Добавить("ГруппаВал");
		ТЗЗапроса.Колонки.Добавить("ГруппаВыр");
		//ТЗЗапроса.Колонки.Добавить("ГруппаИтог");
		
		//Считаем ABC по количеству
		ТЗЗапроса.Сортировать("Количество Убыв");
		
		//Состояние("Расчет ABC по количеству упаковок....");
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			Если стр.Количество = NULL Тогда
				Если стр.ГруппаИтог = "" 
					или стр.ГруппаИтог = "A" 
					или стр.ГруппаИтог = "B" 
					или стр.ГруппаИтог = "C" Тогда
					стр.ГруппаИтог = "D";
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			НакопительнаяСумма = НакопительнаяСумма + стр.Количество;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаУпак = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаУпак = "B";
			Иначе
				стр.ГруппаУпак = "C";
			КонецЕсли;
		КонецЦикла;
		
		//Считаем ABC по выручке
		Процентов80 = Окр(СуммаВыручкаИтог*ПроцентА/100,2);
		Процентов95 = Окр(СуммаВыручкаИтог*(ПроцентА + ПроцентБ)/100,2);	
		ТЗЗапроса.Сортировать("СуммаВыручка Убыв");
		
		//Состояние("Расчет ABC по сумме выручки....");
		//ЭлементыФормы.Индикатор.Значение = 0;
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			Если стр.Количество = NULL Тогда
				Продолжить;
			КонецЕсли;
			НакопительнаяСумма = НакопительнаяСумма + стр.СуммаВыручка;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаВыр = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаВыр = "B";
			Иначе
				стр.ГруппаВыр = "C";
			КонецЕсли;
		КонецЦикла;	
		
		
		//Считаем ABC по валовой прибыли
		Процентов80 = Окр(СуммаВаловаяИтог*ПроцентА/100,2);
		Процентов95 = Окр(СуммаВаловаяИтог*(ПроцентА + ПроцентБ)/100,2);	
		ТЗЗапроса.Сортировать("СуммаВаловая Убыв");
		
		//Состояние("Расчет ABC по сумме валовой прибыли....");
		
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			
			Если стр.Количество = NULL Тогда
				Продолжить;
			КонецЕсли;	
			
			НакопительнаяСумма = НакопительнаяСумма + стр.СуммаВаловая;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаВал = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаВал = "B";
			Иначе
				стр.ГруппаВал = "C";
			КонецЕсли;
		КонецЦикла;
		
		//Теперь пройдемся по ТЗ и определим итоговую группу АП
		МатрицаABC = Новый Структура;
		Выборка = Справочники.МатрицаABC.Выбрать();
		Пока Выборка.Следующий() Цикл
			МатрицаABC.Вставить(Выборка.ГруппаУпак + ""+Выборка.ГруппаПрибыль + "" + Выборка.ГруппаВыручка,Выборка.ГруппаИтог);
		КонецЦикла;
		
		//Состояние("Определение окончательной группы АП на основе матрицы ABC....");
		Для каждого стр из ТЗЗапроса Цикл
			
			Если стр.Количество = NULL Тогда
				Продолжить;
			КонецЕсли;
			Если стр.ГруппаИтог <> "" Тогда
				Продолжить;
			КонецЕсли;
			стр.ГруппаИтог = МатрицаABC[стр.ГруппаУпак + "" + стр.ГруппаВал + "" + стр.ГруппаВыр]; 
			
		КонецЦикла;
		
		//А теперь обновим в матрице то, что мы тут расчитали
		НачатьТранзакцию();
		номер = 0;
		//Состояние("Обновление групп АП в матрице аптеки....");
		
		МассивИзмерений = Новый Структура;
		МассивИзмерений.Вставить("Аптека",Аптека);	
		
		МассивИзменений = Новый Структура;
		МассивИзменений.Вставить("КтоВнесВМатрицу",ПараметрыСеанса.ТекущийСотр);
		
		//Блокировка = Новый БлокировкаДанных;
		//БлокировкаМатрицы = Блокировка.Добавить("РегистрСведений.Матрица");
		//БлокировкаМатрицы.УстановитьЗначение("Аптека",Аптека);
		//Для н=0 по 3 Цикл
		//Попытка
		//	Блокировка.Заблокировать();	
		//	Прервать;
		//Исключение
		//	ОбщегоНазначения.Задержка(2);
		//КонецПопытки;
		//КонецЦикла;
		
		
		Для каждого стр из ТЗЗапроса Цикл
			номер = номер + 1;
			
			
			Если стр.АПаптеки <> 1 Тогда
				Продолжить;
			КонецЕсли;
			Если стр.ГруппаИтог = стр.ГруппаАПВМатрице Тогда
				Продолжить;
			КонецЕсли;
			
			Если стр.ГруппаАПВМатрице = "I" или
				стр.ГруппаАПВМатрице = "S" или 
				стр.ГруппаАПВМатрице = "X" или
				стр.ГруппаАПВМатрице = "F" Тогда
				Продолжить;
			КонецЕсли;
			
			Если номер%100 = 0 Тогда
				ЗафиксироватьТранзакцию();
				НачатьТранзакцию();
			КонецЕсли;
			
			МассивИзмерений.Вставить("Товар",стр.АПТовар);
			
			МассивИзменений.Вставить("ГруппаАПИтог",стр.ГруппаИтог);
			МассивИзменений.Вставить("ДатаИзменения",ТекущаяДата());
			//Записываем изменения
			ОМ16_ИзменитьЗначениеВМатрице("Матрица",МассивИзмерений,МассивИзменений);		
			
		КонецЦикла;
		ЗафиксироватьТранзакцию();	
		
		ОбновитьДатуРасчетаКоэффициента(Аптека, "ABC");
		
	КонецЦикла;
	
	
	
КонецПроцедуры

Процедура РасчетABCИнтернетАптекВКодахОП(СписокАптек = Неопределено, ПараметрыРасчета = Неопределено) Экспорт
	
	Если ПараметрыРасчета = Неопределено Тогда
		НачПериода = НачалоДня(ТекущаяДата() - 60 * 86400);
		КонПериода = КонецДня(ТекущаяДата());
		ПроцентА = 70;
		ПроцентБ = 20;
	Иначе
		НачПериода = ПараметрыРасчета.НачПериода;
		КонПериода = ПараметрыРасчета.КонПериода;
		ПроцентА = ПараметрыРасчета.ПроцентА;
		ПроцентБ = ПараметрыРасчета.ПроцентБ;
	КонецЕсли;	
	
	
	
	Для Каждого Аптека Из СписокАптек Цикл
		
		

		
		ТХТ = "ВЫБРАТЬ
		      |	Выбор когда АП.КодОП > 0 Тогда АП.КодОП ИНАЧЕ Продажи.КодТовара КОНЕЦ КАК КодТовара,
		      |	Выбор когда АП.КодОП > 0 Тогда КодыОП.Ссылка ИНАЧЕ АП.Ссылка КОНЕЦ КАК Товар,
		      |	СУММА(Продажи.КоличествоОборот) КАК Количество,
		      |	СУММА(Продажи.СуммаПродажРознОборот) КАК СуммаВыручка,
		      |	СУММА(Продажи.СуммаПродажРознОборот - Продажи.СуммаПродажЗакупСНДСОборот) КАК СуммаВаловая
		      |ПОМЕСТИТЬ ТемпПродажи
		      |ИЗ
		      |	РегистрНакопления.ПродажиПоИнтернетАптекам.Обороты(&Дата1, &Дата2, , КодАптеки = &КодАптеки) КАК Продажи
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
		      |		ПО (АП.Код = Продажи.КодТовара)
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК КодыОП
		      |		ПО (КодыОП.КодОП = Продажи.КодТовара)
		      |
		      |СГРУППИРОВАТЬ ПО
		      |	Выбор когда АП.КодОП > 0 Тогда АП.КодОП ИНАЧЕ Продажи.КодТовара КОНЕЦ ,
		      |	Выбор когда АП.КодОП > 0 Тогда КодыОП.Ссылка ИНАЧЕ АП.Ссылка КОНЕЦ
		      |
		      |ИНДЕКСИРОВАТЬ ПО
		      |	Товар
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	МатрицаАптеки.ГруппаАПВМатрице КАК ГруппаАПВМатрице,
		      |	МатрицаАптеки.АПаптеки КАК АПаптеки,
		      |	МатрицаАптеки.АПТовар КАК АПТовар,
		      |	ВЫБОР
		      |		КОГДА ТемпПродажи.Товар ЕСТЬ NULL
		      |			ТОГДА ВЫБОР
		      |					КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ABCD]""
		      |						ТОГДА ""D""
		      |					КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ISXF]""
		      |						ТОГДА МатрицаАптеки.ГруппаАПВМатрице
		      |					ИНАЧЕ """"
		      |				КОНЕЦ
		      |		ИНАЧЕ ВЫБОР
		      |				КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ISXF]""
		      |					ТОГДА МатрицаАптеки.ГруппаАПВМатрице
		      |				ИНАЧЕ """"
		      |			КОНЕЦ
		      |	КОНЕЦ КАК ГруппаИтог,
		      |	ТемпПродажи.Количество КАК Количество,
		      |	ТемпПродажи.СуммаВыручка КАК СуммаВыручка,
		      |	ТемпПродажи.СуммаВаловая КАК СуммаВаловая
		      |ИЗ
		      |	ТемпПродажи КАК ТемпПродажи
		      |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		      |			1 КАК АПаптеки,
		      |			Выборка.Товар КАК АПТовар,
		      |			Выборка.ГруппаАПИтог КАК ГруппаАПВМатрице
		      |		ИЗ
		      |			РегистрСведений.Матрица КАК Выборка
		      |		ГДЕ
		      |			Выборка.Аптека = &Аптека) КАК МатрицаАптеки
		      |		ПО ТемпПродажи.Товар = МатрицаАптеки.АПТовар
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ТЕМППРОДАЖИ";
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("КодАптеки",Аптека.Код);
		Запрос.УстановитьПараметр("Дата1",НачПериода);
		Запрос.УстановитьПараметр("Дата2",КонПериода);
		
		
		ТЗЗапроса = Запрос.Выполнить().Выгрузить();
		////--------------------------------	
		//Посчитаем общие суммы и количества
		КоличествоИтог	= ТЗЗапроса.Итог("Количество");
		СуммаВыручкаИтог = ТЗЗапроса.Итог("СуммаВыручка");
		СуммаВаловаяИтог = ТЗЗапроса.Итог("СуммаВаловая");
		
		//Посчитаем проценты
		Процентов80 = Окр(КоличествоИтог*ПроцентА/100,2);
		Процентов95 = Окр(КоличествоИтог*(ПроцентА + ПроцентБ)/100,2);
		
		ТЗЗапроса.Колонки.Добавить("ГруппаУпак");
		ТЗЗапроса.Колонки.Добавить("ГруппаВал");
		ТЗЗапроса.Колонки.Добавить("ГруппаВыр");
		//ТЗЗапроса.Колонки.Добавить("ГруппаИтог");
		
		//Считаем ABC по количеству
		ТЗЗапроса.Сортировать("Количество Убыв");
		
		//Состояние("Расчет ABC по количеству упаковок....");
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			Если стр.Количество = NULL Тогда
				Если стр.ГруппаИтог = "" 
					или стр.ГруппаИтог = "A" 
					или стр.ГруппаИтог = "B" 
					или стр.ГруппаИтог = "C" Тогда
					стр.ГруппаИтог = "D";
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			НакопительнаяСумма = НакопительнаяСумма + стр.Количество;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаУпак = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаУпак = "B";
			Иначе
				стр.ГруппаУпак = "C";
			КонецЕсли;
		КонецЦикла;
		
		//Считаем ABC по выручке
		Процентов80 = Окр(СуммаВыручкаИтог*ПроцентА/100,2);
		Процентов95 = Окр(СуммаВыручкаИтог*(ПроцентА + ПроцентБ)/100,2);	
		ТЗЗапроса.Сортировать("СуммаВыручка Убыв");
		
		//Состояние("Расчет ABC по сумме выручки....");
		//ЭлементыФормы.Индикатор.Значение = 0;
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			Если стр.Количество = NULL Тогда
				Продолжить;
			КонецЕсли;
			НакопительнаяСумма = НакопительнаяСумма + стр.СуммаВыручка;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаВыр = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаВыр = "B";
			Иначе
				стр.ГруппаВыр = "C";
			КонецЕсли;
		КонецЦикла;	
		
		
		//Считаем ABC по валовой прибыли
		Процентов80 = Окр(СуммаВаловаяИтог*ПроцентА/100,2);
		Процентов95 = Окр(СуммаВаловаяИтог*(ПроцентА + ПроцентБ)/100,2);	
		ТЗЗапроса.Сортировать("СуммаВаловая Убыв");
		//
		////Состояние("Расчет ABC по сумме валовой прибыли....");
		//
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			
			Если стр.Количество = NULL Тогда
				Продолжить;
			КонецЕсли;	
			
			НакопительнаяСумма = НакопительнаяСумма + стр.СуммаВаловая;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаВал = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаВал = "B";
			Иначе
				стр.ГруппаВал = "C";
			КонецЕсли;
		КонецЦикла;
		
		//Теперь пройдемся по ТЗ и определим итоговую группу АП
		МатрицаABC = Новый Структура;
		Выборка = Справочники.МатрицаABC.Выбрать();
		Пока Выборка.Следующий() Цикл
			МатрицаABC.Вставить(Выборка.ГруппаУпак + ""+Выборка.ГруппаПрибыль + "" + Выборка.ГруппаВыручка,Выборка.ГруппаИтог);
		КонецЦикла;
		
		//Состояние("Определение окончательной группы АП на основе матрицы ABC....");
		Для каждого стр из ТЗЗапроса Цикл
			
			Если стр.Количество = NULL Тогда
				Продолжить;
			КонецЕсли;
			Если стр.ГруппаИтог <> "" Тогда
				Продолжить;
			КонецЕсли;
			стр.ГруппаИтог = МатрицаABC[стр.ГруппаУпак + "" + стр.ГруппаВал + "" + стр.ГруппаВыр]; 
			
		КонецЦикла;
		
		//А теперь обновим в матрице то, что мы тут расчитали
		НачатьТранзакцию();
		номер = 0;
		//Состояние("Обновление групп АП в матрице аптеки....");
		
		МассивИзмерений = Новый Структура;
		МассивИзмерений.Вставить("Аптека",Аптека);	
		
		МассивИзменений = Новый Структура;
		МассивИзменений.Вставить("КтоВнесВМатрицу",ПараметрыСеанса.ТекущийСотр);
		
		
		Для каждого стр из ТЗЗапроса Цикл
			номер = номер + 1;
			
			
			Если стр.АПаптеки <> 1 Тогда
				Продолжить;
			КонецЕсли;
			Если стр.ГруппаИтог = стр.ГруппаАПВМатрице Тогда
				Продолжить;
			КонецЕсли;
			
			Если стр.ГруппаАПВМатрице = "I" или
				стр.ГруппаАПВМатрице = "S" или 
				стр.ГруппаАПВМатрице = "X" или
				стр.ГруппаАПВМатрице = "F" Тогда
				Продолжить;
			КонецЕсли;
			
			Если номер%100 = 0 Тогда
				ЗафиксироватьТранзакцию();
				НачатьТранзакцию();
			КонецЕсли;
			
			МассивИзмерений.Вставить("Товар",стр.АПТовар);
			
			МассивИзменений.Вставить("ГруппаАПИтог",стр.ГруппаИтог);
			МассивИзменений.Вставить("ДатаИзменения",ТекущаяДата());
			//Записываем изменения
			ОМ16_ИзменитьЗначениеВМатрице("Матрица",МассивИзмерений,МассивИзменений);		
			
		КонецЦикла;
		ЗафиксироватьТранзакцию();	
		
		//ОбновитьДатуРасчетаКоэффициента(Аптека, "ABC");
		
	КонецЦикла;
	
	
	
КонецПроцедуры

Процедура РасчетABCИнтернетАптек(СписокАптек = Неопределено, ПараметрыРасчета = Неопределено) Экспорт
	
	Если ПараметрыРасчета = Неопределено Тогда
		НачПериода = НачалоДня(ТекущаяДата() - 60 * 86400);
		КонПериода = КонецДня(ТекущаяДата());
		ПроцентА = 70;
		ПроцентБ = 20;
	Иначе
		НачПериода = ПараметрыРасчета.НачПериода;
		КонПериода = ПараметрыРасчета.КонПериода;
		ПроцентА = ПараметрыРасчета.ПроцентА;
		ПроцентБ = ПараметрыРасчета.ПроцентБ;
	КонецЕсли;	
	
	
	
	Для Каждого Аптека Из СписокАптек Цикл
		
		

		
		ТХТ = "ВЫБРАТЬ
		      |	Продажи.КодТовара КАК КодТовара,
		      |	АП.Ссылка КАК Товар,
		      |	СУММА(Продажи.КоличествоОборот) КАК Количество,
		      |	СУММА(Продажи.СуммаПродажРознОборот) КАК СуммаВыручка,
		      |	СУММА(Продажи.СуммаПродажРознОборот - Продажи.СуммаПродажЗакупСНДСОборот) КАК СуммаВаловая
		      |ПОМЕСТИТЬ ТемпПродажи
		      |ИЗ
		      |	РегистрНакопления.ПродажиПоИнтернетАптекам.Обороты(&Дата1, &Дата2, , КодАптеки = &КодАптеки) КАК Продажи
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
		      |		ПО (АП.Код = Продажи.КодТовара)
		      |
		      |СГРУППИРОВАТЬ ПО
		      |	Продажи.КодТовара,
		      |	АП.Ссылка
		      |
		      |ИНДЕКСИРОВАТЬ ПО
		      |	Товар
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	МатрицаАптеки.ГруппаАПВМатрице КАК ГруппаАПВМатрице,
		      |	МатрицаАптеки.АПаптеки КАК АПаптеки,
		      |	МатрицаАптеки.АПТовар КАК АПТовар,
		      |	ВЫБОР
		      |		КОГДА ТемпПродажи.Товар ЕСТЬ NULL
		      |			ТОГДА ВЫБОР
		      |					КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ABCD]""
		      |						ТОГДА ""D""
		      |					КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ISXF]""
		      |						ТОГДА МатрицаАптеки.ГруппаАПВМатрице
		      |					ИНАЧЕ """"
		      |				КОНЕЦ
		      |		ИНАЧЕ ВЫБОР
		      |				КОГДА МатрицаАптеки.ГруппаАПВМатрице ПОДОБНО ""[ISXF]""
		      |					ТОГДА МатрицаАптеки.ГруппаАПВМатрице
		      |				ИНАЧЕ """"
		      |			КОНЕЦ
		      |	КОНЕЦ КАК ГруппаИтог,
		      |	ТемпПродажи.Количество КАК Количество,
		      |	ТемпПродажи.СуммаВыручка КАК СуммаВыручка,
		      |	ТемпПродажи.СуммаВаловая КАК СуммаВаловая
		      |ИЗ
		      |	ТемпПродажи КАК ТемпПродажи
		      |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		      |			1 КАК АПаптеки,
		      |			Выборка.Товар КАК АПТовар,
		      |			Выборка.ГруппаАПИтог КАК ГруппаАПВМатрице
		      |		ИЗ
		      |			РегистрСведений.Матрица КАК Выборка
		      |		ГДЕ
		      |			Выборка.Аптека = &Аптека) КАК МатрицаАптеки
		      |		ПО ТемпПродажи.Товар = МатрицаАптеки.АПТовар
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ТЕМППРОДАЖИ";
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("КодАптеки",Аптека.Код);
		Запрос.УстановитьПараметр("Дата1",НачПериода);
		Запрос.УстановитьПараметр("Дата2",КонПериода);
		
		
		ТЗЗапроса = Запрос.Выполнить().Выгрузить();
		////--------------------------------	
		//Посчитаем общие суммы и количества
		КоличествоИтог	= ТЗЗапроса.Итог("Количество");
		СуммаВыручкаИтог = ТЗЗапроса.Итог("СуммаВыручка");
		СуммаВаловаяИтог = ТЗЗапроса.Итог("СуммаВаловая");
		
		//Посчитаем проценты
		Процентов80 = Окр(КоличествоИтог*ПроцентА/100,2);
		Процентов95 = Окр(КоличествоИтог*(ПроцентА + ПроцентБ)/100,2);
		
		ТЗЗапроса.Колонки.Добавить("ГруппаУпак");
		ТЗЗапроса.Колонки.Добавить("ГруппаВал");
		ТЗЗапроса.Колонки.Добавить("ГруппаВыр");
		//ТЗЗапроса.Колонки.Добавить("ГруппаИтог");
		
		//Считаем ABC по количеству
		ТЗЗапроса.Сортировать("Количество Убыв");
		
		//Состояние("Расчет ABC по количеству упаковок....");
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			Если стр.Количество = NULL Тогда
				Если стр.ГруппаИтог = "" 
					или стр.ГруппаИтог = "A" 
					или стр.ГруппаИтог = "B" 
					или стр.ГруппаИтог = "C" Тогда
					стр.ГруппаИтог = "D";
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			НакопительнаяСумма = НакопительнаяСумма + стр.Количество;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаУпак = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаУпак = "B";
			Иначе
				стр.ГруппаУпак = "C";
			КонецЕсли;
		КонецЦикла;
		
		//Считаем ABC по выручке
		Процентов80 = Окр(СуммаВыручкаИтог*ПроцентА/100,2);
		Процентов95 = Окр(СуммаВыручкаИтог*(ПроцентА + ПроцентБ)/100,2);	
		ТЗЗапроса.Сортировать("СуммаВыручка Убыв");
		
		//Состояние("Расчет ABC по сумме выручки....");
		//ЭлементыФормы.Индикатор.Значение = 0;
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			Если стр.Количество = NULL Тогда
				Продолжить;
			КонецЕсли;
			НакопительнаяСумма = НакопительнаяСумма + стр.СуммаВыручка;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаВыр = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаВыр = "B";
			Иначе
				стр.ГруппаВыр = "C";
			КонецЕсли;
		КонецЦикла;	
		
		
		//Считаем ABC по валовой прибыли
		Процентов80 = Окр(СуммаВаловаяИтог*ПроцентА/100,2);
		Процентов95 = Окр(СуммаВаловаяИтог*(ПроцентА + ПроцентБ)/100,2);	
		ТЗЗапроса.Сортировать("СуммаВаловая Убыв");
		//
		////Состояние("Расчет ABC по сумме валовой прибыли....");
		//
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			
			Если стр.Количество = NULL Тогда
				Продолжить;
			КонецЕсли;	
			
			НакопительнаяСумма = НакопительнаяСумма + стр.СуммаВаловая;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаВал = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаВал = "B";
			Иначе
				стр.ГруппаВал = "C";
			КонецЕсли;
		КонецЦикла;
		
		//Теперь пройдемся по ТЗ и определим итоговую группу АП
		МатрицаABC = Новый Структура;
		Выборка = Справочники.МатрицаABC.Выбрать();
		Пока Выборка.Следующий() Цикл
			МатрицаABC.Вставить(Выборка.ГруппаУпак + ""+Выборка.ГруппаПрибыль + "" + Выборка.ГруппаВыручка,Выборка.ГруппаИтог);
		КонецЦикла;
		
		//Состояние("Определение окончательной группы АП на основе матрицы ABC....");
		Для каждого стр из ТЗЗапроса Цикл
			
			Если стр.Количество = NULL Тогда
				Продолжить;
			КонецЕсли;
			Если стр.ГруппаИтог <> "" Тогда
				Продолжить;
			КонецЕсли;
			стр.ГруппаИтог = МатрицаABC[стр.ГруппаУпак + "" + стр.ГруппаВал + "" + стр.ГруппаВыр]; 
			
		КонецЦикла;
		
		//А теперь обновим в матрице то, что мы тут расчитали
		НачатьТранзакцию();
		номер = 0;
		//Состояние("Обновление групп АП в матрице аптеки....");
		
		МассивИзмерений = Новый Структура;
		МассивИзмерений.Вставить("Аптека",Аптека);	
		
		МассивИзменений = Новый Структура;
		МассивИзменений.Вставить("КтоВнесВМатрицу",ПараметрыСеанса.ТекущийСотр);
		
		
		Для каждого стр из ТЗЗапроса Цикл
			номер = номер + 1;
			
			
			Если стр.АПаптеки <> 1 Тогда
				Продолжить;
			КонецЕсли;
			Если стр.ГруппаИтог = стр.ГруппаАПВМатрице Тогда
				Продолжить;
			КонецЕсли;
			
			Если стр.ГруппаАПВМатрице = "I" или
				стр.ГруппаАПВМатрице = "S" или 
				стр.ГруппаАПВМатрице = "X" или
				стр.ГруппаАПВМатрице = "F" Тогда
				Продолжить;
			КонецЕсли;
			
			Если номер%100 = 0 Тогда
				ЗафиксироватьТранзакцию();
				НачатьТранзакцию();
			КонецЕсли;
			
			МассивИзмерений.Вставить("Товар",стр.АПТовар);
			
			МассивИзменений.Вставить("ГруппаАПИтог",стр.ГруппаИтог);
			МассивИзменений.Вставить("ДатаИзменения",ТекущаяДата());
			//Записываем изменения
			ОМ16_ИзменитьЗначениеВМатрице("Матрица",МассивИзмерений,МассивИзменений);		
			
		КонецЦикла;
		ЗафиксироватьТранзакцию();	
		
		//ОбновитьДатуРасчетаКоэффициента(Аптека, "ABC");
		
	КонецЦикла;
	
	
	
КонецПроцедуры



Функция РассчитатьQminQmaxДляАптеки(ТЗЗапроса,Аптека,ПараметрыРасчета) Экспорт
	

	КоэффициентПоставщика			= ПараметрыРасчета.КоэффициентПоставщика;
	МинимальныйПорогСреднейСкорости = ПараметрыРасчета.МинимальныйПорогСреднейСкорости;
	ПорогСреднейСкорости			= ПараметрыРасчета.ПорогСреднейСкорости;

	Ксз								= ПараметрыРасчета.Ксз;
	Куп								= ПараметрыРасчета.Куп;
	УчитыватьНЗ						= Истина;
	ТаблицаПравил					= ПараметрыРасчета.ТаблицаПравил;
	ТаблицаЗапасов					= ПараметрыРасчета.ТаблицаЗапасов;
	
	МинСкорость0					= ПараметрыРасчета.МинСкорость0;
	МаксСкорость0					= ПараметрыРасчета.МаксСкорость0;	
	ТаблицаПравилНаОченьПлохойСкорости = ПараметрыРасчета.ТаблицаПравилНаОченьПлохойСкорости;
	ТаблицаКоэффициентовВыкладки	= ПараметрыРасчета.ТаблицаКоэффициентовВыкладки;
	УвеличениеДнейПотребностиДляКуМакс2ГруппаA = ПараметрыРасчета.УвеличениеДнейПотребностиДляКуМакс2ГруппаA;
	УвеличениеДнейПотребностиДляКуМакс2ГруппаBC = ПараметрыРасчета.УвеличениеДнейПотребностиДляКуМакс2ГруппаBC;
	КоэффициентКуМакс2НаПлохихСкоростях = ПараметрыРасчета.КоэффициентКуМакс2НаПлохихСкоростях;
	
	//ВозвращатьПромежуточныеТаблицы = ПараметрыРасчета.ВозвращатьПромежуточныеТаблицы;
	ВозвращатьПромежуточныеТаблицы = Ложь;
	
	           
		//Дальше идет расчет Qmin  и Qmax
		
			ТХТ = "ВЫБРАТЬ
			      |	Т.Код,
			      |	Т.СредняяСкорость,
			      |	Т.Цена КАК Цена,
			      |	Т.ЕдиницаДляСвертки КАК ДнейПродаж,
			      |	ПОДСТРОКА(Т.ГруппаXYZ, 1, 1) КАК ГруппаXYZ
			      |ПОМЕСТИТЬ ВТ_0
			      |ИЗ
			      |	&Таб КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВТ_0.Код,
			      |	СУММА(ВТ_0.СредняяСкорость) КАК СредняяСкорость,
			      |	ВТ_0.Цена КАК Цена,
			      |	СУММА(ВТ_0.ДнейПродаж) КАК ДнейПродаж,
			      |	МАКСИМУМ(ВТ_0.ГруппаXYZ) КАК ГруппаXYZ
			      |ПОМЕСТИТЬ ВТ_1
			      |ИЗ
			      |	ВТ_0 КАК ВТ_0
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВТ_0.Код,
			      |	ВТ_0.Цена
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ВТ_0.Код
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар.Код КАК КодТовара,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ
			      |ПОМЕСТИТЬ ВыборкаНЗ
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
				  |	И НЕ МатрицаНЗ.ВидНЗ = ЗНАЧЕНИЕ(Перечисление.ВидыНЗ.НЗ_6)
				  //|	И НЕ МатрицаНЗ.ВидНЗ в (&ВидыНЗ) 
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар.Код
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Т.Код,
			      |	АП.Наименование КАК Товар,
			      |	АП.Ссылка КАК ТоварСсылка,
				  |	ЕСТЬNULL(АП.МестоХранения.Выкладка,0) как ТоварНаВыкладке,
			      |	Матрица.КуМин КАК МатрицаКуМин,
			      |	Матрица.КуМакс КАК МатрицаКуМакс,
				  |	Матрица.КуМакс2 КАК МатрицаКуМакс2,
			      |	ЕСТЬNULL(ВыборкаНЗ.НЗ, 0) КАК МатрицаНЗ,
			      |	Матрица.ГруппаАПИтог КАК ГруппаАП,
			      |	ВЫБОР
			      |		КОГДА Т.Цена = 0
			      |			ТОГДА Выбор когда АП.ЗакупочнаяЦена > 0 Тогда АП.ЗакупочнаяЦена Иначе 500 КОНЕЦ
			      |		ИНАЧЕ Т.Цена
			      |	КОНЕЦ КАК Цена,
			      |	Т.СредняяСкорость КАК СредняяСкорость,
			      |	Т.ГруппаXYZ,
			      |	ВЫБОР
			      |		КОГДА АП.Поставщик = &ПустойПоставщик
			      |			ТОГДА 1
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ПустойПоставщик,
			      |	0 КАК КуМинРасчет,
			      |	0 КАК КуМаксРасчет,
				  |	0 КАК КуМаксРасчет2,
			      |	Т.ДнейПродаж,
			      |	ЕСТЬNULL(ПерестокАптек.Пересток, 0) КАК Пересток,
			      |	АП.Сезон
			      |ПОМЕСТИТЬ Выборка
			      |ИЗ
			      |	ВТ_1 КАК Т
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Матрица КАК Матрица
			      |		ПО (Матрица.Аптека = &Аптека)
			      |			И (Матрица.Товар.Код = Т.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = Т.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПерестокАптек КАК ПерестокАптек
			      |		ПО (ПерестокАптек.Аптека = &Аптека)
			      |			И (ПерестокАптек.Товар.Код = Т.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ КАК ВыборкаНЗ
			      |		ПО Т.Код = ВыборкаНЗ.КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Выборка.Код,
			      |	Выборка.Товар,
			      |	Выборка.ТоварСсылка,
				  |	Выборка.ТоварНаВыкладке,
			      |	Выборка.МатрицаКуМин,
			      |	Выборка.МатрицаКуМакс,
				  |	Выборка.МатрицаКуМакс2,
			      |	Выборка.МатрицаНЗ,
			      |	Выборка.ГруппаАП,
			      |	Выборка.Цена,
			      |	Выборка.СредняяСкорость,
			      |	Выборка.ГруппаXYZ,
			      |	Выборка.ПустойПоставщик,
			      |	Выборка.КуМинРасчет,
			      |	Выборка.КуМаксРасчет,
				  |	Выборка.КуМаксРасчет2,
			      |	Выборка.ДнейПродаж,
			      |	Выборка.Пересток,
			      |	ЕСТЬNULL(МатрицаСезоны.К" + Месяц(ТекущаяДата()) + ", 1) КАК КоэффСезон,
			      |	ЛОЖЬ КАК Изменение
			      |ИЗ
			      |	Выборка КАК Выборка
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сезоны.Коэффициенты КАК МатрицаСезоны
			      |		ПО (МатрицаСезоны.Ссылка = Выборка.Сезон)
			      |			И (МатрицаСезоны.ГруппаАП = Выборка.ГруппаАП)
			      |			И (Выборка.Цена МЕЖДУ МатрицаСезоны.ЦенаМин И МатрицаСезоны.ЦенаМакс)
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ_0
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВЫБОРКА
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ_1";
			
	    //|		КОГДА (Выборка.Остаток <= Выборка.КуМин) и (Выборка.ГруппаАП <> ""I"")  
	 	Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("Таб",ТЗЗапроса);
		Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
		Запрос.УстановитьПараметр("ПустойПоставщик",Справочники.Поставщики.ПустаяСсылка());
		
		ВидыНЗ = Новый СписокЗначений;
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_4);
		//ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_5);
		
		Запрос.УстановитьПараметр("ВидыНЗ",ВидыНЗ);




		//ТЗЗапроса = Неопределено ;
		ТЗ = Запрос.Выполнить().Выгрузить();			
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		
		КоличествоСтрок = ТЗ.Количество();
		
		Для каждого стр из ТЗ Цикл
			//Если стр.Периоды < 4 Тогда
			//	Продолжить;
			//КонецЕсли;
			СредняяСкорость = стр.СредняяСкорость;
			Цена = ?(стр.Цена=0,500,стр.Цена);
			ГруппаАП = стр.ГруппаАП;
			
			s=7; p=7; //Значения по умолчанию, на случай, если ни одно правило не выполнится
			//Получим коэффициенты нормативов
			Для каждого строкаТЗ из ТаблицаЗапасов Цикл
				Если Цена >= СтрокаТЗ.ЦенаМин и Цена < СтрокаТЗ.ЦенаМакс Тогда
					Если  СредняяСкорость >= СтрокаТЗ.СкоростьМин и СредняяСкорость < СтрокаТЗ.СкоростьМакс Тогда
						s = СтрокаТЗ.СтраховойЗапас;
						p = СтрокаТЗ.Потребность;
						Прервать;
					КонецЕсли;
				КонецЕсли; 
			КонецЦикла;
			
			
			Если стр.ПустойПоставщик = 0 Тогда
				p = p*КоэффициентПоставщика;
			КонецЕсли;
			
			s = s * стр.КоэффСезон;
			p = p * стр.КоэффСезон;
			
			//Корректировка страхового запаса по матрица коэфициентов выкладки
			Если стр.ТоварНаВыкладке Тогда
				Отбор = Новый Структура();
				Отбор.Вставить("ГруппаАП",ГруппаАП);
				Строки = ТаблицаКоэффициентовВыкладки.НайтиСтроки(Отбор);
				Если Строки.Количество() > 0 Тогда
					Для каждого СтрокаТЗ из Строки Цикл
						Если Цена >= СтрокаТЗ.ЦенаМин и Цена < СтрокаТЗ.ЦенаМакс Тогда
							s = s*СтрокаТЗ.Коэфф;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;			
			КонецЕсли;
			
			Если стр.ГруппаXYZ = "X" Тогда
				Kxyz = 0.8;
			ИначеЕсли стр.ГруппаXYZ = "Y" Тогда
				Kxyz = 1;				
			ИначеЕсли стр.ГруппаXYZ = "Z" Тогда
				Kxyz = 1.3;				
			//ИначеЕсли стр.ГруппаXYZ = "W" Тогда
			//	Kxyz = 1.5;								
			Иначе
				Kxyz = 1;
			КонецЕсли;
				
			//Расчет непосредственный 
			Если ((СредняяСкорость >= МинимальныйПорогСреднейСкорости) и  (СредняяСкорость < ПорогСреднейСкорости)) или (СредняяСкорость <1 и стр.ДнейПродаж<7) Тогда  //Если Скорость недостоверна
				
				Отбор = Новый Структура();
				Отбор.Вставить("ГруппаАП",ГруппаАП);
				Отбор.Вставить("ГруппаXYZ",стр.ГруппаXYZ);
				Строки = ТаблицаПравил.НайтиСтроки(Отбор);
				Если Строки.Количество() > 0 Тогда
					Для каждого СтрокаТЗ из Строки Цикл
						Если Цена >= СтрокаТЗ.ЦенаМин и Цена < СтрокаТЗ.ЦенаМакс Тогда
							стр.КуМинРасчет = Окр(СтрокаТЗ.Qmin + (СтрокаТЗ.Qmin*стр.Пересток/10));
							стр.КуМаксРасчет = Окр(СтрокаТЗ.Qmax+ (СтрокаТЗ.Qmin*стр.Пересток/10));
							стр.КуМаксРасчет2 = Окр(стр.КуМаксРасчет*КоэффициентКуМакс2НаПлохихСкоростях);
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;				
			ИначеЕсли СредняяСкорость >=МинСкорость0 и СредняяСкорость < МаксСкорость0 Тогда   //Если очень плохая скорость, но еще не 0
				
				Отбор = Новый Структура();
				Отбор.Вставить("ГруппаАП",ГруппаАП);
				Строки = ТаблицаПравилНаОченьПлохойСкорости.НайтиСтроки(Отбор);
				Если Строки.Количество() > 0 Тогда
					Для каждого СтрокаТЗ из Строки Цикл
						Если Цена >= СтрокаТЗ.ЦенаМин и Цена < СтрокаТЗ.ЦенаМакс Тогда
							стр.КуМинРасчет = СтрокаТЗ.Qmin;
							стр.КуМаксРасчет = СтрокаТЗ.Qmax;
							стр.КуМаксРасчет2 = Окр(стр.КуМаксРасчет*КоэффициентКуМакс2НаПлохихСкоростях);
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;				
				
			ИначеЕсли СредняяСкорость >= ПорогСреднейСкорости Тогда //Если скорость достоверна ( хорошая)
				Если ГруппаАП = "A" или ГруппаАП = "B" или ГруппаАП = "C" Тогда
					стр.КуМинРасчет = СредняяСкорость*(1+(s*Ксз+стр.Пересток));
					стр.КуМаксРасчет = СредняяСкорость*(1+(s*Ксз + стр.Пересток)+((p+Куп)*Ксз));
					
					Если ГруппаАП = "A" Тогда
						стр.КуМаксРасчет2 = СредняяСкорость*(1+(s*Ксз + стр.Пересток)+((p+ УвеличениеДнейПотребностиДляКуМакс2ГруппаA+Куп)*Ксз));
					Иначе
						стр.КуМаксРасчет2 = СредняяСкорость*(1+(s*Ксз + стр.Пересток)+((p+ УвеличениеДнейПотребностиДляКуМакс2ГруппаBC+Куп)*Ксз));
					КонецЕсли;
					
					Если стр.КуМинРасчет < 1 Тогда
						стр.КуМинРасчет = ОкруглениеВБольшую(стр.КуМинРасчет);
						стр.КуМаксРасчет = ОкруглениеВБольшую(стр.КуМаксРасчет);
						стр.КуМаксРасчет2 = ОкруглениеВБольшую(стр.КуМаксРасчет2);
					Иначе
						стр.КуМинРасчет = Окр(стр.КуМинРасчет,0);
						стр.КуМаксРасчет = Окр(стр.КуМаксРасчет,0);
						стр.КуМаксРасчет2 = Окр(стр.КуМаксРасчет2,0);
					КонецЕсли;						
				КонецЕсли;
				
				
			ИначеЕсли СредняяСкорость < МинСкорость0 Тогда  //было СредняяСкорость > 0 и СредняяСкорость <= МинимальныйПорогСреднейСкорости
				 		стр.КуМинРасчет = 1;
						стр.КуМаксРасчет = 1;
						стр.КуМаксРасчет2 = 1;
			КонецЕсли;
					
			стр.КуМинРасчет = ?(стр.КуМинРасчет <= 0,1,стр.КуМинРасчет);
			стр.КуМаксРасчет = ?(стр.КуМаксРасчет <= 0,1,стр.КуМаксРасчет);
			стр.КуМаксРасчет2 = ?(стр.КуМаксРасчет2 <= 0,1,стр.КуМаксРасчет2);

			
			// Рассчитали Qmin Qmax  
			// Далее корректируем , если это необходимо
			
			
			Если УчитыватьНЗ = Истина Тогда					
				//Корректируем Кумин и Кумакс с учетом незжимаемого запаса аптеки
				Если ГруппаАП = "A" или ГруппаАП = "B" или ГруппаАП = "C" или ГруппаАП = "D" Тогда
					Если стр.КуМинРасчет <= стр.МатрицаНЗ Тогда
						стр.КуМинРасчет = стр.МатрицаНЗ;
						Если стр.КуМаксРасчет < стр.МатрицаНЗ Тогда
							стр.КуМаксРасчет = стр.МатрицаНЗ;
						КонецЕсли;
						Если стр.КуМаксРасчет2 < стр.МатрицаНЗ Тогда
							стр.КуМаксРасчет2 = стр.МатрицаНЗ;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если (стр.МатрицаКумин <> стр.КуМинРасчет) или (стр.МатрицаКуМакс <> стр.КуМаксРасчет) или (стр.МатрицаКуМакс2 <> стр.КуМаксРасчет2) Тогда
				стр.Изменение = Истина;	
			КонецЕсли;
			
		КонецЦикла;
		

		//Запишем изменения по Ку-Ку в регистр матрицы
		Отбор = Новый структура();
		Отбор.Вставить("Изменение",Истина);
		
		ТЗИзменений = ТЗ.Скопировать(Отбор,"ТоварСсылка,КуМинРасчет,КуМаксРасчет,КуМаксРасчет2");
		
		
		ТекСотрудник = ПараметрыСеанса.ТекущийСотр;
		ДатаИзменения = ТекущаяДата();
		
		РезультатЗаписи = Ложь;
		н=0;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Т.ТоварСсылка КАК ТоварСсылка,
		               |	Т.КуМинРасчет КАК КуМинРасчет,
		               |	Т.КуМаксРасчет КАК КуМаксРасчет,
		               |	Т.КуМаксРасчет2 КАК КуМаксРасчет2
		               |ПОМЕСТИТЬ Выборка
		               |ИЗ
		               |	&Таб КАК Т
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Т.ТоварСсылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	&Аптека КАК Аптека,
		               |	Матрица.Товар КАК Товар,
		               |	Матрица.ГруппаXYZ КАК ГруппаXYZ,
		               |	Матрица.ГруппаАПИтог КАК ГруппаАПИтог,
		               |	ЕСТЬNULL(Выборка.КуМинРасчет, Матрица.КуМин) КАК КуМин,
		               |	ЕСТЬNULL(Выборка.КуМаксРасчет, Матрица.КуМакс) КАК КуМакс,
		               |	ЕСТЬNULL(Выборка.КуМаксРасчет2, Матрица.КуМакс2) КАК КуМакс2,
		               |	ВЫБОР
		               |		КОГДА Выборка.КуМинРасчет ЕСТЬ NULL
		               |			ТОГДА Матрица.КтоВнесВМатрицу
		               |		ИНАЧЕ &КтоВнесВМатрицу
		               |	КОНЕЦ КАК КтоВнесВМатрицу,
		               |	Матрица.ДатаВнесенияВМатрицу КАК ДатаВнесенияВМатрицу,
		               |	ВЫБОР
		               |		КОГДА Выборка.КуМинРасчет ЕСТЬ NULL
		               |			ТОГДА Матрица.ДатаИзменения
		               |		ИНАЧЕ &ДатаИзменения
		               |	КОНЕЦ КАК ДатаИзменения,
		               |	Матрица.СтоимостьСборки КАК СтоимостьСборки
		               |ИЗ
		               |	РегистрСведений.Матрица КАК Матрица
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Выборка КАК Выборка
		               |		ПО (Выборка.ТоварСсылка = Матрица.Товар)
		               |ГДЕ
		               |	Матрица.Аптека = &Аптека
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ Выборка";
		
					   Запрос.УстановитьПараметр("Таб",ТЗИзменений);
					   
					   Запрос.УстановитьПараметр("Аптека",Аптека);
					   Запрос.УстановитьПараметр("ДатаИзменения",ДатаИзменения);
					   Запрос.УстановитьПараметр("КтоВнесВМатрицу",ТекСотрудник);


		ТЗМатрица = Запрос.Выполнить().Выгрузить();
		Набор = РегистрыСведений.Матрица.СоздатьНаборЗаписей();
		Набор.Отбор.Аптека.Установить(Аптека);	
		Набор.Загрузить(ТЗМатрица);
		Попытка
			Набор.Записать();
			РезультатЗаписи = Истина;
		Исключение
			ОтменитьТранзакцию();
			МЗ = РегистрыСведений.ЛогОшибокОбработок.СоздатьМенеджерЗаписи();
			МЗ.Объект = "Автозаказ";
			МЗ.ДатаОшибки = ТекущаяДата();
			МЗ.КодАптеки = Аптека.Код;
			МЗ.ОписаниеОшибки = ОписаниеОшибки();
			МЗ.МестоВозникновения = "РасчетКмн:1179";
			МЗ.Записать();			
			#Если Клиент Тогда
				Сообщить("не удалось изменить записи в Матрице. Ошибка:  " + ОписаниеОшибки() );	
			#КонецЕсли
		КонецПопытки;
		
		//НачатьТранзакцию();  //РежимУправленияБлокировкойДанных.Управляемый
		//Попытка
		//	// Блокировка данных
		//	//текБлокировка = Новый БлокировкаДанных;
		//	//БлокРегистра = текБлокировка.Добавить("РегистрСведений.Матрица");
		//	//БлокРегистра.Режим = РежимБлокировкиДанных.Исключительный;
		//	//БлокРегистра.УстановитьЗначение("Аптека",Аптека);
		//	//БлокРегистра.ИсточникДанных = ТЗИзменений;
		//	//БлокРегистра.ИспользоватьИзИсточникаДанных("Товар", "ТоварСсылка");
		//	//
		//	//// Заблокировать
		//	//текБлокировка.Заблокировать();
		//	
		//	текЗапись = РегистрыСведений.Матрица.СоздатьМенеджерЗаписи();
		//	текЗапись.Аптека = Аптека;
		//	
		//	Для каждого стр из ТЗИзменений цикл
		//		н=н+1;
		//		текЗапись.Товар = стр.ТоварСсылка;
		//		текЗапись.Прочитать();
		//		
		//		Если ТекЗапись.Выбран() Тогда
		//			текЗапись.КуМин = стр.КуМинРасчет;
		//			текЗапись.КуМакс = стр.КуМаксРасчет;
		//			текЗапись.КуМакс2 = стр.КуМаксРасчет2;
		//			текЗапись.КтоВнесВМатрицу = ТекСотрудник;
		//			текЗапись.ДатаИзменения = ДатаИзменения;
		//			ТекЗапись.Записать();
		//		КонецЕсли;
		//		Если н%300= 0 Тогда
		//			ЗафиксироватьТранзакцию();
		//			НачатьТранзакцию();
		//		КонецЕсли;
		//	КонецЦикла;	
		//	
		//	ЗафиксироватьТранзакцию();
		//	РезультатЗаписи = Истина;
		//Исключение
		//	ОтменитьТранзакцию();
		//	МЗ = РегистрыСведений.ЛогОшибокОбработок.СоздатьМенеджерЗаписи();
		//	МЗ.Объект = "Автозаказ";
		//	МЗ.ДатаОшибки = ТекущаяДата();
		//	МЗ.КодАптеки = Аптека.Код;
		//	МЗ.ОписаниеОшибки = ОписаниеОшибки();
		//	МЗ.МестоВозникновения = "РасчетКмн:1179";
		//	МЗ.Записать();			
		//	#Если Клиент Тогда
		//		Сообщить("не удалось изменить записи в Матрице. Ошибка:  " + ОписаниеОшибки() );	
		//	#КонецЕсли
		//КонецПопытки;
		
		Если РезультатЗаписи = Истина Тогда
			ОбновитьДатуРасчетаКоэффициента(Аптека, "QminQmax");
		КонецЕсли;
		
		Если ВозвращатьПромежуточныеТаблицы = Истина Тогда
			Возврат ТЗ;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		
		
		
		//ТХТ = "ВЫБРАТЬ
		//	  |	Матрица.Аптека,
		//	  |	Матрица.Товар,
		//	  |	Матрица.ГруппаXYZ,
		//	  |	Матрица.ГруппаАПИтог,
		//	  |	Матрица.КуМин,
		//	  |	Матрица.КуМакс,
		//	  |	Матрица.КтоВнесВМатрицу,
		//	  |	Матрица.ДатаВнесенияВМатрицу,
		//	  |	Матрица.ДатаИзменения,
		//	  |	Матрица.Товар.Код как КодТовара
		//	  |ИЗ
		//	  |	РегистрСведений.Матрица КАК Матрица
		//	  |ГДЕ
		//	  |	Матрица.Аптека = &Аптека";
		//ЗапросМ = Новый Запрос;
		//ЗапросМ.Текст = ТХТ;
		//ЗапросМ.УстановитьПараметр("Аптека",Аптека);
		//ТЗМатрица = ЗапросМ.Выполнить().Выгрузить();
		//ТЗМатрица.Индексы.Добавить("КодТовара");
		//

		//
		//
		//МассивИзмерений = Новый Структура;
		//МассивИзмерений.Вставить("Аптека",Аптека);
		//
		//МассивИзменений = Новый Структура;
		//ТекСотрудник = ПараметрыСеанса.ТекущийСотр;
		//ДатаИзменения = ТекущаяДата();
		//

		//
		//Для каждого стр из ТЗ Цикл
		//	
		//	Если (стр.МатрицаКумин <> стр.КуМинРасчет) или (стр.МатрицаКуМакс <> стр.КуМаксРасчет) Тогда
		//		//измерения
		//		найденнаяСтрока = ТЗМатрица.Найти(Стр.Код,"КодТовара");
		//		Если найденнаяСтрока = Неопределено Тогда
		//			 Продолжить;
		//		 КонецЕсли;
		//		найденнаяСтрока.КуМин = стр.КуМинРасчет;
		//		найденнаяСтрока.КуМакс = стр.КуМаксРасчет;
		//		найденнаяСтрока.КтоВнесВМатрицу = ТекСотрудник;
		//	  	найденнаяСтрока.ДатаВнесенияВМатрицу = ДатаИзменения;
		//		
		//		
		//		//МассивИзмерений.Вставить("Товар",стр.ТоварСсылка); 
		//		////измеНения
		//		//МассивИзменений.Вставить("КуМин",стр.КуМинРасчет); 
		//		//МассивИзменений.Вставить("КуМакс",стр.КуМаксРасчет);
		//		//МассивИзменений.Вставить("КтоВнесВМатрицу",ТекСотрудник);
		//		//МассивИзменений.Вставить("ДатаИзменения",ДатаИзменения);
		//		////Записываем изменения
		//		//ОМ16_ИзменитьЗначениеВМатрице("Матрица",МассивИзмерений,МассивИзменений);
		//	КонецЕсли;
		//	
		//КонецЦикла;	
		//
		//Блокировка = Новый БлокировкаДанных;
		//БлокировкаМатрицы = Блокировка.Добавить("РегистрСведений.Матрица");
		//БлокировкаМатрицы.УстановитьЗначение("Аптека",Аптека);
		//Блокировка.Заблокировать();				
		//
		//Набор = РегистрыСведений.Матрица.СоздатьНаборЗаписей();
		//Набор.Отбор.Аптека.Установить(Аптека);	
		//Набор.Загрузить(ТЗМатрица);
		//Набор.Записать();
		
	
КонецФункции


Функция ПривестиККоробкеСпайке(Потребность,Объект,ЗначениеВВерх,ЗначениеВниз)
	
	Преобразовали = Ложь;
	
	Если Потребность > Объект Тогда
		КолЦелых = Цел(Потребность/Объект);
		
		ОстатокОтОбъекта = Потребность/Объект - КолЦелых;
		
		Если ОстатокОтОбъекта >= ЗначениеВВерх Тогда
			Потребность = (Колцелых+1)*Объект;
			Преобразовали = Истина;
		ИначеЕсли ОстатокОтОбъекта <= ЗначениеВниз Тогда
			Потребность = КолЦелых*Объект;
			Преобразовали = Истина;
		КонецЕсли;
	ИначеЕсли   Потребность < Объект Тогда
		
		ОстатокОтОбъекта = Потребность/Объект;
		
		Если ОстатокОтОбъекта >= ЗначениеВВерх Тогда
			Потребность = Объект;
			Преобразовали = Истина;
		КонецЕсли;
	Иначе
		Преобразовали = истина;
	КонецЕсли;	
	
	Возврат Преобразовали;
	
	
	
КонецФункции

Функция РасчетАвтозаказаОкончательный(ТЗЗапроса,Аптека,ПараметрыРасчета,СуммыЗакрытияТовараВПути = Неопределено,ЗаводскиеПараметрыТовара = Неопределено) Экспорт	
		


	//КоэффициентЗаказаA	= ПараметрыРасчета.КоэффициентЗаказаA;
	//КоэффициентЗаказаB	= ПараметрыРасчета.КоэффициентЗаказаB;
	//КоэффициентЗаказаC	= ПараметрыРасчета.КоэффициентЗаказаC;
	//КоэффициентЗаказаD	= ПараметрыРасчета.КоэффициентЗаказаD;
	ОграничениеДляНовыхАптек = ПараметрыРасчета.ОграничениеДляНовыхАптек;
	Поле_Коэфф			= 2;
	Флаг_УчестьРеквизитминимальныйЗаказ = ПараметрыРасчета.Флаг_УчестьРеквизитминимальныйЗаказ;
	УчитыватьКратностьЗаказа = ПараметрыРасчета.УчитыватьКратностьЗаказа;
	ПрименятьКоэффПоНЗ	= Ложь;
	КоэффПоНЗ			= 0;
	//ТекДата				= ПараметрыРасчета.ТекДата;
	УчитыватьНЗ			= ПараметрыРасчета.УчитыватьНЗ;
	ПорогСреднейСкорости			= ПараметрыРасчета.ПорогСреднейСкорости;
	МинимальныйПорогСреднейСкорости = ПараметрыРасчета.МинимальныйПорогСреднейСкорости;	
	ТаблицаКритериевОбнуленияЗаказа = ПараметрыРасчета.ТаблицаКритериевОбнуленияЗаказа;
	
	СубъектРФ = Аптека.СубъектРФ;
	ИспользоватьМатрицуНДнаПлохихСкоростях = Аптека.ИспользоватьМатрицуНДнаПлохихСкоростях;
	
	ДатаРасчета = НачалоДня(ТекущаяДата());
	КодСклада = Аптека.Код;

	ТЗДляТоргов = Новый ТаблицаЗначений;
	ТЗДляТоргов.Колонки.Добавить("ДатаРасчета");
	ТЗДляТоргов.Колонки.Добавить("КодСклада");
	ТЗДляТоргов.Колонки.Добавить("КодТовара");
	ТЗДляТоргов.Колонки.Добавить("ВПути");
	ТЗДляТоргов.Колонки.Добавить("Остаток");
	ТЗДляТоргов.Колонки.Добавить("НЗ");
	ТЗДляТоргов.Колонки.Добавить("Продажи");
	ТЗДляТоргов.Колонки.Добавить("Потребность");
	ТЗДляТоргов.Колонки.Добавить("ПотребностьОтКуМакс2");
	ТЗДляТоргов.Колонки.Добавить("Коробов");
	ТЗДляТоргов.Колонки.Добавить("ГруппаАП");
	
	ТЗСкоростей = Новый ТаблицаЗначений;
	ТЗСкоростей.Колонки.Добавить("КодАптеки");
	ТЗСкоростей.Колонки.Добавить("КодТовара");
	ТЗСкоростей.Колонки.Добавить("Скорость");
	ТЗСкоростей.Колонки.Добавить("ГруппаАП");
	ТЗСкоростей.Колонки.Добавить("Продажи");
	ТЗСкоростей.Колонки.Добавить("ДнейПродаж");
	ТЗСкоростей.Колонки.Добавить("ДнейРеализации");
	
	ТЗВылета = Новый ТаблицаЗначений;
	ТЗВылета.Колонки.Добавить("Товар");
	ТЗВылета.Колонки.Добавить("ДатаЗаписи");
	
	ТЗДефектура = Новый ТаблицаЗначений;
	ТЗДефектура.Колонки.Добавить("КодАптеки");
	ТЗДефектура.Колонки.Добавить("КодТовара");
	ТЗДефектура.Колонки.Добавить("Количество");
	ТЗДефектура.Колонки.Добавить("ГруппаАП");
	
	
	
	ТЗЗапроса.Свернуть("Код,Цена,Активный","СредняяСкорость,Продажи,ЕдиницаДляСвертки,Dx,СуммаЗакуп,ДеньРеализации");
	
	ЗакрытьТоварыВПути(Аптека,ТекущаяДата(),СуммыЗакрытияТовараВПути);
			
			//ТХТ = "ВЫБРАТЬ
			//	  |	Т.Код,
			//	  |	Т.СредняяСкорость КАК СредняяСкорость,
			//	  |	Т.Продажи КАК Продажи,
			//	  |	Т.ЕдиницаДляСвертки КАК ДнейПродаж,
			//	  |	Т.ДеньРеализации КАК ДнейРеализации,
			//	  |	Т.Dx КАК Dx,
			//	  |	Т.Цена КАК Цена,
			//	  |	Т.Активный,
			//	  |	Т.СуммаЗакуп
			//	  |ПОМЕСТИТЬ ВТ1
			//	  |ИЗ
			//	  |	&Таб КАК Т
			//	  |;
			//	  |
			//	  |////////////////////////////////////////////////////////////////////////////////
			//	  |ВЫБРАТЬ
			//	  |	Т.Код,
			//	  |	АП.Ссылка КАК ТоварСсылка,
			//	  |	Т.Цена,
			//	  |	Т.Активный,
			//	  |	СУММА(Т.СредняяСкорость) КАК СредняяСкорость,
			//	  |	СУММА(Т.Продажи) КАК Продажи,
			//	  |	СУММА(Т.ДнейПродаж) КАК ДнейПродаж,
			//	  |	СУММА(Т.Dx) КАК Dx,
			//	  |	СУММА(Т.СуммаЗакуп) КАК СуммаЗакуп
			//	  |ПОМЕСТИТЬ ВТ
			//	  |ИЗ
			//	  |	ВТ1 КАК Т
			//	  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			//	  |		ПО (АП.Код = Т.Код)
			//	  |
			//	  |СГРУППИРОВАТЬ ПО
			//	  |	Т.Код,
			//	  |	АП.Ссылка,
			//	  |	Т.Цена,
			//	  |	Т.Активный
			//	  |;
			ТХТ = "ВЫБРАТЬ
			      |	Т.Код,
			      |	Т.СредняяСкорость КАК СредняяСкорость,
			      |	Т.Продажи КАК Продажи,
			      |	Т.ЕдиницаДляСвертки КАК ДнейПродаж,
			      |	Т.ДеньРеализации КАК ДнейРеализации,
			      |	Т.Dx КАК Dx,
			      |	Т.Цена КАК Цена,
			      |	Т.Активный,
			      |	Т.СуммаЗакуп
			      |ПОМЕСТИТЬ ВТ1
			      |ИЗ
			      |	&Таб КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Т.Код,
			      |	АП.Ссылка КАК ТоварСсылка,
			      |	Т.Цена,
			      |	Т.Активный,
			      |	Т.СредняяСкорость,
			      |	Т.Продажи,
			      |	Т.ДнейПродаж,
			      |	Т.ДнейРеализации,
			      |	Т.Dx КАК Dx,
			      |	Т.СуммаЗакуп КАК СуммаЗакуп
			      |ПОМЕСТИТЬ ВТ
			      |ИЗ
			      |	ВТ1 КАК Т
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = Т.Код)
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И НЕ МатрицаНЗ.ВидНЗ В (&ВидыНЗ)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ПартииЖНВЛСОстатки.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(ПартииЖНВЛСОстатки.Партия.ДатаПоступления) КАК МаксДатаПрихода,
			      |	СУММА(ПартииЖНВЛСОстатки.КолвоОстаток / ПартииЖНВЛСОстатки.Товар.ЕдиницаПоУмолчанию.К) КАК Остаток
			      |ПОМЕСТИТЬ ОстатокНаНачало
			      |ИЗ
			      |	РегистрНакопления.ПартииЖНВЛС.Остатки(, Склад = &Аптека) КАК ПартииЖНВЛСОстатки
			      |ГДЕ
			      |	ПартииЖНВЛСОстатки.КолвоОстаток > 0
			      |	И ПартииЖНВЛСОстатки.Товар.ЕдиницаПоУмолчанию.К > 0
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ПартииЖНВЛСОстатки.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ПродажиСменККМ.Товар КАК ТоварСсылка,
			      |	ВЫРАЗИТЬ(СУММА(ПродажиСменККМ.Колво / ПродажиСменККМ.Товар.ЕдиницаПоУмолчанию.К) КАК ЧИСЛО(12, 0)) КАК Продажа
			      |ПОМЕСТИТЬ ПродажиСегоДня
			      |ИЗ
			      |	РегистрНакопления.ПродажиСменККМ КАК ПродажиСменККМ
			      |ГДЕ
			      |	ПродажиСменККМ.Период МЕЖДУ &НачДатаСегоДня И &КонДатаСегоДня
			      |	И ПродажиСменККМ.Склад = &Аптека
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ПродажиСменККМ.Товар
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	СписаниеТовар.Товар КАК ТоварСсылка,
			      |	ВЫРАЗИТЬ(СУММА(СписаниеТовар.КоличествоФакт * СписаниеТовар.Коэфф / СписаниеТовар.Товар.ЕдиницаПоУмолчанию.К) КАК ЧИСЛО(12, 0)) КАК СписанноеКоличество
			      |ПОМЕСТИТЬ Списания
			      |ИЗ
			      |	Документ.Списание.Товар КАК СписаниеТовар
			      |ГДЕ
			      |	СписаниеТовар.Ссылка.Дата > &ДатаТриМесяцаНазад
			      |	И СписаниеТовар.Ссылка.Склад = &Аптека
			      |	И СписаниеТовар.Ссылка.Проведен = ЛОЖЬ
			      |	И СписаниеТовар.Ссылка.ПометкаУдаления = ЛОЖЬ
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	СписаниеТовар.Товар
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
			      |	Выборка.Код,
			      |	Выборка.ТоварСсылка,
			      |	Выборка.ГруппаАП,
			      |	Выборка.КуМин,
			      |	Выборка.КуМакс,
			      |	Выборка.КуМакс2,
			      |	Выборка.НЗ,
			      |	Выборка.Продажи,
			      |	Выборка.Остаток,
			      |	ВЫБОР
			      |		КОГДА Выборка.Остаток <= Выборка.КуМин
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |				И (Выборка.Активный = ИСТИНА
			      |					ИЛИ Выборка.ТоварРазрешен)
			      |			ТОГДА ВЫБОР
			      |					КОГДА Выборка.Остаток > Выборка.СредняяСкорость
			      |						ТОГДА ВЫРАЗИТЬ(Выборка.КуМакс - (Выборка.Остаток - Выборка.СредняяСкорость) КАК ЧИСЛО(10, 0))
			      |					ИНАЧЕ Выборка.КуМакс
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Заказать,
			      |	ВЫБОР
			      |		КОГДА Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |				И (Выборка.Активный = ИСТИНА
			      |					ИЛИ Выборка.ТоварРазрешен)
			      |			ТОГДА ВЫБОР
			      |					КОГДА Выборка.Остаток > Выборка.СредняяСкорость
			      |						ТОГДА ВЫРАЗИТЬ(Выборка.КуМакс2 - (Выборка.Остаток - Выборка.СредняяСкорость) КАК ЧИСЛО(10, 0))
			      |					ИНАЧЕ Выборка.КуМакс2
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ЗаказатьПоКумакс2,
			      |	Выборка.ДнейПродаж,
			      |	Выборка.ДнейРеализации,
			      |	Выборка.СредняяСкорость,
			      |	ВЫБОР
			      |		КОГДА Выборка.Остаток = 0
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |			ТОГДА 1
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Дефектура,
			      |	Выборка.Цена,
			      |	0 КАК Сумма,
			      |	Выборка.ПризнакРекламнойАкции,
			      |	Выборка.СрокДействияРекламнойАкции,
			      |	Выборка.Активный,
			      |	Выборка.Dx,
			      |	ВЫБОР
			      |		КОГДА Выборка.Продажи > 0
			      |			ТОГДА ВЫРАЗИТЬ(Выборка.СуммаЗакуп / Выборка.Продажи КАК ЧИСЛО(10, 2))
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ЦенаЗакупПродажи,
			      |	Выборка.МаксДатаПрихода
			      |ПОМЕСТИТЬ ИтоговыйЗаказ
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ВТ.Код КАК Код,
			      |		ВТ.ТоварСсылка КАК ТоварСсылка,
			      |		Матрица.ГруппаАПИтог КАК ГруппаАП,
			      |		ВТ.Продажи КАК Продажи,
			      |		ВТ.ДнейПродаж КАК ДнейПродаж,
			      |		ВТ.ДнейРеализации КАК ДнейРеализации,
			      |		ЕСТЬNULL(Матрица.КуМин, 0) КАК КуМин,
			      |		ЕСТЬNULL(Матрица.КуМакс, 0) КАК КуМакс,
			      |		ЕСТЬNULL(Матрица.КуМакс2, 0) КАК КуМакс2,
			      |		ЕСТЬNULL(ВыборкаНЗ.НЗ, 0) КАК НЗ,
			      |		ВТ.Цена КАК Цена,
			      |		ВЫБОР
			      |			КОГДА ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) - ЕСТЬNULL(ПродажиСегоДня.Продажа, 0) - ЕСТЬNULL(Списания.СписанноеКоличество, 0) < 0
			      |				ТОГДА 0
			      |			ИНАЧЕ ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) - ЕСТЬNULL(ПродажиСегоДня.Продажа, 0) - ЕСТЬNULL(Списания.СписанноеКоличество, 0)
			      |		КОНЕЦ КАК Остаток,
			      |		ЕСТЬNULL(ВТ.СредняяСкорость, 0) КАК СредняяСкорость,
			      |		ЕСТЬNULL(ВыборкаНЗ.РекламнаяАкция, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |		ЕСТЬNULL(ВыборкаНЗ.СрокДействияРекламы, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |		ВТ.Активный КАК Активный,
			      |		ВТ.Dx КАК Dx,
			      |		ВТ.СуммаЗакуп КАК СуммаЗакуп,
			      |		ВЫБОР
			      |			КОГДА РТ.Товар ЕСТЬ NULL 
			      |				ТОГДА ЛОЖЬ
			      |			ИНАЧЕ ИСТИНА
			      |		КОНЕЦ КАК ТоварРазрешен,
			      |		ЕСТЬNULL(ОстатокНаНачало.МаксДатаПрихода, ДАТАВРЕМЯ(1, 1, 1)) КАК МаксДатаПрихода
			      |	ИЗ
			      |		ВТ КАК ВТ
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ОстатокНаНачало КАК ОстатокНаНачало
			      |			ПО (ОстатокНаНачало.ТоварСсылка = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Матрица КАК Матрица
			      |			ПО (Матрица.Аптека = &Аптека)
			      |				И (Матрица.Товар = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ КАК ВыборкаНЗ
			      |			ПО ВТ.ТоварСсылка = ВыборкаНЗ.ТоварСсылка
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ПродажиСегоДня КАК ПродажиСегоДня
			      |			ПО (ПродажиСегоДня.ТоварСсылка = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ Списания КАК Списания
			      |			ПО (Списания.ТоварСсылка = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенныеТовары КАК РТ
			      |			ПО (РТ.Аптека = &Аптека)
			      |				И (РТ.Товар = ВТ.ТоварСсылка)
			      |				И (&ИспользоватьРазрешенныеТоварыДляЗаказа = ИСТИНА)) КАК Выборка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ИсключенияАвтозаказа.Товар КАК ТоварССылка
			      |ПОМЕСТИТЬ Исключения
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |
			      |ОБЪЕДИНИТЬ
			      |
			      |ВЫБРАТЬ
			      |	ИсключенияАвтозаказа.Товар
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = &Аптека
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ЗаказПоставщикуОстатки.Товар КАК ТоварССылка,
			      |	ЗаказПоставщикуОстатки.КоличествоОстаток КАК ВПути
			      |ПОМЕСТИТЬ ТоварыВПути
			      |ИЗ
			      |	РегистрНакопления.ЗаказПоставщику.Остатки(, Склад = &Аптека) КАК ЗаказПоставщикуОстатки
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ИсторияЗакупки.Товар,
			      |	СРЕДНЕЕ(ИсторияЗакупки.Цена) КАК ЦенаЗакупки
			      |ПОМЕСТИТЬ ВТИсторияЗакупки
			      |ИЗ
			      |	РегистрСведений.ИсторияЗакупочнойЦены КАК ИсторияЗакупки
			      |ГДЕ
			      |	ИсторияЗакупки.СубъектРФ = &СубъектРФ
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ИсторияЗакупки.Товар
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ШаблоныМатрицНЗТовары.Товар,
			      |	ИСТИНА КАК ЕстьТовар
			      |ПОМЕСТИТЬ ТоварвШаблонах
			      |ИЗ
			      |	Справочник.ШаблоныМатрицНЗ.Товары КАК ШаблоныМатрицНЗТовары
			      |ГДЕ
			      |	ШаблоныМатрицНЗТовары.Ссылка В
			      |			(ВЫБРАТЬ
			      |				ШаблоныМатрицНЗПоАптекам.Шаблон
			      |			ИЗ
			      |				РегистрСведений.ШаблоныМатрицНЗПоАптекам КАК ШаблоныМатрицНЗПоАптекам
			      |			ГДЕ
			      |				ШаблоныМатрицНЗПоАптекам.Аптека = &Аптека
			      |				И ШаблоныМатрицНЗПоАптекам.Шаблон.ПометкаУдаления = ЛОЖЬ)
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
			      |	ИТОГОВЫЙЗАКАЗ.Код,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование КАК Товар,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.МинимальныйЗаказ КАК МинимальныйЗаказ,
			      |	ИТОГОВЫЙЗАКАЗ.ГруппаАП,
			      |	ИТОГОВЫЙЗАКАЗ.КуМин,
			      |	ИТОГОВЫЙЗАКАЗ.КуМакс,
			      |	ИТОГОВЫЙЗАКАЗ.КуМакс2,
			      |	ИТОГОВЫЙЗАКАЗ.НЗ,
			      |	ИТОГОВЫЙЗАКАЗ.Продажи,
			      |	ЕСТЬNULL(ТоварыВПути.ВПути, 0) КАК ВПути,
			      |	ИТОГОВЫЙЗАКАЗ.Остаток,
			      |	ВЫБОР
			      |		КОГДА (ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
			      |				ИЛИ ЕСТЬNULL(неликвиды.КодТовара, 0) > 0)
			      |				И &НеУчитыватьТоварВПутиПриРасчетеЗаказа = ЛОЖЬ
			      |			ТОГДА 0
			      |		ИНАЧЕ ИТОГОВЫЙЗАКАЗ.Заказать
			      |	КОНЕЦ КАК Заказать,
			      |	ВЫБОР
			      |		КОГДА (ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
			      |				ИЛИ ЕСТЬNULL(неликвиды.КодТовара, 0) > 0)
			      |				И &НеУчитыватьТоварВПутиПриРасчетеЗаказа = ЛОЖЬ
			      |			ТОГДА 0
			      |		ИНАЧЕ ИТОГОВЫЙЗАКАЗ.ЗаказатьПоКумакс2
			      |	КОНЕЦ КАК ЗаказатьПоКуМакс2,
			      |	ВЫБОР
			      |		КОГДА (ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
			      |				ИЛИ ЕСТЬNULL(неликвиды.КодТовара, 0) > 0)
			      |				И &НеУчитыватьТоварВПутиПриРасчетеЗаказа = ИСТИНА
			      |			ТОГДА ИСТИНА
			      |		ИНАЧЕ ЛОЖЬ
			      |	КОНЕЦ КАК НеЗаказывать,
			      |	0 КАК Резерв,
			      |	ИТОГОВЫЙЗАКАЗ.ДнейПродаж,
			      |	ИТОГОВЫЙЗАКАЗ.ДнейРеализации,
			      |	ИТОГОВЫЙЗАКАЗ.СредняяСкорость,
			      |	ИТОГОВЫЙЗАКАЗ.Дефектура,
			      |	ИТОГОВЫЙЗАКАЗ.Цена,
			      |	ИТОГОВЫЙЗАКАЗ.Сумма,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.ПризнакРекламнойАкции, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.СрокДействияРекламнойАкции, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |	ИТОГОВЫЙЗАКАЗ.Активный,
			      |	ЕСТЬNULL(ПерестокАптек.Пересток, 0) КАК Пересток,
			      |	ИТОГОВЫЙЗАКАЗ.Dx,
			      |	ЛОЖЬ КАК НедостовернаяПозиция,
			      |	ЛОЖЬ КАК БылаНедостовернаяПозиция,
			      |	ВЫБОР
			      |		КОГДА Исключения.ТоварССылка ЕСТЬ NULL 
			      |			ТОГДА 0
			      |		ИНАЧЕ 1
			      |	КОНЕЦ КАК Исключение,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Подкатегория КАК Подкатегория,
			      |	ВЫБОР
			      |		КОГДА неликвиды.КодТовара ЕСТЬ NULL 
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК неликвид,
			      |	ВЫБОР
			      |		КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи > 0
			      |				И ЕСТЬNULL(ВТИсторияЗакупки.ЦенаЗакупки, 0) > 100
			      |			ТОГДА ВЫБОР
			      |					КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи > ВТИсторияЗакупки.ЦенаЗакупки
			      |						ТОГДА 100 * (ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи - ВТИсторияЗакупки.ЦенаЗакупки) / ВТИсторияЗакупки.ЦенаЗакупки
			      |					КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи < ВТИсторияЗакупки.ЦенаЗакупки
			      |						ТОГДА 100 * (ВТИсторияЗакупки.ЦенаЗакупки - ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи) / ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи
			      |					ИНАЧЕ 0
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ОтношениеЗакупки,
			      |	ИТОГОВЫЙЗАКАЗ.МаксДатаПрихода,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.ТипДляЦО КАК ТипДляЦО,
			      |	0 КАК ЗаказатьДоПривидения,
			      |	0 КАК КоличествоВСпайке,
			      |	0 КАК КоличествоВКоробе,
			      |	0 КАК Коробов,
			      |	ЕСТЬNULL(ВыводПозицийИзМатрицы.ДатаЗаписи, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВыводаПозиции,
			      |	ЕСТЬNULL(ТоварВШаблонах.ЕстьТовар, ЛОЖЬ) КАК ЕстьТоварВШаблоне,
			      |	ВЫБОР
			      |		КОГДА ТоварТребующийАвторизации.Товар ЕСТЬ NULL 
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК ЕстьТоварТребующийАвторизации
			      |ИЗ
			      |	ИтоговыйЗаказ КАК ИТОГОВЫЙЗАКАЗ
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВПути КАК ТоварыВПути
			      |		ПО (ТоварыВПути.ТоварССылка = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПерестокАптек КАК ПерестокАптек
			      |		ПО (ПерестокАптек.Аптека = &Аптека)
			      |			И (ПерестокАптек.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Исключения КАК Исключения
			      |		ПО (Исключения.ТоварССылка = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Неликвиды КАК неликвиды
			      |		ПО (неликвиды.Аптека = &Аптека)
			      |			И (неликвиды.КодТовара = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсторияЗакупки КАК ВТИсторияЗакупки
			      |		ПО (ВТИсторияЗакупки.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыводПозицийИзМатрицы КАК ВыводПозицийИзМатрицы
			      |		ПО (ВыводПозицийИзМатрицы.Аптека = &Аптека)
			      |			И (ВыводПозицийИзМатрицы.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварвШаблонах КАК ТоварВШаблонах
			      |		ПО (ТоварВШаблонах.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварТребующийАвторизации КАК ТоварТребующийАвторизации
			      |		ПО (ТоварТребующийАвторизации.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ1
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТИсторияЗакупки
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ИтоговыйЗаказ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ОстатокНаНачало
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Исключения
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТоварыВПути
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ПродажиСегоДня
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Списания
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТоварвШаблонах
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ";
			
				  
	  
				  //|		КОГДА (Выборка.Остаток <= Выборка.КуМин) и (Выборка.ГруппаАП <> ""I"")  
		//ИсключениеВидаНЗ = Константы.ИсключатьВидНЗ.Получить();
		//Если НЕ ИсключениеВидаНЗ.Пустая() Тогда
		//	ТХТ = СтрЗаменить(ТХТ,"111 = 111", " МатрицаНЗ.ВидНЗ <> &НЗ_Исключение "	);
		//КонецЕсли;				
		ВидыНЗ = Новый СписокЗначений;
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_4);
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_5);

				  
		ТекДата  = ТекущаяДата();
	 	Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаОстатка",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
		Запрос.УстановитьПараметр("ТекущаяДата",ТекДата);
		Запрос.УстановитьПараметр("ДатаТриМесяцаНазад",КонецДня(ТекДата) - 60*60*24*30*2);
		Запрос.УстановитьПараметр("НачДатаСегоДня",НачалоДня(ТекДата));
		Запрос.УстановитьПараметр("КонДатаСегоДня",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("ВидыНЗ",ВидыНЗ);
		Запрос.УстановитьПараметр("Таб",ТЗЗапроса);
		Запрос.УстановитьПараметр("ИспользоватьРазрешенныеТоварыДляЗаказа",Константы.ИспользоватьРазрешенныеТоварыДляЗаказа.Получить());
		Запрос.УстановитьПараметр("НеУчитыватьТоварВПутиПриРасчетеЗаказа",Константы.НеУчитыватьТоварВПутиПриРасчетеЗаказа.Получить());

		ТЗ = Запрос.Выполнить().Выгрузить();	
		
		ПорогДнейДляВылетаПозиции = Константы.ПорогДнейДляВылетаТовара.Получить();
		ОбрезатьНедостоверные = Константы.ОчищатьРасчетЗаказаОтНедостоверных.Получить();
		СписокНедостоверныхСтрок = Новый СписокЗначений;

		ИспользоватьМатрицуНедостоверных = Константы.ИспользоватьМатрицуНедостоверных.Получить(); 
		Если ИспользоватьМатрицуНедостоверных Тогда
			МТ = Новый МенеджерВременныхТаблиц;
			ТХТ = "ВЫБРАТЬ
			      |	МатрицаНедостоверных.ЦенаОт КАК ЦенаОт,
			      |	МатрицаНедостоверных.ЦенаДо,
			      |	МатрицаНедостоверных.ПродажиОт КАК ПродажиОт,
			      |	МатрицаНедостоверных.ПродажиДо,
			      |	МатрицаНедостоверных.ОстатокОт КАК ОстатокОт,
			      |	МатрицаНедостоверных.ОстатокДо,
			      |	МатрицаНедостоверных.ДнейПродажОт КАК ДнейПродажОт,
			      |	МатрицаНедостоверных.ДнейПродажДо,
			      |	МатрицаНедостоверных.Заказать
			      |ПОМЕСТИТЬ МН
			      |ИЗ
			      |	РегистрСведений.МатрицаНедостоверных КАК МатрицаНедостоверных
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ ПЕРВЫЕ 1
			      |	МН.ЦенаОт
			      |ИЗ
			      |	МН КАК МН
			      |;
			      |";

			Запрос.Текст = ТХТ;
			Запрос.МенеджерВременныхТаблиц = МТ;
			Рез = Запрос.Выполнить();
			Если Рез.Пустой() Тогда
				ИспользоватьМатрицуНедостоверных = Ложь;
				Запрос.Текст = "УНИЧТОЖИТЬ МН;";
				Запрос.Выполнить();
				МТ.Закрыть();
			Иначе
				ТХТ = "ВЫБРАТЬ
				|	МН.Заказать
				|ИЗ
				|	МН КАК МН
				|ГДЕ
				|	&Цена >= МН.ЦенаОт И &Цена < МН.ЦенаДо
				|	И &Продажа >= МН.ПродажиОт И &Продажа < МН.ПродажиДо
				|	И &Остаток >= МН.ОстатокОт И &Остаток < МН.ОстатокДо
				|	И &ДнейПродаж >= МН.ДнейПродажОт И &ДнейПродаж < МН.ДнейПродажДо";
				Запрос.Текст = ТХТ;				
			КонецЕсли;
		КонецЕсли;
			
		
		//Если КоэффициентЗаказаA = 1 и КоэффициентЗаказаB = 1 и КоэффициентЗаказаC = 1 и КоэффициентЗаказаD = 1 Тогда
		//Иначе
		//	Для Каждого стр из ТЗ Цикл
		//		Если стр.ГруппаАП = "A" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаA,0);
		//		ИначеЕсли стр.ГруппаАП = "B" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаB,0);
		//		ИначеЕсли стр.ГруппаАП = "C" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаC,0);
		//		ИначеЕсли стр.ГруппаАП = "D" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаD,0);					
		//		КонецЕсли;
		//	КонецЦикла;
		//КонецЕсли;
		
		
		
		спр_АП = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
		Госпитальные = спр_АП.НайтиПоКоду(17);
		Для каждого стр из ТЗ Цикл
			
			
			Если ОграничениеДляНовыхАптек = Истина Тогда
				Если стр.ДнейПродаж < 7 и стр.dx < 1 Тогда
				//Если стр.Продажи <> 0 Тогда
					УдвоенныеПродажи = (стр.Продажи*Поле_Коэфф);  // Исправил 2 на Поле_Коэфф по просьбе Санакоева 02/03/2010
					Если (стр.Заказать > УдвоенныеПродажи) и (стр.НЗ < УдвоенныеПродажи) Тогда
						стр.Заказать = УдвоенныеПродажи;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			
			
			Если Флаг_УчестьРеквизитМинимальныйЗаказ Тогда
				Попытка
					Если (стр.Заказать>0) Тогда
						// Если есть заказ
						//пер_МЗ = спр_АП.НайтиПоКоду(стр.Код).МинимальныйЗаказ;
						Если стр.Заказать<стр.МинимальныйЗаказ Тогда
							// Если Заказ>0 но меньше минимального заказа
							стр.Заказать = стр.МинимальныйЗаказ;
						Иначе
							Если УчитыватьКратностьЗаказа = Истина Тогда
								Если стр.МинимальныйЗаказ > 0 Тогда
									стр.Заказать = Окр(стр.Заказать/стр.МинимальныйЗаказ,0)*стр.МинимальныйЗаказ;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					//====================================== Для МАКС2 =========================
					Если (стр.ЗаказатьПоКуМакс2>0) Тогда
						// Если есть заказ
						//пер_МЗ = спр_АП.НайтиПоКоду(стр.Код).МинимальныйЗаказ;
						Если стр.ЗаказатьПоКуМакс2<стр.МинимальныйЗаказ Тогда
							// Если Заказ>0 но меньше минимального заказа
							стр.ЗаказатьПоКуМакс2 = стр.МинимальныйЗаказ;
						Иначе
							Если УчитыватьКратностьЗаказа = Истина Тогда
								Если стр.МинимальныйЗаказ > 0 Тогда
									стр.ЗаказатьПоКуМакс2 = Окр(стр.ЗаказатьПоКуМакс2/стр.МинимальныйЗаказ,0)*стр.МинимальныйЗаказ;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					//==========================================================================
					
				Исключение
					//Сообщить("Это сообщение только для ИТ! Ничего страшного :) "+ОписаниеОшибки());
					Прервать;
				КонецПопытки;
			КонецЕсли;
			
			Если ПрименятьКоэффПоНЗ = Истина Тогда
				Если стр.Заказать > 0 и стр.НЗ > 0 Тогда
					КоличествоСНЗ = Окр(стр.НЗ/КоэффПоНЗ,0);
					КоличествоСНЗ = ?(КоличествоСНЗ=0,1,КоличествоСНЗ);
					стр.Заказать = Макс(стр.Заказать,КоличествоСНЗ);	
				КонецЕсли;
				//====================================== Для МАКС2 =========================
				Если стр.ЗаказатьПоКуМакс2 > 0 и стр.НЗ > 0 Тогда
					КоличествоСНЗ = Окр(стр.НЗ/КоэффПоНЗ,0);
					КоличествоСНЗ = ?(КоличествоСНЗ=0,1,КоличествоСНЗ);
					стр.ЗаказатьПоКуМакс2 = Макс(стр.ЗаказатьПоКуМакс2,КоличествоСНЗ);
				КонецЕсли;
				//==========================================================================
			КонецЕсли;
			
			Если ИспользоватьМатрицуНДнаПлохихСкоростях = Истина Тогда
				Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
					Если  стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" или стр.ГруппаАП = "D" Тогда
						Если стр.НЗ = 0 или (стр.НЗ > 0 и стр.СрокДействияРекламнойАкции < ТекДата и стр.ПризнакРекламнойАкции = Истина) Тогда
							стр.Кумин = 1;
							стр.Кумакс = 1;
							стр.Кумакс2 = 1;
							стр.БылаНедостовернаяПозиция = Истина;
							стр.НедостовернаяПозиция = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			
			//Определяем недостоверные позиции 
			Если стр.Заказать > 0 и стр.НедостовернаяПозиция = Ложь Тогда
				Если стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" Тогда
					
					//Если стр.Кумакс > стр.Продажи*2.5  и стр.Кумакс <> стр.НЗ Тогда
					//	стр.БылаНедостовернаяПозиция = Истина;
					//	стр.Недостовернаяпозиция = Истина;
					//КонецЕсли;
					
					
					//Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 4 и стр.ДнейПродаж <=25 Тогда
					//	стр.БылаНедостовернаяПозиция = Истина;
					//	стр.Недостовернаяпозиция = Истина;
					//КонецЕсли;	
					//
					//Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 2 и стр.ДнейПродаж <=25 и стр.Цена > 400 Тогда   // Санакоев 24.11.2014 17:37
					//	стр.БылаНедостовернаяПозиция = Истина;
					//	стр.Недостовернаяпозиция = Истина;
					//КонецЕсли;						
					//
					//Если стр.ДнейПродаж < 15 Тогда
					//	стр.БылаНедостовернаяПозиция = Истина;
					//	стр.Недостовернаяпозиция = Истина;
					//КонецЕсли;
					//
					//Если стр.Продажи > 0 и стр.Заказать > 0 и стр.ПризнакРекламнойАкции = Ложь Тогда
					//	Отношение = стр.Заказать/стр.Продажи;
					//	Если Отношение > 2 или Отношение < 0.18 Тогда
					//		стр.БылаНедостовернаяПозиция = Истина;
					//		стр.Недостовернаяпозиция = Истина;	
					//	КонецЕсли;
					//КонецЕсли;
					
					
					Если стр.Продажи = 1 и стр.НЗ = 0 и  стр.МинимальныйЗаказ = 0 Тогда
						Если  стр.ДнейПродаж > 4 и стр.Заказать > 2 Тогда
							стр.Заказать = 2;
						ИначеЕсли стр.ДнейПродаж < 4 и стр.Заказать > 3 Тогда
							стр.Заказать = 2;
						КонецЕсли;
						
					КонецЕсли;
					
					//Если (стр.Остаток+стр.Заказать)/2 >= стр.Продажи и стр.ПризнакРекламнойАкции = Ложь  и стр.НЗ = 0
					//	и (стр.Остаток+стр.Заказать) >= 4 Тогда
					//	стр.БылаНедостовернаяПозиция = Истина;
					//	стр.Недостовернаяпозиция = Истина;	
					//КонецЕсли;
					
				КонецЕсли;  
				
				
				Если стр.НЗ > 4 и стр.НЗ = стр.КуМин  и Стр.НЗ = стр.КуМакс и стр.Заказать = 1 Тогда
					стр.Заказать = Мин(Окр(стр.НЗ/2),2);	
				КонецЕсли;
				
				Если стр.НЗ = стр.КуМин и стр.Заказать < 3 Тогда
				    Если стр.НЗ > 8 и стр.НЗ <= 19 Тогда
						стр.Заказать = Мин(Окр(стр.НЗ/2),2);
					ИначеЕсли стр.НЗ > 19  Тогда
						стр.Заказать = 0;
					КонецЕсли;
				КонецЕсли;

				
				//Если стр.Подкатегория = Госпитальные Тогда
				//	стр.БылаНедостовернаяПозиция = Истина;
				//	стр.НедостовернаяПозиция = Истина;
				//КонецЕсли;
				
				Если стр.НедостовернаяПозиция = Истина и стр.НЗ > 0 и стр.Цена > 0 и стр.НЗ >= стр.Заказать Тогда //доп.тз Санакоева 03.06.2014
					Если ( стр.ПризнакРекламнойАкции = Ложь )  
						или ( стр.СрокДействияРекламнойАкции >= ТекДата и стр.ПризнакРекламнойАкции = Истина ) Тогда
						стр.НедостовернаяПозиция = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				
				Если НЕ ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
					Если стр.НедостовернаяПозиция = Истина и стр.Активный = Истина Тогда
						Если ИспользоватьМатрицуНедостоверных Тогда
							Запрос.УстановитьПараметр("Цена",стр.Цена);
							Запрос.УстановитьПараметр("Продажа",стр.Продажи);
							Запрос.УстановитьПараметр("Остаток",стр.Остаток);
							Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
							Рез = Запрос.Выполнить();
							Если НЕ Рез.Пустой() Тогда
								Выборка = Рез.Выбрать();
								Выборка.Следующий();
								Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
									стр.Заказать = стр.МинимальныйЗаказ;
								Иначе
									Если стр.ВПути = 0 Тогда
										стр.Заказать = Выборка.Заказать;
									КонецЕсли;
								КонецЕсли;
								стр.ЗаказатьПоКуМакс2 = стр.Заказать;
								стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
								//если хотя бы по одному условию матрицы недостоверности позиция прошла
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;                                                            
				КонецЕсли;
				
				
				Если стр.НЗ > 10 и стр.Заказать < 20 Тогда   // ПО ТЗ Санакоева от 03.07.2014
					Если стр.Остаток > 0 Тогда
						Если стр.НЗ/стр.Остаток < 1.6 Тогда
							стр.Заказать = 0;
							стр.ЗаказатьПоКуМакс2 = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если стр.НеЗаказывать = Истина Тогда
					стр.Сумма = 0;
				Иначе
					стр.Сумма = стр.Заказать*стр.Цена;
				КонецЕсли;

			КонецЕсли;
			
			Если ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
				Если стр.НедостовернаяПозиция = Истина и стр.Активный = Истина Тогда
					Если ИспользоватьМатрицуНедостоверных Тогда
						Запрос.УстановитьПараметр("Цена",стр.Цена);
						Запрос.УстановитьПараметр("Продажа",стр.Продажи);
						Запрос.УстановитьПараметр("Остаток",стр.Остаток);
						Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
						Рез = Запрос.Выполнить();
						Если НЕ Рез.Пустой() Тогда
							Выборка = Рез.Выбрать();
							Выборка.Следующий();
							Если стр.ВПути > 0 и стр.Незаказывать = Ложь Тогда
								стр.Заказать = 0;
							Иначе
								Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
									Если стр.НЗ > 0 Тогда
										стр.Заказать = Макс(стр.МинимальныйЗаказ,стр.НЗ-стр.Остаток-стр.ВПути,Выборка.Заказать);
									ИначеЕсли Выборка.Заказать > 0 Тогда
										стр.Заказать = Макс(стр.МинимальныйЗаказ,Выборка.Заказать);
									КонецЕсли;
								Иначе
									Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
										стр.Заказать = стр.МинимальныйЗаказ;
									Иначе
										стр.Заказать = Выборка.Заказать;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
							
							стр.ЗаказатьПоКумакс2 = стр.Заказать;
							
							стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
							//если хотя бы по одному условию матрицы недостоверности позиция прошла
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;			
			КонецЕсли;
			
			Если стр.ОтношениеЗакупки > 100 Тогда
				стр.НедостовернаяПозиция = Истина;
			КонецЕсли;
			
			//Убираем 30.10.2017
			//Если стр.ДнейПродаж <= 23 и стр.МаксДатаПрихода >= (НачалоДня(ТекДата) - 48*60*60) Тогда
			//	стр.Заказать = 0;
			//	стр.ЗаказатьПоКуМакс2 = 0;
			//КонецЕсли;
			
			Если стр.НедостовернаяПозиция = Истина  Тогда
				СписокНедостоверныхСтрок.Добавить(стр);
			КонецЕсли;

			стр.ЗаказатьДоПривидения =  стр.Заказать;
			
			Если стр.Заказать > 0 и НЕ ЗаводскиеПараметрыТовара = Неопределено Тогда
				НайденнаяСтрока = ЗаводскиеПараметрыТовара.Найти(стр.Код,"КодТовара");
				Если НЕ НайденнаяСтрока = Неопределено Тогда
					стр.КоличествоВСпайке = НайденнаяСтрока.КоличествоВСпайке;
					стр.КоличествоВКоробе = НайденнаяСтрока.КоличествоВКоробе;
					Если НайденнаяСтрока.КоличествоВКоробе > 0 Тогда
						ПривелиККоробке = ПривестиККоробкеСпайке(стр.Заказать,стр.КоличествоВКоробе,0.7,0.3);
						Если НЕ ПривелиККоробке Тогда
							Если стр.КоличествоВСпайке > 0 Тогда
								ПривелиКСпайке = ПривестиККоробкеСпайке(стр.Заказать,стр.КоличествоВСпайке,0.8,0.2);
							КонецЕсли;
						КонецЕсли;
						
						Если ПривелиККоробке Тогда
							стр.Коробов = стр.Заказать/стр.КоличествоВКоробе;	
						КонецЕсли;						
						
						ПривелиККоробке = ПривестиККоробкеСпайке(стр.ЗаказатьПоКуМакс2,стр.КоличествоВКоробе,0.7,0.3);
						Если НЕ ПривелиККоробке Тогда
							Если стр.КоличествоВСпайке > 0 Тогда
								ПривелиКСпайке = ПривестиККоробкеСпайке(стр.ЗаказатьПоКуМакс2,стр.КоличествоВСпайке,0.8,0.2);
							КонецЕсли;
						КонецЕсли;						
						
						Если ПривелиККоробке Тогда
							стр.Коробов = стр.ЗаказатьПоКуМакс2/стр.КоличествоВКоробе;	
						КонецЕсли;
						
						//Если стр.ЗаказатьПоКумакс2 >= стр.КоличествоВКоробе и стр.Заказать < стр.КоличествоВКоробе Тогда
						//	стр.Заказать = стр.КоличествоВКоробе;
						//	стр.Коробов = 1;
						//КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;
			
			
			Если стр.Заказать > 0 Тогда
				Если стр.ДнейРеализации = 1 Тогда
					Для каждого текКритерий из ТаблицаКритериевОбнуленияЗаказа Цикл
						Если стр.ДнейПродаж >= текКритерий.ДнейПродажОт и стр.ДнейПродаж < текКритерий.ДнейПродажДо Тогда
							Если стр.Продажи >= текКритерий.ПродажиОт и стр.Продажи < текКритерий.ПродажиДо Тогда
								стр.Заказать = 0;
								стр.Сумма = 0;
							КонецЕсли; 
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;

			КонецЕсли;
			
			Если стр.НеЗаказывать = Истина Тогда
				стр.Сумма = 0;
				стр.Заказать = 0;
				стр.ЗаказатьПоКумакс2 = 0;
			Иначе
				стр.Сумма = стр.Заказать*стр.Цена;
			КонецЕсли;
			
			
			//============================  БЛОК ОБРАБОТКИ ИСКЛЮЧЕНИЙ ПОЗИЦИЙ ИЗ МАТРИЦЫ  =======================
			//Если стр.ДатаВыводаПозиции = Дата(1,1,1) Тогда
			//	Если стр.Продажи = 0  и стр.Остаток > 0  и стр.ДнейПродаж > 27  и стр.ЕстьТоварВШаблоне = Ложь Тогда
			//		стрВылета = ТЗВылета.Добавить();
			//		стрВылета.Товар = стр.ТоварСсылка;
			//		стрВылета.ДатаЗаписи = ТекущаяДата();					
			//	КонецЕсли;
			//Иначе
			//	
			//	Если стр.Продажи > 0 и (ТекущаяДата() - стр.ДатаВыводаПозиции)/86400 < 90 Тогда
			//		стрВылета = ТЗВылета.Добавить();
			//		стрВылета.Товар = стр.ТоварСсылка;
			//		стрВылета.ДатаЗаписи = Дата(1,1,1);
			//	ИначеЕсли стр.Продажи >= 0 и (ТекущаяДата() - стр.ДатаВыводаПозиции)/86400 >= 90 и стр.Заказать > 0 Тогда
			//		
			//		ЛОЗ = РегистрыСведений.ЛогОбнуленияЗаказа.СоздатьМенеджерЗаписи();
			//		ЛОЗ.КодСклада = КодСклада;
			//		ЛОЗ.КодТовара = стр.Код;
			//		ЛОЗ.ДатаЗаписи = ТекДата;
			//		ЛОЗ.ГруппаАП = стр.ГруппаАП;
			//		ЛОЗ.ДатаВылета = стр.ДатаВыводаПозиции;
			//		ЛОЗ.ДнейПродаж = стр.ДнейПродаж;
			//		ЛОЗ.Заказать = стр.Заказать;
			//		ЛОЗ.Сумма = стр.Сумма;
			//		ЛОЗ.Продажи = стр.Продажи;
			//		ЛОЗ.Остаток = стр.Остаток;
			//		ЛОЗ.СпособОбнуления = "ВЫЛ";
			//		ЛОЗ.Записать();
			//		
			//		
			//		стр.Сумма = 0;
			//		стр.Заказать = 0;
			//		
			//	КонецЕсли;
			//КонецЕсли;
			//========================== БЛОК ОБНУЛЕНИЯ ЗАКАЗА ПО ТОВАРАМ ТРЕБУЮЩИМ АВТОРИЗАЦИЮ ====================
			Если стр.ЕстьТоварТребующийАвторизации и стр.ЕстьТоварВШаблоне = Ложь и стр.Заказать > 0 Тогда
				
					ЛОЗ = РегистрыСведений.ЛогОбнуленияЗаказа.СоздатьМенеджерЗаписи();
					ЛОЗ.КодСклада = КодСклада;
					ЛОЗ.КодТовара = стр.Код;
					ЛОЗ.ДатаЗаписи = ТекДата;
					ЛОЗ.ГруппаАП = стр.ГруппаАП;
					ЛОЗ.ДатаВылета = стр.ДатаВыводаПозиции;
					ЛОЗ.ДнейПродаж = стр.ДнейПродаж;
					ЛОЗ.Заказать = стр.Заказать;
					ЛОЗ.Сумма = стр.Сумма;
					ЛОЗ.Продажи = стр.Продажи;
					ЛОЗ.Остаток = стр.Остаток;
					ЛОЗ.СпособОбнуления = "ТТА";
					ЛОЗ.Записать();
					
					стр.Сумма = 0;
					стр.Заказать = 0;
					стр.ЗаказатьПоКумакс2 = 0;
					
			КонецЕсли;
				
			Если стр.ЗаказатьПоКумакс2 > 0 Тогда
				НоваяСтрока = ТЗДляТоргов.Добавить();
				НоваяСтрока.ДатаРасчета = ДатаРасчета;
				НоваяСтрока.КодТовара = стр.Код;
				НоваяСтрока.КодСклада = КодСклада;
				НоваяСтрока.ВПути = стр.ВПути;
				НоваяСтрока.Остаток = стр.Остаток;
				НоваяСтрока.НЗ = стр.НЗ;
				НоваяСтрока.Продажи = стр.Продажи;
				НоваяСтрока.Потребность = стр.Заказать;
				НоваяСтрока.ПотребностьОтКуМакс2 = стр.ЗаказатьПоКумакс2;
				НоваяСтрока.Коробов = стр.Коробов;
				НоваяСтрока.ГруппаАП = стр.ГруппаАП;
			КонецЕсли;
				
			// ================================ КОНЕЦ ==========================================================
			
			Если НЕ ( стр.БылаНедостовернаяПозиция или стр.НедостовернаяПозиция ) и НЕ стр.ГруппаАП = "I" Тогда
				Если стр.СредняяСкорость >= ПорогСреднейСкорости Тогда
					стрСкорости = ТЗСкоростей.Добавить();
					стрСкорости.КодАптеки	= КодСклада;
					стрСкорости.КодТовара	= стр.Код;
					стрСкорости.Скорость	= стр.СредняяСкорость;
					стрСкорости.ГруппаАП	= стр.ГруппаАП;
					стрСкорости.Продажи		= стр.Продажи;
					стрСкорости.ДнейПродаж	= стр.ДнейПродаж;
					стрСкорости.ДнейРеализации = стр.ДнейРеализации;
				КонецЕсли;
			КонецЕсли;
			
			//================= Расчет дефектуры =========================
			Если НЕ ( стр.БылаНедостовернаяПозиция или стр.НедостовернаяПозиция ) и стр.СредняяСкорость >= ПорогСреднейСкорости и НЕ стр.ГруппаАП = "I" Тогда
				КоличествоДеф = стр.СредняяСкорость*4 - стр.Остаток;
			ИначеЕсли НЕ стр.ГруппаАП = "I" и стр.Остаток = 0 Тогда
				КоличествоДеф = стр.Заказать;
			Иначе
				КоличествоДеф = 0;
			КонецЕсли;
			
			Если КоличествоДеф > 0 Тогда
				стрДеф = ТЗДефектура.Добавить();
				стрДеф.КодАптеки	= КодСклада;
				стрДеф.КодТовара	= стр.Код;
				стрДеф.Количество	= КоличествоДеф;
				стрДеф.ГруппаАП		= стр.ГруппаАП;
			КонецЕсли;			
			//============== конец расчета дефектуры =====================
			
			
		КонецЦикла;
		
		Если ТЗВылета.Количество() > 0 Тогда
			Для каждого стрВылета из ТЗВылета Цикл
				МЗ = РегистрыСведений.ВыводПозицийИзМатрицы.СоздатьМенеджерЗаписи();
				МЗ.Аптека = Аптека;
				МЗ.Товар = стрВылета.Товар;
				МЗ.ДатаЗаписи = стрВылета.ДатаЗаписи;
				МЗ.Записать();
			КонецЦикла;
		КонецЕсли;
		
		//Запишем скорости продаж в регистр
		НаборСкоростей = РегистрыСведений.СкоростиПродаж.СоздатьНаборЗаписей();
		НаборСкоростей.Отбор.КодАптеки.Установить(КодСклада);	
		НаборСкоростей.Загрузить(ТЗСкоростей);
		Попытка
			НаборСкоростей.Записать();
		Исключение
		КонецПопытки;
		
		//Запишем дефектуру в регистр
		НаборСкоростей = РегистрыСведений.ДефектураРозница.СоздатьНаборЗаписей();
		НаборСкоростей.Отбор.КодАптеки.Установить(КодСклада);	
		НаборСкоростей.Загрузить(ТЗДефектура);
		НаборСкоростей.Записать();		
		
		Набор = РегистрыСведений.РасчетТоргов.СоздатьНаборЗаписей();
		Набор.Отбор.ДатаРасчета.Установить(ДатаРасчета);
		Набор.Отбор.КодСклада.Установить(КодСклада);
		Набор.Загрузить(ТЗДляТоргов);
		Попытка
		  Набор.Записать();
		Исключение
		КонецПопытки;

		
		Если ИспользоватьМатрицуНедостоверных Тогда
			Запрос.Текст = "УНИЧТОЖИТЬ МН;";
			Запрос.Выполнить();
			МТ.Закрыть();
		КонецЕсли;
		
		Если ОбрезатьНедостоверные Тогда
			Если СписокНедостоверныхСтрок.Количество() > 0 Тогда
				Для Каждого позиция из СписокНедостоверныхСтрок цикл
					ТЗ.Удалить(позиция.Значение);
				КонецЦикла;					
			КонецЕсли;
		Иначе    //добавлено 10.08.2015 19:14
			Для каждого стр из СписокНедостоверныхСтрок Цикл
				МЗ = РегистрыСведений.РасчетыНедостоверныхПозиций.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(МЗ,стр.Значение);
				МЗ.ДатаЗаписи = ТекущаяДата();
				МЗ.Аптека = Аптека;
				МЗ.Записать();
			КонецЦикла;
			
			Для Каждого позиция из СписокНедостоверныхСтрок цикл
				ТЗ.Удалить(позиция.Значение);
			КонецЦикла;			
		КонецЕсли;
		
		ТЗ.Колонки.Удалить("Подкатегория");
		ТЗ.Колонки.Удалить("МинимальныйЗаказ");
		ТЗ.Колонки.Удалить("Коробов");
		ТЗ.Колонки.Удалить("НеЗаказывать");

		Возврат ТЗ;

	
КонецФункции


Функция РасчетАвтозаказаОкончательный2016(ТЗЗапроса,Аптека,ПараметрыРасчета,СуммыЗакрытияТовараВПути = Неопределено,ЗаводскиеПараметрыТовара = Неопределено) Экспорт	
		


	//КоэффициентЗаказаA	= ПараметрыРасчета.КоэффициентЗаказаA;
	//КоэффициентЗаказаB	= ПараметрыРасчета.КоэффициентЗаказаB;
	//КоэффициентЗаказаC	= ПараметрыРасчета.КоэффициентЗаказаC;
	//КоэффициентЗаказаD	= ПараметрыРасчета.КоэффициентЗаказаD;
	ОграничениеДляНовыхАптек = ПараметрыРасчета.ОграничениеДляНовыхАптек;
	Поле_Коэфф			= 2;
	Флаг_УчестьРеквизитминимальныйЗаказ = ПараметрыРасчета.Флаг_УчестьРеквизитминимальныйЗаказ;
	УчитыватьКратностьЗаказа = ПараметрыРасчета.УчитыватьКратностьЗаказа;
	ПрименятьКоэффПоНЗ	= Ложь;
	КоэффПоНЗ			= 0;
	//ТекДата				= ПараметрыРасчета.ТекДата;
	УчитыватьНЗ			= ПараметрыРасчета.УчитыватьНЗ;
	ПорогСреднейСкорости			= ПараметрыРасчета.ПорогСреднейСкорости;
	МинимальныйПорогСреднейСкорости = ПараметрыРасчета.МинимальныйПорогСреднейСкорости;	
	ТаблицаКритериевОбнуленияЗаказа = ПараметрыРасчета.ТаблицаКритериевОбнуленияЗаказа;
	
	СубъектРФ = Аптека.СубъектРФ;
	ИспользоватьМатрицуНДнаПлохихСкоростях = Аптека.ИспользоватьМатрицуНДнаПлохихСкоростях;
	
	ДатаРасчета = НачалоДня(ТекущаяДата());
	КодСклада = Аптека.Код;

	ТЗДляТоргов = Новый ТаблицаЗначений;
	ТЗДляТоргов.Колонки.Добавить("ДатаРасчета");
	ТЗДляТоргов.Колонки.Добавить("КодСклада");
	ТЗДляТоргов.Колонки.Добавить("КодТовара");
	ТЗДляТоргов.Колонки.Добавить("ВПути");
	ТЗДляТоргов.Колонки.Добавить("Остаток");
	ТЗДляТоргов.Колонки.Добавить("НЗ");
	ТЗДляТоргов.Колонки.Добавить("Продажи");
	ТЗДляТоргов.Колонки.Добавить("Потребность");
	ТЗДляТоргов.Колонки.Добавить("ПотребностьОтКуМакс2");
	ТЗДляТоргов.Колонки.Добавить("Коробов");
	ТЗДляТоргов.Колонки.Добавить("ГруппаАП");
	
	ТЗСкоростей = Новый ТаблицаЗначений;
	ТЗСкоростей.Колонки.Добавить("КодАптеки");
	ТЗСкоростей.Колонки.Добавить("КодТовара");
	ТЗСкоростей.Колонки.Добавить("Скорость");
	ТЗСкоростей.Колонки.Добавить("ГруппаАП");
	ТЗСкоростей.Колонки.Добавить("Продажи");
	ТЗСкоростей.Колонки.Добавить("ДнейПродаж");
	ТЗСкоростей.Колонки.Добавить("ДнейРеализации");
	
	ТЗВылета = Новый ТаблицаЗначений;
	ТЗВылета.Колонки.Добавить("Товар");
	ТЗВылета.Колонки.Добавить("ДатаЗаписи");
	
	ТЗДефектура = Новый ТаблицаЗначений;
	ТЗДефектура.Колонки.Добавить("КодАптеки");
	ТЗДефектура.Колонки.Добавить("КодТовара");
	ТЗДефектура.Колонки.Добавить("Количество");
	ТЗДефектура.Колонки.Добавить("ГруппаАП");
	
	Если Аптека.Фирма.Код = 181 Тогда
		ЭтоФармакор = Истина;
	Иначе
		ЭтоФармакор = Ложь;
	КонецЕсли;
			
	
	ТЗЗапроса.Свернуть("Код,Цена,Активный","СредняяСкорость,Продажи,ЕдиницаДляСвертки,Dx,СуммаЗакуп,ДеньРеализации");
	
	ЗакрытьТоварыВПути(Аптека,ТекущаяДата(),СуммыЗакрытияТовараВПути);
			
			//ТХТ = "ВЫБРАТЬ
			//	  |	Т.Код,
			//	  |	Т.СредняяСкорость КАК СредняяСкорость,
			//	  |	Т.Продажи КАК Продажи,
			//	  |	Т.ЕдиницаДляСвертки КАК ДнейПродаж,
			//	  |	Т.ДеньРеализации КАК ДнейРеализации,
			//	  |	Т.Dx КАК Dx,
			//	  |	Т.Цена КАК Цена,
			//	  |	Т.Активный,
			//	  |	Т.СуммаЗакуп
			//	  |ПОМЕСТИТЬ ВТ1
			//	  |ИЗ
			//	  |	&Таб КАК Т
			//	  |;
			//	  |
			//	  |////////////////////////////////////////////////////////////////////////////////
			//	  |ВЫБРАТЬ
			//	  |	Т.Код,
			//	  |	АП.Ссылка КАК ТоварСсылка,
			//	  |	Т.Цена,
			//	  |	Т.Активный,
			//	  |	СУММА(Т.СредняяСкорость) КАК СредняяСкорость,
			//	  |	СУММА(Т.Продажи) КАК Продажи,
			//	  |	СУММА(Т.ДнейПродаж) КАК ДнейПродаж,
			//	  |	СУММА(Т.Dx) КАК Dx,
			//	  |	СУММА(Т.СуммаЗакуп) КАК СуммаЗакуп
			//	  |ПОМЕСТИТЬ ВТ
			//	  |ИЗ
			//	  |	ВТ1 КАК Т
			//	  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			//	  |		ПО (АП.Код = Т.Код)
			//	  |
			//	  |СГРУППИРОВАТЬ ПО
			//	  |	Т.Код,
			//	  |	АП.Ссылка,
			//	  |	Т.Цена,
			//	  |	Т.Активный
			//	  |;
			ТХТ = "ВЫБРАТЬ
			      |	Т.Код КАК Код,
			      |	Т.СредняяСкорость КАК СредняяСкорость,
			      |	Т.Продажи КАК Продажи,
			      |	Т.ЕдиницаДляСвертки КАК ДнейПродаж,
			      |	Т.ДеньРеализации КАК ДнейРеализации,
			      |	Т.Dx КАК Dx,
			      |	Т.Цена КАК Цена,
			      |	Т.Активный КАК Активный,
			      |	Т.СуммаЗакуп КАК СуммаЗакуп
			      |ПОМЕСТИТЬ ВТ1
			      |ИЗ
			      |	&Таб КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Т.Код КАК Код,
			      |	АП.Ссылка КАК ТоварСсылка,
			      |	ВЫБОР
			      |		КОГДА Т.Цена = 0
			      |			ТОГДА АП.ЗакупочнаяЦена
			      |		ИНАЧЕ Т.Цена
			      |	КОНЕЦ КАК Цена,
			      |	Т.Активный КАК Активный,
			      |	Т.СредняяСкорость КАК СредняяСкорость,
			      |	Т.Продажи КАК Продажи,
			      |	Т.ДнейПродаж КАК ДнейПродаж,
			      |	Т.ДнейРеализации КАК ДнейРеализации,
			      |	Т.Dx КАК Dx,
			      |	Т.СуммаЗакуп КАК СуммаЗакуп
			      |ПОМЕСТИТЬ ВТ
			      |ИЗ
			      |	ВТ1 КАК Т
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = Т.Код)
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	Т.Код
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И НЕ МатрицаНЗ.ВидНЗ = ЗНАЧЕНИЕ(Перечисление.ВидыНЗ.НЗ_6)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ_4_5
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И МатрицаНЗ.ВидНЗ В(&ВидыНЗ)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ ПродажиСменККМ.ТоварКод
			      |	КОНЕЦ КАК КодТовара,
			      |	ВЫРАЗИТЬ(СУММА(ПродажиСменККМ.Количество / Партии.К) КАК ЧИСЛО(12, 0)) КАК Продажа
			      |ПОМЕСТИТЬ ПродажиСегоДня
			      |ИЗ
			      |	РегистрНакопления.УЗ_ПродажиСменККМ КАК ПродажиСменККМ
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |		ПО (Партии.Код = ПродажиСменККМ.ПартияКод)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = ПродажиСменККМ.ТоварКод)
			      |ГДЕ
			      |	ПродажиСменККМ.Период >= &НачДатаСегоДня
			      |	И ПродажиСменККМ.СкладКод = &АптекаКод
			      |	И НЕ Партии.ТипПартии = ""I""
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ ПродажиСменККМ.ТоварКод
			      |	КОНЕЦ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ ПартииОстатки.ТоварКод
			      |	КОНЕЦ КАК КодТовара,
			      |	МАКСИМУМ(Партии.ДатаПоступления) КАК МаксДатаПрихода,
			      |	СУММА(ПартииОстатки.КоличествоОстаток / Партии.К) КАК Остаток
			      |ПОМЕСТИТЬ ОстатокНаНачало
			      |ИЗ
			      |	РегистрНакопления.УЗ_Партии.Остатки(, СкладКод = &АптекаКод) КАК ПартииОстатки
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |		ПО (Партии.Код = ПартииОстатки.ПартияКод)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = ПартииОстатки.ТоварКод)
			      |ГДЕ
			      |	ПартииОстатки.КоличествоОстаток > 0
			      |	И Партии.К > 0
			      |	И НЕ Партии.ТипПартии = ""I""
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ ПартииОстатки.ТоварКод
			      |	КОНЕЦ
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |/////////////////////////////ЕНТ--729.08.10.2018. Добавлена ВТ для определения количества Заказано
			      |ВЫБРАТЬ
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ УЗ_ТоварАрбитражОстатки.ТоварКод
			      |	КОНЕЦ КАК КодТовара,
			      |	СУММА(УЗ_ТоварАрбитражОстатки.КоличествоОстаток / УЗ_Партии.К) КАК КоличествоОстаток
			      |ПОМЕСТИТЬ ВТ_АрбитражПоТоварно
			      |ИЗ
			      |	РегистрНакопления.УЗ_ТоварАрбитраж.Остатки(, СкладКод = &АптекаКод) КАК УЗ_ТоварАрбитражОстатки
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
			      |		ПО УЗ_ТоварАрбитражОстатки.ПартияКод = УЗ_Партии.Код
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = УЗ_ТоварАрбитражОстатки.ТоварКод)
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ УЗ_ТоварАрбитражОстатки.ТоварКод
			      |	КОНЕЦ
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	СписаниеТовар.Товар КАК ТоварСсылка,
			      |	ВЫРАЗИТЬ(СУММА(СписаниеТовар.Количество * СписаниеТовар.Коэфф / СписаниеТовар.КоэффициентРазбивки) КАК ЧИСЛО(12, 0)) КАК СписанноеКоличество
			      |ПОМЕСТИТЬ Списания
			      |ИЗ
			      |	Документ.УЗ_Списание.Товар КАК СписаниеТовар
			      |ГДЕ
			      |	СписаниеТовар.Ссылка.Дата > &ДатаТриМесяцаНазад
			      |	И СписаниеТовар.Ссылка.Склад = &Аптека
			      |	И СписаниеТовар.Ссылка.Проведен = ЛОЖЬ
			      |	И СписаниеТовар.Ссылка.ПометкаУдаления = ЛОЖЬ
			      |	И СписаниеТовар.Ссылка.СтатусДокАптеки = ЗНАЧЕНИЕ(Перечисление.СтатусДокАптеки.КОбработкеОфисом)
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	СписаниеТовар.Товар
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Выборка.Код КАК Код,
			      |	Выборка.ТоварСсылка КАК ТоварСсылка,
			      |	Выборка.ГруппаАП КАК ГруппаАП,
			      |	Выборка.КуМин КАК КуМин,
			      |	Выборка.КуМакс КАК КуМакс,
			      |	Выборка.КуМакс2 КАК КуМакс2,
			      |	Выборка.НЗ КАК НЗ,
			      |	Выборка.Продажи КАК Продажи,
			      |	Выборка.Остаток КАК Остаток,
			      |	ВЫБОР
			      |		КОГДА Выборка.Остаток <= Выборка.КуМин
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |				И (Выборка.Активный = ИСТИНА
			      |					ИЛИ Выборка.ТоварРазрешен)
			      |			ТОГДА 
				  |				ВЫБОР
				  |					КОГДА Выборка.Остаток > Выборка.СредняяСкорость
				  |						ТОГДА ВЫРАЗИТЬ(Выборка.КуМакс - (Выборка.Остаток - Выборка.СредняяСкорость) КАК ЧИСЛО(10, 0))
				  |					ИНАЧЕ Выборка.КуМакс
				  |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Заказать,
			      |	ВЫБОР
			      |		КОГДА Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |				И (Выборка.Активный = ИСТИНА
			      |					ИЛИ Выборка.ТоварРазрешен)
			      |			ТОГДА ВЫБОР
			      |					КОГДА Выборка.Остаток > Выборка.СредняяСкорость
			      |						ТОГДА ВЫРАЗИТЬ(Выборка.КуМакс2 - (Выборка.Остаток - Выборка.СредняяСкорость) КАК ЧИСЛО(10, 0))
			      |					ИНАЧЕ Выборка.КуМакс2
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ЗаказатьПоКумакс2,
			      |	Выборка.ДнейПродаж КАК ДнейПродаж,
			      |	Выборка.ДнейРеализации КАК ДнейРеализации,
			      |	Выборка.СредняяСкорость КАК СредняяСкорость,
			      |	ВЫБОР
			      |		КОГДА Выборка.Остаток = 0
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |			ТОГДА 1
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Дефектура,
			      |	Выборка.Цена КАК Цена,
			      |	0 КАК Сумма,
			      |	Выборка.ПризнакРекламнойАкции КАК ПризнакРекламнойАкции,
			      |	Выборка.СрокДействияРекламнойАкции КАК СрокДействияРекламнойАкции,
			      |	Выборка.Активный КАК Активный,
			      |	Выборка.Dx КАК Dx,
			      |	ВЫБОР
			      |		КОГДА Выборка.Продажи > 0
			      |			ТОГДА ВЫРАЗИТЬ(Выборка.СуммаЗакуп / Выборка.Продажи КАК ЧИСЛО(10, 2))
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ЦенаЗакупПродажи,
			      |	Выборка.МаксДатаПрихода КАК МаксДатаПрихода,
			      |	Выборка.ТоварРазрешен КАК ТоварРазрешен
			      |ПОМЕСТИТЬ ИтоговыйЗаказ
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ВТ.Код КАК Код,
			      |		ВТ.ТоварСсылка КАК ТоварСсылка,
			      |		Матрица.ГруппаАПИтог КАК ГруппаАП,
			      |		ВТ.Продажи КАК Продажи,
			      |		ВТ.ДнейПродаж КАК ДнейПродаж,
			      |		ВТ.ДнейРеализации КАК ДнейРеализации,
			      |		ЕСТЬNULL(Матрица.КуМин, 0) КАК КуМин,
			      |		ЕСТЬNULL(Матрица.КуМакс, 0) КАК КуМакс,
			      |		ЕСТЬNULL(Матрица.КуМакс2, 0) КАК КуМакс2,
			      |		ЕСТЬNULL(ВыборкаНЗ.НЗ, 0) КАК НЗ,
			      |		ВТ.Цена КАК Цена,
			      |		ВЫБОР
			      |			КОГДА ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) - ЕСТЬNULL(ПродажиСегоДня.Продажа, 0) - ЕСТЬNULL(Списания.СписанноеКоличество, 0) - ЕСТЬNULL(ВТ_АрбитражПоТоварно.КоличествоОстаток, 0) < 0
			      |				ТОГДА 0
			      |			ИНАЧЕ ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) - ЕСТЬNULL(ПродажиСегоДня.Продажа, 0) - ЕСТЬNULL(Списания.СписанноеКоличество, 0) - ЕСТЬNULL(ВТ_АрбитражПоТоварно.КоличествоОстаток, 0)
			      |		КОНЕЦ КАК Остаток,
			      |		ЕСТЬNULL(ВТ.СредняяСкорость, 0) КАК СредняяСкорость,
			      |		ЕСТЬNULL(ВыборкаНЗ.РекламнаяАкция, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |		ЕСТЬNULL(ВыборкаНЗ.СрокДействияРекламы, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |		ВТ.Активный КАК Активный,
			      |		ВТ.Dx КАК Dx,
			      |		ВТ.СуммаЗакуп КАК СуммаЗакуп,
			      |		ВЫБОР
			      |			КОГДА РТ.Товар ЕСТЬ NULL
			      |				ТОГДА ЛОЖЬ
			      |			ИНАЧЕ ИСТИНА
			      |		КОНЕЦ КАК ТоварРазрешен,
			      |		ЕСТЬNULL(ОстатокНаНачало.МаксДатаПрихода, ДАТАВРЕМЯ(1, 1, 1)) КАК МаксДатаПрихода
			      |	ИЗ
			      |		ВТ КАК ВТ
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ОстатокНаНачало КАК ОстатокНаНачало
			      |			ПО (ОстатокНаНачало.КодТовара = ВТ.Код)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Матрица КАК Матрица
			      |			ПО (Матрица.Аптека = &Аптека)
			      |				И (Матрица.Товар = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ КАК ВыборкаНЗ
			      |			ПО ВТ.ТоварСсылка = ВыборкаНЗ.ТоварСсылка
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ПродажиСегоДня КАК ПродажиСегоДня
			      |			ПО (ПродажиСегоДня.КодТовара = ВТ.Код)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ Списания КАК Списания
			      |			ПО (Списания.ТоварСсылка = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АрбитражПоТоварно КАК ВТ_АрбитражПоТоварно
			      |			ПО (ВТ_АрбитражПоТоварно.КодТовара = ВТ.Код)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенныеТовары КАК РТ
			      |			ПО (РТ.Аптека = &Аптека)
			      |				И (РТ.Товар = ВТ.ТоварСсылка)
			      |				И (&ИспользоватьРазрешенныеТоварыДляЗаказа = ИСТИНА)) КАК Выборка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ИсключенияАвтозаказа.Товар КАК ТоварССылка
			      |ПОМЕСТИТЬ Исключения
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |
			      |ОБЪЕДИНИТЬ
			      |
			      |ВЫБРАТЬ
			      |	ИсключенияАвтозаказа.Товар
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = &Аптека
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВыборкаПути.КодТовара КАК КодТовара,
			      |	СУММА(ВыборкаПути.ВПути) КАК ВПути
			      |ПОМЕСТИТЬ ТоварыВПути
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ВЫБОР
			      |			КОГДА Заказ.Товар.КодОП > 0
			      |				ТОГДА Заказ.Товар.КодОП
			      |			ИНАЧЕ Заказ.Товар.Код
			      |		КОНЕЦ КАК КодТовара,
			      |		Заказ.КоличествоОстаток КАК ВПути
			      |	ИЗ
			      |		РегистрНакопления.ЗаказПоставщику.Остатки(, Склад = &Аптека) КАК Заказ
			      |	ГДЕ
			      |		Заказ.КоличествоОстаток > 0
			      |	
			      |	ОБЪЕДИНИТЬ ВСЕ
			      |	
			      |	ВЫБРАТЬ
			      |		ВЫБОР
			      |			КОГДА АП.КодОП > 0
			      |				ТОГДА АП.КодОП
			      |			ИНАЧЕ ТоварНаПриемке.ТоварКод
			      |		КОНЕЦ,
			      |		ТоварНаПриемке.Количество / ТоварНаПриемке.К
			      |	ИЗ
			      |		РегистрСведений.ТоварНаПриемке КАК ТоварНаПриемке
			      |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |			ПО (АП.Код = ТоварНаПриемке.ТоварКод)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |			ПО (Партии.Код = ТоварНаПриемке.ПартияКод)
			      |	ГДЕ
			      |		ТоварНаПриемке.СкладКод = &АптекаКод
			      |		И НЕ Партии.ТипПартии = ""I"") КАК ВыборкаПути
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВыборкаПути.КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ИсторияЗакупки.Товар КАК Товар,
			      |	СРЕДНЕЕ(ИсторияЗакупки.Цена) КАК ЦенаЗакупки
			      |ПОМЕСТИТЬ ВТИсторияЗакупки
			      |ИЗ
			      |	РегистрСведений.ИсторияЗакупочнойЦены КАК ИсторияЗакупки
			      |ГДЕ
			      |	ИсторияЗакупки.СубъектРФ = &СубъектРФ
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ИсторияЗакупки.Товар
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ШаблоныМатрицНЗТовары.Товар КАК Товар,
			      |	ИСТИНА КАК ЕстьТовар
			      |ПОМЕСТИТЬ ТоварвШаблонах
			      |ИЗ
			      |	Справочник.ШаблоныМатрицНЗ.Товары КАК ШаблоныМатрицНЗТовары
			      |ГДЕ
			      |	ШаблоныМатрицНЗТовары.Ссылка В
			      |			(ВЫБРАТЬ
			      |				ШаблоныМатрицНЗПоАптекам.Шаблон
			      |			ИЗ
			      |				РегистрСведений.ШаблоныМатрицНЗПоАптекам КАК ШаблоныМатрицНЗПоАптекам
			      |			ГДЕ
			      |				ШаблоныМатрицНЗПоАптекам.Аптека = &Аптека
			      |				И ШаблоныМатрицНЗПоАптекам.Шаблон.ПометкаУдаления = ЛОЖЬ)
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	&АптекаКод КАК КодАптеки,
			      |	ИТОГОВЫЙЗАКАЗ.Код КАК КодТовара,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка КАК ТоварСсылка,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование КАК Товар,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.МинимальныйЗаказ КАК МинимальныйЗаказ,
			      |	ИТОГОВЫЙЗАКАЗ.ГруппаАП КАК ГруппаАП,
			      |	ИТОГОВЫЙЗАКАЗ.КуМин КАК КуМин,
			      |	ИТОГОВЫЙЗАКАЗ.КуМакс КАК КуМакс,
			      |	ИТОГОВЫЙЗАКАЗ.КуМакс2 КАК КуМакс2,
			      |	ИТОГОВЫЙЗАКАЗ.НЗ КАК НЗ,
			      |	ИТОГОВЫЙЗАКАЗ.Продажи КАК Продажи,
			      |	ЕСТЬNULL(ТоварыВПути.ВПути, 0) КАК ВПути,
			      |	ИТОГОВЫЙЗАКАЗ.Остаток КАК Остаток,
			      |	ВЫБОР
			      |		КОГДА ЕСТЬNULL(неликвиды.КодТовара, 0) > 0
			      |				ИЛИ &НеУчитыватьТоварВПутиПриРасчетеЗаказа = ЛОЖЬ
			      |					И ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
			      |			ТОГДА 0
			      |		ИНАЧЕ ИТОГОВЫЙЗАКАЗ.Заказать - ЕСТЬNULL(ТоварыВПути.ВПути, 0)
			      |	КОНЕЦ КАК Заказать,
			      |	ВЫБОР
			      |		КОГДА (ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
			      |				ИЛИ ЕСТЬNULL(неликвиды.КодТовара, 0) > 0)
			      |				И &НеУчитыватьТоварВПутиПриРасчетеЗаказа = ЛОЖЬ
			      |			ТОГДА 0
			      |		ИНАЧЕ ИТОГОВЫЙЗАКАЗ.ЗаказатьПоКумакс2
			      |	КОНЕЦ КАК ЗаказатьПоКуМакс2,
			      |	ВЫБОР
			      |		КОГДА ЕСТЬNULL(неликвиды.КодТовара, 0) > 0
			      |			ТОГДА ИСТИНА
			      |		ИНАЧЕ ЛОЖЬ
			      |	КОНЕЦ КАК НеЗаказывать,
			      |	0 КАК Резерв,
			      |	ИТОГОВЫЙЗАКАЗ.ДнейПродаж КАК ДнейПродаж,
			      |	ИТОГОВЫЙЗАКАЗ.ДнейРеализации КАК ДнейРеализации,
			      |	ИТОГОВЫЙЗАКАЗ.СредняяСкорость КАК СредняяСкорость,
			      |	ИТОГОВЫЙЗАКАЗ.Дефектура КАК Дефектура,
			      |	ИТОГОВЫЙЗАКАЗ.Цена КАК Цена,
			      |	ИТОГОВЫЙЗАКАЗ.Сумма КАК Сумма,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.ПризнакРекламнойАкции, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.СрокДействияРекламнойАкции, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |	ИТОГОВЫЙЗАКАЗ.Активный КАК Активный,
			      |	ЕСТЬNULL(ПерестокАптек.Пересток, 0) КАК Пересток,
			      |	ИТОГОВЫЙЗАКАЗ.Dx КАК Dx,
			      |	ЛОЖЬ КАК НедостовернаяПозиция,
			      |	ЛОЖЬ КАК БылаНедостовернаяПозиция,
			      |	ВЫБОР
			      |		КОГДА Исключения.ТоварССылка ЕСТЬ NULL
			      |			ТОГДА 0
			      |		ИНАЧЕ 1
			      |	КОНЕЦ КАК Исключение,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Подкатегория КАК Подкатегория,
			      |	ВЫБОР
			      |		КОГДА неликвиды.КодТовара ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК неликвид,
			      |	ВЫБОР
			      |		КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи > 0
			      |				И ЕСТЬNULL(ВТИсторияЗакупки.ЦенаЗакупки, 0) > 100
			      |			ТОГДА ВЫБОР
			      |					КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи > ВТИсторияЗакупки.ЦенаЗакупки
			      |						ТОГДА 100 * (ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи - ВТИсторияЗакупки.ЦенаЗакупки) / ВТИсторияЗакупки.ЦенаЗакупки
			      |					КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи < ВТИсторияЗакупки.ЦенаЗакупки
			      |						ТОГДА 100 * (ВТИсторияЗакупки.ЦенаЗакупки - ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи) / ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи
			      |					ИНАЧЕ 0
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ОтношениеЗакупки,
			      |	ИТОГОВЫЙЗАКАЗ.МаксДатаПрихода КАК МаксДатаПрихода,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварРазрешен КАК ТоварРазрешен,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.ТипДляЦО КАК ТипДляЦО,
			      |	0 КАК ЗаказатьДоПривидения,
			      |	0 КАК КоличествоВСпайке,
			      |	0 КАК КоличествоВКоробе,
			      |	0 КАК Коробов,
			      |	ЕСТЬNULL(ВыводПозицийИзМатрицы.ДатаЗаписи, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВыводаПозиции,
			      |	ЕСТЬNULL(ТоварВШаблонах.ЕстьТовар, ЛОЖЬ) КАК ЕстьТоварВШаблоне,
			      |	ВЫБОР
			      |		КОГДА ТоварТребующийАвторизации.Товар ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК ЕстьТоварТребующийАвторизации,
			      |	ВЫБОР
			      |		КОГДА ВыборкаНЗ_4_5.НЗ ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК ЕстьНЗ_4_5,
			      |	ЕСТЬNULL(ВыборкаНЗ_4_5.НЗ, 0) КАК НЗ_4_5
			      |ИЗ
			      |	ИтоговыйЗаказ КАК ИТОГОВЫЙЗАКАЗ
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВПути КАК ТоварыВПути
			      |		ПО (ТоварыВПути.КодТовара = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПерестокАптек КАК ПерестокАптек
			      |		ПО (ПерестокАптек.Аптека = &Аптека)
			      |			И (ПерестокАптек.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Исключения КАК Исключения
			      |		ПО (Исключения.ТоварССылка = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Неликвиды КАК неликвиды
			      |		ПО (неликвиды.Аптека = &Аптека)
			      |			И (неликвиды.КодТовара = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсторияЗакупки КАК ВТИсторияЗакупки
			      |		ПО (ВТИсторияЗакупки.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыводПозицийИзМатрицы КАК ВыводПозицийИзМатрицы
			      |		ПО (ВыводПозицийИзМатрицы.Аптека = &Аптека)
			      |			И (ВыводПозицийИзМатрицы.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварвШаблонах КАК ТоварВШаблонах
			      |		ПО (ТоварВШаблонах.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварТребующийАвторизации КАК ТоварТребующийАвторизации
			      |		ПО (ТоварТребующийАвторизации.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ_4_5 КАК ВыборкаНЗ_4_5
			      |		ПО ИТОГОВЫЙЗАКАЗ.ТоварСсылка = ВыборкаНЗ_4_5.ТоварСсылка
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ1
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ_4_5
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТИсторияЗакупки
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ИтоговыйЗаказ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ОстатокНаНачало
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Исключения
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТоварыВПути
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ПродажиСегоДня
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Списания
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТоварвШаблонах
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ";
			
				  
	  
				  //|		КОГДА (Выборка.Остаток <= Выборка.КуМин) и (Выборка.ГруппаАП <> ""I"")  
		//ИсключениеВидаНЗ = Константы.ИсключатьВидНЗ.Получить();
		//Если НЕ ИсключениеВидаНЗ.Пустая() Тогда
		//	ТХТ = СтрЗаменить(ТХТ,"111 = 111", " МатрицаНЗ.ВидНЗ <> &НЗ_Исключение "	);
		//КонецЕсли;				
		ВидыНЗ = Новый СписокЗначений;
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_4);
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_5);

				  
		ТекДата  = ТекущаяДата();
	 	Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаОстатка",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("АптекаКод",Аптека.Код);
		Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
		Запрос.УстановитьПараметр("ТекущаяДата",ТекДата);
		Запрос.УстановитьПараметр("ДатаТриМесяцаНазад",КонецДня(ТекДата) - 60*60*24*30*2);
		Запрос.УстановитьПараметр("НачДатаСегоДня",НачалоДня(ТекДата));
		Запрос.УстановитьПараметр("КонДатаСегоДня",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("ВидыНЗ",ВидыНЗ);
		Запрос.УстановитьПараметр("Таб",ТЗЗапроса);
		Запрос.УстановитьПараметр("ИспользоватьРазрешенныеТоварыДляЗаказа",Константы.ИспользоватьРазрешенныеТоварыДляЗаказа.Получить());
		Запрос.УстановитьПараметр("НеУчитыватьТоварВПутиПриРасчетеЗаказа",Константы.НеУчитыватьТоварВПутиПриРасчетеЗаказа.Получить());

		ТЗ = Запрос.Выполнить().Выгрузить();	
		
		ПорогДнейДляВылетаПозиции = Константы.ПорогДнейДляВылетаТовара.Получить();
		ОбрезатьНедостоверные = Константы.ОчищатьРасчетЗаказаОтНедостоверных.Получить();
		СписокНедостоверныхСтрок = Новый СписокЗначений;

		ИспользоватьМатрицуНедостоверных = Константы.ИспользоватьМатрицуНедостоверных.Получить(); 
		Если ИспользоватьМатрицуНедостоверных Тогда
			МТ = Новый МенеджерВременныхТаблиц;
			ТХТ = "ВЫБРАТЬ
			      |	МатрицаНедостоверных.ЦенаОт КАК ЦенаОт,
			      |	МатрицаНедостоверных.ЦенаДо,
			      |	МатрицаНедостоверных.ПродажиОт КАК ПродажиОт,
			      |	МатрицаНедостоверных.ПродажиДо,
			      |	МатрицаНедостоверных.ОстатокОт КАК ОстатокОт,
			      |	МатрицаНедостоверных.ОстатокДо,
			      |	МатрицаНедостоверных.ДнейПродажОт КАК ДнейПродажОт,
			      |	МатрицаНедостоверных.ДнейПродажДо,
			      |	МатрицаНедостоверных.Заказать
			      |ПОМЕСТИТЬ МН
			      |ИЗ
			      |	РегистрСведений.МатрицаНедостоверных КАК МатрицаНедостоверных
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ ПЕРВЫЕ 1
			      |	МН.ЦенаОт
			      |ИЗ
			      |	МН КАК МН
			      |;
			      |";

			Запрос.Текст = ТХТ;
			Запрос.МенеджерВременныхТаблиц = МТ;
			Рез = Запрос.Выполнить();
			Если Рез.Пустой() Тогда
				ИспользоватьМатрицуНедостоверных = Ложь;
				Запрос.Текст = "УНИЧТОЖИТЬ МН;";
				Запрос.Выполнить();
				МТ.Закрыть();
			Иначе
				ТХТ = "ВЫБРАТЬ
				|	МН.Заказать
				|ИЗ
				|	МН КАК МН
				|ГДЕ
				|	&Цена >= МН.ЦенаОт И &Цена < МН.ЦенаДо
				|	И &Продажа >= МН.ПродажиОт И &Продажа < МН.ПродажиДо
				|	И &Остаток >= МН.ОстатокОт И &Остаток < МН.ОстатокДо
				|	И &ДнейПродаж >= МН.ДнейПродажОт И &ДнейПродаж < МН.ДнейПродажДо";
				Запрос.Текст = ТХТ;				
			КонецЕсли;
		КонецЕсли;
			
		
		//Если КоэффициентЗаказаA = 1 и КоэффициентЗаказаB = 1 и КоэффициентЗаказаC = 1 и КоэффициентЗаказаD = 1 Тогда
		//Иначе
		//	Для Каждого стр из ТЗ Цикл
		//		Если стр.ГруппаАП = "A" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаA,0);
		//		ИначеЕсли стр.ГруппаАП = "B" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаB,0);
		//		ИначеЕсли стр.ГруппаАП = "C" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаC,0);
		//		ИначеЕсли стр.ГруппаАП = "D" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаD,0);					
		//		КонецЕсли;
		//	КонецЦикла;
		//КонецЕсли;
		
		
		
		спр_АП = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
		Госпитальные = спр_АП.НайтиПоКоду(17);
		Для каждого стр из ТЗ Цикл
			
			стр.Заказать = Макс(0,стр.Заказать);
			
			Если ОграничениеДляНовыхАптек = Истина Тогда
				Если стр.ДнейПродаж < 7 и стр.dx < 1 Тогда
				//Если стр.Продажи <> 0 Тогда
					УдвоенныеПродажи = (стр.Продажи*Поле_Коэфф);  // Исправил 2 на Поле_Коэфф по просьбе Санакоева 02/03/2010
					Если (стр.Заказать > УдвоенныеПродажи) и (стр.НЗ < УдвоенныеПродажи) Тогда
						стр.Заказать = УдвоенныеПродажи;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			
			
			Если Флаг_УчестьРеквизитМинимальныйЗаказ Тогда
				Попытка
					Если (стр.Заказать>0) Тогда
						// Если есть заказ
						//пер_МЗ = спр_АП.НайтиПоКоду(стр.Код).МинимальныйЗаказ;
						Если стр.Заказать<стр.МинимальныйЗаказ Тогда
							// Если Заказ>0 но меньше минимального заказа
							стр.Заказать = стр.МинимальныйЗаказ;
						Иначе
							Если УчитыватьКратностьЗаказа = Истина Тогда
								Если стр.МинимальныйЗаказ > 0 Тогда
									стр.Заказать = Окр(стр.Заказать/стр.МинимальныйЗаказ,0)*стр.МинимальныйЗаказ;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					//====================================== Для МАКС2 =========================
					Если (стр.ЗаказатьПоКуМакс2>0) Тогда
						// Если есть заказ
						//пер_МЗ = спр_АП.НайтиПоКоду(стр.Код).МинимальныйЗаказ;
						Если стр.ЗаказатьПоКуМакс2<стр.МинимальныйЗаказ Тогда
							// Если Заказ>0 но меньше минимального заказа
							стр.ЗаказатьПоКуМакс2 = стр.МинимальныйЗаказ;
						Иначе
							Если УчитыватьКратностьЗаказа = Истина Тогда
								Если стр.МинимальныйЗаказ > 0 Тогда
									стр.ЗаказатьПоКуМакс2 = Окр(стр.ЗаказатьПоКуМакс2/стр.МинимальныйЗаказ,0)*стр.МинимальныйЗаказ;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					//==========================================================================
					
				Исключение
					//Сообщить("Это сообщение только для ИТ! Ничего страшного :) "+ОписаниеОшибки());
					Прервать;
				КонецПопытки;
			КонецЕсли;
			
			Если ПрименятьКоэффПоНЗ = Истина Тогда
				Если стр.Заказать > 0 и стр.НЗ > 0 Тогда
					КоличествоСНЗ = Окр(стр.НЗ/КоэффПоНЗ,0);
					КоличествоСНЗ = ?(КоличествоСНЗ=0,1,КоличествоСНЗ);
					стр.Заказать = Макс(стр.Заказать,КоличествоСНЗ);	
				КонецЕсли;
				//====================================== Для МАКС2 =========================
				Если стр.ЗаказатьПоКуМакс2 > 0 и стр.НЗ > 0 Тогда
					КоличествоСНЗ = Окр(стр.НЗ/КоэффПоНЗ,0);
					КоличествоСНЗ = ?(КоличествоСНЗ=0,1,КоличествоСНЗ);
					стр.ЗаказатьПоКуМакс2 = Макс(стр.ЗаказатьПоКуМакс2,КоличествоСНЗ);
				КонецЕсли;
				//==========================================================================
			КонецЕсли;
			
			//Если ИспользоватьМатрицуНДнаПлохихСкоростях = Истина Тогда
			//	Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
			//		Если  стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" или стр.ГруппаАП = "D" Тогда
			//			Если стр.НЗ = 0 или (стр.НЗ > 0 и стр.СрокДействияРекламнойАкции < ТекДата и стр.ПризнакРекламнойАкции = Истина) Тогда
			//				стр.Кумин = 1;
			//				стр.Кумакс = 1;
			//				стр.Кумакс2 = 1;
			//				стр.БылаНедостовернаяПозиция = Истина;
			//				стр.НедостовернаяПозиция = Истина;
			//			КонецЕсли;
			//		КонецЕсли;
			//	КонецЕсли;
			//КонецЕсли;
			
			
			//Определяем недостоверные позиции 
			Если стр.Заказать > 0 и стр.НедостовернаяПозиция = Ложь и стр.ЕстьНЗ_4_5 = ЛОЖЬ Тогда
				Если стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" Тогда
					
					Если стр.Кумакс > стр.Продажи*2.5  и стр.Кумакс <> стр.НЗ Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;
					
					
					Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 4 и стр.ДнейПродаж <=25 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;	
				
					Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 2 и стр.ДнейПродаж <=25 и стр.Цена > 400 Тогда   // Санакоев 24.11.2014 17:37
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;						
					
					Если стр.ДнейПродаж < 15 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;
					
					Если стр.Продажи > 0 и стр.Заказать > 0 и стр.ПризнакРекламнойАкции = Ложь Тогда
						Отношение = стр.Заказать/стр.Продажи;
						Если Отношение > 2 или Отношение < 0.18 Тогда
							стр.БылаНедостовернаяПозиция = Истина;
							стр.Недостовернаяпозиция = Истина;	
						КонецЕсли;
					КонецЕсли;
					
					
					Если стр.Продажи = 1 и стр.НЗ = 0 и  стр.МинимальныйЗаказ = 0 Тогда
						Если  стр.ДнейПродаж > 4 и стр.Заказать > 2 Тогда
							стр.Заказать = 2;
						ИначеЕсли стр.ДнейПродаж < 4 и стр.Заказать > 3 Тогда
							стр.Заказать = 2;
						КонецЕсли;
						
					КонецЕсли;
					
					Если (стр.Остаток+стр.Заказать)/2 >= стр.Продажи и стр.ПризнакРекламнойАкции = Ложь  и стр.НЗ = 0
						и (стр.Остаток+стр.Заказать) >= 4 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;	
					КонецЕсли;
					
				КонецЕсли;  
				
				
				Если стр.НЗ > 4 и стр.НЗ = стр.КуМин  и Стр.НЗ = стр.КуМакс и стр.Заказать = 1 Тогда
					стр.Заказать = Мин(Окр(стр.НЗ/2),2);	
				КонецЕсли;
				
				Если стр.НЗ = стр.КуМин и стр.Заказать < 3 Тогда
				    Если стр.НЗ > 8 и стр.НЗ <= 19 Тогда
						стр.Заказать = Мин(Окр(стр.НЗ/2),2);
					ИначеЕсли стр.НЗ > 19  Тогда
						стр.Заказать = 0;
					КонецЕсли;
				КонецЕсли;

				
				//Если стр.Подкатегория = Госпитальные Тогда
				//	стр.БылаНедостовернаяПозиция = Истина;
				//	стр.НедостовернаяПозиция = Истина;
				//КонецЕсли;
				
				Если стр.ТоварРазрешен = Истина и стр.Активный = Ложь Тогда  // WO #43101 
					стр.НедостовернаяПозиция = Ложь;
				КонецЕсли;
				
				Если стр.НедостовернаяПозиция = Истина и стр.НЗ > 0 и стр.Цена > 0 и стр.НЗ >= стр.Заказать Тогда //доп.тз Санакоева 03.06.2014
					Если ( стр.ПризнакРекламнойАкции = Ложь )  
						или ( стр.СрокДействияРекламнойАкции >= ТекДата и стр.ПризнакРекламнойАкции = Истина ) Тогда
						стр.НедостовернаяПозиция = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				
				Если НЕ ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
					Если стр.НедостовернаяПозиция = Истина и стр.Активный = Истина Тогда
						Если ИспользоватьМатрицуНедостоверных Тогда
							Запрос.УстановитьПараметр("Цена",стр.Цена);
							Запрос.УстановитьПараметр("Продажа",стр.Продажи);
							Запрос.УстановитьПараметр("Остаток",стр.Остаток);
							Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
							Рез = Запрос.Выполнить();
							Если НЕ Рез.Пустой() Тогда
								Выборка = Рез.Выбрать();
								Выборка.Следующий();
								Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
									стр.Заказать = стр.МинимальныйЗаказ;
								Иначе
									Если стр.ВПути = 0 Тогда
										стр.Заказать = Выборка.Заказать;
									КонецЕсли;
								КонецЕсли;
								стр.ЗаказатьПоКуМакс2 = стр.Заказать;
								стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
								//если хотя бы по одному условию матрицы недостоверности позиция прошла
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;                                                            
				КонецЕсли;
				
				
				Если стр.НЗ > 10 и стр.Заказать < 20 Тогда   // ПО ТЗ Санакоева от 03.07.2014
					Если стр.Остаток > 0 Тогда
						Если стр.НЗ/стр.Остаток < 1.6 Тогда
							стр.Заказать = 0;
							стр.ЗаказатьПоКуМакс2 = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если стр.НеЗаказывать = Истина Тогда
					стр.Сумма = 0;
				Иначе
					стр.Сумма = стр.Заказать*стр.Цена;
				КонецЕсли;

			КонецЕсли;
			////===========================29.01.2016 =================Санакоев+Васильченко
			//Если стр.ЕстьНЗ_4_5 Тогда
			//	Если стр.Заказать/2 > стр.НЗ_4_5 Тогда
			//		стр.Заказать = стр.НЗ_4_5;	
			//	КонецЕсли;
			//КонецЕсли;
			////===========================29.01.2016 =================Санакоев+Васильченко
			
			Если ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
				Если стр.НедостовернаяПозиция = Истина и стр.Активный = Истина Тогда
					Если ИспользоватьМатрицуНедостоверных Тогда
						Запрос.УстановитьПараметр("Цена",стр.Цена);
						Запрос.УстановитьПараметр("Продажа",стр.Продажи);
						Запрос.УстановитьПараметр("Остаток",стр.Остаток);
						Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
						Рез = Запрос.Выполнить();
						Если НЕ Рез.Пустой() Тогда
							Выборка = Рез.Выбрать();
							Выборка.Следующий();
							Если стр.ВПути > 0 и стр.Незаказывать = Ложь Тогда
								стр.Заказать = 0;
							Иначе
								Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
									Если стр.НЗ > 0 Тогда
										стр.Заказать = Макс(стр.МинимальныйЗаказ,стр.НЗ-стр.Остаток-стр.ВПути,Выборка.Заказать);
									ИначеЕсли Выборка.Заказать > 0 Тогда
										стр.Заказать = Макс(стр.МинимальныйЗаказ,Выборка.Заказать);
									КонецЕсли;
								Иначе
									Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
										стр.Заказать = стр.МинимальныйЗаказ;
									Иначе
										стр.Заказать = Выборка.Заказать;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
							
							стр.ЗаказатьПоКумакс2 = стр.Заказать;
							
							стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
							//если хотя бы по одному условию матрицы недостоверности позиция прошла
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;			
			КонецЕсли;
			
			Если стр.ОтношениеЗакупки > 300 и стр.Заказать >  0 Тогда
				стр.НедостовернаяПозиция = Истина;
			КонецЕсли;
			
			//Если стр.ДнейПродаж <= 20 и стр.МаксДатаПрихода >= (НачалоДня(ТекДата) - 48*60*60) Тогда
			//	стр.Заказать = 0;
			//	стр.ЗаказатьПоКуМакс2 = 0;
			//КонецЕсли;
			
			Если стр.НедостовернаяПозиция = Истина  Тогда
				СписокНедостоверныхСтрок.Добавить(стр);
			КонецЕсли;

			стр.ЗаказатьДоПривидения =  стр.Заказать;
			
			Если стр.Заказать > 0 и НЕ ЗаводскиеПараметрыТовара = Неопределено Тогда
				НайденнаяСтрока = ЗаводскиеПараметрыТовара.Найти(стр.КодТовара,"КодТовара");
				Если НЕ НайденнаяСтрока = Неопределено Тогда
					стр.КоличествоВСпайке = НайденнаяСтрока.КоличествоВСпайке;
					стр.КоличествоВКоробе = НайденнаяСтрока.КоличествоВКоробе;
					Если НайденнаяСтрока.КоличествоВКоробе > 0 Тогда
						ПривелиККоробке = ПривестиККоробкеСпайке(стр.Заказать,стр.КоличествоВКоробе,0.7,0.3);
						Если НЕ ПривелиККоробке Тогда
							Если стр.КоличествоВСпайке > 0 Тогда
								ПривелиКСпайке = ПривестиККоробкеСпайке(стр.Заказать,стр.КоличествоВСпайке,0.8,0.2);
							КонецЕсли;
						КонецЕсли;
						
						Если ПривелиККоробке Тогда
							стр.Коробов = стр.Заказать/стр.КоличествоВКоробе;	
						КонецЕсли;						
						
						ПривелиККоробке = ПривестиККоробкеСпайке(стр.ЗаказатьПоКуМакс2,стр.КоличествоВКоробе,0.7,0.3);
						Если НЕ ПривелиККоробке Тогда
							Если стр.КоличествоВСпайке > 0 Тогда
								ПривелиКСпайке = ПривестиККоробкеСпайке(стр.ЗаказатьПоКуМакс2,стр.КоличествоВСпайке,0.8,0.2);
							КонецЕсли;
						КонецЕсли;						
						
						Если ПривелиККоробке Тогда
							стр.Коробов = стр.ЗаказатьПоКуМакс2/стр.КоличествоВКоробе;	
						КонецЕсли;
						
						//Если стр.ЗаказатьПоКумакс2 >= стр.КоличествоВКоробе и стр.Заказать < стр.КоличествоВКоробе Тогда
						//	стр.Заказать = стр.КоличествоВКоробе;
						//	стр.Коробов = 1;
						//КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;
			
			
			Если стр.Заказать > 0 Тогда
				Если стр.ДнейРеализации = 1 Тогда
					Для каждого текКритерий из ТаблицаКритериевОбнуленияЗаказа Цикл
						Если стр.ДнейПродаж >= текКритерий.ДнейПродажОт и стр.ДнейПродаж < текКритерий.ДнейПродажДо Тогда
							Если стр.Продажи >= текКритерий.ПродажиОт и стр.Продажи < текКритерий.ПродажиДо Тогда
								стр.Заказать = 0;
								стр.Сумма = 0;
							КонецЕсли; 
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;

			КонецЕсли;
			
			Если стр.НеЗаказывать = Истина Тогда
				стр.Сумма = 0;
				стр.Заказать = 0;
				стр.ЗаказатьПоКуМакс2 = 0;
			Иначе
				стр.Сумма = стр.Заказать*стр.Цена;
			КонецЕсли;
			
			
			//============================  БЛОК ОБРАБОТКИ ИСКЛЮЧЕНИЙ ПОЗИЦИЙ ИЗ МАТРИЦЫ  =======================
			//Если стр.ДатаВыводаПозиции = Дата(1,1,1) Тогда
			//	Если стр.Продажи = 0  и стр.Остаток > 0  и стр.ДнейПродаж > 27  и стр.ЕстьТоварВШаблоне = Ложь Тогда
			//		стрВылета = ТЗВылета.Добавить();
			//		стрВылета.Товар = стр.ТоварСсылка;
			//		стрВылета.ДатаЗаписи = ТекущаяДата();					
			//	КонецЕсли;
			//Иначе
			//	
			//	Если стр.Продажи > 0 и (ТекущаяДата() - стр.ДатаВыводаПозиции)/86400 < 90 Тогда
			//		стрВылета = ТЗВылета.Добавить();
			//		стрВылета.Товар = стр.ТоварСсылка;
			//		стрВылета.ДатаЗаписи = Дата(1,1,1);
			//	ИначеЕсли стр.Продажи >= 0 и (ТекущаяДата() - стр.ДатаВыводаПозиции)/86400 >= 90 и стр.Заказать > 0 Тогда
			//		
			//		ЛОЗ = РегистрыСведений.ЛогОбнуленияЗаказа.СоздатьМенеджерЗаписи();
			//		ЛОЗ.КодСклада = КодСклада;
			//		ЛОЗ.КодТовара = стр.Код;
			//		ЛОЗ.ДатаЗаписи = ТекДата;
			//		ЛОЗ.ГруппаАП = стр.ГруппаАП;
			//		ЛОЗ.ДатаВылета = стр.ДатаВыводаПозиции;
			//		ЛОЗ.ДнейПродаж = стр.ДнейПродаж;
			//		ЛОЗ.Заказать = стр.Заказать;
			//		ЛОЗ.Сумма = стр.Сумма;
			//		ЛОЗ.Продажи = стр.Продажи;
			//		ЛОЗ.Остаток = стр.Остаток;
			//		ЛОЗ.СпособОбнуления = "ВЫЛ";
			//		ЛОЗ.Записать();
			//		
			//		
			//		стр.Сумма = 0;
			//		стр.Заказать = 0;
			//		
			//	КонецЕсли;
			//КонецЕсли;
			//========================== БЛОК ОБНУЛЕНИЯ ЗАКАЗА ПО ТОВАРАМ ТРЕБУЮЩИМ АВТОРИЗАЦИЮ ====================
			Если стр.ЕстьТоварТребующийАвторизации и стр.ЕстьТоварВШаблоне = Ложь и стр.Заказать > 0 Тогда
				
					ЛОЗ = РегистрыСведений.ЛогОбнуленияЗаказа.СоздатьМенеджерЗаписи();
					ЛОЗ.КодСклада = КодСклада;
					ЛОЗ.КодТовара = стр.КодТовара;
					ЛОЗ.ДатаЗаписи = ТекДата;
					ЛОЗ.ГруппаАП = стр.ГруппаАП;
					ЛОЗ.ДатаВылета = стр.ДатаВыводаПозиции;
					ЛОЗ.ДнейПродаж = стр.ДнейПродаж;
					ЛОЗ.Заказать = стр.Заказать;
					ЛОЗ.Сумма = стр.Сумма;
					ЛОЗ.Продажи = стр.Продажи;
					ЛОЗ.Остаток = стр.Остаток;
					ЛОЗ.СпособОбнуления = "ТТА";
					ЛОЗ.Записать();
					
					стр.Сумма = 0;
					стр.Заказать = 0;
					стр.ЗаказатьПоКумакс2 = 0;
					
			КонецЕсли;
			// ================================ КОНЕЦ ==========================================================
			
			Если стр.Заказать > 0 Тогда   //стр.ЗаказатьПоКумакс2 > 0
				НоваяСтрока = ТЗДляТоргов.Добавить();
				НоваяСтрока.ДатаРасчета = ДатаРасчета;
				НоваяСтрока.КодТовара = стр.КодТовара;
				НоваяСтрока.КодСклада = КодСклада;
				НоваяСтрока.ВПути = стр.ВПути;
				НоваяСтрока.Остаток = стр.Остаток;
				НоваяСтрока.НЗ = стр.НЗ;
				НоваяСтрока.Продажи = стр.Продажи;
				НоваяСтрока.Потребность = стр.Заказать;
				НоваяСтрока.ПотребностьОтКуМакс2 = стр.ЗаказатьПоКумакс2;
				НоваяСтрока.Коробов = стр.Коробов;
				НоваяСтрока.ГруппаАП = стр.ГруппаАП;
			КонецЕсли;
			
			
			Если НЕ ( стр.БылаНедостовернаяПозиция или стр.НедостовернаяПозиция ) и НЕ стр.ГруппаАП = "I" Тогда
				Если стр.СредняяСкорость >= ПорогСреднейСкорости Тогда
					стрСкорости = ТЗСкоростей.Добавить();
					стрСкорости.КодАптеки	= КодСклада;
					стрСкорости.КодТовара	= стр.КодТовара;
					стрСкорости.Скорость	= стр.СредняяСкорость;
					стрСкорости.ГруппаАП	= стр.ГруппаАП;
					стрСкорости.Продажи		= стр.Продажи;
					стрСкорости.ДнейПродаж	= стр.ДнейПродаж;
					стрСкорости.ДнейРеализации = стр.ДнейРеализации;
				КонецЕсли;
			КонецЕсли;
			
			
			//================= Расчет дефектуры =========================
			Если НЕ ( стр.БылаНедостовернаяПозиция или стр.НедостовернаяПозиция ) и стр.СредняяСкорость >= ПорогСреднейСкорости и НЕ стр.ГруппаАП = "I" Тогда
				КоличествоДеф = стр.СредняяСкорость*4 - стр.Остаток;
			ИначеЕсли НЕ стр.ГруппаАП = "I" и стр.Остаток = 0 Тогда
				КоличествоДеф = стр.Заказать;
			Иначе
				КоличествоДеф = 0;
			КонецЕсли;
			
			Если КоличествоДеф > 0 Тогда
				стрДеф = ТЗДефектура.Добавить();
				стрДеф.КодАптеки	= КодСклада;
				стрДеф.КодТовара	= стр.КодТовара;
				стрДеф.Количество	= КоличествоДеф;
				стрДеф.ГруппаАП		= стр.ГруппаАП;
			КонецЕсли;			
			//============== конец расчета дефектуры =====================
			
			
		КонецЦикла;
		
		Если ТЗВылета.Количество() > 0 Тогда
			Для каждого стрВылета из ТЗВылета Цикл
				МЗ = РегистрыСведений.ВыводПозицийИзМатрицы.СоздатьМенеджерЗаписи();
				МЗ.Аптека = Аптека;
				МЗ.Товар = стрВылета.Товар;
				МЗ.ДатаЗаписи = стрВылета.ДатаЗаписи;
				МЗ.Записать();
			КонецЦикла;
		КонецЕсли;
		
		//Запишем скорости продаж в регистр
		НаборСкоростей = РегистрыСведений.СкоростиПродаж.СоздатьНаборЗаписей();
		НаборСкоростей.Отбор.КодАптеки.Установить(КодСклада);	
		НаборСкоростей.Загрузить(ТЗСкоростей);
		Попытка
			НаборСкоростей.Записать();
		Исключение
		КонецПопытки;
		
		Если ЭтоФармакор Тогда
			НаборСкоростей = РегистрыСведений.ПоследнийРасчетАвтозаказа.СоздатьНаборЗаписей();
			НаборСкоростей.Отбор.КодАптеки.Установить(КодСклада);	
			НаборСкоростей.Загрузить(ТЗ);
			Попытка
				НаборСкоростей.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		//Запишем дефектуру в регистр
		НаборСкоростей = РегистрыСведений.ДефектураРозница.СоздатьНаборЗаписей();
		НаборСкоростей.Отбор.КодАптеки.Установить(КодСклада);	
		НаборСкоростей.Загрузить(ТЗДефектура);
		НаборСкоростей.Записать();		
		
		Набор = РегистрыСведений.РасчетТоргов.СоздатьНаборЗаписей();
		Набор.Отбор.ДатаРасчета.Установить(ДатаРасчета);
		Набор.Отбор.КодСклада.Установить(КодСклада);
		Набор.Загрузить(ТЗДляТоргов);
		Попытка
		  Набор.Записать();
		Исключение
		КонецПопытки;

		
		Если ИспользоватьМатрицуНедостоверных Тогда
			Запрос.Текст = "УНИЧТОЖИТЬ МН;";
			Запрос.Выполнить();
			МТ.Закрыть();
		КонецЕсли;
		
		Если ОбрезатьНедостоверные Тогда
			Если СписокНедостоверныхСтрок.Количество() > 0 Тогда
				Для Каждого позиция из СписокНедостоверныхСтрок цикл
					ТЗ.Удалить(позиция.Значение);
				КонецЦикла;					
			КонецЕсли;
		Иначе    //добавлено 10.08.2015 19:14
			Для каждого стр из СписокНедостоверныхСтрок Цикл
				МЗ = РегистрыСведений.РасчетыНедостоверныхПозиций.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(МЗ,стр.Значение);
				МЗ.Код = стр.Значение.КодТовара;
				МЗ.ДатаЗаписи = ТекущаяДата();
				МЗ.Аптека = Аптека;
				МЗ.Записать();
			КонецЦикла;
			
			Для Каждого позиция из СписокНедостоверныхСтрок цикл
				ТЗ.Удалить(позиция.Значение);
			КонецЦикла;			
		КонецЕсли;
		
		ТЗ.Колонки.Удалить("Подкатегория");
		ТЗ.Колонки.Удалить("МинимальныйЗаказ");
		ТЗ.Колонки.Удалить("Коробов");
		ТЗ.Колонки.Удалить("НеЗаказывать");

		Возврат ТЗ;

	
КонецФункции

Функция РасчетАвтозаказаОкончательныйИнтернетАптекиВКодахОП(ТЗЗапроса,Аптека,ПараметрыРасчета,СуммыЗакрытияТовараВПути = Неопределено,ЗаводскиеПараметрыТовара = Неопределено) Экспорт	
		


	//КоэффициентЗаказаA	= ПараметрыРасчета.КоэффициентЗаказаA;
	//КоэффициентЗаказаB	= ПараметрыРасчета.КоэффициентЗаказаB;
	//КоэффициентЗаказаC	= ПараметрыРасчета.КоэффициентЗаказаC;
	//КоэффициентЗаказаD	= ПараметрыРасчета.КоэффициентЗаказаD;
	ОграничениеДляНовыхАптек = ПараметрыРасчета.ОграничениеДляНовыхАптек;
	Поле_Коэфф			= 2;
	Флаг_УчестьРеквизитминимальныйЗаказ = ПараметрыРасчета.Флаг_УчестьРеквизитминимальныйЗаказ;
	УчитыватьКратностьЗаказа = ПараметрыРасчета.УчитыватьКратностьЗаказа;
	ПрименятьКоэффПоНЗ	= Ложь;
	КоэффПоНЗ			= 0;
	//ТекДата				= ПараметрыРасчета.ТекДата;
	УчитыватьНЗ			= ПараметрыРасчета.УчитыватьНЗ;
	ПорогСреднейСкорости			= ПараметрыРасчета.ПорогСреднейСкорости;
	МинимальныйПорогСреднейСкорости = ПараметрыРасчета.МинимальныйПорогСреднейСкорости;	
	ТаблицаКритериевОбнуленияЗаказа = ПараметрыРасчета.ТаблицаКритериевОбнуленияЗаказа;
	
	СубъектРФ = Аптека.СубъектРФ;
	ИспользоватьМатрицуНДнаПлохихСкоростях = Аптека.ИспользоватьМатрицуНДнаПлохихСкоростях;
	
	ДатаРасчета = НачалоДня(ТекущаяДата());
	КодСклада = Аптека.Код;

	ТЗДляТоргов = Новый ТаблицаЗначений;
	ТЗДляТоргов.Колонки.Добавить("ДатаРасчета");
	ТЗДляТоргов.Колонки.Добавить("КодСклада");
	ТЗДляТоргов.Колонки.Добавить("КодТовара");
	ТЗДляТоргов.Колонки.Добавить("ВПути");
	ТЗДляТоргов.Колонки.Добавить("Остаток");
	ТЗДляТоргов.Колонки.Добавить("НЗ");
	ТЗДляТоргов.Колонки.Добавить("Продажи");
	ТЗДляТоргов.Колонки.Добавить("Потребность");
	ТЗДляТоргов.Колонки.Добавить("ПотребностьОтКуМакс2");
	ТЗДляТоргов.Колонки.Добавить("Коробов");
	ТЗДляТоргов.Колонки.Добавить("ГруппаАП");
	
	ТЗСкоростей = Новый ТаблицаЗначений;
	ТЗСкоростей.Колонки.Добавить("КодАптеки");
	ТЗСкоростей.Колонки.Добавить("КодТовара");
	ТЗСкоростей.Колонки.Добавить("Скорость");
	ТЗСкоростей.Колонки.Добавить("ГруппаАП");
	ТЗСкоростей.Колонки.Добавить("Продажи");
	ТЗСкоростей.Колонки.Добавить("ДнейПродаж");
	ТЗСкоростей.Колонки.Добавить("ДнейРеализации");
	
	ТЗВылета = Новый ТаблицаЗначений;
	ТЗВылета.Колонки.Добавить("Товар");
	ТЗВылета.Колонки.Добавить("ДатаЗаписи");
	
	ТЗДефектура = Новый ТаблицаЗначений;
	ТЗДефектура.Колонки.Добавить("КодАптеки");
	ТЗДефектура.Колонки.Добавить("КодТовара");
	ТЗДефектура.Колонки.Добавить("Количество");
	ТЗДефектура.Колонки.Добавить("ГруппаАП");
	
	
	
	ТЗЗапроса.Свернуть("Код,Цена,Активный","СредняяСкорость,Продажи,ЕдиницаДляСвертки,Dx,СуммаЗакуп,ДеньРеализации");
	
	ЗакрытьТоварыВПути(Аптека,ТекущаяДата(),СуммыЗакрытияТовараВПути);
			
			ТХТ = "ВЫБРАТЬ
			      |	Т.Код КАК Код,
			      |	Т.СредняяСкорость КАК СредняяСкорость,
			      |	Т.Продажи КАК Продажи,
			      |	Т.ЕдиницаДляСвертки КАК ДнейПродаж,
			      |	Т.ДеньРеализации КАК ДнейРеализации,
			      |	Т.Dx КАК Dx,
			      |	Т.Цена КАК Цена,
			      |	Т.Активный КАК Активный,
			      |	Т.СуммаЗакуп КАК СуммаЗакуп
			      |ПОМЕСТИТЬ ВТ1
			      |ИЗ
			      |	&Таб КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Т.Код КАК Код,
			      |	АП.Ссылка КАК ТоварСсылка,
			      |	ВЫБОР
			      |		КОГДА Т.Цена = 0
			      |			ТОГДА АП.ЗакупочнаяЦена
			      |		ИНАЧЕ Т.Цена
			      |	КОНЕЦ КАК Цена,
			      |	Т.Активный КАК Активный,
			      |	Т.СредняяСкорость КАК СредняяСкорость,
			      |	Т.Продажи КАК Продажи,
			      |	Т.ДнейПродаж КАК ДнейПродаж,
			      |	Т.ДнейРеализации КАК ДнейРеализации,
			      |	Т.Dx КАК Dx,
			      |	Т.СуммаЗакуп КАК СуммаЗакуп
			      |ПОМЕСТИТЬ ВТ
			      |ИЗ
			      |	ВТ1 КАК Т
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = Т.Код)
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	Т.Код
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И НЕ МатрицаНЗ.ВидНЗ = ЗНАЧЕНИЕ(Перечисление.ВидыНЗ.НЗ_6)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ_4_5
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И МатрицаНЗ.ВидНЗ В(&ВидыНЗ)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ДАТАВРЕМЯ(1, 1, 1) КАК МаксДатаПрихода,
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ Остатки.КодТовара
			      |	КОНЕЦ КАК КодТовара,
			      |	СУММА(Остатки.КоличествоОстаток) КАК Остаток
			      |ПОМЕСТИТЬ ОстатокНаНачало
			      |ИЗ
			      |	РегистрНакопления.ОстаткиТовараИнтернетАптек.Остатки(, КодАптеки = &АптекаКод) КАК Остатки
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = Остатки.КодТовара)
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ Остатки.КодТовара
			      |	КОНЕЦ
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ВЫБОР
			      |		КОГДА РТ.Товар.КодОП > 0
			      |			ТОГДА АП.Ссылка
			      |		ИНАЧЕ РТ.Товар
			      |	КОНЕЦ КАК Товар
			      |ПОМЕСТИТЬ втРазрешения
			      |ИЗ
			      |	РегистрСведений.РазрешенныеТовары КАК РТ
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = РТ.Товар.КодОП)
			      |ГДЕ
			      |	РТ.Аптека = &Аптека
			      |	И &ИспользоватьРазрешенныеТоварыДляЗаказа = ИСТИНА
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Выборка.Код КАК Код,
			      |	Выборка.ТоварСсылка КАК ТоварСсылка,
			      |	Выборка.ГруппаАП КАК ГруппаАП,
			      |	Выборка.КуМин КАК КуМин,
			      |	Выборка.КуМакс КАК КуМакс,
			      |	Выборка.КуМакс2 КАК КуМакс2,
			      |	Выборка.НЗ КАК НЗ,
			      |	Выборка.Продажи КАК Продажи,
			      |	Выборка.Остаток КАК Остаток,
			      |	ВЫБОР
			      |		КОГДА Выборка.ОстатокОчищенный <= Выборка.КуМин
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |				И (Выборка.Активный = ИСТИНА
			      |					ИЛИ Выборка.ТоварРазрешен)
			      |			ТОГДА ВЫБОР
			      |					КОГДА Выборка.ОстатокОчищенный > Выборка.СредняяСкорость
			      |						ТОГДА ВЫРАЗИТЬ(Выборка.КуМакс - (Выборка.ОстатокОчищенный - Выборка.СредняяСкорость) КАК ЧИСЛО(10, 0))
			      |					ИНАЧЕ Выборка.КуМакс
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Заказать,
			      |	ВЫБОР
			      |		КОГДА Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |				И (Выборка.Активный = ИСТИНА
			      |					ИЛИ Выборка.ТоварРазрешен)
			      |			ТОГДА ВЫБОР
			      |					КОГДА Выборка.ОстатокОчищенный > Выборка.СредняяСкорость
			      |						ТОГДА ВЫРАЗИТЬ(Выборка.КуМакс2 - (Выборка.ОстатокОчищенный - Выборка.СредняяСкорость) КАК ЧИСЛО(10, 0))
			      |					ИНАЧЕ Выборка.КуМакс2
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ЗаказатьПоКумакс2,
			      |	Выборка.ДнейПродаж КАК ДнейПродаж,
			      |	Выборка.ДнейРеализации КАК ДнейРеализации,
			      |	Выборка.СредняяСкорость КАК СредняяСкорость,
			      |	ВЫБОР
			      |		КОГДА Выборка.ОстатокОчищенный = 0
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |			ТОГДА 1
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Дефектура,
			      |	Выборка.Цена КАК Цена,
			      |	0 КАК Сумма,
			      |	Выборка.ПризнакРекламнойАкции КАК ПризнакРекламнойАкции,
			      |	Выборка.СрокДействияРекламнойАкции КАК СрокДействияРекламнойАкции,
			      |	Выборка.Активный КАК Активный,
			      |	Выборка.Dx КАК Dx,
			      |	ВЫБОР
			      |		КОГДА Выборка.Продажи > 0
			      |			ТОГДА ВЫРАЗИТЬ(Выборка.СуммаЗакуп / Выборка.Продажи КАК ЧИСЛО(10, 2))
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ЦенаЗакупПродажи,
			      |	Выборка.МаксДатаПрихода КАК МаксДатаПрихода
			      |ПОМЕСТИТЬ ИтоговыйЗаказ
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ВТ.Код КАК Код,
			      |		ВТ.ТоварСсылка КАК ТоварСсылка,
			      |		Матрица.ГруппаАПИтог КАК ГруппаАП,
			      |		ВТ.Продажи КАК Продажи,
			      |		ВТ.ДнейПродаж КАК ДнейПродаж,
			      |		ВТ.ДнейРеализации КАК ДнейРеализации,
			      |		ЕСТЬNULL(Матрица.КуМин, 0) КАК КуМин,
			      |		ЕСТЬNULL(Матрица.КуМакс, 0) КАК КуМакс,
			      |		ЕСТЬNULL(Матрица.КуМакс2, 0) КАК КуМакс2,
			      |		ЕСТЬNULL(ВыборкаНЗ.НЗ, 0) КАК НЗ,
			      |		ВТ.Цена КАК Цена,
			      |		ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) КАК Остаток,
				  |		Выбор когда ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) < 0 Тогда 0 Иначе ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) КОНЕЦ КАК ОстатокОчищенный,
			      |		ЕСТЬNULL(ВТ.СредняяСкорость, 0) КАК СредняяСкорость,
			      |		ЕСТЬNULL(ВыборкаНЗ.РекламнаяАкция, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |		ЕСТЬNULL(ВыборкаНЗ.СрокДействияРекламы, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |		ВТ.Активный КАК Активный,
			      |		ВТ.Dx КАК Dx,
			      |		ВТ.СуммаЗакуп КАК СуммаЗакуп,
			      |		ВЫБОР
			      |			КОГДА РТ.Товар ЕСТЬ NULL
			      |				ТОГДА ЛОЖЬ
			      |			ИНАЧЕ ИСТИНА
			      |		КОНЕЦ КАК ТоварРазрешен,
			      |		ЕСТЬNULL(ОстатокНаНачало.МаксДатаПрихода, ДАТАВРЕМЯ(1, 1, 1)) КАК МаксДатаПрихода
			      |	ИЗ
			      |		ВТ КАК ВТ
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ОстатокНаНачало КАК ОстатокНаНачало
			      |			ПО (ОстатокНаНачало.КодТовара = ВТ.Код)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Матрица КАК Матрица
			      |			ПО (Матрица.Аптека = &Аптека)
			      |				И (Матрица.Товар = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ КАК ВыборкаНЗ
			      |			ПО ВТ.ТоварСсылка = ВыборкаНЗ.ТоварСсылка
			      |			ЛЕВОЕ СОЕДИНЕНИЕ втРазрешения КАК РТ
			      |			ПО (РТ.Товар = ВТ.ТоварСсылка)) КАК Выборка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ИсключенияАвтозаказа.Товар КАК ТоварССылка
			      |ПОМЕСТИТЬ Исключения
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |
			      |ОБЪЕДИНИТЬ
			      |
			      |ВЫБРАТЬ
			      |	ИсключенияАвтозаказа.Товар
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = &Аптека
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВыборкаПути.КодТовара КАК КодТовара,
			      |	СУММА(ВыборкаПути.ВПути) КАК ВПути
			      |ПОМЕСТИТЬ ТоварыВПути
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ВЫБОР
			      |			КОГДА Заказ.Товар.КодОП > 0
			      |				ТОГДА Заказ.Товар.КодОП
			      |			ИНАЧЕ Заказ.Товар.Код
			      |		КОНЕЦ КАК КодТовара,
			      |		Заказ.КоличествоОстаток КАК ВПути
			      |	ИЗ
			      |		РегистрНакопления.ЗаказПоставщику.Остатки(&ТекущаяДата, Склад = &Аптека) КАК Заказ
			      |	ГДЕ
			      |		Заказ.КоличествоОстаток > 0) КАК ВыборкаПути
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВыборкаПути.КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	&АптекаКод КАК КодАптеки,
			      |	ИТОГОВЫЙЗАКАЗ.Код КАК КодТовара,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка КАК ТоварСсылка,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование КАК Товар,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.МинимальныйЗаказ КАК МинимальныйЗаказ,
			      |	ИТОГОВЫЙЗАКАЗ.ГруппаАП КАК ГруппаАП,
			      |	ИТОГОВЫЙЗАКАЗ.КуМин КАК КуМин,
			      |	ИТОГОВЫЙЗАКАЗ.КуМакс КАК КуМакс,
			      |	ИТОГОВЫЙЗАКАЗ.КуМакс2 КАК КуМакс2,
			      |	ИТОГОВЫЙЗАКАЗ.НЗ КАК НЗ,
			      |	ИТОГОВЫЙЗАКАЗ.Продажи КАК Продажи,
			      |	ЕСТЬNULL(ТоварыВПути.ВПути, 0) КАК ВПути,
			      |	ИТОГОВЫЙЗАКАЗ.Остаток КАК Остаток,
			      |	ВЫБОР
			      |		КОГДА (ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
			      |				ИЛИ ЕСТЬNULL(неликвиды.КодТовара, 0) > 0)
			      |				И &НеУчитыватьТоварВПутиПриРасчетеЗаказа = ЛОЖЬ
			      |			ТОГДА 0
			      |		ИНАЧЕ ИТОГОВЫЙЗАКАЗ.Заказать
			      |	КОНЕЦ КАК Заказать,
			      |	ВЫБОР
			      |		КОГДА (ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
			      |				ИЛИ ЕСТЬNULL(неликвиды.КодТовара, 0) > 0)
			      |				И &НеУчитыватьТоварВПутиПриРасчетеЗаказа = ИСТИНА
			      |			ТОГДА ИСТИНА
			      |		ИНАЧЕ ЛОЖЬ
			      |	КОНЕЦ КАК НеЗаказывать,
			      |	0 КАК Резерв,
			      |	ИТОГОВЫЙЗАКАЗ.ДнейПродаж КАК ДнейПродаж,
			      |	ИТОГОВЫЙЗАКАЗ.ДнейРеализации КАК ДнейРеализации,
			      |	ИТОГОВЫЙЗАКАЗ.СредняяСкорость КАК СредняяСкорость,
			      |	ИТОГОВЫЙЗАКАЗ.Дефектура КАК Дефектура,
			      |	ИТОГОВЫЙЗАКАЗ.Цена КАК Цена,
			      |	ИТОГОВЫЙЗАКАЗ.Сумма КАК Сумма,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.ПризнакРекламнойАкции, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.СрокДействияРекламнойАкции, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |	ИТОГОВЫЙЗАКАЗ.Активный КАК Активный,
			      |	ЕСТЬNULL(ПерестокАптек.Пересток, 0) КАК Пересток,
			      |	ИТОГОВЫЙЗАКАЗ.Dx КАК Dx,
			      |	ЛОЖЬ КАК НедостовернаяПозиция,
			      |	ЛОЖЬ КАК БылаНедостовернаяПозиция,
			      |	ВЫБОР
			      |		КОГДА Исключения.ТоварССылка ЕСТЬ NULL
			      |			ТОГДА 0
			      |		ИНАЧЕ 1
			      |	КОНЕЦ КАК Исключение,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Подкатегория КАК Подкатегория,
			      |	ВЫБОР
			      |		КОГДА неликвиды.КодТовара ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК неликвид,
			      |	ИТОГОВЫЙЗАКАЗ.МаксДатаПрихода КАК МаксДатаПрихода,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.ТипДляЦО КАК ТипДляЦО,
			      |	0 КАК ЗаказатьДоПривидения,
			      |	0 КАК КоличествоВСпайке,
			      |	0 КАК КоличествоВКоробе,
			      |	0 КАК Коробов,
			      |	ВЫБОР
			      |		КОГДА ТоварТребующийАвторизации.Товар ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК ЕстьТоварТребующийАвторизации,
			      |	ВЫБОР
			      |		КОГДА ВыборкаНЗ_4_5.НЗ ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК ЕстьНЗ_4_5,
			      |	ЕСТЬNULL(ВыборкаНЗ_4_5.НЗ, 0) КАК НЗ_4_5
			      |ИЗ
			      |	ИтоговыйЗаказ КАК ИТОГОВЫЙЗАКАЗ
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВПути КАК ТоварыВПути
			      |		ПО (ТоварыВПути.КодТовара = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПерестокАптек КАК ПерестокАптек
			      |		ПО (ПерестокАптек.Аптека = &Аптека)
			      |			И (ПерестокАптек.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Исключения КАК Исключения
			      |		ПО (Исключения.ТоварССылка = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Неликвиды КАК неликвиды
			      |		ПО (неликвиды.Аптека = &Аптека)
			      |			И (неликвиды.КодТовара = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварТребующийАвторизации КАК ТоварТребующийАвторизации
			      |		ПО (ТоварТребующийАвторизации.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ_4_5 КАК ВыборкаНЗ_4_5
			      |		ПО ИТОГОВЫЙЗАКАЗ.ТоварСсылка = ВыборкаНЗ_4_5.ТоварСсылка
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ1
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ_4_5
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ИтоговыйЗаказ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ОстатокНаНачало
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Исключения
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТоварыВПути
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ";
			
				  
	  
				  //|		КОГДА (Выборка.Остаток <= Выборка.КуМин) и (Выборка.ГруппаАП <> ""I"")  
		//ИсключениеВидаНЗ = Константы.ИсключатьВидНЗ.Получить();
		//Если НЕ ИсключениеВидаНЗ.Пустая() Тогда
		//	ТХТ = СтрЗаменить(ТХТ,"111 = 111", " МатрицаНЗ.ВидНЗ <> &НЗ_Исключение "	);
		//КонецЕсли;				
		ВидыНЗ = Новый СписокЗначений;
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_4);
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_5);

				  
		ТекДата  = ТекущаяДата();
	 	Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаОстатка",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("АптекаКод",Аптека.Код);
		Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
		Запрос.УстановитьПараметр("ТекущаяДата",ТекДата);
		Запрос.УстановитьПараметр("ДатаТриМесяцаНазад",КонецДня(ТекДата) - 60*60*24*30*2);
		Запрос.УстановитьПараметр("НачДатаСегоДня",НачалоДня(ТекДата));
		Запрос.УстановитьПараметр("КонДатаСегоДня",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("ВидыНЗ",ВидыНЗ);
		Запрос.УстановитьПараметр("Таб",ТЗЗапроса);
		Запрос.УстановитьПараметр("ИспользоватьРазрешенныеТоварыДляЗаказа",Константы.ИспользоватьРазрешенныеТоварыДляЗаказа.Получить());
		Запрос.УстановитьПараметр("НеУчитыватьТоварВПутиПриРасчетеЗаказа",Константы.НеУчитыватьТоварВПутиПриРасчетеЗаказа.Получить());

		ТЗ = Запрос.Выполнить().Выгрузить();	
		
		ПорогДнейДляВылетаПозиции = Константы.ПорогДнейДляВылетаТовара.Получить();
		ОбрезатьНедостоверные = Константы.ОчищатьРасчетЗаказаОтНедостоверных.Получить();
		СписокНедостоверныхСтрок = Новый СписокЗначений;

		ИспользоватьМатрицуНедостоверных = Константы.ИспользоватьМатрицуНедостоверных.Получить(); 
		Если ИспользоватьМатрицуНедостоверных Тогда
			МТ = Новый МенеджерВременныхТаблиц;
			ТХТ = "ВЫБРАТЬ
			      |	МатрицаНедостоверных.ЦенаОт КАК ЦенаОт,
			      |	МатрицаНедостоверных.ЦенаДо,
			      |	МатрицаНедостоверных.ПродажиОт КАК ПродажиОт,
			      |	МатрицаНедостоверных.ПродажиДо,
			      |	МатрицаНедостоверных.ОстатокОт КАК ОстатокОт,
			      |	МатрицаНедостоверных.ОстатокДо,
			      |	МатрицаНедостоверных.ДнейПродажОт КАК ДнейПродажОт,
			      |	МатрицаНедостоверных.ДнейПродажДо,
			      |	МатрицаНедостоверных.Заказать
			      |ПОМЕСТИТЬ МН
			      |ИЗ
			      |	РегистрСведений.МатрицаНедостоверных КАК МатрицаНедостоверных
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ ПЕРВЫЕ 1
			      |	МН.ЦенаОт
			      |ИЗ
			      |	МН КАК МН
			      |;
			      |";

			Запрос.Текст = ТХТ;
			Запрос.МенеджерВременныхТаблиц = МТ;
			Рез = Запрос.Выполнить();
			Если Рез.Пустой() Тогда
				ИспользоватьМатрицуНедостоверных = Ложь;
				Запрос.Текст = "УНИЧТОЖИТЬ МН;";
				Запрос.Выполнить();
				МТ.Закрыть();
			Иначе
				ТХТ = "ВЫБРАТЬ
				|	МН.Заказать
				|ИЗ
				|	МН КАК МН
				|ГДЕ
				|	&Цена >= МН.ЦенаОт И &Цена < МН.ЦенаДо
				|	И &Продажа >= МН.ПродажиОт И &Продажа < МН.ПродажиДо
				|	И &Остаток >= МН.ОстатокОт И &Остаток < МН.ОстатокДо
				|	И &ДнейПродаж >= МН.ДнейПродажОт И &ДнейПродаж < МН.ДнейПродажДо";
				Запрос.Текст = ТХТ;				
			КонецЕсли;
		КонецЕсли;
			
		
		
		спр_АП = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
		Госпитальные = спр_АП.НайтиПоКоду(17);
		Для каждого стр из ТЗ Цикл
			
			
			Если Флаг_УчестьРеквизитМинимальныйЗаказ Тогда
				Попытка
					Если (стр.Заказать>0) Тогда
						// Если есть заказ
						//пер_МЗ = спр_АП.НайтиПоКоду(стр.Код).МинимальныйЗаказ;
						Если стр.Заказать<стр.МинимальныйЗаказ Тогда
							// Если Заказ>0 но меньше минимального заказа
							стр.Заказать = стр.МинимальныйЗаказ;
						Иначе
							Если УчитыватьКратностьЗаказа = Истина Тогда
								Если стр.МинимальныйЗаказ > 0 Тогда
									стр.Заказать = Окр(стр.Заказать/стр.МинимальныйЗаказ,0)*стр.МинимальныйЗаказ;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
				Исключение
					//Сообщить("Это сообщение только для ИТ! Ничего страшного :) "+ОписаниеОшибки());
					Прервать;
				КонецПопытки;
			КонецЕсли;
			
			Если ПрименятьКоэффПоНЗ = Истина Тогда
				Если стр.Заказать > 0 и стр.НЗ > 0 Тогда
					КоличествоСНЗ = Окр(стр.НЗ/КоэффПоНЗ,0);
					КоличествоСНЗ = ?(КоличествоСНЗ=0,1,КоличествоСНЗ);
					стр.Заказать = Макс(стр.Заказать,КоличествоСНЗ);	
				КонецЕсли;
				//====================================== Для МАКС2 =========================
				Если стр.ЗаказатьПоКуМакс2 > 0 и стр.НЗ > 0 Тогда
					КоличествоСНЗ = Окр(стр.НЗ/КоэффПоНЗ,0);
					КоличествоСНЗ = ?(КоличествоСНЗ=0,1,КоличествоСНЗ);
					стр.ЗаказатьПоКуМакс2 = Макс(стр.ЗаказатьПоКуМакс2,КоличествоСНЗ);
				КонецЕсли;
				//==========================================================================
			КонецЕсли;
			
			//Если ИспользоватьМатрицуНДнаПлохихСкоростях = Истина Тогда
			//	Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
			//		Если  стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" или стр.ГруппаАП = "D" Тогда
			//			Если стр.НЗ = 0 или (стр.НЗ > 0 и стр.СрокДействияРекламнойАкции < ТекДата и стр.ПризнакРекламнойАкции = Истина) Тогда
			//				стр.Кумин = 1;
			//				стр.Кумакс = 1;
			//				стр.БылаНедостовернаяПозиция = Истина;
			//				стр.НедостовернаяПозиция = Истина;
			//			КонецЕсли;
			//		КонецЕсли;
			//	КонецЕсли;
			//КонецЕсли;
			
			
			//Определяем недостоверные позиции 
			Если стр.Заказать > 0 и стр.НедостовернаяПозиция = Ложь и стр.ЕстьНЗ_4_5 = ЛОЖЬ Тогда
				Если стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" Тогда
					
					//Если стр.Кумакс > стр.Продажи*2.5  и стр.Кумакс <> стр.НЗ Тогда
					//	стр.БылаНедостовернаяПозиция = Истина;
					//	стр.Недостовернаяпозиция = Истина;
					//КонецЕсли;
					//
					//
					//Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 4 и стр.ДнейПродаж <=25 Тогда
					//	стр.БылаНедостовернаяПозиция = Истина;
					//	стр.Недостовернаяпозиция = Истина;
					//КонецЕсли;	
					//
					//Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 2 и стр.ДнейПродаж <=25 и стр.Цена > 400 Тогда   // Санакоев 24.11.2014 17:37
					//	стр.БылаНедостовернаяПозиция = Истина;
					//	стр.Недостовернаяпозиция = Истина;
					//КонецЕсли;						
					//
					//Если стр.ДнейПродаж < 15 Тогда
					//	стр.БылаНедостовернаяПозиция = Истина;
					//	стр.Недостовернаяпозиция = Истина;
					//КонецЕсли;
					//
					//Если стр.Продажи > 0 и стр.Заказать > 0 и стр.ПризнакРекламнойАкции = Ложь Тогда
					//	Отношение = стр.Заказать/стр.Продажи;
					//	Если Отношение > 2 или Отношение < 0.18 Тогда
					//		стр.БылаНедостовернаяПозиция = Истина;
					//		стр.Недостовернаяпозиция = Истина;	
					//	КонецЕсли;
					//КонецЕсли;
					
					
					Если стр.Продажи = 1 и стр.НЗ = 0 и  стр.МинимальныйЗаказ = 0 Тогда
						Если  стр.ДнейПродаж > 4 и стр.Заказать > 2 Тогда
							стр.Заказать = 2;
						ИначеЕсли стр.ДнейПродаж < 4 и стр.Заказать > 3 Тогда
							стр.Заказать = 2;
						КонецЕсли;
						
					КонецЕсли;
					
					//Если (стр.Остаток+стр.Заказать)/2 >= стр.Продажи и стр.ПризнакРекламнойАкции = Ложь  и стр.НЗ = 0
					//	и (стр.Остаток+стр.Заказать) >= 4 Тогда
					//	стр.БылаНедостовернаяПозиция = Истина;
					//	стр.Недостовернаяпозиция = Истина;	
					//КонецЕсли;
					
				КонецЕсли;  
				
				
				Если стр.НЗ > 4 и стр.НЗ = стр.КуМин  и Стр.НЗ = стр.КуМакс и стр.Заказать = 1 Тогда
					стр.Заказать = Мин(Окр(стр.НЗ/2),2);	
				КонецЕсли;
				
				Если стр.НЗ = стр.КуМин и стр.Заказать < 3 Тогда
				    Если стр.НЗ > 8 и стр.НЗ <= 19 Тогда
						стр.Заказать = Мин(Окр(стр.НЗ/2),2);
					ИначеЕсли стр.НЗ > 19  Тогда
						стр.Заказать = 0;
					КонецЕсли;
				КонецЕсли;

				
				//Если стр.Подкатегория = Госпитальные Тогда
				//	стр.БылаНедостовернаяПозиция = Истина;
				//	стр.НедостовернаяПозиция = Истина;
				//КонецЕсли;
				
				Если стр.НедостовернаяПозиция = Истина и стр.НЗ > 0 и стр.Цена > 0 и стр.НЗ >= стр.Заказать Тогда //доп.тз Санакоева 03.06.2014
					Если ( стр.ПризнакРекламнойАкции = Ложь )  
						или ( стр.СрокДействияРекламнойАкции >= ТекДата и стр.ПризнакРекламнойАкции = Истина ) Тогда
						стр.НедостовернаяПозиция = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				
				Если НЕ ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
					Если стр.НедостовернаяПозиция = Истина и стр.Активный = Истина Тогда
						Если ИспользоватьМатрицуНедостоверных Тогда
							Запрос.УстановитьПараметр("Цена",стр.Цена);
							Запрос.УстановитьПараметр("Продажа",стр.Продажи);
							Запрос.УстановитьПараметр("Остаток",стр.Остаток);
							Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
							Рез = Запрос.Выполнить();
							Если НЕ Рез.Пустой() Тогда
								Выборка = Рез.Выбрать();
								Выборка.Следующий();
								Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
									стр.Заказать = стр.МинимальныйЗаказ;
								Иначе
									Если стр.ВПути = 0 Тогда
										стр.Заказать = Выборка.Заказать;
									КонецЕсли;
								КонецЕсли;
								стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
								//если хотя бы по одному условию матрицы недостоверности позиция прошла
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;                                                            
				КонецЕсли;
				
				
				Если стр.НЗ > 10 и стр.Заказать < 20 Тогда   // ПО ТЗ Санакоева от 03.07.2014
					Если стр.Остаток > 0 Тогда
						Если стр.НЗ/стр.Остаток < 1.6 Тогда
							стр.Заказать = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если стр.НеЗаказывать = Истина Тогда
					стр.Сумма = 0;
				Иначе
					стр.Сумма = стр.Заказать*стр.Цена;
				КонецЕсли;

			КонецЕсли;
			
			Если ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
				Если стр.НедостовернаяПозиция = Истина и стр.Активный = Истина Тогда
					Если ИспользоватьМатрицуНедостоверных Тогда
						Запрос.УстановитьПараметр("Цена",стр.Цена);
						Запрос.УстановитьПараметр("Продажа",стр.Продажи);
						Запрос.УстановитьПараметр("Остаток",стр.Остаток);
						Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
						Рез = Запрос.Выполнить();
						Если НЕ Рез.Пустой() Тогда
							Выборка = Рез.Выбрать();
							Выборка.Следующий();
							Если стр.ВПути > 0 и стр.Незаказывать = Ложь Тогда
								стр.Заказать = 0;
							Иначе
								Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
									Если стр.НЗ > 0 Тогда
										стр.Заказать = Макс(стр.МинимальныйЗаказ,стр.НЗ-стр.Остаток-стр.ВПути,Выборка.Заказать);
									ИначеЕсли Выборка.Заказать > 0 Тогда
										стр.Заказать = Макс(стр.МинимальныйЗаказ,Выборка.Заказать);
									КонецЕсли;
								Иначе
									Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
										стр.Заказать = стр.МинимальныйЗаказ;
									Иначе
										стр.Заказать = Выборка.Заказать;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
							
							стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
							//если хотя бы по одному условию матрицы недостоверности позиция прошла
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;			
			КонецЕсли;
			
			
			Если стр.НедостовернаяПозиция = Истина  Тогда
				СписокНедостоверныхСтрок.Добавить(стр);
			КонецЕсли;

			стр.ЗаказатьДоПривидения =  стр.Заказать;
			
			Если стр.Заказать > 0 и НЕ ЗаводскиеПараметрыТовара = Неопределено Тогда
				НайденнаяСтрока = ЗаводскиеПараметрыТовара.Найти(стр.КодТовара,"КодТовара");
				Если НЕ НайденнаяСтрока = Неопределено Тогда
					стр.КоличествоВСпайке = НайденнаяСтрока.КоличествоВСпайке;
					стр.КоличествоВКоробе = НайденнаяСтрока.КоличествоВКоробе;
					Если НайденнаяСтрока.КоличествоВКоробе > 0 Тогда
						ПривелиККоробке = ПривестиККоробкеСпайке(стр.Заказать,стр.КоличествоВКоробе,0.7,0.3);
						Если НЕ ПривелиККоробке Тогда
							Если стр.КоличествоВСпайке > 0 Тогда
								ПривелиКСпайке = ПривестиККоробкеСпайке(стр.Заказать,стр.КоличествоВСпайке,0.8,0.2);
							КонецЕсли;
						КонецЕсли;
						
						Если ПривелиККоробке Тогда
							стр.Коробов = стр.Заказать/стр.КоличествоВКоробе;	
						КонецЕсли;						
						
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;
			
			
			Если стр.Заказать > 0 Тогда
				Если стр.ДнейРеализации = 1 Тогда
					Для каждого текКритерий из ТаблицаКритериевОбнуленияЗаказа Цикл
						Если стр.ДнейПродаж >= текКритерий.ДнейПродажОт и стр.ДнейПродаж < текКритерий.ДнейПродажДо Тогда
							Если стр.Продажи >= текКритерий.ПродажиОт и стр.Продажи < текКритерий.ПродажиДо Тогда
								стр.Заказать = 0;
								стр.Сумма = 0;
							КонецЕсли; 
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;

			КонецЕсли;
			
			Если стр.НеЗаказывать = Истина Тогда
				стр.Сумма = 0;
				стр.Заказать = 0;
			Иначе
				стр.Сумма = стр.Заказать*стр.Цена;
			КонецЕсли;
			
			// ================================ КОНЕЦ ==========================================================
			
			Если стр.Заказать > 0 Тогда   
				НоваяСтрока = ТЗДляТоргов.Добавить();
				НоваяСтрока.ДатаРасчета = ДатаРасчета;
				НоваяСтрока.КодТовара = стр.КодТовара;
				НоваяСтрока.КодСклада = КодСклада;
				НоваяСтрока.ВПути = стр.ВПути;
				НоваяСтрока.Остаток = стр.Остаток;
				НоваяСтрока.НЗ = стр.НЗ;
				НоваяСтрока.Продажи = стр.Продажи;
				НоваяСтрока.Потребность = стр.Заказать;
				НоваяСтрока.Коробов = стр.Коробов;
				НоваяСтрока.ГруппаАП = стр.ГруппаАП;
			КонецЕсли;
			
			
			Если НЕ ( стр.БылаНедостовернаяПозиция или стр.НедостовернаяПозиция ) и НЕ стр.ГруппаАП = "I" Тогда
				Если стр.СредняяСкорость >= ПорогСреднейСкорости Тогда
					стрСкорости = ТЗСкоростей.Добавить();
					стрСкорости.КодАптеки	= КодСклада;
					стрСкорости.КодТовара	= стр.КодТовара;
					стрСкорости.Скорость	= стр.СредняяСкорость;
					стрСкорости.ГруппаАП	= стр.ГруппаАП;
					стрСкорости.Продажи		= стр.Продажи;
					стрСкорости.ДнейПродаж	= стр.ДнейПродаж;
					стрСкорости.ДнейРеализации = стр.ДнейРеализации;
				КонецЕсли;
			КонецЕсли;
			
			//================= Расчет дефектуры =========================
			//Если НЕ ( стр.БылаНедостовернаяПозиция или стр.НедостовернаяПозиция ) и стр.СредняяСкорость >= ПорогСреднейСкорости и НЕ стр.ГруппаАП = "I" Тогда
			//	КоличествоДеф = стр.СредняяСкорость*4 - стр.Остаток;
			//ИначеЕсли НЕ стр.ГруппаАП = "I" и стр.Остаток = 0 Тогда
			//	КоличествоДеф = стр.Заказать;
			//Иначе
			//	КоличествоДеф = 0;
			//КонецЕсли;
			//
			//Если КоличествоДеф > 0 Тогда
			//	стрДеф = ТЗДефектура.Добавить();
			//	стрДеф.КодАптеки	= КодСклада;
			//	стрДеф.КодТовара	= стр.КодТовара;
			//	стрДеф.Количество	= КоличествоДеф;
			//	стрДеф.ГруппаАП		= стр.ГруппаАП;
			//КонецЕсли;			
			//============== конец расчета дефектуры =====================
			
			
		КонецЦикла;
		
		
		//Запишем скорости продаж в регистр
		НаборСкоростей = РегистрыСведений.СкоростиПродаж.СоздатьНаборЗаписей();
		НаборСкоростей.Отбор.КодАптеки.Установить(КодСклада);	
		НаборСкоростей.Загрузить(ТЗСкоростей);
		Попытка
			НаборСкоростей.Записать();
		Исключение
		КонецПопытки;
		
		НаборСкоростей = РегистрыСведений.ПоследнийРасчетАвтозаказа.СоздатьНаборЗаписей();
		НаборСкоростей.Отбор.КодАптеки.Установить(КодСклада);	
		НаборСкоростей.Загрузить(ТЗ);
		Попытка
			НаборСкоростей.Записать();
		Исключение
		КонецПопытки;
		
		
		Набор = РегистрыСведений.РасчетТоргов.СоздатьНаборЗаписей();
		Набор.Отбор.ДатаРасчета.Установить(ДатаРасчета);
		Набор.Отбор.КодСклада.Установить(КодСклада);
		Набор.Загрузить(ТЗДляТоргов);
		Попытка
		  Набор.Записать();
		Исключение
		КонецПопытки;

		
		Если ИспользоватьМатрицуНедостоверных Тогда
			Запрос.Текст = "УНИЧТОЖИТЬ МН;";
			Запрос.Выполнить();
			МТ.Закрыть();
		КонецЕсли;
		
		Если ОбрезатьНедостоверные Тогда
			Если СписокНедостоверныхСтрок.Количество() > 0 Тогда
				Для Каждого позиция из СписокНедостоверныхСтрок цикл
					ТЗ.Удалить(позиция.Значение);
				КонецЦикла;					
			КонецЕсли;
		Иначе    //добавлено 10.08.2015 19:14
			Для каждого стр из СписокНедостоверныхСтрок Цикл
				МЗ = РегистрыСведений.РасчетыНедостоверныхПозиций.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(МЗ,стр.Значение);
				МЗ.Код = стр.Значение.КодТовара;
				МЗ.ДатаЗаписи = ТекущаяДата();
				МЗ.Аптека = Аптека;
				МЗ.Записать();
			КонецЦикла;
			
			Для Каждого позиция из СписокНедостоверныхСтрок цикл
				ТЗ.Удалить(позиция.Значение);
			КонецЦикла;			
		КонецЕсли;
		
		ТЗ.Колонки.Удалить("Подкатегория");
		ТЗ.Колонки.Удалить("МинимальныйЗаказ");
		ТЗ.Колонки.Удалить("Коробов");
		ТЗ.Колонки.Удалить("НеЗаказывать");

		Возврат ТЗ;

	
КонецФункции

Функция РасчетАвтозаказаОкончательныйИнтернетАптеки(ТЗЗапроса,Аптека,ПараметрыРасчета,СуммыЗакрытияТовараВПути = Неопределено,ЗаводскиеПараметрыТовара = Неопределено) Экспорт	
		


	//КоэффициентЗаказаA	= ПараметрыРасчета.КоэффициентЗаказаA;
	//КоэффициентЗаказаB	= ПараметрыРасчета.КоэффициентЗаказаB;
	//КоэффициентЗаказаC	= ПараметрыРасчета.КоэффициентЗаказаC;
	//КоэффициентЗаказаD	= ПараметрыРасчета.КоэффициентЗаказаD;
	ОграничениеДляНовыхАптек = ПараметрыРасчета.ОграничениеДляНовыхАптек;
	Поле_Коэфф			= 2;
	Флаг_УчестьРеквизитминимальныйЗаказ = ПараметрыРасчета.Флаг_УчестьРеквизитминимальныйЗаказ;
	УчитыватьКратностьЗаказа = ПараметрыРасчета.УчитыватьКратностьЗаказа;
	ПрименятьКоэффПоНЗ	= Ложь;
	КоэффПоНЗ			= 0;
	//ТекДата				= ПараметрыРасчета.ТекДата;
	УчитыватьНЗ			= ПараметрыРасчета.УчитыватьНЗ;
	ПорогСреднейСкорости			= ПараметрыРасчета.ПорогСреднейСкорости;
	МинимальныйПорогСреднейСкорости = ПараметрыРасчета.МинимальныйПорогСреднейСкорости;	
	ТаблицаКритериевОбнуленияЗаказа = ПараметрыРасчета.ТаблицаКритериевОбнуленияЗаказа;
	
	СубъектРФ = Аптека.СубъектРФ;
	ИспользоватьМатрицуНДнаПлохихСкоростях = Аптека.ИспользоватьМатрицуНДнаПлохихСкоростях;
	
	ДатаРасчета = НачалоДня(ТекущаяДата());
	КодСклада = Аптека.Код;

	ТЗДляТоргов = Новый ТаблицаЗначений;
	ТЗДляТоргов.Колонки.Добавить("ДатаРасчета");
	ТЗДляТоргов.Колонки.Добавить("КодСклада");
	ТЗДляТоргов.Колонки.Добавить("КодТовара");
	ТЗДляТоргов.Колонки.Добавить("ВПути");
	ТЗДляТоргов.Колонки.Добавить("Остаток");
	ТЗДляТоргов.Колонки.Добавить("НЗ");
	ТЗДляТоргов.Колонки.Добавить("Продажи");
	ТЗДляТоргов.Колонки.Добавить("Потребность");
	ТЗДляТоргов.Колонки.Добавить("ПотребностьОтКуМакс2");
	ТЗДляТоргов.Колонки.Добавить("Коробов");
	ТЗДляТоргов.Колонки.Добавить("ГруппаАП");
	
	ТЗСкоростей = Новый ТаблицаЗначений;
	ТЗСкоростей.Колонки.Добавить("КодАптеки");
	ТЗСкоростей.Колонки.Добавить("КодТовара");
	ТЗСкоростей.Колонки.Добавить("Скорость");
	ТЗСкоростей.Колонки.Добавить("ГруппаАП");
	ТЗСкоростей.Колонки.Добавить("Продажи");
	ТЗСкоростей.Колонки.Добавить("ДнейПродаж");
	ТЗСкоростей.Колонки.Добавить("ДнейРеализации");
	
	ТЗВылета = Новый ТаблицаЗначений;
	ТЗВылета.Колонки.Добавить("Товар");
	ТЗВылета.Колонки.Добавить("ДатаЗаписи");
	
	ТЗДефектура = Новый ТаблицаЗначений;
	ТЗДефектура.Колонки.Добавить("КодАптеки");
	ТЗДефектура.Колонки.Добавить("КодТовара");
	ТЗДефектура.Колонки.Добавить("Количество");
	ТЗДефектура.Колонки.Добавить("ГруппаАП");
	
	
	
	ТЗЗапроса.Свернуть("Код,Цена,Активный","СредняяСкорость,Продажи,ЕдиницаДляСвертки,Dx,СуммаЗакуп,ДеньРеализации");
	
	ЗакрытьТоварыВПути(Аптека,ТекущаяДата(),СуммыЗакрытияТовараВПути);
			
			ТХТ = "ВЫБРАТЬ
			      |	Т.Код КАК Код,
			      |	Т.СредняяСкорость КАК СредняяСкорость,
			      |	Т.Продажи КАК Продажи,
			      |	Т.ЕдиницаДляСвертки КАК ДнейПродаж,
			      |	Т.ДеньРеализации КАК ДнейРеализации,
			      |	Т.Dx КАК Dx,
			      |	Т.Цена КАК Цена,
			      |	Т.Активный КАК Активный,
			      |	Т.СуммаЗакуп КАК СуммаЗакуп
			      |ПОМЕСТИТЬ ВТ1
			      |ИЗ
			      |	&Таб КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Т.Код КАК Код,
			      |	АП.Ссылка КАК ТоварСсылка,
			      |	ВЫБОР
			      |		КОГДА Т.Цена = 0
			      |			ТОГДА АП.ЗакупочнаяЦена
			      |		ИНАЧЕ Т.Цена
			      |	КОНЕЦ КАК Цена,
			      |	Т.Активный КАК Активный,
			      |	Т.СредняяСкорость КАК СредняяСкорость,
			      |	Т.Продажи КАК Продажи,
			      |	Т.ДнейПродаж КАК ДнейПродаж,
			      |	Т.ДнейРеализации КАК ДнейРеализации,
			      |	Т.Dx КАК Dx,
			      |	Т.СуммаЗакуп КАК СуммаЗакуп
			      |ПОМЕСТИТЬ ВТ
			      |ИЗ
			      |	ВТ1 КАК Т
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = Т.Код)
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	Т.Код
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И НЕ МатрицаНЗ.ВидНЗ = ЗНАЧЕНИЕ(Перечисление.ВидыНЗ.НЗ_6)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ_4_5
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И МатрицаНЗ.ВидНЗ В(&ВидыНЗ)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ДАТАВРЕМЯ(1, 1, 1) КАК МаксДатаПрихода,
			      |	Остатки.КодТовара КАК КодТовара,
			      |	СУММА(Остатки.КоличествоОстаток) КАК Остаток 
			      |ПОМЕСТИТЬ ОстатокНаНачало
			      |ИЗ
			      |	РегистрНакопления.ОстаткиТовараИнтернетАптек.Остатки(, КодАптеки = &АптекаКод) КАК Остатки
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	Остатки.КодТовара
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	РТ.Товар КАК Товар
			      |ПОМЕСТИТЬ втРазрешения
			      |ИЗ
			      |	РегистрСведений.РазрешенныеТовары КАК РТ
			      |ГДЕ
			      |	РТ.Аптека = &Аптека
			      |	И &ИспользоватьРазрешенныеТоварыДляЗаказа = ИСТИНА
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Выборка.Код КАК Код,
			      |	Выборка.ТоварСсылка КАК ТоварСсылка,
			      |	Выборка.ГруппаАП КАК ГруппаАП,
			      |	Выборка.КуМин КАК КуМин,
			      |	Выборка.КуМакс КАК КуМакс,
			      |	Выборка.КуМакс2 КАК КуМакс2,
			      |	Выборка.НЗ КАК НЗ,
			      |	Выборка.Продажи КАК Продажи,
			      |	Выборка.Остаток КАК Остаток,
			      |	ВЫБОР
			      |		КОГДА Выборка.ОстатокОчищенный <= Выборка.КуМин
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |				И (Выборка.Активный = ИСТИНА
			      |					ИЛИ Выборка.ТоварРазрешен)
			      |			ТОГДА ВЫБОР
			      |					КОГДА Выборка.ОстатокОчищенный > Выборка.СредняяСкорость
			      |						ТОГДА ВЫРАЗИТЬ(Выборка.КуМакс - (Выборка.ОстатокОчищенный - Выборка.СредняяСкорость) КАК ЧИСЛО(10, 0))
			      |					ИНАЧЕ Выборка.КуМакс
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Заказать,
			      |	ВЫБОР
			      |		КОГДА Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |				И (Выборка.Активный = ИСТИНА
			      |					ИЛИ Выборка.ТоварРазрешен)
			      |			ТОГДА ВЫБОР
			      |					КОГДА Выборка.ОстатокОчищенный > Выборка.СредняяСкорость
			      |						ТОГДА ВЫРАЗИТЬ(Выборка.КуМакс2 - (Выборка.ОстатокОчищенный - Выборка.СредняяСкорость) КАК ЧИСЛО(10, 0))
			      |					ИНАЧЕ Выборка.КуМакс2
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ЗаказатьПоКумакс2,
			      |	Выборка.ДнейПродаж КАК ДнейПродаж,
			      |	Выборка.ДнейРеализации КАК ДнейРеализации,
			      |	Выборка.СредняяСкорость КАК СредняяСкорость,
			      |	ВЫБОР
			      |		КОГДА Выборка.ОстатокОчищенный = 0
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |			ТОГДА 1
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Дефектура,
			      |	Выборка.Цена КАК Цена,
			      |	0 КАК Сумма,
			      |	Выборка.ПризнакРекламнойАкции КАК ПризнакРекламнойАкции,
			      |	Выборка.СрокДействияРекламнойАкции КАК СрокДействияРекламнойАкции,
			      |	Выборка.Активный КАК Активный,
			      |	Выборка.Dx КАК Dx,
			      |	ВЫБОР
			      |		КОГДА Выборка.Продажи > 0
			      |			ТОГДА ВЫРАЗИТЬ(Выборка.СуммаЗакуп / Выборка.Продажи КАК ЧИСЛО(10, 2))
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ЦенаЗакупПродажи,
			      |	Выборка.МаксДатаПрихода КАК МаксДатаПрихода
			      |ПОМЕСТИТЬ ИтоговыйЗаказ
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ВТ.Код КАК Код,
			      |		ВТ.ТоварСсылка КАК ТоварСсылка,
			      |		Матрица.ГруппаАПИтог КАК ГруппаАП,
			      |		ВТ.Продажи КАК Продажи,
			      |		ВТ.ДнейПродаж КАК ДнейПродаж,
			      |		ВТ.ДнейРеализации КАК ДнейРеализации,
			      |		ЕСТЬNULL(Матрица.КуМин, 0) КАК КуМин,
			      |		ЕСТЬNULL(Матрица.КуМакс, 0) КАК КуМакс,
			      |		ЕСТЬNULL(Матрица.КуМакс2, 0) КАК КуМакс2,
			      |		ЕСТЬNULL(ВыборкаНЗ.НЗ, 0) КАК НЗ,
			      |		ВТ.Цена КАК Цена,
			      |		ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) КАК Остаток,
				  |		Выбор когда ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) < 0 Тогда 0 Иначе ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) КОНЕЦ КАК ОстатокОчищенный,
			      |		ЕСТЬNULL(ВТ.СредняяСкорость, 0) КАК СредняяСкорость,
			      |		ЕСТЬNULL(ВыборкаНЗ.РекламнаяАкция, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |		ЕСТЬNULL(ВыборкаНЗ.СрокДействияРекламы, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |		ВТ.Активный КАК Активный,
			      |		ВТ.Dx КАК Dx,
			      |		ВТ.СуммаЗакуп КАК СуммаЗакуп,
			      |		ВЫБОР
			      |			КОГДА РТ.Товар ЕСТЬ NULL
			      |				ТОГДА ЛОЖЬ
			      |			ИНАЧЕ ИСТИНА
			      |		КОНЕЦ КАК ТоварРазрешен,
			      |		ЕСТЬNULL(ОстатокНаНачало.МаксДатаПрихода, ДАТАВРЕМЯ(1, 1, 1)) КАК МаксДатаПрихода
			      |	ИЗ
			      |		ВТ КАК ВТ
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ОстатокНаНачало КАК ОстатокНаНачало
			      |			ПО (ОстатокНаНачало.КодТовара = ВТ.Код)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Матрица КАК Матрица
			      |			ПО (Матрица.Аптека = &Аптека)
			      |				И (Матрица.Товар = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ КАК ВыборкаНЗ
			      |			ПО ВТ.ТоварСсылка = ВыборкаНЗ.ТоварСсылка
			      |			ЛЕВОЕ СОЕДИНЕНИЕ втРазрешения КАК РТ
			      |			ПО (РТ.Товар = ВТ.ТоварСсылка)) КАК Выборка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ИсключенияАвтозаказа.Товар КАК ТоварССылка
			      |ПОМЕСТИТЬ Исключения
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |
			      |ОБЪЕДИНИТЬ
			      |
			      |ВЫБРАТЬ
			      |	ИсключенияАвтозаказа.Товар
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = &Аптека
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВыборкаПути.КодТовара КАК КодТовара,
			      |	СУММА(ВыборкаПути.ВПути) КАК ВПути
			      |ПОМЕСТИТЬ ТоварыВПути
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		Заказ.Товар.Код КАК КодТовара,
			      |		Заказ.КоличествоОстаток КАК ВПути
			      |	ИЗ
			      |		РегистрНакопления.ЗаказПоставщику.Остатки(&ТекущаяДата, Склад = &Аптека) КАК Заказ
			      |	ГДЕ
			      |		Заказ.КоличествоОстаток > 0) КАК ВыборкаПути
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВыборкаПути.КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Выборка.КодТовара КАК КодТовара,
			      |	СУММА(Выборка.КоличествоОстаток) КАК ВПути
			      |ПОМЕСТИТЬ ТоварыВПутиПроизводителя
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ЗаказПроизводителюОптОстатки.КодТовара КАК КодТовара,
			      |		ЗаказПроизводителюОптОстатки.КоличествоОстаток КАК КоличествоОстаток
			      |	ИЗ
			      |		РегистрНакопления.ЗаказПроизводителюОпт.Остатки(, ) КАК ЗаказПроизводителюОптОстатки
			      |	
			      |	ОБЪЕДИНИТЬ ВСЕ
			      |	
			      |	ВЫБРАТЬ
			      |		ПодтверждениеЗаказаОстатки.КодТовара,
			      |		ПодтверждениеЗаказаОстатки.КоличествоОстаток
			      |	ИЗ
			      |		РегистрНакопления.ПодтверждениеЗаказа.Остатки(, ) КАК ПодтверждениеЗаказаОстатки
			      |	
			      |	ОБЪЕДИНИТЬ ВСЕ
			      |
				  //ENT-971 исключить документы с ТипПоставки: Поставка под заказ (под клиента)
				  //|	ВЫБРАТЬ
				  //|		ОжидаемыйТоварОстатки.КодТовара,
				  //|		ОжидаемыйТоварОстатки.КоличествоОстаток
				  //|	ИЗ
				  //|		РегистрНакопления.ОжидаемыйТовар.Остатки(, ) КАК ОжидаемыйТоварОстатки
				  |ВЫБРАТЬ
				  |		ОжидаемыйТовар.КодТовара КАК КодТовара,
				  |		СУММА(ВЫБОР
				  |			КОГДА ОжидаемыйТовар.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
				  |				ТОГДА 1
				  |			ИНАЧЕ -1
				  |			КОНЕЦ * ОжидаемыйТовар.Количество) КАК КоличествоОстаток
				  |	ИЗ
				  |		РегистрНакопления.ОжидаемыйТовар КАК ОжидаемыйТовар
				  |	ГДЕ
				  |		ОжидаемыйТовар.Регистратор.ТипПоставки.код <> 12
				  |		И ОжидаемыйТовар.Регистратор.ТипПоставки.код <> 23
				  |	СГРУППИРОВАТЬ ПО
				  |		ОжидаемыйТовар.КодТовара
				  |	ИМЕЮЩИЕ
				  |		СУММА(ВЫБОР
				  |			КОГДА ОжидаемыйТовар.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
				  |				ТОГДА 1
				  |			ИНАЧЕ -1
				  |			КОНЕЦ * ОжидаемыйТовар.Количество) > 0
				  |			) КАК Выборка
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	Выборка.КодТовара
			      |
			      |ИМЕЮЩИЕ
			      |	СУММА(Выборка.КоличествоОстаток) > 0
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	&АптекаКод КАК КодАптеки,
			      |	ИТОГОВЫЙЗАКАЗ.Код КАК КодТовара,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка КАК ТоварСсылка,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование КАК Товар,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.МинимальныйЗаказ КАК МинимальныйЗаказ,
			      |	ИТОГОВЫЙЗАКАЗ.ГруппаАП КАК ГруппаАП,
			      |	ИТОГОВЫЙЗАКАЗ.КуМин КАК КуМин,
			      |	ИТОГОВЫЙЗАКАЗ.КуМакс КАК КуМакс,
			      |	ИТОГОВЫЙЗАКАЗ.КуМакс2 КАК КуМакс2,
			      |	ИТОГОВЫЙЗАКАЗ.НЗ КАК НЗ,
			      |	ИТОГОВЫЙЗАКАЗ.Продажи КАК Продажи,
			      |	ЕСТЬNULL(ТоварыВПути.ВПути, 0) КАК ВПути,
			      |	ИТОГОВЫЙЗАКАЗ.Остаток КАК Остаток,
			      |	ВЫБОР
			      |		КОГДА (ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
			      |				ИЛИ ЕСТЬNULL(неликвиды.КодТовара, 0) > 0)
			      |				И &НеУчитыватьТоварВПутиПриРасчетеЗаказа = ЛОЖЬ
			      |			ТОГДА 0
			      |		ИНАЧЕ ИТОГОВЫЙЗАКАЗ.Заказать - ЕСТЬNULL(ТоварыВПутиПроизводителя.ВПути, 0)  - ЕСТЬNULL(ТоварыВПути.ВПути, 0)
			      |	КОНЕЦ КАК Заказать,
			      |	ВЫБОР
			      |		КОГДА (ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
			      |				ИЛИ ЕСТЬNULL(неликвиды.КодТовара, 0) > 0)
			      |				И &НеУчитыватьТоварВПутиПриРасчетеЗаказа = ИСТИНА
			      |			ТОГДА ИСТИНА
			      |		ИНАЧЕ ЛОЖЬ
			      |	КОНЕЦ КАК НеЗаказывать,
			      |	0 КАК Резерв,
			      |	ИТОГОВЫЙЗАКАЗ.ДнейПродаж КАК ДнейПродаж,
			      |	ИТОГОВЫЙЗАКАЗ.ДнейРеализации КАК ДнейРеализации,
			      |	ИТОГОВЫЙЗАКАЗ.СредняяСкорость КАК СредняяСкорость,
			      |	ИТОГОВЫЙЗАКАЗ.Дефектура КАК Дефектура,
			      |	ИТОГОВЫЙЗАКАЗ.Цена КАК Цена,
			      |	ИТОГОВЫЙЗАКАЗ.Сумма КАК Сумма,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.ПризнакРекламнойАкции, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.СрокДействияРекламнойАкции, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |	ИТОГОВЫЙЗАКАЗ.Активный КАК Активный,
			      |	ЕСТЬNULL(ПерестокАптек.Пересток, 0) КАК Пересток,
			      |	ИТОГОВЫЙЗАКАЗ.Dx КАК Dx,
			      |	ЛОЖЬ КАК НедостовернаяПозиция,
			      |	ЛОЖЬ КАК БылаНедостовернаяПозиция,
			      |	ВЫБОР
			      |		КОГДА Исключения.ТоварССылка ЕСТЬ NULL
			      |			ТОГДА 0
			      |		ИНАЧЕ 1
			      |	КОНЕЦ КАК Исключение,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Подкатегория КАК Подкатегория,
			      |	ВЫБОР
			      |		КОГДА неликвиды.КодТовара ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК неликвид,
			      |	ИТОГОВЫЙЗАКАЗ.МаксДатаПрихода КАК МаксДатаПрихода,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.ТипДляЦО КАК ТипДляЦО,
			      |	0 КАК ЗаказатьДоПривидения,
			      |	0 КАК КоличествоВСпайке,
			      |	0 КАК КоличествоВКоробе,
			      |	0 КАК Коробов,
			      |	ВЫБОР
			      |		КОГДА ТоварТребующийАвторизации.Товар ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК ЕстьТоварТребующийАвторизации,
			      |	ВЫБОР
			      |		КОГДА ВыборкаНЗ_4_5.НЗ ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК ЕстьНЗ_4_5,
			      |	ЕСТЬNULL(ВыборкаНЗ_4_5.НЗ, 0) КАК НЗ_4_5,
			      |	ЕСТЬNULL(ТоварыВПутиПроизводителя.ВПути, 0) КАК ВПутиОпт
			      |ИЗ
			      |	ИтоговыйЗаказ КАК ИТОГОВЫЙЗАКАЗ
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВПути КАК ТоварыВПути
			      |		ПО (ТоварыВПути.КодТовара = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВПутиПроизводителя КАК ТоварыВПутиПроизводителя
			      |		ПО (ТоварыВПутиПроизводителя.КодТовара = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПерестокАптек КАК ПерестокАптек
			      |		ПО (ПерестокАптек.Аптека = &Аптека)
			      |			И (ПерестокАптек.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Исключения КАК Исключения
			      |		ПО (Исключения.ТоварССылка = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Неликвиды КАК неликвиды
			      |		ПО (неликвиды.Аптека = &Аптека)
			      |			И (неликвиды.КодТовара = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварТребующийАвторизации КАК ТоварТребующийАвторизации
			      |		ПО (ТоварТребующийАвторизации.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ_4_5 КАК ВыборкаНЗ_4_5
			      |		ПО ИТОГОВЫЙЗАКАЗ.ТоварСсылка = ВыборкаНЗ_4_5.ТоварСсылка
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ1
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ_4_5
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ИтоговыйЗаказ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ОстатокНаНачало
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Исключения
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТоварыВПути
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ";
			
				  
	  
				  //|		КОГДА (Выборка.Остаток <= Выборка.КуМин) и (Выборка.ГруппаАП <> ""I"")  
		//ИсключениеВидаНЗ = Константы.ИсключатьВидНЗ.Получить();
		//Если НЕ ИсключениеВидаНЗ.Пустая() Тогда
		//	ТХТ = СтрЗаменить(ТХТ,"111 = 111", " МатрицаНЗ.ВидНЗ <> &НЗ_Исключение "	);
		//КонецЕсли;				
		ВидыНЗ = Новый СписокЗначений;
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_4);
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_5);

				  
		ТекДата  = ТекущаяДата();
	 	Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаОстатка",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("АптекаКод",Аптека.Код);
		Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
		Запрос.УстановитьПараметр("ТекущаяДата",ТекДата);
		Запрос.УстановитьПараметр("ДатаТриМесяцаНазад",КонецДня(ТекДата) - 60*60*24*30*2);
		Запрос.УстановитьПараметр("НачДатаСегоДня",НачалоДня(ТекДата));
		Запрос.УстановитьПараметр("КонДатаСегоДня",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("ВидыНЗ",ВидыНЗ);
		Запрос.УстановитьПараметр("Таб",ТЗЗапроса);
		Запрос.УстановитьПараметр("ИспользоватьРазрешенныеТоварыДляЗаказа",Константы.ИспользоватьРазрешенныеТоварыДляЗаказа.Получить());
		Запрос.УстановитьПараметр("НеУчитыватьТоварВПутиПриРасчетеЗаказа",Константы.НеУчитыватьТоварВПутиПриРасчетеЗаказа.Получить());

		ТЗ = Запрос.Выполнить().Выгрузить();	
		
		ПорогДнейДляВылетаПозиции = Константы.ПорогДнейДляВылетаТовара.Получить();
		ОбрезатьНедостоверные = Константы.ОчищатьРасчетЗаказаОтНедостоверных.Получить();
		СписокНедостоверныхСтрок = Новый СписокЗначений;

		ИспользоватьМатрицуНедостоверных = Константы.ИспользоватьМатрицуНедостоверных.Получить(); 
		Если ИспользоватьМатрицуНедостоверных Тогда
			МТ = Новый МенеджерВременныхТаблиц;
			ТХТ = "ВЫБРАТЬ
			      |	МатрицаНедостоверных.ЦенаОт КАК ЦенаОт,
			      |	МатрицаНедостоверных.ЦенаДо,
			      |	МатрицаНедостоверных.ПродажиОт КАК ПродажиОт,
			      |	МатрицаНедостоверных.ПродажиДо,
			      |	МатрицаНедостоверных.ОстатокОт КАК ОстатокОт,
			      |	МатрицаНедостоверных.ОстатокДо,
			      |	МатрицаНедостоверных.ДнейПродажОт КАК ДнейПродажОт,
			      |	МатрицаНедостоверных.ДнейПродажДо,
			      |	МатрицаНедостоверных.Заказать
			      |ПОМЕСТИТЬ МН
			      |ИЗ
			      |	РегистрСведений.МатрицаНедостоверных КАК МатрицаНедостоверных
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ ПЕРВЫЕ 1
			      |	МН.ЦенаОт
			      |ИЗ
			      |	МН КАК МН
			      |;
			      |";

			Запрос.Текст = ТХТ;
			Запрос.МенеджерВременныхТаблиц = МТ;
			Рез = Запрос.Выполнить();
			Если Рез.Пустой() Тогда
				ИспользоватьМатрицуНедостоверных = Ложь;
				Запрос.Текст = "УНИЧТОЖИТЬ МН;";
				Запрос.Выполнить();
				МТ.Закрыть();
			Иначе
				ТХТ = "ВЫБРАТЬ
				|	МН.Заказать
				|ИЗ
				|	МН КАК МН
				|ГДЕ
				|	&Цена >= МН.ЦенаОт И &Цена < МН.ЦенаДо
				|	И &Продажа >= МН.ПродажиОт И &Продажа < МН.ПродажиДо
				|	И &Остаток >= МН.ОстатокОт И &Остаток < МН.ОстатокДо
				|	И &ДнейПродаж >= МН.ДнейПродажОт И &ДнейПродаж < МН.ДнейПродажДо";
				Запрос.Текст = ТХТ;				
			КонецЕсли;
		КонецЕсли;
			
		
		
		спр_АП = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
		Госпитальные = спр_АП.НайтиПоКоду(17);
		Для каждого стр из ТЗ Цикл
			
			стр.Заказать = Макс(стр.Заказать,0);
			
			Если Флаг_УчестьРеквизитМинимальныйЗаказ Тогда
				Попытка
					Если (стр.Заказать>0) Тогда
						// Если есть заказ
						//пер_МЗ = спр_АП.НайтиПоКоду(стр.Код).МинимальныйЗаказ;
						Если стр.Заказать<стр.МинимальныйЗаказ Тогда
							// Если Заказ>0 но меньше минимального заказа
							стр.Заказать = стр.МинимальныйЗаказ;
						Иначе
							Если УчитыватьКратностьЗаказа = Истина Тогда
								Если стр.МинимальныйЗаказ > 0 Тогда
									стр.Заказать = Окр(стр.Заказать/стр.МинимальныйЗаказ,0)*стр.МинимальныйЗаказ;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
				Исключение
					//Сообщить("Это сообщение только для ИТ! Ничего страшного :) "+ОписаниеОшибки());
					Прервать;
				КонецПопытки;
			КонецЕсли;
			
			Если ПрименятьКоэффПоНЗ = Истина Тогда
				Если стр.Заказать > 0 и стр.НЗ > 0 Тогда
					КоличествоСНЗ = Окр(стр.НЗ/КоэффПоНЗ,0);
					КоличествоСНЗ = ?(КоличествоСНЗ=0,1,КоличествоСНЗ);
					стр.Заказать = Макс(стр.Заказать,КоличествоСНЗ);	
				КонецЕсли;
				//====================================== Для МАКС2 =========================
				Если стр.ЗаказатьПоКуМакс2 > 0 и стр.НЗ > 0 Тогда
					КоличествоСНЗ = Окр(стр.НЗ/КоэффПоНЗ,0);
					КоличествоСНЗ = ?(КоличествоСНЗ=0,1,КоличествоСНЗ);
					стр.ЗаказатьПоКуМакс2 = Макс(стр.ЗаказатьПоКуМакс2,КоличествоСНЗ);
				КонецЕсли;
				//==========================================================================
			КонецЕсли;
			
			//Если ИспользоватьМатрицуНДнаПлохихСкоростях = Истина Тогда
			//	Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
			//		Если  стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" или стр.ГруппаАП = "D" Тогда
			//			Если стр.НЗ = 0 или (стр.НЗ > 0 и стр.СрокДействияРекламнойАкции < ТекДата и стр.ПризнакРекламнойАкции = Истина) Тогда
			//				стр.Кумин = 1;
			//				стр.Кумакс = 1;
			//				стр.БылаНедостовернаяПозиция = Истина;
			//				стр.НедостовернаяПозиция = Истина;
			//			КонецЕсли;
			//		КонецЕсли;
			//	КонецЕсли;
			//КонецЕсли;
			
			
			//Определяем недостоверные позиции 
			Если стр.Заказать > 0 и стр.НедостовернаяПозиция = Ложь и стр.ЕстьНЗ_4_5 = ЛОЖЬ Тогда
				Если стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" Тогда
					
					Если стр.Кумакс > стр.Продажи*2.5  и стр.Кумакс <> стр.НЗ Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;
					
					
					Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 4 и стр.ДнейПродаж <=25 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;	
				
					Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 2 и стр.ДнейПродаж <=25 и стр.Цена > 400 Тогда   // Санакоев 24.11.2014 17:37
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;						
					
					Если стр.ДнейПродаж < 15 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;
					
					Если стр.Продажи > 0 и стр.Заказать > 0 и стр.ПризнакРекламнойАкции = Ложь Тогда
						Отношение = стр.Заказать/стр.Продажи;
						Если Отношение > 2 или Отношение < 0.18 Тогда
							стр.БылаНедостовернаяПозиция = Истина;
							стр.Недостовернаяпозиция = Истина;	
						КонецЕсли;
					КонецЕсли;
					
					
					Если стр.Продажи = 1 и стр.НЗ = 0 и  стр.МинимальныйЗаказ = 0 Тогда
						Если  стр.ДнейПродаж > 4 и стр.Заказать > 2 Тогда
							стр.Заказать = 2;
						ИначеЕсли стр.ДнейПродаж < 4 и стр.Заказать > 3 Тогда
							стр.Заказать = 2;
						КонецЕсли;
						
					КонецЕсли;
					
					Если (стр.Остаток+стр.Заказать)/2 >= стр.Продажи и стр.ПризнакРекламнойАкции = Ложь  и стр.НЗ = 0
						и (стр.Остаток+стр.Заказать) >= 4 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;	
					КонецЕсли;
					
				КонецЕсли;  
				
				
				Если стр.НЗ > 4 и стр.НЗ = стр.КуМин  и Стр.НЗ = стр.КуМакс и стр.Заказать = 1 Тогда
					стр.Заказать = Мин(Окр(стр.НЗ/2),2);	
				КонецЕсли;
				
				Если стр.НЗ = стр.КуМин и стр.Заказать < 3 Тогда
				    Если стр.НЗ > 8 и стр.НЗ <= 19 Тогда
						стр.Заказать = Мин(Окр(стр.НЗ/2),2);
					ИначеЕсли стр.НЗ > 19  Тогда
						стр.Заказать = 0;
					КонецЕсли;
				КонецЕсли;

				
				//Если стр.Подкатегория = Госпитальные Тогда
				//	стр.БылаНедостовернаяПозиция = Истина;
				//	стр.НедостовернаяПозиция = Истина;
				//КонецЕсли;
				
				Если стр.НедостовернаяПозиция = Истина и стр.НЗ > 0 и стр.Цена > 0 и стр.НЗ >= стр.Заказать Тогда //доп.тз Санакоева 03.06.2014
					Если ( стр.ПризнакРекламнойАкции = Ложь )  
						или ( стр.СрокДействияРекламнойАкции >= ТекДата и стр.ПризнакРекламнойАкции = Истина ) Тогда
						стр.НедостовернаяПозиция = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				
				Если НЕ ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
					Если стр.НедостовернаяПозиция = Истина и стр.Активный = Истина Тогда
						Если ИспользоватьМатрицуНедостоверных Тогда
							Запрос.УстановитьПараметр("Цена",стр.Цена);
							Запрос.УстановитьПараметр("Продажа",стр.Продажи);
							Запрос.УстановитьПараметр("Остаток",стр.Остаток);
							Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
							Рез = Запрос.Выполнить();
							Если НЕ Рез.Пустой() Тогда
								Выборка = Рез.Выбрать();
								Выборка.Следующий();
								Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
									стр.Заказать = стр.МинимальныйЗаказ;
								Иначе
									Если стр.ВПути = 0 Тогда
										стр.Заказать = Выборка.Заказать;
									КонецЕсли;
								КонецЕсли;
								стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
								//если хотя бы по одному условию матрицы недостоверности позиция прошла
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;                                                            
				КонецЕсли;
				
				
				Если стр.НЗ > 10 и стр.Заказать < 20 Тогда   // ПО ТЗ Санакоева от 03.07.2014
					Если стр.Остаток > 0 Тогда
						Если стр.НЗ/стр.Остаток < 1.6 Тогда
							стр.Заказать = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если стр.НеЗаказывать = Истина Тогда
					стр.Сумма = 0;
				Иначе
					стр.Сумма = стр.Заказать*стр.Цена;
				КонецЕсли;

			КонецЕсли;
			
			Если ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
				Если стр.НедостовернаяПозиция = Истина и стр.Активный = Истина Тогда
					Если ИспользоватьМатрицуНедостоверных Тогда
						Запрос.УстановитьПараметр("Цена",стр.Цена);
						Запрос.УстановитьПараметр("Продажа",стр.Продажи);
						Запрос.УстановитьПараметр("Остаток",стр.Остаток);
						Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
						Рез = Запрос.Выполнить();
						Если НЕ Рез.Пустой() Тогда
							Выборка = Рез.Выбрать();
							Выборка.Следующий();
							Если стр.ВПути > 0 и стр.Незаказывать = Ложь Тогда
								стр.Заказать = 0;
							Иначе
								Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
									Если стр.НЗ > 0 Тогда
										стр.Заказать = Макс(стр.МинимальныйЗаказ,стр.НЗ-стр.Остаток-стр.ВПути,Выборка.Заказать);
									ИначеЕсли Выборка.Заказать > 0 Тогда
										стр.Заказать = Макс(стр.МинимальныйЗаказ,Выборка.Заказать);
									КонецЕсли;
								Иначе
									Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
										стр.Заказать = стр.МинимальныйЗаказ;
									Иначе
										стр.Заказать = Выборка.Заказать;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
							
							стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
							//если хотя бы по одному условию матрицы недостоверности позиция прошла
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;			
			КонецЕсли;
			
			
			Если стр.НедостовернаяПозиция = Истина  Тогда
				СписокНедостоверныхСтрок.Добавить(стр);
			КонецЕсли;

			стр.ЗаказатьДоПривидения =  стр.Заказать;
			
			Если стр.Заказать > 0 и НЕ ЗаводскиеПараметрыТовара = Неопределено Тогда
				НайденнаяСтрока = ЗаводскиеПараметрыТовара.Найти(стр.КодТовара,"КодТовара");
				Если НЕ НайденнаяСтрока = Неопределено Тогда
					стр.КоличествоВСпайке = НайденнаяСтрока.КоличествоВСпайке;
					стр.КоличествоВКоробе = НайденнаяСтрока.КоличествоВКоробе;
					Если НайденнаяСтрока.КоличествоВКоробе > 0 Тогда
						ПривелиККоробке = ПривестиККоробкеСпайке(стр.Заказать,стр.КоличествоВКоробе,0.7,0.3);
						Если НЕ ПривелиККоробке Тогда
							Если стр.КоличествоВСпайке > 0 Тогда
								ПривелиКСпайке = ПривестиККоробкеСпайке(стр.Заказать,стр.КоличествоВСпайке,0.6,0.4);
							КонецЕсли;
						КонецЕсли;
						
						Если ПривелиККоробке Тогда
							стр.Коробов = стр.Заказать/стр.КоличествоВКоробе;	
						КонецЕсли;						
						
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;
			
			
			Если стр.Заказать > 0 Тогда
				Если стр.ДнейРеализации = 1 Тогда
					Для каждого текКритерий из ТаблицаКритериевОбнуленияЗаказа Цикл
						Если стр.ДнейПродаж >= текКритерий.ДнейПродажОт и стр.ДнейПродаж < текКритерий.ДнейПродажДо Тогда
							Если стр.Продажи >= текКритерий.ПродажиОт и стр.Продажи < текКритерий.ПродажиДо Тогда
								стр.Заказать = 0;
								стр.Сумма = 0;
							КонецЕсли; 
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;

			КонецЕсли;
			
			Если стр.НеЗаказывать = Истина Тогда
				стр.Сумма = 0;
				стр.Заказать = 0;
			Иначе
				стр.Сумма = стр.Заказать*стр.Цена;
			КонецЕсли;
			
			// ================================ КОНЕЦ ==========================================================
			
			Если стр.Заказать > 0 Тогда   
				НоваяСтрока = ТЗДляТоргов.Добавить();
				НоваяСтрока.ДатаРасчета = ДатаРасчета;
				НоваяСтрока.КодТовара = стр.КодТовара;
				НоваяСтрока.КодСклада = КодСклада;
				НоваяСтрока.ВПути = стр.ВПути;
				НоваяСтрока.Остаток = стр.Остаток;
				НоваяСтрока.НЗ = стр.НЗ;
				НоваяСтрока.Продажи = стр.Продажи;
				НоваяСтрока.Потребность = стр.Заказать;
				НоваяСтрока.Коробов = стр.Коробов;
				НоваяСтрока.ГруппаАП = стр.ГруппаАП;
			КонецЕсли;
			
			
			Если НЕ ( стр.БылаНедостовернаяПозиция или стр.НедостовернаяПозиция ) и НЕ стр.ГруппаАП = "I" Тогда
				Если стр.СредняяСкорость >= ПорогСреднейСкорости Тогда
					стрСкорости = ТЗСкоростей.Добавить();
					стрСкорости.КодАптеки	= КодСклада;
					стрСкорости.КодТовара	= стр.КодТовара;
					стрСкорости.Скорость	= стр.СредняяСкорость;
					стрСкорости.ГруппаАП	= стр.ГруппаАП;
					стрСкорости.Продажи		= стр.Продажи;
					стрСкорости.ДнейПродаж	= стр.ДнейПродаж;
					стрСкорости.ДнейРеализации = стр.ДнейРеализации;
				КонецЕсли;
			КонецЕсли;
			
			//================= Расчет дефектуры =========================
			//Если НЕ ( стр.БылаНедостовернаяПозиция или стр.НедостовернаяПозиция ) и стр.СредняяСкорость >= ПорогСреднейСкорости и НЕ стр.ГруппаАП = "I" Тогда
			//	КоличествоДеф = стр.СредняяСкорость*4 - стр.Остаток;
			//ИначеЕсли НЕ стр.ГруппаАП = "I" и стр.Остаток = 0 Тогда
			//	КоличествоДеф = стр.Заказать;
			//Иначе
			//	КоличествоДеф = 0;
			//КонецЕсли;
			//
			//Если КоличествоДеф > 0 Тогда
			//	стрДеф = ТЗДефектура.Добавить();
			//	стрДеф.КодАптеки	= КодСклада;
			//	стрДеф.КодТовара	= стр.КодТовара;
			//	стрДеф.Количество	= КоличествоДеф;
			//	стрДеф.ГруппаАП		= стр.ГруппаАП;
			//КонецЕсли;			
			//============== конец расчета дефектуры =====================
			
			
		КонецЦикла;
		
		
		//Запишем скорости продаж в регистр
		НаборСкоростей = РегистрыСведений.СкоростиПродаж.СоздатьНаборЗаписей();
		НаборСкоростей.Отбор.КодАптеки.Установить(КодСклада);	
		НаборСкоростей.Загрузить(ТЗСкоростей);
		Попытка
			НаборСкоростей.Записать();
		Исключение
		КонецПопытки;
		
		НаборСкоростей = РегистрыСведений.ПоследнийРасчетАвтозаказа.СоздатьНаборЗаписей();
		НаборСкоростей.Отбор.КодАптеки.Установить(КодСклада);	
		НаборСкоростей.Загрузить(ТЗ);
		Попытка
			НаборСкоростей.Записать();
		Исключение
		КонецПопытки;
		
		
		Набор = РегистрыСведений.РасчетТоргов.СоздатьНаборЗаписей();
		Набор.Отбор.ДатаРасчета.Установить(ДатаРасчета);
		Набор.Отбор.КодСклада.Установить(КодСклада);
		Набор.Загрузить(ТЗДляТоргов);
		Попытка
		  Набор.Записать();
		Исключение
		КонецПопытки;

		
		Если ИспользоватьМатрицуНедостоверных Тогда
			Запрос.Текст = "УНИЧТОЖИТЬ МН;";
			Запрос.Выполнить();
			МТ.Закрыть();
		КонецЕсли;
		
		Если ОбрезатьНедостоверные Тогда
			Если СписокНедостоверныхСтрок.Количество() > 0 Тогда
				Для Каждого позиция из СписокНедостоверныхСтрок цикл
					ТЗ.Удалить(позиция.Значение);
				КонецЦикла;					
			КонецЕсли;
		Иначе    //добавлено 10.08.2015 19:14
			Для каждого стр из СписокНедостоверныхСтрок Цикл
				МЗ = РегистрыСведений.РасчетыНедостоверныхПозиций.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(МЗ,стр.Значение);
				МЗ.Код = стр.Значение.КодТовара;
				МЗ.ДатаЗаписи = ТекущаяДата();
				МЗ.Аптека = Аптека;
				МЗ.Записать();
			КонецЦикла;
			
			Для Каждого позиция из СписокНедостоверныхСтрок цикл
				ТЗ.Удалить(позиция.Значение);
			КонецЦикла;			
		КонецЕсли;
		
		ТЗ.Колонки.Удалить("Подкатегория");
		ТЗ.Колонки.Удалить("МинимальныйЗаказ");
		ТЗ.Колонки.Удалить("Коробов");
		ТЗ.Колонки.Удалить("НеЗаказывать");

		Возврат ТЗ;

	
КонецФункции

Функция РасчетАвтозаказаОкончательныйБезПересчетаСкоростей(Аптека,ПараметрыРасчета) Экспорт	
		

	ОграничениеДляНовыхАптек = ПараметрыРасчета.ОграничениеДляНовыхАптек;
	Поле_Коэфф			= 2;
	Флаг_УчестьРеквизитминимальныйЗаказ = ПараметрыРасчета.Флаг_УчестьРеквизитминимальныйЗаказ;
	УчитыватьКратностьЗаказа = ПараметрыРасчета.УчитыватьКратностьЗаказа;
	ПрименятьКоэффПоНЗ	= Ложь;
	КоэффПоНЗ			= 0;
	//ТекДата				= ПараметрыРасчета.ТекДата;
	УчитыватьНЗ			= ПараметрыРасчета.УчитыватьНЗ;
	ПорогСреднейСкорости			= ПараметрыРасчета.ПорогСреднейСкорости;
	МинимальныйПорогСреднейСкорости = ПараметрыРасчета.МинимальныйПорогСреднейСкорости;	
	
	СубъектРФ = Аптека.СубъектРФ;
	ИспользоватьМатрицуНДнаПлохихСкоростях = Аптека.ИспользоватьМатрицуНДнаПлохихСкоростях;
	

	ТХТ = "ВЫБРАТЬ ПЕРВЫЕ 1
	      |	СохраненныеРасчетыЗаказов.РасчетЗаказа
	      |ИЗ
	      |	РегистрСведений.СохраненныеРасчетыЗаказов КАК СохраненныеРасчетыЗаказов
	      |ГДЕ
	      |	СохраненныеРасчетыЗаказов.Период >= &Период
	      |	И СохраненныеРасчетыЗаказов.Склад = &Склад
	      |	И СохраненныеРасчетыЗаказов.НомерТаймСлота < 2
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	СохраненныеРасчетыЗаказов.ДатаСозданияЗаписи УБЫВ";
	Запрос = Новый Запрос();
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Период",НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Склад",Аптека);
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Неопределено;  //Надо вставить в вызывающей процедуре обработчик на эту ситуацию
	КонецЕсли;
	
	
	Выборка = Рез.Выбрать();
	Выборка.Следующий();
	РасчетЗаказа = Выборка.РасчетЗаказа.Получить();
	
	Попытка
		РасчетЗаказа = РасчетЗаказа.Скопировать(,"КодТовара,СредняяСкорость,Продажи,ДнейПродаж,Dx,Активный");
	Исключение
		МодульРегламентныхЗаданий.ДобавитьЗаписьВЛог(Справочники.РегламентныеЗадания.НайтиПоКоду("РасчетАвтозаказаВторойТаймСлот"), Перечисления.ТипыЗаписейЛога.Информация, ""+Аптека + " " + ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
	
	
	
	ЗакрытьТоварыВПути(Аптека,ТекущаяДата());
			
			ТХТ = "ВЫБРАТЬ
			      |	Т.КодТовара,
			      |	ЕСТЬNULL(Т.СредняяСкорость,0) КАК СредняяСкорость,
			      |	ЕСТЬNULL(Т.Продажи,0) КАК Продажи,
			      |	ЕСТЬNULL(Т.ДнейПродаж,0) КАК ДнейПродаж,
			      |	ЕСТЬNULL(Т.Dx,0) КАК Dx,
			      |	Т.Активный
			      |ПОМЕСТИТЬ ВТ1
			      |ИЗ
			      |	&Таб КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
				  |	И НЕ МатрицаНЗ.ВидНЗ = ЗНАЧЕНИЕ(Перечисление.ВидыНЗ.НЗ_6)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ_4_5
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И МатрицаНЗ.ВидНЗ В (&ВидыНЗ)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	КаталогПрайсЛистов.КодПрайсЛиста,
			      |	ВЫБОР
			      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика = 0
			      |			ТОГДА 1
			      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика
			      |	КОНЕЦ КАК БазовыйКоэфф
			      |ПОМЕСТИТЬ Параметры
			      |ИЗ
			      |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
			      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
			      |			ПО КонтрактыИНастройки.НастройкаОбмена = КаталогПрайсЛистов.Настройка
			      |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
			      |ГДЕ
			      |	КонтрактыИАптеки.Активность = ИСТИНА
			      |	И КонтрактыИАптеки.Аптека = &Аптека
			      |	И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
			      |	И КонтрактыИАптеки.Владелец.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МИНИМУМ(Прайсы.Цена * Параметры.БазовыйКоэфф) КАК Цена,
			      |	Связки.ТоварФирмы КАК ТоварСсылка
			      |ПОМЕСТИТЬ ТемпЦены
			      |ИЗ
			      |	РегистрСведений.ПрайсЛисты КАК Прайсы
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Параметры КАК Параметры
			      |		ПО Прайсы.КодПрайсЛиста = Параметры.КодПрайсЛиста
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
			      |		ПО (Связки.Поставщик = Прайсы.ПоставщикСвязки)
			      |			И (Связки.КодТовараПоставщика = Прайсы.Код)
			      |ГДЕ
			      |	ВЫБОР
			      |			КОГДА Прайсы.Цена > 0
			      |					И Прайсы.Цена < 50
			      |					И Прайсы.Количество > 800
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 50
			      |					И Прайсы.Цена < 150
			      |					И Прайсы.Количество > 300
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 150
			      |					И Прайсы.Цена < 1000
			      |					И Прайсы.Количество > 50
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 1000
			      |					И Прайсы.Цена < 5000
			      |					И Прайсы.Количество > 10
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 5000
			      |					И Прайсы.Цена < 10000
			      |					И Прайсы.Количество > 5
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 10000
			      |					И Прайсы.Количество > 3
			      |				ТОГДА ИСТИНА
			      |			ИНАЧЕ ЛОЖЬ
			      |		КОНЕЦ = ИСТИНА
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	Связки.ТоварФирмы
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	Связки.ТоварФирмы
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Параметры
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Т.КодТовара,
			      |	АП.Ссылка КАК ТоварСсылка,
			      |	Т.Активный,
			      |	Т.СредняяСкорость КАК СредняяСкорость,
			      |	Т.Продажи КАК Продажи,
			      |	Т.ДнейПродаж КАК ДнейПродаж,
			      |	Т.Dx КАК Dx,
			      |	ЕСТЬNULL(ТемпЦены.Цена, 0) КАК Цена,
			      |	0 КАК СуммаЗакуп
			      |ПОМЕСТИТЬ ВТ
			      |ИЗ
			      |	ВТ1 КАК Т
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = Т.КодТовара)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТемпЦены КАК ТемпЦены
			      |		ПО (ТемпЦены.ТоварСсылка = АП.Ссылка)
			      |;
			      |
			      |
			      |ВЫБРАТЬ
			      |	Выбор когда АП.КодОП > 0 Тогда АП.КодОП Иначе ПартииОстатки.ТоварКод КОНЕЦ КАК КодТовара,
			      |	МАКСИМУМ(Партии.ДатаПоступления) КАК МаксДатаПрихода,
			      |	СУММА(ПартииОстатки.КоличествоОстаток / Партии.К) КАК Остаток
			      |ПОМЕСТИТЬ ОстатокНаНачало
			      |ИЗ
			      |	РегистрНакопления.УЗ_Партии.Остатки(, СкладКод = &АптекаКод) КАК ПартииОстатки
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |		ПО (Партии.Код = ПартииОстатки.ПартияКод)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Ассортиментный_План КАК АП
			      |		ПО (АП.Код = ПартииОстатки.ТоварКод)				  
			      |ГДЕ
			      |	ПартииОстатки.КоличествоОстаток > 0
			      |	И Партии.К > 0
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	Выбор когда АП.КодОП > 0 Тогда АП.КодОП Иначе ПартииОстатки.ТоварКод КОНЕЦ
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |				  
			      |
			      |ВЫБРАТЬ
			      |Выбор когда АП.КодОП > 0 Тогда АП.КодОП Иначе ПродажиСменККМ.ТоварКод КОНЕЦ КАК КодТовара,
			      |	ВЫРАЗИТЬ(СУММА(ПродажиСменККМ.Количество / Партии.К) КАК ЧИСЛО(12, 0)) КАК Продажа
			      |ПОМЕСТИТЬ ПродажиСегоДня
			      |ИЗ
			      |	РегистрНакопления.УЗ_ПродажиСменККМ КАК ПродажиСменККМ
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |		ПО (Партии.Код = ПродажиСменККМ.ПартияКод)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Ассортиментный_План КАК АП
			      |		ПО (АП.Код = ПродажиСменККМ.ТоварКод)				  
			      |ГДЕ
			      |	ПродажиСменККМ.Период >= &НачДатаСегоДня
			      |	И ПродажиСменККМ.СкладКод = &АптекаКод
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	Выбор когда АП.КодОП > 0 Тогда АП.КодОП Иначе ПродажиСменККМ.ТоварКод КОНЕЦ
			      |;
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	СписаниеТовар.Товар КАК ТоварСсылка,
			      |	ВЫРАЗИТЬ(СУММА(СписаниеТовар.Количество * СписаниеТовар.Коэфф / СписаниеТовар.КоэффициентРазбивки) КАК ЧИСЛО(12, 0)) КАК СписанноеКоличество
			      |ПОМЕСТИТЬ Списания
			      |ИЗ
			      |	Документ.УЗ_Списание.Товар КАК СписаниеТовар
			      |ГДЕ
			      |	СписаниеТовар.Ссылка.Дата > &ДатаТриМесяцаНазад
			      |	И СписаниеТовар.Ссылка.Склад = &Аптека
			      |	И СписаниеТовар.Ссылка.Проведен = ЛОЖЬ
			      |	И СписаниеТовар.Ссылка.ПометкаУдаления = ЛОЖЬ  и НЕ СписаниеТовар.Ссылка.СтатусДокАптеки = Значение(Перечисление.СтатусДокАптеки.Аннулирован)
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	СписаниеТовар.Товар
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ 
			      |	Выборка.КодТовара,
			      |	Выборка.ТоварСсылка,
			      |	Выборка.ГруппаАП,
			      |	Выборка.КуМин,
			      |	Выборка.КуМакс,
			      |	Выборка.НЗ,
			      |	Выборка.Продажи,
			      |	Выборка.Остаток,
			      |	ВЫБОР
			      |		КОГДА Выборка.Остаток <= Выборка.КуМин
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |				И (Выборка.Активный = ИСТИНА
			      |					ИЛИ Выборка.ТоварРазрешен)
			      |			ТОГДА ВЫБОР
			      |					КОГДА Выборка.Остаток > Выборка.СредняяСкорость
			      |						ТОГДА ВЫРАЗИТЬ(Выборка.КуМакс - (Выборка.Остаток - Выборка.СредняяСкорость) КАК ЧИСЛО(10, 0))
			      |					ИНАЧЕ Выборка.КуМакс
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Заказать,
			      |	Выборка.ДнейПродаж,
			      |	Выборка.ПродажаСегоДня,
			      |	Выборка.СредняяСкорость,
			      |	ВЫБОР
			      |		КОГДА Выборка.Остаток = 0
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |			ТОГДА 1
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Дефектура,
			      |	Выборка.Цена,
			      |	0 КАК Сумма,
			      |	Выборка.ПризнакРекламнойАкции,
			      |	Выборка.СрокДействияРекламнойАкции,
			      |	Выборка.Активный,
				  |	Выборка.ТоварРазрешен,
			      |	Выборка.Dx,
			      |	ВЫБОР
			      |		КОГДА Выборка.Продажи > 0
			      |			ТОГДА ВЫРАЗИТЬ(Выборка.СуммаЗакуп / Выборка.Продажи КАК ЧИСЛО(10, 2))
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ЦенаЗакупПродажи,
				  |	Выборка.МаксДатаПрихода
			      |ПОМЕСТИТЬ ИтоговыйЗаказ
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ВТ.КодТовара,
			      |		ВТ.ТоварСсылка КАК ТоварСсылка,
			      |		Матрица.ГруппаАПИтог КАК ГруппаАП,
			      |		ВТ.Продажи КАК Продажи,
			      |		ВТ.ДнейПродаж КАК ДнейПродаж,
			      |		ЕСТЬNULL(Матрица.КуМин, 0) КАК КуМин,
			      |		ЕСТЬNULL(Матрица.КуМакс, 0) КАК КуМакс,
			      |		ЕСТЬNULL(ВыборкаНЗ.НЗ, 0) КАК НЗ,
			      |		ВТ.Цена КАК Цена,
			      |		ВЫБОР
			      |			КОГДА ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) - ЕСТЬNULL(ПродажиСегоДня.Продажа, 0) - ЕСТЬNULL(Списания.СписанноеКоличество, 0) < 0
			      |				ТОГДА 0
			      |			ИНАЧЕ ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) - ЕСТЬNULL(ПродажиСегоДня.Продажа, 0) - ЕСТЬNULL(Списания.СписанноеКоличество, 0)
			      |		КОНЕЦ КАК Остаток,
			      |		ЕСТЬNULL(ВТ.СредняяСкорость, 0) КАК СредняяСкорость,
			      |		ЕСТЬNULL(ВыборкаНЗ.РекламнаяАкция, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |		ЕСТЬNULL(ВыборкаНЗ.СрокДействияРекламы, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |		ВТ.Активный КАК Активный,
			      |		ВТ.Dx КАК Dx,
			      |		ВТ.СуммаЗакуп КАК СуммаЗакуп,
			      |		ВЫБОР
			      |			КОГДА РТ.Товар ЕСТЬ NULL 
			      |				ТОГДА ЛОЖЬ
			      |			ИНАЧЕ ИСТИНА
			      |		КОНЕЦ КАК ТоварРазрешен,				  
			      |		ЕСТЬNULL(ПродажиСегоДня.Продажа, 0) КАК ПродажаСегоДня,
				  |		ЕСТЬNULL(ОстатокНаНачало.МаксДатаПрихода,ДАТАВРЕМЯ(1,1,1)) как МаксДатаПрихода
			      |	ИЗ
			      |		ВТ КАК ВТ
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ОстатокНаНачало КАК ОстатокНаНачало
			      |			ПО (ОстатокНаНачало.КодТовара = ВТ.КодТовара)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Матрица КАК Матрица
			      |			ПО (Матрица.Аптека = &Аптека)
			      |				И (Матрица.Товар = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ КАК ВыборкаНЗ
			      |			ПО ВТ.ТоварСсылка = ВыборкаНЗ.ТоварСсылка
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ПродажиСегоДня КАК ПродажиСегоДня
			      |			ПО (ПродажиСегоДня.КодТовара = ВТ.КодТовара)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ Списания КАК Списания
			      |			ПО (Списания.ТоварСсылка = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенныеТовары КАК РТ
			      |			ПО (РТ.Аптека = &Аптека)
			      |				И (РТ.Товар = ВТ.ТоварСсылка)
			      |				И (&ИспользоватьРазрешенныеТоварыДляЗаказа = ИСТИНА)				  
				  |	) КАК Выборка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ИсключенияАвтозаказа.Товар КАК ТоварССылка
			      |ПОМЕСТИТЬ Исключения
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |
			      |ОБЪЕДИНИТЬ
			      |
			      |ВЫБРАТЬ
			      |	ИсключенияАвтозаказа.Товар
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = &Аптека
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВыборкаПути.КодТовара,
			      |	СУММА(ВыборкаПути.ВПути) КАК ВПути
			      |ПОМЕСТИТЬ ТоварыВПути
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		Выбор когда Заказ.Товар.КодОП > 0 Тогда Заказ.Товар.КодОП ИНАЧЕ  Заказ.Товар.Код КОНЕЦ КАК КодТовара,
			      |		Заказ.КоличествоОстаток КАК ВПути
			      |	ИЗ
			      |		РегистрНакопления.ЗаказПоставщику.Остатки(, Склад = &Аптека) КАК Заказ
			      |	ГДЕ
			      |		Заказ.КоличествоОстаток > 0
			      |	
			      |	ОБЪЕДИНИТЬ ВСЕ
			      |	
			      |	ВЫБРАТЬ
			      |		Выбор когда АП.КодОП > 0 Тогда АП.КодОП Иначе ТоварНаПриемке.ТоварКод КОНЕЦ как КодТовара,
			      |		ТоварНаПриемке.Количество / ТоварНаПриемке.К
			      |	ИЗ
			      |		РегистрСведений.ТоварНаПриемке КАК ТоварНаПриемке
			      |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |			ПО (АП.Код = ТоварНаПриемке.ТоварКод)
			      |	ГДЕ
			      |		ТоварНаПриемке.СкладКод = &АптекаКод) КАК ВыборкаПути
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВыборкаПути.КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ИсторияЗакупки.Товар,
			      |	СРЕДНЕЕ(ИсторияЗакупки.Цена) КАК ЦенаЗакупки
			      |ПОМЕСТИТЬ ВТИсторияЗакупки
			      |ИЗ
			      |	РегистрСведений.ИсторияЗакупочнойЦены КАК ИсторияЗакупки
			      |ГДЕ
			      |	ИсторияЗакупки.СубъектРФ = &СубъектРФ
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ИсторияЗакупки.Товар
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ШаблоныМатрицНЗТовары.Товар,
			      |	ИСТИНА КАК ЕстьТовар
			      |ПОМЕСТИТЬ ТоварвШаблонах
			      |ИЗ
			      |	Справочник.ШаблоныМатрицНЗ.Товары КАК ШаблоныМатрицНЗТовары
			      |ГДЕ
			      |	ШаблоныМатрицНЗТовары.Ссылка В
			      |			(ВЫБРАТЬ
			      |				ШаблоныМатрицНЗПоАптекам.Шаблон
			      |			ИЗ
			      |				РегистрСведений.ШаблоныМатрицНЗПоАптекам КАК ШаблоныМатрицНЗПоАптекам
			      |			ГДЕ
			      |				ШаблоныМатрицНЗПоАптекам.Аптека = &Аптека
			      |				И ШаблоныМатрицНЗПоАптекам.Шаблон.ПометкаУдаления = ЛОЖЬ)
			      |;
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ 
			      |	ИТОГОВЫЙЗАКАЗ.КодТовара,
				  |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование КАК Товар,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.МинимальныйЗаказ КАК МинимальныйЗаказ,
			      |	ИТОГОВЫЙЗАКАЗ.ГруппаАП,
			      |	ИТОГОВЫЙЗАКАЗ.КуМин,
			      |	ИТОГОВЫЙЗАКАЗ.КуМакс,
			      |	ИТОГОВЫЙЗАКАЗ.НЗ,
			      |	ИТОГОВЫЙЗАКАЗ.Продажи,
			      |	ЕСТЬNULL(ТоварыВПути.ВПути, 0) КАК ВПути,
			      |	ИТОГОВЫЙЗАКАЗ.Остаток,
			      |	ВЫБОР
			      |		КОГДА ЕСТЬNULL(неликвиды.КодТовара, 0) > 0
			      |				ИЛИ &НеУчитыватьТоварВПутиПриРасчетеЗаказа = ЛОЖЬ
			      |					И ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
			      |			ТОГДА 0
			      |		ИНАЧЕ ИТОГОВЫЙЗАКАЗ.Заказать - ЕСТЬNULL(ТоварыВПути.ВПути, 0)
			      |	КОНЕЦ КАК Заказать,
				  //|	ВЫБОР
				  //|		КОГДА ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
				  //|				ИЛИ ЕСТЬNULL(неликвиды.КодТовара, 0) > 0
				  //|			ТОГДА 0
				  //|		ИНАЧЕ ИТОГОВЫЙЗАКАЗ.Заказать
				  //|	КОНЕЦ КАК Заказать,	
			      |	0 КАК Резерв,
			      |	ИТОГОВЫЙЗАКАЗ.ДнейПродаж,
			      |	ИТОГОВЫЙЗАКАЗ.ПродажаСегоДня,
			      |	ИТОГОВЫЙЗАКАЗ.СредняяСкорость,
			      |	ИТОГОВЫЙЗАКАЗ.Дефектура,
			      |	ИТОГОВЫЙЗАКАЗ.Цена,
			      |	ИТОГОВЫЙЗАКАЗ.Сумма,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.ПризнакРекламнойАкции, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.СрокДействияРекламнойАкции, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |	ИТОГОВЫЙЗАКАЗ.Активный,
			      |	ЕСТЬNULL(ПерестокАптек.Пересток, 0) КАК Пересток,
			      |	ИТОГОВЫЙЗАКАЗ.Dx,
				  |	ЛОЖЬ КАК БылаНедостовернаяПозиция,
			      |	ЛОЖЬ КАК НедостовернаяПозиция,
				  |	ИТОГОВЫЙЗАКАЗ.ТоварРазрешен,
			      |	ВЫБОР
			      |		КОГДА Исключения.ТоварССылка ЕСТЬ NULL 
			      |			ТОГДА 0
			      |		ИНАЧЕ 1
			      |	КОНЕЦ КАК Исключение,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Подкатегория КАК Подкатегория,
			      |	ВЫБОР
			      |		КОГДА неликвиды.КодТовара ЕСТЬ NULL 
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК неликвид,
			      |	ВЫБОР
			      |		КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи > 0
			      |				И ЕСТЬNULL(ВТИсторияЗакупки.ЦенаЗакупки, 0) > 100
			      |			ТОГДА ВЫБОР
			      |					КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи > ВТИсторияЗакупки.ЦенаЗакупки
			      |						ТОГДА 100 * (ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи - ВТИсторияЗакупки.ЦенаЗакупки) / ВТИсторияЗакупки.ЦенаЗакупки
			      |					КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи < ВТИсторияЗакупки.ЦенаЗакупки
			      |						ТОГДА 100 * (ВТИсторияЗакупки.ЦенаЗакупки - ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи) / ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи
			      |					ИНАЧЕ 0
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ОтношениеЗакупки,
				  |	ЛОЖЬ как Заказано,
				  |	ИТОГОВЫЙЗАКАЗ.МаксДатаПрихода,
				  |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.ТипДляЦО КАК ТипДляЦО,
			      |	ЕСТЬNULL(ВыводПозицийИзМатрицы.ДатаЗаписи, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВыводаПозиции,
			      |	ЕСТЬNULL(ТоварВШаблонах.ЕстьТовар, ЛОЖЬ) КАК ЕстьТоварВШаблоне,
			      |	ВЫБОР
			      |		КОГДА ТоварТребующийАвторизации.Товар ЕСТЬ NULL 
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК ЕстьТоварТребующийАвторизации,
			  	  |Выбор когда ВыборкаНЗ_4_5.НЗ есть NULL Тогда Ложь ИНАЧЕ Истина КОНЕЦ КАК ЕстьНЗ_4_5 , 
				  |ЕСТЬNULL(ВыборкаНЗ_4_5.НЗ,0) как НЗ_4_5
			      |ИЗ
			      |	ИтоговыйЗаказ КАК ИТОГОВЫЙЗАКАЗ
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВПути КАК ТоварыВПути
			      |		ПО (ТоварыВПути.КодТовара = ИТОГОВЫЙЗАКАЗ.КодТовара)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПерестокАптек КАК ПерестокАптек
			      |		ПО (ПерестокАптек.Аптека = &Аптека)
			      |			И (ПерестокАптек.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Исключения КАК Исключения
			      |		ПО (Исключения.ТоварССылка = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Неликвиды КАК неликвиды
			      |		ПО (неликвиды.Аптека = &Аптека)
			      |			И (неликвиды.КодТовара = ИТОГОВЫЙЗАКАЗ.КодТовара)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсторияЗакупки КАК ВТИсторияЗакупки
			      |		ПО (ВТИсторияЗакупки.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыводПозицийИзМатрицы КАК ВыводПозицийИзМатрицы
			      |		ПО (ВыводПозицийИзМатрицы.Аптека = &Аптека)
			      |			И (ВыводПозицийИзМатрицы.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварвШаблонах КАК ТоварВШаблонах
			      |		ПО (ТоварВШаблонах.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварТребующийАвторизации КАК ТоварТребующийАвторизации
			      |		ПО (ТоварТребующийАвторизации.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ_4_5 КАК ВыборкаНЗ_4_5
			      |			ПО ИТОГОВЫЙЗАКАЗ.ТоварСсылка = ВыборкаНЗ_4_5.ТоварСсылка
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ1
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ_4_5
			      |;				  
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТИсторияЗакупки
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ИтоговыйЗаказ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ОстатокНаНачало
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Исключения
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТоварыВПути
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ПродажиСегоДня
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Списания
			      |;
			      |УНИЧТОЖИТЬ ТоварвШаблонах
				  |;
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТемпЦены
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ";
				  
	  
				  //|		КОГДА (Выборка.Остаток <= Выборка.КуМин) и (Выборка.ГруппаАП <> ""I"")  
		ТекДата  = ТекущаяДата();
	 	Запрос = Новый Запрос;
		
		//ИсключениеВидаНЗ = Константы.ИсключатьВидНЗ.Получить();
		//Если НЕ ИсключениеВидаНЗ.Пустая() Тогда
		//	ТХТ = СтрЗаменить(ТХТ,"111 = 111", " МатрицаНЗ.ВидНЗ <> &НЗ_Исключение "	);
		//КонецЕсли;
		ВидыНЗ = Новый СписокЗначений;
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_4);
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_5);
		
		Запрос.Текст = ТХТ;
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаОстатка",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("АптекаКод",Аптека.Код);
		Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
		Запрос.УстановитьПараметр("ТекущаяДата",ТекДата);
		Запрос.УстановитьПараметр("ДатаТриМесяцаНазад",КонецДня(ТекДата) - 60*60*24*30*2);
		Запрос.УстановитьПараметр("НачДатаСегоДня",НачалоДня(ТекДата));
		Запрос.УстановитьПараметр("КонДатаСегоДня",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("ВидыНЗ",ВидыНЗ);
		Запрос.УстановитьПараметр("ИспользоватьРазрешенныеТоварыДляЗаказа",Константы.ИспользоватьРазрешенныеТоварыДляЗаказа.Получить());
		Запрос.УстановитьПараметр("НеУчитыватьТоварВПутиПриРасчетеЗаказа",Константы.НеУчитыватьТоварВПутиПриРасчетеЗаказа.Получить());

		Запрос.УстановитьПараметр("Таб",РасчетЗаказа);
		ТЗ = Запрос.Выполнить().Выгрузить();	
		
		СписокНедостоверныхСтрок = Новый СписокЗначений;
		ИспользоватьМатрицуНедостоверных = Константы.ИспользоватьМатрицуНедостоверных.Получить(); 
		Если ИспользоватьМатрицуНедостоверных Тогда
			МТ = Новый МенеджерВременныхТаблиц;
			ТХТ = "ВЫБРАТЬ
			      |	МатрицаНедостоверных.ЦенаОт КАК ЦенаОт,
			      |	МатрицаНедостоверных.ЦенаДо,
			      |	МатрицаНедостоверных.ПродажиОт КАК ПродажиОт,
			      |	МатрицаНедостоверных.ПродажиДо,
			      |	МатрицаНедостоверных.ОстатокОт КАК ОстатокОт,
			      |	МатрицаНедостоверных.ОстатокДо,
			      |	МатрицаНедостоверных.ДнейПродажОт КАК ДнейПродажОт,
			      |	МатрицаНедостоверных.ДнейПродажДо,
			      |	МатрицаНедостоверных.Заказать
			      |ПОМЕСТИТЬ МН
			      |ИЗ
			      |	РегистрСведений.МатрицаНедостоверных КАК МатрицаНедостоверных
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ ПЕРВЫЕ 1
			      |	МН.ЦенаОт
			      |ИЗ
			      |	МН КАК МН
			      |;
			      |";

			Запрос.Текст = ТХТ;
			Запрос.МенеджерВременныхТаблиц = МТ;
			Рез = Запрос.Выполнить();
			Если Рез.Пустой() Тогда
				ИспользоватьМатрицуНедостоверных = Ложь;
				Запрос.Текст = "УНИЧТОЖИТЬ МН;";
				Запрос.Выполнить();
				МТ.Закрыть();
			Иначе
				ТХТ = "ВЫБРАТЬ
				|	МН.Заказать
				|ИЗ
				|	МН КАК МН
				|ГДЕ
				|	&Цена >= МН.ЦенаОт И &Цена < МН.ЦенаДо
				|	И &Продажа >= МН.ПродажиОт И &Продажа < МН.ПродажиДо
				|	И &Остаток >= МН.ОстатокОт И &Остаток < МН.ОстатокДо
				|	И &ДнейПродаж >= МН.ДнейПродажОт И &ДнейПродаж < МН.ДнейПродажДо";
				Запрос.Текст = ТХТ;				
			КонецЕсли;
		КонецЕсли;
			
		
		
		спр_АП = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
		Госпитальные = спр_АП.НайтиПоКоду(17);
		Для каждого стр из ТЗ Цикл
			
			стр.Заказать = Макс(0,стр.Заказать);
			
			Если ОграничениеДляНовыхАптек = Истина Тогда
				Если стр.ДнейПродаж < 7 и стр.dx < 1 Тогда
				//Если стр.Продажи <> 0 Тогда
					УдвоенныеПродажи = (стр.Продажи*Поле_Коэфф);  // Исправил 2 на Поле_Коэфф по просьбе Санакоева 02/03/2010
					Если (стр.Заказать > УдвоенныеПродажи) и (стр.НЗ < УдвоенныеПродажи) Тогда
						стр.Заказать = УдвоенныеПродажи;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			
			
			Если Флаг_УчестьРеквизитМинимальныйЗаказ Тогда
				Попытка
					Если (стр.Заказать>0) Тогда
						// Если есть заказ
						//пер_МЗ = спр_АП.НайтиПоКоду(стр.Код).МинимальныйЗаказ;
						Если стр.Заказать<стр.МинимальныйЗаказ Тогда
							// Если Заказ>0 но меньше минимального заказа
							стр.Заказать = стр.МинимальныйЗаказ;
						Иначе
							Если УчитыватьКратностьЗаказа = Истина Тогда
								Если стр.МинимальныйЗаказ > 0 Тогда
									стр.Заказать = Окр(стр.Заказать/стр.МинимальныйЗаказ,0)*стр.МинимальныйЗаказ;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
			
				Исключение
					//Сообщить("Это сообщение только для ИТ! Ничего страшного :) "+ОписаниеОшибки());
					Прервать;
				КонецПопытки;
			КонецЕсли;
			
			Если ПрименятьКоэффПоНЗ = Истина Тогда
				Если стр.Заказать > 0 и стр.НЗ > 0 Тогда
					КоличествоСНЗ = Окр(стр.НЗ/КоэффПоНЗ,0);
					КоличествоСНЗ = ?(КоличествоСНЗ=0,1,КоличествоСНЗ);
					стр.Заказать = Макс(стр.Заказать,КоличествоСНЗ);	
				КонецЕсли;
				

			КонецЕсли;
			
			Если ИспользоватьМатрицуНДнаПлохихСкоростях = Истина Тогда
				Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
					Если  стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" или стр.ГруппаАП = "D" Тогда
						Если стр.НЗ = 0 или (стр.НЗ > 0 и стр.СрокДействияРекламнойАкции < ТекДата и стр.ПризнакРекламнойАкции = Истина) Тогда
							стр.Кумин = 1;
							стр.Кумакс = 1;
							стр.БылаНедостовернаяПозиция = Истина;
							стр.НедостовернаяПозиция = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;			
			
			//Определяем недостоверные позиции 
			Если стр.Заказать > 0 и стр.НедостовернаяПозиция = Ложь и стр.ЕстьНЗ_4_5 = ЛОЖЬ Тогда
				Если стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" Тогда
					
					Если стр.Кумакс > стр.Продажи*2.5  и стр.Кумакс <> стр.НЗ Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;
					
					//Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 4 и стр.ДнейПродаж <=20 Тогда
					//	стр.Недостовернаяпозиция = Истина;
					//КонецЕсли;

					
					Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 4 и стр.ДнейПродаж <=25 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;
					
					Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 2 и стр.ДнейПродаж <=25 и стр.Цена > 400 Тогда   // Санакоев 24.11.2014 17:37
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;					
					
					
					Если стр.ДнейПродаж < 15 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;
					
					Если стр.Продажи > 0 и стр.Заказать > 0 и стр.ПризнакРекламнойАкции = Ложь Тогда
						Отношение = стр.Заказать/стр.Продажи;
						Если Отношение > 2 или Отношение < 0.18 Тогда
							стр.БылаНедостовернаяПозиция = Истина;
							стр.Недостовернаяпозиция = Истина;	
						КонецЕсли;
					КонецЕсли;
					
					
					Если стр.Продажи = 1 и стр.НЗ = 0 и  стр.МинимальныйЗаказ = 0 Тогда
						Если  стр.ДнейПродаж > 4 и стр.Заказать > 2 Тогда
							стр.Заказать = 2;
						ИначеЕсли стр.ДнейПродаж < 4 и стр.Заказать > 3 Тогда
							стр.Заказать = 2;
						КонецЕсли;
						
					КонецЕсли;
					
					Если (стр.Остаток+стр.Заказать)/2 > стр.Продажи и стр.ПризнакРекламнойАкции = Ложь  и стр.НЗ = 0
						и (стр.Остаток+стр.Заказать) > 4 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;	
					КонецЕсли;
					
				КонецЕсли;  
				
				
				Если стр.НЗ > 4 и стр.НЗ = стр.КуМин  и Стр.НЗ = стр.КуМакс и стр.Заказать = 1 Тогда
					стр.Заказать = Мин(Окр(стр.НЗ/2),2);	
				КонецЕсли;
				
				Если стр.НЗ = стр.КуМин и стр.Заказать < 3 Тогда
				    Если стр.НЗ > 8 и стр.НЗ <= 19 Тогда
						стр.Заказать = Мин(Окр(стр.НЗ/2),2);
					ИначеЕсли стр.НЗ > 19  Тогда
						стр.Заказать = 0;
					КонецЕсли;
				КонецЕсли;

				
				Если стр.Подкатегория = Госпитальные Тогда
					стр.БылаНедостовернаяПозиция = Истина;
					стр.НедостовернаяПозиция = Истина;
				КонецЕсли;
				
				Если стр.НедостовернаяПозиция = Истина и стр.НЗ > 0 и стр.Цена > 0 и стр.НЗ >= стр.Заказать Тогда //доп.тз Санакоева 03.06.2014
					Если ( стр.ПризнакРекламнойАкции = Ложь )  
						или ( стр.СрокДействияРекламнойАкции >= ТекДата и стр.ПризнакРекламнойАкции = Истина ) Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.НедостовернаяПозиция = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				
				Если НЕ ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
					Если стр.НедостовернаяПозиция = Истина Тогда
						Если ИспользоватьМатрицуНедостоверных Тогда
							Запрос.УстановитьПараметр("Цена",стр.Цена);
							Запрос.УстановитьПараметр("Продажа",стр.Продажи);
							Запрос.УстановитьПараметр("Остаток",стр.Остаток);
							Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
							Рез = Запрос.Выполнить();
							Если НЕ Рез.Пустой() Тогда
								Выборка = Рез.Выбрать();
								Выборка.Следующий();
								Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
									стр.Заказать = стр.МинимальныйЗаказ;
								Иначе
									стр.Заказать = Выборка.Заказать;
								КонецЕсли;
								стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
								//если хотя бы по одному условию матрицы недостоверности позиция прошла
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;                                                            
				КонецЕсли;
				

				
				Если стр.НЗ > 10 и стр.Заказать < 20 Тогда   // ПО ТЗ Санакоева от 03.07.2014
					Если стр.Остаток > 0 Тогда
						Если стр.НЗ/стр.Остаток < 1.6 Тогда
							стр.Заказать = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
				
				
				стр.Сумма = стр.Заказать*стр.Цена;

			КонецЕсли;
			
			//Если стр.ЕстьНЗ_4_5 Тогда
			//	Если стр.Заказать/2 > Макс(стр.НЗ_4_5, стр.Продажи) Тогда
			//		стр.Заказать = Макс(стр.НЗ_4_5, стр.Продажи);	
			//		стр.Сумма = стр.Заказать*стр.Цена;
			//	КонецЕсли;
			//КонецЕсли;
			
			
			Если ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
				Если стр.НедостовернаяПозиция = Истина Тогда
					Если ИспользоватьМатрицуНедостоверных Тогда
						Запрос.УстановитьПараметр("Цена",стр.Цена);
						Запрос.УстановитьПараметр("Продажа",стр.Продажи);
						Запрос.УстановитьПараметр("Остаток",стр.Остаток);
						Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
						Рез = Запрос.Выполнить();
						Если НЕ Рез.Пустой() Тогда
							Выборка = Рез.Выбрать();
							Выборка.Следующий();
							Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
								Если стр.НЗ > 0 Тогда
									стр.Заказать = Макс(стр.МинимальныйЗаказ,стр.НЗ-стр.Остаток-стр.ВПути,Выборка.Заказать);
								ИначеЕсли Выборка.Заказать > 0 Тогда
									стр.Заказать = Макс(стр.МинимальныйЗаказ,Выборка.Заказать);
								КонецЕсли;
							Иначе
								Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
									стр.Заказать = стр.МинимальныйЗаказ;
								Иначе
									стр.Заказать = Выборка.Заказать;
								КонецЕсли;
							КонецЕсли;
							стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
							//если хотя бы по одному условию матрицы недостоверности позиция прошла
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;			
			КонецЕсли;			
			
			Если стр.ОтношениеЗакупки > 100 Тогда
				стр.НедостовернаяПозиция = Истина;
			КонецЕсли;	
			
			Если стр.ДнейПродаж <= 23 и стр.МаксДатаПрихода >= (НачалоДня(ТекДата) - 48*60*60) Тогда
				стр.Заказать = 0;
			КонецЕсли;
			
			стр.Заказать = Окр(стр.Заказать,0);
			
			Если стр.НедостовернаяПозиция = Истина Тогда
				СписокНедостоверныхСтрок.Добавить(стр);
			КонецЕсли;
			
			//============================  БЛОК ОБРАБОТКИ ИСКЛЮЧЕНИЙ ПОЗИЦИЙ ИЗ МАТРИЦЫ  =======================
			//Если НЕ стр.ДатаВыводаПозиции = Дата(1,1,1) Тогда
			//	
			//	Если стр.Продажи >= 0 и (ТекущаяДата() - стр.ДатаВыводаПозиции)/86400 >= 90 и стр.Заказать > 0 Тогда
			//		
			//		//ЛОЗ = РегистрыСведений.ЛогОбнуленияЗаказа.СоздатьМенеджерЗаписи();
			//		//ЛОЗ.КодСклада = КодСклада;
			//		//ЛОЗ.КодТовара = стр.Код;
			//		//ЛОЗ.ДатаЗаписи = ТекДата;
			//		//ЛОЗ.ГруппаАП = стр.ГруппаАП;
			//		//ЛОЗ.ДатаВылета = стр.ДатаВыводаПозиции;
			//		//ЛОЗ.ДнейПродаж = стр.ДнейПродаж;
			//		//ЛОЗ.Заказать = стр.Заказать;
			//		//ЛОЗ.Сумма = стр.Сумма;
			//		//ЛОЗ.Продажи = стр.Продажи;
			//		//ЛОЗ.Остаток = стр.Остаток;
			//		//ЛОЗ.СпособОбнуления = "ВЫЛ";
			//		//ЛОЗ.Записать();
			//		//
			//		
			//		стр.Сумма = 0;
			//		стр.Заказать = 0;
			//		
			//	КонецЕсли;
			//КонецЕсли;
			//========================== БЛОК ОБНУЛЕНИЯ ЗАКАЗА ПО ТОВАРАМ ТРЕБУЮЩИМ АВТОРИЗАЦИЮ ====================
			Если стр.ЕстьТоварТребующийАвторизации и стр.ЕстьТоварВШаблоне = Ложь и стр.Заказать > 0 Тогда
				
					//ЛОЗ = РегистрыСведений.ЛогОбнуленияЗаказа.СоздатьМенеджерЗаписи();
					//ЛОЗ.КодСклада = КодСклада;
					//ЛОЗ.КодТовара = стр.Код;
					//ЛОЗ.ДатаЗаписи = ТекДата;
					//ЛОЗ.ГруппаАП = стр.ГруппаАП;
					//ЛОЗ.ДатаВылета = стр.ДатаВыводаПозиции;
					//ЛОЗ.ДнейПродаж = стр.ДнейПродаж;
					//ЛОЗ.Заказать = стр.Заказать;
					//ЛОЗ.Сумма = стр.Сумма;
					//ЛОЗ.Продажи = стр.Продажи;
					//ЛОЗ.Остаток = стр.Остаток;
					//ЛОЗ.СпособОбнуления = "ТТА";
					//ЛОЗ.Записать();
					
					стр.Сумма = 0;
					стр.Заказать = 0;
					
			КонецЕсли;
			
			Если Стр.Заказать > 0 Тогда  //Для того, чтобы далее можно было фильтр наложить на таблицу
				Стр.Заказано = Истина;	
			КонецЕсли;
			
			
			стр.Сумма = стр.Заказать*стр.Цена;
			
	
			
			//стр.ЗаказатьСПривидением =  стр.Заказать;
			//
			//Если стр.Заказать > 0 и НЕ ЗаводскиеПараметрыТовара = Неопределено Тогда
			//	НайденнаяСтрока = ЗаводскиеПараметрыТовара.Найти(стр.Код,"КодТовара");
			//	Если НЕ НайденнаяСтрока = Неопределено Тогда
			//		Если НайденнаяСтрока.КоличествоВКоробе > 0 Тогда
			//			Если стр.Заказать > НайденнаяСтрока.КоличествоВКоробе Тогда
			//				Отклонение = 100*(стр.Заказать - НайденнаяСтрока.КоличествоВКоробе)/НайденнаяСтрока.КоличествоВКоробе;
			//			ИначеЕсли   стр.Заказать < НайденнаяСтрока.КоличествоВКоробе Тогда
			//				Отклонение = 100*( НайденнаяСтрока.КоличествоВКоробе - стр.Заказать)/стр.Заказать;
			//			Иначе
			//				Отклонение = 0;
			//			КонецЕсли;
			//			Если Отклонение <= 30 Тогда
			//				стр.ЗаказатьСПривидением = НайденнаяСтрока.КоличествоВКоробе;
			//			Иначе
			//				Если НайденнаяСтрока.КоличествоВСпайке > 0 Тогда
			//					Если стр.Заказать > НайденнаяСтрока.КоличествоВСпайке Тогда
			//						Отклонение = 100*(стр.Заказать - НайденнаяСтрока.КоличествоВСпайке)/НайденнаяСтрока.КоличествоВСпайке;
			//					ИначеЕсли   стр.Заказать < НайденнаяСтрока.КоличествоВСпайке Тогда
			//						Отклонение = 100*( НайденнаяСтрока.КоличествоВСпайке - стр.Заказать)/стр.Заказать;
			//					Иначе
			//						Отклонение = 0;
			//					КонецЕсли;
			//					
			//					Если Отклонение <= 20 Тогда
			//						стр.ЗаказатьСПривидением = НайденнаяСтрока.КоличествоВСпайке;
			//					КонецЕсли;
			//				КонецЕсли;
			//			КонецЕсли;
			//		КонецЕсли;
			//	КонецЕсли;	
			//КонецЕсли;
		КонецЦикла;
		
		Если ИспользоватьМатрицуНедостоверных Тогда
			Запрос.Текст = "УНИЧТОЖИТЬ МН;";
			Запрос.Выполнить();
			МТ.Закрыть();
		КонецЕсли;
		
		ТЗ.Колонки.Удалить("Подкатегория");
		ТЗ.Колонки.Удалить("МинимальныйЗаказ");
		
		
		Если СписокНедостоверныхСтрок.Количество() > 0 Тогда
			Для Каждого позиция из СписокНедостоверныхСтрок цикл
				ТЗ.Удалить(позиция.Значение);
			КонецЦикла;					
		КонецЕсли;		

		Возврат ТЗ;

	
КонецФункции

Функция РасчетАвтозаказаБезПересчетаСкоростейSAS(Аптека,ПараметрыРасчета) Экспорт	
		

	ОграничениеДляНовыхАптек = ПараметрыРасчета.ОграничениеДляНовыхАптек;
	Поле_Коэфф			= 2;
	Флаг_УчестьРеквизитминимальныйЗаказ = ПараметрыРасчета.Флаг_УчестьРеквизитминимальныйЗаказ;
	УчитыватьКратностьЗаказа = ПараметрыРасчета.УчитыватьКратностьЗаказа;
	ПрименятьКоэффПоНЗ	= Ложь;
	КоэффПоНЗ			= 0;
	//ТекДата				= ПараметрыРасчета.ТекДата;
	УчитыватьНЗ			= ПараметрыРасчета.УчитыватьНЗ;
	ПорогСреднейСкорости			= ПараметрыРасчета.ПорогСреднейСкорости;
	МинимальныйПорогСреднейСкорости = ПараметрыРасчета.МинимальныйПорогСреднейСкорости;	
	
	СубъектРФ = Аптека.СубъектРФ;
	ИспользоватьМатрицуНДнаПлохихСкоростях = Аптека.ИспользоватьМатрицуНДнаПлохихСкоростях;
	

	ТХТ = "ВЫБРАТЬ ПЕРВЫЕ 1
	      |	СохраненныеРасчетыЗаказов.РасчетЗаказа
	      |ИЗ
	      |	РегистрСведений.СохраненныеРасчетыЗаказов КАК СохраненныеРасчетыЗаказов
	      |ГДЕ
	      |	СохраненныеРасчетыЗаказов.Период >= &Период
	      |	И СохраненныеРасчетыЗаказов.Склад = &Склад
	      |	И СохраненныеРасчетыЗаказов.НомерТаймСлота < 2
	      |
	      |УПОРЯДОЧИТЬ ПО
	      |	СохраненныеРасчетыЗаказов.ДатаСозданияЗаписи УБЫВ";
	Запрос = Новый Запрос();
	Запрос.Текст = ТХТ;
	Запрос.УстановитьПараметр("Период",НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Склад",Аптека);
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Неопределено;  //Надо вставить в вызывающей процедуре обработчик на эту ситуацию
	КонецЕсли;
	
	
	Выборка = Рез.Выбрать();
	Выборка.Следующий();
	РасчетЗаказа = Выборка.РасчетЗаказа.Получить();
	
	РасчетЗаказа = РасчетЗаказа.Скопировать(,"КодТовара,СредняяСкорость,Продажи,ДнейПродаж,Dx,Активный");
	
	
	
	
	ЗакрытьТоварыВПути(Аптека,ТекущаяДата());
			
			ТХТ = "ВЫБРАТЬ
			      |	Т.КодТовара КАК КодТовара,
			      |	ЕСТЬNULL(Т.СредняяСкорость, 0) КАК СредняяСкорость,
			      |	ЕСТЬNULL(Т.Продажи, 0) КАК Продажи,
			      |	ЕСТЬNULL(Т.ДнейПродаж, 0) КАК ДнейПродаж,
			      |	ЕСТЬNULL(Т.Dx, 0) КАК Dx,
			      |	Т.Активный КАК Активный
			      |ПОМЕСТИТЬ ВТ1
			      |ИЗ
			      |	&Таб КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	SAS_ПотребностьАптек.ТоварКод КАК КодТовара,
			      |	SAS_ПотребностьАптек.МаксимальныйЗапас КАК МаксимальныйЗапас,
			      |	SAS_ПотребностьАптек.ТочкаЗаказа КАК ТочкаЗаказа
			      |ПОМЕСТИТЬ ДанныеSAS
			      |ИЗ
			      |	РегистрСведений.SAS_ПотребностьАптек КАК SAS_ПотребностьАптек
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			      |			SAS_ПотребностьАптек.СкладКод КАК СкладКод,
			      |			МАКСИМУМ(SAS_ПотребностьАптек.ДатаРасчета) КАК ДатаРасчета
			      |		ИЗ
			      |			РегистрСведений.SAS_ПотребностьАптек КАК SAS_ПотребностьАптек
			      |		ГДЕ
			      |			SAS_ПотребностьАптек.СкладКод = &АптекаКод
			      |		
			      |		СГРУППИРОВАТЬ ПО
			      |			SAS_ПотребностьАптек.СкладКод) КАК Выборка
			      |		ПО (Выборка.СкладКод = SAS_ПотребностьАптек.СкладКод)
			      |			И (Выборка.ДатаРасчета = SAS_ПотребностьАптек.ДатаРасчета)
			      |ГДЕ
			      |	SAS_ПотребностьАптек.СкладКод = &АптекаКод
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И НЕ МатрицаНЗ.ВидНЗ = ЗНАЧЕНИЕ(Перечисление.ВидыНЗ.НЗ_6)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ_4_5
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И МатрицаНЗ.ВидНЗ В(&ВидыНЗ)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	КаталогПрайсЛистов.КодПрайсЛиста КАК КодПрайсЛиста,
			      |	ВЫБОР
			      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика = 0
			      |			ТОГДА 1
			      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика
			      |	КОНЕЦ КАК БазовыйКоэфф
			      |ПОМЕСТИТЬ Параметры
			      |ИЗ
			      |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
			      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
			      |			ПО КонтрактыИНастройки.НастройкаОбмена = КаталогПрайсЛистов.Настройка
			      |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
			      |ГДЕ
			      |	КонтрактыИАптеки.Активность = ИСТИНА
			      |	И КонтрактыИАптеки.Аптека = &Аптека
			      |	И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
			      |	И КонтрактыИАптеки.Владелец.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МИНИМУМ(Прайсы.Цена * Параметры.БазовыйКоэфф) КАК Цена,
			      |	Связки.ТоварФирмы КАК ТоварСсылка
			      |ПОМЕСТИТЬ ТемпЦены
			      |ИЗ
			      |	РегистрСведений.ПрайсЛисты КАК Прайсы
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Параметры КАК Параметры
			      |		ПО Прайсы.КодПрайсЛиста = Параметры.КодПрайсЛиста
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
			      |		ПО (Связки.Поставщик = Прайсы.ПоставщикСвязки)
			      |			И (Связки.КодТовараПоставщика = Прайсы.Код)
			      |ГДЕ
			      |	ВЫБОР
			      |			КОГДА Прайсы.Цена > 0
			      |					И Прайсы.Цена < 50
			      |					И Прайсы.Количество > 800
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 50
			      |					И Прайсы.Цена < 150
			      |					И Прайсы.Количество > 300
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 150
			      |					И Прайсы.Цена < 1000
			      |					И Прайсы.Количество > 50
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 1000
			      |					И Прайсы.Цена < 5000
			      |					И Прайсы.Количество > 10
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 5000
			      |					И Прайсы.Цена < 10000
			      |					И Прайсы.Количество > 5
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 10000
			      |					И Прайсы.Количество > 3
			      |				ТОГДА ИСТИНА
			      |			ИНАЧЕ ЛОЖЬ
			      |		КОНЕЦ = ИСТИНА
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	Связки.ТоварФирмы
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	Связки.ТоварФирмы
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Параметры
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Т.КодТовара КАК КодТовара,
			      |	АП.Ссылка КАК ТоварСсылка,
			      |	Т.Активный КАК Активный,
			      |	Т.СредняяСкорость КАК СредняяСкорость,
			      |	Т.Продажи КАК Продажи,
			      |	Т.ДнейПродаж КАК ДнейПродаж,
			      |	Т.Dx КАК Dx,
			      |	ЕСТЬNULL(ТемпЦены.Цена, 0) КАК Цена,
			      |	0 КАК СуммаЗакуп
			      |ПОМЕСТИТЬ ВТ
			      |ИЗ
			      |	ВТ1 КАК Т
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = Т.КодТовара)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТемпЦены КАК ТемпЦены
			      |		ПО (ТемпЦены.ТоварСсылка = АП.Ссылка)
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ ПартииОстатки.ТоварКод
			      |	КОНЕЦ КАК КодТовара,
			      |	МАКСИМУМ(Партии.ДатаПоступления) КАК МаксДатаПрихода,
			      |	СУММА(ПартииОстатки.КоличествоОстаток / Партии.К) КАК Остаток
			      |ПОМЕСТИТЬ ОстатокНаНачало
			      |ИЗ
			      |	РегистрНакопления.УЗ_Партии.Остатки(, СкладКод = &АптекаКод) КАК ПартииОстатки
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |		ПО (Партии.Код = ПартииОстатки.ПартияКод)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = ПартииОстатки.ТоварКод)
			      |ГДЕ
			      |	ПартииОстатки.КоличествоОстаток > 0
			      |	И Партии.К > 0
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ ПартииОстатки.ТоварКод
			      |	КОНЕЦ
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ ПродажиСменККМ.ТоварКод
			      |	КОНЕЦ КАК КодТовара,
			      |	ВЫРАЗИТЬ(СУММА(ПродажиСменККМ.Количество / Партии.К) КАК ЧИСЛО(12, 0)) КАК Продажа
			      |ПОМЕСТИТЬ ПродажиСегоДня
			      |ИЗ
			      |	РегистрНакопления.УЗ_ПродажиСменККМ КАК ПродажиСменККМ
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |		ПО (Партии.Код = ПродажиСменККМ.ПартияКод)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = ПродажиСменККМ.ТоварКод)
			      |ГДЕ
			      |	ПродажиСменККМ.Период >= &НачДатаСегоДня
			      |	И ПродажиСменККМ.СкладКод = &АптекаКод
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ ПродажиСменККМ.ТоварКод
			      |	КОНЕЦ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	СписаниеТовар.Товар КАК ТоварСсылка,
			      |	ВЫРАЗИТЬ(СУММА(СписаниеТовар.Количество * СписаниеТовар.Коэфф / СписаниеТовар.КоэффициентРазбивки) КАК ЧИСЛО(12, 0)) КАК СписанноеКоличество
			      |ПОМЕСТИТЬ Списания
			      |ИЗ
			      |	Документ.УЗ_Списание.Товар КАК СписаниеТовар
			      |ГДЕ
			      |	СписаниеТовар.Ссылка.Дата > &ДатаТриМесяцаНазад
			      |	И СписаниеТовар.Ссылка.Склад = &Аптека
			      |	И СписаниеТовар.Ссылка.Проведен = ЛОЖЬ
			      |	И СписаниеТовар.Ссылка.ПометкаУдаления = ЛОЖЬ
			      |	И НЕ СписаниеТовар.Ссылка.СтатусДокАптеки = ЗНАЧЕНИЕ(Перечисление.СтатусДокАптеки.Аннулирован)
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	СписаниеТовар.Товар
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВыборкаПути.КодТовара КАК КодТовара,
			      |	СУММА(ВыборкаПути.ВПути) КАК ВПути
			      |ПОМЕСТИТЬ ТоварыВПути
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ВЫБОР
			      |			КОГДА Заказ.Товар.КодОП > 0
			      |				ТОГДА Заказ.Товар.КодОП
			      |			ИНАЧЕ Заказ.Товар.Код
			      |		КОНЕЦ КАК КодТовара,
			      |		Заказ.КоличествоОстаток КАК ВПути
			      |	ИЗ
			      |		РегистрНакопления.ЗаказПоставщику.Остатки(, Склад = &Аптека) КАК Заказ
			      |	ГДЕ
			      |		Заказ.КоличествоОстаток > 0
			      |	
			      |	ОБЪЕДИНИТЬ ВСЕ
			      |	
			      |	ВЫБРАТЬ
			      |		ВЫБОР
			      |			КОГДА АП.КодОП > 0
			      |				ТОГДА АП.КодОП
			      |			ИНАЧЕ ТоварНаПриемке.ТоварКод
			      |		КОНЕЦ,
			      |		ТоварНаПриемке.Количество / ТоварНаПриемке.К
			      |	ИЗ
			      |		РегистрСведений.ТоварНаПриемке КАК ТоварНаПриемке
			      |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |			ПО (АП.Код = ТоварНаПриемке.ТоварКод)
			      |	ГДЕ
			      |		ТоварНаПриемке.СкладКод = &АптекаКод) КАК ВыборкаПути
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВыборкаПути.КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Выборка.КодТовара КАК КодТовара,
			      |	Выборка.ТоварСсылка КАК ТоварСсылка,
			      |	Выборка.ГруппаАП КАК ГруппаАП,
			      |	Выборка.КуМин КАК КуМин,
			      |	Выборка.КуМакс КАК КуМакс,
			      |	Выборка.НЗ КАК НЗ,
			      |	Выборка.Продажи КАК Продажи,
			      |	Выборка.Остаток КАК Остаток,
			      |	ВЫБОР
			      |		КОГДА Выборка.ТочкаЗаказа ЕСТЬ NULL
			      |			ТОГДА 0
			      |		КОГДА (Выборка.Остаток + Выборка.ВПути) <= Выборка.ТочкаЗаказа
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |				И (Выборка.Активный = ИСТИНА
			      |					ИЛИ Выборка.ТоварРазрешен)
			      |			ТОГДА ВЫРАЗИТЬ(Выборка.МаксимальныйЗапас - (Выборка.Остаток + Выборка.ВПути) КАК ЧИСЛО(10, 0))
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Заказать,
			      |	Выборка.ДнейПродаж КАК ДнейПродаж,
			      |	Выборка.ПродажаСегоДня КАК ПродажаСегоДня,
			      |	Выборка.СредняяСкорость КАК СредняяСкорость,
			      |	ВЫБОР
			      |		КОГДА Выборка.Остаток = 0
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |			ТОГДА 1
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Дефектура,
			      |	Выборка.Цена КАК Цена,
			      |	0 КАК Сумма,
			      |	Выборка.ПризнакРекламнойАкции КАК ПризнакРекламнойАкции,
			      |	Выборка.СрокДействияРекламнойАкции КАК СрокДействияРекламнойАкции,
			      |	Выборка.Активный КАК Активный,
			      |	Выборка.ТоварРазрешен КАК ТоварРазрешен,
			      |	Выборка.Dx КАК Dx,
			      |	ВЫБОР
			      |		КОГДА Выборка.Продажи > 0
			      |			ТОГДА ВЫРАЗИТЬ(Выборка.СуммаЗакуп / Выборка.Продажи КАК ЧИСЛО(10, 2))
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ЦенаЗакупПродажи,
			      |	Выборка.МаксДатаПрихода КАК МаксДатаПрихода,
			      |	Выборка.ВПути КАК ВПути
			      |ПОМЕСТИТЬ ИтоговыйЗаказ
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ВТ.КодТовара КАК КодТовара,
			      |		ВТ.ТоварСсылка КАК ТоварСсылка,
			      |		Матрица.ГруппаАПИтог КАК ГруппаАП,
			      |		ВТ.Продажи КАК Продажи,
			      |		ВТ.ДнейПродаж КАК ДнейПродаж,
			      |		ЕСТЬNULL(Матрица.КуМин, 0) КАК КуМин,
			      |		ЕСТЬNULL(Матрица.КуМакс, 0) КАК КуМакс,
			      |		ЕСТЬNULL(ВыборкаНЗ.НЗ, 0) КАК НЗ,
			      |		ВТ.Цена КАК Цена,
			      |		ВЫБОР
			      |			КОГДА ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) - ЕСТЬNULL(ПродажиСегоДня.Продажа, 0) - ЕСТЬNULL(Списания.СписанноеКоличество, 0) < 0
			      |				ТОГДА 0
			      |			ИНАЧЕ ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) - ЕСТЬNULL(ПродажиСегоДня.Продажа, 0) - ЕСТЬNULL(Списания.СписанноеКоличество, 0)
			      |		КОНЕЦ КАК Остаток,
			      |		ЕСТЬNULL(ВТ.СредняяСкорость, 0) КАК СредняяСкорость,
			      |		ЕСТЬNULL(ВыборкаНЗ.РекламнаяАкция, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |		ЕСТЬNULL(ВыборкаНЗ.СрокДействияРекламы, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |		ВТ.Активный КАК Активный,
			      |		ВТ.Dx КАК Dx,
			      |		ВТ.СуммаЗакуп КАК СуммаЗакуп,
			      |		ВЫБОР
			      |			КОГДА РТ.Товар ЕСТЬ NULL
			      |				ТОГДА ЛОЖЬ
			      |			ИНАЧЕ ИСТИНА
			      |		КОНЕЦ КАК ТоварРазрешен,
			      |		ЕСТЬNULL(ПродажиСегоДня.Продажа, 0) КАК ПродажаСегоДня,
			      |		ЕСТЬNULL(ОстатокНаНачало.МаксДатаПрихода, ДАТАВРЕМЯ(1, 1, 1)) КАК МаксДатаПрихода,
			      |		ДанныеSAS.ТочкаЗаказа КАК ТочкаЗаказа,
			      |		ЕСТЬNULL(ДанныеSAS.МаксимальныйЗапас,0) КАК МаксимальныйЗапас,
			      |		ЕСТЬNULL(ТоварыВПути.ВПути, 0) КАК ВПути
			      |	ИЗ
			      |		ВТ КАК ВТ
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ОстатокНаНачало КАК ОстатокНаНачало
			      |			ПО (ОстатокНаНачало.КодТовара = ВТ.КодТовара)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ДанныеSAS КАК ДанныеSAS
			      |			ПО (ДанныеSAS.КодТовара = ВТ.КодТовара)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВПути КАК ТоварыВПути
			      |			ПО (ТоварыВПути.КодТовара = ВТ.КодТовара)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Матрица КАК Матрица
			      |			ПО (Матрица.Аптека = &Аптека)
			      |				И (Матрица.Товар = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ КАК ВыборкаНЗ
			      |			ПО ВТ.ТоварСсылка = ВыборкаНЗ.ТоварСсылка
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ПродажиСегоДня КАК ПродажиСегоДня
			      |			ПО (ПродажиСегоДня.КодТовара = ВТ.КодТовара)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ Списания КАК Списания
			      |			ПО (Списания.ТоварСсылка = ВТ.ТоварСсылка)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазрешенныеТовары КАК РТ
			      |			ПО (РТ.Аптека = &Аптека)
			      |				И (РТ.Товар = ВТ.ТоварСсылка)
			      |				И (&ИспользоватьРазрешенныеТоварыДляЗаказа = ИСТИНА)) КАК Выборка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ИсключенияАвтозаказа.Товар КАК ТоварССылка
			      |ПОМЕСТИТЬ Исключения
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |
			      |ОБЪЕДИНИТЬ
			      |
			      |ВЫБРАТЬ
			      |	ИсключенияАвтозаказа.Товар
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = &Аптека
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ИсторияЗакупки.Товар КАК Товар,
			      |	СРЕДНЕЕ(ИсторияЗакупки.Цена) КАК ЦенаЗакупки
			      |ПОМЕСТИТЬ ВТИсторияЗакупки
			      |ИЗ
			      |	РегистрСведений.ИсторияЗакупочнойЦены КАК ИсторияЗакупки
			      |ГДЕ
			      |	ИсторияЗакупки.СубъектРФ = &СубъектРФ
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ИсторияЗакупки.Товар
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ШаблоныМатрицНЗТовары.Товар КАК Товар,
			      |	ИСТИНА КАК ЕстьТовар
			      |ПОМЕСТИТЬ ТоварвШаблонах
			      |ИЗ
			      |	Справочник.ШаблоныМатрицНЗ.Товары КАК ШаблоныМатрицНЗТовары
			      |ГДЕ
			      |	ШаблоныМатрицНЗТовары.Ссылка В
			      |			(ВЫБРАТЬ
			      |				ШаблоныМатрицНЗПоАптекам.Шаблон
			      |			ИЗ
			      |				РегистрСведений.ШаблоныМатрицНЗПоАптекам КАК ШаблоныМатрицНЗПоАптекам
			      |			ГДЕ
			      |				ШаблоныМатрицНЗПоАптекам.Аптека = &Аптека
			      |				И ШаблоныМатрицНЗПоАптекам.Шаблон.ПометкаУдаления = ЛОЖЬ)
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ИТОГОВЫЙЗАКАЗ.КодТовара КАК КодТовара,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка КАК ТоварСсылка,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование КАК Товар,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.МинимальныйЗаказ КАК МинимальныйЗаказ,
			      |	ИТОГОВЫЙЗАКАЗ.ГруппаАП КАК ГруппаАП,
			      |	ИТОГОВЫЙЗАКАЗ.КуМин КАК КуМин,
			      |	ИТОГОВЫЙЗАКАЗ.КуМакс КАК КуМакс,
			      |	ИТОГОВЫЙЗАКАЗ.НЗ КАК НЗ,
			      |	ИТОГОВЫЙЗАКАЗ.Продажи КАК Продажи,
			      |	ИТОГОВЫЙЗАКАЗ.ВПути КАК ВПути,
			      |	ИТОГОВЫЙЗАКАЗ.Остаток КАК Остаток,
			      |	ВЫБОР
			      |		КОГДА ЕСТЬNULL(неликвиды.КодТовара, 0) > 0
			      |				ИЛИ ИТОГОВЫЙЗАКАЗ.Заказать < 0
			      |			ТОГДА 0
			      |		ИНАЧЕ ИТОГОВЫЙЗАКАЗ.Заказать
			      |	КОНЕЦ КАК Заказать,
			      |	0 КАК Резерв,
			      |	ИТОГОВЫЙЗАКАЗ.ДнейПродаж КАК ДнейПродаж,
			      |	ИТОГОВЫЙЗАКАЗ.ПродажаСегоДня КАК ПродажаСегоДня,
			      |	ИТОГОВЫЙЗАКАЗ.СредняяСкорость КАК СредняяСкорость,
			      |	ИТОГОВЫЙЗАКАЗ.Дефектура КАК Дефектура,
			      |	ИТОГОВЫЙЗАКАЗ.Цена КАК Цена,
			      |	ИТОГОВЫЙЗАКАЗ.Сумма КАК Сумма,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.ПризнакРекламнойАкции, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |	ЕСТЬNULL(ИТОГОВЫЙЗАКАЗ.СрокДействияРекламнойАкции, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |	ИТОГОВЫЙЗАКАЗ.Активный КАК Активный,
			      |	ЕСТЬNULL(ПерестокАптек.Пересток, 0) КАК Пересток,
			      |	ИТОГОВЫЙЗАКАЗ.Dx КАК Dx,
			      |	ЛОЖЬ КАК БылаНедостовернаяПозиция,
			      |	ЛОЖЬ КАК НедостовернаяПозиция,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварРазрешен КАК ТоварРазрешен,
			      |	ВЫБОР
			      |		КОГДА Исключения.ТоварССылка ЕСТЬ NULL
			      |			ТОГДА 0
			      |		ИНАЧЕ 1
			      |	КОНЕЦ КАК Исключение,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Подкатегория КАК Подкатегория,
			      |	ВЫБОР
			      |		КОГДА неликвиды.КодТовара ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК неликвид,
			      |	ВЫБОР
			      |		КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи > 0
			      |				И ЕСТЬNULL(ВТИсторияЗакупки.ЦенаЗакупки, 0) > 100
			      |			ТОГДА ВЫБОР
			      |					КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи > ВТИсторияЗакупки.ЦенаЗакупки
			      |						ТОГДА 100 * (ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи - ВТИсторияЗакупки.ЦенаЗакупки) / ВТИсторияЗакупки.ЦенаЗакупки
			      |					КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи < ВТИсторияЗакупки.ЦенаЗакупки
			      |						ТОГДА 100 * (ВТИсторияЗакупки.ЦенаЗакупки - ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи) / ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи
			      |					ИНАЧЕ 0
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ОтношениеЗакупки,
			      |	ЛОЖЬ КАК Заказано,
			      |	ИТОГОВЫЙЗАКАЗ.МаксДатаПрихода КАК МаксДатаПрихода,
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.ТипДляЦО КАК ТипДляЦО,
			      |	ЕСТЬNULL(ВыводПозицийИзМатрицы.ДатаЗаписи, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВыводаПозиции,
			      |	ЕСТЬNULL(ТоварВШаблонах.ЕстьТовар, ЛОЖЬ) КАК ЕстьТоварВШаблоне,
			      |	ВЫБОР
			      |		КОГДА ТоварТребующийАвторизации.Товар ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК ЕстьТоварТребующийАвторизации,
			      |	ВЫБОР
			      |		КОГДА ВыборкаНЗ_4_5.НЗ ЕСТЬ NULL
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК ЕстьНЗ_4_5,
			      |	ЕСТЬNULL(ВыборкаНЗ_4_5.НЗ, 0) КАК НЗ_4_5
			      |ИЗ
			      |	ИтоговыйЗаказ КАК ИТОГОВЫЙЗАКАЗ
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПерестокАптек КАК ПерестокАптек
			      |		ПО (ПерестокАптек.Аптека = &Аптека)
			      |			И (ПерестокАптек.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Исключения КАК Исключения
			      |		ПО (Исключения.ТоварССылка = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Неликвиды КАК неликвиды
			      |		ПО (неликвиды.Аптека = &Аптека)
			      |			И (неликвиды.КодТовара = ИТОГОВЫЙЗАКАЗ.КодТовара)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсторияЗакупки КАК ВТИсторияЗакупки
			      |		ПО (ВТИсторияЗакупки.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыводПозицийИзМатрицы КАК ВыводПозицийИзМатрицы
			      |		ПО (ВыводПозицийИзМатрицы.Аптека = &Аптека)
			      |			И (ВыводПозицийИзМатрицы.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварвШаблонах КАК ТоварВШаблонах
			      |		ПО (ТоварВШаблонах.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварТребующийАвторизации КАК ТоварТребующийАвторизации
			      |		ПО (ТоварТребующийАвторизации.Товар = ИТОГОВЫЙЗАКАЗ.ТоварСсылка)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ_4_5 КАК ВыборкаНЗ_4_5
			      |		ПО ИТОГОВЫЙЗАКАЗ.ТоварСсылка = ВыборкаНЗ_4_5.ТоварСсылка
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	ИТОГОВЫЙЗАКАЗ.ТоварСсылка.Наименование
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ1
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ_4_5
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТИсторияЗакупки
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ИтоговыйЗаказ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ОстатокНаНачало
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Исключения
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТоварыВПути
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ПродажиСегоДня
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Списания
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ДанныеSAS
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТоварвШаблонах
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТемпЦены
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТ";
				  
	  
				  //|		КОГДА (Выборка.Остаток <= Выборка.КуМин) и (Выборка.ГруппаАП <> ""I"")  
		ТекДата  = ТекущаяДата();
	 	Запрос = Новый Запрос;
		
		//ИсключениеВидаНЗ = Константы.ИсключатьВидНЗ.Получить();
		//Если НЕ ИсключениеВидаНЗ.Пустая() Тогда
		//	ТХТ = СтрЗаменить(ТХТ,"111 = 111", " МатрицаНЗ.ВидНЗ <> &НЗ_Исключение "	);
		//КонецЕсли;
		ВидыНЗ = Новый СписокЗначений;
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_4);
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_5);
		
		Запрос.Текст = ТХТ;
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаОстатка",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("АптекаКод",Аптека.Код);
		Запрос.УстановитьПараметр("СубъектРФ",СубъектРФ);
		Запрос.УстановитьПараметр("ТекущаяДата",ТекДата);
		Запрос.УстановитьПараметр("ДатаТриМесяцаНазад",КонецДня(ТекДата) - 60*60*24*30*2);
		Запрос.УстановитьПараметр("НачДатаСегоДня",НачалоДня(ТекДата));
		Запрос.УстановитьПараметр("КонДатаСегоДня",КонецДня(ТекДата));
		Запрос.УстановитьПараметр("ВидыНЗ",ВидыНЗ);
		Запрос.УстановитьПараметр("ИспользоватьРазрешенныеТоварыДляЗаказа",Константы.ИспользоватьРазрешенныеТоварыДляЗаказа.Получить());

		Запрос.УстановитьПараметр("Таб",РасчетЗаказа);
		ТЗ = Запрос.Выполнить().Выгрузить();	
		
		СписокНедостоверныхСтрок = Новый СписокЗначений;
		ИспользоватьМатрицуНедостоверных = Константы.ИспользоватьМатрицуНедостоверных.Получить(); 
		Если ИспользоватьМатрицуНедостоверных Тогда
			МТ = Новый МенеджерВременныхТаблиц;
			ТХТ = "ВЫБРАТЬ
			      |	МатрицаНедостоверных.ЦенаОт КАК ЦенаОт,
			      |	МатрицаНедостоверных.ЦенаДо,
			      |	МатрицаНедостоверных.ПродажиОт КАК ПродажиОт,
			      |	МатрицаНедостоверных.ПродажиДо,
			      |	МатрицаНедостоверных.ОстатокОт КАК ОстатокОт,
			      |	МатрицаНедостоверных.ОстатокДо,
			      |	МатрицаНедостоверных.ДнейПродажОт КАК ДнейПродажОт,
			      |	МатрицаНедостоверных.ДнейПродажДо,
			      |	МатрицаНедостоверных.Заказать
			      |ПОМЕСТИТЬ МН
			      |ИЗ
			      |	РегистрСведений.МатрицаНедостоверных КАК МатрицаНедостоверных
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ ПЕРВЫЕ 1
			      |	МН.ЦенаОт
			      |ИЗ
			      |	МН КАК МН
			      |;
			      |";

			Запрос.Текст = ТХТ;
			Запрос.МенеджерВременныхТаблиц = МТ;
			Рез = Запрос.Выполнить();
			Если Рез.Пустой() Тогда
				ИспользоватьМатрицуНедостоверных = Ложь;
				Запрос.Текст = "УНИЧТОЖИТЬ МН;";
				Запрос.Выполнить();
				МТ.Закрыть();
			Иначе
				ТХТ = "ВЫБРАТЬ
				|	МН.Заказать
				|ИЗ
				|	МН КАК МН
				|ГДЕ
				|	&Цена >= МН.ЦенаОт И &Цена < МН.ЦенаДо
				|	И &Продажа >= МН.ПродажиОт И &Продажа < МН.ПродажиДо
				|	И &Остаток >= МН.ОстатокОт И &Остаток < МН.ОстатокДо
				|	И &ДнейПродаж >= МН.ДнейПродажОт И &ДнейПродаж < МН.ДнейПродажДо";
				Запрос.Текст = ТХТ;				
			КонецЕсли;
		КонецЕсли;
			
		
		
		спр_АП = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
		Госпитальные = спр_АП.НайтиПоКоду(17);
		Для каждого стр из ТЗ Цикл
			
		
			Если ОграничениеДляНовыхАптек = Истина Тогда
				Если стр.ДнейПродаж < 7 и стр.dx < 1 Тогда
				//Если стр.Продажи <> 0 Тогда
					УдвоенныеПродажи = (стр.Продажи*Поле_Коэфф);  // Исправил 2 на Поле_Коэфф по просьбе Санакоева 02/03/2010
					Если (стр.Заказать > УдвоенныеПродажи) и (стр.НЗ < УдвоенныеПродажи) Тогда
						стр.Заказать = УдвоенныеПродажи;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			
			
			Если Флаг_УчестьРеквизитМинимальныйЗаказ Тогда
				Попытка
					Если (стр.Заказать>0) Тогда
						// Если есть заказ
						//пер_МЗ = спр_АП.НайтиПоКоду(стр.Код).МинимальныйЗаказ;
						Если стр.Заказать<стр.МинимальныйЗаказ Тогда
							// Если Заказ>0 но меньше минимального заказа
							стр.Заказать = стр.МинимальныйЗаказ;
						Иначе
							Если УчитыватьКратностьЗаказа = Истина Тогда
								Если стр.МинимальныйЗаказ > 0 Тогда
									стр.Заказать = Окр(стр.Заказать/стр.МинимальныйЗаказ,0)*стр.МинимальныйЗаказ;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
			
				Исключение
					//Сообщить("Это сообщение только для ИТ! Ничего страшного :) "+ОписаниеОшибки());
					Прервать;
				КонецПопытки;
			КонецЕсли;
			
			Если ПрименятьКоэффПоНЗ = Истина Тогда
				Если стр.Заказать > 0 и стр.НЗ > 0 Тогда
					КоличествоСНЗ = Окр(стр.НЗ/КоэффПоНЗ,0);
					КоличествоСНЗ = ?(КоличествоСНЗ=0,1,КоличествоСНЗ);
					стр.Заказать = Макс(стр.Заказать,КоличествоСНЗ);	
				КонецЕсли;
				

			КонецЕсли;
			
			Если ИспользоватьМатрицуНДнаПлохихСкоростях = Истина Тогда
				Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
					Если  стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" или стр.ГруппаАП = "D" Тогда
						Если стр.НЗ = 0 или (стр.НЗ > 0 и стр.СрокДействияРекламнойАкции < ТекДата и стр.ПризнакРекламнойАкции = Истина) Тогда
							стр.Кумин = 1;
							стр.Кумакс = 1;
							стр.БылаНедостовернаяПозиция = Истина;
							стр.НедостовернаяПозиция = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;			
			
			//Определяем недостоверные позиции 
			Если стр.Заказать > 0 и стр.НедостовернаяПозиция = Ложь и стр.ЕстьНЗ_4_5 = ЛОЖЬ Тогда
				Если стр.ГруппаАП = "A"  или  стр.ГруппаАП = "B" или стр.ГруппаАП = "C" Тогда
					
					Если стр.Кумакс > стр.Продажи*2.5  и стр.Кумакс <> стр.НЗ Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;
					
					//Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 4 и стр.ДнейПродаж <=20 Тогда
					//	стр.Недостовернаяпозиция = Истина;
					//КонецЕсли;

					
					Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 4 и стр.ДнейПродаж <=25 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;
					
					Если стр.Кумакс >= стр.Продажи*2 и стр.Кумин >= 2 и стр.ДнейПродаж <=25 и стр.Цена > 400 Тогда   // Санакоев 24.11.2014 17:37
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;					
					
					
					Если стр.ДнейПродаж < 15 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;
					КонецЕсли;
					
					Если стр.Продажи > 0 и стр.Заказать > 0 и стр.ПризнакРекламнойАкции = Ложь Тогда
						Отношение = стр.Заказать/стр.Продажи;
						Если Отношение > 2 или Отношение < 0.18 Тогда
							стр.БылаНедостовернаяПозиция = Истина;
							стр.Недостовернаяпозиция = Истина;	
						КонецЕсли;
					КонецЕсли;
					
					
					Если стр.Продажи = 1 и стр.НЗ = 0 и  стр.МинимальныйЗаказ = 0 Тогда
						Если  стр.ДнейПродаж > 4 и стр.Заказать > 2 Тогда
							стр.Заказать = 2;
						ИначеЕсли стр.ДнейПродаж < 4 и стр.Заказать > 3 Тогда
							стр.Заказать = 2;
						КонецЕсли;
						
					КонецЕсли;
					
					Если (стр.Остаток+стр.Заказать)/2 > стр.Продажи и стр.ПризнакРекламнойАкции = Ложь  и стр.НЗ = 0
						и (стр.Остаток+стр.Заказать) > 4 Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.Недостовернаяпозиция = Истина;	
					КонецЕсли;
					
				КонецЕсли;  
				
				
				Если стр.НЗ > 4 и стр.НЗ = стр.КуМин  и Стр.НЗ = стр.КуМакс и стр.Заказать = 1 Тогда
					стр.Заказать = Мин(Окр(стр.НЗ/2),2);	
				КонецЕсли;
				
				Если стр.НЗ = стр.КуМин и стр.Заказать < 3 Тогда
				    Если стр.НЗ > 8 и стр.НЗ <= 19 Тогда
						стр.Заказать = Мин(Окр(стр.НЗ/2),2);
					ИначеЕсли стр.НЗ > 19  Тогда
						стр.Заказать = 0;
					КонецЕсли;
				КонецЕсли;

				
				Если стр.Подкатегория = Госпитальные Тогда
					стр.БылаНедостовернаяПозиция = Истина;
					стр.НедостовернаяПозиция = Истина;
				КонецЕсли;
				
				Если стр.НедостовернаяПозиция = Истина и стр.НЗ > 0 и стр.Цена > 0 и стр.НЗ >= стр.Заказать Тогда //доп.тз Санакоева 03.06.2014
					Если ( стр.ПризнакРекламнойАкции = Ложь )  
						или ( стр.СрокДействияРекламнойАкции >= ТекДата и стр.ПризнакРекламнойАкции = Истина ) Тогда
						стр.БылаНедостовернаяПозиция = Истина;
						стр.НедостовернаяПозиция = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				
				Если НЕ ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
					Если стр.НедостовернаяПозиция = Истина Тогда
						Если ИспользоватьМатрицуНедостоверных Тогда
							Запрос.УстановитьПараметр("Цена",стр.Цена);
							Запрос.УстановитьПараметр("Продажа",стр.Продажи);
							Запрос.УстановитьПараметр("Остаток",стр.Остаток);
							Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
							Рез = Запрос.Выполнить();
							Если НЕ Рез.Пустой() Тогда
								Выборка = Рез.Выбрать();
								Выборка.Следующий();
								Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
									стр.Заказать = стр.МинимальныйЗаказ;
								Иначе
									стр.Заказать = Выборка.Заказать;
								КонецЕсли;
								стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
								//если хотя бы по одному условию матрицы недостоверности позиция прошла
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;                                                            
				КонецЕсли;
				

				
				Если стр.НЗ > 10 и стр.Заказать < 20 Тогда   // ПО ТЗ Санакоева от 03.07.2014
					Если стр.Остаток > 0 Тогда
						Если стр.НЗ/стр.Остаток < 1.6 Тогда
							стр.Заказать = 0;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
				
				
				стр.Сумма = стр.Заказать*стр.Цена;

			КонецЕсли;
			
			//Если стр.ЕстьНЗ_4_5 Тогда
			//	Если стр.Заказать/2 > Макс(стр.НЗ_4_5, стр.Продажи) Тогда
			//		стр.Заказать = Макс(стр.НЗ_4_5, стр.Продажи);	
			//		стр.Сумма = стр.Заказать*стр.Цена;
			//	КонецЕсли;
			//КонецЕсли;
			
			
			Если ИспользоватьМатрицуНДнаПлохихСкоростях Тогда
				Если стр.НедостовернаяПозиция = Истина Тогда
					Если ИспользоватьМатрицуНедостоверных Тогда
						Запрос.УстановитьПараметр("Цена",стр.Цена);
						Запрос.УстановитьПараметр("Продажа",стр.Продажи);
						Запрос.УстановитьПараметр("Остаток",стр.Остаток);
						Запрос.УстановитьПараметр("ДнейПродаж",стр.ДнейПродаж);
						Рез = Запрос.Выполнить();
						Если НЕ Рез.Пустой() Тогда
							Выборка = Рез.Выбрать();
							Выборка.Следующий();
							Если стр.СредняяСкорость <= ПорогСреднейСкорости и стр.СредняяСкорость >=МинимальныйПорогСреднейСкорости Тогда
								Если стр.НЗ > 0 Тогда
									стр.Заказать = Макс(стр.МинимальныйЗаказ,стр.НЗ-стр.Остаток-стр.ВПути,Выборка.Заказать);
								ИначеЕсли Выборка.Заказать > 0 Тогда
									стр.Заказать = Макс(стр.МинимальныйЗаказ,Выборка.Заказать);
								КонецЕсли;
							Иначе
								Если Выборка.Заказать > 0 и Выборка.Заказать < стр.МинимальныйЗаказ Тогда
									стр.Заказать = стр.МинимальныйЗаказ;
								Иначе
									стр.Заказать = Выборка.Заказать;
								КонецЕсли;
							КонецЕсли;
							стр.НедостовернаяПозиция = Ложь; //По последнему ТЗ Санакоева снимаем недостоверность,
							//если хотя бы по одному условию матрицы недостоверности позиция прошла
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;			
			КонецЕсли;			
			
			Если стр.ОтношениеЗакупки > 100 Тогда
				стр.НедостовернаяПозиция = Истина;
			КонецЕсли;	
			
			Если стр.ДнейПродаж <= 23 и стр.МаксДатаПрихода >= (НачалоДня(ТекДата) - 48*60*60) Тогда
				стр.Заказать = 0;
			КонецЕсли;
			
			стр.Заказать = Окр(стр.Заказать,0);
			
			Если стр.НедостовернаяПозиция = Истина Тогда
				СписокНедостоверныхСтрок.Добавить(стр);
			КонецЕсли;
			
			//============================  БЛОК ОБРАБОТКИ ИСКЛЮЧЕНИЙ ПОЗИЦИЙ ИЗ МАТРИЦЫ  =======================
			//Если НЕ стр.ДатаВыводаПозиции = Дата(1,1,1) Тогда
			//	
			//	Если стр.Продажи >= 0 и (ТекущаяДата() - стр.ДатаВыводаПозиции)/86400 >= 90 и стр.Заказать > 0 Тогда
			//		
			//		//ЛОЗ = РегистрыСведений.ЛогОбнуленияЗаказа.СоздатьМенеджерЗаписи();
			//		//ЛОЗ.КодСклада = КодСклада;
			//		//ЛОЗ.КодТовара = стр.Код;
			//		//ЛОЗ.ДатаЗаписи = ТекДата;
			//		//ЛОЗ.ГруппаАП = стр.ГруппаАП;
			//		//ЛОЗ.ДатаВылета = стр.ДатаВыводаПозиции;
			//		//ЛОЗ.ДнейПродаж = стр.ДнейПродаж;
			//		//ЛОЗ.Заказать = стр.Заказать;
			//		//ЛОЗ.Сумма = стр.Сумма;
			//		//ЛОЗ.Продажи = стр.Продажи;
			//		//ЛОЗ.Остаток = стр.Остаток;
			//		//ЛОЗ.СпособОбнуления = "ВЫЛ";
			//		//ЛОЗ.Записать();
			//		//
			//		
			//		стр.Сумма = 0;
			//		стр.Заказать = 0;
			//		
			//	КонецЕсли;
			//КонецЕсли;
			//========================== БЛОК ОБНУЛЕНИЯ ЗАКАЗА ПО ТОВАРАМ ТРЕБУЮЩИМ АВТОРИЗАЦИЮ ====================
			Если стр.ЕстьТоварТребующийАвторизации и стр.ЕстьТоварВШаблоне = Ложь и стр.Заказать > 0 Тогда
				
					//ЛОЗ = РегистрыСведений.ЛогОбнуленияЗаказа.СоздатьМенеджерЗаписи();
					//ЛОЗ.КодСклада = КодСклада;
					//ЛОЗ.КодТовара = стр.Код;
					//ЛОЗ.ДатаЗаписи = ТекДата;
					//ЛОЗ.ГруппаАП = стр.ГруппаАП;
					//ЛОЗ.ДатаВылета = стр.ДатаВыводаПозиции;
					//ЛОЗ.ДнейПродаж = стр.ДнейПродаж;
					//ЛОЗ.Заказать = стр.Заказать;
					//ЛОЗ.Сумма = стр.Сумма;
					//ЛОЗ.Продажи = стр.Продажи;
					//ЛОЗ.Остаток = стр.Остаток;
					//ЛОЗ.СпособОбнуления = "ТТА";
					//ЛОЗ.Записать();
					
					стр.Сумма = 0;
					стр.Заказать = 0;
					
			КонецЕсли;
			
			Если Стр.Заказать > 0 Тогда  //Для того, чтобы далее можно было фильтр наложить на таблицу
				Стр.Заказано = Истина;	
			КонецЕсли;
			
			
			стр.Сумма = стр.Заказать*стр.Цена;
			
	
			
			//стр.ЗаказатьСПривидением =  стр.Заказать;
			//
			//Если стр.Заказать > 0 и НЕ ЗаводскиеПараметрыТовара = Неопределено Тогда
			//	НайденнаяСтрока = ЗаводскиеПараметрыТовара.Найти(стр.Код,"КодТовара");
			//	Если НЕ НайденнаяСтрока = Неопределено Тогда
			//		Если НайденнаяСтрока.КоличествоВКоробе > 0 Тогда
			//			Если стр.Заказать > НайденнаяСтрока.КоличествоВКоробе Тогда
			//				Отклонение = 100*(стр.Заказать - НайденнаяСтрока.КоличествоВКоробе)/НайденнаяСтрока.КоличествоВКоробе;
			//			ИначеЕсли   стр.Заказать < НайденнаяСтрока.КоличествоВКоробе Тогда
			//				Отклонение = 100*( НайденнаяСтрока.КоличествоВКоробе - стр.Заказать)/стр.Заказать;
			//			Иначе
			//				Отклонение = 0;
			//			КонецЕсли;
			//			Если Отклонение <= 30 Тогда
			//				стр.ЗаказатьСПривидением = НайденнаяСтрока.КоличествоВКоробе;
			//			Иначе
			//				Если НайденнаяСтрока.КоличествоВСпайке > 0 Тогда
			//					Если стр.Заказать > НайденнаяСтрока.КоличествоВСпайке Тогда
			//						Отклонение = 100*(стр.Заказать - НайденнаяСтрока.КоличествоВСпайке)/НайденнаяСтрока.КоличествоВСпайке;
			//					ИначеЕсли   стр.Заказать < НайденнаяСтрока.КоличествоВСпайке Тогда
			//						Отклонение = 100*( НайденнаяСтрока.КоличествоВСпайке - стр.Заказать)/стр.Заказать;
			//					Иначе
			//						Отклонение = 0;
			//					КонецЕсли;
			//					
			//					Если Отклонение <= 20 Тогда
			//						стр.ЗаказатьСПривидением = НайденнаяСтрока.КоличествоВСпайке;
			//					КонецЕсли;
			//				КонецЕсли;
			//			КонецЕсли;
			//		КонецЕсли;
			//	КонецЕсли;	
			//КонецЕсли;
		КонецЦикла;
		
		Если ИспользоватьМатрицуНедостоверных Тогда
			Запрос.Текст = "УНИЧТОЖИТЬ МН;";
			Запрос.Выполнить();
			МТ.Закрыть();
		КонецЕсли;
		
		ТЗ.Колонки.Удалить("Подкатегория");
		ТЗ.Колонки.Удалить("МинимальныйЗаказ");
		
		
		Если СписокНедостоверныхСтрок.Количество() > 0 Тогда
			Для Каждого позиция из СписокНедостоверныхСтрок цикл
				ТЗ.Удалить(позиция.Значение);
			КонецЦикла;					
		КонецЕсли;		

		Возврат ТЗ;

	
КонецФункции


Функция РасчетАвтозаказаТолькоПоМатрице(Аптека,ПараметрыРасчета,ЗаводскиеПараметрыТовара = Неопределено) Экспорт	
		


	//КоэффициентЗаказаA	= ПараметрыРасчета.КоэффициентЗаказаA;
	//КоэффициентЗаказаB	= ПараметрыРасчета.КоэффициентЗаказаB;
	//КоэффициентЗаказаC	= ПараметрыРасчета.КоэффициентЗаказаC;
	//КоэффициентЗаказаD	= ПараметрыРасчета.КоэффициентЗаказаD;
	ОграничениеДляНовыхАптек = ПараметрыРасчета.ОграничениеДляНовыхАптек;
	Поле_Коэфф			= 2;
	Флаг_УчестьРеквизитминимальныйЗаказ = ПараметрыРасчета.Флаг_УчестьРеквизитминимальныйЗаказ;
	УчитыватьКратностьЗаказа = ПараметрыРасчета.УчитыватьКратностьЗаказа;
	ПрименятьКоэффПоНЗ	= Ложь;
	КоэффПоНЗ			= 0;
	//ТекДата				= ПараметрыРасчета.ТекДата;
	УчитыватьНЗ			= ПараметрыРасчета.УчитыватьНЗ;

	ДатаРасчета = НачалоДня(ТекущаяДата());
	КодСклада = Аптека.Код;

	ТЗДляТоргов = Новый ТаблицаЗначений;
	ТЗДляТоргов.Колонки.Добавить("ДатаРасчета");
	ТЗДляТоргов.Колонки.Добавить("КодСклада");
	ТЗДляТоргов.Колонки.Добавить("КодТовара");
	ТЗДляТоргов.Колонки.Добавить("ВПути");
	ТЗДляТоргов.Колонки.Добавить("Остаток");
	ТЗДляТоргов.Колонки.Добавить("НЗ");
	ТЗДляТоргов.Колонки.Добавить("Продажи");
	ТЗДляТоргов.Колонки.Добавить("Потребность");
	ТЗДляТоргов.Колонки.Добавить("ПотребностьОтКуМакс2");
	ТЗДляТоргов.Колонки.Добавить("Коробов");
	ТЗДляТоргов.Колонки.Добавить("ГруппаАП");

	
	
	ЗакрытьТоварыВПути(Аптека,ТекущаяДата());
			
			ТХТ = "ВЫБРАТЬ
			      |	ПродажиСменККМ.ТоварКод КАК КодТовара,
			      |	ВЫРАЗИТЬ(СУММА(ПродажиСменККМ.Количество / Партии.К) КАК ЧИСЛО(12, 0)) КАК Продажи,
			      |	СУММА(Выразить(ПродажиСменККМ.СуммаЗакупБезНДС*(1+ПродажиСменККМ.СтавкаНДСЗакуп/100) как Число(15,2))) КАК СуммаЗакуп
			      |ПОМЕСТИТЬ ПродажиСмен
			      |ИЗ
			      |	РегистрНакопления.УЗ_ПродажиСменККМ КАК ПродажиСменККМ
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |		ПО (Партии.Код = ПродажиСменККМ.ПартияКод)
			      |ГДЕ
			      |	ПродажиСменККМ.Период >= &НачПериода
			      |	И ПродажиСменККМ.СкладКод = &АптекаКод
				  |	И НЕ Партии.ТипПартии = ""I""
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ПродажиСменККМ.ТоварКод
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	РеализацияККМ.ТоварКод КАК КодТовара,
			      |	ВЫРАЗИТЬ(СУММА(РеализацияККМ.КоличествоОборот / Партии.К) КАК ЧИСЛО(12, 0)) КАК Продажи,
			      |	СУММА(РеализацияККМ.СуммаЗакупСНДСОборот) КАК СуммаЗакуп
			      |ПОМЕСТИТЬ УЗ_Реализации
			      |ИЗ
			      |	РегистрНакопления.УЗ_РеализацииККМ.Обороты(&НачПериода, , , СкладКод = &АптекаКод) КАК РеализацияККМ
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |		ПО (Партии.Код = РеализацияККМ.ПартияКод)
			      |
				  |ГДЕ НЕ Партии.ТипПартии = ""I""
			      |СГРУППИРОВАТЬ ПО
			      |	РеализацияККМ.ТоварКод
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Выборка.Код,
			      |	СУММА(Выборка.Продажа) КАК Продажа,
			      |	СУММА(Выборка.СуммаЗакуп) КАК СуммаЗакуп
			      |ПОМЕСТИТЬ ВТПРодажи
			      |ИЗ
			      |	(
				  |	
			      |	ВЫБРАТЬ
			      |		ПродажиСмен.КодТовара как Код,
			      |		ПродажиСмен.Продажи как Продажа,
			      |		ПродажиСмен.СуммаЗакуп
			      |	ИЗ
			      |		ПродажиСмен КАК ПродажиСмен
			      |	
			      |	ОБЪЕДИНИТЬ ВСЕ
			      |	
			      |	ВЫБРАТЬ
			      |		УЗ_Реализации.КодТовара,
			      |		УЗ_Реализации.Продажи,
			      |		УЗ_Реализации.СуммаЗакуп
			      |	ИЗ
			      |		УЗ_Реализации КАК УЗ_Реализации) КАК Выборка
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	Выборка.Код
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	Выборка.Код
			      |;
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар КАК ТоварСсылка,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И НЕ МатрицаНЗ.ВидНЗ = ЗНАЧЕНИЕ(Перечисление.ВидыНЗ.НЗ_6)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ТоварСсылка
			      |;
			      |
			      |ВЫБРАТЬ
			      |	МатрицаНЗ.Товар.Код КАК Кодтовара,
			      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ,
			      |	МАКСИМУМ(МатрицаНЗ.РекламнаяАкция) КАК РекламнаяАкция,
			      |	МАКСИМУМ(МатрицаНЗ.СрокДействияРекламы) КАК СрокДействияРекламы
			      |ПОМЕСТИТЬ ВыборкаНЗ_4_5
			      |ИЗ
			      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
			      |ГДЕ
			      |	МатрицаНЗ.Аптека = &Аптека
			      |	И МатрицаНЗ.ВидНЗ В (&ВидыНЗ)
			      |	И &ТекущаяДата МЕЖДУ МатрицаНЗ.ДатаНачалаАкции И МатрицаНЗ.СрокДействияРекламы
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	МатрицаНЗ.Товар.Код
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
				  |	Матрица.Товар как ТоварСсылка,
			      |	Матрица.Товар.Код КАК Код,
			      |	Матрица.ГруппаАПИтог,
			      |	Матрица.КуМин,
			      |	Матрица.КуМакс,
			      |	Матрица.Товар.УчаствуетВАП КАК Активный
			      |ПОМЕСТИТЬ ВТМатрица
			      |ИЗ
			      |	РегистрСведений.Матрица КАК Матрица
			      |ГДЕ
			      |	Матрица.Аптека = &Аптека
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	Матрица.Товар.Код
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Связки.ТоварФирмы.Код КАК Код,
			      |	МИНИМУМ(Прайсы.Цена) КАК Цена
			      |ПОМЕСТИТЬ ВТЦены
			      |ИЗ
			      |	Справочник.СвязкиТовараСПоставщиком КАК Связки
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Прайсы КАК Прайсы
			      |		ПО Связки.Поставщик = Прайсы.Поставщик
			      |			И Связки.КодТовараПоставщика = Прайсы.Код
			      |ГДЕ
			      |	Связки.Поставщик.ОсуществляетПрямыеПоставки = ИСТИНА
			      |	И Связки.Блокировка = ЛОЖЬ
			      |	И ВЫБОР
			      |			КОГДА Прайсы.Цена > 0
			      |					И Прайсы.Цена < 50
			      |					И Прайсы.Количество > 1000
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 50
			      |					И Прайсы.Цена < 150
			      |					И Прайсы.Количество > 500
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 150
			      |					И Прайсы.Цена < 1000
			      |					И Прайсы.Количество > 100
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 1000
			      |					И Прайсы.Цена < 5000
			      |					И Прайсы.Количество > 20
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 5000
			      |					И Прайсы.Цена < 10000
			      |					И Прайсы.Количество > 10
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 10000
			      |					И Прайсы.Количество > 5
			      |				ТОГДА ИСТИНА
			      |			ИНАЧЕ ЛОЖЬ
			      |		КОНЕЦ = ИСТИНА
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	Связки.ТоварФирмы.Код
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	Код
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ПартииОстатки.ТоварКод КАК Код,
			      |	СУММА(ПартииОстатки.КоличествоОстаток / Партии.К) КАК Остаток
			      |ПОМЕСТИТЬ ОстатокНаНачало
			      |ИЗ
			      |	РегистрНакопления.УЗ_Партии.Остатки(, СкладКод = &АптекаКод) КАК ПартииОстатки
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |		ПО (Партии.Код = ПартииОстатки.ПартияКод)
			      |ГДЕ
			      |	ПартииОстатки.КоличествоОстаток / Партии.К > 0
			      |	И Партии.К > 0
				  | И НЕ Партии.ТипПартии = ""I""
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ПартииОстатки.ТоварКод
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
			      |	Выборка.Код,
			      |	Выборка.ГруппаАП,
			      |	Выборка.КуМин,
			      |	Выборка.КуМакс,
			      |	Выборка.НЗ,
			      |	Выборка.Продажи,
			      |	Выборка.Остаток,
			      |	ВЫБОР
			      |		КОГДА (Выборка.Остаток <= Выборка.КуМин или Выборка.Остаток <= Выборка.НЗ )
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |				И Выборка.Активный = ИСТИНА
			      |			ТОГДА ВЫБОР
			      |					КОГДА Выборка.Остаток > Выборка.СредняяСкорость
			      |						ТОГДА ВЫРАЗИТЬ(Выборка.КуМакс - (Выборка.Остаток - Выборка.СредняяСкорость) КАК ЧИСЛО(10, 0))
			      |					ИНАЧЕ Выборка.КуМакс
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Заказать,
			      |	Выборка.ДнейПродаж,
			      |	Выборка.СредняяСкорость,
			      |	ВЫБОР
			      |		КОГДА Выборка.Остаток = 0
			      |				И Выборка.ГруппаАП ПОДОБНО ""[ABCD]""
			      |			ТОГДА 1
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК Дефектура,
			      |	Выборка.Цена,
			      |	0 КАК Сумма,
			      |	Выборка.ПризнакРекламнойАкции,
			      |	Выборка.СрокДействияРекламнойАкции,
			      |	Выборка.Активный,
			      |	Выборка.Dx,
			      |	ВЫБОР
			      |		КОГДА Выборка.Продажи > 0
			      |			ТОГДА ВЫРАЗИТЬ(Выборка.СуммаЗакуп / Выборка.Продажи КАК ЧИСЛО(10, 2))
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ЦенаЗакупПродажи
			      |ПОМЕСТИТЬ ИтоговыйЗаказ
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ВТМатрица.Код КАК Код,
			      |		ВТМатрица.ГруппаАПИтог КАК ГруппаАП,
			      |		ВТПродажи.Продажа КАК Продажи,
			      |		0 КАК ДнейПродаж,
			      |		ЕСТЬNULL(ВТМатрица.КуМин, 0) КАК КуМин,
			      |		ЕСТЬNULL(ВТМатрица.КуМакс, 0) КАК КуМакс,
				  |		ЕСТЬNULL(ВыборкаНЗ.НЗ, 0) КАК НЗ,
			      |		ЕСТЬNULL(ВТЦены.Цена, 0) КАК Цена,
			      |		ЕСТЬNULL(ОстатокНаНачало.Остаток, 0) КАК Остаток,
			      |		0 КАК СредняяСкорость,
			      |		ЕСТЬNULL(ВыборкаНЗ.РекламнаяАкция, ЛОЖЬ) КАК ПризнакРекламнойАкции,
			      |		ЕСТЬNULL(ВыборкаНЗ.СрокДействияРекламы, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияРекламнойАкции,
			      |		ВТМатрица.Активный КАК Активный,
			      |		0 КАК Dx,
			      |		ЕСТЬNULL(ВТПродажи.СуммаЗакуп, 0) КАК СуммаЗакуп
			      |	ИЗ
			      |		ВТМатрица КАК ВТМатрица
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ОстатокНаНачало КАК ОстатокНаНачало
			      |			ПО (ОстатокНаНачало.Код = ВТМатрица.Код)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВТПРодажи КАК ВТПродажи
			      |			ПО (ВТПродажи.Код = ВТМатрица.Код)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВТЦены КАК ВТЦены
			      |			ПО (ВТЦены.Код = ВТМатрица.Код)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ КАК ВыборкаНЗ
			      |			ПО ВТМатрица.ТоварСсылка = ВыборкаНЗ.ТоварСсылка) КАК Выборка
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	ИсключенияАвтозаказа.Товар.Код КАК КодТовара
			      |ПОМЕСТИТЬ Исключения
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |
			      |ОБЪЕДИНИТЬ
			      |
			      |ВЫБРАТЬ
			      |	ИсключенияАвтозаказа.Товар.Код
			      |ИЗ
			      |	РегистрСведений.ИсключенияАвтозаказа КАК ИсключенияАвтозаказа
			      |ГДЕ
			      |	ИсключенияАвтозаказа.Склад = &Аптека
			      |	И ИсключенияАвтозаказа.СубъектРФ = &СубъектРФ
			      |	И &ТекущаяДата МЕЖДУ ИсключенияАвтозаказа.ДатаНачала И ИсключенияАвтозаказа.ДатаОкончания
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВыборкаПути.Код,
			      |	СУММА(ВыборкаПути.ВПути) КАК ВПути
			      |ПОМЕСТИТЬ ТоварыВПути
			      |ИЗ
			      |	(ВЫБРАТЬ
			      |		ЗаказПоставщикуОстатки.Товар.Код КАК Код,
			      |		ЗаказПоставщикуОстатки.КоличествоОстаток КАК ВПути
			      |	ИЗ
			      |		РегистрНакопления.ЗаказПоставщику.Остатки(, Склад = &Аптека) КАК ЗаказПоставщикуОстатки
			      |	ГДЕ
			      |		ЗаказПоставщикуОстатки.КоличествоОстаток > 0
			      |	
			      |	ОБЪЕДИНИТЬ ВСЕ
			      |	
			      |	ВЫБРАТЬ
			      |		ТоварНаПриемке.ТоварКод,
			      |		ТоварНаПриемке.Количество / ТоварНаПриемке.К
			      |	ИЗ
			      |		РегистрСведений.ТоварНаПриемке КАК ТоварНаПриемке
			      |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |			ПО (Партии.Код = ТоварНаПриемке.ПартияКод)				  
			      |	ГДЕ
			      |		ТоварНаПриемке.СкладКод = &АптекаКод И НЕ Партии.ТипПартии = ""I"") КАК ВыборкаПути
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВыборкаПути.Код
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ИсторияЗакупки.Товар.Код КАК КодТовара,
			      |	СРЕДНЕЕ(ИсторияЗакупки.Цена) КАК ЦенаЗакупки
			      |ПОМЕСТИТЬ ВТИсторияЗакупки
			      |ИЗ
			      |	РегистрСведений.ИсторияЗакупочнойЦены КАК ИсторияЗакупки
			      |ГДЕ
			      |	ИсторияЗакупки.СубъектРФ = &СубъектРФ
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ИсторияЗакупки.Товар.Код
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
			      |	ИТОГОВЫЙЗАКАЗ.Код как КодТовара,
			      |	АП.Наименование КАК Товар,
			      |	АП.МинимальныйЗаказ КАК МинимальныйЗаказ,
			      |	ИТОГОВЫЙЗАКАЗ.ГруппаАП,
			      |	ИТОГОВЫЙЗАКАЗ.КуМин,
			      |	ИТОГОВЫЙЗАКАЗ.КуМакс,
			      |	ИТОГОВЫЙЗАКАЗ.НЗ,
			      |	ИТОГОВЫЙЗАКАЗ.Продажи,
			      |	ЕСТЬNULL(ТоварыВПути.ВПути, 0) КАК ВПути,
			      |	ИТОГОВЫЙЗАКАЗ.Остаток,
			      |	ВЫБОР
			      |		КОГДА 
			      |				 ЕСТЬNULL(неликвиды.КодТовара, 0) > 0  или ЕСТЬNULL(ТоварыВПути.ВПути, 0) > 0
			      |				
			      |			ТОГДА 0
			      |		ИНАЧЕ ИТОГОВЫЙЗАКАЗ.Заказать 
			      |	КОНЕЦ КАК Заказать,
			      |	ВЫБОР
			      |		КОГДА 
				  |				 ЕСТЬNULL(неликвиды.КодТовара, 0) > 0
			      |			ТОГДА ИСТИНА
			      |		ИНАЧЕ ЛОЖЬ
			      |	КОНЕЦ КАК НеЗаказывать,
			      |	0 КАК Резерв,
			      |	ИТОГОВЫЙЗАКАЗ.ДнейПродаж,
			      |	ИТОГОВЫЙЗАКАЗ.СредняяСкорость,
			      |	ИТОГОВЫЙЗАКАЗ.Дефектура,
			      |	ИТОГОВЫЙЗАКАЗ.Цена,
			      |	ИТОГОВЫЙЗАКАЗ.Сумма,
			      |	ИТОГОВЫЙЗАКАЗ.ПризнакРекламнойАкции,
			      |	ИТОГОВЫЙЗАКАЗ.СрокДействияРекламнойАкции,
			      |	ИТОГОВЫЙЗАКАЗ.Активный,
			      |	ЕСТЬNULL(ПерестокАптек.Пересток, 0) КАК Пересток,
			      |	ИТОГОВЫЙЗАКАЗ.Dx,
			      |	ЛОЖЬ КАК НедостовернаяПозиция,
			      |	ЕСТЬNULL(Исключения.КодТовара, 0) КАК Исключение,
			      |	АП.Подкатегория КАК Подкатегория,
			      |	ВЫБОР
			      |		КОГДА неликвиды.КодТовара ЕСТЬ NULL 
			      |			ТОГДА ЛОЖЬ
			      |		ИНАЧЕ ИСТИНА
			      |	КОНЕЦ КАК неликвид,
			      |	ВЫБОР
			      |		КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи > 0
			      |				И ЕСТЬNULL(ВТИсторияЗакупки.ЦенаЗакупки, 0) > 100
			      |			ТОГДА ВЫБОР
			      |					КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи > ВТИсторияЗакупки.ЦенаЗакупки
			      |						ТОГДА 100 * (ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи - ВТИсторияЗакупки.ЦенаЗакупки) / ВТИсторияЗакупки.ЦенаЗакупки
			      |					КОГДА ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи < ВТИсторияЗакупки.ЦенаЗакупки
			      |						ТОГДА 100 * (ВТИсторияЗакупки.ЦенаЗакупки - ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи) / ИТОГОВЫЙЗАКАЗ.ЦенаЗакупПродажи
			      |					ИНАЧЕ 0
			      |				КОНЕЦ
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ОтношениеЗакупки,
			      |	АП.ТипДляЦО,
			      |	0 КАК ЗаказатьДоПривидения,
			      |	0 КАК КоличествоВСпайке,
			      |	0 КАК КоличествоВКоробе,
			      |	0 КАК Коробов ,
			  	  |Выбор когда ВыборкаНЗ_4_5.НЗ есть NULL Тогда Ложь ИНАЧЕ Истина КОНЕЦ КАК ЕстьНЗ_4_5 , 
				  |ЕСТЬNULL(ВыборкаНЗ_4_5.НЗ,0) как НЗ_4_5
			      |ИЗ
			      |	ИтоговыйЗаказ КАК ИТОГОВЫЙЗАКАЗ
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВПути КАК ТоварыВПути
			      |		ПО (ТоварыВПути.Код = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПерестокАптек КАК ПерестокАптек
			      |		ПО (ПерестокАптек.Аптека = &Аптека)
			      |			И (ПерестокАптек.Товар.Код = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Исключения КАК Исключения
			      |		ПО (Исключения.КодТовара = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Неликвиды КАК неликвиды
			      |		ПО (неликвиды.Аптека = &Аптека)
			      |			И (неликвиды.КодТовара = ИТОГОВЫЙЗАКАЗ.Код)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсторияЗакупки КАК ВТИсторияЗакупки
			      |		ПО (ВТИсторияЗакупки.КодТовара = ИТОГОВЫЙЗАКАЗ.Код)
			      |			ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаНЗ_4_5 КАК ВыборкаНЗ_4_5
			      |			ПО ИТОГОВЫЙЗАКАЗ.Код = ВыборкаНЗ_4_5.КодТовара				  
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	АП.Наименование
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТМатрица
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ_4_5
			      |;
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВыборкаНЗ
			      |;				  
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТЦены
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТИсторияЗакупки
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТПродажи
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ИтоговыйЗаказ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ОстатокНаНачало
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТоварыВПути
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Исключения";
			
				  
	  
				  //|		КОГДА (Выборка.Остаток <= Выборка.КуМин) и (Выборка.ГруппаАП <> ""I"")  
				  
		ВидыНЗ = Новый СписокЗначений;
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_4);
		ВидыНЗ.Добавить(Перечисления.ВидыНЗ.НЗ_5);
				  
	 	Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаОстатка",КонецДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("АптекаКод",Аптека.Код);
		Запрос.УстановитьПараметр("ВидыНЗ",ВидыНЗ);
		Запрос.УстановитьПараметр("СубъектРФ",Аптека.СубъектРФ);
		Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
		Запрос.УстановитьПараметр("НачПериода",ТекущаяДата()-24*60*60*28);
		Запрос.УстановитьПараметр("КонПериода",КонецДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("НеУчитыватьТоварВПутиПриРасчетеЗаказа",Константы.НеУчитыватьТоварВПутиПриРасчетеЗаказа.Получить());
		
		ТЗ = Запрос.Выполнить().Выгрузить();	
		
			
		
		//Если КоэффициентЗаказаA = 1 и КоэффициентЗаказаB = 1 и КоэффициентЗаказаC = 1 и КоэффициентЗаказаD = 1 Тогда
		//Иначе
		//	Для Каждого стр из ТЗ Цикл
		//		Если стр.ГруппаАП = "A" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаA,0);
		//		ИначеЕсли стр.ГруппаАП = "B" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаB,0);
		//		ИначеЕсли стр.ГруппаАП = "C" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаC,0);
		//		ИначеЕсли стр.ГруппаАП = "D" Тогда
		//			стр.Заказать = Окр(стр.Заказать*КоэффициентЗаказаD,0);					
		//		КонецЕсли;
		//	КонецЦикла;
		//КонецЕсли;
		
		
		
		спр_АП = Справочники.АССОРТИМЕНТНЫЙ_ПЛАН;
		Госпитальные = спр_АП.НайтиПоКоду(17);
		Для каждого стр из ТЗ Цикл
			
		    стр.Заказать = Макс(0,стр.Заказать);
			
			Если Флаг_УчестьРеквизитМинимальныйЗаказ Тогда
				Попытка
					Если (стр.Заказать>0) Тогда
						// Если есть заказ
						//пер_МЗ = спр_АП.НайтиПоКоду(стр.Код).МинимальныйЗаказ;
						Если стр.Заказать<стр.МинимальныйЗаказ Тогда
							// Если Заказ>0 но меньше минимального заказа
							стр.Заказать = стр.МинимальныйЗаказ;
						Иначе
							Если УчитыватьКратностьЗаказа = Истина Тогда
								Если стр.МинимальныйЗаказ > 0 Тогда
									стр.Заказать = Окр(стр.Заказать/стр.МинимальныйЗаказ,0)*стр.МинимальныйЗаказ;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				Исключение
					//Сообщить("Это сообщение только для ИТ! Ничего страшного :) "+ОписаниеОшибки());
					Прервать;
				КонецПопытки;
			КонецЕсли;
			
			Если ПрименятьКоэффПоНЗ = Истина Тогда
				Если стр.Заказать > 0 и стр.НЗ > 0 Тогда
					КоличествоСНЗ = Окр(стр.НЗ/КоэффПоНЗ,0);
					КоличествоСНЗ = ?(КоличествоСНЗ=0,1,КоличествоСНЗ);
					стр.Заказать = Макс(стр.Заказать,КоличествоСНЗ);	
				КонецЕсли;
			КонецЕсли;
			
			//Определяем недостоверные позиции 
			Если стр.Заказать > 0 Тогда
				
				
				Если стр.НЗ > 4 и стр.НЗ = стр.КуМин  и Стр.НЗ = стр.КуМакс и стр.Заказать = 1 Тогда
					стр.Заказать = Мин(Окр(стр.НЗ/2),2);	
				КонецЕсли;
				
				Если стр.НЗ = стр.КуМин и стр.Заказать < 3 Тогда
				    Если стр.НЗ > 8 и стр.НЗ <= 19 Тогда
						стр.Заказать = Мин(Окр(стр.НЗ/2),2);
					ИначеЕсли стр.НЗ > 19  Тогда
						стр.Заказать = 0;
					КонецЕсли;
				КонецЕсли;

				
				Если стр.Подкатегория = Госпитальные Тогда
					стр.НедостовернаяПозиция = Истина;
				КонецЕсли;       
				
				Если стр.ОтношениеЗакупки >= 100 Тогда
					стр.НедостовернаяПозиция = Истина;
				КонецЕсли;
				
				Если стр.НеЗаказывать = Истина Тогда
					стр.Сумма = 0;
				Иначе
					стр.Сумма = стр.Заказать*стр.Цена;
				КонецЕсли;
				
				стр.ЗаказатьДоПривидения =  стр.Заказать;
				
				Если стр.Заказать > 0 и НЕ ЗаводскиеПараметрыТовара = Неопределено Тогда
					НайденнаяСтрока = ЗаводскиеПараметрыТовара.Найти(стр.КодТовара,"КодТовара");
					Если НЕ НайденнаяСтрока = Неопределено Тогда
						стр.КоличествоВСпайке = НайденнаяСтрока.КоличествоВСпайке;
						стр.КоличествоВКоробе = НайденнаяСтрока.КоличествоВКоробе;
						Если НайденнаяСтрока.КоличествоВКоробе > 0 Тогда
							ПривелиККоробке = ПривестиККоробкеСпайке(стр.Заказать,стр.КоличествоВКоробе,0.7,0.3);
							Если НЕ ПривелиККоробке Тогда
								Если стр.КоличествоВСпайке > 0 Тогда
									ПривелиКСпайке = ПривестиККоробкеСпайке(стр.Заказать,стр.КоличествоВСпайке,0.8,0.2);
								КонецЕсли;
							КонецЕсли;
							
							Если ПривелиККоробке Тогда
								стр.Коробов = стр.Заказать/стр.КоличествоВКоробе;	
							КонецЕсли;						
							
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли;
				
				
				
				Если стр.НеЗаказывать = Истина Тогда
					стр.Сумма = 0;
					стр.Заказать = 0;
				Иначе
					стр.Сумма = стр.Заказать*стр.Цена;
				КонецЕсли;
				
				Если стр.Заказать > 0 Тогда
					НоваяСтрока = ТЗДляТоргов.Добавить();
					НоваяСтрока.ДатаРасчета = ДатаРасчета;
					НоваяСтрока.КодТовара = стр.КодТовара;
					НоваяСтрока.КодСклада = КодСклада;
					НоваяСтрока.ВПути = стр.ВПути;
					НоваяСтрока.Остаток = стр.Остаток;
					НоваяСтрока.НЗ = стр.НЗ;
					НоваяСтрока.Продажи = стр.Продажи;
					НоваяСтрока.Потребность = стр.Заказать;
					НоваяСтрока.ПотребностьОтКуМакс2 = стр.Заказать;
					НоваяСтрока.Коробов = стр.Коробов;
					НоваяСтрока.ГруппаАП = стр.ГруппаАП;
				КонецЕсли;

				
			КонецЕсли;
			
			
		КонецЦикла;
		
		 Набор = РегистрыСведений.РасчетТоргов.СоздатьНаборЗаписей();
		 Набор.Отбор.ДатаРасчета.Установить(ДатаРасчета);
		 Набор.Отбор.КодСклада.Установить(КодСклада);
		 Набор.Загрузить(ТЗДляТоргов);
		 Попытка
		  Набор.Записать();
		 Исключение
		 КонецПопытки;

		
	
		ТЗ.Колонки.Удалить("Подкатегория");
		ТЗ.Колонки.Удалить("МинимальныйЗаказ");
		ТЗ.Колонки.Удалить("НеЗаказывать");
		ТЗ.Колонки.Удалить("Коробов");

		Возврат ТЗ;

	
КонецФункции   //РасчетТолькоПоМатрице
	
Функция ОкруглениеВБольшую(число)
	Целое = Цел(число);
	Если Целое = число Тогда
		Возврат число;
	Иначе
		Возврат Целое + 1;
	КонецЕсли;
КонецФункции

Функция ФильтрацияВсплесков(ТЗ,Скорость,Период,Код,КоличествоДнейПродаж,ОпределениеНаличияВсплеска);  //Фильтруем всплески
	
	// Изменены отклонения по письму Санакоева 21/06/2013 (150/200/300/400)
	БылВсплеск = Ложь;
	Если Скорость >= 10 Тогда
		Отклонение = 150;
	ИначеЕсли Скорость >=5 и Скорость <10 Тогда
		Отклонение = 200;
	ИначеЕсли Скорость > 1 и Скорость <5 Тогда
		Отклонение = 300;
	ИначеЕсли Скорость <=1 Тогда
		Отклонение = 400;
	КонецЕсли;
		
		
	Отбор = Новый Структура;
	Отбор.Вставить("Код",Код);
	Отбор.Вставить("Периоды",Период);
	НайденныеСтроки = ТЗ.НайтиСтроки(Отбор);
	
	Для каждого стр из НайденныеСтроки Цикл
		Если стр.Продажи > ОпределениеНаличияВсплеска Тогда
			РасчетноеОтклонение = (стр.Продажи - Скорость)*100/Скорость;
			//РасчетноеОтклонение = (стр.Продажи - ОбщаяСредняяПродажа)*100/ОбщаяСредняяПродажа;

			РасчетноеОтклонение = ?(РасчетноеОтклонение < 0,(-1)*РасчетноеОтклонение,РасчетноеОтклонение);
			Если РасчетноеОтклонение > Отклонение Тогда
				 БылВсплеск = Истина;
				 стр.Продажи = стр.Продажи/(1+(РасчетноеОтклонение - Отклонение)/100);
				 //стр.Продажи = Окр(ОбщаяСредняяПродажа * Отклонение/100);

			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если БылВсплеск = Истина Тогда
		НовыеПродажи = 0;
		Для каждого стр из НайденныеСтроки Цикл
			НовыеПродажи = НовыеПродажи + стр.Продажи;	
		КонецЦикла;
		Скорость = Окр(НовыеПродажи/КоличествоДнейПродаж,3);
	КонецЕсли;
	
	Возврат Скорость;
	
КонецФункции

Функция ПолучитьПараметрыРасчетаАвтозаказаПоАптеке(Аптека) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ш.ШаблонМатрицы,
	|	Ш.ШаблонМатрицы.ШаблонИндивидуальный как ШаблонИндивидуальный
	|ИЗ
	|	РегистрСведений.ПараметрыРасчетаАвтозаказаДляАптек КАК Ш
	|ГДЕ
	|	Ш.Аптека = &Аптека";
	
	Запрос.УстановитьПараметр("Аптека",Аптека);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		ШаблонМатрицы = Справочники.ШаблоныМатриц.НайтиПоРеквизиту("ШаблонПоУмолчанию",Истина);
	Иначе
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		
		Если Выборка.ШаблонИндивидуальный = Истина Тогда
			ШаблонМатрицы = Выборка.ШаблонМатрицы;
		Иначе
			ШаблонДляВсехАптек = Справочники.ШаблоныМатриц.НайтиПоРеквизиту("ШаблонДляВсехАптек",Истина);
			Если ШаблонДляВсехАптек.Пустая() Тогда
				ШаблонМатрицы = Выборка.ШаблонМатрицы;
			Иначе
				ШаблонМатрицы = ШаблонДляВсехАптек;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	
	
	ТаблицаПравил						= ШаблонМатрицы.ТаблицаПравил.Выгрузить();
	ТаблицаЗапасов						= ШаблонМатрицы.ТаблицаЗапасов.Выгрузить();
	ТаблицаПравилНаОченьПлохойСкорости	= ШаблонМатрицы.ТаблицаПравилНаОченьПлохойСкорости.Выгрузить();
	ТаблицаКоэффициентовВыкладки		= ШаблонМатрицы.ТаблицаКоэффициентовВыкладки.Выгрузить();
	ТаблицаКритериевОбнуленияЗаказа		= ШаблонМатрицы.КритерииОбнуленияЗаказа.Выгрузить();

	
	ПараметрыАвтозаказа = Новый Структура;
	ПараметрыАвтозаказа.Вставить("Ксз",ШаблонМатрицы.Ксз);
	ПараметрыАвтозаказа.Вставить("Куп",ШаблонМатрицы.Куп);
	ПараметрыАвтозаказа.Вставить("МинимальныйПорогСреднейСкорости",ШаблонМатрицы.МинимальныйПорогСреднейСкорости);
	ПараметрыАвтозаказа.Вставить("ПорогСреднейСкорости",ШаблонМатрицы.ПорогСреднейСкорости);
	
	ПараметрыАвтозаказа.Вставить("МинСкорость0",ШаблонМатрицы.МинСкорость0);
	ПараметрыАвтозаказа.Вставить("МаксСкорость0",ШаблонМатрицы.МаксСкорость0);
	
	
	ПараметрыАвтозаказа.Вставить("КоэффициентПоставщика",ШаблонМатрицы.КоэффициентПоставщика);
    ПараметрыАвтозаказа.Вставить("ОпределениеНаличияВсплеска",ШаблонМатрицы.ОпределениеНаличияВсплеска);
	
	
	ПараметрыАвтозаказа.Вставить("ОграничениеДляНовыхАптек",Истина);
	ПараметрыАвтозаказа.Вставить("Флаг_УчестьРеквизитминимальныйЗаказ",Истина);
	ПараметрыАвтозаказа.Вставить("УчитыватьКратностьЗаказа",Истина);
	ПараметрыАвтозаказа.Вставить("УчитыватьНЗ",Истина);

	
	
	ПараметрыАвтозаказа.Вставить("ТаблицаПравил",ТаблицаПравил);
	ПараметрыАвтозаказа.Вставить("ТаблицаЗапасов",ТаблицаЗапасов);
	ПараметрыАвтозаказа.Вставить("ТаблицаПравилНаОченьПлохойСкорости",ТаблицаПравилНаОченьПлохойСкорости);
	ПараметрыАвтозаказа.Вставить("ТаблицаКоэффициентовВыкладки",ТаблицаКоэффициентовВыкладки);
	ПараметрыАвтозаказа.Вставить("ТаблицаКритериевОбнуленияЗаказа",ТаблицаКритериевОбнуленияЗаказа);


	
	Возврат ПараметрыАвтозаказа;
	
КонецФункции

	
Функция ПолучитьТаблицуРасчетаСкоростейПродаж(Аптека, ТаблицаДат,ПараметрыРасчета, ЗначенияПериодов,ДополнительноеУсловие = "") Экспорт
	
	НачалоПервыйПериод = ЗначенияПериодов.НачалоПервыйПериод;
	НачалоВторойПериод = ЗначенияПериодов.НачалоВторойПериод;
	НачалоТретийПериод = ЗначенияПериодов.НачалоТретийПериод;
	НачалоЧетвертыйПериод = ЗначенияПериодов.НачалоЧетвертыйПериод;
	КонецЧетвертыйПериод = ЗначенияПериодов.КонецЧетвертыйПериод;
	ОпределениеНаличияВсплеска  = ПараметрыРасчета.ОпределениеНаличияВсплеска;

		//ТХТ = "ВЫБРАТЬ
		//	  |	Т.Дата,
		//	  |	0 КАК Товар
		//	  |ПОМЕСТИТЬ ВТДаты
		//	  |ИЗ
		//	  |	&ТабДат КАК Т
		//	  |;
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		//	  //|	Матрица.Товар.Код КАК Код,
		//	  //|	Матрица.Товар.Наименование КАК Товар,
		//	  |	Матрица.Товар.Код как КодТовара,
		//	  |	Матрица.Товар.УчаствуетВАП КАК Активный,
		//	  //|	Матрица.ГруппаАПИтог КАК ГруппаАП,
		//	  //|	ЕСТЬNULL(Матрица.КуМин, 0) КАК МатрицаКуМин,
		//	  //|	ЕСТЬNULL(Матрица.КуМакс, 0) КАК МатрицаКуМакс,
		//	  //|	ЕСТЬNULL(Матрица.НЗ, 0) КАК МатрицаНЗ,
		//	  |	Даты.Дата КАК Дата
		//	  //|	ВЫБОР КОГДА Матрица.Товар.Поставщик = &ПустойПоставщик
		//	  //|			ТОГДА 1
		//	  //|		  ИНАЧЕ 0 
		//	  //| КОНЕЦ КАК ПустойПоставщик,
		//	  //| Матрица.РекламнаяАкция как ПризнакРекламнойАкции,
		//	  //| Матрица.СрокДействияРекламы как СрокДействияРекламы
		//	  |ПОМЕСТИТЬ Пустой_Шаблон
		//	  |ИЗ
		//	  |	РегистрСведений.Матрица КАК Матрица
		//	  |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		//	  |			ВТДаты.Дата КАК Дата,
		//	  |			ВТДаты.Товар КАК Товар
		//	  |		ИЗ
		//	  |			ВТДаты КАК ВТДаты) КАК Даты
		//	  |		ПО (Даты.Товар <> Матрица.Товар)
		//	  |ГДЕ
		//	  |	Матрица.Аптека = &Аптека  "+ ДополнительноеУсловие +"
		//	  //|	И Матрица.Владелец.Товар.УчаствуетВАП = ИСТИНА
		//	  //| " + УсловиеПОРекламе + "
		//	  |;
		//	  |////////////////////////////////////////////////////////////////////////////////			  
		//	  |
		//	  |ВЫБРАТЬ РАЗЛИЧНЫЕ КодТовара  ПОМЕСТИТЬ ТАБЛИЦАКОДОВ ИЗ Пустой_Шаблон
		//	  |;
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//	  |			НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ) КАК Дата,
		//	  |			ПартииЖНВЛСОстатки.Товар.Код КАК КодТовара,
		//	  |			СУММА(ПартииЖНВЛСОстатки.КолвоОстаток / ПартииЖНВЛСОстатки.Партия.ЕИТЗакупки.К) КАК Остаток
		//	  | ПОМЕСТИТЬ ТЕМПОстатокНаНачало
		//	  |	ИЗ
		//	  |			РегистрНакопления.ПартииЖНВЛС.Остатки(
		//	  |					&НачПериода,
		//	  |					Склад = &Аптека
		//	  |						) КАК ПартииЖНВЛСОстатки
		//	  |		
		//	  |	СГРУППИРОВАТЬ ПО
		//	  |			ПартииЖНВЛСОстатки.Товар.Код
		//	  |ИНДЕКСИРОВАТЬ ПО  КодТовара
		//	  |
		//	  |;
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//	  |			ПартииЖНВЛСОбороты.Период КАК Период,
		//	  |			ПартииЖНВЛСОбороты.Товар.Код КАК КодТовара,
		//	  |			СУММА(ПартииЖНВЛСОбороты.КолвоОборот / ПартииЖНВЛСОбороты.Партия.ЕИТЗакупки.К) КАК Оборот
		//	  | ПОМЕСТИТЬ ТЕМПОБОРОТЫ
		//	  |		ИЗ
		//	  |			РегистрНакопления.ПартииЖНВЛС.Обороты(
		//	  |					&НачПериода,
		//	  |					&КонПериода,
		//	  |					День,
		//	  |					Склад = &Аптека
		//	  |						 ) КАК ПартииЖНВЛСОбороты
		//	  |		
		//	  |		СГРУППИРОВАТЬ ПО
		//	  |			ПартииЖНВЛСОбороты.Период,
		//	  |			ПартииЖНВЛСОбороты.Товар.Код
		//  |ИНДЕКСИРОВАТЬ ПО  КодТовара
		//	  |;			  
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  | ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//	  |			ПоступлениеТовараТовар.Товар.Код КАК КодТовара,
		//	  |			СУММА(ПоступлениеТовараТовар.Количество * ПоступлениеТовараТовар.К / ПоступлениеТовараТовар.Партия.ЕИТЗакупки.К) КАК Продажа,
		//	  |			НАЧАЛОПЕРИОДА(ПоступлениеТовараТовар.Ссылка.Дата, ДЕНЬ) КАК Период
		//	  | ПОМЕСТИТЬ ТЕМППРОДАЖИ
		//	  |		ИЗ
		//	  |			Документ.РеализацияККМ.Товар КАК ПоступлениеТовараТовар
		//	  |		ГДЕ
		//	  |			ПоступлениеТовараТовар.Ссылка.Проведен = ИСТИНА
		//	  |			И ПоступлениеТовараТовар.Ссылка.Склад = &Аптека
		//	  |			И ПоступлениеТовараТовар.Ссылка.Дата МЕЖДУ &НачПериода И &КонПериода
		//	 // |			И ПоступлениеТовараТовар.Товар.УчаствуетВАП = ИСТИНА
		//	 // |			" + УсловиеДляПродажи + "
		//	  |		
		//	  |		СГРУППИРОВАТЬ ПО
		//	  |			НАЧАЛОПЕРИОДА(ПоступлениеТовараТовар.Ссылка.Дата, ДЕНЬ),
		//	  |			ПоступлениеТовараТовар.Товар.Код
		//	  |ИНДЕКСИРОВАТЬ ПО  КодТовара
		//	  |;			  
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//	  |	ЦеныСрезПоследних.АП.Код как КодТовара,
		//	  |	МАКСИМУМ(ЦеныСрезПоследних.ЦенаРознГТТ) КАК Цена
		//	  |ПОМЕСТИТЬ ТЕМПЦЕНЫ
		//	  |ИЗ
		//	  |	РегистрСведений.Цены.СрезПоследних(&Дата, РЕГИОН = &Регион ) КАК ЦеныСрезПоследних
		//	  |СГРУППИРОВАТЬ ПО
		//	  |	ЦеныСрезПоследних.АП.Код
		//	  |
		//	  |ИНДЕКСИРОВАТЬ ПО  КодТовара
		//	  |;
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |ВЫБРАТЬ
		//	  |	Пустой_Шаблон.КодТовара КАК Код,
		//	  //|	Пустой_Шаблон.ТоварСсылка.Наименование КАК Товар,
		//	  //|	Пустой_Шаблон.ТоварСсылка КАК ТоварСсылка,
		//	  |	Пустой_Шаблон.Дата КАК Дата,
		//	  //|	Пустой_Шаблон.ГруппаАП КАК ГруппаАП,
		//	  //|	Пустой_Шаблон.МатрицаКуМин КАК МатрицаКуМин,
		//	  //|	Пустой_Шаблон.МатрицаКуМакс КАК МатрицаКуМакс,
		//	  //|	Пустой_Шаблон.МатрицаНЗ КАК МатрицаНЗ,
		//	  //| Пустой_Шаблон.ПустойПоставщик КАК ПустойПоставщик,
		//	  //| Пустой_Шаблон.ПризнакРекламнойАкции КАК ПризнакРекламнойАкции,
		//	  //| Пустой_Шаблон.СрокДействияРекламы КАК СрокДействияРекламнойАкции,
		//	  |	ЕСТЬNULL(ТЕМПЦены.Цена, 0) КАК Цена,
		//	  |	ЕСТЬNULL(ТЕМПОстатокНаНачало.Остаток, 0) КАК Остаток,
		//	  |	ЕСТЬNULL(ТЕМПОбороты.Оборот, 0) КАК Оборот,
		//	  |	ЕСТЬNULL(ТЕМППродажи.Продажа, 0) КАК Продажи,
		//	  |	ВЫБОР
		//	  |		КОГДА Пустой_Шаблон.Дата >= &НачалоВторойПериод
		//	  |				И Пустой_Шаблон.Дата <= &НачалоПервыйПериод
		//	  |			ТОГДА 1
		//	  |		КОГДА Пустой_Шаблон.Дата >= &НачалоТретийПериод
		//	  |				И Пустой_Шаблон.Дата < &НачалоВторойПериод
		//	  |			ТОГДА 2
		//	  |		КОГДА Пустой_Шаблон.Дата >= &НачалоЧетвертыйПериод
		//	  |				И Пустой_Шаблон.Дата < &НачалоТретийПериод
		//	  |			ТОГДА 3
		//	  |		КОГДА Пустой_Шаблон.Дата >= &КонецЧетвертыйПериод
		//	  |				И Пустой_Шаблон.Дата <= &НачалоТретийПериод
		//	  |			ТОГДА 4
		//	  |	КОНЕЦ КАК Периоды,
		//	  |	1 КАК ЕдиницаДляСвертки,
		//	  | Пустой_Шаблон.Активный
		//	  |ИЗ
		//	  |	Пустой_Шаблон КАК Пустой_Шаблон			  
		//	  |
		//	  |ЛЕВОЕ СОЕДИНЕНИЕ ТЕМПОстатокНаНачало ПО (ТЕМПОстатокНаНачало.КодТовара = Пустой_Шаблон.КодТовара) И (ТЕМПОстатокНаНачало.Дата = Пустой_Шаблон.Дата)
		//	  |ЛЕВОЕ СОЕДИНЕНИЕ ТЕМПОбороты ПО (ТЕМПОбороты.Период = Пустой_Шаблон.Дата) И (ТЕМПОбороты.КодТовара = Пустой_Шаблон.КодТовара)
		//	  |ЛЕВОЕ СОЕДИНЕНИЕ ТЕМППРОДАЖИ ПО (ТЕМППРОДАЖИ.Период = Пустой_Шаблон.Дата) И (ТЕМППРОДАЖИ.КодТовара = Пустой_Шаблон.КодТовара)
		//	  |ЛЕВОЕ СОЕДИНЕНИЕ ТЕМПЦЕНЫ ПО (ТЕМПЦЕНЫ.КодТовара = Пустой_Шаблон.КодТовара)
		//	  |УПОРЯДОЧИТЬ ПО
		//	  |	Пустой_Шаблон.КодТовара,
		//	  |	Дата
		//	  |;
		//	  |
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |УНИЧТОЖИТЬ ВТДаты
		//	  |;
		//	  //|////////////////////////////////////////////////////////////////////////////////
		//	  //|УНИЧТОЖИТЬ БАЗА
		//	  //|;
		//	  //|////////////////////////////////////////////////////////////////////////////////
		//	  //|УНИЧТОЖИТЬ РаспоследниеЦены
		//	  //|;
		//	  //|////////////////////////////////////////////////////////////////////////////////
		//	  |УНИЧТОЖИТЬ ТЕМПОстатокНаНачало
		//	  |;
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |УНИЧТОЖИТЬ ТЕМПОбороты
		//	  |;
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |УНИЧТОЖИТЬ ТЕМППРОДАЖИ
		//	  |;	
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |УНИЧТОЖИТЬ ТЕМПЦЕНЫ
		//	  |;
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |УНИЧТОЖИТЬ ТАБЛИЦАКОДОВ
		//	  |;			  
		//	  |
		//	  |////////////////////////////////////////////////////////////////////////////////
		//	  |УНИЧТОЖИТЬ Пустой_Шаблон";
			  
			  
			ТХТ = "ВЫБРАТЬ
			      |	Т.Дата,
			      |	0 КАК Товар
			      |ПОМЕСТИТЬ ВТДаты
			      |ИЗ
			      |	&ТабДат КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	Матрица.Товар.Код КАК КодТовара,
			      |	Матрица.Товар.УчаствуетВАП КАК Активный,
			      |	Даты.Дата КАК Дата
			      |ПОМЕСТИТЬ Пустой_Шаблон
			      |ИЗ
			      |	РегистрСведений.Матрица КАК Матрица
			      |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			      |			ВТДаты.Дата КАК Дата,
			      |			ВТДаты.Товар КАК Товар
			      |		ИЗ
			      |			ВТДаты КАК ВТДаты) КАК Даты
			      |		ПО (Даты.Товар <> Матрица.Товар)
			      |ГДЕ
			      |	Матрица.Аптека = &Аптека   "+ ДополнительноеУсловие +"
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	Пустой_Шаблон.КодТовара
			      |ПОМЕСТИТЬ ТАБЛИЦАКОДОВ
			      |ИЗ
			      |	Пустой_Шаблон КАК Пустой_Шаблон
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ 
			      |	НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ) КАК Дата,
			      |	ПартииЖНВЛСОстатки.Товар.Код КАК КодТовара,
			      |	ПартииЖНВЛСОстатки.КолвоОстаток КАК Остаток
			      |ПОМЕСТИТЬ ТЕМПОстатокНаНачало
			      |ИЗ
			      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
			      |			&НачПериода,
			      |			Товар.Разбивается = ЛОЖЬ
			      |				И Склад = &Аптека) КАК ПартииЖНВЛСОстатки
			      |
			      |ОБЪЕДИНИТЬ
			      |
			      |ВЫБРАТЬ
			      |	НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ),
			      |	ПартииЖНВЛСОстатки.Товар.Код,
			      |	СУММА(ПартииЖНВЛСОстатки.КолвоОстаток / ПартииЖНВЛСОстатки.Товар.ЕдиницаПоУмолчанию.К)
			      |ИЗ
			      |	РегистрНакопления.ПартииЖНВЛС.Остатки(
			      |			&НачПериода,
			      |			Товар.Разбивается = ИСТИНА
			      |				И Склад = &Аптека) КАК ПартииЖНВЛСОстатки
				  |ГДЕ ПартииЖНВЛСОстатки.Товар.ЕдиницаПоУмолчанию.К > 0
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ПартииЖНВЛСОстатки.Товар.Код
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара,
			      |	Дата
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ 
			      |	НАЧАЛОПЕРИОДА(ПартииЖНВЛСОбороты.Период,ДЕНЬ) КАК Период,
			      |	ПартииЖНВЛСОбороты.Товар.Код КАК КодТовара,
			      |	СУММА(ВЫБОР
				  |				КОГДА ПартииЖНВЛСОбороты.Регистратор ССЫЛКА Документ.РеализацияККМ
				  |				ТОГДА ПартииЖНВЛСОбороты.КолвоРасход
				  |				ИНАЧЕ 0
				  |				КОНЕЦ) КАК Продажа,
			      |	СУММА(ВЫБОР
				  |				КОГДА ПартииЖНВЛСОбороты.Регистратор ССЫЛКА Документ.РеализацияККМ
				  |				ТОГДА ПартииЖНВЛСОбороты.СуммаЗакупСНДСРасход
				  |				ИНАЧЕ 0
				  |				КОНЕЦ) КАК СуммаЗакуп,
				  |СУММА(ПартииЖНВЛСОбороты.КолвоОборот) КАК Оборот
			      |ПОМЕСТИТЬ ТЕМППРОДАЖИОБОРОТЫ
			      |ИЗ
			      |	РегистрНакопления.ПартииЖНВЛС.Обороты(
			      |			&НачПериода,
			      |			&КонПериода,
			      |			Регистратор,
			      |			Склад = &Аптека
			      |				И Товар.Разбивается = ЛОЖЬ) КАК ПартииЖНВЛСОбороты
			      | СГРУППИРОВАТЬ ПО
				  |		НАЧАЛОПЕРИОДА(ПартииЖНВЛСОбороты.Период,ДЕНЬ),
				  |		ПартииЖНВЛСОбороты.Товар.Код
			      |ОБЪЕДИНИТЬ
			      |
			      |ВЫБРАТЬ
			      |	НАЧАЛОПЕРИОДА(ПартииЖНВЛСОбороты.Период,ДЕНЬ) КАК Период,
			      |	ПартииЖНВЛСОбороты.Товар.Код,
				  | СУММА(ВЫБОР КОГДА ПартииЖНВЛСОбороты.Регистратор ССЫЛКА Документ.РеализацияККМ ТОГДА ПартииЖНВЛСОбороты.КолвоРасход / ПартииЖНВЛСОбороты.Товар.ЕдиницаПоУмолчанию.К ИНАЧЕ 0 КОНЕЦ),
			      |	СУММА(ВЫБОР
				  |				КОГДА ПартииЖНВЛСОбороты.Регистратор ССЫЛКА Документ.РеализацияККМ
				  |				ТОГДА ПартииЖНВЛСОбороты.СуммаЗакупСНДСРасход
				  |				ИНАЧЕ 0
				  |				КОНЕЦ) КАК СуммаЗакуп,
			      |	СУММА(ПартииЖНВЛСОбороты.КолвоОборот / ПартииЖНВЛСОбороты.Товар.ЕдиницаПоУмолчанию.К)
			      |ИЗ
			      |	РегистрНакопления.ПартииЖНВЛС.Обороты(
			      |			&НачПериода,
			      |			&КонПериода,
			      |			Регистратор,
			      |			Склад = &Аптека
			      |				И Товар.Разбивается = ИСТИНА) КАК ПартииЖНВЛСОбороты
			      | ГДЕ ПартииЖНВЛСОбороты.Товар.ЕдиницаПоУмолчанию.К > 0
			      |СГРУППИРОВАТЬ ПО
			      |НАЧАЛОПЕРИОДА(ПартииЖНВЛСОбороты.Период,ДЕНЬ),
			      |	ПартииЖНВЛСОбороты.Товар.Код
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара,
			      |	Период
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
				  //|ВЫБРАТЬ
				  //|	ПартииЖНВЛС1.Товар.Код КАК КодТовара,
				  //|	СУММА(ПартииЖНВЛС1.Колво) КАК Продажа,
				  //|	НАЧАЛОПЕРИОДА(ПартииЖНВЛС1.Период, ДЕНЬ) КАК Период
				  //|ПОМЕСТИТЬ ТЕМППРОДАЖИ
				  //|ИЗ
				  //|	РегистрНакопления.ПартииЖНВЛС КАК ПартииЖНВЛС1
				  //|ГДЕ
				  //|	ПартииЖНВЛС1.Период МЕЖДУ &НачПериода И &КонПериода
				  //|	И ПартииЖНВЛС1.Склад = &Аптека
				  //|	И ПартииЖНВЛС1.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОпераций.ПродажаТМЦ)
				  //|	И ПартииЖНВЛС1.Товар.Разбивается = ЛОЖЬ
				  //|
				  //|СГРУППИРОВАТЬ ПО
				  //|	ПартииЖНВЛС1.Товар.Код,
				  //|	НАЧАЛОПЕРИОДА(ПартииЖНВЛС1.Период, ДЕНЬ)
				  //|
				  //|ОБЪЕДИНИТЬ
				  //|
				  //|ВЫБРАТЬ
				  //|	ПартииЖНВЛС1.Товар.Код,
				  //|	СУММА(ПартииЖНВЛС1.Колво / ПартииЖНВЛС1.Партия.К),
				  //|	НАЧАЛОПЕРИОДА(ПартииЖНВЛС1.Период, ДЕНЬ)
				  //|ИЗ
				  //|	РегистрНакопления.ПартииЖНВЛС КАК ПартииЖНВЛС1
				  //|ГДЕ
				  //|	ПартииЖНВЛС1.Период МЕЖДУ &НачПериода И &КонПериода
				  //|	И ПартииЖНВЛС1.Склад = &Аптека
				  //|	И ПартииЖНВЛС1.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОпераций.ПродажаТМЦ)
				  //|	И ПартииЖНВЛС1.Товар.Разбивается = ИСТИНА
				  //|
				  //|СГРУППИРОВАТЬ ПО
				  //|	ПартииЖНВЛС1.Товар.Код,
				  //|	НАЧАЛОПЕРИОДА(ПартииЖНВЛС1.Период, ДЕНЬ)
				  //|
				  //|ИНДЕКСИРОВАТЬ ПО
				  //|	КодТовара,
				  //|	Период
				  //|;
				  |
				  |ВЫБРАТЬ
				  |КаталогПрайсЛистов.КодПрайсЛиста,
				  |ВЫБОР
				  |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика = 0
				  |	ТОГДА 1
				  |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика
				  |	КОНЕЦ КАК БазовыйКоэфф
				  |ПОМЕСТИТЬ Параметры
				  |ИЗ
				  |Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
				  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
				  |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
				  |			ПО КонтрактыИНастройки.НастройкаОбмена = КаталогПрайсЛистов.Настройка
				  |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
				  |ГДЕ
				  |		КонтрактыИАптеки.Активность = ИСТИНА
				  |		И КонтрактыИАптеки.Аптека = &Аптека
				  |		И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
				  |		И КонтрактыИАптеки.Владелец.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА
				  |;				  
				  |////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	МИНИМУМ(Прайсы.Цена*Параметры.БазовыйКоэфф) КАК Цена,
					|	Связки.ТоварФирмы.Код КАК КодТовара
					|ПОМЕСТИТЬ ТемпЦены
					|ИЗ
					|	РегистрСведений.ПрайсЛисты КАК Прайсы
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Параметры КАК Параметры
					|		ПО Прайсы.КодПрайсЛиста = Параметры.КодПрайсЛиста	
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
					|		ПО (Связки.Поставщик = Прайсы.ПоставщикСвязки)
					|			И (Связки.КодТовараПоставщика = Прайсы.Код)
					|
					|ГДЕ
					|	ВЫБОР
					|			КОГДА Прайсы.Цена > 0
					|					И Прайсы.Цена < 50
					|					И Прайсы.Количество > 800
					|				ТОГДА ИСТИНА
					|			КОГДА Прайсы.Цена >= 50
					|					И Прайсы.Цена < 150
					|					И Прайсы.Количество > 300
					|				ТОГДА ИСТИНА
					|			КОГДА Прайсы.Цена >= 150
					|					И Прайсы.Цена < 1000
					|					И Прайсы.Количество > 50
					|				ТОГДА ИСТИНА
					|			КОГДА Прайсы.Цена >= 1000
					|					И Прайсы.Цена < 5000
					|					И Прайсы.Количество > 10
					|				ТОГДА ИСТИНА
					|			КОГДА Прайсы.Цена >= 5000
					|					И Прайсы.Цена < 10000
					|					И Прайсы.Количество > 5
					|				ТОГДА ИСТИНА
					|			КОГДА Прайсы.Цена >= 10000
					|					И Прайсы.Количество > 3
					|				ТОГДА ИСТИНА
					|			ИНАЧЕ ЛОЖЬ
					|		КОНЕЦ = ИСТИНА
					|
					|СГРУППИРОВАТЬ ПО
					|	Связки.ТоварФирмы.Код
					|ИНДЕКСИРОВАТЬ ПО
				  |	КодТовара	
				  |;
				  |Уничтожить Параметры
				  |;
				  |////////////////////////////////////////////////////////////////////////////////
				  |ВЫБРАТЬ
				  |	Пустой_Шаблон.КодТовара КАК Код,
				  |	Пустой_Шаблон.Дата КАК Дата,
			      |	ЕСТЬNULL(ТЕМПЦЕНЫ.Цена, 0) КАК Цена,
			      |	ЕСТЬNULL(ТЕМПОстатокНаНачало.Остаток, 0) КАК Остаток,
			      |	ЕСТЬNULL(ТЕМППРОДАЖИОбороты.Оборот, 0) КАК Оборот,
			      |	ЕСТЬNULL(ТЕМППРОДАЖИОбороты.Продажа, 0) КАК Продажи,
				  |	ЕСТЬNULL(ТЕМППРОДАЖИОбороты.СуммаЗакуп, 0) КАК СуммаЗакуп,
			      |	ВЫБОР
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоВторойПериод
			      |				И Пустой_Шаблон.Дата <= &НачалоПервыйПериод
			      |			ТОГДА 1
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоТретийПериод
			      |				И Пустой_Шаблон.Дата < &НачалоВторойПериод
			      |			ТОГДА 2
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоЧетвертыйПериод
			      |				И Пустой_Шаблон.Дата < &НачалоТретийПериод
			      |			ТОГДА 3
			      |		КОГДА Пустой_Шаблон.Дата >= &КонецЧетвертыйПериод
			      |				И Пустой_Шаблон.Дата <= &НачалоТретийПериод
			      |			ТОГДА 4
			      |	КОНЕЦ КАК Периоды,
			      |	1 КАК ЕдиницаДляСвертки,
			      |	Пустой_Шаблон.Активный,
				  | Выбор когда ЕСТЬNULL(ТЕМППРОДАЖИОбороты.Продажа, 0) > 0 Тогда 1 Иначе 0 Конец как ДеньРеализации
			      |ИЗ
			      |	Пустой_Шаблон КАК Пустой_Шаблон
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМПОстатокНаНачало КАК ТЕМПОстатокНаНачало
			      |		ПО (ТЕМПОстатокНаНачало.КодТовара = Пустой_Шаблон.КодТовара)
			      |			И (ТЕМПОстатокНаНачало.Дата = Пустой_Шаблон.Дата)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМППРОДАЖИОБОРОТЫ КАК ТЕМППРОДАЖИОбороты
			      |		ПО (ТЕМППРОДАЖИОБОРОТЫ.Период = Пустой_Шаблон.Дата)
			      |			И (ТЕМППРОДАЖИОБОРОТЫ.КодТовара = Пустой_Шаблон.КодТовара)
			      //|		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМППРОДАЖИ КАК ТЕМППРОДАЖИ
			      //|		ПО (ТЕМППРОДАЖИ.Период = Пустой_Шаблон.Дата)
			      //|			И (ТЕМППРОДАЖИ.КодТовара = Пустой_Шаблон.КодТовара)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМПЦЕНЫ КАК ТЕМПЦЕНЫ
			      |		ПО (ТЕМПЦЕНЫ.КодТовара = Пустой_Шаблон.КодТовара)
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	Пустой_Шаблон.КодТовара,
			      |	Дата
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТДаты
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМПОстатокНаНачало
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМППРОДАЖИОбороты
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      //|УНИЧТОЖИТЬ ТЕМППРОДАЖИ
			      //|;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМПЦЕНЫ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТАБЛИЦАКОДОВ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Пустой_Шаблон";
			  
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Дата",ТекущаяДата());
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("Регион",Аптека.Регион);
		Запрос.УстановитьПараметр("НачПериода",КонецЧетвертыйПериод);
		Запрос.УстановитьПараметр("КонПериода",КонецДня(НачалоПервыйПериод));
		Запрос.УстановитьПараметр("НачалоПервыйПериод",НачалоПервыйПериод);
		Запрос.УстановитьПараметр("НачалоВторойПериод",НачалоВторойПериод);
		Запрос.УстановитьПараметр("НачалоТретийПериод",НачалоТретийПериод);
		Запрос.УстановитьПараметр("НачалоЧетвертыйПериод",НачалоЧетвертыйПериод);
		Запрос.УстановитьПараметр("КонецЧетвертыйПериод",КонецЧетвертыйПериод);
		Запрос.УстановитьПараметр("ПустойПоставщик",Справочники.Поставщики.ПустаяСсылка());
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ТабДат",ТаблицаДат);
		ТЗЗапроса = Запрос.Выполнить().Выгрузить();	
		ТЗЗапроса.Колонки.Добавить("ОстатокНаКонец");
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		//ЭлементыФормы.Инд.Значение = 0;
		//ЭлементыФормы.Инд.МаксимальноеЗначение = ТЗЗапроса.Количество();
		Вхождение = Истина;
		СтарыйТовар = 0;
		////Сообщить("Расчет остатка: " + ТекущаяДата());
		Для Каждого стр из ТЗЗапроса Цикл
			//ЭлементыФормы.Инд.Значение = ЭлементыФормы.Инд.Значение + 1;
			Если СтарыйТовар <> стр.Код Тогда
				ПредыдущийОстаток = стр.Остаток;//?(стр.Остаток = NULL,0, стр.Остаток);
				СтарыйТовар = стр.Код;
			КонецЕсли;
			
			стр.ОстатокНаКонец = ПредыдущийОстаток + стр.Оборот;//?(стр.Оборот = NULL,0,стр.Оборот);
			Если стр.Продажи = 0 и стр.ОстатокНаКонец = 0 Тогда  //Очищаем дни дефектура ( там где остаток = 0 и продаж не было)
				стр.ЕдиницаДляСвертки = 0;
			КонецЕсли;
			ПредыдущийОстаток = стр.ОстатокНаКонец;
			
		КонецЦикла;
		////Сообщить("Конец = " + ТекущаяДата());
		//		ЭлементыФормы.ТЗ.Значение = ТЗЗапроса;
		//	ЭлементыФормы.ТЗ.СоздатьКолонки();
		//возврат;
		
		ТЗЗапроса.Сортировать("Код, Дата Убыв");
		
		ТЗЗапросаПоДатам = ТЗЗапроса.Скопировать();
		
		ТЗЗапросаПоДатам.Индексы.Добавить("Код,Периоды"); //Убрали
		
		//-------Свернем таблицу, чтобы посчитать дни продажи и количество продаж по периодам
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! 			ВНИМАНИЕ			!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! Если добавлять или удалять колонки, то ниже при расчете XYZ !!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! надо изменить номера колонок ГруппаXYZ и  Отклонение  !!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//ТЗЗапроса.Свернуть("Код,Товар,ТоварСсылка,Периоды,Цена,МатрицаКуМин,МатрицаКуМакс,МатрицаНЗ,ПустойПоставщик,ПризнакРекламнойАкции,СрокДействияРекламнойАкции,ГруппаАП,Активный","Продажи,ЕдиницаДляСвертки");
		ТЗЗапроса.Свернуть("Код,Периоды,Цена,Активный","Продажи,ЕдиницаДляСвертки,СуммаЗакуп,ДеньРеализации");
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//Скопируем и свернем ТЗ для Расчета XYZ
		ТЗЗапросаОбщиеИтоги = ТЗЗапроса.Скопировать(,"Код,Продажи,ЕдиницаДляСвертки,ДеньРеализации");
		ТЗЗапросаОбщиеИтоги.Свернуть("Код","Продажи,ЕдиницаДляСвертки,ДеньРеализации");
		ТЗЗапросаОбщиеИтоги.Индексы.Добавить("Код");
		
		// А теперь добавим необходимые колонки 
		ТЗЗапроса.Колонки.Добавить("СредняяСкорость",Новый ОписаниеТипов("Число"));
		ТЗЗапроса.Колонки.Добавить("ГруппаXYZ",Новый ОписаниеТипов("Строка"));
		ТЗЗапроса.Колонки.Добавить("Dx",Новый ОписаниеТипов("Число"));  // Отклонение
		
		//Расчитаем Группу XYZ
		Номер = 0;
        Сумма = 0;
		ГруппаXYZ = "";
		
		СтрокаИтогов = ТЗЗапросаОбщиеИтоги.Получить(0);
		Если (СтрокаИтогов.ЕдиницаДляСвертки = 0) или  (СтрокаИтогов.ЕдиницаДляСвертки = 1)  Тогда
			СредняяПродажа = 0;
			ПропуститьРасчетПоЭтомуТовару = Истина;
		Иначе
			СредняяПродажа = СтрокаИтогов.Продажи/СтрокаИтогов.ЕдиницаДляСвертки;
			ПропуститьРасчетПоЭтомуТовару = Ложь;
		КонецЕсли;
		
		Для каждого стр из ТЗЗапросаПоДатам Цикл
			Номер = Номер + 1;
			
			Если ПропуститьРасчетПоЭтомуТовару = Истина  Тогда
			Иначе		
				Если стр.ЕдиницаДляСвертки = 0 Тогда
				Иначе
					Сумма = Сумма + Pow((стр.Продажи - СредняяПродажа),2);
				КонецЕсли;
			КонецЕсли;
				
			
			Если Номер%28 = 0 Тогда
				Если ПропуститьРасчетПоЭтомуТовару = Ложь  Тогда
					Отклонение = Окр(Sqrt(Сумма/(СтрокаИтогов.ЕдиницаДляСвертки-1)),2);
					Dx = Отклонение;
					Если Отклонение > 0 и Отклонение <=0.3 Тогда
						ГруппаXYZ = "X";
					ИначеЕсли Отклонение > 0.3 и Отклонение <= 1.3 Тогда
						ГруппаXYZ = "Y";		
					ИначеЕсли Отклонение > 1.3 Тогда //и Отклонение <=4 Тогда
						ГруппаXYZ = "Z";
					//ИначеЕсли Отклонение > 4 Тогда
					//	ГруппаXYZ = "W";
					КонецЕсли;		
					Если ГруппаXYZ = "" Тогда					
					Иначе
						ТЗЗапроса.Получить(Номер/7-1).Установить(9,ГруппаXYZ);    //13
						ТЗЗапроса.Получить(Номер/7-1).Установить(10,Отклонение);   //14
					КонецЕсли;
				КонецЕсли;
				Попытка
					СтрокаИтогов = ТЗЗапросаОбщиеИтоги.Получить(Номер/28);
				Исключение
					////Сообщить("Последний номер" + Номер);
					Продолжить;
				КонецПопытки;
				Если (СтрокаИтогов.ЕдиницаДляСвертки = 0) или  (СтрокаИтогов.ЕдиницаДляСвертки = 1)  Тогда
					СредняяПродажа = 0;
					ПропуститьРасчетПоЭтомуТовару = Истина;
				Иначе
					СредняяПродажа = СтрокаИтогов.Продажи/СтрокаИтогов.ЕдиницаДляСвертки;
					ПропуститьРасчетПоЭтомуТовару = Ложь;
				КонецЕсли;
				Сумма = 0 ;
				ГруппаXYZ = "";
			КонецЕсли;
			
		КонецЦикла;
		
		
		
		ТЗЗапросаОбщиеИтоги = Неопределено;
		
		//Посчитаем скорости  по каждому периоду
		СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();
		КоличествоНедостоверныхПериодов = 0;
		
		//ДнейПродаж = 0;
		//КоличествоПродаж = 0;
		//ДнейРеализации = 0;
		Для каждого стр из ТЗЗапроса Цикл
			//ОбработкаПрерыванияПользователя();
			//ДнейПродаж = ДнейПродаж + стр.ЕдиницаДляСвертки;
			//ДнейРеализации = ДнейРеализации + стр.ДеньРеализации;
			//КоличествоПродаж = КоличествоПродаж + стр.Продажи;
			
			Если стр.Периоды = 4 Тогда
				//стр.ГруппаXYZ = РасчитатьXYZ(стр.Dx,ТЗЗапросаПоДатам,стр.Код,ДнейПродаж,КоличествоПродаж);
				//ДнейПродаж = 0;
				//КоличествоПродаж = 0;	
				//ДнейРеализации = 0;
				//Здесь считаем общую скорость за все периоды
				Если стр.ЕдиницаДляСвертки <=2 Тогда
					КоличествоНедостоверныхПериодов = КоличествоНедостоверныхПериодов + 1;
					Если КоличествоНедостоверныхПериодов = 4 Тогда
						КоличествоНедостоверныхПериодов = 0;
						стр.СредняяСкорость = 0;
						СоответствиеСкоростей.Очистить();
						СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();					
						Продолжить;
					КонецЕсли;
					затычка = 0;
					к=1;
					Пока затычка = 0 Цикл
						Если СоответствиеСкоростей["K"+(стр.Периоды-к)] = 0 Тогда
							к=к+1;
							Продолжить;
						Иначе
							//Сообщить(стр.Код);
							СоответствиеСкоростей["K"+(стр.Периоды-к)] = СоответствиеСкоростей["K"+стр.Периоды] + СоответствиеСкоростей["K"+(стр.Периоды-к)];
							СоответствиеСкоростей["K"+стр.Периоды] = 0;
							затычка=1;
						КонецЕсли;
					КонецЦикла;
				Иначе
					СкоростьЗаТекущийПериод = Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
					Если  СкоростьЗаТекущийПериод > 0 Тогда
						СкоростьЗаТекущийПериод = ФильтрацияВсплесков(ТЗЗапросаПоДатам,СкоростьЗаТекущийПериод,стр.Периоды,стр.Код,стр.ЕдиницаДляСвертки,ОпределениеНаличияВсплеска);  //Фильтруем всплески
					КонецЕсли;	
					СоответствиеСкоростей["V"+стр.Периоды] = СкоростьЗаТекущийПериод;//Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
				КонецЕсли;
				//В конце всех периодов посчитаем средневзвешенную скорость
				СредняяСкорость = 0;
				Для к = 1 по 4 цикл
					СредняяСкорость = СредняяСкорость + СоответствиеСкоростей["K"+к]*СоответствиеСкоростей["V"+к];
				КонецЦикла;
				
				стр.СредняяСкорость = Окр(СредняяСкорость,3);
				СоответствиеСкоростей.Очистить();
				СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();
				КоличествоНедостоверныхПериодов = 0;
			ИНаче
				Если стр.ЕдиницаДляСвертки <=2 Тогда
					КоличествоНедостоверныхПериодов = КоличествоНедостоверныхПериодов + 1;
					СоответствиеСкоростей["K"+(стр.Периоды+1)] = СоответствиеСкоростей["K"+стр.Периоды] + СоответствиеСкоростей["K"+(стр.Периоды+1)];
					СоответствиеСкоростей["K"+стр.Периоды] = 0;
				Иначе
					СкоростьЗаТекущийПериод = Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
					Если  СкоростьЗаТекущийПериод > 0 Тогда
						СкоростьЗаТекущийПериод = ФильтрацияВсплесков(ТЗЗапросаПоДатам,СкоростьЗаТекущийПериод,стр.Периоды,стр.Код,стр.ЕдиницаДляСвертки,ОпределениеНаличияВсплеска); //Фильтруем всплески
					КонецЕсли;	
					СоответствиеСкоростей["V"+стр.Периоды] = СкоростьЗаТекущийПериод;//Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		////Сообщить(ТекущаяДата());
		ТЗЗапросаПоДатам = Неопределено; //Освобождаем таблицу, ибо жрет много памяти	
	
		Возврат ТЗЗапроса;
		
КонецФункции

	
Функция ПолучитьТаблицуРасчетаСкоростейПродажВремянка(Аптека, ТаблицаДат,ПараметрыРасчета, ЗначенияПериодов,ДополнительноеУсловие = "") Экспорт
	
	НачалоПервыйПериод = ЗначенияПериодов.НачалоПервыйПериод;
	НачалоВторойПериод = ЗначенияПериодов.НачалоВторойПериод;
	НачалоТретийПериод = ЗначенияПериодов.НачалоТретийПериод;
	НачалоЧетвертыйПериод = ЗначенияПериодов.НачалоЧетвертыйПериод;
	КонецЧетвертыйПериод = ЗначенияПериодов.КонецЧетвертыйПериод;
	ОпределениеНаличияВсплеска  = ПараметрыРасчета.ОпределениеНаличияВсплеска;

			  
			ТХТ = "ВЫБРАТЬ
			      |	Т.Дата КАК Дата,
			      |	0 КАК Товар
			      |ПОМЕСТИТЬ ВТДаты
			      |ИЗ
			      |	&ТабДат КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	Матрица.Товар.Код КАК КодТовара,
			      |	Матрица.Товар.УчаствуетВАП КАК Активный,
			      |	Даты.Дата КАК Дата
			      |ПОМЕСТИТЬ Пустой_Шаблон
			      |ИЗ
			      |	РегистрСведений.Матрица КАК Матрица
			      |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			      |			ВТДаты.Дата КАК Дата,
			      |			ВТДаты.Товар КАК Товар
			      |		ИЗ
			      |			ВТДаты КАК ВТДаты) КАК Даты
			      |		ПО (Даты.Товар <> Матрица.Товар)
			      |ГДЕ
			      |	Матрица.Аптека = &Аптека   "+ ДополнительноеУсловие +"
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	Пустой_Шаблон.КодТовара КАК КодТовара
			      |ПОМЕСТИТЬ ТАБЛИЦАКОДОВ
			      |ИЗ
			      |	Пустой_Шаблон КАК Пустой_Шаблон
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ) КАК Дата,
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ ПартииОстатки.ТоварКод
			      |	КОНЕЦ КАК КодТовара,
			      |	СУММА(ПартииОстатки.КоличествоОстаток / Партии.К) КАК Остаток
			      |ПОМЕСТИТЬ ТЕМПОстатокНаНачало
			      |ИЗ
			      |	РегистрНакопления.УЗ_Партии.Остатки(&НачПериода, СкладКод = &АптекаКод) КАК ПартииОстатки
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |		ПО (Партии.Код = ПартииОстатки.ПартияКод)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = ПартииОстатки.ТоварКод)
			      |ГДЕ
			      |	ПартииОстатки.КоличествоОстаток > 0
			      |	И Партии.К > 0
			      |	И НЕ Партии.ТипПартии = ""I""
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ ПартииОстатки.ТоварКод
			      |	КОНЕЦ
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ОстаткиОбороты.ПартияКод КАК ПартияКод,
			      |	СУММА(ОстаткиОбороты.КоличествоОборот) КАК Оборот
			      |ПОМЕСТИТЬ ВТПартии
			      |ИЗ
			      |	РегистрНакопления.УЗ_Партии.ОстаткиИОбороты(&НачПериода, &КонПериода,Регистратор , , СкладКод = &АптекаКод) КАК ОстаткиОбороты
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ОстаткиОбороты.ПартияКод
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	ОстаткиОбороты.ПартияКод
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВТПартии.ПартияКод КАК ПартияКод
			      |ПОМЕСТИТЬ ИнтернетПартии
			      |ИЗ
			      |	ВТПартии КАК ВТПартии
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК УЗ_Партии
			      |		ПО ВТПартии.ПартияКод = УЗ_Партии.Код
			      |ГДЕ
			      |	УЗ_Партии.ТипПартии = ""I""
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	НАЧАЛОПЕРИОДА(УЗ_Партии.Период, ДЕНЬ) КАК Период,
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ УЗ_Партии.ТоварКод
			      |	КОНЕЦ КАК КодТовара,
			      |	СУММА(ВЫБОР
			      |			КОГДА УЗ_Партии.Регистратор ССЫЛКА Документ.УЗ_РеализацияККМ
			      |				ТОГДА УЗ_Партии.КоличествоРасход / Партии.К
			      |			ИНАЧЕ 0
			      |		КОНЕЦ) КАК Продажа,
			      |	СУММА(ВЫБОР
			      |			КОГДА УЗ_Партии.Регистратор ССЫЛКА Документ.УЗ_РеализацияККМ
			      |				ТОГДА ВЫРАЗИТЬ(УЗ_Партии.СуммаЗакупБезНДСРасход * (1 + УЗ_Партии.СтавкаНДСЗакуп / 100) КАК ЧИСЛО(15, 2))
			      |			ИНАЧЕ 0
			      |		КОНЕЦ) КАК СуммаЗакуп,
			      |	СУММА(ВЫБОР
			      |			КОГДА УЗ_Партии.Регистратор ССЫЛКА Документ.ИзменениеУчетнойПолитики
			      |				ТОГДА 0
			      |			ИНАЧЕ УЗ_Партии.КоличествоОборот / Партии.К
			      |		КОНЕЦ) КАК Оборот
			      |ПОМЕСТИТЬ ТЕМППРОДАЖИОБОРОТЫ
			      |ИЗ
			      |	РегистрНакопления.УЗ_Партии.Обороты(
			      |			&НачПериода,
			      |			&КонПериода,
			      |			Регистратор,
			      |			СкладКод = &АптекаКод
			      |				И НЕ ПартияКод В
			      |						(ВЫБРАТЬ
			      |							интернетПартии.ПартияКод
			      |						ИЗ
			      |							интернетПартии)) КАК УЗ_Партии
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК Партии
			      |		ПО УЗ_Партии.ПартияКод = Партии.Код
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = УЗ_Партии.ТоварКод)
			      |ГДЕ
			      |	Партии.К > 0
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	НАЧАЛОПЕРИОДА(УЗ_Партии.Период, ДЕНЬ),
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ УЗ_Партии.ТоварКод
			      |	КОНЕЦ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	КаталогПрайсЛистов.КодПрайсЛиста КАК КодПрайсЛиста,
			      |	ВЫБОР
			      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика = 0
			      |			ТОГДА 1
			      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика
			      |	КОНЕЦ КАК БазовыйКоэфф
			      |ПОМЕСТИТЬ Параметры
			      |ИЗ
			      |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
			      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
			      |			ПО КонтрактыИНастройки.НастройкаОбмена = КаталогПрайсЛистов.Настройка
			      |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
			      |ГДЕ
			      |	КонтрактыИАптеки.Активность = ИСТИНА
			      |	И КонтрактыИАптеки.Аптека = &Аптека
			      |	И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
			      |	И КонтрактыИАптеки.Владелец.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МИНИМУМ(Прайсы.Цена * Параметры.БазовыйКоэфф) КАК Цена,
			      |	ВЫБОР
			      |		КОГДА Связки.ТоварФирмы.КодОП > 0
			      |			ТОГДА Связки.ТоварФирмы.КодОП
			      |		ИНАЧЕ Связки.ТоварФирмы.Код
			      |	КОНЕЦ КАК КодТовара
			      |ПОМЕСТИТЬ ТемпЦены
			      |ИЗ
			      |	РегистрСведений.ПрайсЛисты КАК Прайсы
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Параметры КАК Параметры
			      |		ПО Прайсы.КодПрайсЛиста = Параметры.КодПрайсЛиста
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
			      |		ПО (Связки.Поставщик = Прайсы.ПоставщикСвязки)
			      |			И (Связки.КодТовараПоставщика = Прайсы.Код)
			      |ГДЕ
			      |	ВЫБОР
			      |			КОГДА Прайсы.Цена > 0
			      |					И Прайсы.Цена < 50
			      |					И Прайсы.Количество > 800
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 50
			      |					И Прайсы.Цена < 150
			      |					И Прайсы.Количество > 300
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 150
			      |					И Прайсы.Цена < 1000
			      |					И Прайсы.Количество > 50
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 1000
			      |					И Прайсы.Цена < 5000
			      |					И Прайсы.Количество > 10
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 5000
			      |					И Прайсы.Цена < 10000
			      |					И Прайсы.Количество > 5
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 10000
			      |					И Прайсы.Количество > 3
			      |				ТОГДА ИСТИНА
			      |			ИНАЧЕ ЛОЖЬ
			      |		КОНЕЦ = ИСТИНА
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВЫБОР
			      |		КОГДА Связки.ТоварФирмы.КодОП > 0
			      |			ТОГДА Связки.ТоварФирмы.КодОП
			      |		ИНАЧЕ Связки.ТоварФирмы.Код
			      |	КОНЕЦ
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Параметры
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Пустой_Шаблон.КодТовара КАК Код,
			      |	Пустой_Шаблон.Дата КАК Дата,
			      |	ЕСТЬNULL(ТЕМПЦЕНЫ.Цена, 0) КАК Цена,
			      |	ЕСТЬNULL(ТЕМПОстатокНаНачало.Остаток, 0) КАК Остаток,
			      |	ЕСТЬNULL(ТЕМППРОДАЖИОбороты.Оборот, 0) КАК Оборот,
			      |	ЕСТЬNULL(ТЕМППРОДАЖИОбороты.Продажа, 0) КАК Продажи,
			      |	ЕСТЬNULL(ТЕМППРОДАЖИОбороты.СуммаЗакуп, 0) КАК СуммаЗакуп,
			      |	ВЫБОР
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоВторойПериод
			      |				И Пустой_Шаблон.Дата <= &НачалоПервыйПериод
			      |			ТОГДА 1
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоТретийПериод
			      |				И Пустой_Шаблон.Дата < &НачалоВторойПериод
			      |			ТОГДА 2
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоЧетвертыйПериод
			      |				И Пустой_Шаблон.Дата < &НачалоТретийПериод
			      |			ТОГДА 3
			      |		КОГДА Пустой_Шаблон.Дата >= &КонецЧетвертыйПериод
			      |				И Пустой_Шаблон.Дата <= &НачалоТретийПериод
			      |			ТОГДА 4
			      |	КОНЕЦ КАК Периоды,
			      |	1 КАК ЕдиницаДляСвертки,
			      |	Пустой_Шаблон.Активный КАК Активный,
			      |	ВЫБОР
			      |		КОГДА ЕСТЬNULL(ТЕМППРОДАЖИОбороты.Продажа, 0) > 0
			      |			ТОГДА 1
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ДеньРеализации
			      |ИЗ
			      |	Пустой_Шаблон КАК Пустой_Шаблон
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМПОстатокНаНачало КАК ТЕМПОстатокНаНачало
			      |		ПО (ТЕМПОстатокНаНачало.КодТовара = Пустой_Шаблон.КодТовара)
			      |			И (ТЕМПОстатокНаНачало.Дата = Пустой_Шаблон.Дата)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМППРОДАЖИОБОРОТЫ КАК ТЕМППРОДАЖИОбороты
			      |		ПО (ТЕМППРОДАЖИОбороты.Период = Пустой_Шаблон.Дата)
			      |			И (ТЕМППРОДАЖИОбороты.КодТовара = Пустой_Шаблон.КодТовара)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТемпЦены КАК ТЕМПЦЕНЫ
			      |		ПО (ТЕМПЦЕНЫ.КодТовара = Пустой_Шаблон.КодТовара)
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	Пустой_Шаблон.КодТовара,
			      |	Дата
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТДаты
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМПОстатокНаНачало
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТПартии
			      |;
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ИнтернетПартии
			      |;				  
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМППРОДАЖИОбороты
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМПЦЕНЫ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТАБЛИЦАКОДОВ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Пустой_Шаблон";
			  
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Дата",ТекущаяДата());
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("АптекаКод",Аптека.Код);
		Запрос.УстановитьПараметр("Регион",Аптека.Регион);
		Запрос.УстановитьПараметр("НачПериода",КонецЧетвертыйПериод);
		Запрос.УстановитьПараметр("КонПериода",КонецДня(НачалоПервыйПериод));
		Запрос.УстановитьПараметр("НачалоПервыйПериод",НачалоПервыйПериод);
		Запрос.УстановитьПараметр("НачалоВторойПериод",НачалоВторойПериод);
		Запрос.УстановитьПараметр("НачалоТретийПериод",НачалоТретийПериод);
		Запрос.УстановитьПараметр("НачалоЧетвертыйПериод",НачалоЧетвертыйПериод);
		Запрос.УстановитьПараметр("КонецЧетвертыйПериод",КонецЧетвертыйПериод);
		Запрос.УстановитьПараметр("ПустойПоставщик",Справочники.Поставщики.ПустаяСсылка());
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ТабДат",ТаблицаДат);
		ТЗЗапроса = Запрос.Выполнить().Выгрузить();	
		ТЗЗапроса.Колонки.Добавить("ОстатокНаКонец");
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		//ЭлементыФормы.Инд.Значение = 0;
		//ЭлементыФормы.Инд.МаксимальноеЗначение = ТЗЗапроса.Количество();
		Вхождение = Истина;
		СтарыйТовар = 0;
		////Сообщить("Расчет остатка: " + ТекущаяДата());
		Для Каждого стр из ТЗЗапроса Цикл
			//ЭлементыФормы.Инд.Значение = ЭлементыФормы.Инд.Значение + 1;
			Если СтарыйТовар <> стр.Код Тогда
				ПредыдущийОстаток = стр.Остаток;//?(стр.Остаток = NULL,0, стр.Остаток);
				СтарыйТовар = стр.Код;
			КонецЕсли;
			
			стр.ОстатокНаКонец = ПредыдущийОстаток + стр.Оборот;//?(стр.Оборот = NULL,0,стр.Оборот);
			Если стр.Продажи = 0 и стр.ОстатокНаКонец = 0 Тогда  //Очищаем дни дефектура ( там где остаток = 0 и продаж не было)
				стр.ЕдиницаДляСвертки = 0;
			КонецЕсли;
			ПредыдущийОстаток = стр.ОстатокНаКонец;
			
		КонецЦикла;
		////Сообщить("Конец = " + ТекущаяДата());
		//		ЭлементыФормы.ТЗ.Значение = ТЗЗапроса;
		//	ЭлементыФормы.ТЗ.СоздатьКолонки();
		//возврат;
		
		ТЗЗапроса.Сортировать("Код, Дата Убыв");
		
		ТЗЗапросаПоДатам = ТЗЗапроса.Скопировать();
		
		ТЗЗапросаПоДатам.Индексы.Добавить("Код,Периоды"); //Убрали
		
		//-------Свернем таблицу, чтобы посчитать дни продажи и количество продаж по периодам
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! 			ВНИМАНИЕ			!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! Если добавлять или удалять колонки, то ниже при расчете XYZ !!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! надо изменить номера колонок ГруппаXYZ и  Отклонение  !!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//ТЗЗапроса.Свернуть("Код,Товар,ТоварСсылка,Периоды,Цена,МатрицаКуМин,МатрицаКуМакс,МатрицаНЗ,ПустойПоставщик,ПризнакРекламнойАкции,СрокДействияРекламнойАкции,ГруппаАП,Активный","Продажи,ЕдиницаДляСвертки");
		ТЗЗапроса.Свернуть("Код,Периоды,Цена,Активный","Продажи,ЕдиницаДляСвертки,СуммаЗакуп,ДеньРеализации");
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//Скопируем и свернем ТЗ для Расчета XYZ
		ТЗЗапросаОбщиеИтоги = ТЗЗапроса.Скопировать(,"Код,Продажи,ЕдиницаДляСвертки,ДеньРеализации");
		ТЗЗапросаОбщиеИтоги.Свернуть("Код","Продажи,ЕдиницаДляСвертки,ДеньРеализации");
		ТЗЗапросаОбщиеИтоги.Индексы.Добавить("Код");
		
		// А теперь добавим необходимые колонки 
		ТЗЗапроса.Колонки.Добавить("СредняяСкорость",Новый ОписаниеТипов("Число"));
		ТЗЗапроса.Колонки.Добавить("ГруппаXYZ",Новый ОписаниеТипов("Строка"));
		ТЗЗапроса.Колонки.Добавить("Dx",Новый ОписаниеТипов("Число"));  // Отклонение
		
		//Расчитаем Группу XYZ
		Номер = 0;
        Сумма = 0;
		ГруппаXYZ = "";
		
		СтрокаИтогов = ТЗЗапросаОбщиеИтоги.Получить(0);
		Если (СтрокаИтогов.ЕдиницаДляСвертки = 0) или  (СтрокаИтогов.ЕдиницаДляСвертки = 1)  Тогда
			СредняяПродажа = 0;
			ПропуститьРасчетПоЭтомуТовару = Истина;
		Иначе
			СредняяПродажа = СтрокаИтогов.Продажи/СтрокаИтогов.ЕдиницаДляСвертки;
			ПропуститьРасчетПоЭтомуТовару = Ложь;
		КонецЕсли;
		
		Для каждого стр из ТЗЗапросаПоДатам Цикл
			Номер = Номер + 1;
			
			Если ПропуститьРасчетПоЭтомуТовару = Истина  Тогда
			Иначе		
				Если стр.ЕдиницаДляСвертки = 0 Тогда
				Иначе
					Сумма = Сумма + Pow((стр.Продажи - СредняяПродажа),2);
				КонецЕсли;
			КонецЕсли;
				
			
			Если Номер%28 = 0 Тогда
				Если ПропуститьРасчетПоЭтомуТовару = Ложь  Тогда
					Отклонение = Окр(Sqrt(Сумма/(СтрокаИтогов.ЕдиницаДляСвертки-1)),2);
					Dx = Отклонение;
					Если Отклонение > 0 и Отклонение <=0.3 Тогда
						ГруппаXYZ = "X";
					ИначеЕсли Отклонение > 0.3 и Отклонение <= 1.3 Тогда
						ГруппаXYZ = "Y";		
					ИначеЕсли Отклонение > 1.3 Тогда //и Отклонение <=4 Тогда
						ГруппаXYZ = "Z";
					//ИначеЕсли Отклонение > 4 Тогда
					//	ГруппаXYZ = "W";
					КонецЕсли;		
					Если ГруппаXYZ = "" Тогда					
					Иначе
						ТЗЗапроса.Получить(Номер/7-1).Установить(9,ГруппаXYZ);    //13
						ТЗЗапроса.Получить(Номер/7-1).Установить(10,Отклонение);   //14
					КонецЕсли;
				КонецЕсли;
				Попытка
					СтрокаИтогов = ТЗЗапросаОбщиеИтоги.Получить(Номер/28);  //было ТЗЗапросаОбщиеИтоги.Получить(Номер/28-1);
				Исключение
					////Сообщить("Последний номер" + Номер);
					Продолжить;
				КонецПопытки;
				Если (СтрокаИтогов.ЕдиницаДляСвертки = 0) или  (СтрокаИтогов.ЕдиницаДляСвертки = 1)  Тогда
					СредняяПродажа = 0;
					ПропуститьРасчетПоЭтомуТовару = Истина;
				Иначе
					СредняяПродажа = СтрокаИтогов.Продажи/СтрокаИтогов.ЕдиницаДляСвертки;
					ПропуститьРасчетПоЭтомуТовару = Ложь;
				КонецЕсли;
				Сумма = 0 ;
				ГруппаXYZ = "";
			КонецЕсли;
			
		КонецЦикла;
		
		
		
		ТЗЗапросаОбщиеИтоги = Неопределено;
		
		//Посчитаем скорости  по каждому периоду
		СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();
		КоличествоНедостоверныхПериодов = 0;
		
		//ДнейПродаж = 0;
		//КоличествоПродаж = 0;
		//ДнейРеализации = 0;
		Для каждого стр из ТЗЗапроса Цикл
			//ОбработкаПрерыванияПользователя();
			//ДнейПродаж = ДнейПродаж + стр.ЕдиницаДляСвертки;
			//ДнейРеализации = ДнейРеализации + стр.ДеньРеализации;
			//КоличествоПродаж = КоличествоПродаж + стр.Продажи;
			
			Если стр.Периоды = 4 Тогда
				//стр.ГруппаXYZ = РасчитатьXYZ(стр.Dx,ТЗЗапросаПоДатам,стр.Код,ДнейПродаж,КоличествоПродаж);
				//ДнейПродаж = 0;
				//КоличествоПродаж = 0;	
				//ДнейРеализации = 0;
				//Здесь считаем общую скорость за все периоды
				Если стр.ЕдиницаДляСвертки <=2 Тогда
					КоличествоНедостоверныхПериодов = КоличествоНедостоверныхПериодов + 1;
					Если КоличествоНедостоверныхПериодов = 4 Тогда
						КоличествоНедостоверныхПериодов = 0;
						стр.СредняяСкорость = 0;
						СоответствиеСкоростей.Очистить();
						СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();					
						Продолжить;
					КонецЕсли;
					затычка = 0;
					к=1;
					Пока затычка = 0 Цикл
						Если СоответствиеСкоростей["K"+(стр.Периоды-к)] = 0 Тогда
							к=к+1;
							Продолжить;
						Иначе
							//Сообщить(стр.Код);
							СоответствиеСкоростей["K"+(стр.Периоды-к)] = СоответствиеСкоростей["K"+стр.Периоды] + СоответствиеСкоростей["K"+(стр.Периоды-к)];
							СоответствиеСкоростей["K"+стр.Периоды] = 0;
							затычка=1;
						КонецЕсли;
					КонецЦикла;
				Иначе
					СкоростьЗаТекущийПериод = Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
					Если  СкоростьЗаТекущийПериод > 0 Тогда
						СкоростьЗаТекущийПериод = ФильтрацияВсплесков(ТЗЗапросаПоДатам,СкоростьЗаТекущийПериод,стр.Периоды,стр.Код,стр.ЕдиницаДляСвертки,ОпределениеНаличияВсплеска);  //Фильтруем всплески
					КонецЕсли;	
					СоответствиеСкоростей["V"+стр.Периоды] = СкоростьЗаТекущийПериод;//Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
				КонецЕсли;
				//В конце всех периодов посчитаем средневзвешенную скорость
				СредняяСкорость = 0;
				Для к = 1 по 4 цикл
					СредняяСкорость = СредняяСкорость + СоответствиеСкоростей["K"+к]*СоответствиеСкоростей["V"+к];
				КонецЦикла;
				
				стр.СредняяСкорость = Окр(СредняяСкорость,3);
				СоответствиеСкоростей.Очистить();
				СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();
				КоличествоНедостоверныхПериодов = 0;
			ИНаче
				Если стр.ЕдиницаДляСвертки <=2 Тогда
					КоличествоНедостоверныхПериодов = КоличествоНедостоверныхПериодов + 1;
					СоответствиеСкоростей["K"+(стр.Периоды+1)] = СоответствиеСкоростей["K"+стр.Периоды] + СоответствиеСкоростей["K"+(стр.Периоды+1)];
					СоответствиеСкоростей["K"+стр.Периоды] = 0;
				Иначе
					СкоростьЗаТекущийПериод = Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
					Если  СкоростьЗаТекущийПериод > 0 Тогда
						СкоростьЗаТекущийПериод = ФильтрацияВсплесков(ТЗЗапросаПоДатам,СкоростьЗаТекущийПериод,стр.Периоды,стр.Код,стр.ЕдиницаДляСвертки,ОпределениеНаличияВсплеска); //Фильтруем всплески
					КонецЕсли;	
					СоответствиеСкоростей["V"+стр.Периоды] = СкоростьЗаТекущийПериод;//Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		////Сообщить(ТекущаяДата());
		ТЗЗапросаПоДатам = Неопределено; //Освобождаем таблицу, ибо жрет много памяти	
	
		Возврат ТЗЗапроса;
		
КонецФункции

Функция ПолучитьТаблицуРасчетаСкоростейПродажИнтернетАптекиВКодахОП(Аптека, ТаблицаДат,ПараметрыРасчета, ЗначенияПериодов,ДополнительноеУсловие = "") Экспорт
	
	НачалоПервыйПериод = ЗначенияПериодов.НачалоПервыйПериод;
	НачалоВторойПериод = ЗначенияПериодов.НачалоВторойПериод;
	НачалоТретийПериод = ЗначенияПериодов.НачалоТретийПериод;
	НачалоЧетвертыйПериод = ЗначенияПериодов.НачалоЧетвертыйПериод;
	КонецЧетвертыйПериод = ЗначенияПериодов.КонецЧетвертыйПериод;
	ОпределениеНаличияВсплеска  = ПараметрыРасчета.ОпределениеНаличияВсплеска;

			  
			ТХТ = "ВЫБРАТЬ
			      |	Т.Дата КАК Дата,
			      |	0 КАК Товар
			      |ПОМЕСТИТЬ ВТДаты
			      |ИЗ
			      |	&ТабДат КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	Матрица.Товар.Код КАК КодТовара,
			      |	Матрица.Товар.УчаствуетВАП КАК Активный,
			      |	Даты.Дата КАК Дата
			      |ПОМЕСТИТЬ Пустой_Шаблон
			      |ИЗ
			      |	РегистрСведений.Матрица КАК Матрица
			      |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			      |			ВТДаты.Дата КАК Дата,
			      |			ВТДаты.Товар КАК Товар
			      |		ИЗ
			      |			ВТДаты КАК ВТДаты) КАК Даты
			      |		ПО (Даты.Товар <> Матрица.Товар)
			      |ГДЕ
			      |	Матрица.Аптека = &Аптека
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	Пустой_Шаблон.КодТовара КАК КодТовара
			      |ПОМЕСТИТЬ ТАБЛИЦАКОДОВ
			      |ИЗ
			      |	Пустой_Шаблон КАК Пустой_Шаблон
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ) КАК Дата,
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ Остатки.КодТовара
			      |	КОНЕЦ КАК КодТовара,
			      |	СУММА(Остатки.КоличествоОстаток) КАК Остаток
			      |ПОМЕСТИТЬ ТЕМПОстатокНаНачало
			      |ИЗ
			      |	РегистрНакопления.ОстаткиТовараИнтернетАптек.Остатки(&НачПериода, КодАптеки = &АптекаКод) КАК Остатки
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = Остатки.КодТовара)
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ Остатки.КодТовара
			      |	КОНЕЦ
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	НАЧАЛОПЕРИОДА(Обороты.Период, ДЕНЬ) КАК Период,
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ Обороты.КодТовара
			      |	КОНЕЦ КАК КодТовара,
			      |	СУММА(Обороты.КоличествоОборот) КАК Оборот
			      |ПОМЕСТИТЬ ТЕМППРОДАЖИОБОРОТЫ
			      |ИЗ
			      |	РегистрНакопления.ОстаткиТовараИнтернетАптек.Обороты(&НачПериода, &КонПериода, Регистратор, КодАптеки = &АптекаКод) КАК Обороты
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = Обороты.КодТовара)
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	НАЧАЛОПЕРИОДА(Обороты.Период, ДЕНЬ),
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ Обороты.КодТовара
			      |	КОНЕЦ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	НАЧАЛОПЕРИОДА(Продажи.Период, ДЕНЬ) КАК Период,
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ Продажи.КодТовара
			      |	КОНЕЦ КАК КодТовара,
			      |	СУММА(Продажи.Количество) КАК Продажа
			      |ПОМЕСТИТЬ ТЕМППРОДАЖИ
			      |ИЗ
			      |	РегистрНакопления.ПродажиПоИнтернетАптекам КАК Продажи
			      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
			      |		ПО (АП.Код = Продажи.КодТовара)
			      |ГДЕ
			      |	Продажи.Период МЕЖДУ &НачПериода И &КонПериода
			      |	И Продажи.КодАптеки = &АптекаКод
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	НАЧАЛОПЕРИОДА(Продажи.Период, ДЕНЬ),
			      |	ВЫБОР
			      |		КОГДА АП.КодОП > 0
			      |			ТОГДА АП.КодОП
			      |		ИНАЧЕ Продажи.КодТовара
			      |	КОНЕЦ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	КаталогПрайсЛистов.КодПрайсЛиста КАК КодПрайсЛиста,
			      |	ВЫБОР
			      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика = 0
			      |			ТОГДА 1
			      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика
			      |	КОНЕЦ КАК БазовыйКоэфф
			      |ПОМЕСТИТЬ Параметры
			      |ИЗ
			      |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
			      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
			      |			ПО КонтрактыИНастройки.НастройкаОбмена = КаталогПрайсЛистов.Настройка
			      |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
			      |ГДЕ
			      |	КонтрактыИАптеки.Активность = ИСТИНА
			      |	И КонтрактыИАптеки.Аптека = &Аптека
			      |	И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
			      |	И КонтрактыИАптеки.Владелец.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МИНИМУМ(Прайсы.Цена * Параметры.БазовыйКоэфф) КАК Цена,
			      |	ВЫБОР
			      |		КОГДА Связки.ТоварФирмы.КодОП > 0
			      |			ТОГДА Связки.ТоварФирмы.КодОП
			      |		ИНАЧЕ Связки.ТоварФирмы.Код
			      |	КОНЕЦ КАК КодТовара
			      |ПОМЕСТИТЬ ТемпЦены
			      |ИЗ
			      |	РегистрСведений.ПрайсЛисты КАК Прайсы
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Параметры КАК Параметры
			      |		ПО Прайсы.КодПрайсЛиста = Параметры.КодПрайсЛиста
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
			      |		ПО (Связки.Поставщик = Прайсы.ПоставщикСвязки)
			      |			И (Связки.КодТовараПоставщика = Прайсы.Код)
			      |ГДЕ
			      |	ВЫБОР
			      |			КОГДА Прайсы.Цена > 0
			      |					И Прайсы.Цена < 50
			      |					И Прайсы.Количество > 800
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 50
			      |					И Прайсы.Цена < 150
			      |					И Прайсы.Количество > 300
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 150
			      |					И Прайсы.Цена < 1000
			      |					И Прайсы.Количество > 50
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 1000
			      |					И Прайсы.Цена < 5000
			      |					И Прайсы.Количество > 10
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 5000
			      |					И Прайсы.Цена < 10000
			      |					И Прайсы.Количество > 5
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 10000
			      |					И Прайсы.Количество > 3
			      |				ТОГДА ИСТИНА
			      |			ИНАЧЕ ЛОЖЬ
			      |		КОНЕЦ = ИСТИНА
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВЫБОР
			      |		КОГДА Связки.ТоварФирмы.КодОП > 0
			      |			ТОГДА Связки.ТоварФирмы.КодОП
			      |		ИНАЧЕ Связки.ТоварФирмы.Код
			      |	КОНЕЦ
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Параметры
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Пустой_Шаблон.КодТовара КАК Код,
			      |	Пустой_Шаблон.Дата КАК Дата,
			      |	ЕСТЬNULL(ТЕМПЦЕНЫ.Цена, 0) КАК Цена,
			      |	ЕСТЬNULL(ТЕМПОстатокНаНачало.Остаток, 0) КАК Остаток,
			      |	ЕСТЬNULL(ТЕМППРОДАЖИОбороты.Оборот, 0) КАК Оборот,
			      |	ЕСТЬNULL(ТЕМППРОДАЖИ.Продажа, 0) КАК Продажи,
			      |	0 КАК СуммаЗакуп,
			      |	ВЫБОР
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоВторойПериод
			      |				И Пустой_Шаблон.Дата <= &НачалоПервыйПериод
			      |			ТОГДА 1
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоТретийПериод
			      |				И Пустой_Шаблон.Дата < &НачалоВторойПериод
			      |			ТОГДА 2
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоЧетвертыйПериод
			      |				И Пустой_Шаблон.Дата < &НачалоТретийПериод
			      |			ТОГДА 3
			      |		КОГДА Пустой_Шаблон.Дата >= &КонецЧетвертыйПериод
			      |				И Пустой_Шаблон.Дата <= &НачалоТретийПериод
			      |			ТОГДА 4
			      |	КОНЕЦ КАК Периоды,
			      |	1 КАК ЕдиницаДляСвертки,
			      |	Пустой_Шаблон.Активный КАК Активный,
			      |	ВЫБОР
			      |		КОГДА ЕСТЬNULL(ТЕМППРОДАЖИ.Продажа, 0) > 0
			      |			ТОГДА 1
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ДеньРеализации
			      |ИЗ
			      |	Пустой_Шаблон КАК Пустой_Шаблон
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМПОстатокНаНачало КАК ТЕМПОстатокНаНачало
			      |		ПО (ТЕМПОстатокНаНачало.КодТовара = Пустой_Шаблон.КодТовара)
			      |			И (ТЕМПОстатокНаНачало.Дата = Пустой_Шаблон.Дата)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМППРОДАЖИОБОРОТЫ КАК ТЕМППРОДАЖИОбороты
			      |		ПО (ТЕМППРОДАЖИОбороты.Период = Пустой_Шаблон.Дата)
			      |			И (ТЕМППРОДАЖИОбороты.КодТовара = Пустой_Шаблон.КодТовара)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМППРОДАЖИ КАК ТЕМППРОДАЖИ
			      |		ПО (ТЕМППРОДАЖИ.Период = Пустой_Шаблон.Дата)
			      |			И (ТЕМППРОДАЖИ.КодТовара = Пустой_Шаблон.КодТовара)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТемпЦены КАК ТЕМПЦЕНЫ
			      |		ПО (ТЕМПЦЕНЫ.КодТовара = Пустой_Шаблон.КодТовара)
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	Пустой_Шаблон.КодТовара,
			      |	Дата
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТДаты
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМПОстатокНаНачало
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМППРОДАЖИОбороты
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМППРОДАЖИ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМПЦЕНЫ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТАБЛИЦАКОДОВ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Пустой_Шаблон";
			  
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Дата",ТекущаяДата());
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("АптекаКод",Аптека.Код);
		Запрос.УстановитьПараметр("Регион",Аптека.Регион);
		Запрос.УстановитьПараметр("НачПериода",КонецЧетвертыйПериод);
		Запрос.УстановитьПараметр("КонПериода",КонецДня(НачалоПервыйПериод));
		Запрос.УстановитьПараметр("НачалоПервыйПериод",НачалоПервыйПериод);
		Запрос.УстановитьПараметр("НачалоВторойПериод",НачалоВторойПериод);
		Запрос.УстановитьПараметр("НачалоТретийПериод",НачалоТретийПериод);
		Запрос.УстановитьПараметр("НачалоЧетвертыйПериод",НачалоЧетвертыйПериод);
		Запрос.УстановитьПараметр("КонецЧетвертыйПериод",КонецЧетвертыйПериод);
		Запрос.УстановитьПараметр("ПустойПоставщик",Справочники.Поставщики.ПустаяСсылка());
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ТабДат",ТаблицаДат);
		ТЗЗапроса = Запрос.Выполнить().Выгрузить();	
		ТЗЗапроса.Колонки.Добавить("ОстатокНаКонец");
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		//ЭлементыФормы.Инд.Значение = 0;
		//ЭлементыФормы.Инд.МаксимальноеЗначение = ТЗЗапроса.Количество();
		Вхождение = Истина;
		СтарыйТовар = 0;
		////Сообщить("Расчет остатка: " + ТекущаяДата());
		Для Каждого стр из ТЗЗапроса Цикл
			//ЭлементыФормы.Инд.Значение = ЭлементыФормы.Инд.Значение + 1;
			Если СтарыйТовар <> стр.Код Тогда
				ПредыдущийОстаток = стр.Остаток;//?(стр.Остаток = NULL,0, стр.Остаток);
				СтарыйТовар = стр.Код;
			КонецЕсли;
			
			стр.ОстатокНаКонец = ПредыдущийОстаток + стр.Оборот;//?(стр.Оборот = NULL,0,стр.Оборот);
			Если стр.Продажи = 0 и стр.ОстатокНаКонец = 0 Тогда  //Очищаем дни дефектура ( там где остаток = 0 и продаж не было)
				стр.ЕдиницаДляСвертки = 0;
			КонецЕсли;
			ПредыдущийОстаток = стр.ОстатокНаКонец;
			
		КонецЦикла;
		
		ТЗЗапроса.Сортировать("Код, Дата Убыв");
		
		ТЗЗапросаПоДатам = ТЗЗапроса.Скопировать();
		
		ТЗЗапросаПоДатам.Индексы.Добавить("Код,Периоды"); //Убрали
		
		//-------Свернем таблицу, чтобы посчитать дни продажи и количество продаж по периодам
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! 			ВНИМАНИЕ			!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! Если добавлять или удалять колонки, то ниже при расчете XYZ !!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! надо изменить номера колонок ГруппаXYZ и  Отклонение  !!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//ТЗЗапроса.Свернуть("Код,Товар,ТоварСсылка,Периоды,Цена,МатрицаКуМин,МатрицаКуМакс,МатрицаНЗ,ПустойПоставщик,ПризнакРекламнойАкции,СрокДействияРекламнойАкции,ГруппаАП,Активный","Продажи,ЕдиницаДляСвертки");
		ТЗЗапроса.Свернуть("Код,Периоды,Цена,Активный","Продажи,ЕдиницаДляСвертки,СуммаЗакуп,ДеньРеализации");
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//Скопируем и свернем ТЗ для Расчета XYZ
		ТЗЗапросаОбщиеИтоги = ТЗЗапроса.Скопировать(,"Код,Продажи,ЕдиницаДляСвертки,ДеньРеализации");
		ТЗЗапросаОбщиеИтоги.Свернуть("Код","Продажи,ЕдиницаДляСвертки,ДеньРеализации");
		ТЗЗапросаОбщиеИтоги.Индексы.Добавить("Код");
		
		// А теперь добавим необходимые колонки 
		ТЗЗапроса.Колонки.Добавить("СредняяСкорость",Новый ОписаниеТипов("Число"));
		ТЗЗапроса.Колонки.Добавить("ГруппаXYZ",Новый ОписаниеТипов("Строка"));
		ТЗЗапроса.Колонки.Добавить("Dx",Новый ОписаниеТипов("Число"));  // Отклонение
		
		//Расчитаем Группу XYZ
		Номер = 0;
        Сумма = 0;
		ГруппаXYZ = "";
		
		СтрокаИтогов = ТЗЗапросаОбщиеИтоги.Получить(0);
		Если (СтрокаИтогов.ЕдиницаДляСвертки = 0) или  (СтрокаИтогов.ЕдиницаДляСвертки = 1)  Тогда
			СредняяПродажа = 0;
			ПропуститьРасчетПоЭтомуТовару = Истина;
		Иначе
			СредняяПродажа = СтрокаИтогов.Продажи/СтрокаИтогов.ЕдиницаДляСвертки;
			ПропуститьРасчетПоЭтомуТовару = Ложь;
		КонецЕсли;
		
		Для каждого стр из ТЗЗапросаПоДатам Цикл
			Номер = Номер + 1;
			
			Если ПропуститьРасчетПоЭтомуТовару = Истина  Тогда
			Иначе		
				Если стр.ЕдиницаДляСвертки = 0 Тогда
				Иначе
					Сумма = Сумма + Pow((стр.Продажи - СредняяПродажа),2);
				КонецЕсли;
			КонецЕсли;
				
			
			Если Номер%28 = 0 Тогда
				Если ПропуститьРасчетПоЭтомуТовару = Ложь  Тогда
					Отклонение = Окр(Sqrt(Сумма/(СтрокаИтогов.ЕдиницаДляСвертки-1)),2);
					Dx = Отклонение;
					Если Отклонение > 0 и Отклонение <=0.3 Тогда
						ГруппаXYZ = "X";
					ИначеЕсли Отклонение > 0.3 и Отклонение <= 1.3 Тогда
						ГруппаXYZ = "Y";		
					ИначеЕсли Отклонение > 1.3 Тогда //и Отклонение <=4 Тогда
						ГруппаXYZ = "Z";
					//ИначеЕсли Отклонение > 4 Тогда
					//	ГруппаXYZ = "W";
					КонецЕсли;		
					Если ГруппаXYZ = "" Тогда					
					Иначе
						ТЗЗапроса.Получить(Номер/7-1).Установить(9,ГруппаXYZ);    //13
						ТЗЗапроса.Получить(Номер/7-1).Установить(10,Отклонение);   //14
					КонецЕсли;
				КонецЕсли;
				Попытка
					СтрокаИтогов = ТЗЗапросаОбщиеИтоги.Получить(Номер/28-1);
				Исключение
					////Сообщить("Последний номер" + Номер);
					Продолжить;
				КонецПопытки;
				Если (СтрокаИтогов.ЕдиницаДляСвертки = 0) или  (СтрокаИтогов.ЕдиницаДляСвертки = 1)  Тогда
					СредняяПродажа = 0;
					ПропуститьРасчетПоЭтомуТовару = Истина;
				Иначе
					СредняяПродажа = СтрокаИтогов.Продажи/СтрокаИтогов.ЕдиницаДляСвертки;
					ПропуститьРасчетПоЭтомуТовару = Ложь;
				КонецЕсли;
				Сумма = 0 ;
				ГруппаXYZ = "";
			КонецЕсли;
			
		КонецЦикла;
		
		
		
		ТЗЗапросаОбщиеИтоги = Неопределено;
		
		//Посчитаем скорости  по каждому периоду
		СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();
		КоличествоНедостоверныхПериодов = 0;
		
		//ДнейПродаж = 0;
		//КоличествоПродаж = 0;
		//ДнейРеализации = 0;
		Для каждого стр из ТЗЗапроса Цикл
			//ОбработкаПрерыванияПользователя();
			//ДнейПродаж = ДнейПродаж + стр.ЕдиницаДляСвертки;
			//ДнейРеализации = ДнейРеализации + стр.ДеньРеализации;
			//КоличествоПродаж = КоличествоПродаж + стр.Продажи;
			
			Если стр.Периоды = 4 Тогда
				//стр.ГруппаXYZ = РасчитатьXYZ(стр.Dx,ТЗЗапросаПоДатам,стр.Код,ДнейПродаж,КоличествоПродаж);
				//ДнейПродаж = 0;
				//КоличествоПродаж = 0;	
				//ДнейРеализации = 0;
				//Здесь считаем общую скорость за все периоды
				Если стр.ЕдиницаДляСвертки <=2 Тогда
					КоличествоНедостоверныхПериодов = КоличествоНедостоверныхПериодов + 1;
					Если КоличествоНедостоверныхПериодов = 4 Тогда
						КоличествоНедостоверныхПериодов = 0;
						стр.СредняяСкорость = 0;
						СоответствиеСкоростей.Очистить();
						СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();					
						Продолжить;
					КонецЕсли;
					затычка = 0;
					к=1;
					Пока затычка = 0 Цикл
						Если СоответствиеСкоростей["K"+(стр.Периоды-к)] = 0 Тогда
							к=к+1;
							Продолжить;
						Иначе
							//Сообщить(стр.Код);
							СоответствиеСкоростей["K"+(стр.Периоды-к)] = СоответствиеСкоростей["K"+стр.Периоды] + СоответствиеСкоростей["K"+(стр.Периоды-к)];
							СоответствиеСкоростей["K"+стр.Периоды] = 0;
							затычка=1;
						КонецЕсли;
					КонецЦикла;
				Иначе
					СкоростьЗаТекущийПериод = Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
					Если  СкоростьЗаТекущийПериод > 0 Тогда
						СкоростьЗаТекущийПериод = ФильтрацияВсплесков(ТЗЗапросаПоДатам,СкоростьЗаТекущийПериод,стр.Периоды,стр.Код,стр.ЕдиницаДляСвертки,ОпределениеНаличияВсплеска);  //Фильтруем всплески
					КонецЕсли;	
					СоответствиеСкоростей["V"+стр.Периоды] = СкоростьЗаТекущийПериод;//Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
				КонецЕсли;
				//В конце всех периодов посчитаем средневзвешенную скорость
				СредняяСкорость = 0;
				Для к = 1 по 4 цикл
					СредняяСкорость = СредняяСкорость + СоответствиеСкоростей["K"+к]*СоответствиеСкоростей["V"+к];
				КонецЦикла;
				
				стр.СредняяСкорость = Окр(СредняяСкорость,3);
				СоответствиеСкоростей.Очистить();
				СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();
				КоличествоНедостоверныхПериодов = 0;
			ИНаче
				Если стр.ЕдиницаДляСвертки <=2 Тогда
					КоличествоНедостоверныхПериодов = КоличествоНедостоверныхПериодов + 1;
					СоответствиеСкоростей["K"+(стр.Периоды+1)] = СоответствиеСкоростей["K"+стр.Периоды] + СоответствиеСкоростей["K"+(стр.Периоды+1)];
					СоответствиеСкоростей["K"+стр.Периоды] = 0;
				Иначе
					СкоростьЗаТекущийПериод = Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
					Если  СкоростьЗаТекущийПериод > 0 Тогда
						СкоростьЗаТекущийПериод = ФильтрацияВсплесков(ТЗЗапросаПоДатам,СкоростьЗаТекущийПериод,стр.Периоды,стр.Код,стр.ЕдиницаДляСвертки,ОпределениеНаличияВсплеска); //Фильтруем всплески
					КонецЕсли;	
					СоответствиеСкоростей["V"+стр.Периоды] = СкоростьЗаТекущийПериод;//Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		////Сообщить(ТекущаяДата());
		ТЗЗапросаПоДатам = Неопределено; //Освобождаем таблицу, ибо жрет много памяти	
	
		Возврат ТЗЗапроса;
		
КонецФункции

Функция ПолучитьТаблицуРасчетаСкоростейПродажИнтернетАптеки(Аптека, ТаблицаДат,ПараметрыРасчета, ЗначенияПериодов,ДополнительноеУсловие = "") Экспорт
	
	НачалоПервыйПериод = ЗначенияПериодов.НачалоПервыйПериод;
	НачалоВторойПериод = ЗначенияПериодов.НачалоВторойПериод;
	НачалоТретийПериод = ЗначенияПериодов.НачалоТретийПериод;
	НачалоЧетвертыйПериод = ЗначенияПериодов.НачалоЧетвертыйПериод;
	КонецЧетвертыйПериод = ЗначенияПериодов.КонецЧетвертыйПериод;
	ОпределениеНаличияВсплеска  = ПараметрыРасчета.ОпределениеНаличияВсплеска;

			  
			ТХТ = "ВЫБРАТЬ
			      |	Т.Дата КАК Дата,
			      |	0 КАК Товар
			      |ПОМЕСТИТЬ ВТДаты
			      |ИЗ
			      |	&ТабДат КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	Матрица.Товар.Код КАК КодТовара,
			      |	Матрица.Товар.УчаствуетВАП КАК Активный,
			      |	Даты.Дата КАК Дата
			      |ПОМЕСТИТЬ Пустой_Шаблон
			      |ИЗ
			      |	РегистрСведений.Матрица КАК Матрица
			      |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			      |			ВТДаты.Дата КАК Дата,
			      |			ВТДаты.Товар КАК Товар
			      |		ИЗ
			      |			ВТДаты КАК ВТДаты) КАК Даты
			      |		ПО (Даты.Товар <> Матрица.Товар)
			      |ГДЕ
			      |	Матрица.Аптека = &Аптека
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ РАЗЛИЧНЫЕ
			      |	Пустой_Шаблон.КодТовара КАК КодТовара
			      |ПОМЕСТИТЬ ТАБЛИЦАКОДОВ
			      |ИЗ
			      |	Пустой_Шаблон КАК Пустой_Шаблон
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	НАЧАЛОПЕРИОДА(&НачПериода, ДЕНЬ) КАК Дата,
			      |	Остатки.КодТовара КАК КодТовара,
			      |	СУММА(Остатки.КоличествоОстаток) КАК Остаток
			      |ПОМЕСТИТЬ ТЕМПОстатокНаНачало
			      |ИЗ
			      |	РегистрНакопления.ОстаткиТовараИнтернетАптек.Остатки(&НачПериода, КодАптеки = &АптекаКод) КАК Остатки
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	 Остатки.КодТовара
			      |	
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	НАЧАЛОПЕРИОДА(Обороты.Период, ДЕНЬ) КАК Период,
			      |	Обороты.КодТовара  как КодТовара,
			      |	СУММА(Обороты.КоличествоОборот) КАК Оборот
			      |ПОМЕСТИТЬ ТЕМППРОДАЖИОБОРОТЫ
			      |ИЗ
			      |	РегистрНакопления.ОстаткиТовараИнтернетАптек.Обороты(&НачПериода, &КонПериода, Регистратор, КодАптеки = &АптекаКод) КАК Обороты
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	НАЧАЛОПЕРИОДА(Обороты.Период, ДЕНЬ),
			      |	Обороты.КодТовара
			      |	
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	НАЧАЛОПЕРИОДА(Продажи.Период, ДЕНЬ) КАК Период,
			      |	Продажи.КодТовара  КАК КодТовара,
			      |	СУММА(Продажи.Количество) КАК Продажа
			      |ПОМЕСТИТЬ ТЕМППРОДАЖИ
			      |ИЗ
			      |	РегистрНакопления.ПродажиПоИнтернетАптекам КАК Продажи
			      |ГДЕ
			      |	Продажи.Период МЕЖДУ &НачПериода И &КонПериода
			      |	И Продажи.КодАптеки = &АптекаКод
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	НАЧАЛОПЕРИОДА(Продажи.Период, ДЕНЬ),
			      |	Продажи.КодТовара
			      |	
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	КаталогПрайсЛистов.КодПрайсЛиста КАК КодПрайсЛиста,
			      |	ВЫБОР
			      |		КОГДА КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика = 0
			      |			ТОГДА 1
			      |		ИНАЧЕ КаталогПрайсЛистов.Настройка.КоэффициентЦеныНаБазовыйПрайсПоставщика
			      |	КОНЕЦ КАК БазовыйКоэфф
			      |ПОМЕСТИТЬ Параметры
			      |ИЗ
			      |	Справочник.КонтрактыИАптеки КАК КонтрактыИАптеки
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтрактыИНастройки КАК КонтрактыИНастройки
			      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КаталогПрайсЛистов КАК КаталогПрайсЛистов
			      |			ПО КонтрактыИНастройки.НастройкаОбмена = КаталогПрайсЛистов.Настройка
			      |		ПО КонтрактыИАптеки.Владелец = КонтрактыИНастройки.Контракт
			      |ГДЕ
			      |	КонтрактыИАптеки.Активность = ИСТИНА
			      |	И КонтрактыИАптеки.Аптека = &Аптека
			      |	И КонтрактыИАптеки.Владелец.Активность = ИСТИНА
			      |	И КонтрактыИАптеки.Владелец.Владелец.ОсуществляетПрямыеПоставки = ИСТИНА
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	МИНИМУМ(Прайсы.Цена * Параметры.БазовыйКоэфф) КАК Цена,
			      |	ВЫБОР
			      |		КОГДА Связки.ТоварФирмы.КодОП > 0
			      |			ТОГДА Связки.ТоварФирмы.КодОП
			      |		ИНАЧЕ Связки.ТоварФирмы.Код
			      |	КОНЕЦ КАК КодТовара
			      |ПОМЕСТИТЬ ТемпЦены
			      |ИЗ
			      |	РегистрСведений.ПрайсЛисты КАК Прайсы
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Параметры КАК Параметры
			      |		ПО Прайсы.КодПрайсЛиста = Параметры.КодПрайсЛиста
			      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвязкиТовараСПоставщиком КАК Связки
			      |		ПО (Связки.Поставщик = Прайсы.ПоставщикСвязки)
			      |			И (Связки.КодТовараПоставщика = Прайсы.Код)
			      |ГДЕ
			      |	ВЫБОР
			      |			КОГДА Прайсы.Цена > 0
			      |					И Прайсы.Цена < 50
			      |					И Прайсы.Количество > 800
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 50
			      |					И Прайсы.Цена < 150
			      |					И Прайсы.Количество > 300
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 150
			      |					И Прайсы.Цена < 1000
			      |					И Прайсы.Количество > 50
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 1000
			      |					И Прайсы.Цена < 5000
			      |					И Прайсы.Количество > 10
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 5000
			      |					И Прайсы.Цена < 10000
			      |					И Прайсы.Количество > 5
			      |				ТОГДА ИСТИНА
			      |			КОГДА Прайсы.Цена >= 10000
			      |					И Прайсы.Количество > 3
			      |				ТОГДА ИСТИНА
			      |			ИНАЧЕ ЛОЖЬ
			      |		КОНЕЦ = ИСТИНА
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВЫБОР
			      |		КОГДА Связки.ТоварФирмы.КодОП > 0
			      |			ТОГДА Связки.ТоварФирмы.КодОП
			      |		ИНАЧЕ Связки.ТоварФирмы.Код
			      |	КОНЕЦ
			      |
			      |ИНДЕКСИРОВАТЬ ПО
			      |	КодТовара
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Параметры
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	Пустой_Шаблон.КодТовара КАК Код,
			      |	Пустой_Шаблон.Дата КАК Дата,
			      |	ЕСТЬNULL(ТЕМПЦЕНЫ.Цена, 0) КАК Цена,
			      |	ЕСТЬNULL(ТЕМПОстатокНаНачало.Остаток, 0) КАК Остаток,
			      |	ЕСТЬNULL(ТЕМППРОДАЖИОбороты.Оборот, 0) КАК Оборот,
			      |	ЕСТЬNULL(ТЕМППРОДАЖИ.Продажа, 0) КАК Продажи,
			      |	0 КАК СуммаЗакуп,
			      |	ВЫБОР
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоВторойПериод
			      |				И Пустой_Шаблон.Дата <= &НачалоПервыйПериод
			      |			ТОГДА 1
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоТретийПериод
			      |				И Пустой_Шаблон.Дата < &НачалоВторойПериод
			      |			ТОГДА 2
			      |		КОГДА Пустой_Шаблон.Дата >= &НачалоЧетвертыйПериод
			      |				И Пустой_Шаблон.Дата < &НачалоТретийПериод
			      |			ТОГДА 3
			      |		КОГДА Пустой_Шаблон.Дата >= &КонецЧетвертыйПериод
			      |				И Пустой_Шаблон.Дата <= &НачалоТретийПериод
			      |			ТОГДА 4
			      |	КОНЕЦ КАК Периоды,
			      |	1 КАК ЕдиницаДляСвертки,
			      |	Пустой_Шаблон.Активный КАК Активный,
			      |	ВЫБОР
			      |		КОГДА ЕСТЬNULL(ТЕМППРОДАЖИ.Продажа, 0) > 0
			      |			ТОГДА 1
			      |		ИНАЧЕ 0
			      |	КОНЕЦ КАК ДеньРеализации
			      |ИЗ
			      |	Пустой_Шаблон КАК Пустой_Шаблон
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМПОстатокНаНачало КАК ТЕМПОстатокНаНачало
			      |		ПО (ТЕМПОстатокНаНачало.КодТовара = Пустой_Шаблон.КодТовара)
			      |			И (ТЕМПОстатокНаНачало.Дата = Пустой_Шаблон.Дата)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМППРОДАЖИОБОРОТЫ КАК ТЕМППРОДАЖИОбороты
			      |		ПО (ТЕМППРОДАЖИОбороты.Период = Пустой_Шаблон.Дата)
			      |			И (ТЕМППРОДАЖИОбороты.КодТовара = Пустой_Шаблон.КодТовара)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМППРОДАЖИ КАК ТЕМППРОДАЖИ
			      |		ПО (ТЕМППРОДАЖИ.Период = Пустой_Шаблон.Дата)
			      |			И (ТЕМППРОДАЖИ.КодТовара = Пустой_Шаблон.КодТовара)
			      |		ЛЕВОЕ СОЕДИНЕНИЕ ТемпЦены КАК ТЕМПЦЕНЫ
			      |		ПО (ТЕМПЦЕНЫ.КодТовара = Пустой_Шаблон.КодТовара)
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	Пустой_Шаблон.КодТовара,
			      |	Дата
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ВТДаты
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМПОстатокНаНачало
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМППРОДАЖИОбороты
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМППРОДАЖИ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТЕМПЦЕНЫ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ ТАБЛИЦАКОДОВ
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |УНИЧТОЖИТЬ Пустой_Шаблон";
			  
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТХТ;
		Запрос.УстановитьПараметр("Дата",ТекущаяДата());
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("АптекаКод",Аптека.Код);
		Запрос.УстановитьПараметр("Регион",Аптека.Регион);
		Запрос.УстановитьПараметр("НачПериода",КонецЧетвертыйПериод);
		Запрос.УстановитьПараметр("КонПериода",КонецДня(НачалоПервыйПериод));
		Запрос.УстановитьПараметр("НачалоПервыйПериод",НачалоПервыйПериод);
		Запрос.УстановитьПараметр("НачалоВторойПериод",НачалоВторойПериод);
		Запрос.УстановитьПараметр("НачалоТретийПериод",НачалоТретийПериод);
		Запрос.УстановитьПараметр("НачалоЧетвертыйПериод",НачалоЧетвертыйПериод);
		Запрос.УстановитьПараметр("КонецЧетвертыйПериод",КонецЧетвертыйПериод);
		Запрос.УстановитьПараметр("ПустойПоставщик",Справочники.Поставщики.ПустаяСсылка());
		Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ТабДат",ТаблицаДат);
		ТЗЗапроса = Запрос.Выполнить().Выгрузить();	
		ТЗЗапроса.Колонки.Добавить("ОстатокНаКонец");
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		//ЭлементыФормы.Инд.Значение = 0;
		//ЭлементыФормы.Инд.МаксимальноеЗначение = ТЗЗапроса.Количество();
		Вхождение = Истина;
		СтарыйТовар = 0;
		////Сообщить("Расчет остатка: " + ТекущаяДата());
		Для Каждого стр из ТЗЗапроса Цикл
			//ЭлементыФормы.Инд.Значение = ЭлементыФормы.Инд.Значение + 1;
			Если СтарыйТовар <> стр.Код Тогда
				ПредыдущийОстаток = стр.Остаток;//?(стр.Остаток = NULL,0, стр.Остаток);
				СтарыйТовар = стр.Код;
			КонецЕсли;
			
			стр.ОстатокНаКонец = ПредыдущийОстаток + стр.Оборот;//?(стр.Оборот = NULL,0,стр.Оборот);
			Если стр.Продажи = 0 и стр.ОстатокНаКонец = 0 Тогда  //Очищаем дни дефектура ( там где остаток = 0 и продаж не было)
				стр.ЕдиницаДляСвертки = 0;
			КонецЕсли;
			ПредыдущийОстаток = стр.ОстатокНаКонец;
			
		КонецЦикла;
		
		ТЗЗапроса.Сортировать("Код, Дата Убыв");
		
		ТЗЗапросаПоДатам = ТЗЗапроса.Скопировать();
		
		ТЗЗапросаПоДатам.Индексы.Добавить("Код,Периоды"); //Убрали
		
		//-------Свернем таблицу, чтобы посчитать дни продажи и количество продаж по периодам
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! 			ВНИМАНИЕ			!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! Если добавлять или удалять колонки, то ниже при расчете XYZ !!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!! надо изменить номера колонок ГруппаXYZ и  Отклонение  !!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//ТЗЗапроса.Свернуть("Код,Товар,ТоварСсылка,Периоды,Цена,МатрицаКуМин,МатрицаКуМакс,МатрицаНЗ,ПустойПоставщик,ПризнакРекламнойАкции,СрокДействияРекламнойАкции,ГруппаАП,Активный","Продажи,ЕдиницаДляСвертки");
		ТЗЗапроса.Свернуть("Код,Периоды,Цена,Активный","Продажи,ЕдиницаДляСвертки,СуммаЗакуп,ДеньРеализации");
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		//Скопируем и свернем ТЗ для Расчета XYZ
		ТЗЗапросаОбщиеИтоги = ТЗЗапроса.Скопировать(,"Код,Продажи,ЕдиницаДляСвертки,ДеньРеализации");
		ТЗЗапросаОбщиеИтоги.Свернуть("Код","Продажи,ЕдиницаДляСвертки,ДеньРеализации");
		ТЗЗапросаОбщиеИтоги.Индексы.Добавить("Код");
		
		// А теперь добавим необходимые колонки 
		ТЗЗапроса.Колонки.Добавить("СредняяСкорость",Новый ОписаниеТипов("Число"));
		ТЗЗапроса.Колонки.Добавить("ГруппаXYZ",Новый ОписаниеТипов("Строка"));
		ТЗЗапроса.Колонки.Добавить("Dx",Новый ОписаниеТипов("Число"));  // Отклонение
		
		//Расчитаем Группу XYZ
		Номер = 0;
        Сумма = 0;
		ГруппаXYZ = "";
		
		СтрокаИтогов = ТЗЗапросаОбщиеИтоги.Получить(0);
		Если (СтрокаИтогов.ЕдиницаДляСвертки = 0) или  (СтрокаИтогов.ЕдиницаДляСвертки = 1)  Тогда
			СредняяПродажа = 0;
			ПропуститьРасчетПоЭтомуТовару = Истина;
		Иначе
			СредняяПродажа = СтрокаИтогов.Продажи/СтрокаИтогов.ЕдиницаДляСвертки;
			ПропуститьРасчетПоЭтомуТовару = Ложь;
		КонецЕсли;
		
		Для каждого стр из ТЗЗапросаПоДатам Цикл
			Номер = Номер + 1;
			
			Если ПропуститьРасчетПоЭтомуТовару = Истина  Тогда
			Иначе		
				Если стр.ЕдиницаДляСвертки = 0 Тогда
				Иначе
					Сумма = Сумма + Pow((стр.Продажи - СредняяПродажа),2);
				КонецЕсли;
			КонецЕсли;
				
			
			Если Номер%28 = 0 Тогда
				Если ПропуститьРасчетПоЭтомуТовару = Ложь  Тогда
					Отклонение = Окр(Sqrt(Сумма/(СтрокаИтогов.ЕдиницаДляСвертки-1)),2);
					Dx = Отклонение;
					Если Отклонение > 0 и Отклонение <=0.3 Тогда
						ГруппаXYZ = "X";
					ИначеЕсли Отклонение > 0.3 и Отклонение <= 1.3 Тогда
						ГруппаXYZ = "Y";		
					ИначеЕсли Отклонение > 1.3 Тогда //и Отклонение <=4 Тогда
						ГруппаXYZ = "Z";
					//ИначеЕсли Отклонение > 4 Тогда
					//	ГруппаXYZ = "W";
					КонецЕсли;		
					Если ГруппаXYZ = "" Тогда					
					Иначе
						ТЗЗапроса.Получить(Номер/7-1).Установить(9,ГруппаXYZ);    //13
						ТЗЗапроса.Получить(Номер/7-1).Установить(10,Отклонение);   //14
					КонецЕсли;
				КонецЕсли;
				Попытка
					СтрокаИтогов = ТЗЗапросаОбщиеИтоги.Получить(Номер/28-1);
				Исключение
					////Сообщить("Последний номер" + Номер);
					Продолжить;
				КонецПопытки;
				Если (СтрокаИтогов.ЕдиницаДляСвертки = 0) или  (СтрокаИтогов.ЕдиницаДляСвертки = 1)  Тогда
					СредняяПродажа = 0;
					ПропуститьРасчетПоЭтомуТовару = Истина;
				Иначе
					СредняяПродажа = СтрокаИтогов.Продажи/СтрокаИтогов.ЕдиницаДляСвертки;
					ПропуститьРасчетПоЭтомуТовару = Ложь;
				КонецЕсли;
				Сумма = 0 ;
				ГруппаXYZ = "";
			КонецЕсли;
			
		КонецЦикла;
		
		
		
		ТЗЗапросаОбщиеИтоги = Неопределено;
		
		//Посчитаем скорости  по каждому периоду
		СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();
		КоличествоНедостоверныхПериодов = 0;
		
		//ДнейПродаж = 0;
		//КоличествоПродаж = 0;
		//ДнейРеализации = 0;
		Для каждого стр из ТЗЗапроса Цикл
			//ОбработкаПрерыванияПользователя();
			//ДнейПродаж = ДнейПродаж + стр.ЕдиницаДляСвертки;
			//ДнейРеализации = ДнейРеализации + стр.ДеньРеализации;
			//КоличествоПродаж = КоличествоПродаж + стр.Продажи;
			
			Если стр.Периоды = 4 Тогда
				//стр.ГруппаXYZ = РасчитатьXYZ(стр.Dx,ТЗЗапросаПоДатам,стр.Код,ДнейПродаж,КоличествоПродаж);
				//ДнейПродаж = 0;
				//КоличествоПродаж = 0;	
				//ДнейРеализации = 0;
				//Здесь считаем общую скорость за все периоды
				Если стр.ЕдиницаДляСвертки <=2 Тогда
					КоличествоНедостоверныхПериодов = КоличествоНедостоверныхПериодов + 1;
					Если КоличествоНедостоверныхПериодов = 4 Тогда
						КоличествоНедостоверныхПериодов = 0;
						стр.СредняяСкорость = 0;
						СоответствиеСкоростей.Очистить();
						СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();					
						Продолжить;
					КонецЕсли;
					затычка = 0;
					к=1;
					Пока затычка = 0 Цикл
						Если СоответствиеСкоростей["K"+(стр.Периоды-к)] = 0 Тогда
							к=к+1;
							Продолжить;
						Иначе
							//Сообщить(стр.Код);
							СоответствиеСкоростей["K"+(стр.Периоды-к)] = СоответствиеСкоростей["K"+стр.Периоды] + СоответствиеСкоростей["K"+(стр.Периоды-к)];
							СоответствиеСкоростей["K"+стр.Периоды] = 0;
							затычка=1;
						КонецЕсли;
					КонецЦикла;
				Иначе
					СкоростьЗаТекущийПериод = Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
					Если  СкоростьЗаТекущийПериод > 0 Тогда
						СкоростьЗаТекущийПериод = ФильтрацияВсплесков(ТЗЗапросаПоДатам,СкоростьЗаТекущийПериод,стр.Периоды,стр.Код,стр.ЕдиницаДляСвертки,ОпределениеНаличияВсплеска);  //Фильтруем всплески
					КонецЕсли;	
					СоответствиеСкоростей["V"+стр.Периоды] = СкоростьЗаТекущийПериод;//Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
				КонецЕсли;
				//В конце всех периодов посчитаем средневзвешенную скорость
				СредняяСкорость = 0;
				Для к = 1 по 4 цикл
					СредняяСкорость = СредняяСкорость + СоответствиеСкоростей["K"+к]*СоответствиеСкоростей["V"+к];
				КонецЦикла;
				
				стр.СредняяСкорость = Окр(СредняяСкорость,3);
				СоответствиеСкоростей.Очистить();
				СоответствиеСкоростей = СоздатьИЗаполнитьСоответствиеСкоростей();
				КоличествоНедостоверныхПериодов = 0;
			ИНаче
				Если стр.ЕдиницаДляСвертки <=2 Тогда
					КоличествоНедостоверныхПериодов = КоличествоНедостоверныхПериодов + 1;
					СоответствиеСкоростей["K"+(стр.Периоды+1)] = СоответствиеСкоростей["K"+стр.Периоды] + СоответствиеСкоростей["K"+(стр.Периоды+1)];
					СоответствиеСкоростей["K"+стр.Периоды] = 0;
				Иначе
					СкоростьЗаТекущийПериод = Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
					Если  СкоростьЗаТекущийПериод > 0 Тогда
						СкоростьЗаТекущийПериод = ФильтрацияВсплесков(ТЗЗапросаПоДатам,СкоростьЗаТекущийПериод,стр.Периоды,стр.Код,стр.ЕдиницаДляСвертки,ОпределениеНаличияВсплеска); //Фильтруем всплески
					КонецЕсли;	
					СоответствиеСкоростей["V"+стр.Периоды] = СкоростьЗаТекущийПериод;//Окр(стр.Продажи/стр.ЕдиницаДляСвертки,3);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		////Сообщить(ТекущаяДата());
		ТЗЗапросаПоДатам = Неопределено; //Освобождаем таблицу, ибо жрет много памяти	
	
		Возврат ТЗЗапроса;
		
КонецФункции


Функция РасчетАвтозаказаСервер(Параметры) Экспорт
	
	ДатаТочкиОтсчета					= Параметры.ДатаТочкиОтсчета;
    ВыборРасчета						= Параметры.ВыборРасчета;
	Аптека								= Параметры.Аптека;
	ВозвращатьПромежуточныеТаблицы		= Параметры.ВозвращатьПромежуточныеТаблицы;
	ДополнительноеУсловие				= Параметры.ДополнительноеУсловие;
	
	ТаблицаДатРасчета = Новый ТаблицаЗначений();
	ТаблицаДатРасчета.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	
	к = 28;
	НомерПериода = 5;
	Пока к > 0 Цикл	
		Если к%7 = 0 Тогда
			НомерПериода = НомерПериода - 1;
			Если НомерПериода = 4 Тогда
				КонецЧетвертыйПериод = НачалоДня(ДатаТочкиОтсчета) - к*24*60*60;			
			ИначеЕсли НомерПериода = 3 Тогда
				НачалоЧетвертыйПериод = НачалоДня(ДатаТочкиОтсчета) - к*24*60*60;
			ИначеЕсли НомерПериода = 2 Тогда
				НачалоТретийПериод = НачалоДня(ДатаТочкиОтсчета) - к*24*60*60;
			ИначеЕсли НомерПериода = 1 Тогда
				НачалоВторойПериод = НачалоДня(ДатаТочкиОтсчета) - к*24*60*60;
			КонецЕсли;			
		КонецЕсли;
		стр = ТаблицаДатРасчета.Добавить();
		стр.Дата = НачалоДня(ДатаТочкиОтсчета) - к*24*60*60;
		к = к - 1;
	КонецЦикла;	
	НачалоПервыйПериод = стр.Дата;
	
	ПараметрыРасчета = Автозаказ.ПолучитьПараметрыРасчетаАвтозаказаПоАптеке(Аптека);
	ПараметрыРасчета.Вставить("ВозвращатьПромежуточныеТаблицы",ВозвращатьПромежуточныеТаблицы);
	ПараметрыРасчета.Вставить("ДополнительноеУсловие",ДополнительноеУсловие);
		
	ТаблицаРасчетаСкорости = Автозаказ.ПолучитьТаблицуРасчетаСкоростейПродаж(Аптека,ТаблицаДатРасчета,ПараметрыРасчета, Новый Структура("НачалоПервыйПериод, НачалоВторойПериод, НачалоТретийПериод, НачалоЧетвертыйПериод, КонецЧетвертыйПериод", НачалоПервыйПериод, НачалоВторойПериод, НачалоТретийПериод, НачалоЧетвертыйПериод, КонецЧетвертыйПериод),ДополнительноеУсловие);

	Если ТаблицаРасчетаСкорости.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	//////////////////////////////////////////////////////////////////////////////////
	ТЗКуминКумаксРасчетная = Неопределено;
	ТаблицаАвтозаказа = Неопределено;
	//Рассчитаем Qmin-Qmax
	Если ВыборРасчета = 1 или ВыборРасчета = 3 Тогда
		ТЗКуминКумаксРасчетная = РассчитатьQminQmaxДляАптеки(ТаблицаРасчетаСкорости, Аптека, ПараметрыРасчета);
	КонецЕсли;
	
	
	//////////////////////////////////////////////////////////////////////////////////
	//Рассчитаем Автозаказ
	Если ВыборРасчета = 2 или ВыборРасчета = 3 Тогда
		ТаблицаАвтозаказа = РасчетАвтозаказаОкончательный(ТаблицаРасчетаСкорости, Аптека,ПараметрыРасчета);
	КонецЕсли;	
	
	Возврат Новый Структура("ТЗКуминКумаксРасчетная,ТаблицаАвтозаказа",ТЗКуминКумаксРасчетная,ТаблицаАвтозаказа);
	
	
	
КонецФункции

Процедура ОбновитьДатуРасчетаКоэффициента(Аптека, Реквизит) Экспорт 
	
	НаборЗаписей = РегистрыСведений.ДатыРасчетаКоэффициентов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Склад.Установить(Аптека);
	НаборЗаписей.Прочитать();

	Если НаборЗаписей.Количество() = 0 Тогда
		Запись = НаборЗаписей.Добавить();
		Запись.Склад = Аптека;
	Иначе
		Запись = НаборЗаписей[0];
	КонецЕсли;
	
	Если Реквизит = "ABC" Тогда
		Запись.ДатаРасчетаABC = ТекущаяДата();
	ИначеЕсли Реквизит = "Автозаказ" Тогда
		Запись.ДатаРасчетаАвтозаказа = ТекущаяДата();
	Иначе
		Запись.ДатаРасчетаСкорости = ТекущаяДата();
	КонецЕсли;
	
	Для ы=0 по 3 Цикл
		Попытка
			НаборЗаписей.Записать();
			Прервать;
		Исключение
			ОбщегоНазначения.Задержка(2);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьСтруктуруДатРасчетовКоэффициентов(Аптека) Экспорт
	
	СтруктураВозврата = Новый Структура("ДатаРасчетаABC, ДатаРасчетаСкорости, ДатаРасчетаАвтозаказа", '00010101', '00010101', '00010101');
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ 
	|	ДатыРасчетаКоэффициентов.ДатаРасчетаABC,
	|	ДатыРасчетаКоэффициентов.ДатаРасчетаСкорости,
	|	ДатыРасчетаКоэффициентов.ДатаРасчетаАвтозаказа
	|ИЗ
	|	РегистрСведений.ДатыРасчетаКоэффициентов КАК ДатыРасчетаКоэффициентов
	|ГДЕ
	|	ДатыРасчетаКоэффициентов.Склад = &Склад";
	
	Запрос.УстановитьПараметр("Склад", Аптека);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СтруктураВозврата;
	Иначе
		Возврат РезультатЗапроса.Выгрузить()[0];
	КонецЕсли;	
	
КонецФункции

Функция ПолучитьСтруктуруДатРасчетаСпроса(КодАптеки) Экспорт
	
	СтруктураВозврата = Новый Структура("ДатаРасчета", '00010101');
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ 
	|	ДатыРасчетаКоэффициентов.ДатаРасчета
	|ИЗ
	|	РегистрСведений.ВосстановленныйСпросДатыРасчета КАК ДатыРасчетаКоэффициентов
	|ГДЕ
	|	ДатыРасчетаКоэффициентов.КодАптеки = &КодАптеки";
	
	Запрос.УстановитьПараметр("КодАптеки", КодАптеки);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СтруктураВозврата;
	Иначе
		Возврат РезультатЗапроса.Выгрузить()[0];
	КонецЕсли;	
	
КонецФункции


Процедура УдалениеРасчетовЗаказов(СрокХранения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ 
	|	СохраненныеРасчетыЗаказов.Период,
	|	СохраненныеРасчетыЗаказов.Пользователь,
	|	СохраненныеРасчетыЗаказов.Склад,
	|	СохраненныеРасчетыЗаказов.ИдентификаторЗаписи
	|ИЗ
	|	РегистрСведений.СохраненныеРасчетыЗаказов КАК СохраненныеРасчетыЗаказов
	|ГДЕ
	|	СохраненныеРасчетыЗаказов.Период < &Период";
	
	Запрос.УстановитьПараметр("Период", НачалоДня(ТекущаяДата() - СрокХранения * 86400));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.СохраненныеРасчетыЗаказов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторЗаписи.Установить(Выборка.ИдентификаторЗаписи);
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.Пользователь.Установить(Выборка.Пользователь);
		НаборЗаписей.Отбор.Склад.Установить(Выборка.Склад);
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

//=============================  РАСЧЕТ ТОРГОВ ================================================
Функция РасчетТорговПоАптеке(Выборка,Параметры) Экспорт
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ЕстьОшибки",Ложь);
	СтруктураВозврата.Вставить("ОписаниеОшибки","");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачДата",НачалоДня(ТекущаяДата())-Параметры.КоличествоДнейПродаж*24*60*60);
	Запрос.УстановитьПараметр("КонДата",НачалоДня(ТекущаяДата())-1);
	Запрос.УстановитьПараметр("КодСклада",Выборка.КодСклада);
	Запрос.УстановитьПараметр("Склад",Выборка.Склад);
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("ДатаРасчета",НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("КоличествоДнейПродаж",Параметры.КоличествоДнейПродаж);
	Запрос.УстановитьПараметр("КоличествоДнейПотребности",Параметры.КоличествоДнейПотребности);
	
	Запрос.Текст = "ВЫБРАТЬ
	      |	ОстаткиОптовыхСкладов.Товар.Код КАК КодТовара,
	      |	ОстаткиОптовыхСкладов.Товар КАК Товар,
	      |	ОстаткиОптовыхСкладов.Товар.ЗакупочнаяЦена КАК ЦенаПроизводителя,
	      |	ОстаткиОптовыхСкладов.Товар.МинимальныйЗаказ КАК МинЗак,
	      |	СУММА(ОстаткиОптовыхСкладов.Количество) КАК Количество
	      |ПОМЕСТИТЬ Товары
	      |ИЗ
	      |	РегистрСведений.ОстаткиОптовыхСкладов КАК ОстаткиОптовыхСкладов
	      |ГДЕ
	      |	НЕ ОстаткиОптовыхСкладов.Товар = ЗНАЧЕНИЕ(Справочник.Ассортиментный_План.ПустаяСсылка)
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	ОстаткиОптовыхСкладов.Товар,
	      |	ОстаткиОптовыхСкладов.Товар.Код,
	      |	ОстаткиОптовыхСкладов.Товар.МинимальныйЗаказ,
	      |	ОстаткиОптовыхСкладов.Товар.ЗакупочнаяЦена
	      |
	      |ИМЕЮЩИЕ
	      |	СУММА(ОстаткиОптовыхСкладов.Количество) > 5
	      |
	      |ИНДЕКСИРОВАТЬ ПО
	      |	ОстаткиОптовыхСкладов.Товар.Код
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	ЗаказПоставщикуОстатки.Товар КАК Товар,
	      |	ЗаказПоставщикуОстатки.КоличествоОстаток КАК ВПути
	      |ПОМЕСТИТЬ ТоварыВПути
	      |ИЗ
	      |	РегистрНакопления.ЗаказПоставщику.Остатки(, склад = &Склад) КАК ЗаказПоставщикуОстатки
	      |ГДЕ
	      |	ЗаказПоставщикуОстатки.КоличествоОстаток > 0
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	МатрицаНЗ.Товар,
	      |	МАКСИМУМ(МатрицаНЗ.НЗ) КАК НЗ
	      |ПОМЕСТИТЬ МатрицаНЗ
	      |ИЗ
	      |	РегистрСведений.МатрицаНЗ КАК МатрицаНЗ
	      |ГДЕ
	      |	МатрицаНЗ.Аптека = &Склад
	      |	И МатрицаНЗ.ДатаНачалаАкции <= &ТекДата
	      |	И МатрицаНЗ.СрокДействияРекламы > &ТекДата
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	МатрицаНЗ.Товар
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	Остатки.Товар КАК Товар,
	      |	СУММА(ВЫРАЗИТЬ(Остатки.КолвоОстаток / Остатки.Партия.К КАК ЧИСЛО(12, 0))) КАК колвоостаток
	      |ПОМЕСТИТЬ Остатки
	      |ИЗ
	      |	РегистрНакопления.ПартииЖНВЛС.Остатки(, склад = &Склад) КАК Остатки
	      |ГДЕ
	      |	Остатки.КолвоОстаток > 0
	      |	И Остатки.Партия.К > 0
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	Остатки.Товар,
	      |	Остатки.Склад
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
	      |	РеализацииККМ.КодТовара,
	      |	СУММА(РеализацииККМ.Количество / РеализацииККМ.К) КАК Продажи
	      |ПОМЕСТИТЬ Продажи
	      |ИЗ
	      |	РегистрНакопления.РеализацииККМ КАК РеализацииККМ
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Товары КАК Товары
	      |		ПО (Товары.КодТовара = РеализацииККМ.КодТовара)
	      |ГДЕ
	      |	РеализацииККМ.Период МЕЖДУ &НачДата И &КонДата
	      |	И РеализацииККМ.КодСклада = &КодСклада
	      |
	      |СГРУППИРОВАТЬ ПО
	      |	РеализацииККМ.КодТовара
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |ВЫБРАТЬ
		  |	&ДатаРасчета как ДатаРасчета,
		  |	&КодСклада как КодСклада,
	      |	Товары.КодТовара,
	      |	Товары.ЦенаПроизводителя как Цена,
	      |	Товары.МинЗак,
	      |	Товары.Количество,
	      |	ЕСТЬNULL(_МатрицаНЗ.НЗ, 0) КАК НЗ,
	      |	ЕСТЬNULL(_ТоварыВПути.ВПути, 0) КАК ВПути,
	      |	ЕСТЬNULL(_Остатки.колвоостаток, 0) КАК Остаток,
	      |	ЕСТЬNULL(_Продажи.Продажи, 0) КАК Продажи,
	      |	ВЫРАЗИТЬ(ЕСТЬNULL(_Продажи.Продажи, 0) / &КоличествоДнейПродаж * &КоличествоДнейПотребности - ЕСТЬNULL(_Остатки.колвоостаток, 0) - ЕСТЬNULL(_ТоварыВПути.ВПути, 0) КАК ЧИСЛО(12, 0)) КАК ПотребностьРасчетная,
	      |	0 КАК Потребность,
		  | ЛОЖЬ как ЕстьПотребность
	      |ИЗ
	      |	Товары КАК Товары
	      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Матрица КАК _Матрица
	      |		ПО (_Матрица.Аптека = &Склад)
	      |			И (_Матрица.Товар = Товары.Товар)
	      |		ЛЕВОЕ СОЕДИНЕНИЕ Продажи КАК _Продажи
	      |		ПО (_Продажи.КодТовара = Товары.КодТовара)
	      |		ЛЕВОЕ СОЕДИНЕНИЕ МатрицаНЗ КАК _МатрицаНЗ
	      |		ПО (_МатрицаНЗ.Товар = Товары.Товар)
	      |		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК _Остатки
	      |		ПО (_Остатки.Товар = Товары.Товар)
	      |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВПути КАК _ТоварыВПути
	      |		ПО (_ТоварыВПути.Товар = Товары.Товар)
		  |ГДЕ ВЫРАЗИТЬ(ЕСТЬNULL(_Продажи.Продажи, 0) / &КоличествоДнейПродаж * &КоличествоДнейПотребности - ЕСТЬNULL(_Остатки.колвоостаток, 0) - ЕСТЬNULL(_ТоварыВПути.ВПути, 0) КАК ЧИСЛО(12,0)) > 0 или ЕСТЬNULL(_МатрицаНЗ.НЗ, 0) > 0
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ Товары
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ ТоварыВПути
	      |;
	      |
	      |////////////////////////////////////////////////////////////////////////////////
	      |УНИЧТОЖИТЬ МатрицаНЗ
	      |;
	      |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ Остатки
		  |;
		  |
		  |////////////////////////////////////////////////////////////////////////////////
		  |УНИЧТОЖИТЬ Продажи";
		  
		  ТЗ = Запрос.Выполнить().Выгрузить();
		  
		  Для каждого стр из ТЗ ЦИкл
			  
			  Если стр.ПотребностьРасчетная > 0 или стр.НЗ > 0 Тогда                                
				  Если стр.ПотребностьРасчетная <=0 Тогда
					  стр.Потребность = ?(стр.НЗ - стр.Остаток <0,0,стр.НЗ - стр.Остаток);
				  Иначе
					  стр.Потребность = Макс(Окр(стр.ПотребностьРасчетная,0),Окр(стр.НЗ-стр.Остаток,0));
					  стр.Потребность = Макс(стр.Потребность,стр.МинЗак,0);	
				  КонецЕсли;
				  
				  Если стр.МинЗак > 0 Тогда  // ТЗ Маркетинг + Санакоев от 24.11.2014
					  стр.Потребность = Окр(стр.Потребность/стр.МинЗак,0)*стр.МинЗак;
				  КонецЕсли;
				  Если стр.Потребность > 0 Тогда
					  стр.ЕстьПотребность = Истина;
				  КонецЕсли;
			  Иначе
				  стр.Потребность = 0;
			  КонецЕсли;
			  
		  КонецЦикла;
		  
		  Отбор = Новый Структура;
		  Отбор.Вставить("ЕстьПотребность",Истина);
		  Набор = РегистрыСведений.РасчетТоргов.СоздатьНаборЗаписей();
		  Набор.Отбор.ДатаРасчета.Установить(НачалоДня(ТекущаяДата()));
		  Набор.Отбор.КодСклада.Установить(Выборка.КодСклада);
		  Набор.Загрузить(ТЗ.Скопировать(Отбор));
		  Попытка
			  Набор.Записать();
		  Исключение
			  	СтруктураВозврата.Вставить("ЕстьОшибки",Истина);
				СтруктураВозврата.Вставить("ОписаниеОшибки",ОписаниеОшибки());
		  КонецПопытки;

		  ТЗ = Неопределено;
		  
		  Возврат СтруктураВозврата;
	
КонецФункции

//===================================================================================================================
//=============================  РАСЧЕТ ВОССТАНОВЛЕННОГО СПРОСА и УД ================================================

Функция ПолучитьТаблицуАптекДляСпроса(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Выборка.Аптека,
	               |	Выборка.КодАптеки,
	               |	СУММА(Выборка.КоличествоВыручек) КАК КоличествоВыручек,
	               |	ЕСТЬNULL(ПерелицензированныеАптеки.СтараяАптека.Код, 0) КАК СтарыйКодАптеки,
	               |	ПерелицензированныеАптеки.СтараяАптека
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		МХ.Ссылка КАК Аптека,
	               |		РеализацияККМ.СкладКод КАК КодАптеки,
	               |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ)) КАК КоличествоВыручек
	               |	ИЗ
	               |		Документ.УЗ_РеализацияККМ КАК РеализацияККМ
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МХ
	               |			ПО (МХ.Код = РеализацияККМ.СкладКод)
	               |	ГДЕ
	               |		НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &НачПериода И &КонПериода
	               |		И РеализацияККМ.Проведен = ИСТИНА
	               |		И МХ.НаПрямыхПоставках
	               |		И МХ.ПометкаУдаления = ЛОЖЬ
	               |		И МХ.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		МХ.Ссылка,
	               |		РеализацияККМ.СкладКод
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ПерелицензированныеАптеки.НоваяАптека,
	               |		ПерелицензированныеАптеки.НоваяАптека.Код,
	               |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ))
	               |	ИЗ
	               |		Документ.УЗ_РеализацияККМ КАК РеализацияККМ
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПерелицензированныеАптеки КАК ПерелицензированныеАптеки
	               |			ПО РеализацияККМ.СкладКод = ПерелицензированныеАптеки.СтараяАптека.Код
	               |	ГДЕ
	               |		НАЧАЛОПЕРИОДА(РеализацияККМ.Дата, ДЕНЬ) МЕЖДУ &НачПериода И &КонПериода
	               |		И РеализацияККМ.Проведен = ИСТИНА
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ПерелицензированныеАптеки.НоваяАптека,
	               |		ПерелицензированныеАптеки.НоваяАптека.Код) КАК Выборка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПерелицензированныеАптеки КАК ПерелицензированныеАптеки
	               |		ПО Выборка.КодАптеки = ПерелицензированныеАптеки.НоваяАптека.Код
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Выборка.Аптека,
	               |	Выборка.КодАптеки,
	               |	ЕСТЬNULL(ПерелицензированныеАптеки.СтараяАптека.Код, 0),
	               |	ПерелицензированныеАптеки.СтараяАптека
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(Выборка.КоличествоВыручек) >= 77";
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(ПараметрыРасчета.НачПериода));				   
	Запрос.УстановитьПараметр("КонПериода",КонецДня(ПараметрыРасчета.КонПериода));	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции


Функция ЗафиксироватьАктивностьРасчетаСпроса(КодАптеки)
	
	МЗ = РегистрыСведений.ВосстановленныйСпросТекущийРасчет.СоздатьМенеджерЗаписи();
	МЗ.КодАптеки = КодАптеки;
	МЗ.ДатаНачалаРасчета = ТекущаяДата();
	Попытка
		МЗ.Записать(Ложь);
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Функция УдалитьАктивностьРасчетаСпроса(КодАптеки)
	
	МЗ = РегистрыСведений.ВосстановленныйСпросТекущийРасчет.СоздатьМенеджерЗаписи();
	МЗ.КодАптеки = КодАптеки;
	МЗ.Прочитать();
	Если МЗ.Выбран() Тогда
		МЗ.Удалить();
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ЗафиксироватьДатуРасчетаСпроса(КодАптеки)
	
	МЗ = РегистрыСведений.ВосстановленныйСпросДатыРасчета.СоздатьМенеджерЗаписи();
	МЗ.КодАптеки = КодАптеки;
	МЗ.ДатаРасчета = ТекущаяДата();
	МЗ.Записать();
	
КонецПроцедуры

Функция ВернутьТекстЗапросаСпроса(КодТовара = 0, стр)
	
	Если КодТовара = 0 Тогда
		Если стр.СтарыйКодАптеки > 0 Тогда
			ТХТ = "ВЫБРАТЬ
			      |	Т.Дата
			      |ПОМЕСТИТЬ ВтДаты
			      |ИЗ
			      |	&Таб КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	АССОРТИМЕНТНЫЙ_ПЛАН.Код,
			      |	АССОРТИМЕНТНЫЙ_ПЛАН.КодОП
			      |ПОМЕСТИТЬ КодыОП
			      |ИЗ
			      |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
			      |ГДЕ
			      |	АССОРТИМЕНТНЫЙ_ПЛАН.КодОП > 0
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВТДаты.Дата КАК Дата,
			      |	Движения.КодТовара КАК КодТовара,
			      |	СУММА(ВЫБОР
			      |			КОГДА Движения.ДатаДень = ВТДаты.Дата
			      |				ТОГДА Движения.Оборот
			      |			ИНАЧЕ 0
			      |		КОНЕЦ) КАК Оборот,
			      |	СУММА(ВЫБОР
			      |			КОГДА ВыборкаПродаж.ДатаДень = ВТДаты.Дата
			      |				ТОГДА ЕСТЬNULL(ВыборкаПродаж.Продажа, 0)
			      |			ИНАЧЕ 0
			      |		КОНЕЦ) КАК Продажи,
			      |	СУММА(ВЫБОР
			      |			КОГДА ВыборкаПродаж.ДатаДень = ВТДаты.Дата
			      |				ТОГДА ЕСТЬNULL(ВыборкаПродаж.Продажа, 0)
			      |			ИНАЧЕ 0
			      |		КОНЕЦ) КАК Продажи2,
			      |	СУММА(ВЫБОР
			      |			КОГДА Движения.ДатаДень = &НачПериода
			      |				ТОГДА Движения.Остаток
			      |			ИНАЧЕ 0
			      |		КОНЕЦ) КАК Остаток
			      |ИЗ
			      |	ВтДаты КАК ВТДаты,
			      |	(ВЫБРАТЬ
			      |		Выборка.Период КАК ДатаДень,
			      |		Выборка.КодТовара КАК КодТовара,
			      |		СУММА(Выборка.Оборот) КАК Оборот,
			      |		СУММА(Выборка.Остаток) КАК Остаток
			      |	ИЗ
			      |		(ВЫБРАТЬ
			      |			ВЫБОР
			      |				КОГДА ЕСТЬNULL(КодыОП.Код, 0) > 0
			      |					ТОГДА КодыОП.КодОП
			      |				ИНАЧЕ Рег.ТоварКод
			      |			КОНЕЦ КАК КодТовара,
			      |			НАЧАЛОПЕРИОДА(Рег.Период, ДЕНЬ) КАК Период,
			      |			Рег.ПартияКод КАК ПартияКод,
			      |			Рег.КоличествоОборот / П.К КАК Оборот,
			      |			Рег.КоличествоНачальныйОстаток / П.К КАК Остаток
			      |		ИЗ
			      |			РегистрНакопления.УЗ_Партии.ОстаткиИОбороты(&НачПериода, &КонПериода, ДЕНЬ, , СкладКод В (&СписокСкладов)) КАК Рег
			      |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК П
			      |				ПО Рег.ПартияКод = П.Код
			      |				ЛЕВОЕ СОЕДИНЕНИЕ КодыОП КАК КодыОП
			      |				ПО (КодыОП.Код = Рег.ТоварКод)) КАК Выборка
			      |	
			      |	СГРУППИРОВАТЬ ПО
			      |		Выборка.КодТовара,
			      |		Выборка.Период) КАК Движения
			      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			      |			НАЧАЛОПЕРИОДА(УЗ_РеализацииККМ.Период, ДЕНЬ) КАК ДатаДень,
			      |			ВЫБОР
			      |				КОГДА ЕСТЬNULL(КодыОП.Код, 0) > 0
			      |					ТОГДА КодыОП.КодОП
			      |				ИНАЧЕ УЗ_РеализацииККМ.ТоварКод
			      |			КОНЕЦ КАК КодТовара,
			      |			СУММА(УЗ_РеализацииККМ.Количество / УЗ_РеализацииККМ.К) КАК Продажа
			      |		ИЗ
			      |			РегистрНакопления.УЗ_РеализацииККМ КАК УЗ_РеализацииККМ
			      |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК КодыОП
			      |				ПО (КодыОП.Код = УЗ_РеализацииККМ.ТоварКод)
			      |					И (КодыОП.КодОП > 0)
			      |		ГДЕ
			      |			УЗ_РеализацииККМ.Период МЕЖДУ &НачПериода И &КонПериода
			      |			И УЗ_РеализацииККМ.СкладКод В(&СписокСкладов)
			      |		
			      |		СГРУППИРОВАТЬ ПО
			      |			НАЧАЛОПЕРИОДА(УЗ_РеализацииККМ.Период, ДЕНЬ),
			      |			ВЫБОР
			      |				КОГДА ЕСТЬNULL(КодыОП.Код, 0) > 0
			      |					ТОГДА КодыОП.КодОП
			      |				ИНАЧЕ УЗ_РеализацииККМ.ТоварКод
			      |			КОНЕЦ) КАК ВыборкаПродаж
			      |		ПО (ВыборкаПродаж.ДатаДень = Движения.ДатаДень)
			      |			И (ВыборкаПродаж.КодТовара = Движения.КодТовара)
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВТДаты.Дата,
			      |	Движения.КодТовара
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	КодТовара,
			      |	Дата
			      |ИТОГИ
			      |	СРЕДНЕЕ(Продажи),
			      |	СУММА(Продажи2)
			      |ПО
			      |	КодТовара";
		Иначе
			ТХТ = "ВЫБРАТЬ
			      |	Т.Дата
			      |ПОМЕСТИТЬ ВтДаты
			      |ИЗ
			      |	&Таб КАК Т
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	АССОРТИМЕНТНЫЙ_ПЛАН.Код,
			      |	АССОРТИМЕНТНЫЙ_ПЛАН.КодОП
			      |ПОМЕСТИТЬ КодыОП
			      |ИЗ
			      |	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АССОРТИМЕНТНЫЙ_ПЛАН
			      |ГДЕ
			      |	АССОРТИМЕНТНЫЙ_ПЛАН.КодОП > 0
			      |;
			      |
			      |////////////////////////////////////////////////////////////////////////////////
			      |ВЫБРАТЬ
			      |	ВТДаты.Дата КАК Дата,
			      |	Движения.КодТовара КАК КодТовара,
			      |	СУММА(ВЫБОР
			      |			КОГДА Движения.ДатаДень = ВТДаты.Дата
			      |				ТОГДА Движения.Оборот
			      |			ИНАЧЕ 0
			      |		КОНЕЦ) КАК Оборот,
			      |	СУММА(ВЫБОР
			      |			КОГДА ВыборкаПродаж.ДатаДень = ВТДаты.Дата
			      |				ТОГДА ЕСТЬNULL(ВыборкаПродаж.Продажа, 0)
			      |			ИНАЧЕ 0
			      |		КОНЕЦ) КАК Продажи,
			      |	СУММА(ВЫБОР
			      |			КОГДА ВыборкаПродаж.ДатаДень = ВТДаты.Дата
			      |				ТОГДА ЕСТЬNULL(ВыборкаПродаж.Продажа, 0)
			      |			ИНАЧЕ 0
			      |		КОНЕЦ) КАК Продажи2,
			      |	СУММА(ВЫБОР
			      |			КОГДА Движения.ДатаДень = &НачПериода
			      |				ТОГДА Движения.Остаток
			      |			ИНАЧЕ 0
			      |		КОНЕЦ) КАК Остаток
			      |ИЗ
			      |	ВтДаты КАК ВТДаты,
			      |	(ВЫБРАТЬ
			      |		Выборка.Период КАК ДатаДень,
			      |		Выборка.КодТовара КАК КодТовара,
			      |		СУММА(Выборка.Оборот) КАК Оборот,
			      |		СУММА(Выборка.Остаток) КАК Остаток
			      |	ИЗ
			      |		(ВЫБРАТЬ
			      |			ВЫБОР
			      |				КОГДА ЕСТЬNULL(КодыОП.Код, 0) > 0
			      |					ТОГДА КодыОП.КодОП
			      |				ИНАЧЕ Рег.ТоварКод
			      |			КОНЕЦ КАК КодТовара,
			      |			НАЧАЛОПЕРИОДА(Рег.Период, ДЕНЬ) КАК Период,
			      |			Рег.ПартияКод КАК ПартияКод,
			      |			Рег.КоличествоОборот / П.К КАК Оборот,
			      |			Рег.КоличествоНачальныйОстаток / П.К КАК Остаток
			      |		ИЗ
			      |			РегистрНакопления.УЗ_Партии.ОстаткиИОбороты(&НачПериода, &КонПериода, ДЕНЬ, , СкладКод = &СкладКод) КАК Рег
			      |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК П
			      |				ПО Рег.ПартияКод = П.Код
			      |				ЛЕВОЕ СОЕДИНЕНИЕ КодыОП КАК КодыОП
			      |				ПО (КодыОП.Код = Рег.ТоварКод)) КАК Выборка
			      |	
			      |	СГРУППИРОВАТЬ ПО
			      |		Выборка.КодТовара,
			      |		Выборка.Период) КАК Движения
			      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			      |			НАЧАЛОПЕРИОДА(УЗ_РеализацииККМ.Период, ДЕНЬ) КАК ДатаДень,
			      |			ВЫБОР
			      |				КОГДА ЕСТЬNULL(КодыОП.Код, 0) > 0
			      |					ТОГДА КодыОП.КодОП
			      |				ИНАЧЕ УЗ_РеализацииККМ.ТоварКод
			      |			КОНЕЦ КАК КодТовара,
			      |			СУММА(УЗ_РеализацииККМ.Количество / УЗ_РеализацииККМ.К) КАК Продажа
			      |		ИЗ
			      |			РегистрНакопления.УЗ_РеализацииККМ КАК УЗ_РеализацииККМ
			      |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК КодыОП
			      |				ПО (КодыОП.Код = УЗ_РеализацииККМ.ТоварКод)
			      |					И (КодыОП.КодОП > 0)
			      |		ГДЕ
			      |			УЗ_РеализацииККМ.Период МЕЖДУ &НачПериода И &КонПериода
			      |			И УЗ_РеализацииККМ.СкладКод = &СкладКод
			      |		
			      |		СГРУППИРОВАТЬ ПО
			      |			НАЧАЛОПЕРИОДА(УЗ_РеализацииККМ.Период, ДЕНЬ),
			      |			ВЫБОР
			      |				КОГДА ЕСТЬNULL(КодыОП.Код, 0) > 0
			      |					ТОГДА КодыОП.КодОП
			      |				ИНАЧЕ УЗ_РеализацииККМ.ТоварКод
			      |			КОНЕЦ) КАК ВыборкаПродаж
			      |		ПО (ВыборкаПродаж.ДатаДень = Движения.ДатаДень)
			      |			И (ВыборкаПродаж.КодТовара = Движения.КодТовара)
			      |
			      |СГРУППИРОВАТЬ ПО
			      |	ВТДаты.Дата,
			      |	Движения.КодТовара
			      |
			      |УПОРЯДОЧИТЬ ПО
			      |	КодТовара,
			      |	Дата
			      |ИТОГИ
			      |	СРЕДНЕЕ(Продажи),
			      |	СУММА(Продажи2)
			      |ПО
			      |	КодТовара";
		КонецЕсли;
	Иначе
		ТХТ = "ВЫБРАТЬ
		      |	Т.Дата
		      |ПОМЕСТИТЬ ВтДаты
		      |ИЗ
		      |	&Таб КАК Т
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	ВТДаты.Дата КАК Дата,
		      |	Движения.КодТовара КАК КодТовара,
		      |	СУММА(ВЫБОР
		      |			КОГДА Движения.ДатаДень = ВТДаты.Дата
		      |				ТОГДА Движения.Оборот
		      |			ИНАЧЕ 0
		      |		КОНЕЦ) КАК Оборот,
		      |	СУММА(ВЫБОР
		      |			КОГДА ВыборкаПродаж.ДатаДень = ВТДаты.Дата
		      |				ТОГДА ЕСТЬNULL(ВыборкаПродаж.Продажа, 0)
		      |			ИНАЧЕ 0
		      |		КОНЕЦ) КАК Продажи,
		      |	СУММА(ВЫБОР
		      |			КОГДА ВыборкаПродаж.ДатаДень = ВТДаты.Дата
		      |				ТОГДА ЕСТЬNULL(ВыборкаПродаж.Продажа, 0)
		      |			ИНАЧЕ 0
		      |		КОНЕЦ) КАК Продажи2,
		      |	СУММА(ВЫБОР
		      |			КОГДА Движения.ДатаДень = &НачПериода
		      |				ТОГДА Движения.Остаток
		      |			ИНАЧЕ 0
		      |		КОНЕЦ) КАК Остаток
		      |ИЗ
		      |	ВтДаты КАК ВТДаты,
		      |	(ВЫБРАТЬ
		      |		Выборка.Период КАК ДатаДень,
		      |		Выборка.КодТовара КАК КодТовара,
		      |		СУММА(Выборка.Оборот) КАК Оборот,
		      |		СУММА(Выборка.Остаток) КАК Остаток
		      |	ИЗ
		      |		(ВЫБРАТЬ
		      |			ВЫБОР
		      |				КОГДА ЕСТЬNULL(КодыОП.Код, 0) > 0
		      |					ТОГДА КодыОП.КодОП
		      |				ИНАЧЕ Рег.ТоварКод
		      |			КОНЕЦ КАК КодТовара,
		      |			НАЧАЛОПЕРИОДА(Рег.Период, ДЕНЬ) КАК Период,
		      |			Рег.ПартияКод КАК ПартияКод,
		      |			Рег.КоличествоОборот / П.К КАК Оборот,
		      |			Рег.КоличествоНачальныйОстаток / П.К КАК Остаток
		      |		ИЗ
		      |			РегистрНакопления.УЗ_Партии.ОстаткиИОбороты(
		      |					&НачПериода,
		      |					&КонПериода,
		      |					День,
		      |					,
		      |					ТоварКод = &КодТовара
		      |						И СкладКод = &СкладКод) КАК Рег
		      |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК П
		      |				ПО Рег.ПартияКод = П.Код
		      |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК КодыОП
		      |				ПО (КодыОП.Код = Рег.ТоварКод)
		      |					И (КодыОП.Код = &КодТовара)) КАК Выборка
		      |	
		      |	СГРУППИРОВАТЬ ПО
		      |		Выборка.КодТовара,
		      |		Выборка.Период) КАК Движения
		      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		      |			НАЧАЛОПЕРИОДА(УЗ_РеализацииККМ.Период, ДЕНЬ) КАК ДатаДень,
		      |			ВЫБОР
		      |				КОГДА ЕСТЬNULL(КодыОП.Код, 0) > 0
		      |					ТОГДА КодыОП.КодОП
		      |				ИНАЧЕ УЗ_РеализацииККМ.ТоварКод
		      |			КОНЕЦ КАК КодТовара,
		      |			СУММА(УЗ_РеализацииККМ.Количество / УЗ_РеализацииККМ.К) КАК Продажа
		      |		ИЗ
		      |			РегистрНакопления.УЗ_РеализацииККМ КАК УЗ_РеализацииККМ
		      |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК КодыОП
		      |				ПО (КодыОП.Код = УЗ_РеализацииККМ.ТоварКод)
		      |					И (КодыОП.Код = &КодТовара)
		      |		ГДЕ
		      |			УЗ_РеализацииККМ.Период МЕЖДУ &НачПериода И &КонПериода
		      |			И УЗ_РеализацииККМ.СкладКод = &СкладКод
		      |			И УЗ_РеализацииККМ.ТоварКод = &КодТовара
		      |		
		      |		СГРУППИРОВАТЬ ПО
		      |			НАЧАЛОПЕРИОДА(УЗ_РеализацииККМ.Период, ДЕНЬ),
		      |			ВЫБОР
		      |				КОГДА ЕСТЬNULL(КодыОП.Код, 0) > 0
		      |					ТОГДА КодыОП.КодОП
		      |				ИНАЧЕ УЗ_РеализацииККМ.ТоварКод
		      |			КОНЕЦ) КАК ВыборкаПродаж
		      |		ПО (ВыборкаПродаж.ДатаДень = Движения.ДатаДень)
		      |			И (ВыборкаПродаж.КодТовара = Движения.КодТовара)
		      |
		      |СГРУППИРОВАТЬ ПО
		      |	ВТДаты.Дата,
		      |	Движения.КодТовара
		      |
		      |УПОРЯДОЧИТЬ ПО
		      |	КодТовара,
		      |	Дата
		      |ИТОГИ
		      |	СРЕДНЕЕ(Продажи),
		      |	СУММА(Продажи2)
		      |ПО
		      |	КодТовара";				   
	КонецЕсли;
	
	Возврат ТХТ;
	
КонецФункции

Функция РассчитатьМедиану(т_РасчетМедианы)
	
	Количество = т_РасчетМедианы.Количество();
	Если Количество = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	т_РасчетМедианы.Сортировать("Продажа");
	
	Если Цел(Количество/2)=Количество/2  Тогда
		Номер1 = Количество/2;
		Номер2 = Количество/2 + 1;
		Медиана = ( т_РасчетМедианы.Получить(Номер1-1).Продажа + т_РасчетМедианы.Получить(Номер2-1).Продажа ) / 2;
	Иначе
		Медиана =  т_РасчетМедианы.Получить((Количество+1)/2-1).Продажа
	КонецЕсли;
	
	Возврат Медиана;
	
КонецФункции

Процедура РассчитатьВосстановленныйСпрос() Экспорт

	ТЗДат = Новый ТаблицаЗначений;
	ТЗДат.Колонки.Добавить("Дата",Новый ОписаниеТипов("Дата"));
	
	КонПериода = НачалоДня(ТекущаяДата()) - 1;
	НачПериода = НачалоДня(КонПериода - 24*60*60*90);
	
	мДата = НачПериода;
	текДата = НачалоДня(ТекущаяДата());
	
	Для к = 1 По 90 Цикл
		НоваяДата = ТЗДат.Добавить();
		НоваяДата.Дата = мДата;
		мДата = мДата + 86400;
	КонецЦикла;

	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("НачПериода",НачПериода);
	ПараметрыРасчета.Вставить("КонПериода",КонПериода);
	
	
	ТаблицаАптек = ПолучитьТаблицуАптекДляСпроса(ПараметрыРасчета);
	
	Для каждого стр из ТаблицаАптек Цикл
		
		//ОбработкаПрерыванияПользователя();
		
		ДатыРасчетов = ПолучитьСтруктуруДатРасчетаСпроса(стр.КодАптеки);
		Если НачалоДня(ДатыРасчетов.ДатаРасчета) = текДата Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗафиксироватьАктивностьРасчетаСпроса(стр.КодАптеки) = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		ВыбАптека = стр.Аптека;
		КодАптеки = стр.КодАптеки;
		СписокКодовАптек = Новый СписокЗначений;
		СписокКодовАптек.Добавить(стр.КодАптеки);		
		

		Запрос = Новый Запрос;
		Запрос.Текст = ВернутьТекстЗапросаСпроса(,стр);
		//Запрос.УстановитьПараметр("КодТовара",КодТовара);
		Запрос.УстановитьПараметр("СкладКод",КодАптеки);
		Запрос.УстановитьПараметр("НачПериода",НачПериода);
		Запрос.УстановитьПараметр("КонПериода",КонПериода);
		Если стр.СтарыйКодАптеки > 0 Тогда
			СписокКодовАптек.Добавить(стр.СтарыйКодАптеки);
			Запрос.УстановитьПараметр("СписокСкладов",СписокКодовАптек);
		КонецЕсли;
		Запрос.УстановитьПараметр("Таб",ТЗДат);
		
	т_Параметры = Новый ТаблицаЗначений;
	т_Параметры.Колонки.Добавить("КодАптеки");
	т_Параметры.Колонки.Добавить("КодТовара");
	т_Параметры.Колонки.Добавить("СредняяПродажа");
	т_Параметры.Колонки.Добавить("ДнейПродаж");
	т_Параметры.Колонки.Добавить("СуммаПродаж");
	т_Параметры.Колонки.Добавить("СуммаПродажОчищенных");
	т_Параметры.Колонки.Добавить("СуммаПродажЗаПоследнийМесяц");
	т_Параметры.Колонки.Добавить("СуммаПродажОчищенныхЗаМесяц");
	т_Параметры.Колонки.Добавить("ДнейСОстатком");
	т_Параметры.Колонки.Добавить("Д_аном");
	т_Параметры.Колонки.Добавить("МедианаПродаж");
	т_Параметры.Колонки.Добавить("ВВП");
	т_Параметры.Колонки.Добавить("УД");
	т_Параметры.Колонки.Добавить("Спрос");
	т_Параметры.Колонки.Добавить("Сигма");
	т_Параметры.Колонки.Добавить("КоэффициентВариации");
	т_Параметры.Колонки.Добавить("XYZ");
	т_Параметры.Колонки.Добавить("СреднийЗапас");
	
	т_Товар = Новый ТаблицаЗначений;
	т_Товар.Колонки.Добавить("КодТовара");
	т_Товар.Колонки.Добавить("ДатаДень");
	т_Товар.Колонки.Добавить("Остаток");
	т_Товар.Колонки.Добавить("Продажа");
	т_Товар.Колонки.Добавить("ПродажаОчищенная");
	т_Товар.Колонки.Добавить("Спрос");
	
	т_РасчетМедианы = Новый ТаблицаЗначений;
	т_РасчетМедианы.Колонки.Добавить("Ном");	
	т_РасчетМедианы.Колонки.Добавить("Продажа");	
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		УдалитьАктивностьРасчетаСпроса(КодАптеки);
		Продолжить;
	КонецЕсли;
	
	ВыборкаИтогов = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Сообщить("конец запроса " + ТекущаяДата() );
	Пока ВыборкаИтогов.Следующий() Цикл  //Группировка по товару 
		
		т_Товар.Очистить();  		//очищаем таблицу
		т_РасчетМедианы.Очистить(); //очищаем таблицу
		
		СредняяПродажа	= Окр(ВыборкаИтогов.Продажи,3);
		СуммаПродаж		= ВыборкаИтогов.Продажи2;
		СуммаПродажЗаПоследнийМесяц = 0;
		ДнейПродаж	= 0;
		ДнейСОстатком = 0;
		Д_аном 			= 0; //Д_аном = СредняяПродажа + 3*Сигма
		СРКО			= 0; 
		Ном = 0;
		СуммаКвадратов 	= 0;
		ВВП = 0;
		День = 0 ;
		Сигма = 0;
		КоэффициентВариации = 0;
		ОстатокНаКонецДня = 0;
		ОбщийОстаток = 0;
		
		ВыбТов = ВыборкаИтогов.Выбрать();

		Пока ВыбТов.Следующий() Цикл    
			День = День  + 1;
			
			Если День > 60 Тогда
				СуммаПродажЗаПоследнийМесяц = СуммаПродажЗаПоследнийМесяц + ВыбТов.Продажи;	
			КонецЕсли;
			
			Если День = 1 Тогда
				Остаток = ВыбТов.Остаток; //Получили остаток на начала дня 
			Иначе
				Остаток = ОстатокНаКонецДня;
			КонецЕсли;
			
			ОстатокНаКонецДня = Остаток + ВыбТов.Оборот;
			
			
			Если Остаток > 0 Тогда
				ДнейСОстатком = ДнейСОстатком + 1;	
			КонецЕсли;
			
			нс = т_Товар.Добавить();
			нс.КодТовара	= ВыбТов.КодТовара;
			нс.ДатаДень		= ВыбТов.Дата;
			нс.Остаток		= Остаток;
			нс.Продажа		= ВыбТов.Продажи;
			нс.ПродажаОчищенная		= 0;
			нс.Спрос		= 0;
			
			
			Если ВыбТов.Продажи > 0 Тогда
				Ном = Ном +1;
				ДнейПродаж = ДнейПродаж + 1;
				
				нс = т_РасчетМедианы.Добавить();
				нс.Ном = Ном;
				нс.Продажа = ВыбТов.Продажи;
			КонецЕсли;
			СуммаКвадратов = СуммаКвадратов + Pow((ВыбТов.Продажи - СредняяПродажа),2)
			
			
		КонецЦикла;
		
		ВВП 	= ?(ДнейСОстатком> 0 , ДнейПродаж/ДнейСОстатком , 0); // здесь надо уточнить какое значение присваивать ВВП при ДнейСОстатком = 0		
		Сигма	= Sqrt(СуммаКвадратов/90);
		КоэффициентВариации = ?(СредняяПродажа = 0 , 0 , Окр(Сигма/СредняяПродажа,3));
		Д_аном	= СредняяПродажа + 3*Сигма;
		Медиана = РассчитатьМедиану(т_РасчетМедианы);
		СпросЗаПоследнийМесяц = 0;    
		СуммаПродажОчищенных = 0;
		СуммаПродажОчищенныхЗаПоследнийМесяц = 0;
		н=0;
		Для каждого стр из т_Товар Цикл
			//Ощищаем продажи
			Если стр.Продажа > Д_аном Тогда
				стр.ПродажаОчищенная = Медиана;
			Иначе
				стр.ПродажаОчищенная = стр.Продажа;
			КонецЕсли;			
			
			СуммаПродажОчищенных = СуммаПродажОчищенных + стр.ПродажаОчищенная;
			
			//Если стр.Продажа > Медиана Тогда
			//	стр.Спрос = стр.ПродажаОчищенная;
			//Иначе
			//	Если стр.Остаток < Медиана Тогда
			//		стр.Спрос = стр.ПродажаОчищенная;
			//	Иначе
			//		стр.Спрос = Медиана*ВВП;
			//	КонецЕсли;
			//КонецЕсли;
			Если стр.Остаток < Медиана Тогда
				Если стр.Продажа > Медиана Тогда
					стр.Спрос = стр.ПродажаОчищенная;
				Иначе
					стр.Спрос = Медиана*ВВП;
				КонецЕсли;
			Иначе
				стр.Спрос = стр.ПродажаОчищенная;
			КонецЕсли;
			
			
			н=н+1;
			Если н > 60 Тогда
				СпросЗаПоследнийМесяц = СпросЗаПоследнийМесяц + стр.Спрос;	
				СуммаПродажОчищенныхЗаПоследнийМесяц = СуммаПродажОчищенныхЗаПоследнийМесяц + стр.ПродажаОчищенная;
			КонецЕсли;
			
			ОбщийОстаток = ОбщийОстаток + стр.Остаток ;
			
			
		КонецЦикла;
		
		нс = т_Параметры.Добавить();
		нс.КодАптеки = КодАптеки;
		нс.КодТовара		= ВыборкаИтогов.КодТовара;
		нс.СредняяПродажа	= СредняяПродажа;
		нс.ДнейПродаж		= ДнейПродаж;		
		нс.СуммаПродаж		= СуммаПродаж;
		нс.СуммаПродажОчищенных = СуммаПродажОчищенных;
		нс.СуммаПродажЗаПоследнийМесяц = СуммаПродажЗаПоследнийМесяц;
		нс.ДнейСОстатком	= ДнейСОстатком;
		нс.Д_аном 			= Окр(Д_аном,3);
		нс.МедианаПродаж 	= Медиана;
		нс.ВВП				= Окр(ВВП,2);
		нс.Спрос			= Окр(СпросЗаПоследнийМесяц,3);
		нс.Сигма			= Окр(Сигма,3);
		нс.СреднийЗапас		= Окр(ОбщийОстаток/90,3);
		нс.СуммаПродажОчищенныхЗаМесяц  = СуммаПродажОчищенныхЗаПоследнийМесяц; 
		УД = Окр(?(нс.Спрос> 0 , СуммаПродажОчищенныхЗаПоследнийМесяц/нс.Спрос , 0),4);
		УД = ?( УД > 1 , 1 , УД);
		Если УД > 0 Тогда
		 	нс.УД = УД;
		Иначе
			Если ОбщийОстаток/90 < Медиана и нс.Спрос = 0 Тогда
				нс.УД = 0;
			Иначе
				нс.УД = 1;
			КонецЕсли;
		КонецЕсли;
		нс.КоэффициентВариации = КоэффициентВариации;
		Если КоэффициентВариации <= 0.3 Тогда
			нс.XYZ = "X";
		ИначеЕсли КоэффициентВариации > 0.5 Тогда
			нс.XYZ = "Z";
		Иначе
			нс.XYZ = "Y";
		КонецЕсли;
		
		
	КонецЦикла;

		
		НЗ = РегистрыСведений.ВосстановленныйСпрос.СоздатьНаборЗаписей();
		НЗ.Отбор.КодАптеки.Установить(КодАптеки);
		НЗ.Загрузить(т_Параметры);
		НЗ.Записать();
		
		ЗафиксироватьДатуРасчетаСпроса(КодАптеки);
		УдалитьАктивностьРасчетаСпроса(КодАптеки);
		
	КонецЦикла;
	//Скорости.Загрузить(ТЗСкоростей);
	
КонецПроцедуры

//===================================================================================================================
//===============================================  РАСЧЕТ ABC =======================================================

Функция ПолучитьТаблицуАптекДляABC()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВосстановленныйСпросДатыРасчета.КодАптеки,
	               |	МХ.Ссылка КАК Аптека
	               |ИЗ
	               |	РегистрСведений.ВосстановленныйСпросДатыРасчета КАК ВосстановленныйСпросДатыРасчета
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МХ
	               |		ПО (МХ.Код = ВосстановленныйСпросДатыРасчета.КодАптеки)
	               |ГДЕ
	               |	ВосстановленныйСпросДатыРасчета.ДатаРасчета >= ДОБАВИТЬКДАТЕ(&ТекДата, ДЕНЬ, -2)";
	Запрос.УстановитьПараметр("ТекДата",НачалоДня(ТекущаяДата()));				   

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции


Функция ЗафиксироватьАктивностьРасчетаABC(КодАптеки)
	
	МЗ = РегистрыСведений.ABCТекущийРасчет.СоздатьМенеджерЗаписи();
	МЗ.КодАптеки = КодАптеки;
	МЗ.ДатаНачалаРасчета = ТекущаяДата();
	Попытка
		МЗ.Записать(Ложь);
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Функция УдалитьАктивностьРасчетаABC(КодАптеки)
	
	МЗ = РегистрыСведений.ABCТекущийРасчет.СоздатьМенеджерЗаписи();
	МЗ.КодАптеки = КодАптеки;
	МЗ.Прочитать();
	Если МЗ.Выбран() Тогда
		МЗ.Удалить();
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ЗафиксироватьДатуРасчетаABC(КодАптеки)
	
	МЗ = РегистрыСведений.ABCДатыРасчета.СоздатьМенеджерЗаписи();
	МЗ.КодАптеки = КодАптеки;
	МЗ.ДатаРасчета = ТекущаяДата();
	МЗ.Записать();
	
КонецПроцедуры

Функция ВернутьТекстЗапросаABC()
	
		ТХТ = "ВЫБРАТЬ
		      |	ВЫБОР
		      |		КОГДА ЕСТЬNULL(КодыОП.Код, 0) > 0
		      |			ТОГДА КодыОП.КодОП
		      |		ИНАЧЕ УЗ_РеализацииККМ.ТоварКод
		      |	КОНЕЦ КАК КодТовара,
		      |	СРЕДНЕЕ(УЗ_РеализацииККМ.СуммаЗакупСНДС / (УЗ_РеализацииККМ.Количество / УЗ_РеализацииККМ.К)) КАК ЦенаЗакуп,
		      |	СУММА(УЗ_РеализацииККМ.СуммаРозн - УЗ_РеализацииККМ.СуммаЗакупСНДС) / СУММА(УЗ_РеализацииККМ.Количество / УЗ_РеализацииККМ.К) КАК МаржаНаценка
		      |ПОМЕСТИТЬ ТЕМППРОДАЖИ
		      |ИЗ
		      |	РегистрНакопления.УЗ_РеализацииККМ КАК УЗ_РеализацииККМ
		      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК КодыОП
		      |		ПО (КодыОП.Код = УЗ_РеализацииККМ.ТоварКод)
		      |			И (КодыОП.КодОП > 0)
		      |ГДЕ
		      |	УЗ_РеализацииККМ.СкладКод = &КодАптеки
		      |	И УЗ_РеализацииККМ.Период МЕЖДУ &НачПериода И &КонПериода  и УЗ_РеализацииККМ.Количество  >0
		      |
		      |СГРУППИРОВАТЬ ПО
		      |	ВЫБОР
		      |		КОГДА ЕСТЬNULL(КодыОП.Код, 0) > 0
		      |			ТОГДА КодыОП.КодОП
		      |		ИНАЧЕ УЗ_РеализацииККМ.ТоварКод
		      |	КОНЕЦ
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	ВосстановленныйСпрос.КодТовара,
		      |	ВосстановленныйСпрос.Спрос,
		      |	ЕСТЬNULL(ТЕМППРОДАЖИ.МаржаНаценка, 0) КАК МаржаНаценка,
		      |	ЕСТЬNULL(ТЕМППРОДАЖИ.ЦенаЗакуп, 0) КАК ЦенаЗакуп
		      |ПОМЕСТИТЬ СпросПродажи
		      |ИЗ
		      |	РегистрСведений.ВосстановленныйСпрос КАК ВосстановленныйСпрос
		      |		ЛЕВОЕ СОЕДИНЕНИЕ ТЕМППРОДАЖИ КАК ТЕМППРОДАЖИ
		      |		ПО (ТЕМППРОДАЖИ.КодТовара = ВосстановленныйСпрос.КодТовара)
		      |ГДЕ
		      |	ВосстановленныйСпрос.КодАптеки = &КодАптеки
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |ВЫБРАТЬ
		      |	&КодАптеки КАК КодАптеки,
		      |	СпросПродажи.КодТовара,
		      |	СпросПродажи.Спрос,
		      |	СпросПродажи.МаржаНаценка,
		      |	СпросПродажи.ЦенаЗакуп
		      |ИЗ
		      |	СпросПродажи КАК СпросПродажи
		      |
		      |ОБЪЕДИНИТЬ ВСЕ
		      |
		      |ВЫБРАТЬ
		      |	&КодАптеки,
		      |	Выборка.Товар.Код,
		      |	0,
		      |	0,
		      |	0
		      |ИЗ
		      |	РегистрСведений.Матрица КАК Выборка
		      |		ЛЕВОЕ СОЕДИНЕНИЕ СпросПродажи КАК СпросПродажи
		      |		ПО (СпросПродажи.КодТовара = Выборка.Товар.Код)
		      |ГДЕ
		      |	Выборка.Аптека = &Аптека
		      |	И СпросПродажи.КодТовара ЕСТЬ NULL
		      |	И Выборка.Товар.КодОП = 0
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ СпросПродажи
		      |;
		      |
		      |////////////////////////////////////////////////////////////////////////////////
		      |УНИЧТОЖИТЬ ТЕМППРОДАЖИ";

	
	Возврат ТХТ;
	
КонецФункции

Функция ПолучитьСтруктуруДатРасчетаABC(КодАптеки) Экспорт
	
	СтруктураВозврата = Новый Структура("ДатаРасчета", '00010101');
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДатыРасчета.ДатаРасчета
	|ИЗ
	|	РегистрСведений.ABCДатыРасчета КАК ДатыРасчета
	|ГДЕ
	|	ДатыРасчета.КодАптеки = &КодАптеки";
	
	Запрос.УстановитьПараметр("КодАптеки", КодАптеки);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СтруктураВозврата;
	Иначе
		Возврат РезультатЗапроса.Выгрузить()[0];
	КонецЕсли;	
	
КонецФункции


Процедура РассчитатьABC() Экспорт

	

		КонПериода = НачалоДня(ТекущаяДата()) - 1;
		НачПериода = НачалоДня(КонПериода - 24*60*60*90);
		ПроцентА = 80;
		ПроцентБ = 15;

	    ТекДата = НачалоДня(ТекущаяДата());
	
	ТаблицаАптек = ПолучитьТаблицуАптекДляABC();
	
	Для каждого стр из ТаблицаАптек Цикл
		
		//ОбработкаПрерыванияПользователя();
		
		ДатыРасчетов = ПолучитьСтруктуруДатРасчетаABC(стр.КодАптеки);
		Если НачалоДня(ДатыРасчетов.ДатаРасчета) = текДата Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗафиксироватьАктивностьРасчетаABC(стр.КодАптеки) = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		КодАптеки = стр.КодАптеки;
		//СписокКодовАптек = Новый СписокЗначений;
		//СписокКодовАптек.Добавить(стр.КодАптеки);		
		

		Запрос = Новый Запрос;
		Запрос.Текст = ВернутьТекстЗапросаABC();
		Запрос.УстановитьПараметр("КодАптеки",КодАптеки);
		Запрос.УстановитьПараметр("Аптека",стр.Аптека);

		Запрос.УстановитьПараметр("НачПериода",НачПериода);
		Запрос.УстановитьПараметр("КонПериода",КонПериода);
		//Если стр.СтарыйКодАптеки > 0 Тогда
		//	СписокКодовАптек.Добавить(стр.СтарыйКодАптеки);
		//	Запрос.УстановитьПараметр("СписокСкладов",СписокКодовАптек);
		//КонецЕсли;
		//Запрос.УстановитьПараметр("Таб",ТЗДат);
		
		ТЗЗапроса = Запрос.Выполнить().Выгрузить();
		////--------------------------------	
		//Посчитаем общие суммы и количества
		СпросИтог			= ТЗЗапроса.Итог("Спрос");
		МаржаНаценкаИтог 	= ТЗЗапроса.Итог("МаржаНаценка");
		ЦенаЗакупИтог		= ТЗЗапроса.Итог("ЦенаЗакуп");
		
		//Посчитаем проценты
		Процентов80 = Окр(СпросИтог*ПроцентА/100,2);
		Процентов95 = Окр(СпросИтог*(ПроцентА + ПроцентБ)/100,2);
		
		ТЗЗапроса.Колонки.Добавить("ГруппаПоСпросу");
		ТЗЗапроса.Колонки.Добавить("ГруппаПоМарже");
		ТЗЗапроса.Колонки.Добавить("ГруппаПоЦенеЗакуп");
		ТЗЗапроса.Колонки.Добавить("ГруппаИтог");

		
		//Считаем ABC по количеству
		ТЗЗапроса.Сортировать("Спрос Убыв");
		
		//Состояние("Расчет ABC по количеству упаковок....");
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			НакопительнаяСумма = НакопительнаяСумма + стр.Спрос;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаПоСпросу = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаПоСпросу = "B";
			Иначе
				Если стр.Спрос = NULL или стр.Спрос = 0 Тогда
					стр.ГруппаПоСпросу = "D";
				Иначе
					стр.ГруппаПоСпросу = "C";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		//Считаем ABC по выручке
		Процентов80 = Окр(МаржаНаценкаИтог*ПроцентА/100,2);
		Процентов95 = Окр(МаржаНаценкаИтог*(ПроцентА + ПроцентБ)/100,2);	
		ТЗЗапроса.Сортировать("МаржаНаценка Убыв");
		
		//Состояние("Расчет ABC по сумме выручки....");
		//ЭлементыФормы.Индикатор.Значение = 0;
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			НакопительнаяСумма = НакопительнаяСумма + стр.МаржаНаценка;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаПоМарже = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаПоМарже = "B";
			Иначе
				Если стр.МаржаНаценка = NULL или стр.МаржаНаценка = 0 Тогда
					стр.ГруппаПоМарже = "D";
				Иначе
					стр.ГруппаПоМарже = "C";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
		
		
		//Считаем ABC по валовой прибыли
		Процентов80 = Окр(ЦенаЗакупИтог*ПроцентА/100,2);
		Процентов95 = Окр(ЦенаЗакупИтог*(ПроцентА + ПроцентБ)/100,2);	
		ТЗЗапроса.Сортировать("ЦенаЗакуп Убыв");
		
		//Состояние("Расчет ABC по сумме валовой прибыли....");
		
		НакопительнаяСумма = 0;
		Для Каждого стр из ТЗЗапроса Цикл
			НакопительнаяСумма = НакопительнаяСумма + стр.ЦенаЗакуп;
			Если НакопительнаяСумма <=Процентов80 Тогда
				стр.ГруппаПоЦенеЗакуп = "A";
			ИначеЕсли (НакопительнаяСумма > Процентов80) и (НакопительнаяСумма <= Процентов95) Тогда
				стр.ГруппаПоЦенеЗакуп = "B";
			Иначе
				Если стр.ЦенаЗакуп = NULL или стр.ЦенаЗакуп = 0 Тогда
					стр.ГруппаПоЦенеЗакуп = "D";
				Иначе
					стр.ГруппаПоЦенеЗакуп = "C";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для каждого стр из ТЗЗапроса Цикл
			стр.ГруппаИтог = ""+стр.ГруппаПоСпросу + "" + стр.ГруппаПоМарже + "" + стр.ГруппаПоЦенеЗакуп;	
		КонецЦикла;

		
		НЗ = РегистрыСведений.ABCРасчет.СоздатьНаборЗаписей();
		НЗ.Отбор.КодАптеки.Установить(КодАптеки);
		НЗ.Загрузить(ТЗЗапроса);
		НЗ.Записать();
		
		ЗафиксироватьДатуРасчетаABC(КодАптеки);
		УдалитьАктивностьРасчетаABC(КодАптеки);
		
	КонецЦикла;
	//Скорости.Загрузить(ТЗСкоростей);
	
КонецПроцедуры
