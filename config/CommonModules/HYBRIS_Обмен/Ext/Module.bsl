Функция ЭтоHYBRIS(Объект)
	
	Если Объект.ТипЗаказа = Перечисления.ИЗ_Типы.Бронирование и Объект.ИсточникИнтернетЗаказа.Код = 11 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ЕстьОбменССайтом(Объект)
	
	Если Объект.ТипЗаказа = Перечисления.ИЗ_Типы.Бронирование и Объект.ИсточникИнтернетЗаказа.ПередаватьСтатусыНаСайт = Истина Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьSMSИмяОтправителя(Склад)
	
	Возврат Склад.Бренд.SMSИмяОтправителя;
	
КонецФункции

Функция ПолучитьПризнакПередачи(Статус366)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	HYBRIS_СтатусыЗаказа.ПередаватьНаСайт КАК ПередаватьНаСайт
	               |ИЗ
	               |	РегистрСведений.HYBRIS_СтатусыЗаказа КАК HYBRIS_СтатусыЗаказа
	               |ГДЕ
	               |	HYBRIS_СтатусыЗаказа.Статус366 = &Статус366";
	Запрос.УстановитьПараметр("Статус366",Статус366);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ПередаватьНаСайт;
	КонецЕсли;
КонецФункции

Процедура ЗаписатьИзменение(Ссылка)
	
	МЗ = РегистрыСведений.HYBRIS_ОбменСтатусами.СоздатьМенеджерЗаписи();
	МЗ.Объект = Ссылка;
	МЗ.Прочитать();
	МЗ.Объект = Ссылка;
	МЗ.ДатаЗаписи = ТекущаяДата();
	МЗ.Индекс = МЗ.Индекс + 1;
	МЗ.Записать(Истина);
	
КонецПроцедуры

Процедура ЗаписатьУдаление(Ссылка)
	
	МЗ = РегистрыСведений.HYBRIS_ОбменСтатусами.СоздатьМенеджерЗаписи();
	МЗ.Объект = Ссылка;
	МЗ.Прочитать();
	МЗ.Объект = Ссылка;
	МЗ.ДатаЗаписи = ТекущаяДата();
	МЗ.Индекс = МЗ.Индекс + 1;
	МЗ.Удаление = Истина;
	МЗ.Записать(Истина);
	
КонецПроцедуры

Процедура ЗафиксироватьИзменения(Ссылка, Объект, РежимЗаписи) Экспорт
	
	//ТипЗнчСсылка = ТипЗнч(Ссылка);
	
	//Если ТипЗнчСсылка = Тип("ДокументСсылка.УЗ_СменаККМ") Тогда
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Если ЕстьОбменССайтом(Объект) Тогда
			Если ПолучитьПризнакПередачи(Объект.СтатусЗаказаПокупателя) = Истина Тогда
				ЗаписатьИзменение(Ссылка);
			КонецЕсли;
			
			Если Объект.ИсточникИнтернетЗаказа.ИнформированиеSms = Истина Тогда
				
				Если СтрДлина(Объект.Телефон) < 10 Тогда
					Возврат;
				КонецЕсли;
				
				SMSИмяОтправителя = ПолучитьSMSИмяОтправителя(Объект.Склад);
				
				Если Объект.СтатусЗаказаПокупателя <> Ссылка.СтатусЗаказаПокупателя Тогда
					Телефон = СокрЛП(Объект.Телефон);
					Если СтрДлина(Телефон) = 10 Тогда
						Телефон = "7" + Телефон;
					КонецЕсли;

					Если Объект.СтатусЗаказаПокупателя = Справочники.СтатусыЗаказаПокупателя.SHIPPED Тогда
						ПараметрыСМС = Новый Структура;
						ПараметрыСМС.Вставить("Логин","apteka-ave");
						ПараметрыСМС.Вставить("Пароль","mEkZ8gjO");
						ПараметрыСМС.Вставить("Отправитель",SMSИмяОтправителя); //"APTEKA_36.6"
						ПараметрыСМС.Вставить("ТекстСМС","Заказ " + СокрЛП(Объект.НомерИнтернетЗаказа) + " принят аптекой. Ожидайте SMS о готовности.");
						Попытка
							МодульРегламентныхЗаданий.ОтправитьСМС(ПараметрыСМС,Телефон);	
							ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Отправка sms",ПараметрыСеанса.ТекущийСотр,"Отправлено sms в работе",,);
						Исключение
							ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Отправка sms",ПараметрыСеанса.ТекущийСотр,"Ошибка отправки sms",,);
						КонецПопытки;

					ИначеЕсли Объект.СтатусЗаказаПокупателя = Справочники.СтатусыЗаказаПокупателя.НайтиПоКоду(8) Тогда
						Сумма = 0;
						Для каждого стр из Объект.Заказ Цикл
							Сумма = Сумма + стр.Количество*стр.ЦенаРозн;	
						КонецЦикла;
						
						Если Сумма > 0 Тогда
							ПараметрыСМС = Новый Структура;
							ПараметрыСМС.Вставить("Логин","apteka-ave");
							ПараметрыСМС.Вставить("Пароль","mEkZ8gjO");
							ПараметрыСМС.Вставить("Отправитель",SMSИмяОтправителя);
							ПараметрыСМС.Вставить("ТекстСМС","Заказ " + СокрЛП(Объект.НомерИнтернетЗаказа) + " на сумму " + Формат(Сумма,"ЧГ=0") + "р. ждет Вас по адресу " + СокрЛП(Объект.Склад.НаименованиеПоКлассификатору) + " в течение 24 ч.");
							Попытка
								МодульРегламентныхЗаданий.ОтправитьСМС(ПараметрыСМС,Телефон);	
								ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Отправка sms",ПараметрыСеанса.ТекущийСотр,"Отправлено sms о готовности",,);
							Исключение
								ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Отправка sms",ПараметрыСеанса.ТекущийСотр,"Ошибка отправки sms о готовности",,);
							КонецПопытки;
							
						КонецЕсли;
					ИначеЕсли Объект.СтатусЗаказаПокупателя = Справочники.СтатусыЗаказаПокупателя.SENDBACK или Объект.СтатусЗаказаПокупателя = Справочники.СтатусыЗаказаПокупателя.TIMEOUT  Тогда
						ПараметрыСМС = Новый Структура;
						ПараметрыСМС.Вставить("Логин","apteka-ave");
						ПараметрыСМС.Вставить("Пароль","mEkZ8gjO");
						ПараметрыСМС.Вставить("Отправитель",SMSИмяОтправителя);
						ПараметрыСМС.Вставить("ТекстСМС","Заказ " + СокрЛП(Объект.НомерИнтернетЗаказа) + " отменен.");
						Попытка
							МодульРегламентныхЗаданий.ОтправитьСМС(ПараметрыСМС,Телефон);	
							ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Отправка sms",ПараметрыСеанса.ТекущийСотр,"Отправлено sms об отмене заказа",,);
						Исключение
							ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Ссылка,"Отправка sms",ПараметрыСеанса.ТекущийСотр,"Ошибка отправки sms об отмене заказа",,);
						КонецПопытки;
						
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		
			Если Объект.ИсточникИнтернетЗаказа.ИнформированиеSms = Истина Тогда
				
				Если СтрДлина(Объект.Телефон) < 10 Тогда
					Возврат;
				КонецЕсли;
				
					Телефон = СокрЛП(Объект.Телефон);
					Если СтрДлина(Телефон) = 10 Тогда
						Телефон = "7" + Телефон;
					КонецЕсли;

					Если Объект.СтатусЗаказаПокупателя = Справочники.СтатусыЗаказаПокупателя.SHIPPED Тогда
						
						SMSИмяОтправителя = ПолучитьSMSИмяОтправителя(Объект.Склад);

						ПараметрыСМС = Новый Структура;
						ПараметрыСМС.Вставить("Логин","apteka-ave");
						ПараметрыСМС.Вставить("Пароль","mEkZ8gjO");
						ПараметрыСМС.Вставить("Отправитель",SMSИмяОтправителя);
						ПараметрыСМС.Вставить("ТекстСМС","Заказ " + СокрЛП(Объект.НомерИнтернетЗаказа) + " принят аптекой. Ожидайте SMS о готовности.");
						Попытка
							МодульРегламентныхЗаданий.ОтправитьСМС(ПараметрыСМС,Телефон);	
							ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Объект.Ссылка,"Отправка sms",ПараметрыСеанса.ТекущийСотр,"Отправлено sms в работе",,);
						Исключение
							ОбщегоНазначения.ЗаписатьИсториюИзмененияДокумента(Объект.Ссылка,"Отправка sms",ПараметрыСеанса.ТекущийСотр,"Ошибка отправки sms",,);
						КонецПопытки;

					КонецЕсли;
					
			КонецЕсли;		
		
	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры


Процедура HYBRIS_Обмен_ПередЗаписьюПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
		
	ЗафиксироватьИзменения(Источник.Ссылка,Источник,РежимЗаписи);
	
КонецПроцедуры


Процедура HYBRIS_Обмен_ПередУдалениемПередУдалением(Источник, Отказ) Экспорт
	
	Если ЗначениеЗаполнено(Источник.Ссылка) Тогда
		ЗаписатьУдаление(Источник.Ссылка);
	КонецЕсли;
	
КонецПроцедуры


Процедура ОтправитьСтатусыПоЗаказам() Экспорт
	
	ИсточникЗаказа = Справочники.СайтыИнтернетЗаказов.НайтиПоКоду(11);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	HYBRIS_ОбменСтатусами.Объект КАК Объект,
	               |	HYBRIS_ОбменСтатусами.Индекс КАК Индекс,
	               |	HYBRIS_ОбменСтатусами.ДатаЗаписи КАК ДатаЗаписи,
	               |	HYBRIS_ОбменСтатусами.Объект.СтатусЗаказаПокупателя КАК ОбъектСтатусЗаказаПокупателя,
	               |	HYBRIS_СтатусыЗаказа.Идентификатор КАК Идентификатор,
	               |	HYBRIS_ОбменСтатусами.Объект.НомерИнтернетЗаказа КАК НомерИнтернетЗаказа,
	               |	HYBRIS_СтатусыЗаказа.ПередаватьНаСайт КАК ПередаватьНаСайт,
	               |	HYBRIS_ОбменСтатусами.Объект.ИсточникИнтернетЗаказа.ИмяПользователя КАК ИмяПользователя,
	               |	HYBRIS_ОбменСтатусами.Объект.ИсточникИнтернетЗаказа.Пароль КАК Пароль,
	               |	HYBRIS_ОбменСтатусами.Объект.Комментарий КАК Комментарий
	               |ИЗ
	               |	РегистрСведений.HYBRIS_ОбменСтатусами КАК HYBRIS_ОбменСтатусами
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.HYBRIS_СтатусыЗаказа КАК HYBRIS_СтатусыЗаказа
	               |		ПО HYBRIS_ОбменСтатусами.Объект.СтатусЗаказаПокупателя = HYBRIS_СтатусыЗаказа.Статус366";
	Рез  = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	ИмяWSСсылки = Константы.Hybris_WSссылка.Получить();
	
	Прокси = WSСсылки[ИмяWSСсылки].СоздатьWSПрокси("urn:apteka366:pi:onc:Reservation", "ReservationStatusOutService", "HTTP_Port");
	Прокси.Пользователь = ИсточникЗаказа.ИмяПользователя; //"onc_to_poq";
	Прокси.Пароль = ИсточникЗаказа.Пароль; //"CR2*Lv42";
	Фабрика = Прокси.ФабрикаXDTO;
	
	ReservationStatusRequest = Фабрика.Создать(Фабрика.Тип("urn:apteka366:pi:onc:Reservation", "ReservationStatusRequest"));
	ReservationsStatusList = Фабрика.Создать(Фабрика.Тип("urn:apteka366:pi:onc:Reservation", "ReservationsStatusList"));
	//ReservationStatuses = Фабрика.Создать(Фабрика.Тип("urn:apteka366:pi:onc:Reservation", "ReservationStatuses"));
	//ReservationStatusList = Фабрика.Создать(Фабрика.Тип("urn:apteka366:pi:onc:Reservation", "ReservationStatusList"));
	//Status = Фабрика.Создать(Фабрика.Тип("urn:apteka366:pi:onc:Reservation", "Status"));
	
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.ПередаватьНаСайт Тогда
			Продолжить;
		КонецЕсли;
		ReservationStatusList = Фабрика.Создать(Фабрика.Тип("urn:apteka366:pi:onc:Reservation", "ReservationStatusList"));
		ReservationStatuses = Фабрика.Создать(Фабрика.Тип("urn:apteka366:pi:onc:Reservation", "ReservationStatuses"));
		Status = Фабрика.Создать(Фабрика.Тип("urn:apteka366:pi:onc:Reservation", "Status"));
		
		Status.StatusId = Выборка.Идентификатор;
		Status.Completed = 0;
		Status.StatusTimestamp = Выборка.ДатаЗаписи;
		Status.StatusComment = СокрЛП(Выборка.Комментарий);
		
		ReservationStatusList.OrderStatus.Добавить(Status);
		
		ReservationStatuses.OrderId = Выборка.НомерИнтернетЗаказа;
		ReservationStatuses.StatusList = ReservationStatusList;
		
		ReservationsStatusList.Order.Добавить(ReservationStatuses);
		
	КонецЦикла;
	
	ReservationStatusRequest.Orders = ReservationsStatusList;
	
	
//Запись = Новый ЗаписьXML; 
//Запись.ОткрытьФайл("\\id-app-01\1C_exchange\Тест\ws.xml"); 
//Фабрика.ЗаписатьXML(Запись, ReservationStatusRequest); 
//Запись.Закрыть();	
	
	Попытка
		Прокси.SendReservationStatusAsync(ReservationStatusRequest);	
	Исключение
				МЗ = РегистрыСведений.ЛогОшибокОбработок.СоздатьМенеджерЗаписи();
				МЗ.ДатаОшибки = ТекущаяДата();
				МЗ.ОписаниеОшибки = ОписаниеОшибки();
				МЗ.МестоВозникновения = "HYBRIS_Обмен.ОтправитьСтатусыПоЗаказам()";
				МЗ.Объект = "HYBRIS_Обмен.ОтправитьСтатусыПоЗаказам(): отправка статусов";
				МЗ.Записать();

		Возврат;
	КонецПопытки;

	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл
		МЗ = РегистрыСведений.HYBRIS_ОбменСтатусами.СоздатьМенеджерЗаписи();
		МЗ.Объект = Выборка.Объект;
		МЗ.Индекс = Выборка.Индекс;
		МЗ.Прочитать();
		Попытка
			МЗ.Удалить();
		Исключение
				МЗ = РегистрыСведений.ЛогОшибокОбработок.СоздатьМенеджерЗаписи();
				МЗ.ДатаОшибки = ТекущаяДата();
				МЗ.ОписаниеОшибки = ОписаниеОшибки();
				МЗ.МестоВозникновения = "HYBRIS_Обмен.ОтправитьСтатусыПоЗаказам()";
				МЗ.Объект = "HYBRIS_Обмен.ОтправитьСтатусыПоЗаказам(): удаление объектов";
				МЗ.Записать();
		КонецПопытки;
	КонецЦикла;
	
	
	
	
КонецПроцедуры
