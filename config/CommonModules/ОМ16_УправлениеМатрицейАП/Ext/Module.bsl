#Если Сервер Тогда
	Процедура ОМ16_ДобавитьТоварВоВсеАптекиГТТ(Элемент_АПГТТ) Экспорт
		
		
		
		ТХТ="ВЫБРАТЬ
		    |	МестаХранения.Ссылка КАК МХОтсутствует
		    |ИЗ
		    |	Справочник.МестаХранения КАК МестаХранения
		    |ГДЕ
		    |	МестаХранения.ГруппаТТ = &ВыбГТТ
		    |	И МестаХранения.ПометкаУдаления = ЛОЖЬ
		    |	И (НЕ МестаХранения.Ссылка В
		    |				(ВЫБРАТЬ
		    |					Матрица.Аптека
		    |				ИЗ
		    |					Справочник.Матрица КАК Матрица
		    |				ГДЕ
		    |					Матрица.ПометкаУдаления = ЛОЖЬ
		    |					И Матрица.Аптека.ПометкаУдаления = ЛОЖЬ
		    |					И Матрица.Владелец = &ВыбАПГТТ))"; // список складов матрицы
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("ВыбАПГТТ", Элемент_АПГТТ);//.Ссылка);
		Запрос.УстановитьПараметр("ВыбГТТ", Элемент_АПГТТ.Владелец);
		
		/// Запрос дает список складов матрицы где этого товара нет
		
		Рез=Запрос.Выполнить();// обработка выборки в 1 проход без выгрузки в ТЗ
		Выб=Рез.Выбрать();
		Пока Выб.Следующий() Цикл
			ЗаписьМатрицы=Справочники.Матрица.СоздатьЭлемент();
			ЗаписьМатрицы.Аптека=Выб.МХОтсутствует;
			ЗаписьМатрицы.Владелец=Элемент_АПГТТ;//.Ссылка;
			ЗаписьМатрицы.Записать();
		КонецЦикла;
	КонецПроцедуры
#КонецЕсли 


#Если Сервер Тогда
	//==========================================================GtG====
	Процедура ОМ16_ПолноеЗаполнениеМатрицыПоАПГТТ (ГТТСсылка)  Экспорт
		//----------------------------------
		//Назначение:
		//  Размещает ВСЕ товры ГТТ по свем аптекам ГТТ
		//  
		
		//  
		//----------------------------------
		
		ТХТ="ВЫБРАТЬ  
		|	АП_ГТТ.Ссылка как ТОВАР
		|ИЗ
		|	Справочник.АП_ГТТ КАК АП_ГТТ
		|ГДЕ
		|	АП_ГТТ.Владелец = &ТекГТТ";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("ТекГТТ", ГТТСсылка);	
		
		Рез=Запрос.Выполнить();// обработка выборки в 1 проход
		Выб=Рез.Выбрать();
		
		Х=0;
		Пока Выб.Следующий() Цикл
			ОМ16_ДобавитьТоварВоВсеАптекиГТТ(выб.Товар); 
			Х=Х+1;
			
			Если Х%200 =0 Тогда
				
				
				Сообщить("Обработано "+Х+" позиций АП ГТТ");
			КонецЕсли; 
			
			
		КонецЦикла;	
		//Градусник.Видимость=Ложь;
		
		
		
		
		
		
	КонецПроцедуры	//ОМ16_ПолноеЗаполнениеМатрицыПоАПГТТ
	//==========================================================GtG====
#КонецЕсли	

#Если Сервер Тогда
	//==========================================================GtG====
	Процедура ОМ16_ДобавитьТоварВМатрицуАптеки (Товар,Аптека)  Экспорт
		//----------------------------------
		//Назначение:
		//  Добавляет товар в матрицу аптеки
		//  ПРи этом, если в ап ГТТ аптеки нет записи, 
		//  то добавляет элемент АПГТТ в  АПГТТ той группы, к которой принадлежит аптека
		//----------------------------------
		
		Если  Аптека.ГруппаТТ=Справочники.ГруппыТТ.ПустаяСсылка() Тогда
			Сообщить("Аптека: "+Аптека+" -- не назначена Группа ТТ! АП группы ТТ не существует! в матрицу добавить невозможно. Нужно задать группу ТТ аптеки");
			Возврат;
		КонецЕсли; 
		
		
		//-------------- ЗАПРОС GTG --------------------------НАЧАЛО
		//Назначение: Поиск существующей уже записи про товар в аптеке
		//
		ТХТ="ВЫБРАТЬ
		    |	Матрица.Ссылка
		    |ИЗ
		    |	Справочник.Матрица КАК Матрица
		    |ГДЕ
		    |	Матрица.Аптека = &Аптека
		    |	И Матрица.Владелец.Товар = &Товар";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Аптека",Аптека);
		Запрос.УстановитьПараметр("Товар",Товар);

		
		ТЗ=Запрос.Выполнить().Выгрузить();
		Если ТЗ.Количество()>0 тогда
			Возврат; // такой товар уже есть в матрице этой аптеки
		КонецЕсли;	
		
		//-------------- ЗАПРОС GTG --------------------------КОНЕЦ
		
		
		
		
		
		
		
		
		//------------------<Найдем, есть ли товар в АПГТТ аптеки>-------------------GtG----27.11.2007
		ТХТ="ВЫБРАТЬ
		|	АП_ГТТ.Ссылка  как ВладелецМатрицы
		|ИЗ
		|	Справочник.АП_ГТТ КАК АП_ГТТ
		|ГДЕ
		|	АП_ГТТ.Владелец.Ссылка = &ГТТ
		|	И АП_ГТТ.Товар.Ссылка = &ТОвар";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("ГТТ",Аптека.ГруппаТТ);
		Запрос.УстановитьПараметр("ТОвар",ТОвар);
		
		ТЗ=Запрос.Выполнить().Выгрузить();
		
		Если ТЗ.Количество()<>0 Тогда
			// ТОвар есть в АПГТТ
			Стр=ТЗ.Получить(0);
			ВладелецМАтрицы=Стр.ВладелецМатрицы;
		Иначе
			
			//Если  Аптека.ГруппаТТ=Справочники.ГруппыТТ.ПустаяСсылка() Тогда
			//	Сообщить("Аптека "+Аптека+" не назначена Группа ТТ! АП группы ТТ не существует! в матрицу добавить невозможно. Нужно задать группу ТТ аптеки");
			//	Возврат;
			//КонецЕсли; 	
			
			
			//Проверим, есть ли запись с таким кодом и грохнем ее нах при наличии.
			ТХТ="ВЫБРАТЬ
			    |	АП_ГТТ.Ссылка КАК ВладелецМатрицы
			    |ИЗ
			    |	Справочник.АП_ГТТ КАК АП_ГТТ
			    |ГДЕ
			    |	АП_ГТТ.Владелец.Ссылка = &ГТТ
			    |	И АП_ГТТ.Код = &Код";
			
			Запрос=Новый Запрос;
			Запрос.Текст=ТХТ;
			Запрос.УстановитьПараметр("ГТТ",Аптека.ГруппаТТ);
			Запрос.УстановитьПараметр("Код",ТОвар.Код);
			
			ТЗ1=Запрос.Выполнить().Выгрузить();
			
			Если ТЗ1.Количество()<>0 Тогда
				ТЗ1.Получить(0).ВладелецМатрицы.ПолучитьОбъект().Удалить();
			КонецЕсли; 	

			
			
			
			// Добавляем новую запись в ап гтт
			АПГТТ=Справочники.АП_ГТТ.СоздатьЭлемент();
			АПГТТ.Владелец=Аптека.ГруппаТТ;
			АПГТТ.Код=Товар.Код; // код из ап. 
			АПГТТ.Товар=ТОвар;
			АПГТТ.ЕИТ=ТОвар.ЕдиницаПоУмолчанию;
			попытка
				
				АПГТТ.Записать();
				
			исключение
				
				  //есть запись с таким кодом
				
			конецпопытки;
			
			ВладелецМАтрицы=АПГТТ.Ссылка;
			
			Сообщить("Добавлен товар "+Товар+" в АП ГТТ "+Аптека.ГруппаТТ+" нужно задать параметры товара в АПГТТ");
		КонецЕсли; 
		
		// теперь товар точно есть в апгтт
		
		//------------------<Добавляем товар в матрицу аптеки>-------------------GtG----27.11.2007			
		МАтрица=Справочники.Матрица.СоздатьЭлемент();
		МАтрица.Аптека=Аптека;
		Матрица.ГруппаАПИтог = Товар.ГруппаАП;
		МАтрица.Владелец=ВладелецМАтрицы; // элемент АПГТТ
		Матрица.Записать();
		
		
		
	КонецПроцедуры	//ОМ16_ДобавитьТоварВМатрицуАптеки
	//==========================================================GtG====
#КонецЕсли


#Если Сервер Тогда
//==========================================================GtG====
Процедура ОМ16_УдалитьТоварИзМатрицыАптеки (Товар, Аптека)  Экспорт
	//----------------------------------
	//Назначение:
	//  Удаляет товар из матрицы аптеки
	//----------------------------------
	
	тхт="ВЫБРАТЬ
	    |	Матрица.Ссылка
	    |ИЗ
	    |	Справочник.Матрица КАК Матрица
	    |ГДЕ
	    |	Матрица.Аптека.Ссылка = &Аптека
	    |	И Матрица.Владелец.Товар.Ссылка = &Товар";
	
	   Запрос=Новый Запрос;
	   Запрос.Текст=ТХТ;
	   Запрос.УстановитьПараметр("Товар",Товар);
	   Запрос.УстановитьПараметр("Аптека",Аптека);
	
	   ТЗ=Запрос.Выполнить().Выгрузить(); // все записи товара из матрицы по аптеке, через АПГТТ группы аптеки
	   
	   Для каждого Стр из ТЗ Цикл
		   
		   Стр.Ссылка.ПолучитьОбъект().Удалить(); // удаляем запись матрицы
	   	
	   КонецЦикла;	
КонецПроцедуры	//ОМ16_УдалитьТоварИзМатрицыАптеки
//==========================================================GtG====


 	
#КонецЕсли

Процедура ОМ16_УдалитьТоварИзМатрицы(ИмяРегистра,МассивИзмерений) Экспорт
	
	НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
	// указываем параметр, по которому определяем, где будем позиционираваться (если одно измерение)
	Для каждого стр из МассивИзмерений Цикл
		НаборЗаписей.Отбор[стр.Ключ].Установить(стр.Значение);
	КонецЦикла;
	НаборЗаписей.Записать();
		
КонецПроцедуры

Процедура ОМ16_ДобавитьТоварВМатрицу(ИмяРегистра,МассивИзмерений,МассивИзменений, Знач пар_ИзменятьСуществующие=Ложь) Экспорт
	
	МенеджерЗаписи = РегистрыСведений[ИмяРегистра].СоздатьМенеджерЗаписи();
	
	// указываем параметр, по которому определяем, где будем позиционираваться (если одно измерение)
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, МассивИзмерений);
	
	// прочитаем эту запись (внимание, эта команда обязательна, иначе можно ненароком очистить весь регистр!)
	МенеджерЗаписи.Прочитать();
	
	Если НЕ МенеджерЗаписи.Выбран() Тогда // убедились, что спозиционироваться удалось
		// сообщаем, что именно и на какое значение нужно изменить в регистре
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, МассивИзмерений);
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, МассивИзменений);
		// записываем изменения в регистре
		МенеджерЗаписи.Записать();
	ИначеЕсли пар_ИзменятьСуществующие Тогда
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, МассивИзменений);
		МенеджерЗаписи.Записать();
	КонецЕсли;
		
КонецПроцедуры

Процедура ОМ16_ИзменитьЗначениеВМатрице(ИмяРегистра,МассивИзмерений,МассивИзменений, Знач пар_ДобавлятьПриНеобходимости=Ложь) Экспорт
	
	МенеджерЗаписи = РегистрыСведений[ИмяРегистра].СоздатьМенеджерЗаписи();
	
	// указываем параметр, по которому определяем, где будем позиционираваться (если одно измерение)
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, МассивИзмерений);
	
	// прочитаем эту запись (внимание, эта команда обязательна, иначе можно ненароком очистить весь регистр!)
	Прочитали = Ложь;
	Для н=1 по 3 Цикл
		попытка
			МенеджерЗаписи.Прочитать();
			Прочитали = Истина;
			Прервать;
		Исключение
			ОбщегоНазначения.Задержка(2);
		КонецПопытки;
	КонецЦикла;
	
	Если Прочитали = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если МенеджерЗаписи.Выбран() Тогда // убедились, что спозиционироваться удалось
		// сообщаем, что именно и на какое значение нужно изменить в регистре
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, МассивИзменений);
		// записываем изменения в регистре
		Для н=1 по 3 Цикл
			попытка
				МенеджерЗаписи.Записать();
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(2);
			КонецПопытки;
		КонецЦикла;
	ИначеЕсли пар_ДобавлятьПриНеобходимости Тогда
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, МассивИзмерений);
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, МассивИзменений);
		Для н=1 по 3 Цикл
			попытка
				МенеджерЗаписи.Записать();
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(2);
			КонецПопытки;
		КонецЦикла;
	Иначе // спозиционироваться не удалось, можно выходить
		#Если Клиент Тогда
			Сообщить("Возникла проблема определения аптеки и товара в регистре через менеджер записи ");
		#КонецЕсли
	КонецЕсли;
		
КонецПроцедуры
