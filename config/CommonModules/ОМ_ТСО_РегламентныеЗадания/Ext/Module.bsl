
////////////////////////////////////////////////////////////
// ПОЛУЧЕНИЕ ОСТАТКОВ GDP
Процедура ЗагрузитьОстаткиОпт(ПрефиксМаски = "")
	
	ФайлИмпорта = ПолучитьФайлИмпортаОстатков(ПрефиксМаски);	
	Если ФайлИмпорта = "" Тогда
		Возврат;
	КонецЕсли;
	
	Если ПрефиксМаски = "SPB" Тогда
		СубъектРФ = Справочники.СубъектыРФ.НайтиПоНаименованию("Санкт-Петербург",Истина);	
	Иначе
		СубъектРФ = Справочники.СубъектыРФ.НайтиПоНаименованию("Москва",Истина);	
	КонецЕсли;
	
	
	КЧ = Новый КвалификаторыЧисла(12,2);
	КС = Новый КвалификаторыСтроки(150);
	КД = Новый КвалификаторыДаты(ЧастиДаты.Дата); 	
	
	Массив = Новый Массив;	
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, КЧ);
	
	Массив.Очистить();
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	
	Массив.Очистить();
	Массив.Добавить(Тип("Дата"));
	ОписаниеТиповД = Новый ОписаниеТипов(Массив, , , КД);
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("КодТовараСклада",				ОписаниеТиповС);
	ТаблицаЗначений.Колонки.Добавить("НаименованиеТовараСклада",	ОписаниеТиповС);
	ТаблицаЗначений.Колонки.Добавить("Количество", 					ОписаниеТиповЧ);
	ТаблицаЗначений.Колонки.Добавить("ЦенаБезНДС", 					ОписаниеТиповЧ);
	ТаблицаЗначений.Колонки.Добавить("ЦенаСНДС", 					ОписаниеТиповЧ);
	ТаблицаЗначений.Колонки.Добавить("СрокГодности", 				ОписаниеТиповД);
	ТаблицаЗначений.Колонки.Добавить("Концерн",						ОписаниеТиповС);
	ТаблицаЗначений.Колонки.Добавить("НаименованиеСклада",			ОписаниеТиповС);
	ТаблицаЗначений.Колонки.Добавить("КодПартии",					ОписаниеТиповС);
	ТаблицаЗначений.Колонки.Добавить("Серия",						ОписаниеТиповС);
	
	МассивСкладов = Новый Массив;
	
	
	БД = Новый XBase;
	БД.Кодировка = КодировкаXBase.OEM;
	БД.ОткрытьФайл(ФайлИмпорта); 
	
	Пока БД.Следующая() Цикл 		
		НовСтр = ТаблицаЗначений.Добавить();
		
		НовСтр.КодТовараСклада			= БД.Code;
		НовСтр.НаименованиеТовараСклада	= БД.Name;
		НовСтр.Количество				= БД.Qnt;
		НовСтр.ЦенаБезНДС				= БД.Price1;
		НовСтр.ЦенаСНДС					= БД.Price2;
		НовСтр.СрокГодности				= БД.Godn;
		НовСтр.Концерн					= БД.Koncern;
		НовСтр.НаименованиеСклада		= БД.Sklad;
		НовСтр.КодПартии				= БД.RowNo;
		
		Попытка
			НовСтр.Серия = БД.Ser;			
		Исключение   			
		КонецПопытки;
		
		Если МассивСкладов.Найти(НовСтр.НаименованиеСклада) = Неопределено Тогда
			МассивСкладов.Добавить(НовСтр.НаименованиеСклада);
		КонецЕсли;
		
	КонецЦикла;
	
	БД.ЗакрытьФайл();
	
	
	СоответствияСкладов = Новый Соответствие;	
	
	Для Каждого ТекСтрока Из МассивСкладов Цикл
		СоответствияСкладов.Вставить(ТекСтрока, ПолучитьОптовыйСклад(ТекСтрока,СубъектРФ));
	КонецЦикла;	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВнешниеДанные.КодТовараСклада,
	|	ВнешниеДанные.НаименованиеТовараСклада,
	|	ВнешниеДанные.Количество,
	|	ВнешниеДанные.ЦенаБезНДС,
	|	ВнешниеДанные.ЦенаСНДС,
	|	ВнешниеДанные.СрокГодности,
	|	ВнешниеДанные.Концерн,
	|	ВнешниеДанные.НаименованиеСклада,
	|	ВнешниеДанные.КодПартии,
	|	ВнешниеДанные.Серия
	|ПОМЕСТИТЬ втВнешниеДанные
	|ИЗ
	|	&ВнешниеДанные КАК ВнешниеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвязкиТовараСПоставщиком.КодТовараПоставщика,
	|	МАКСИМУМ(СвязкиТовараСПоставщиком.ТоварФирмы) КАК ТоварФирмы
	|ПОМЕСТИТЬ втСвязки
	|ИЗ
	|	Справочник.СвязкиТовараСПоставщиком КАК СвязкиТовараСПоставщиком
	|ГДЕ
	|	СвязкиТовараСПоставщиком.Поставщик = &Поставщик
	|	И НЕ СвязкиТовараСПоставщиком.Блокировка
	|
	|СГРУППИРОВАТЬ ПО
	|	СвязкиТовараСПоставщиком.КодТовараПоставщика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втВнешниеДанные.КодТовараСклада,
	|	втВнешниеДанные.НаименованиеТовараСклада,
	|	СУММА(втВнешниеДанные.Количество) КАК Количество,
	|	втВнешниеДанные.ЦенаБезНДС,
	|	втВнешниеДанные.ЦенаСНДС,
	|	втВнешниеДанные.СрокГодности,
	|	втВнешниеДанные.Концерн,
	|	втВнешниеДанные.НаименованиеСклада,
	|	втВнешниеДанные.КодПартии,
	|	втВнешниеДанные.Серия,
	|	ЕСТЬNULL(втСвязки.ТоварФирмы, ЗНАЧЕНИЕ(Справочник.Ассортиментный_план.ПустаяСсылка)) КАК Товар
	|ИЗ
	|	втВнешниеДанные КАК втВнешниеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСвязки КАК втСвязки
	|		ПО втВнешниеДанные.КодТовараСклада = втСвязки.КодТовараПоставщика
	|
	|СГРУППИРОВАТЬ ПО
	|	втВнешниеДанные.ЦенаБезНДС,
	|	втВнешниеДанные.ЦенаСНДС,
	|	втВнешниеДанные.КодТовараСклада,
	|	втВнешниеДанные.НаименованиеТовараСклада,
	|	втВнешниеДанные.СрокГодности,
	|	втВнешниеДанные.Концерн,
	|	втВнешниеДанные.НаименованиеСклада,
	|	втВнешниеДанные.КодПартии,
	|	втВнешниеДанные.Серия,
	|	ЕСТЬNULL(втСвязки.ТоварФирмы, ЗНАЧЕНИЕ(Справочник.Ассортиментный_план.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втВнешниеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втСвязки";
	
	Запрос.УстановитьПараметр("ВнешниеДанные", ТаблицаЗначений);
		
	Запрос.УстановитьПараметр("Поставщик", Справочники.Поставщики.НайтиПоКоду(582)); //ОРИОЛА
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	НаборЗаписей = РегистрыСведений.ОстаткиОптовыхСкладов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СубъектРФ.Установить(СубъектРФ);

	Пока Выборка.Следующий() Цикл
		
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.СубъектРФ = СубъектРФ;
		Запись.ОптовыйСклад = СоответствияСкладов[Выборка.НаименованиеСклада];
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	УдалитьФайлы(ФайлИмпорта);
	
	
КонецПроцедуры

Процедура ЗагрузкаОстатковОптовыхСкладов() Экспорт
	
	ЗагрузитьОстаткиОпт("SPB");
	ЗагрузитьОстаткиОпт();
	 
КонецПроцедуры

Функция ПолучитьФайлИмпортаОстатков(ПрефиксМаски = "")
	
	Инфо = Новый СистемнаяИнформация;
	Если Инфо.ТипПлатформы = ТипПлатформы.Linux_x86 Или Инфо.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда
		КаталогИсточник = "/home/usr1cv8/ftp_net/Post/gdp/rest/";
		КаталогАрхива = "/home/usr1cv8/ftp_net/Post/gdp/rest/backup/";
	Иначе
		КаталогИсточник = "\\id-vm-1\ftp_data\Post\gdp\rest\";
		КаталогАрхива = "\\id-vm-1\ftp_data\Post\gdp\rest\backup\";
	КонецЕсли;
	
	КаталогПриемник = КаталогВременныхФайлов();
	ИмяФайла = Формат(ТекущаяДата(), "ДФ=MMddHHmm");
	ФайлПриемник = КаталогПриемник + ИмяФайла + ".dbf";
	ФайлПриемникАрхив = КаталогАрхива + ИмяФайла + ".dbf";
	
	Если ПрефиксМаски = "" Тогда
		НайденныеФайлы = НайтиФайлы(КаталогИсточник, "*.dbf");
	Иначе 
		НайденныеФайлы = НайтиФайлы(КаталогИсточник, "*" + ПрефиксМаски + "*.dbf");
	КонецЕсли;
	
	
	Если НайденныеФайлы.Количество() > 0 Тогда 			
		ФайлИсточник = НайденныеФайлы[0].ПолноеИмя;
		КопироватьФайл(ФайлИсточник,ФайлПриемникАрхив);
		ПереместитьФайл(ФайлИсточник, ФайлПриемник); 
		
		Возврат ФайлПриемник;
		
	Иначе
		Возврат "";
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьОптовыйСклад(НаименованиеСклада,СубъектРФ = Неопределено)
	
	СкладСсылка = Справочники.ОптовыеСклады.НайтиПоНаименованию(НаименованиеСклада,Истина);
	
	Если СкладСсылка = Справочники.ОптовыеСклады.ПустаяСсылка() Тогда 	
		
		НовСклад = Справочники.ОптовыеСклады.СоздатьЭлемент();
		НовСклад.Наименование = НаименованиеСклада;
		Если НЕ СубъектРФ = Неопределено Тогда
			НовСклад.СубъектРФ = СубъектРФ;	
		КонецЕсли;
		НовСклад.Записать(); 
		
		СкладСсылка = НовСклад.Ссылка;
		
	КонецЕсли;

	Возврат СкладСсылка;		
	
КонецФункции


////////////////////////////////////////////////////////////
// ОБМЕН ЗАКАЗАМИ С СИСТЕМОЙ "С-ДОКТОР"

Процедура ЗагрузкаЗаказовСемейныйДокторЧерезЗаказПокупателя() Экспорт
	
	КаталогЗагрузки = ОМ_ТСО.ПолучитьИмяФайлаНаФТП("\\id-vm-1\ftp_data\familydoctor\orders\");	
		
	МассивФайлов = НайтиФайлы(КаталогЗагрузки, "*.xml", Ложь);
	
	Если МассивФайлов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	//Сайт = Справочники.СайтыИнтернетЗаказов.НайтиПоКоду(6); //Семейный доктор
	//КаталогВыгрузки = ОМ_ТСО.ПолучитьИмяФайлаНаФТП("\\id-vm-1\ftp_data\firm\alphega\apteki\reserve\");
	
	Для Каждого Файл Из МассивФайлов Цикл
		
		ТаблицаЗаказа = Новый ТаблицаЗначений;
		ТаблицаЗаказа.Колонки.Добавить("КодТовара");
		ТаблицаЗаказа.Колонки.Добавить("Цена");
		ТаблицаЗаказа.Колонки.Добавить("ВнешнийИД");
		ТаблицаЗаказа.Колонки.Добавить("Количество");

		
		
		// Читаем файл загрузки
		
		Чтение = Новый ЧтениеXML;		
		Чтение.ОткрытьФайл(Файл.ПолноеИмя);
		
		Пока Чтение.Прочитать() Цикл
			
			Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				
				ИмяУзла = Чтение.Имя;
				
				Если ИмяУзла = "assignment" Тогда
					
					НовСтр = ТаблицаЗаказа.Добавить();
					НовСтр.Количество = 1;
					Пока Чтение.ПрочитатьАтрибут() Цикл					
						Если Чтение.Имя = "id" Тогда
							НовСтр.КодТовара = Чтение.Значение;
						ИначеЕсли Чтение.Имя = "price" Тогда
							НовСтр.Цена = Чтение.Значение;
						ИначеЕсли Чтение.Имя = "assignment_id" Тогда
							НовСтр.ВнешнийИД = Чтение.Значение;
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;			
				
			ИначеЕсли Чтение.ТипУзла = ТипУзлаXML.Текст Тогда	
				
				Если ИмяУзла = "PharmacyID" Тогда
					КодАптеки = Чтение.Значение;
				ИначеЕсли ИмяУзла = "OrderID" Тогда
					ИдентификаторЗаказа = Чтение.Значение;
				ИначеЕсли ИмяУзла = "PhoneNumber" Тогда
					ТелефонКлиента = Чтение.Значение;
				КонецЕсли;				
				
			КонецЕсли;	
			
		КонецЦикла;
		               
		Чтение.Закрыть();
		
		//ТаблицаЗаказа.Свернуть("КодТовара,Цена","Количество");
		// Создаем документ
		
		Склад = Справочники.МестаХранения.НайтиПоКоду(КодАптеки);
		ИсточникЗаказа =  Справочники.СайтыИнтернетЗаказов.НайтиПоНаименованию("Семейный доктор",Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Ссылка
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.НомерИнтернетЗаказа = &ИдентификаторЗаказа
	               |	И ЗаказПокупателя.ИсточникИнтернетЗаказа = &ИсточникЗаказа";
				   
	Запрос.УстановитьПараметр("ИдентификаторЗаказа",ИдентификаторЗаказа);
	Запрос.УстановитьПараметр("ИсточникЗаказа",ИсточникЗаказа);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		ЗаказПокупателя = Документы.ЗаказПокупателя.СоздатьДокумент();
		ЗаказПокупателя.Дата				= ТекущаяДата();
		
		ЗаказПокупателя.ИсточникИнтернетЗаказа = ИсточникЗаказа;
		//ЗаказПокупателя.КлиентИнтернетЗаказа = Док.КлиентИнтернетЗаказа;
		ЗаказПокупателя.НомерИнтернетЗаказа = ИдентификаторЗаказа;
		ЗаказПокупателя.СтатусДокАптеки		= Перечисления.СтатусДокАптеки.Неопределено;
		
		ЗаказПокупателя.Склад				= Склад;
		ЗаказПокупателя.Телефон				= ТелефонКлиента;
		ЗаказПокупателя.ТипЗаказа			= Перечисления.ИЗ_Типы.Бронирование;
		ЗаказПокупателя.ДатаОкончанияЖизниЗаказа = ТекущаяДата() + ЗаказПокупателя.ИсточникИнтернетЗаказа.ВремяЖизниЗаказа*60*60;
		ЗаказПокупателя.СтатусЗаказаПокупателя = Справочники.СтатусыЗаказаПокупателя.SHIPPED;
		ДокСсылка = ЗаказПокупателя.ПолучитьСсылкуНового();
		Если НЕ ЗначениеЗаполнено(ДокСсылка) Тогда
			ДокСсылка = Документы.ЗаказПокупателя.ПолучитьСсылку();
			ЗаказПокупателя.УстановитьСсылкуНового(ДокСсылка);
		КонецЕсли;
		ЗаказПокупателя.ИДДокументаАптеки	= XMLСтрока(ДокСсылка);
		ЗаказПокупателя.УстановитьНовыйНомер();
		
		КодБезКС = "22"+Формат(Число(ЗаказПокупателя.Номер), "ЧЦ=10; ЧВН=; ЧГ=0");

		ЗаказПокупателя.ШКЗаказа = ВычислитьКонтрольнуюСумму(КодБезКС);
		
		
		Для Каждого СтрокаЗаказа Из ТаблицаЗаказа Цикл			
			Стр = ЗаказПокупателя.Заявка.Добавить();		
			стр.КодТовара		= СтрокаЗаказа.КодТовара;
			Стр.Товар			= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(СтрокаЗаказа.КодТовара);
			Стр.Количество		= СтрокаЗаказа.Количество;
			Стр.Коэфф			= 1;
			Стр.КоэффициентРазбивки			= 1;
			Стр.ЦенаРозн		= СтрокаЗаказа.Цена;
			Стр.КодПартииВнешний= СтрокаЗаказа.ВнешнийИД;
		КонецЦикла;			
		
		
		
		
		ЗаказПокупателя.Записать(РежимЗаписиДокумента.Запись);
		ЗаказПокупателя.ВыгрузитьВАптеку();
	КонецЕсли;
		

		
		// Архивируем файл загрузки
		
		ИмяФайлаАрхива = СтрЗаменить(Файл.ПолноеИмя, "orders", "orders\backup");
		ПереместитьФайл(Файл.ПолноеИмя, ИмяФайлаАрхива);
		
	КонецЦикла; 		
	
КонецПроцедуры

Процедура ОтправкаОтветовСемейныйДокторЧерезЗаказПокупателя() Экспорт
	     		
	Каталог = ОМ_ТСО.ПолучитьИмяФайлаНаФТП("\\id-vm-1\ftp_data\familydoctor\ReOrders\");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ОбъектыДляВыгрузки.Объект КАК Документ.ЗаказПокупателя) КАК Документ,
	|	ВЫРАЗИТЬ(ОбъектыДляВыгрузки.Объект КАК Документ.ЗаказПокупателя).НомерИнтернетЗаказа КАК НомерИнтернетЗаказа,
	|	ВЫРАЗИТЬ(ОбъектыДляВыгрузки.Объект КАК Документ.ЗаказПокупателя).Склад.Код КАК КодАптеки,
	|	ВЫРАЗИТЬ(ОбъектыДляВыгрузки.Объект КАК Документ.ЗаказПокупателя).ДатаПродажи КАК ДатаПродажи
	|ИЗ
	|	РегистрСведений.ОбъектыДляВыгрузки КАК ОбъектыДляВыгрузки
	|ГДЕ
	|	ОбъектыДляВыгрузки.ВидВыгрузки = ЗНАЧЕНИЕ(Перечисление.ВидыВыгрузок.ВырузкаОтчетовВСемейныйДоктор)";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Заказ.КодТовара,
	               |	ЕСТЬNULL(Заявка.КодПартииВнешний, 0) КАК КодПартииВнешний,
	               |	СУММА(Заказ.Количество) КАК Количество,
	               |	СУММА(Заказ.КоличествоПродано) КАК КоличествоПродано,
	               |	ВЫБОР
	               |		КОГДА Заказ.ЦенаПродажи > 0
	               |			ТОГДА Заказ.ЦенаПродажи
	               |		ИНАЧЕ Заказ.ЦенаРозн
	               |	КОНЕЦ КАК Цена
	               |ИЗ
	               |	Документ.ЗаказПокупателя.Заказ КАК Заказ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Заявка КАК Заявка
	               |		ПО Заказ.КодТовара = Заявка.КодТовара
	               |			И (Заявка.Ссылка = &Документ)
	               |ГДЕ
	               |	Заказ.Ссылка = &Документ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Заказ.КодТовара,
	               |	ЕСТЬNULL(Заявка.КодПартииВнешний, 0),
	               |	ВЫБОР
	               |		КОГДА Заказ.ЦенаПродажи > 0
	               |			ТОГДА Заказ.ЦенаПродажи
	               |		ИНАЧЕ Заказ.ЦенаРозн
	               |	КОНЕЦ";	
	
	
	Пока Выборка.Следующий() Цикл
		
		Запрос.УстановитьПараметр("Документ",Выборка.Документ);
		Рез = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Рез.Выбрать();
		
		ПутьКФайлу = Каталог + "ReOrder" + Выборка.НомерИнтернетЗаказа + ".xml";
		
		Запись = Новый ЗаписьXML;				
		Запись.ОткрытьФайл(ПутьКФайлу);
		
		Запись.ЗаписатьОбъявлениеXML();
		Запись.ЗаписатьНачалоЭлемента("PharmacyOrder");
		
		Запись.ЗаписатьНачалоЭлемента("PharmacyID");
		Запись.ЗаписатьТекст(Формат(Выборка.КодАптеки, "ЧДЦ=; ЧГ=0"));
		Запись.ЗаписатьКонецЭлемента(); // PharmacyID
		
		Запись.ЗаписатьНачалоЭлемента("OrderID");
		Запись.ЗаписатьТекст(Выборка.НомерИнтернетЗаказа);
		Запись.ЗаписатьКонецЭлемента(); // OrderID
		
		Запись.ЗаписатьНачалоЭлемента("PhoneNumber");
		Запись.ЗаписатьТекст("");
		Запись.ЗаписатьКонецЭлемента(); // PhoneNumber
		
		Запись.ЗаписатьНачалоЭлемента("SaleDate");
		Запись.ЗаписатьТекст(XMLСтрока(Выборка.ДатаПродажи));
		Запись.ЗаписатьКонецЭлемента(); // SaleDate
		
		Запись.ЗаписатьНачалоЭлемента("assignments");
		
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Запись.ЗаписатьНачалоЭлемента("assignment");
			Запись.ЗаписатьАтрибут("assignment_id", Формат(ВыборкаДетальныеЗаписи.КодПартииВнешний, "ЧГ=0"));
			Запись.ЗаписатьАтрибут("id", Формат(ВыборкаДетальныеЗаписи.КодТовара, "ЧГ=0"));
			Если  ВыборкаДетальныеЗаписи.Количество = 0 Тогда
				Запись.ЗаписатьАтрибут("quantity", Формат(ВыборкаДетальныеЗаписи.КоличествоПродано, "ЧН=0; ЧГ=0"));
			Иначе
				Запись.ЗаписатьАтрибут("quantity", Формат(ВыборкаДетальныеЗаписи.Количество, "ЧН=0; ЧГ=0"));
			КонецЕсли;
			Запись.ЗаписатьАтрибут("price", Формат(ВыборкаДетальныеЗаписи.Цена, "ЧРД=.; ЧГ=0"));
			Если ВыборкаДетальныеЗаписи.КоличествоПродано = 0 Тогда
				Запись.ЗаписатьАтрибут("buy", "no");
			Иначе
				Запись.ЗаписатьАтрибут("buy", "yes");
			КонецЕсли;
			Запись.ЗаписатьКонецЭлемента(); // assignment
			
		КонецЦикла;
		
		Запись.ЗаписатьКонецЭлемента(); // assignments
		
		Запись.ЗаписатьКонецЭлемента(); // PharmacyOrder

		Запись.Закрыть();
		
		ОМ_ТСО.ЗарегистрироватьОбъектДляВыгрузки(Выборка.Документ,Перечисления.ВидыВыгрузок.ВырузкаОтчетовВСемейныйДоктор,Истина);
		
	КонецЦикла;
	     		
КонецПроцедуры

Процедура ЗагрузкаЗаказовСемейныйДоктор() Экспорт
	
	КаталогЗагрузки = ОМ_ТСО.ПолучитьИмяФайлаНаФТП("\\id-vm-1\ftp_data\familydoctor\orders\");	
		
	МассивФайлов = НайтиФайлы(КаталогЗагрузки, "*.xml", Ложь);
	
	Если МассивФайлов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Сайт = Справочники.СайтыИнтернетЗаказов.НайтиПоКоду(6); //Семейный доктор
	КаталогВыгрузки = ОМ_ТСО.ПолучитьИмяФайлаНаФТП("\\id-vm-1\ftp_data\firm\alphega\apteki\reserve\");
	
	Для Каждого Файл Из МассивФайлов Цикл
		
		ТаблицаЗаказа = Новый ТаблицаЗначений;
		ТаблицаЗаказа.Колонки.Добавить("КодТовара");
		ТаблицаЗаказа.Колонки.Добавить("Цена");
		ТаблицаЗаказа.Колонки.Добавить("ВнешнийИД");
		
		
		// Читаем файл загрузки
		
		Чтение = Новый ЧтениеXML;		
		Чтение.ОткрытьФайл(Файл.ПолноеИмя);
		
		Пока Чтение.Прочитать() Цикл
			
			Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				
				ИмяУзла = Чтение.Имя;
				
				Если ИмяУзла = "assignment" Тогда
					
					НовСтр = ТаблицаЗаказа.Добавить();
					
					Пока Чтение.ПрочитатьАтрибут() Цикл					
						Если Чтение.Имя = "id" Тогда
							НовСтр.КодТовара = Чтение.Значение;
						ИначеЕсли Чтение.Имя = "price" Тогда
							НовСтр.Цена = Чтение.Значение;
						ИначеЕсли Чтение.Имя = "assignment_id" Тогда
							НовСтр.ВнешнийИД = Чтение.Значение;
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;			
				
			ИначеЕсли Чтение.ТипУзла = ТипУзлаXML.Текст Тогда	
				
				Если ИмяУзла = "PharmacyID" Тогда
					КодАптеки = Чтение.Значение;
				ИначеЕсли ИмяУзла = "OrderID" Тогда
					ИдентификаторЗаказа = Чтение.Значение;
				ИначеЕсли ИмяУзла = "PhoneNumber" Тогда
					ТелефонКлиента = Чтение.Значение;
				КонецЕсли;				
				
			КонецЕсли;	
			
		КонецЦикла;
		
		Чтение.Закрыть();
		
		
		// Создаем документ
		
		Склад = Справочники.МестаХранения.НайтиПоКоду(КодАптеки);
		
		Док = Документы.ИнтернетЗаказ.СоздатьДокумент();		
		Док.Дата				= ТекущаяДата();		
		Док.ДатаЗаказа			= Док.Дата;
		Док.ДатаОтгрузки		= Док.Дата;		
		Док.Сайт				= Сайт;
		Док.ТипИсточника		= Перечисления.ИА_ТипИсточникаЗаказа.Партнер;
		Док.ВидИнтернетЗаказа	= Перечисления.ВидыИнтернетЗаказа.Обычный;
		Док.Склад				= Склад;
		Док.ФизическаяАптека	= Склад;				
		Док.ИдентификаторЗаказа	= ИдентификаторЗаказа;		
		Док.НомерЗаказа			= ОМ_СправочнаяСлужба.ОМСС_ПолучитьНомерЗаказа(Док.ТипИсточника);
		Док.Телефон				= ТелефонКлиента;
		Док.Источник			= Склад;
		
		Для Каждого СтрокаЗаказа Из ТаблицаЗаказа Цикл			
			Стр = Док.Товар.Добавить();		
			Стр.Товар			= Справочники.АССОРТИМЕНТНЫЙ_ПЛАН.НайтиПоКоду(СтрокаЗаказа.КодТовара);
			Стр.Количество		= 1;
			Стр.ЕИТ				= Стр.Товар.ЕдиницаПоУмолчанию;
			Стр.К				= Стр.ЕИТ.К;
			Стр.Цена			= СтрокаЗаказа.Цена;
			Стр.ЦенаСоСкидкой	= Стр.Цена;		
			Стр.Сумма 			= Стр.Цена * Стр.Количество;
			Стр.СуммаСоСкидкой	= Стр.ЦенаСоСкидкой * Стр.Количество;		
			Стр.СтатусСтроки	= Перечисления.ИА_СтатусСтрокиЗаказа.НетСтатуса;
			Стр.ВнешнийИД		= СтрокаЗаказа.ВнешнийИД;
			
		КонецЦикла;		
		
		Док.Сумма = Док.Товар.Итог("Сумма");
		Док.СуммаСоСкидкой = Док.Товар.Итог("СуммаСоСкидкой");
		
		Док.Записать(РежимЗаписиДокумента.Запись);
		
		
		// Отправляем в ЛК 
		
		ПсевдоИД = Строка(Новый УникальныйИдентификатор());
		       		
		ИмяФайлаВыгрузки = ОМ_ТСО.ПолучитьИмяФайлаНаФТП(КаталогВыгрузки + ПсевдоИД + ".csv");
		
		ФайлЗаписи = Новый ЗаписьТекста(ИмяФайлаВыгрузки, КодировкаТекста.UTF8);
		
		Для Каждого ТекСтрока Из Док.Товар Цикл
			СтрокаЗаголовка = 
			ПсевдоИД + ";"
			+ Док.ИдентификаторЗаказа + ";"
			+ Формат(Док.Дата, "ДФ=dd.MM.yyyy") + ";"
			+ Формат(Склад.Код, "ЧГ=") + ";"
			+ "Розничный покупатель" + ";"
			+ ТелефонКлиента + ";"
			+ Формат(ТекСтрока.Товар.Код,"ЧГ=") + ";"
			+ СтрЗаменить(ТекСтрока.Товар.Наименование, ";"," ") + ";"
			+ ТекСтрока.Количество + ";"
			+ Формат(ТекСтрока.Цена, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧГ=") + ";"
			+ ТекСтрока.ЕИТ.Наименование + ";"
			+ "Заказ из системы С-Доктор" + ";"  //Комментарий
			+ Формат(Склад.Бренд.Код, "ЧГ=") + ";"
			+ "Семейный доктор";
			
			ФайлЗаписи.ЗаписатьСтроку(СтрокаЗаголовка);
			
		КонецЦикла;
		
		ФайлЗаписи.Закрыть();
		
		
		// Архивируем файл загрузки
		
		ИмяФайлаАрхива = СтрЗаменить(Файл.ПолноеИмя, "orders", "orders\backup");
		ПереместитьФайл(Файл.ПолноеИмя, ИмяФайлаАрхива);
		
	КонецЦикла; 		
	
КонецПроцедуры

Процедура ОтправкаОтветовСемейныйДоктор() Экспорт
	     		
	Каталог = ОМ_ТСО.ПолучитьИмяФайлаНаФТП("\\id-vm-1\ftp_data\familydoctor\ReOrders\");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнтернетЗаказТовар.Ссылка КАК ДокументЗаказа,
	|	ИнтернетЗаказТовар.Ссылка.ИдентификаторЗаказа,
	|	ИнтернетЗаказТовар.Ссылка.Склад.Код КАК КодАптеки,
	|	ИнтернетЗаказТовар.Ссылка.Телефон КАК ТелефонКлиента,
	|	ИнтернетЗаказТовар.Товар.Код КАК КодТовара,
	|	ИнтернетЗаказТовар.ЦенаСоСкидкой КАК Цена,
	|	ВЫБОР
	|		КОГДА ИнтернетЗаказТовар.КоличествоВыкуплено > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Выкуплено,
	|	ИнтернетЗаказТовар.ВнешнийИД
	|ИЗ
	|	Документ.ИнтернетЗаказ.Товар КАК ИнтернетЗаказТовар
	|ГДЕ
	|	ИнтернетЗаказТовар.Ссылка.Дата >= &ДатаОтбора
	|	И ИнтернетЗаказТовар.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ИнтернетЗаказТовар.Ссылка.Сайт = &Сайт
	|	И ИнтернетЗаказТовар.Ссылка.СтатусЗаказа = &СтатусЗаказа
	|ИТОГИ ПО
	|	ДокументЗаказа";
	
	Запрос.УстановитьПараметр("ДатаОтбора", Дата(2016,12,1));
	Запрос.УстановитьПараметр("Сайт", Справочники.СайтыИнтернетЗаказов.НайтиПоКоду(6));
	Запрос.УстановитьПараметр("СтатусЗаказа", Перечисления.ИА_СтатусЗаказа.Оплачен);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДокументЗаказа = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументЗаказа.Следующий() Цикл
		
		ПутьКФайлу = Каталог + "ReOrder" + ВыборкаДокументЗаказа.ИдентификаторЗаказа + ".xml";
		
		Запись = Новый ЗаписьXML;				
		Запись.ОткрытьФайл(ПутьКФайлу);
		
		Запись.ЗаписатьОбъявлениеXML();
		Запись.ЗаписатьНачалоЭлемента("PharmacyOrder");
		
		Запись.ЗаписатьНачалоЭлемента("PharmacyID");
		Запись.ЗаписатьТекст(Формат(ВыборкаДокументЗаказа.КодАптеки, "ЧДЦ=; ЧГ=0"));
		Запись.ЗаписатьКонецЭлемента(); // PharmacyID
		
		Запись.ЗаписатьНачалоЭлемента("OrderID");
		Запись.ЗаписатьТекст(ВыборкаДокументЗаказа.ИдентификаторЗаказа);
		Запись.ЗаписатьКонецЭлемента(); // OrderID
		
		Запись.ЗаписатьНачалоЭлемента("PhoneNumber");
		Запись.ЗаписатьТекст(ВыборкаДокументЗаказа.ТелефонКлиента);
		Запись.ЗаписатьКонецЭлемента(); // PhoneNumber
		
		Запись.ЗаписатьНачалоЭлемента("assignments");
		
		ВыборкаДетальныеЗаписи = ВыборкаДокументЗаказа.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Запись.ЗаписатьНачалоЭлемента("assignment");
			Запись.ЗаписатьАтрибут("assignment_id", ВыборкаДетальныеЗаписи.ВнешнийИД);
			Запись.ЗаписатьАтрибут("id", Формат(ВыборкаДетальныеЗаписи.КодТовара, "ЧГ=0"));
			Запись.ЗаписатьАтрибут("price", Формат(ВыборкаДетальныеЗаписи.Цена, "ЧГ=0"));
			Запись.ЗаписатьАтрибут("buy", Формат(ВыборкаДетальныеЗаписи.Выкуплено, "БЛ=no; БИ=yes"));
			Запись.ЗаписатьКонецЭлемента(); // assignment
			
		КонецЦикла;
		
		Запись.ЗаписатьКонецЭлемента(); // assignments
		
		Запись.ЗаписатьКонецЭлемента(); // PharmacyOrder

		Запись.Закрыть();
		
		
		ДокОбъект = ВыборкаДокументЗаказа.ДокументЗаказа.ПолучитьОбъект();
		ДокОбъект.СтатусЗаказа = Перечисления.ИА_СтатусЗаказа.Завершен;
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);

	КонецЦикла;
	     		
КонецПроцедуры


////////////////////////////////////////////////////////////
// РАССЫЛКИ

Процедура РассылкаИтоговПоВыручке() Экспорт
	
	Обработка = Обработки.Регламент_ВыполнениеРассылок.Создать();
	Обработка.РассылкаИтоговПоВыручке();		
	
КонецПроцедуры

Процедура РассылкаОтчетаПоКонцернам() Экспорт
	
	Обработка = Обработки.Регламент_ВыполнениеРассылок.Создать();
	Обработка.РассылкаОтчетаПоКонцернам();
	
КонецПроцедуры

Процедура РассылкаРеестраНакладныхGDPДляСантенс() Экспорт
	
	Обработка = Обработки.Регламент_ВыполнениеРассылок.Создать();
	Обработка.РассылкаРеестраНакладныхGDPДляСантенс();
	
КонецПроцедуры

Процедура РассылкаПланаПоступленияТовараНаСклад() Экспорт
	
	Обработка = Обработки.Регламент_ВыполнениеРассылок.Создать();
	Обработка.РассылкаПланаПоступленияТовараНаСклад();

КонецПроцедуры

Процедура РассылкаСпискаНевыгруженныхЗаказов() Экспорт
	
	Обработка = Обработки.Регламент_ВыполнениеРассылок.Создать();
	Обработка.РассылкаСпискаНевыгруженныхЗаказов();
	
КонецПроцедуры

Процедура РассылкаМониторингаРежимовРаботыАптек() Экспорт
	
	Обработка = Обработки.Регламент_ВыполнениеРассылок.Создать();
	Обработка.РассылкаМониторингаРежимовРаботыАптек();
	
КонецПроцедуры

Процедура КонтрольНеоприходованныхНакладных() Экспорт
	
	Обработка = Обработки.Регламент_ВыполнениеРассылок.Создать();
	Обработка.КонтрольНеоприходованныхНакладных();
	
КонецПроцедуры

Процедура КонтрольНеоприходованныхНакладныхДляДБЕ() Экспорт
	
	Обработка = Обработки.Регламент_ВыполнениеРассылок.Создать();
	Обработка.КонтрольНеоприходованныхНакладныхДляДБЕ();
	
КонецПроцедуры

Процедура КонтрольБлокировкиСТМ() Экспорт
	
	Обработка = Обработки.Регламент_ВыполнениеРассылок.Создать();
	Обработка.КонтрольБлокировкиСТМ();
	
КонецПроцедуры


////////////////////////////////////////////////////////////
// ПРОЧЕЕ

Процедура ИнформированиеПокупателейОПредоплате() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнтернетЗаказ.Ссылка КАК ИнтернетЗаказ,
	|	ИнтернетЗаказ.ИдентификаторЗаказа,
	|	ИнтернетЗаказ.Емэйл,
	|	ИнтернетЗаказ.ТребуемыйПроцентПредоплаты
	|ИЗ
	|	Документ.ИнтернетЗаказ КАК ИнтернетЗаказ
	|ГДЕ
	|	ИнтернетЗаказ.ПроинформироватьКлиентаОПредоплате
	|	И ИнтернетЗаказ.Емэйл <> """"
	|	И ИнтернетЗаказ.ТребуемыйПроцентПредоплаты > 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Процент = Формат(Выборка.ТребуемыйПроцентПредоплаты, "ЧДЦ=");
		
		ТекстПисьма = "Ваш заказ требует онлайн-предоплаты в размере " + Процент + "% от стоимости заказа." + Символы.ПС
		+ "Если Вы подтверждаете необходимость дальнейшего оформления данного заказа, то пройдите по ссылке:" + Символы.ПС
		+ "http://med03.ru/payonline.php?orderid=" + Выборка.ИдентификаторЗаказа + "&percent=" + Процент;
		
		МПочтец = Обработки.Почтарь;
		Почтец = МПочтец.Создать();
		Почтец.Рассылка.Очистить();
		Почтец.Автоотправка = Истина;
		//Почтец.Адресат = Выборка.Емэйл;
		
		Почтец.Рассылка.Добавить(Выборка.Емэйл);
		Почтец.Рассылка.Добавить("tekhneryadov.s.o@366.ru");
		
		Почтец.Тема = "Предоплата по заказу";
		Почтец.ТекстПисьма = ТекстПисьма;
		
		Почтец.Функция_Послать();
		
		Почтец = Неопределено;
		
		ТекОбъект = Выборка.ИнтернетЗаказ.ПолучитьОбъект();			
		ТекОбъект.ПроинформироватьКлиентаОПредоплате = Ложь;
		
		ТекОбъект.Записать(?(ТекОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));			
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура проверяет, есть ли записи в РС.ДниПродаж на дату предшествующей передаваемой дате (дате рассылки)
// и если данных нет, заполняет регистр.
// Основной алгоритм взят из процедуры ЗаполнениеРегистраДниПродаж, обработки Регламент_ВыполнениеПрочихОпераций
Процедура ЗаполнениеРСДниПродажПоНеобходимости(ДатаРассылки) Экспорт

	Для й = 1 По 1 Цикл
		
		Период = НачалоДня(ДатаРассылки-й*24*60*60);
		Запрос = Новый запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДниПродаж.День КАК День
		|ИЗ
		|	РегистрСведений.ДниПродаж КАК ДниПродаж
		|ГДЕ
		|	ДниПродаж.День = &День";
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("День", Период);
		РезультатЗапроса = Запрос.Выполнить();
		// Если в регистре есть записи на дату, тогда пропускаем,
		// иначе идем дальше и заполняем регистр на указанную дату.
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Продолжить	
		КонецЕсли; 
		
		СтрокаПараметров = "Период: " + Формат(Период, "ДФ=dd.MM.yyyy");
		
		ВыполняемаяПроцедура = ОМ_ТСО.ИнициализироватьВыполняемуюПроцедуру(8, СтрокаПараметров);
		Если ВыполняемаяПроцедура = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МестаХранения.Ссылка КАК Ссылка,
		|	УЗ_СменаККМ.СкладКод КАК Код
		|ПОМЕСТИТЬ втСклады
		|ИЗ
		|	Документ.УЗ_СменаККМ КАК УЗ_СменаККМ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МестаХранения КАК МестаХранения
		|		ПО УЗ_СменаККМ.СкладКод = МестаХранения.Код
		|ГДЕ
		|	УЗ_СменаККМ.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И МестаХранения.НаПрямыхПоставках
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСклады.Код КАК СкладКод,
		|	Матрица.Товар.Код КАК ТоварКод,
		|	Матрица.ГруппаАПИтог КАК ГруппаАП,
		|	Матрица.ДатаВнесенияВМатрицу КАК ДатаВнесенияВМатрицу
		|ПОМЕСТИТЬ втМатрица
		|ИЗ
		|	РегистрСведений.Матрица КАК Матрица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСклады КАК втСклады
		|		ПО Матрица.Аптека = втСклады.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Неликвиды КАК Неликвиды
		|		ПО Матрица.Аптека = Неликвиды.Аптека
		|			И Матрица.Товар.Код = Неликвиды.КодТовара
		|ГДЕ
		|	Матрица.ГруппаАПИтог В (""A"", ""B"", ""C"")
		|	И Неликвиды.Количество ЕСТЬ NULL
		|	И Матрица.Товар.УчаствуетВАП
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СкладКод,
		|	ТоварКод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	втМатрица.ТоварКод КАК Код
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	втМатрица КАК втМатрица
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АП.Код
		|ИЗ
		|	Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
		|ГДЕ
		|	АП.КодОП В
		|			(ВЫБРАТЬ
		|				втМатрица.ТоварКод
		|			ИЗ
		|				втМатрица)
		|	И НЕ АП.Код В
		|				(ВЫБРАТЬ
		|					втМатрица.ТоварКод
		|				ИЗ
		|					втМатрица)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УЗ_ПартииОстатки.СкладКод КАК СкладКод,
		|	ВЫБОР
		|		КОГДА АП.КодОП > 0
		|			ТОГДА АП.КодОП
		|		ИНАЧЕ АП.Код
		|	КОНЕЦ КАК ТоварКод
		|ПОМЕСТИТЬ втОстатки
		|ИЗ
		|	РегистрНакопления.УЗ_Партии.Остатки(
		|			&ДатаНачала,
		|			ТоварКод В
		|					(ВЫБРАТЬ
		|						втТовары.Код
		|					ИЗ
		|						втТовары)
		|				И СкладКод В
		|					(ВЫБРАТЬ
		|						втСклады.Код
		|					ИЗ
		|						втСклады)) КАК УЗ_ПартииОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УЗ_Партии КАК ПартииИнтернетАптек
		|		ПО УЗ_ПартииОстатки.ПартияКод = ПартииИнтернетАптек.Код
		|			И (ПартииИнтернетАптек.ТипПартии = ""I"")
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АССОРТИМЕНТНЫЙ_ПЛАН КАК АП
		|		ПО УЗ_ПартииОстатки.ТоварКод = АП.Код
		|ГДЕ
		|	ПартииИнтернетАптек.Ссылка ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ втТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ втСклады
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втМатрица.СкладКод КАК КодАптеки,
		|	втМатрица.ТоварКод КАК КодТовара,
		|	втМатрица.ГруппаАП КАК ГруппаАП,
		|	ВЫБОР
		|		КОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(втМатрица.ДатаВнесенияВМатрицу, ДЕНЬ), &ДатаНачала, ДЕНЬ) >= 7
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Дефектура,
		|	ЕСТЬNULL(АвтозаказОптСкоростиПродаж.Скорость, 0) КАК Скорость,
		|	ЕСТЬNULL(АвтозаказОптСкоростиПродаж.ЦенаРознСНДС, 0) КАК ЦенаРозн
		|ИЗ
		|	втМатрица КАК втМатрица
		|		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
		|		ПО втМатрица.СкладКод = втОстатки.СкладКод
		|			И втМатрица.ТоварКод = втОстатки.ТоварКод
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АвтозаказОптСкоростиПродаж КАК АвтозаказОптСкоростиПродаж
		|		ПО втМатрица.СкладКод = АвтозаказОптСкоростиПродаж.КодАптеки
		|			И втМатрица.ТоварКод = АвтозаказОптСкоростиПродаж.КодТовара
		|ГДЕ
		|	втОстатки.ТоварКод ЕСТЬ NULL";
		
		Запрос.УстановитьПараметр("ДатаНачала", Период);
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Период));
		
		РезультатЗапроса = Запрос.Выполнить();		
		
		НаборЗаписей = РегистрыСведений.ДниПродаж.СоздатьНаборЗаписей();	
		НаборЗаписей.Отбор.День.Установить(Период);
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл		
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.День = Период;
						
		КонецЦикла;
		
		НаборЗаписей.Записать(Истина);
		
		ОМ_ТСО.ЗаписьВЛог(ВыполняемаяПроцедура.Лог, "Обработка выполнена (" + НаборЗаписей.Количество() + ")", 1);
		
	КонецЦикла	
	
КонецПроцедуры
 