// Формирует список регистров остатков
//
// Параметры: 
//	Нет.
//
// Возвращаемое значение: 
//	список значений, содержащийимена всех регистров остатков
//
Функция ПолучитьСписокРегистровНакопления() Экспорт

	СписокРегистровОстатков = Новый СписокЗначений;

	Для Каждого МетаданныеРегистр Из Метаданные.РегистрыНакопления Цикл
		
		Если НЕ ПравоДоступа("Чтение", МетаданныеРегистр) Тогда
			Продолжить;
		КонецЕсли;

		СписокРегистровОстатков.Добавить(МетаданныеРегистр.Имя, МетаданныеРегистр.Представление());

	КонецЦикла;
	
	Возврат СписокРегистровОстатков;
	
КонецФункции // ПолучитьСписокРегистровНакопления()

Процедура ЗапланироватьОтчетНаВыполнение(ИмяОтчета, НастройкиПостроителя, НастройкиКомпановки, ТекстЗапроса, ПараметрыЗапроса, АдресДоставки, ПланируемаяДатаВыполения, Примечание = "") Экспорт //ТСО
	
	Отчет = Справочники.ОтчетыДляОтложенногоФормирования.НайтиПоКоду(ИмяОтчета);
	
	Если ЗначениеЗаполнено(Отчет) Тогда
		
		НаборЗаписей = РегистрыСведений.ЗапросыНаФормированиеОтчетов.СоздатьНаборЗаписей();
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Отчет = Отчет; 		
		НоваяЗапись.ДатаЗапроса = ТекущаяДата();
		
		Если Отчет.СКД Тогда			
			НоваяЗапись.НастройкиКомпановки = Новый ХранилищеЗначения(НастройкиКомпановки);
		Иначе
			НоваяЗапись.НастройкиПостроителя = Новый ХранилищеЗначения(НастройкиПостроителя);
			НоваяЗапись.ТекстЗапроса = ТекстЗапроса;
			НоваяЗапись.ПараметрыЗапроса = Новый ХранилищеЗначения(ПараметрыЗапроса);
		КонецЕсли;
		
		НоваяЗапись.Сотрудник = ПараметрыСеанса.ТекущийСотр;
		НоваяЗапись.АдресДоставки = АдресДоставки;
		НоваяЗапись.ПланируемаяДатаВыполения = ПланируемаяДатаВыполения;
		НоваяЗапись.Примечание = Примечание;
		
		НаборЗаписей.Записать(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РассылкаОтчетов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗапросыНаФормированиеОтчетов.Отчет,
	|	ЗапросыНаФормированиеОтчетов.Отчет.Код КАК ИмяОтчета,
	|	ЗапросыНаФормированиеОтчетов.Отчет.Внешний КАК Внешний,
	|	ЗапросыНаФормированиеОтчетов.Отчет.СКД КАК СКД,
	|	ЗапросыНаФормированиеОтчетов.НастройкиПостроителя,
	|	ЗапросыНаФормированиеОтчетов.НастройкиКомпановки,
	|	ЗапросыНаФормированиеОтчетов.ТекстЗапроса,
	|	ЗапросыНаФормированиеОтчетов.ПараметрыЗапроса,
	|	ЗапросыНаФормированиеОтчетов.АдресДоставки КАК АдресДоставки,
	|	ЗапросыНаФормированиеОтчетов.Примечание,
	|	ЗапросыНаФормированиеОтчетов.ДатаЗапроса
	|ИЗ
	|	РегистрСведений.ЗапросыНаФормированиеОтчетов КАК ЗапросыНаФормированиеОтчетов
	|ГДЕ
	|	ЗапросыНаФормированиеОтчетов.ПланируемаяДатаВыполения <= &ТекДата
	|ИТОГИ ПО
	|	АдресДоставки"; 	
	
	Если Час(ТекущаяДата()) < 6 Тогда
		ТекДата = НачалоДня(ТекущаяДата()) - 24*60*60;
	Иначе
		ТекДата = НачалоДня(ТекущаяДата());
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТекДата", ТекДата);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаАдресДоставки = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаАдресДоставки.Следующий() Цикл
		
		ТаблицаОтправляемыхФайлов = Новый ТаблицаЗначений;
		ТаблицаОтправляемыхФайлов.Колонки.Добавить("ИмяОтчета");
		ТаблицаОтправляемыхФайлов.Колонки.Добавить("ПутьКФайлуОтчета");
		ТаблицаОтправляемыхФайлов.Колонки.Добавить("ДатаЗапроса");
		ТаблицаОтправляемыхФайлов.Колонки.Добавить("Примечание");
		
		НачалоФормирования = ТекущаяДата();
		
		ВыборкаДетальныеЗаписи = ВыборкаАдресДоставки.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ТабДок = Новый ТабличныйДокумент;
			
			Если ВыборкаДетальныеЗаписи.СКД Тогда
				
				СхемаКомпановки = Отчеты[ВыборкаДетальныеЗаписи.ИмяОтчета].ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
				НастройкиКомпановки = ВыборкаДетальныеЗаписи.НастройкиКомпановки.Получить();
				
				ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;		
				КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; 		
				МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпановки, НастройкиКомпановки, ДанныеРасшифровки);
				
				ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
				ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);			
				
				ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
				ПроцессорВывода.УстановитьДокумент(ТабДок);
				
				ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
				
			Иначе
				
				НастройкиПостроителя = ВыборкаДетальныеЗаписи.НастройкиПостроителя.Получить();
				ПараметрыЗапроса = ВыборкаДетальныеЗаписи.ПараметрыЗапроса.Получить();
				
				Построитель = Новый ПостроительОтчета; 			
				Построитель.Текст = ВыборкаДетальныеЗаписи.ТекстЗапроса;			
				Построитель.УстановитьНастройки(НастройкиПостроителя);
				
				Для Каждого ТекПараметр Из ПараметрыЗапроса Цикл
					
					Построитель.Параметры.Вставить(ТекПараметр.Ключ, ТекПараметр.Значение);
					
					Если Лев(ТекПараметр.Ключ, 5) = "Дата1" Тогда
						НачПериода = ТекПараметр.Значение;
					ИначеЕсли Лев(ТекПараметр.Ключ, 5) = "Дата2" Тогда
						КонПериода = ТекПараметр.Значение;
					КонецЕсли;
					
				КонецЦикла;
				
				Если ВыборкаДетальныеЗаписи.ИмяОтчета = "УниверсальныйОтчетПоТовару" Тогда
					
					Построитель.ВыводитьЗаголовокОтчета = Истина;
					Построитель.ТекстЗаголовка = "Движение товара за период" + " с " + НачалоДня(НачПериода) + " по " + КонецДня(КонПериода);;
					Построитель.ВыводитьОбщиеИтоги = Истина;
					
				КонецЕсли;
				
				Построитель.МакетОформления = ПолучитьОбщийМакет("ОформлениеКлассика");					
				Построитель.ОформитьМакет();
				
				Построитель.Вывести(ТабДок);			
				
			КонецЕсли;
			
			ИмяФайлаОтчета = КаталогВременныхФайлов() + ВыборкаДетальныеЗаписи.ИмяОтчета + Формат(ВыборкаДетальныеЗаписи.ДатаЗапроса, "ДФ=' дд.ММ.гггг ЧЧ_мм_сс'") + ".xls"; 
			ТабДок.Записать(ИмяФайлаОтчета, ТипФайлаТабличногоДокумента.XLS);
			
			НовСтр = ТаблицаОтправляемыхФайлов.Добавить();
			НовСтр.ИмяОтчета = ВыборкаДетальныеЗаписи.ИмяОтчета;
			НовСтр.ПутьКФайлуОтчета = ИмяФайлаОтчета;
			НовСтр.ДатаЗапроса = ВыборкаДетальныеЗаписи.ДатаЗапроса;
			НовСтр.Примечание = ВыборкаДетальныеЗаписи.Примечание;
			
			НаборЗаписей = РегистрыСведений.ЗапросыНаФормированиеОтчетов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Отчет.Установить(ВыборкаДетальныеЗаписи.Отчет);
			НаборЗаписей.Отбор.ДатаЗапроса.Установить(ВыборкаДетальныеЗаписи.ДатаЗапроса);
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
		ВремяФормирования = Дата(1,1,1) + Макс((ТекущаяДата() - НачалоФормирования), 1);
		
		ОтправитьОтчеты(ТаблицаОтправляемыхФайлов, ВыборкаАдресДоставки.АдресДоставки, ВремяФормирования);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтправитьОтчеты(ТаблицаВложений, Получатель, ВремяФормирования)
	
	ИПП = Новый ИнтернетПочтовыйПрофиль;
	
	ИПП.АдресСервераSMTP = "msk-exch.msk.366.int"; 	
	ИПП.Пользователь 	 = "1c_vrn@366.ru";
	ИПП.ПользовательSMTP = "1c_vrn@366.ru"; 	
	ИПП.Пароль 			 = "test123*";
	ИПП.ПарольSMTP 		 = "test123*"; 	
	ИПП.ПортSMTP 		 = "25";
	
	Сообщение = Новый ИнтернетПочтовоеСообщение;
	
	Сообщение.Отправитель.Адрес = "1c_vrn@366.ru";
	Сообщение.Отправитель.ОтображаемоеИмя = "Сервер 1С";
	Сообщение.Тема = "Рассылка отчетов от " + Формат(ТекущаяДата(), "ДЛФ=DD");
	
	Сообщение.Получатели.Добавить(Получатель);
	
	Счетчик = 1;
	СписокОтчетов = "";
	
	Для Каждого ТекСтр Из ТаблицаВложений Цикл
		
		Сообщение.Вложения.Добавить(ТекСтр.ПутьКФайлуОтчета, ТекСтр.ИмяОтчета);
		СписокОтчетов = СписокОтчетов + Строка(Счетчик) + ". " + ТекСтр.ИмяОтчета + " (дата запроса: " + ТекСтр.ДатаЗапроса + "; примечание: " + ТекСтр.Примечание + ")" + Символы.ПС;
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	ТекстПисьма =	"Сформированы отчеты:" + Символы.ПС + 
					СписокОтчетов + 
					"Результат отправлен по почте (см.вложения). " +
					"Общее время формирования: " + Формат(ВремяФормирования, "ДФ='Ч ""ч."" м ""мин."" с ""сек.""'");
		
	Сообщение.Тексты.Добавить(ТекстПисьма);
	
	Почта = Новый ИнтернетПочта;
	
	Попытка
		Почта.Подключиться(ИПП);
		Почта.Послать(Сообщение);
		Почта.Отключиться();
	Исключение
	КонецПопытки;
	
КонецПроцедуры
