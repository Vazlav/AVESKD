Функция ВычислитьКонтрольнуюСумму(ШКод) Экспорт
	// Получает 12 первых цифр EAN 13  возвращает 
	// корректный штрихкод из 13 символов
	// сервер такой фигней не нагружаем
	//---------------------------------------------
	//Сообщить(ШКод);
	Четн=0;
	НеЧетн=0;
	Для К=1 ПО 12 Цикл
		Если Цел(К/2)=К/2 Тогда
			Четн=Четн+Число(Сред(ШКод,К,1))*3;
		Иначе
			НеЧетн=НеЧетн+Число(Сред(ШКод,К,1));
		КонецЕсли;
	КонецЦикла;
	
	Четн=(Цел(Четн/10)*10+10)-Четн;
	НеЧетн=(Цел(НеЧетн/10)*10+10)-НеЧетн;
	
	КонтСум=Четн+НеЧетн;
	
	ПолныйШКод=СокрП(Лев(ШКод,12))+Прав(КонтСум,1);
	Возврат   ПолныйШКод;
КонецФункции

//============================================================================ GtG ===
Функция ОМ1_ШК_СПрефиксом  (Префикс,НекийКодЧислом) Экспорт
    // Назначение:
	// Генерит штрихкод по числовому коду и префиксу
	// 
    // сервер такой фигней не нагружаем
	//--------------------------------------------------------------------------------
	Рез=""+Префикс;
	ДлинаЧастиШКБезПРефикса=12-СтрДлина(Рез);
	
	СтрКода=Формат(НекийКодЧислом,"ЧЦ="+ДлинаЧастиШКБезПРефикса+"; ЧДЦ=0; ЧВН=; ЧГ=0");
	Рез=Рез+СтрКода;
	
	Если СтрДлина(Рез)<>12 Тогда
		Сообщить("Кривая база штрихкода! "+Рез+" ,а должно быть 12 символов!");
	КонецЕсли; 
	
    РезШК=ВычислитьКонтрольнуюСумму(Рез);
     Возврат РезШК;
КонецФункции
//============================================================================ GtG ===


#Если Клиент Тогда
//============================================================================ GtG ===
Функция ОМ1_ПолучитьСписокЕИТ  (Товар) Экспорт
    // Назначение:
	// Получить список значений - единиц измерения товара
	//---------------------------------------------------
	// колбасим процесс на сервере
	//--------------------------------------------------------------------------------
	
	Зтхт="
	|SELECT
	|	ЕИТ.Ссылка as СцылкаЕИТ 
	|FROM
	|	Справочник.ЕИТ as ЕИТ
	|WHERE
	|	ЕИТ.Владелец.Ссылка = &ТОвар
	|	AND 
	|   ЕИТ.ПометкаУдаления = ЛОЖЬ
	|
	|GROUP BY
	|	ЕИТ.Ссылка,
	|	ЕИТ.Владелец.Ссылка";
	
	Зпр= Новый Запрос;
	Зпр.УстановитьПараметр("ТОвар",Товар);
	Зпр.Текст=Зтхт;
	РЗ=Зпр.Выполнить();
	ТЗ = РЗ.Выгрузить();
	
	Рез=Новый СписокЗначений;
	
	Для каждого СтрТЗ Из ТЗ Цикл
		Рез.Добавить(СтрТЗ.СцылкаЕИТ);
	КонецЦикла; 
	
	Если Рез.Количество()=0 тогда
		Сообщить("У товара "+Товар+" не задано НИ ОДНОЙ(!) Единицы Измерения Товара в АП!!!");
	КонецЕсли;
    Возврат Рез;
КонецФункции
//============================================================================ GtG ===
#КонецЕсли


//============================================================================ GtG ===
Функция ОМ1_ПолучитьМестоНаСкладе  (ТоварСсы,СкладСсы) Экспорт
    // Назначение:
	// Получить по куазанному товару его место на указанном складе
	// Возвращает ссылку на место или пустую ссылку
    // 
	//--------------------------------------------------------------------------------
	
	Если  СкладСсы.ТипСклада <> Перечисления.ТипыМХ.Опт тогда
		Возврат "";
	КонецЕсли; 	
	
	
	
	Тхт="ВЫБРАТЬ РАЗЛИЧНЫЕ
	    |	ПривязкаАПКСкладскомуМесту.Место КАК Место
	    |ИЗ
	    |	Справочник.ПривязкаАПКСкладскомуМесту КАК ПривязкаАПКСкладскомуМесту
	    |ГДЕ
	    |	ПривязкаАПКСкладскомуМесту.Владелец = &СсылкаТов
	    |	И ПривязкаАПКСкладскомуМесту.Склад = &СсылкаСкл
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ПривязкаАПКСкладскомуМесту.Место";
     Запрос=Новый Запрос;
	 Запрос.Текст=Тхт;
	 
	 Запрос.УстановитьПараметр("СсылкаТов",ТоварСсы);
	 Запрос.УстановитьПараметр("СсылкаСкл",СкладСсы);
	 
	 Рез=Запрос.Выполнить();
	 
	 Если Рез.Пустой() ТОгда
		 Возврат "";
	 КонецЕсли; 	 
	 
	 ВыбРез=Рез.Выбрать();
	 
	 Пока ВыбРез.Следующий() Цикл
		 Возврат ВыбРез.Место;
     КонецЦикла;
	 
КонецФункции
//============================================================================ GtG ===

//#Если Клиент Тогда
//============================================================================ GtG ===
Функция ОМ1_СоздатьПартиюТовара  (Товар) Экспорт
    // Назначение:
	// Создает запись в справочник Партий подчиненную 
	// указанному товару (т.е. элементу АП)
    // генерирует ШК и навешивает его на партию
	// Возвращает ссылку на элемент справочника партий.
	//
	// ИСПОЛЬЗОВАНИЕ:
	// При оприходовании товара сначала создается партия с незаполненными реквизитами
	// СтавкаНДС,ЦенаЗакуп,ДокументПоступления,ЕИТЗакупки,НдсЗакупЦены,Серия,ЦенаПроизводителя,ЦенаГосрегистрации
	// которые заполняются при проведении документа оприходования
	//
	// По умолчанию считается что товар купелнный , а не комиссионный и т.д.
	//--------------------------------------------------------------------------------
    Партия = Справочники.Партии.СоздатьЭлемент();  // -> Дает СправочникОбъект
	
	Партия.УстановитьНовыйКод();
	
	Если Партия.Код = 0 Тогда // иногда не срабатывает УстановитьНовыйКод() и далее вылетает ошибка.  на 8.2 такой картины никогда не было
		#Если Клиент Тогда
			Сообщить("не сработал метод Партия.УстановитьНовыйКод(). Вызваем его повторно.");
		#КонецЕсли
		Партия.УстановитьНовыйКод();
	КонецЕсли;
	
	//КодБезКС=""+строка(Константы.Первые2СимволаПартий.Получить())+Формат(Число(Партия.Код), "ЧЦ=10; ЧВН=; ЧГ=0");
	КодБезКС="24"+Формат(Число(Партия.Код), "ЧЦ=10; ЧВН=; ЧГ=0");
	
	Партия.Наименование        = ВычислитьКонтрольнуюСумму(КодБезКС);
	Партия.Владелец            = Товар;
	Партия.ВидПоступленияТовара=Перечисления.ВидыПоступленияТоваров.Покупка; // значение по умолчанию. Используется при создании затычки при загрузке выручки.
	Партия.Записать();
	
	
	
	Возврат Партия;
КонецФункции
//============================================================================ GtG ===
//#КонецЕсли


#Если Сервер Тогда
//============================================================================ GtG ===
Функция ОМ1_ПолучитьЕИТПоУм(ВыбТовар) Экспорт
	// Назначение:
	// Получает ЕИТ товара по умолчанию
	// Если не заполнена сигналит, и берет наименьщую из справочника ЕИТ 
	//---------------------------------------------
	// По возможности колбасим ЭТО на сервере
	//--------------------------------------------------------------------------------
	//выбТовар=справочники.АССОРТИМЕНТНЫЙ_ПЛАН.ПолучитьСсылку();//затычка
	
	Рез=выбТовар.ЕдиницаПоУмолчанию;
	
	Если Рез=справочники.ЕИТ.ПустаяСсылка() тогда
		Рез= выбТовар.ЕдиницаОтгрузки;
	КонецЕсли;	
	
	Возврат Рез;
КонецФункции
//============================================================================ GtG ===
#КонецЕсли
   

#Если Клиент Тогда
	//============================================================================ GtG ===
	Функция ОМ1_ПолучитьЕИТК1  (Товар) Экспорт
		
		// интересует та ЕИТ у которой коэфф единица		
		Тзпр="ВЫБРАТЬ
		|	ЕИТ.Ссылка Как Сцылка
		|ИЗ
		|	Справочник.ЕИТ КАК ЕИТ
		|ГДЕ
		|	ЕИТ.Владелец = &ВыбТовар
		|	И ЕИТ.К = 1
		|	И ЕИТ.ПометкаУдаления = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕИТ.Ссылка";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТЗпр;
		Запрос.УстановитьПараметр("ВыбТовар",Товар);
		РЗпр=Запрос.Выполнить();
		
		ТЗ=Рзпр.Выгрузить();
		Если ТЗ.Количество()=0 Тогда
			Сообщить("У товара "+ТОвар+" не указана базовая единица измерения (с коэфф.=1)! Безобразие!");
			Возврат ""; // умываем руки, единицу нужно создать
		КонецЕсли;
		
		Для каждого СтрТЗ Из ТЗ Цикл // в норме должна быть 1 строка в тз
			Возврат СтрТЗ.Сцылка;
		КонецЦикла; 
				
	КонецФункции
	//============================================================================ GtG ===
#КонецЕсли


Процедура ПроверитьИОбновитьДанныеПартии(ДокОбъект,Отказ=Ложь) Экспорт
	
	
	//---------------<Эта процедура вызывается из расценки.>---------------------------// GtG // 22.10.2014 15:01:16
	// Нельзя её запускать для документов, которые не создают новых партий
	Если НЕ(  ТипЗнч(ДокОбъект)=Тип("ДокументОбъект.ПоступлениеТовара") или 
	       ТипЗнч(ДокОбъект)=Тип("ДокументОбъект.ВводОстатков")) ТОгда
		   ВОЗВРАТ;
	КонецЕсли;	   
	//--------------------------------------------------------------------------------// GtG |>22.10.2014 15:01:44
	
	
	   
	   
	
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокОбъект.Ссылка);
	
	Если ТипЗнч(ДокОбъект)=Тип("ДокументОбъект.ПоступлениеТовара") тогда
		
		Если ДокОбъект.Склад.ТипНалогообложения<>Перечисления.ТипыНалогообложения.НДС или ДокОбъект.Поставщик.КонтрагентНаУСН=Истина тогда
			ТипНалогообложения =Перечисления.ТипыНалогообложения.ЕНВД; //Бух наценка считается как Розничная_с_НДС - Закупочная_с_НДС
		Иначе	
			ТипНалогообложения =Перечисления.ТипыНалогообложения.НДС; //Бух наценка считается как Розничная_с_НДС - Закупочная_БЕЗ_НДС
		КонецЕСли;		
		Запрос.УстановитьПараметр("ТипНалогообложения",ТипНалогообложения);	
		
		ТХТ = "ВЫБРАТЬ
		|	ТЧ.Партия,
		|	ТЧ.СрокГодности,
		|	ТЧ.СерияСтрока,
		|	ТЧ.Серия,
		|	ВЫБОР
		|		КОГДА ТЧ.Ссылка ССЫЛКА Документ.ПоступлениеТовара
		|			ТОГДА ВЫРАЗИТЬ(ТЧ.Ссылка КАК Документ.ПоступлениеТовара).Дата
		|	КОНЕЦ КАК ДатаПоступления,
		|	ТЧ.Коэфф КАК К,
		|	ВЫРАЗИТЬ(ТЧ.Ссылка КАК Документ.ПоступлениеТовара).ВидПоступленияТовара КАК ВидПоступленияТовара,
		|	ТЧ.Производитель,
		|	ТЧ.ЦенаГосРегистрации,
		|	ТЧ.СтавкаНДС,
		|	ТЧ.СтавкаНДС КАК СтавкаНДСРеализации,
		|	ТЧ.Баркод,
		|	ТЧ.НомерГТД,
		|	ТЧ.ЦенаПроизводителя КАК ЦенаПроизводителяБезНДС,
		|	ВЫРАЗИТЬ(ТЧ.Ссылка КАК Документ.ПоступлениеТовара).Поставщик КАК Поставщик,
		|	ТЧ.Ссылка КАК ДокументПоступления,
		|	ТЧ.ЦенаЗакуп КАК ЦенаЗакуп,
		|	&ТипНалогообложения КАК ТипНалогообложенияПоступленияТоваров
		|ИЗ
		|	Документ.ПоступлениеТовара.Товар КАК ТЧ
		|ГДЕ
		|	ТЧ.Ссылка = &Ссылка
		|	И (ТЧ.СрокГодности <> ТЧ.Партия.СрокГодности
		|			ИЛИ ТЧ.СерияСтрока <> ТЧ.Партия.СерияСтрока
		|			ИЛИ началоПериода(ТЧ.Ссылка.Дата,ДЕНЬ) <> НачалоПериода(ТЧ.Партия.ДатаПоступления,ДЕНЬ)
		|			ИЛИ ТЧ.Коэфф <> ТЧ.Партия.К
		|			ИЛИ ТЧ.Ссылка.ВидПоступленияТовара <> ТЧ.Партия.ВидПоступленияТовара
		|			ИЛИ ТЧ.Производитель <> ТЧ.Партия.Производитель
		|			ИЛИ ТЧ.ЦенаГосРегистрации <> ТЧ.Партия.ЦенаГосРегистрации
		|			ИЛИ ТЧ.СтавкаНДС <> ТЧ.Партия.СтавкаНДС
		|			ИЛИ ТЧ.Баркод <> ТЧ.Партия.БарКод
		|			ИЛИ ТЧ.НомерГТД <> ТЧ.Партия.НомерГТД
		|			ИЛИ ТЧ.ЦенаПроизводителя <> ТЧ.Партия.ЦенаПроизводителяБезНДС
		|			ИЛИ ТЧ.Ссылка.Поставщик <> ТЧ.Партия.Поставщик
		|			ИЛИ ТЧ.Ссылка <> (ВЫРАЗИТЬ(ТЧ.Партия.ДокументПоступления КАК Документ.ПоступлениеТовара))
		|			ИЛИ ТЧ.ЦенаЗакуп <> ТЧ.Партия.ЦенаЗакуп
		|			ИЛИ &ТипНалогообложения <> ТЧ.Партия.ТипНалогообложенияПоступленияТоваров)";
		
	ИначеЕсли ТипЗнч(ДокОбъект)=Тип("ДокументОбъект.ВводОстатков") тогда
		
		Если ДокОбъект.Склад.ТипНалогообложения<>Перечисления.ТипыНалогообложения.НДС  тогда
			ТипНалогообложения =Перечисления.ТипыНалогообложения.ЕНВД; //Бух наценка считается как Розничная_с_НДС - Закупочная_с_НДС
		Иначе	
			ТипНалогообложения =Перечисления.ТипыНалогообложения.НДС; //Бух наценка считается как Розничная_с_НДС - Закупочная_БЕЗ_НДС
		КонецЕСли;		
		Запрос.УстановитьПараметр("ТипНалогообложения",ТипНалогообложения);	
		
		
		Запрос.УстановитьПараметр("ТипНалогообложенияСклада",ДокОбъект.Склад.ТипНалогообложения);
		
		Запрос.УстановитьПараметр("ВидПоступленияТовара",Перечисления.ВидыПоступленияТоваров.Покупка);
		ТХТ = "ВЫБРАТЬ
		|	ТЧ.Партия,
		|	ТЧ.СрокГодности КАК СрокГодности,
		|	ТЧ.СерияСтрока КАК СерияСтрока,
		|	ТЧ.Серия,
		|	ВЫБОР
		|		КОГДА ТЧ.Ссылка ССЫЛКА Документ.ВводОстатков
		|			ТОГДА ВЫРАЗИТЬ(ТЧ.Ссылка КАК Документ.ВводОстатков).Дата
		|	КОНЕЦ КАК ДатаПоступления,
		|	ТЧ.Коэфф КАК К,
		|	&ВидПоступленияТовара КАК ВидПоступленияТовара,
		|	ТЧ.Производитель,
		|	ТЧ.ЦенаГосРегистрации,
		|	ТЧ.СтавкаНДС,
		|	ТЧ.СтавкаНДС КАК СтавкаНДСРеализации,
		|	ТЧ.Баркод,
		|	ТЧ.НомерГТД,
		|	ТЧ.ЦенаПроизводителя КАК ЦенаПроизводителяБезНДС,
		|	ТЧ.ЕИТ КАК ЕИТЗакупки,
		|	ТЧ.Поставщик КАК Поставщик,
		|	ТЧ.Ссылка КАК ДокументПоступления,
		|	ТЧ.ЦенаЗакуп КАК ЦенаЗакуп,
		|	&ТипНалогообложения КАК ТипНалогообложенияПоступленияТоваров
		|ИЗ
		|	Документ.ВводОстатков.Товар КАК ТЧ
		|ГДЕ
		|	ТЧ.Ссылка = &Ссылка
		|	И (ТЧ.СрокГодности <> ТЧ.Партия.СрокГодности
		|			ИЛИ ТЧ.СерияСтрока <> ТЧ.Партия.СерияСтрока
		|			ИЛИ началоПериода(ТЧ.Ссылка.Дата,ДЕНЬ) <> НачалоПериода(ТЧ.Партия.ДатаПоступления,ДЕНЬ)
		|			ИЛИ ТЧ.Коэфф <> ТЧ.Партия.К
		|			ИЛИ &ВидПоступленияТовара <> ТЧ.Партия.ВидПоступленияТовара
		|			ИЛИ ТЧ.Производитель <> ТЧ.Партия.Производитель
		|			ИЛИ ТЧ.ЦенаГосРегистрации <> ТЧ.Партия.ЦенаГосРегистрации
		|			ИЛИ ТЧ.СтавкаНДС <> ТЧ.Партия.СтавкаНДС
		|			ИЛИ ТЧ.Баркод <> ТЧ.Партия.БарКод
		|			ИЛИ ТЧ.НомерГТД <> ТЧ.Партия.НомерГТД
		|			ИЛИ ТЧ.ЦенаПроизводителя <> ТЧ.Партия.ЦенаПроизводителяБезНДС
		|			ИЛИ ТЧ.ЕИТ <> ТЧ.Партия.ЕИТЗакупки
		|			ИЛИ ТЧ.Поставщик <> ТЧ.Партия.Поставщик
		|			ИЛИ ТЧ.Ссылка <> (ВЫРАЗИТЬ(ТЧ.Партия.ДокументПоступления КАК Документ.ВводОстатков))
		|			ИЛИ ТЧ.ЦенаЗакуп <> ТЧ.Партия.ЦенаЗакуп
		|			ИЛИ ВЫБОР
		|				КОГДА &ТипНалогообложенияСклада <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.НДС)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.ЕНВД)
		|				КОГДА НЕ ТЧ.Поставщик.Ссылка ЕСТЬ NULL 
		|						И ТЧ.Поставщик.КонтрагентНаУСН = ИСТИНА
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.ЕНВД)
		|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложения.НДС)
		|			КОНЕЦ <> ТЧ.Партия.ТипНалогообложенияПоступленияТоваров)";		  
	КонецЕсли;
	
	Запрос.Текст = ТХТ;
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТЗ = Рез.Выгрузить();
	
	Для каждого стр из ТЗ Цикл
		
		Объект = стр.Партия.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект,стр);
		Записан = Ложь;
		Для н=0 по 3 Цикл
			Попытка
				Объект.Записать();
				Записан = Истина;
				Прервать;
			Исключение
				ОбщегоНазначения.Задержка(2);
			КонецПопытки;
		КонецЦикла;
		Если Записан=Ложь Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОМ1_ОбновитьДанныеПартии  (ТекСтрДок, ЭтотОбъект)  экспорт
    // Назначение:
	// Обновляает данные партии в справочнике партий
	// Партия должна быть
	//--------------------------------------------------------------------------------
	
	Если ТекСтрДок.Партия.Пустая() Тогда
		Возврат; // ибо нехуя
	КонецЕсли;
	
	Партия=ТекСтрДок.Партия.ПолучитьОбъект(); // ибо ссылка
	//Запомним партию до изменения
	//ПартияКопия = Партия;
	
	Партия.К		= ТекСтрДок.Коэфф;
	Партия.СтавкаНДС= ТекСтрДок.СтавкаНДС;
	
	Если ТекСтрДок.КоличествоФакт<>0 Тогда
		КучеряваяЗакупЦенаСНДС=ТекСтрДок.СуммаЗакуп / ТекСтрДок.КоличествоФакт; // с ндс,  точность 6 знаков
	Иначе
		КучеряваяЗакупЦенаСНДС=ТекСтрДок.ЦенаЗакуп;
	КонецЕсли; 
	
	Партия.ЦенаЗакуп= КучеряваяЗакупЦенаСНДС; // точность 6 знаков
	Партия.ДокументПоступления=ЭтотОбъект.Ссылка;
	Партия.ДатаПоступления=ЭтотОбъект.Дата;
	
	Попытка
		Партия.Поставщик = ЭтотОбъект.Поставщик; // приход
	Исключение
		// нет поставщика в шапке документа
		Попытка
			Партия.Поставщик = ТекСтрДок.Поставщик;  // ввод остатков
		Исключение
			// и тут тоже нет
		КонецПопытки;
	КонецПопытки; 
	
	Партия.ЕИТЗакупки=ТекСтрДок.ЕИТ;
	Партия.НомерГТД=ТекСтрДок.НомерГТД;

	Партия.Серия=ТекСтрДок.Серия;
	Партия.СерияСтрока=ТекСтрДок.СерияСтрока;
	Партия.СрокГодности=ТекСтрДок.СрокГодности;
	Партия.ЦенаПроизводителяБезНДС =ТекСтрДок.ЦенаПроизводителя;
	Партия.БарКод = ТекСтрДок.БарКод;
    Партия.ВидПоступленияТовара = ЭтотОбъект.ВидПоступленияТовара;
	
	//Попытка	   // убрано за ненадобностью 30-11-2011
	//	Партия.СтавкаНДСРеализации = Партия.Серия.Сертификат.КодОКП.СтавкаНДС; // GtG 02.10.2008 18:10:27
	//ИСключение
	//	// чего-то нехватает (серии, сертификата или кода ОКП)
	//КонецПопытки;
	
	Если Партия.СтавкаНДСРеализации.Пустая()=Истина ТОгда
		Партия.СтавкаНДСРеализации=Партия.СтавкаНДС;
	КонецЕсли;	
	
	Попытка
		Партия.ЦенаГосРегистрации = ТекСтрДок.ЦенаГосрегистрации; 
	Исключение
	КонецПопытки;
	
	Попытка
		Партия.Производитель = ТекСтрДок.Производитель; 
	Исключение
	КонецПопытки;
	
	
	//---------------<Тип налогообложения ПТ>---------------------------// GtG // 04.03.2013 12:42:18
	//Заполняем один раз при создании партии
	Если Партия.ТипНалогообложенияПоступленияТоваров.Пустая()=Истина тогда
		Если ТипЗнч(ЭтотОбъект)=Тип("ДокументОбъект.ПоступлениеТовара") тогда
			Если ЭтотОбъект.Склад.ТипНалогообложения<>Перечисления.ТипыНалогообложения.НДС  или 
				 ЭтотОбъект.Поставщик.КонтрагентНаУСН=Истина тогда
			 	Партия.ТипНалогообложенияПоступленияТоваров =Перечисления.ТипыНалогообложения.ЕНВД; //Бух наценка считается как Розничная_с_НДС - Закупочная_с_НДС
			Иначе	
				Партия.ТипНалогообложенияПоступленияТоваров =Перечисления.ТипыНалогообложения.НДС; //Бух наценка считается как Розничная_с_НДС - Закупочная_БЕЗ_НДС
			КонецЕСли;
			
		ИначеЕсли	ТипЗнч(ЭтотОбъект)=Тип("ДокументОбъект.ВводОстатков") Тогда
			Если ЭтотОбъект.Склад.ТипНалогообложения<>Перечисления.ТипыНалогообложения.НДС  или 
				(ТекСтрДок.Поставщик.Пустая()=Ложь И ТекСтрДок.Поставщик.КонтрагентНаУСН=Истина) тогда
			 	Партия.ТипНалогообложенияПоступленияТоваров =Перечисления.ТипыНалогообложения.ЕНВД; //Бух наценка считается как Розничная_с_НДС - Закупочная_с_НДС
			Иначе	
				Партия.ТипНалогообложенияПоступленияТоваров =Перечисления.ТипыНалогообложения.НДС; //Бух наценка считается как Розничная_с_НДС - Закупочная_БЕЗ_НДС
			КонецЕСли;
		КонецЕсли;
	КонецЕсли;
   //---------------<----------------------->---------------------------// GtG // 04.03.2013 12:42:24	

	ЕстьИзменения = Ложь; //Virus
	Реквизиты = Партия.Метаданные().Реквизиты;
	Для каждого стр из Реквизиты Цикл
		Если Партия.Ссылка[стр.Имя] <> Партия[стр.Имя] Тогда
				ЕстьИзменения = Истина;
				Прервать;
		КонецЕсли;
	КонецЦикла;	
	
	Если ЕстьИзменения Тогда
		
		Партия.Записать(); // ибо объект
	КонецЕсли;
	

КонецПроцедуры

Процедура ОМ1_ОбновитьДанныеПартииИзВводаОстатков(ТекСтрДок, ЭтотОбъект)  экспорт
    // Назначение:
	// Обновляает данные партии в справочнике партий
	// Партия должна быть
	//--------------------------------------------------------------------------------
	Если ТекСтрДок.Партия=Справочники.Партии.ПустаяСсылка() Тогда
		Возврат; // ибо нехуя
	КонецЕсли;
	
	
	Партия=ТекСтрДок.Партия.ПолучитьОбъект(); // ибо ссылка
	
	Партия.К		= ТекСтрДок.Коэфф;
	Партия.СтавкаНДС= ТекСтрДок.СтавкаНДС;
	Партия.ДатаПоступления		= ЭтотОбъект.Дата;
	
	Если ТекСтрДок.КоличествоФакт<>0 Тогда
		КучеряваяЗакупЦенаСНДС=ТекСтрДок.СуммаЗакуп / ТекСтрДок.КоличествоФакт; // с ндс,  точность 6 знаков
	Иначе
		КучеряваяЗакупЦенаСНДС=ТекСтрДок.ЦенаЗакуп;
	КонецЕсли; 
	
	Партия.ЦенаЗакуп= КучеряваяЗакупЦенаСНДС; // точность 6 знаков
	Партия.ДокументПоступления=ЭтотОбъект.Ссылка;
	Партия.Поставщик = ТекСтрДок.Поставщик;
	Партия.ЕИТЗакупки=ТекСтрДок.ЕИТ;
	Партия.НомерГТД=ТекСтрДок.НомерГТД;

	Партия.Серия=ТекСтрДок.Серия;
	Партия.СерияСтрока=ТекСтрДок.Серия.Наименование;
	Партия.СрокГодности=ТекСтрДок.Серия.СрокГодности;
	Партия.ЦенаПроизводителяБезНДС =ТекСтрДок.ЦенаПроизводителя;
	Партия.БарКод = ТекСтрДок.БарКод;
	
	
	//Попытка	
	//	Партия.СтавкаНДСРеализации = Партия.Серия.Сертификат.КодОКП.СтавкаНДС; // GtG 02.10.2008 18:10:27
	//ИСключение
	//	// чего-то нехватает (серии, сертификата или кода ОКП)
	//КонецПопытки;
	
	Если Партия.СтавкаНДСРеализации.Пустая()=Истина ТОгда
		Партия.СтавкаНДСРеализации=Партия.СтавкаНДС;
	КонецЕсли;	
	

	
	
	
	
	
	
	Партия.Записать(); // ибо объект
 КонецПроцедуры



 #Если Клиент Тогда
//==========================================================GtG====
Функция ОМ1_ГенераторНаименования (ПБрэнд, ПТоргНаименование, ПЛекФорма, ППриписка, ПКонцентрация,ПТире,ПДозировка, ПКоличествоВУпаковке,Арт)  Экспорт
	//----------------------------------
	//Назначение:
	//  Генерирует наименование товара
	//  по заданным параметрам в правильном порядке
	//  
	//  
	//----------------------------------
	Брэнд=СокрЛП(ПБрэнд);
	ТоргНаименование=СокрЛП(ПТоргНаименование);
	ЛекФорма=СокрЛП(ПЛекФорма); 
	Дозировка=СокрЛП(ПДозировка); 
	Артикул=СокрЛП(Арт);
	Приписка=СокрЛП(ППриписка);
	Концентрация=СокрЛП(ПКонцентрация);
	
	Если Концентрация<>"" Тогда
		ТКонцентрация=Концентрация+"%";
	Иначе
		ТКонцентрация="";
	КонецЕсли; 
	
		
	
	
	Если ПКоличествоВУпаковке<>0 Тогда
		КоличествоВУпаковке="N"+ПКоличествоВУпаковке;
	Иначе
		КоличествоВУпаковке="";
		
	КонецЕсли;
	
	Если ПТире=Истина ТОгда
		Тире="-";
	Иначе	
		Тире=" ";
	КонецЕсли; 
	
	
	
	
	Рез=""+Брэнд+" "+ ТоргНаименование+" "+ЛекФорма+" "+Приписка+" "+ТКонцентрация+ТИре+Дозировка+" "+КоличествоВУпаковке+" "+Артикул;	
	
	Пока Найти(Рез,"  ")<>0 Цикл
		Рез=СтрЗаменить(Рез,"  "," ");
	КонецЦикла; 
	
	Возврат СокрЛП(ВРег(Рез));	
	
КонецФункции	//ОМ1_ГенераторНаименования
//==========================================================GtG====
#КонецЕсли 


//==========================================================GtG====
Функция ОМ1_Штука ()  Экспорт
	//----------------------------------
	//Назначение:
	//  Получает из справочника ЕдИзм ссылку на единицу измерения
	//  ШТУКА!
	//  
	//  
	//----------------------------------
		
	ТХТ="ВЫБРАТЬ
	    |	ЕдИзм.Ссылка
	    |ИЗ
	    |	Справочник.ЕдИзм КАК ЕдИзм
	    |ГДЕ
	    |	ЕдИзм.Наименование like &штука";	
		
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("штука","%шт%");	
	
	Штука=Запрос.Выполнить().Выгрузить().Получить(0).Ссылка; // ссылка на едизм с наименованием шт

	Возврат Штука;	
	
КонецФункции	//ОМ1_Штука
//==========================================================GtG====

  

 



