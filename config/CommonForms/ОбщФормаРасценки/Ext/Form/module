//==================<КУЧЕРЯВОЕ ЦЕНООБРАЗОВАНИЕ>===================GtG====22.11.2007
//расчет цен ведется на самую мелкую единицу измерения
//чтобы процент наценки не превышал максимальный лимит:
//	округление по верхнему пределу в меньшюу сторону
//	округление по нижнему лимиту в большую сторону
//тогда цена всегда будет в допустимо мдиапазоне
//и для укрупненных единиц измерени явсегда будет делиться нацело, без длинны ххвостов
//	Для товаров цена которых меньше константы минимальная цена округления округляе мцену до 1-й копейки
//		если цена больше константы - округляем до 5 или 10 копеек ,
//			что указано в константе метод округления розн. цены
// после асрчета цены (на 1) она умножается на коэффициент единицы из документа
//
// алгоритмы , условия их применения и необходимые для расечта параметры описываются в справочнике АлгоритмыЦенообразованияРегионов
// подчиненном справочнику Регионы
//
// Цена рассчитывается на единицу измерения с коэффициентом =1, при этом цена более крупной еит должна без дробей делиться на коэффициент.
// Если в документе использовалась ЕИТ с К<>1 цо единичную цену умножаем на К

Перем КоличествоОшибокРАсценки;

Процедура ПриОткрытии()
	// Подставляем регион из склада или из константы
	// регион используется для расчета предельной наценки по ЖНВЛС / СВЛС
	// Запуск расценки Только из формы прихода товара(пока что)
	//------------------------------------------------------------------------
	
	СКД=ЭтаФорма.ВладелецФормы.Склад;
	//ФинСкидка=ЭтаФорма.ВладелецФормы.ФинСкидка;
	ЭлементыФормы.ТП.ФиксацияСлева=2;
	ЭлементыФормы.Индикатор.Видимость=Ложь;
	ЭлементыФормы.ТОварИндюк.Видимость=Ложь;
	
	
КонецПроцедуры



//==========================================================GtG====
Функция ВеткаОшибокТОвара (ВеткаТОварПРов,ВеткаРОдитель,Текст)  
	//----------------------------------
	//Назначение:
	//  Определяет выведена ли ветка товара и если нет то создает ее
	//  
	//  
	//  
	//----------------------------------
	Если ВеткаТОварПРов= Неопределено ТОгда
		Рез=ВеткаРОдитель.Строки.Добавить();
		Рез.Ошибки=Текст.Ссылка;
	Иначе
		Рез=ВеткаТОварПРов;
	КонецЕсли; 
	
	Возврат Рез;	
	
КонецФункции	//ВеткаОшибокТОвара
//==========================================================GtG====


//==========================================================GtG====
Функция ПравильнаяФормулаРасчета (Знач ИсходнаяФормула)  
	//----------------------------------
	//Назначение:
	//  Приводит формулу расчета к идэальным сферическим единицам
	//  
	//  
	//  
	//----------------------------------
	
	Если Найти(ИсходнаяФормула,"АП_ГТТ.РозничнаяЦенаГТТ")<>0 Тогда
		// Делим цену АПГТТ на К ЕИТ, которая указана в АПГТТ
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"АП_ГТТ.РозничнаяЦенаГТТ","(АП_ГТТ.РозничнаяЦенаГТТ/АП_ГТТ.ЕИТ.К)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли; 
	
	
	Если Найти(ИсходнаяФормула,"Док.ЦенаПроизводителя")<>0 Тогда
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"Док.ЦенаПроизводителя","(Док.ЦенаПроизводителя/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли;	 
	
	
	Если Найти(ИсходнаяФормула,"Док.ЦенаЗакупБезНДС")<>0 Тогда
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"Док.ЦенаЗакупБезНДС","(Док.ЦенаЗакупБезНДС/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли; 
	
	Если Найти(ИсходнаяФормула,"(Док.ЦенаЗакуп)")<>0 Тогда	
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"(Док.ЦенаЗакуп)","((Док.ЦенаЗакуп)/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли;
	
	Если Найти(ИсходнаяФормула,"Док.ЦенаГосРегистрации")<>0 Тогда
		ИсходнаяФормула=СтрЗаменить(ИсходнаяФормула,"Док.ЦенаГосРегистрации","(Док.ЦенаГосРегистрации/ДокЕитК)"); // привели цену к цене одной (1) идеальной сферической штуки в вакууме
	КонецЕсли;
	
	Если СтрДлина(СокрЛП(ИсходнаяФормула))<5 тогда // а вдруг жестко задали цену? до 9999
		Попытка // а вдруг там просто число
			Ч=Число(ИсходнаяФормула);
			ИсходнаяФормула=ИсходнаяФормула+"/ДокЕитК";
		Исключение
			// бредовая идея
		КонецПопытки;	
	КонецЕсли; 
	
	Возврат ИсходнаяФормула;	
	
КонецФункции	//ПравильнаяФормулаРасчета
//==========================================================GtG====


//============================================================================ GtG ===
Процедура КомментаторРасчета  (ТОвар,Таб,Макет,ИмяСекции,СтруктураПараметров="") 
	// Назначение:
	// Вывод, или не вывод , строки комментария расчета
	// 
	// 
	//--------------------------------------------------------------------------------
	Если  Комментировать=Ложь тогда
		ВОЗВРАТ ;
	КонецЕсли; 	
	
	Если Товар<>Неопределено тогда // не гтт
		
		Если ПоТОвару.Пустая()=Ложь тогда
			Если Товар<>ПоТОвару.Ссылка тогда
				Возврат;
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЕсли; 
	
	//============================< Шаблон печати таблицы начало >================================GtG===
	Секция=Макет.ПолучитьОбласть(ИмяСекции); // тип Табличный документ
	//
	//СтруктураПарам= Новый  Структура;
	//СтруктураПарам.Вставить("Имя параметра как в макете","Значение параметра");
	//// .....
	// ... парам N
	Если СтруктураПараметров<>"" Тогда	
		Секция.Параметры.Заполнить(СтруктураПараметров); // заполняет данными из структуры (параметры и расшифровки), только те у которых имена совпадают
	КонецЕсли; 
	
		
	
	Если ИмяСекции="Регион" ТОгда   
		Попытка
			Таб.ЗакончитьГруппуСтрок();
		Исключение
			//Нет так нет...
		КонецПопытки; 
		Таб.Вывести(Секция); // аналог ВывестиСекцию v7.7
		Таб.НачатьГруппуСтрок(,);
	Иначе
		Таб.Вывести(Секция); // аналог ВывестиСекцию v7.7
	КонецЕсли;	

	
	//============================< Шаблон печати таблицы конец >================================GtG===
	
	
	
	
КонецПроцедуры
//============================================================================ GtG ===


//==========================================================GtG====
Функция ПолучитьТаблицуСтарыхРозничныхЦен (Дата,СписокСтрокДокумента)  
	//----------------------------------
	//Назначение:
	//  Список предыдущих расценок товаров из документа
	//----------------------------------
	
	ДатаЦен=Дата-100;
	
	//Сообщить("Дата расчета предыдущей цены:"+ДатаЦен);
	
	ТХТ="ВЫБРАТЬ РАЗЛИЧНЫЕ
	    |	ЦеныСрезПоследних.РЕГИОН КАК Регион,
	    |	ЦеныСрезПоследних.ЦенаРознГТТ КАК ПрошлаяЦена,
	    |	ЦеныСрезПоследних.АП КАК Товар
	    |ИЗ
	    |	РегистрСведений.Цены.СрезПоследних(&ДАта, Партия.Владелец В (&СписокТоваров)) КАК ЦеныСрезПоследних
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |	ЦеныСрезПоследних.Период УБЫВ";
	
	
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	Запрос.УстановитьПараметр("ДАта",ДатаЦен);
	Запрос.УстановитьПараметр("СписокТоваров",СписокСтрокДокумента);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
	
КонецФункции	//ПолучитьТаблицуСтарыхРозничныхЦен
//==========================================================GtG====

//==========================================================GtG====
Функция ПолучитьПрошлуюЦену (Товар,Регион,ТаблицаСтарыхРозничныхЦен)  
	//----------------------------------
	//Назначение:
	//  Получает из таблицы предыдущую цену, или ноль если ничего нет
	//----------------------------------
	
	
	
	МассивНайденныхСтрок=ТаблицаСтарыхРозничныхЦен.НайтиСтроки(Новый Структура("Товар,Регион",Товар,Регион));
	
	Если МассивНайденныхСтрок.Количество()=0 Тогда
		Возврат 0;
	КонецЕсли; 
	
	Возврат МассивНайденныхСтрок.Получить(0).ПрошлаяЦена;
	
КонецФункции	//ПолучитьПрошлуюЦену
//==========================================================GtG====

 

 





Процедура ОсновныеДействияФормыРасценить(Кнопка) Экспорт
	Перем СокрСтр;
	ЭлементыФормы.ХодРасценкиРегион.Видимость=Истина;
	ЭлементыФормы.ХодРасценкиТОвар.Видимость=Истина;
	ЭлементыФормы.Индикатор.Видимость=Истина;
	ЭлементыФормы.ТОварИндюк.Видимость=Истина;
	
	КоличествоОшибокРАсценки=0;
	
	Таб= ЭлементыФормы.Таб;
	Таб.Очистить();
	
	Таб.ОтображатьСетку= ЛОЖЬ;
	Таб.АвтоМасштаб= ИСТИНА;
	Таб.ОтображатьЗаголовки = Ложь;
	Макет=ПолучитьОбщийМакет("РасценкаКомментарий");
	
	Секция=Макет.ПолучитьОбласть("Шапка"); // тип Табличный документ
	Таб.Вывести(Секция); // аналог ВывестиСекцию v7.7
	
	ТП.Очистить();
	
	ЭВФ=ЭтаФорма.ВладелецФормы;
	ДатаДок=ЭВФ.Дата;
	
	//------------------<Сколько регионов?>-------------------GtG----09.01.2008
	ТЗРег= Новый ТаблицаЗначений;
	ТЗРег.Колонки.Добавить("Рег");
	Для каждого Стр из ВыбРег Цикл
		Если Стр.Пометка=Истина Тогда
			СтрРег=ТЗРег.Добавить();
			СтрРег.Рег=Стр.Значение;
		КонецЕсли;	
	КонецЦикла;	
	
	
	//ТЗРег=Запрос.Выполнить().Выгрузить(); // список регионов 
	//--------------------------------------------------------GtG----КОНЕЦ--09.01.2008
		
	
	
	
	
	КСТовара=ЭВФ.Товар.Количество();
	
	ИТОГОСтрокРез=КСТовара*ТЗРег.Количество(); // сколько должно получиться строчек на выходе
	
	ЭлементыФормы.Индикатор.МаксимальноеЗначение=ИТОГОСтрокРез;
	ЭлементыФормы.Индикатор.Значение=0;
	
		
	
	Попытка
		Курс=ПолучитьКурсВалюты(ЭВФ.Валюта, ЭВФ.Дата);
	ИСключение
		Курс=1;  // в документе нет реквизита валюта
	КонецПопытки;
	
	ТЧТовар= ЭВФ.Товар.Выгрузить(); //ЭтаФорма.ВладелецФормы.Товар;
	
	СписокСтрокДокумента=ТЧТовар.ВыгрузитьКолонку("ТОвар");
	
	
	
	ТаблицаСтарыхРознЦен=ПолучитьТаблицуСтарыхРозничныхЦен(ЭВФ.Дата,СписокСтрокДокумента);
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	//----------------------------< Готовим Дерево Ошибок (ДО) >--------------------------------GtG---
	ДО = Новый ДеревоЗначений;
	КДО=ДО.Колонки.Добавить("Ошибки");
	
	ДО.Строки.Очистить();
	
	
	Корень=ДО.Строки.Добавить();
	
	Корень.Ошибки="Расценка документа ";
	
	//----------------------------<  >--------------------------------GtG---	
	
	ЕстьОшибки=Ложь;
	
	ТЧ = ЭВФ.Товар.Выгрузить();
	
	ТЧ.Свернуть("Товар,Партия,ЦенаПроизводителя,ЦенаЗакуп,ЦенаЗакупБезНДС,ЦенаГосРегистрации,СтавкаНДС","");
	
	ЭлементыФормы.Индикатор.Значение=0;
	ЭлементыФормы.Индикатор.МаксимальноеЗначение=ТЗРег.Количество();
	ЗадержкаОтображенияНаИндикаторе=Истина;  // наращиваем индюк после обработки региона
	
	Для каждого СтрРег из ТЗРег цикл // ПО РЕГИОНАМ
		
		ЭлементыФормы.ХодРасценкиРегион.Заголовок=СтрРег.Рег;
		
		
		Если ЗадержкаОтображенияНаИндикаторе=Ложь ТОгда
			ЭлементыФормы.Индикатор.Значение=ЭлементыФормы.Индикатор.Значение+1;
		Иначе 
			ЗадержкаОтображенияНаИндикаторе=Ложь; // сначала нужно обработать ГТТ а потом вывести процент на индикатор
		КонецЕсли; 	
		
		
		
				
		ТекРегион=СтрРег.Рег;
		
		
		Если ТекРегион.ПометкаУдаления=Истина ТОгда
			ПРодолжить; // Удаленные регионы НЕ обрабатываем!
		КонецЕсли; 
		
		
		
		
		ВеткаРегион=Корень.Строки.Добавить();
		ВеткаРегион.Ошибки="по Региону   "+ТекРегион;
		
		
		
		КомментаторРасчета  (Неопределено,Таб,Макет,"Регион",Новый Структура("Регион",ТекРегион));
		
		
		
		//------------------<Получим алогоритмы ценообразования из справочников>-------------------GtG----16.11.2007
		//Регион
		//	Алгоритмы ценообразования
		//		УСЛОВИЯ ПРИМЕНЕНИЯ АЛГОРИТМОВ
		// Выборку строим начиная с конца (УПА)
		ТХТ="ВЫБРАТЬ
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ЛеваяЧасть,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ТипУсловия,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ПраваяЧасть,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ОбъединятьСоСледующим,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ПорядокФормированияУсловия КАК ПорядокФормированияУсловия,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Приоритет КАК Приоритет,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаС,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаПо,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.МинПроцНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.МаксПроцНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ФормулаРасчетаЦены,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ФормулаРасчетаПроцентаНаценки,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Ссылка КАК АлгоритмСсылка,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ОткрывающаяСкобка КАК ОСК,
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.ЗакрывающаяСкобка как ЗСК
		    |ИЗ
		    |	Справочник.АлгоритмыЦенообразованияРегионов.УсловияПрименения КАК АлгоритмыЦенообразованияРегионовУсловияПрименения
		    |ГДЕ
		    |	АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.Владелец.Ссылка = &Регион
		    |	И &ДатаДок МЕЖДУ АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаС И АлгоритмыЦенообразованияРегионовУсловияПрименения.Ссылка.ДатаПо
		    |
		    |УПОРЯДОЧИТЬ ПО
		    |	Приоритет,
		    |	ПорядокФормированияУсловия";
		
		Запрос=Новый Запрос;
		Запрос.Текст=ТХТ;
		Запрос.УстановитьПараметр("Регион",ТекРегион); 
		Запрос.УстановитьПараметр("ДАТАДок",ДатаДок);
		
		ИсходнаяТЗПравил=Запрос.Выполнить().Выгрузить(); // сырые данные
		ИсходнаяТЗПравил.Колонки.Добавить("УсловиеВыполнилось");
		ИсходнаяТЗПРавил.Колонки.Добавить("ВырИтУсл");  // выаржение для вычисления иотгового результата условия примеенния
		
		
		
		Если ИсходнаяТЗПРавил.Количество()=0 ТОгда
			ТекстОшибки=("   По региону  "+ТекРегион+" не задано ни одного алгоритма ценообразования! НЕ РАСЦЕНЕНО! (Задается через справочник регионов.)");
			
			ОшибкаРЕгион=ВеткаРегион.Строки.Добавить();
			ОшибкаРегион.Ошибки=ТекстОшибки;
			СсылкаРегион=ОшибкаРЕгион.Строки.Добавить();
			СсылкаРегион.ошибки=ТекРегион;
			
			КомментаторРасчета  (Неопределено,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион));
			
			КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
			
			Продолжить; // по группам ТТ
		КонецЕсли; 	
		
		ТЗХ=ИсходнаяТЗПРавил.Скопировать();
		ТЗХ.Свернуть("Приоритет"); //,ПорядокФормированияУсловия");
		КоличествоАлгоритмов=ТЗХ.Количество();
		
		
		
		//------------------<Собираем из кусочков сложные условия>-------------------GtG----16.11.2007
		ВеткаТовары=ВеткаРегион.Строки.Добавить();
		ВеткаТовары.Ошибки=" Ошибки при расценке товара по региону  ";
		ЕстьОшибкиПоГТТ=Ложь;
		
		ЭлементыФормы.ТОварИндюк.Значение=0;
		ЭлементыФормы.ТОварИндюк.МаксимальноеЗначение=ТЧТовар.Количество();
		
		НН=0;
		
		
		Для каждого Стр из ТЧТовар Цикл // по строкам документа
			
			НН=НН+1;
			
			ТОвар=Стр.Товар;
			
			ЭлементыФормы.ХодРасценкиТОвар.Заголовок=Товар;
			
			КомментаторРасчета  (ТОвар,Таб,Макет,"Товар",Новый Структура("ТОВар,Расшифровка,ТОВарКод",Стр.ТОвар,Стр.ТОвар,Стр.ТОвар.Код));
			
			
			ЭлементыФормы.ТОварИндюк.Значение=ЭлементыФормы.ТОварИндюк.Значение+1;
			
			ВеткаТовар= Неопределено;
			
			Если Стр.КоличествоФакт=0 тогда
				ТекстОшибки="Фактическое количество товара равно нулю! ("+Стр.Товар.Код+")  "+Стр.Товар+"    Не РАСЦЕНЕН!";
				
				ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Стр.Товар);
				
				ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
				ВеткаТОварОш.Ошибки=ТекстОшибки;
				
				КомментаторРасчета  (ТОвар,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""));
				
				ЕстьОшибкиПоГТТ=Истина;
				КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
				Продолжить;
			КонецЕсли; 
			
			
			
			ТЗПРавил=ИсходнаяТЗПРавил.Скопировать();
			РознЦена=0;
			
			//------------------<1) нужны значения всех возможных переменных из алгоритма условий>-------------------GtG----17.11.2007
			//---------------- Товар-------
			//			ТОвар=Стр.Товар;
			//------------------Регион------
			Регион=ТекРегион;
			
			//------------- ГТТ------
			//ГТТ=ВыбГТТ.Ссылка;
			
			//------------------<строка документа>-------------------GtG----17.11.2007 
			Док=Стр;
			
			//------------------<Единица измерения>-------------------GtG----28.11.2007
			Если Док.Еит.Пустая()=Истина ТОгда
				ТекстОшибки="В документе у товара не указана единица измерения! ("+Товар.Код+")  "+Товар+"    Не РАСЦЕНЕН!";
				ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Товар);
				ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
				ВеткаТОварОш.Ошибки=ТекстОшибки;
				ЕстьОшибкиПоГТТ=Истина;
				
				КомментаторРасчета  (ТОвар,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""));
				
				КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
				
				Продолжить; // по таблице товаров
			Иначе
				ДокЕитК=Док.Еит.К;  // коэффициент единицы измерения из документа
				ДокЕИТ=Док.Еит;
			КонецЕсли; 
			
			
			
			
			
			
			
			
			//------------------<Рассчитываем условия по каждой строке условий применения алгоритма>-------------------GtG----17.11.2007 
			// Если условие составное это даст для каждой части ИСТИНА или ЛОЖЬ потом их можно
			// загнать в одно выражение и получить результат
			
			ТЗПравил.Колонки.Добавить("РасшифровкаОшибки");
			
			Для каждого СтрП из ТЗПравил Цикл  // по таблице правил
				
				Если СтрП.ЗСК=Истина или СтрП.ОСК=Истина Тогда // это скобка "(" или ")"
					СтрП.УсловиеВыполнилось=Истина; // скобки всегда считаем истинными
				Иначе// собственно это условие	 
					ЗначениеПРавойЧасти=СтрП.ПраваяЧасть;
					ТХТВычислить=""+СтрП.ЛеваяЧасть+" "+СтрП.ТипУсловия+" ЗначениеПРавойЧасти";
					СтрП.УсловиеВыполнилось=Вычислить(ТХТВычислить);
					
					Если СтрП.УсловиеВыполнилось=Ложь Тогда
						СтрП.РасшифровкаОшибки="Не выполнилось условие "+ СтрЗаменить(ТХТВычислить,"ЗначениеПРавойЧасти",ЗначениеПРавойЧасти)+", а по товару "+Вычислить(СтрП.ЛеваяЧасть);
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла;	// по таблице правил
			
			
			Приоритет=0;
			ВырИтУсл="";
			
			Для каждого СтрП из ТЗПравил Цикл  // по таблице правил 2 заход
				
				Если Приоритет<>СтрП.Приоритет Тогда // новое правило расчета
					ВырИтУсл="";
					
					Приоритет=СтрП.Приоритет; // запомним какой был последним
					
				КонецЕсли;	
				
				
				Если СтрП.ЗСК=Истина Тогда // это скобка ")"
					СтрПУсловиеВыполнилось=")"
				ИначеЕсли СтрП.ОСК=Истина Тогда // это скобка "("
					СтрПУсловиеВыполнилось="("
				Иначе  // Это условие
					СтрПУсловиеВыполнилось =СтрП.УсловиеВыполнилось;
				КонецЕсли; 	
					
					
					

				
				
				
				СтрП.ВырИтУсл=ВырИтУсл+" "+СтрПУсловиеВыполнилось+" "+СтрП.ОбъединятьСоСледующим;
				ВырИтУсл= СтрП.ВырИтУсл;// в последней строке сложного условия оно соберется все целиком
				// эта строка будет имет ьмакс порядок формирования
				
				
			КонецЦикла; // по таблице правил 2 заход
			
			//------------------<Свернет таблицу правил>-------------------GtG----20.11.2007
			ТЗПРавил.Сортировать("ПорядокФормированияУсловия Desc");
			ТЗПРавил.Сортировать("Приоритет Asc");
			// в ТЗ рпавил первыми пойдут условия с амксимальным проядком формирования
			//  т.е. самые доделанные. остальные будут недоделанными огрызками и от них надо избавиться
			
			ТЗПравил.Колонки.Удалить("ЛеваяЧасть");
			ТЗПравил.Колонки.Удалить("ТипУсловия");
			ТЗПравил.Колонки.Удалить("ПраваяЧасть");
			ТЗПравил.Колонки.Удалить("ОбъединятьСоСледующим");
			ТЗПравил.Колонки.Удалить("УсловиеВыполнилось");
			
			ППР=0; // правилоПриоритет
			ППФУ=0;  // правило, порядок формирования условия
			Удаляемыестроки=Новый СписокЗначений;
			
			СписокНевыполнившихсяУсловий=Новый СписокЗначений; // для человеческой расшифровки ошибки если
			// ни один алгоритм не подойдет	
			
			
			// АХТУНГ ДАНГЕР!
			
						
			//ПРи большом кол-ве условий неправильный порядок условий
			
			
			
			Для каждого СтрП из ТЗПравил Цикл
				Если ППР<СтрП.Приоритет Тогда
					ППР=СтрП.Приоритет ;    // правило приоритет
					ППФУ=СтрП.ПорядокФормированияУсловия; //правило, порядок формирования условия)
				КонецЕсли;	
				
				
									
				Если СтрП.ПорядокФормированияУсловия < ППФУ Тогда
					// это огрызок недоделанного сложного условия
					// его надо убрать чтоб дальше не мешался
					СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
					Удаляемыестроки.Добавить(СтрП);
                КонецЕсли; 
				
				
				Попытка
					Если Вычислить(СтрП.ВырИтУсл)=Ложь Тогда
						//------------------<Еще подуменьшим количество условий>-------------------GtG----20.11.2007 
						// Отбросим ложные строки
						СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
						Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
					КонецЕсли; 
				Исключение
					//------------------<Точно это огрызок сложного условия и он не посчитается>-------------------GtG----29.12.2007
					// Отбросим ложные строки
					СписокНевыполнившихсяУсловий.Добавить(СтрП.РасшифровкаОшибки);
					Удаляемыестроки.Добавить(СтрП); // оно все-равно не выполнилось
				КонецПопытки; 


			КонецЦикла;	
			
			
			
			//------------------<Удаляем неподходящие алгоритмы>-------------------GtG----23.11.2007
			Для каждого СтрУС из Удаляемыестроки Цикл
				Попытка
					ТЗПРавил.Удалить(СтРУС.Значение);// удаляем лишние строки условий 
				ИСключение
					// значит уже прибили нах
				КонецПопытки; 
			КонецЦикла;	
			
			//------------------<Должны остаться только подходящие>-------------------GtG----23.11.2007
			// если ничего не подошло - расценка невозможна 
			// выведем список невыполнившихся условий и перейдем к расценке следующего товара
			Если ТЗПравил.Количество()=0 Тогда
				
				Если ВыводитьНеРасцененные=Истина  Тогда  
					//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
					Цена_Розничная=0;
					СтрТП=Тп.Добавить();
					СтрТП.ТОвар=ТОвар;
					СтрТП.Партия=Док.Партия;
					СтрТП.ЕИТ=Док.Еит;
					СтрТП.КоэффЕит=ДокЕитК;
					СтрТП.ЦенаПрБезНДС=Док.Партия.ЦенаПроизводителяБезНДС;
					СтрТП.ЦенаГосРег=0;
					СтрТП.ЦенаЗакуп =Док.Партия.ЦенаЗакуп;
					СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
					
					СтрТП.Топ100=Товар.Топ100;
					СтрТП.Топ1000=ТОвар.Топ1000;
					
					СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
					СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
					СтрТП.Регион  =ТекРегион;
					СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (Док.Партия.ЦенаЗакуп-ОМ3_НДСИзСуммыПоСтавке(Док.Партия.ЦенаЗакуп,Док.Партия.СтавкаНДС,2),Цена_Розничная);
					
					СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (Док.Партия.ЦенаПроизводителяБезНДС,Цена_Розничная);
					СтрТП.НН=НН;
					СтрТП.ПредыдущаяРознЦена=ПолучитьПрошлуюЦену(Товар,ТекРегион,ТаблицаСтарыхРознЦен);
				КонецЕсли; 
				
				
				
				
				
				
				
				ТекстОшибки=" Товар не расценился т.к. не прошел ни по одному условию ценообразования по региону!";
				
				ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Товар);
				ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
				ВеткаТОварОш.Ошибки=ТекстОшибки;
				ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
				ВеткаТОварОшСсы.Ошибки=ТОвар; // ссылка на товар
				ВеткаТОварОшСсы=ВеткаТОварОш.Строки.Добавить();
				ВеткаТОварОшСсы.Ошибки=ТекРегион; // ссылка на регион
				
				
				КомментаторРасчета  (ТОвар,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,ТекРегион));
				
				
				//------------------<Список невыполнившихся условий>-------------------GtG----23.11.2007
				Для каждого ЧПО из СписокНевыполнившихсяУсловий Цикл
					Если СокрЛП(ЧПО.Значение)="" ТОгда
						Продолжить;
					КонецЕсли; 
					
					ВеткаЧПО=ВеткаТОварОшСсы.Строки.Добавить();
					ВеткаЧПО.Ошибки=ЧПО.Значение;
					
					КомментаторРасчета  (ТОвар,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки,Расшифровка",ЧПО.Значение,ТекРегион));
					КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
					
				КонецЦикла;	
				
				
				
				ЕстьОшибкиПоГТТ=Истина;
				Продолжить;  // не расценилось
			КонецЕсли; 	
			
			
			
			//--------------------------------------------------------GtG----КОНЕЦ--17.11.2007
			
			//==================<а вот теперь можно начинать считать цену розничную>===================GtG====20.11.2007 
			// Должен сработать алгоритм расценки с наибольшим приоритетом
			// Поэтому с меньшим даже и смотреть не стоит
			ТЗПравил.Сортировать("Приоритет desc");
			
			РабочийАлгоритм=ТЗПравил.Получить(0); // первая строка сверху по таблице правил расчета
			
			КомментаторРасчета  (ТОвар,Таб,Макет,"Алг",Новый Структура("Алг,Расшифровка",РабочийАлгоритм.АлгоритмСсылка,РабочийАлгоритм.АлгоритмСсылка));
			
			//==================<перед тем, как вычислять цены >===================GtG====22.11.2007
			// нужно проверить все ли условия на ноебходимые данные 
			// по выбранному алгоритму выполняются , НО это еще не гарантирует что он сработает
			
			// ..запросом собарть условия в тз
			// построить условия, вычислить их и получить бульрезультат по всем условиям 
			// через И если в итоге ПРАВДА тогда все ОК иначе алгоритм не сработает
			
			ТХТ="ВЫБРАТЬ
			|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Реквизит,
			|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.ДолженБыть,
			|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Чему,
			|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Ссылка
			|ИЗ
			|	Справочник.АлгоритмыЦенообразованияРегионов.НеобходимыеРеквизиты КАК АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты
			|ГДЕ
			|	АлгоритмыЦенообразованияРегионовНеобходимыеРеквизиты.Ссылка = &ВыбАлгоритм";
			
			
			Запрос=Новый Запрос;
			Запрос.Текст=ТХТ;
			Запрос.УстановитьПараметр("ВыбАлгоритм",РабочийАлгоритм.АлгоритмСсылка);
			
			НеобхРекв=Запрос.Выполнить().Выгрузить();
			НеобхРекв.Колонки.Добавить("УсловиеВыполнилось");
			
			Для каждого СтрНРекв из НеобхРекв Цикл
				ТекстУсловия=""+СтрНРекв.Реквизит+" "+ СтрНРекв.ДолженБыть+" "+СтрНРекв.Чему;
				СтрНРекв.УсловиеВыполнилось=Вычислить(ТекстУсловия);
			КонецЦикла;	
			
			//------------------<Если какое-либо условие не выполнилось то нихрена не расчитается>-------------------GtG----22.11.2007
			ЕстьОшибкиПоУПА=Ложь;
			Для каждого СтрНРекв из НеобхРекв Цикл
				Если СтрНРекв.УсловиеВыполнилось=Ложь Тогда
					ТекстОшибки=""+СтрНРекв.Реквизит+" "+ СтрНРекв.ДолженБыть+" "+СтрНРекв.Чему+" Условие не выполнилось!";
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Товар);
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					КомментаторРасчета  (ТОвар,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки,Расшифровка",ТекстОшибки,""));
					
					
					ЕстьОшибкиПоУПА=Истина;
				КонецЕсли; 
			КонецЦикла;	
			Если  ЕстьОшибкиПоУПА=Истина Тогда
				//товар не расценился
				КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
				Продолжить;
			КонецЕсли; 	
			//--------------------------------------------------------GtG----КОНЕЦ--22.11.2007
			
			
			
			
			
			
			
			Попытка 
				
				
				//------------------<МОМЕНТ с ценами из АП>--------------------------------GtG----28.11.2007
				// Расчет цены на 1 минимальную единицу
				// Цены если из основного ап считаем заданными на единицу по умолчанию (делим на еёйный К)
				// Если цена задана из АПГТТ то там должна быть ЕИТ на которую задана цена (делим на еёйный К), 
				//
				// Получившуюся Розн цену * на К по документу
				//
				// В РЕГИСТРЕ ЦЕН ХРАНИМ ЦЕНУ В РАСЧЕТЕ НА К=1 ! ДАЛЕЕ ВЕЗДЕ ЕЕ МНОЖИМ НА К ЕДИНИЦЫ
				//
				//------------------<--------------------->--------------------------------GtG----28.11.2007
				
				ФормулаДляРасчетаЦены= РабочийАлгоритм.ФормулаРасчетаЦены;
				ФормулаДляРасчетаПроцНац=РабочийАлгоритм.ФормулаРасчетаПроцентаНаценки;
				
				
				ФормулаДляРасчетаЦены=ПравильнаяФормулаРасчета(ФормулаДляРасчетаЦены);
				ФормулаДляРасчетаПроцНац=ПравильнаяФормулаРасчета(ФормулаДляРасчетаПроцНац);
				
				
				
				
				
				
				//------------------------------------------------------------GtG----28.11.2007
				
				Цена_Розничная=Вычислить(ФормулаДляРасчетаЦены); // на идеальную сферическую единицу в вакууме
				
				
				//--- Округляем в БОЛЬШУЮ сторону до 10 копеек
				
				Цена_Розничная=ОМ3_ОтброситьДо10Коп(Цена_Розничная);
				//--- потом при расчете границ наценки обкорнается в меньшую сторону
				
				КомментаторРасчета  (ТОвар,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаДляРасчетаЦены,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная));
				
				
				
				
			Исключение
				
				ТекстОшибки="Ошибка при расчете розничной цены:";
				ООШ=ОписаниеОшибки();
				
				
				ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Товар);	
				
				ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
				ВеткаТОварОш.Ошибки=ТекстОшибки;
				
				ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
				ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
				
				ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
				ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
				
				КомментаторРасчета  (ТОвар,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
				КомментаторРасчета  (ТОвар,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаЦены));
				КомментаторРасчета  (ТОвар,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ));
				
				КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
				
				ЕстьОшибкиПоГТТ=Истина;
				
				Продолжить;								
			КонецПопытки;
			
			Попытка 
				пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),4,РежимОкругления.Окр15как20); // В большую СТОРОНУ!  
				
				КомментаторРасчета  (Товар,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки));
				
				
			Исключение
				
				ТекстОшибки="Ошибка при расчете процента наценки:";
				ООШ=ОписаниеОшибки();
				
				ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Товар);
				
				ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
				ВеткаТОварОш.Ошибки=ТекстОшибки;
				
				ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
				ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
				
				ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
				ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
				
				КомментаторРасчета  (Товар,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
				КомментаторРасчета  (Товар,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаДляРасчетаПроцНац));
				КомментаторРасчета  (Товар,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ООШ));
				
				КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
				
				
				ЕстьОшибкиПоГТТ = Истина;
				
				Продолжить;								
			КонецПопытки;
			
			МинПроцНаценки=Вычислить(РабочийАлгоритм.МинПроцНаценки);
			
			МаксПроцНаценки=Вычислить(РабочийАлгоритм.МаксПроцНаценки);
			
			//КомментаторРасчета  (Товар,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки));
			
			
			Если МинПроцНаценки=0 Тогда
				МинПроцНаценки=Константы.МинимальноДопустимаяНаценка.Получить();
				
				Ахтунг_Дангер=""+ТекРегион+"  "+ТОВар+" Не удалось вычислить минимальный процент наценки по формуле "+РабочийАлгоритм.МинПроцНаценки+"
				| принимаем = "+МинПроцНаценки+" %";
				
				КомментаторРасчета  (Товар,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер));		
				
			КонецЕсли; 	
			
			Если МаксПроцНаценки=0 Тогда
				МаксПроцНаценки=70;
				Ахтунг_Дангер=(""+ТекРегион+"  "+ТОВар+" Не удалось вычислить максимальный процент наценки по формуле "+РабочийАлгоритм.МаксПроцНаценки+"
				| принимаем = "+МаксПроцНаценки+" %");
				
				КомментаторРасчета  (Товар,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер));		
				
				
			КонецЕсли; 	
			
			// прокомментируем новые границы процента наценки
			КомментаторРасчета  (Товар,Таб,Макет,"ПроцНац",Новый Структура("МинПроцНаценки,МаксПроцНаценки",МинПроцНаценки,МаксПроцНаценки));
			
			
			//==================<зарубим лишнее / добавим если процент наценки вылез за границы максимально-минимального диапазона>===================GtG====20.11.2007
			
			Если  пРОЦЕНТ_Наценки>МаксПроцНаценки тогда
				//Зарубим
				
				Ахтунг_Дангер=("Превышение максимального процента наценки! Уменьшаем наценку..."+пРОЦЕНТ_Наценки+">"+МаксПроцНаценки);
				
				КомментаторРасчета  (Товар,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер));
				
				ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+МаксПроцНаценки) / (100+пРОЦЕНТ_Наценки) )";// в меньшую сторону
				 // чем больше бы лпроцент наценки тем меньше будет цена( про копейки)
				
				Попытка
					
					
					Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);// в меньшую сторону (актуально для ЖНВЛС)
					
					КомментаторРасчета  (Товар,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная));
					
					
					
					
				Исключение
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Товар);
					ТекстОшибки="Ошибка при расчете уточненной цены";
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
					
					ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
					ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
					
					
					КомментаторРасчета  (Товар,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
					КомментаторРасчета  (Товар,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР));
					КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
					
					
				КонецПопытки;
				
				Попытка
					//----------------------------< пересчитаем процент наценки по скорректированной Розничной цене >--------------------------------GtG--- 
					пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),3,РежимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
					КомментаторРасчета  (Товар,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки));
					
					
					
				Исключение
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Товар);
					ТекстОшибки="Ошибка при расчете уточненного процента наценки";
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
					
					ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
					ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
					
					КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
					
				КонецПопытки;
				
			ИначеЕсли пРОЦЕНТ_Наценки<МинПроцНаценки Тогда
				//Подтянем
				Ахтунг_Дангер=("Заниженный процент наценки! Рассчитываем по максимальному проценту наценки..."+пРОЦЕНТ_Наценки+"<"+МинПроцНаценки);
				
				КомментаторРасчета  (Товар,Таб,Макет,"Ахтунг",Новый Структура("Ахтунг_Дангер",Ахтунг_Дангер));
				
				ФормулаКорректировкиЦР="ОМ3_ОтброситьДо10Коп(  Цена_Розничная * (100+МаксПроцНаценки) / (100+пРОЦЕНТ_Наценки) )";// в меньшую сторону 
				
				Попытка
					Цена_Розничная=Вычислить(ФормулаКорректировкиЦР);
					
					КомментаторРасчета  (Товар,Таб,Макет,"ФРЦ",Новый Структура("ФРЦ,Расшифровка,Цена_Розничная",ФормулаКорректировкиЦР,РабочийАлгоритм.АлгоритмСсылка,Цена_Розничная));
				Исключение
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Товар);
					ТекстОшибки="Ошибка при расчете уточненной цены";
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаЦены; // формула, расчет которой дал ошибку
					
					ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
					ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
					
					КомментаторРасчета  (Товар,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
					КомментаторРасчета  (Товар,Таб,Макет,"ОшибкаУ2",Новый Структура("ТекстОшибки",ФормулаКорректировкиЦР));
					
					КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
					
				КонецПопытки;
				
				
				Попытка
					пРОЦЕНТ_Наценки=Окр(Вычислить(ФормулаДляРасчетаПроцНац),6,режимОкругления.Окр15как20);// пересчет процента наценки по алгоритму
					
					КомментаторРасчета  (Товар,Таб,Макет,"ФРП",Новый Структура("ФРП,пРОЦЕНТ_Наценки",ФормулаДляРасчетаПроцНац,пРОЦЕНТ_Наценки));
					
				Исключение
					ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Товар);
					ТекстОшибки="Ошибка при расчете уточненного процента наценки";
					ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
					ВеткаТОварОш.Ошибки=ТекстОшибки;
					
					ВеткаТОварОшФ=ВеткаТОварОш.Строки.Добавить();
					ВеткаТОварОшФ.Ошибки=ФормулаДляРасчетаПроцНац; // формула, расчет которой дал ошибку
					
					ВеткаТОварОписОш=ВеткаТОварОшФ.Строки.Добавить();
					ВеткаТОварОписОш.Ошибки=ООШ; // описание ошибки
					
					КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
				КонецПопытки;
			КонецЕсли;
			
			
			
			
			ЦенаЕд=Цена_Розничная; // для комментатора
			
			
			//==================<Реальная несферическая единица не в вакууме>===================GtG====28.11.2007
			Цена_Розничная=Цена_Розничная*ДокЕитК;
			
			//------------------<еще проверочку на превыешние закупочной цены розничной рассчитанной чтобы в минус не ушло>-------------------GtG----21.11.2007
			Попытка
				
			Исключение	
			КонецПопытки; 
			
			
			Если Цена_Розничная<=Док.ЦенаЗакуп  Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
				Если ВыводитьНеРасцененные=Истина  Тогда  
					//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
					Цена_Розничная=0;
					СтрТП=Тп.Добавить();
					СтрТП.ТОвар=ТОвар;
					СтрТП.Партия=Док.Партия;
					СтрТП.ЕИТ=Док.Еит;
					СтрТП.КоэффЕит=ДокЕитК;
					СтрТП.ЦенаПрБезНДС=Док.Партия.ЦенаПроизводителяБезНДС;
					СтрТП.ЦенаГосРег=0;
					СтрТП.ЦенаЗакуп =Док.Партия.ЦенаЗакуп;
					СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
					СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
					СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
					СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (Док.Партия.ЦенаЗакуп-ОМ3_НДСИзСуммыПоСтавке(Док.Партия.ЦенаЗакуп,Док.Партия.СтавкаНДС,2),Цена_Розничная);
					
					СтрТП.Топ100=Товар.Топ100;
					СтрТП.Топ1000=ТОвар.Топ1000;
					
					СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (Док.Партия.ЦенаПроизводителяБезНДС,Цена_Розничная);
					
					СтрТП.Регион=ТекРегион;
					СтрТП.НН=НН;
					
					СтрТП.ПредыдущаяРознЦена=ПолучитьПрошлуюЦену(Товар,ТекРегион,ТаблицаСтарыхРознЦен);
					
				КонецЕсли; 
				
				
				
				
				
				ТекстОшибки="Розничная цена оказалась меньше закупочной!    ("+Товар.Код+")  "+Товар+"    Не РАСЦЕНЕН!";
				
				ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Товар);
				
				ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
				ВеткаТОварОш.Ошибки=ТекстОшибки;
				
				ЕстьОшибкиПоГТТ=Истина;
				
				КомментаторРасчета  (Товар,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
				
				КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
				
				Продолжить;
			КонецЕсли;
			
			
			//==================<Не ТОПОВЫЕ позиции наценка от закупки с ндс НЕ МЕНЕЕ 10% полюбому>===================GtG====21.01.2008
			Если (ОМ6_НаценкаОтЧегоЛибо (Док.Партия.ЦенаЗакуп,Цена_Розничная)<МинимальныйПроцентНаценкиКромеТопов)
				И (Товар.Топ100=Ложь и ТОвар.Топ1000=Ложь)
				Тогда   //БезНДС+Док.НДСЗакуп/Док.КоличествоФакт тогда
				Если ВыводитьНеРасцененные=Истина  Тогда  
					//==================<Выводим строку НЕ расцененного товара >===================GtG====20.11.2007
					Цена_Розничная=0;
					СтрТП=Тп.Добавить();
					СтрТП.ТОвар=ТОвар;
					СтрТП.Партия=Док.Партия;
					СтрТП.ЕИТ=Док.Еит;
					СтрТП.КоэффЕит=ДокЕитК;
					СтрТП.ЦенаПрБезНДС=Док.Партия.ЦенаПроизводителяБезНДС;
					СтрТП.ЦенаГосРег=0;
					СтрТП.ЦенаЗакуп =Док.Партия.ЦенаЗакуп;
					СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
					СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
					СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
					СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (Док.Партия.ЦенаЗакуп-ОМ3_НДСИзСуммыПоСтавке(Док.Партия.ЦенаЗакуп,Док.Партия.СтавкаНДС,2),Цена_Розничная);
					
					СтрТП.Топ100=Товар.Топ100;
					СтрТП.Топ1000=ТОвар.Топ1000;
					
					СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (Док.Партия.ЦенаПроизводителяБезНДС,Цена_Розничная);
					
					СтрТП.Регион=ТекРегион;
					СтрТП.НН=НН;
					
					СтрТП.ПредыдущаяРознЦена=ПолучитьПрошлуюЦену(Товар,ТекРегион,ТаблицаСтарыхРознЦен);
					
				КонецЕсли; 
				
				ТекстОшибки="НЕ ТОПОВЫЙ товар, наценка от закупки с НДС меньше "+МинимальныйПроцентНаценкиКромеТопов+"% ("+Товар.Код+")  "+Товар+"    Не РАСЦЕНЕН!";
				
				ВеткаТОвар=ВеткаОшибокТОвара (ВеткаТОвар,ВеткаТовары,Товар);
				
				ВеткаТОварОш=ВеткаТОвар.Строки.Добавить();
				ВеткаТОварОш.Ошибки=ТекстОшибки;
				
				ЕстьОшибкиПоГТТ=Истина;
				
				КомментаторРасчета  (Товар,Таб,Макет,"ОшибкаУ1",Новый Структура("ТекстОшибки",ТекстОшибки));
				
				КоличествоОшибокРАсценки=КоличествоОшибокРАсценки+1;
				
				Продолжить;
			КонецЕсли;
//================================================GtG====КОНЕЦ==21.01.2008
			
			
			
			//----------------------------< комментарий окончательного результата по товару >--------------------------------GtG--- 
			КомментаторРасчета  (Товар,Таб,Макет,"Рез",Новый Структура("ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки",ЦенаЕд,Цена_Розничная,ДокЕит,ДокЕитК,пРОЦЕНТ_Наценки));
			
			
			
			
			//==================<Выводим строку расцененного товара >===================GtG====20.11.2007
			СтрТП=Тп.Добавить();
			СтрТП.ТОвар=ТОвар;
			СтрТП.Партия=Док.Партия;
			СтрТП.ЕИТ=Док.Еит;
			СтрТП.КоэффЕит=ДокЕитК;
			СтрТП.ЦенаПРБезНДС=Док.Партия.ЦенаПроизводителяБезНДС;
			СтрТП.ЦенаГосРег=0;
			СтрТП.ЦенаЗакуп =Док.Партия.ЦенаЗакуп;
			СтрТП.ЦенаРозн = Цена_Розничная;// рассчитанная
			
			СтрТП.Регион=ТекРегион;
			
			СтрТП.Топ100=Товар.Топ100;
					СтрТП.Топ1000=ТОвар.Топ1000;
			
			СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,Цена_Розничная);
			СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,Цена_Розничная);
			СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (Док.Партия.ЦенаЗакуп-ОМ3_НДСИзСуммыПоСтавке(Док.Партия.ЦенаЗакуп,Док.Партия.СтавкаНДС,2),Цена_Розничная);
			СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (Док.Партия.ЦенаПроизводителяБезНДС,Цена_Розничная);			
			СтрТП.НН=НН;
			
			СтрТП.ПредыдущаяРознЦена=ПолучитьПрошлуюЦену(Товар,ТекРегион,ТаблицаСтарыхРознЦен);
			
			
		КонецЦикла;	// по строкам документа
		Если ЕстьОшибкиПоГТТ=Ложь тогда
			ВеткаТОварОш=ВеткаРегион.Строки.Добавить();
			ВеткаТОварОш.Ошибки="ОК. Ошибок нет";
		КонецЕсли;
		
		
	КонецЦикла; // по Регионам
	
	ЭлементыФормы.Индикатор.Значение=ЭлементыФормы.Индикатор.Значение+1;// обработан последний регион
	
	ЭлементыФормы .ДеревоОшибок.Значение=ДО;
	ЭлементыФормы.ДеревоОшибок.СоздатьКолонки();
	
	Таб.ЗакончитьГруппуСтрок();
	Таб.ТолькоПросмотр=Истина;
	Таб.ПоказатьУровеньГруппировокСтрок(Таб.КоличествоУровнейГруппировокСтрок()-1);
	Таб.Показать(); // вывод на экран
	
	ЭлементыФормы.Индикатор.Видимость=Ложь;
	ЭлементыФормы.ТОварИндюк.Видимость=Ложь;
	
	ЭлементыФормы.ХодРасценкиРегион.Видимость=Ложь;
	ЭлементыФормы.ХодРасценкиТОвар.Видимость=Ложь;
	
	ЭлементыФормы.ТП.ФиксацияСлева=3;
	ЭлементыФормы.ТП.Колонки.Топ100.Формат="БЛ=' '; БИ=V";
	ЭлементыФормы.ТП.Колонки.Топ1000.Формат="БЛ=' '; БИ=V";
	
	
КонецПроцедуры

Процедура ТПГТТОткрытие(Элемент, СтандартнаяОбработка)
КонецПроцедуры

Процедура КоманднаяПанель1СохранитьЦены(Кнопка)
	//СохранитьЦены в партии , серии;
	
	
	//==================<ВАЖНО>===================GtG====28.11.2007
	// в регистре цен хранятся цены на идеальные сферические единицы в вакууме, с коэфициентом=1
	//================================================GtG====КОНЕЦ==28.11.2007
	
	
	
	ЭФВО=ЭтаФорма.ВладелецФормы;
	
	//----------------------------< Очистка регистра цен перед записью новых значений >--------------------------------GtG---
	Движения=ЭФВО.Движения;
	Движения.Цены.Очистить(); 			 
	Движения.Цены.Записать();
	//----------------------------<  >--------------------------------GtG---
	
	
	Для Каждого Стр из ТП Цикл
		
		Если Стр.ЦенаРозн=0 Тогда
			ПРедупреждение("У товара "+Стр.ТОвар+" для региона "+Стр.регион+" не рассчиталась розничная цена!
			|Чтобы цены сохранились - они все должны быть рассчитаны!");
			Возврат;
		КонецЕсли;	
		
		
		ЗапРС=Движения.Цены.Добавить();
		
		ЗапРС.Активность=Истина;
		ЗапРС.АП=Стр.ТОвар;
		
		
		ЗапРС.РЕГИОН=Стр.РЕГИОН;
		//		ЗапРС.Документ=ЭтаФорма.ВладелецФормы.Ссылка;
		
		ЗапРС.Партия=Стр.Партия.Ссылка;
		ЗапРС.Период=ЭтаФорма.ВладелецФормы.Дата;
		ЗапРС.Регистратор=ЭтаФорма.ВладелецФормы.Ссылка;
//		ЗапРС.ЦенаОптГТТ=Стр.ЦенаОптовая/Стр.КоэффЕит;
		ЗапРС.ЦенаРознГТТ=Стр.ЦенаРозн/Стр.КоэффЕит;
	КонецЦикла; 
	
	Движения.Цены.Записать();
	
	предупреждение("ГОТОВО!",5);
	
	СтрИзм=ЭФВО.Изменения.Добавить();
	СтрИзм.Дата=ТекущаяДата();
	СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
	СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.Расценка;
	СтрИзм.КомментарийИзменения="Ошибок при расценке "+КоличествоОшибокРАсценки;
	
	Если типзнч(ЭФВО.ДокументОбъект)  = Тип ("ДокументОбъект.ПоступлениеТовара") ТОгда
		ЭФВО.ДокументОбъект.Дата=ТекущаяДАта();
		
		
		
		СтрИзм=ЭФВО.Изменения.Добавить();
		СтрИзм.Дата=ТекущаяДата();
		СтрИзм.Сотрудник=ПараметрыСеанса.ТекущийСотр;
		СтрИзм.ТипИзм=Перечисления.ДействияНадДокументами.ИзменениеДаты;
		СтрИзм.КомментарийИзменения="Фактически оприходован "+ЭФВО.ДокументОбъект.Дата;
		
		ЭФВО.ДокументОбъект.Записать();
		
		
	КонецЕсли; 	
		
	
	
КонецПроцедуры

Процедура ДеревоОшибокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если ТипЗнч(ВыбраннаяСтрока.Ошибки)<>Тип("Строка") ТОгда
		ВыбраннаяСтрока.Ошибки.ПолучитьФорму().Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура ПоТОваруНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	МассивТоваров=ЭтаФорма.ВладелецФормы.Товар.ВыгрузитьКолонку("Товар");
	Элемент.СписокВыбора.ЗагрузитьЗначения(МАссивТоваров);
КонецПроцедуры

Процедура ТПЦенаРознПриИзменении(Элемент)
	
	//Пересчет процентов наценки при изменении розничной цены вручную
	
	ТСР= ЭлементыФормы.ТП.ТекущаяСтрока;
	
	СтрТП=ЭлементыФормы.ТП.ТекущаяСтрока;
	
	//СтрТП.ЦенаОптовая=СтрТП.ЦенаРозн;// затычка
	СтрТП.НаценкаОтЗакупки =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп,СтрТП.ЦенаРозн);
	СтрТП.НаценкаОтЦГР =ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаГосРег,СтрТП.ЦенаРозн);
	СтрТП.НаценкаОтЗакупБезНДС= ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаЗакуп-ОМ3_НДСИзСуммыПоСтавке(СтрТП.ЦенаЗакуп,СтрТП.Партия.СтавкаНДС,2),СтрТП.ЦенаРозн);
	СтрТП.НаценкаОтЦПРБНДС=ОМ6_НаценкаОтЧегоЛибо (СтрТП.ЦенаПрБезНДС,СтрТП.ЦенаРозн);
	
КонецПроцедуры

Процедура КоманднаяПанель1Закрыть(Кнопка)
	ЭтаФорма.Закрыть();
КонецПроцедуры

Процедура КоманднаяПанель2ВыбратьВсеРЕг(Кнопка)
	ВыбРег.ЗаполнитьПометки(Истина);
КонецПроцедуры

Процедура КоманднаяПанель2неВыбратьВсеРег(Кнопка)
	ВыбРег.ЗаполнитьПометки(Ложь);

КонецПроцедуры

Процедура КоманднаяПанель2ОбратитьРЕГ(Кнопка)
	Для каждого Стр из ВыбРег Цикл
		Стр.Пометка=Не Стр.Пометка;
	КонецЦикла;	 
КонецПроцедуры



ЭлементыФормы.ХодРасценкиРегион.Видимость=Ложь;
ЭлементыФормы.ХодРасценкиТОвар.Видимость=Ложь;
	
Комментировать=Истина;
ВыводитьНеРасцененные=Истина;

ТХТ="ВЫБРАТЬ
	    |	Регионы.Ссылка как Рег
	    |ИЗ
	    |	Справочник.Регионы КАК Регионы
	    |ГДЕ
	    |	Регионы.ПометкаУдаления = Ложь";
	Запрос=Новый Запрос;
	Запрос.Текст=ТХТ;
	
	ВыбРег.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Рег"));
ВыбРег.ЗаполнитьПометки(Истина);

МинимальныйПроцентНаценкиКромеТопов=0;